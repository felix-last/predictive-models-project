*------------------------------------------------------------*
User:                Lukas Fahr
Date:                28. April 2016
Time:                21.10 Uhr
Site:                70107571
Platform:            X64_7PRO
Maintenance Release: 9.03.01M2P081512
EM Version:          12.1
* 
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "21.10 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Training Log
Date:                28. April 2016
Time:                21.10 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O1E0DKGD
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl21\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O1E0DKGD new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl21\EMLOG.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "21.10 Uhr" );
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                Lukas Fahr";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70107571";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_7PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.03.01M2P081512";
MPRINT(EM_DIAGRAM):   put "EM Version:          12.1";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl21\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _LOGIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl21\EMSCORE.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl21\EMREPORT.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl21\EMOUTPUT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "21.10 Uhr" );
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                Lukas Fahr";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl21\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl21\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl21\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_
'C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl21\EMRUNSTATUS.xml' encoding="UTF-8"
NOBOM;
(FREQ=(WHERE='ROLE = "FREQ"' DEFAULT='Y' RULE=(RULE1=(DESCRIPTION='USEATMOST1FREQ'
VALUES=(VALUE1='Y' )[95649] MAX=1 EXCEEDMAXVALUE='' )[95653] )[95647]
VALIDCHOICES=(CHOICE1='Y' )[95651] )[95935] INPUTREJECT=(WHERE='ROLE in("INPUT", "REJECTED")'
DEFAULT='D' VALIDCHOICES=(CHOICE1='D' )[95657]
RULE=(RULE1=(DESCRIPTION='USEATLEAST1INPUTREJECT' WHERE='(ROLE = "INPUT" and USE in("Y" "D"))
or (ROLE = "REJECTED" and USE = "Y")' MIN=. )[95661] )[95659] )[95655] TARGET=(WHERE='ROLE =
"TARGET"' DEFAULT='Y' VALIDCHOICES=(CHOICE1='Y' CHOICE2='N' )[95665]
RULE=(RULE1=(DESCRIPTION='METADATA.USE1TARGET' VALUES=(VALUE1='Y' )[95671] MIN=1 MAX=1
EXCEEDMAXVALUE='N' )[95669] )[95667] )[95663] )[95645]
163365     proc freq data=EMWS8.Ensmbl21_VariableSet noprint;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS8.Ensmbl21_VariableSet noprint;
163366     table ROLE*LEVEL/out=WORK.Ensmbl21META;
MPRINT(EM_DIAGRAM):   table ROLE*LEVEL/out=WORK.Ensmbl21META;
163367     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.ENSMBL21_VARIABLESET.
NOTE: The data set WORK.ENSMBL21META has 6 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
163368     proc print data=WORK.Ensmbl21META label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.Ensmbl21META label noobs;
163369     var ROLE LEVEL COUNT;
MPRINT(EM_DIAGRAM):   var ROLE LEVEL COUNT;
163370     label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL =
163370   ! "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT =
163370   ! "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label ROLE = "Role" LEVEL = "Measurement Level" COUNT = "Frequency
Count";
163371     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
163372     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Variable Summary";
MPRINT(EM_DIAGRAM):   run;
163373     run;
 
NOTE: There were 6 observations read from the data set WORK.ENSMBL21META.
NOTE: The PROCEDURE PRINT printed page 49.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
163374     title10;
MPRINT(EM_DIAGRAM):   title10;
163375     %let EMNORLEN = %DMNORLEN;
MPRINT(EM_DIAGRAM):
EMWS8.Neural34_TRAIN EMWS8.Neural34_TRAIN
EMWS8.Neural34_TRAIN EMWS8.Neural34_TRAIN EMWS8 Neural34_TRAIN
EMWS8.Neural34_TRAIN EMWS8.Neural34_TRAIN
EMWS8.Neural34_TRAIN EMWS8.Neural34_TRAIN EMWS8 Neural34_TRAIN
MPRINT(EM_DIAGRAM):    proc dmdb data=EMWS8.Neural34_TRAIN
classout=WORK._DMDBCLASSTARGET(keep=NAME NRAW CRAW LEVEL FREQUENCY NMISSPERCENT);
MPRINT(EM_DIAGRAM):   class DepVar(DESC) ;
MPRINT(EM_DIAGRAM):   run;
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _INIT >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _term >>
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set WORK._DMDBCLASSTARGET;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   if _N_=1 then call symput('_newevent', strip(LEVEL));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK._DMDBCLASSTARGET out=_TEMPCLASS(keep=LEVEL FREQUENCY
NMISSPERCENT rename=(LEVEL=DepVar));
MPRINT(EM_DIAGRAM):   by LEVEL;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _TEMPCLASS;
MPRINT(EM_DIAGRAM):   set _TEMPCLASS;
MPRINT(EM_DIAGRAM):   NMISSPERCENT= NMISSPERCENT/100;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.Neural34_DepVar_DD out=_sortedDecdata;
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   merge _TEMPCLASS(in=_a) _sortedDecdata(in=_b);
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   if (_a and ^_b) or (^_a and _b) then call symput('_emresetDec', '1');
MPRINT(EM_DIAGRAM):   run;
163404     data WORK.Ensmbl21_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS ORDER);
MPRINT(EM_DIAGRAM):    data WORK.Ensmbl21_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS
ORDER);
163405     length ORDER $20;
MPRINT(EM_DIAGRAM):   length ORDER $20;
163406     label VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel,  NOQUOTE))"
163406   ! EVENT = "%sysfunc(sasmsg(sashelp.dmine, assmt_event_vlabel, NOQUOTE))" NUMLEVELS =
163406   ! "%sysfunc(sasmsg(sashelp.dmine, rpt_numcat_vlabel, NOQUOTE))" LEVEL =
163407        "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" ORDER =
163407   ! "%sysfunc(sasmsg(sashelp.dmine, meta_order_vlabel, NOQUOTE))" LABEL =
163407   ! "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label VARIABLE = "Target" EVENT = "Event" NUMLEVELS = "Number of Levels"
LEVEL = "Measurement Level" ORDER = "Order" LABEL = "Label";
163408     set EMWS8.NEURAL34_DEPVAR_DM( where=(_TYPE_="TARGET"));
MPRINT(EM_DIAGRAM):   set EMWS8.NEURAL34_DEPVAR_DM( where=(_TYPE_="TARGET"));
163409     NumLevels=2;
MPRINT(EM_DIAGRAM):   NumLevels=2;
163410     select(upcase(ORDER));
MPRINT(EM_DIAGRAM):   select(upcase(ORDER));
163411     when('DESC') ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   when('DESC') ORDER = 'Descending';
163412     when('ASC') ORDER = 'Ascending';
MPRINT(EM_DIAGRAM):   when('ASC') ORDER = 'Ascending';
163413     when('FMTDESC') ORDER = 'Formatted Descending';
MPRINT(EM_DIAGRAM):   when('FMTDESC') ORDER = 'Formatted Descending';
163414     when('FMTASC') ORDER = 'Formatted Ascending';
MPRINT(EM_DIAGRAM):   when('FMTASC') ORDER = 'Formatted Ascending';
163415     otherwise ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   otherwise ORDER = 'Descending';
163416     end;
MPRINT(EM_DIAGRAM):   end;
163417     output;
MPRINT(EM_DIAGRAM):   output;
163418     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.NEURAL34_DEPVAR_DM.
      WHERE _TYPE_='TARGET';
NOTE: The data set WORK.ENSMBL21_EVENT has 1 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
163419     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
163420     proc print data=WORK.Ensmbl21_EVENT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=WORK.Ensmbl21_EVENT noobs label;
163421     var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
MPRINT(EM_DIAGRAM):   var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
163422     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
163423     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_modelEvent_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Model Events";
MPRINT(EM_DIAGRAM):   run;
163424     run;
 
NOTE: There were 1 observations read from the data set WORK.ENSMBL21_EVENT.
NOTE: The PROCEDURE PRINT printed page 50.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
163425     title10;
MPRINT(EM_DIAGRAM):   title10;
"No decisions defined for target "DepVar"."
163426     proc print data = EMWS8.Neural34_DepVar_DM noobs label;
MPRINT(EM_DIAGRAM):    proc print data = EMWS8.Neural34_DepVar_DM noobs label;
163427     var _type_ variable label;
MPRINT(EM_DIAGRAM):   var _type_ variable label;
163428     where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR', 'DECPRIOR');
MPRINT(EM_DIAGRAM):   where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR',
'DECPRIOR');
163429     label _TYPE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_type_vlabel,     NOQUOTE))"
163429   ! VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))" LABEL =
163429   ! "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Type" VARIABLE = "Variable" LABEL = "Label";
163430     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
163431     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_predDecVars_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Predicted and decision variables";
MPRINT(EM_DIAGRAM):   run;
163432     run;
 
NOTE: There were 7 observations read from the data set EMWS8.NEURAL34_DEPVAR_DM.
      WHERE _type_ not in ('DATAPRIOR', 'DECISION', 'DECPRIOR', 'MATRIX', 'TRAINPRIOR');
NOTE: The PROCEDURE PRINT printed page 51.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
163433     title10;
MPRINT(EM_DIAGRAM):   title10;
163434     %let groupid =;
163435     %let endGroupid =;
163436     data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
163437     set EMWS8.Neural34_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural34_EMINFO;
163438     where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
163438   ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
163439     if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
163440     else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
163441     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.NEURAL34_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
163442     %let groupid =;
163443     %let endGroupid =;
163444     data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
163445     set EMWS8.AutoNeural42_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural42_EMINFO;
163446     where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
163446   ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
163447     if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
163448     else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
163449     run;
MPRINT(EM_DIAGRAM):   run;
 
The SAS System
 
NOTE: There were 0 observations read from the data set EMWS8.AUTONEURAL42_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
163450     %let groupid =;
163451     %let endGroupid =;
163452     data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
163453     set EMWS8.AutoNeural46_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural46_EMINFO;
163454     where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
163454   ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
163455     if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
163456     else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
163457     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.AUTONEURAL46_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
163458     %let groupid =;
163459     %let endGroupid =;
163460     data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
163461     set EMWS8.Neural30_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural30_EMINFO;
163462     where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
163462   ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
163463     if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
163464     else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
163465     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.NEURAL30_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
163466     %let groupid =;
163467     %let endGroupid =;
163468     data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
163469     set EMWS8.AutoNeural47_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural47_EMINFO;
163470     where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
163470   ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
163471     if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
163472     else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
163473     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.AUTONEURAL47_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
163474     data WORK.Ensmbl21;
MPRINT(EM_DIAGRAM):    data WORK.Ensmbl21;
163475     length NodeId $32 Model $64;
MPRINT(EM_DIAGRAM):   length NodeId $32 Model $64;
163476     label Nodeid = "%sysfunc(sasmsg(sashelp.dmine, rpt_nodeId_vlabel,  NOQUOTE))" Model
163476   ! = "%sysfunc(sasmsg(sashelp.dmine, rpt_modeltype,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label Nodeid = "Node Id" Model = "rpt_modeltype";
163477     nodeid="NEURAL34";
MPRINT(EM_DIAGRAM):   nodeid="NEURAL34";
163478     model="Neural";
MPRINT(EM_DIAGRAM):   model="Neural";
163479     output;
MPRINT(EM_DIAGRAM):   output;
163480     nodeid="AUTONEURAL42";
MPRINT(EM_DIAGRAM):   nodeid="AUTONEURAL42";
163481     model="AutoNeural";
MPRINT(EM_DIAGRAM):   model="AutoNeural";
163482     output;
MPRINT(EM_DIAGRAM):   output;
163483     nodeid="AUTONEURAL46";
MPRINT(EM_DIAGRAM):   nodeid="AUTONEURAL46";
163484     model="AutoNeural";
MPRINT(EM_DIAGRAM):   model="AutoNeural";
163485     output;
MPRINT(EM_DIAGRAM):   output;
163486     nodeid="NEURAL30";
MPRINT(EM_DIAGRAM):   nodeid="NEURAL30";
163487     model="Neural";
MPRINT(EM_DIAGRAM):   model="Neural";
163488     output;
MPRINT(EM_DIAGRAM):   output;
163489     nodeid="AUTONEURAL47";
MPRINT(EM_DIAGRAM):   nodeid="AUTONEURAL47";
163490     model="AutoNeural";
MPRINT(EM_DIAGRAM):   model="AutoNeural";
163491     output;
MPRINT(EM_DIAGRAM):   output;
163492     ;
MPRINT(EM_DIAGRAM):   ;
163493     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK.ENSMBL21 has 5 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
163494     title;
MPRINT(EM_DIAGRAM):   title;
163495     proc print data=WORK.Ensmbl21 label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.Ensmbl21 label noobs;
163496     title9 "%sysfunc(sasmsg(sashelp.dmine, rpt_combinemodels_title,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   title9 "Imported Models to be Combined";
163497     title10 "Probability Function: Average";
MPRINT(EM_DIAGRAM):   title10 "Probability Function: Average";
MPRINT(EM_DIAGRAM):   run;
163498     run;
 
NOTE: There were 5 observations read from the data set WORK.ENSMBL21.
NOTE: The PROCEDURE PRINT printed page 52.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
163499     title9;
MPRINT(EM_DIAGRAM):   title9;
163500     title10;
MPRINT(EM_DIAGRAM):   title10;
163501     data WORK.M3493KS6;
MPRINT(EM_DIAGRAM):    data WORK.M3493KS6;
163502     set WORK.M3493KS6;
MPRINT(EM_DIAGRAM):   set WORK.M3493KS6;
163503     where NAME = "DepVar";
MPRINT(EM_DIAGRAM):   where NAME = "DepVar";
163504     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.M3493KS6.
      WHERE NAME='DepVar';
NOTE: The data set WORK.M3493KS6 has 1 observations and 22 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
163505     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
163506     * EM: DMDBClass Macro ;
MPRINT(EM_DIAGRAM):   * EM: DMDBClass Macro ;
163507     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
163508     %macro DMDBClass;
163509         DepVar(DESC)
163510     %mend DMDBClass;
163511     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
163512     * EM: DMDBVar Macro ;
MPRINT(EM_DIAGRAM):   * EM: DMDBVar Macro ;
163513     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
163514     %macro DMDBVar;
163515
163516     %mend DMDBVar;
163517     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
163518     * EM: Create DMDB;
MPRINT(EM_DIAGRAM):   * EM: Create DMDB;
163519     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
163520     proc dmdb batch data=EMWS8.Neural34_TRAIN
163521     dmdbcat=WORK.EM_DMDB
163522     maxlevel = 513
163523     ;
MPRINT(EM_DIAGRAM):   proc dmdb batch data=EMWS8.Neural34_TRAIN dmdbcat=WORK.EM_DMDB maxlevel
= 513 ;
MPRINT(EM_DIAGRAM):   class
163524     class %DMDBClass;
MPRINT(DMDBCLASS):   DepVar(DESC)
MPRINT(EM_DIAGRAM):  ;
163525     target
163526     DepVar
163527     ;
MPRINT(EM_DIAGRAM):   target DepVar ;
163528     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Records processed = 2374   Memory used = 511K.
NOTE: There were 2374 observations read from the data set EMWS8.PART_TRAIN.
NOTE: View EMWS8.NEURAL34_TRAIN.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
NOTE: There were 2374 observations read from the data set EMWS8.META2_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.NEURAL34_TRAIN.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *--- end code ---*;
163529     quit;
163530     *--- end code ---*;
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "21.10 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                28. April 2016
Time:                21.10 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O0KKY057
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl21\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O0KKY057 new;
MPRINT(EM_DIAGRAM):   run;
163632     filename emflow
163632   ! "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl21\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl21\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl21: Scoring NEURAL34_TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
163633     *------------------------------------------------------------*;
163634     * Ensmbl21: Scoring NEURAL34_TRAIN data;
163635     *------------------------------------------------------------*;
163636     data EMWS8.Ensmbl21_TRAIN
163637     / view=EMWS8.Ensmbl21_TRAIN
163638     ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl21_TRAIN / view=EMWS8.Ensmbl21_TRAIN ;
163639     set EMWS8.Neural34_TRAIN
163640     ;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural34_TRAIN ;
163641     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file
      C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl21\EMFLOWSCORE.sas.
163642    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
163643    +* Ensmbl21: Combine model for DepVar;
MPRINT(EM_DIAGRAM):   * Ensmbl21: Combine model for DepVar;
163644    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
163645    +* Ensmbl21: Scoring Code of model 1 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl21: Scoring Code of model 1 of 5;
163646    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
163647    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
163648    +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
163649    +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
163650    +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
163651    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
163652    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
163653    +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
163654    +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
163655    +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
163656    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
163657    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
163658    +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
163659    +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
163660    +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
163661    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
163662    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
163663    +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
163664    +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
163665    +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
163666    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
163667    +
163668    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
163669    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
163669   !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
163670    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
163671    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
163672    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
163673    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
163674    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
163675    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
163676    +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
163677    +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
163678    +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
163679    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
163680    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
163681    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
163682    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
163683    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
163684    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
163685    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
163686    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
163687    +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
163688    +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
163689    +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
163690    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
163691    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
163692    +* TOOL: Metadata Node;
MPRINT(EM_DIAGRAM):   * TOOL: Metadata Node;
163693    +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
163694    +* NODE: Meta2;
MPRINT(EM_DIAGRAM):   * NODE: Meta2;
163695    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
163696    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
163697    +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
163698    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
163699    +* NODE: Neural34;
MPRINT(EM_DIAGRAM):   * NODE: Neural34;
163700    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
163701    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
163702    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
163703    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
163704    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
163705    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
163706    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
163707    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
163708    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
163709    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
163710    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
163711    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
163712    +LENGTH _WARN_ $4
163713    +      F_DepVar  $ 12
163714    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
163715    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
163716    +
163717    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
163718    +
163719    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
163720    +
163721    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
163722    +
163723    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
163724    +
163725    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
163726    +
163727    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
163728    +
163729    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
163730    +
163731    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
163732    +
163733    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
163734    +
163735    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
163736    +
163737    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
163738    +
163739    +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
163740    +
163741    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
163742    +
163743    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
163744    +
163745    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
163746    +
163747    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
163748    +
163749    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
163750    +
163751    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
163752    +
163753    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
163754    +
163755    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
163756    +
163757    +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
163758    +
163759    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
163760    +
163761    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
163762    +
163763    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
163764    +
163765    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
163766    +
163767    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
163768    +
163769    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
163770    +
163771    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
163772    +
163773    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
163774    +
163775    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
163776    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
163777    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
163778    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
163779    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
163780    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
163781    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
163782    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
163783    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
163784    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
163785    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
163786    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
163787    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
163788    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
163789    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
163790    +end;
MPRINT(EM_DIAGRAM):   end;
163791    +else do;
MPRINT(EM_DIAGRAM):   else do;
163792    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
163793    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
163794    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
163795    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
163796    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
163797    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
163798    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
163799    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
163800    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
163801    +         end;
MPRINT(EM_DIAGRAM):   end;
163802    +         else do;
MPRINT(EM_DIAGRAM):   else do;
163803    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
163804    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
163805    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
163806    +            end;
MPRINT(EM_DIAGRAM):   end;
163807    +         end;
MPRINT(EM_DIAGRAM):   end;
163808    +      end;
MPRINT(EM_DIAGRAM):   end;
163809    +      else do;
MPRINT(EM_DIAGRAM):   else do;
163810    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
163811    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
163812    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
163813    +         end;
MPRINT(EM_DIAGRAM):   end;
163814    +      end;
MPRINT(EM_DIAGRAM):   end;
163815    +   end;
MPRINT(EM_DIAGRAM):   end;
163816    +   else do;
MPRINT(EM_DIAGRAM):   else do;
163817    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
163818    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
163819    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
163820    +      end;
MPRINT(EM_DIAGRAM):   end;
163821    +      else do;
MPRINT(EM_DIAGRAM):   else do;
163822    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
163823    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
163824    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
163825    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
163826    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
163827    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
163828    +         end;
MPRINT(EM_DIAGRAM):   end;
163829    +      end;
MPRINT(EM_DIAGRAM):   end;
163830    +   end;
MPRINT(EM_DIAGRAM):   end;
163831    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
163832    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
163833    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
163834    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
163835    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
163836    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
163837    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
163838    +   end;
MPRINT(EM_DIAGRAM):   end;
163839    +end;
MPRINT(EM_DIAGRAM):   end;
163840    +
163841    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
163842    +*** Checking missing input Interval
163843    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
163844    +
163845    +IF NMISS(
163846    +   AcceptedCmpTotal ,
163847    +   Frq ,
163848    +   Income ,
163849    +   Mnt ,
163850    +   MntGoldProds ,
163851    +   MntMeatProducts ,
163852    +   NumCatalogPurchases ,
163853    +   NumDealsPurchases ,
163854    +   NumWebVisitsMonth ,
163855    +   RFMstat ,
163856    +   Recency ,
163857    +   Teenhome ,
163858    +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntGoldProds ,
MntMeatProducts , NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , RFMstat ,
Recency , Teenhome , Year_Birth ) THEN DO;
163859    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
163860    +
163861    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
163862    +END;
MPRINT(EM_DIAGRAM):   END;
163863    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
163864    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
163865    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
163866    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
163867    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
163868    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
163869    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
163870    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
163871    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
163872    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
163873    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
163874    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
163875    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
163876    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
163877    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
163878    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
163879    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
163880    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
163881    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
163882    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
163883    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
163884    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
163885    +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
163886    +END;
MPRINT(EM_DIAGRAM):   END;
163887    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
163888    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
163889    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
163890    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
163891    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
163892    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
163893    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
163894    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
163895    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
163896    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
163897    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
163898    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
163899    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
163900    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
163901    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
163902    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
163903    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
163904    +   ELSE S_NumCatalogPurchases
163905    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
163906    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
163907    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
163908    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
163909    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
163910    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
163911    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
163912    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
163913    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
163914    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
163915    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
163916    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
163917    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
163918    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
163919    +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
163920    +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
163921    +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
163922    +END;
MPRINT(EM_DIAGRAM):   END;
163923    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
163924    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
163925    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
163926    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
163927    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
163928    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
163929    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
163930    +   H11  =     0.39113138187571 * S_AcceptedCmpTotal  +    -0.61540725344485 *
163931    +        S_Frq  +    -0.39640720965637 * S_Income  +    -0.29779259024925 *
163932    +        S_Mnt  +     0.09159537668687 * S_MntGoldProds
163933    +          +     0.66968861823847 * S_MntMeatProducts
163934    +          +     0.43410284729103 * S_NumCatalogPurchases
163935    +          +     0.38169769247512 * S_NumDealsPurchases
163936    +          +     0.42568124883788 * S_NumWebVisitsMonth
163937    +          +       0.117680996215 * S_RFMstat  +    -0.81755740196945 *
163938    +        S_Recency  +     0.34714100236873 * S_Teenhome
163939    +          +     0.39595885220917 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H11 = 0.39113138187571 * S_AcceptedCmpTotal + -0.61540725344485 * S_Frq
+ -0.39640720965637 * S_Income + -0.29779259024925 * S_Mnt + 0.09159537668687 * S_MntGoldProds
+ 0.66968861823847 * S_MntMeatProducts + 0.43410284729103 * S_NumCatalogPurchases +
0.38169769247512 * S_NumDealsPurchases + 0.42568124883788 * S_NumWebVisitsMonth +
0.117680996215 * S_RFMstat + -0.81755740196945 * S_Recency + 0.34714100236873 * S_Teenhome +
0.39595885220917 * S_Year_Birth ;
163940    +   H12  =    -0.17603311184545 * S_AcceptedCmpTotal  +    -1.87448667460975 *
163941    +        S_Frq  +    -0.13770783826558 * S_Income  +    -0.07794509574546 *
163942    +        S_Mnt  +     -0.0367231623133 * S_MntGoldProds
163943    +          +     0.43468157063779 * S_MntMeatProducts
163944    +          +     1.22287851495207 * S_NumCatalogPurchases
163945    +          +     1.34810668047823 * S_NumDealsPurchases
163946    +          +     0.29744386797792 * S_NumWebVisitsMonth
163947    +          +     0.24598010228595 * S_RFMstat  +     0.45054459604149 *
163948    +        S_Recency  +    -0.31884355104334 * S_Teenhome
163949    +          +    -0.49374494273323 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H12 = -0.17603311184545 * S_AcceptedCmpTotal + -1.87448667460975 * S_Frq
+ -0.13770783826558 * S_Income + -0.07794509574546 * S_Mnt + -0.0367231623133 * S_MntGoldProds
+ 0.43468157063779 * S_MntMeatProducts + 1.22287851495207 * S_NumCatalogPurchases +
1.34810668047823 * S_NumDealsPurchases + 0.29744386797792 * S_NumWebVisitsMonth +
0.24598010228595 * S_RFMstat + 0.45054459604149 * S_Recency + -0.31884355104334 * S_Teenhome +
-0.49374494273323 * S_Year_Birth ;
163950    +   H13  =    -0.35894234681627 * S_AcceptedCmpTotal  +     2.22535530920485 *
163951    +        S_Frq  +    -0.60759993740885 * S_Income  +    -0.19127405324439 *
163952    +        S_Mnt  +     0.13903548885363 * S_MntGoldProds
163953    +          +    -3.08800901663199 * S_MntMeatProducts
163954    +          +    -1.19043292478827 * S_NumCatalogPurchases
163955    +          +    -0.37179794210537 * S_NumDealsPurchases
163956    +          +     0.03624847445355 * S_NumWebVisitsMonth
163957    +          +    -0.62521514183331 * S_RFMstat  +     0.01074839631068 *
163958    +        S_Recency  +     0.08240530440608 * S_Teenhome
163959    +          +    -0.04154769345168 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H13 = -0.35894234681627 * S_AcceptedCmpTotal + 2.22535530920485 * S_Frq
+ -0.60759993740885 * S_Income + -0.19127405324439 * S_Mnt + 0.13903548885363 * S_MntGoldProds
+ -3.08800901663199 * S_MntMeatProducts + -1.19043292478827 * S_NumCatalogPurchases +
-0.37179794210537 * S_NumDealsPurchases + 0.03624847445355 * S_NumWebVisitsMonth +
-0.62521514183331 * S_RFMstat + 0.01074839631068 * S_Recency + 0.08240530440608 * S_Teenhome +
-0.04154769345168 * S_Year_Birth ;
163960    +   H14  =     0.72612390853906 * S_AcceptedCmpTotal  +    -1.03331426863575 *
163961    +        S_Frq  +     0.44630396705527 * S_Income  +    -1.29648064151656 *
163962    +        S_Mnt  +     0.20190465471738 * S_MntGoldProds
163963    +          +     0.78481425439956 * S_MntMeatProducts
163964    +          +      0.6107688367092 * S_NumCatalogPurchases
163965    +          +    -0.39308332306764 * S_NumDealsPurchases
163966    +          +     1.13986700740733 * S_NumWebVisitsMonth
163967    +          +    -0.10095149614189 * S_RFMstat  +    -1.23708147180809 *
163968    +        S_Recency  +    -0.40344648497219 * S_Teenhome
163969    +          +    -0.21455944295735 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H14 = 0.72612390853906 * S_AcceptedCmpTotal + -1.03331426863575 * S_Frq
+ 0.44630396705527 * S_Income + -1.29648064151656 * S_Mnt + 0.20190465471738 * S_MntGoldProds
+ 0.78481425439956 * S_MntMeatProducts + 0.6107688367092 * S_NumCatalogPurchases +
-0.39308332306764 * S_NumDealsPurchases + 1.13986700740733 * S_NumWebVisitsMonth +
-0.10095149614189 * S_RFMstat + -1.23708147180809 * S_Recency + -0.40344648497219 * S_Teenhome
+ -0.21455944295735 * S_Year_Birth ;
163970    +   H15  =    -0.52000103453301 * S_AcceptedCmpTotal  +    -0.14144790393123 *
163971    +        S_Frq  +    -0.47209445285116 * S_Income  +     0.51267592710475 *
163972    +        S_Mnt  +     0.07876708495313 * S_MntGoldProds
163973    +          +    -0.61914125284805 * S_MntMeatProducts
163974    +          +    -0.54746366292992 * S_NumCatalogPurchases
163975    +          +     0.25925395549236 * S_NumDealsPurchases
163976    +          +    -0.60979686139101 * S_NumWebVisitsMonth
163977    +          +     0.08166171339337 * S_RFMstat  +     0.96981534293427 *
163978    +        S_Recency  +     0.36245179070453 * S_Teenhome
163979    +          +    -0.09267442906112 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H15 = -0.52000103453301 * S_AcceptedCmpTotal + -0.14144790393123 * S_Frq
+ -0.47209445285116 * S_Income + 0.51267592710475 * S_Mnt + 0.07876708495313 * S_MntGoldProds
+ -0.61914125284805 * S_MntMeatProducts + -0.54746366292992 * S_NumCatalogPurchases +
0.25925395549236 * S_NumDealsPurchases + -0.60979686139101 * S_NumWebVisitsMonth +
0.08166171339337 * S_RFMstat + 0.96981534293427 * S_Recency + 0.36245179070453 * S_Teenhome +
-0.09267442906112 * S_Year_Birth ;
163980    +   H11  = H11  +     0.01565392034595 * Marital_StatusDivorced
163981    +          +     0.22493072364483 * Marital_StatusMarried
163982    +          +    -0.34177799020181 * Marital_StatusSingle
163983    +          +    -0.04779249269081 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.01565392034595 * Marital_StatusDivorced + 0.22493072364483
* Marital_StatusMarried + -0.34177799020181 * Marital_StatusSingle + -0.04779249269081 *
Marital_StatusTogether ;
163984    +   H12  = H12  +     0.58482172427767 * Marital_StatusDivorced
163985    +          +     0.05031503177659 * Marital_StatusMarried
163986    +          +     0.28039335778718 * Marital_StatusSingle
163987    +          +     0.00709736205513 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.58482172427767 * Marital_StatusDivorced + 0.05031503177659
* Marital_StatusMarried + 0.28039335778718 * Marital_StatusSingle + 0.00709736205513 *
Marital_StatusTogether ;
163988    +   H13  = H13  +     0.35081594367456 * Marital_StatusDivorced
163989    +          +    -0.24395984745809 * Marital_StatusMarried
163990    +          +     0.22708224780413 * Marital_StatusSingle
163991    +          +    -0.34334833500124 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.35081594367456 * Marital_StatusDivorced +
-0.24395984745809 * Marital_StatusMarried + 0.22708224780413 * Marital_StatusSingle +
-0.34334833500124 * Marital_StatusTogether ;
163992    +   H14  = H14  +     0.85482961039457 * Marital_StatusDivorced
163993    +          +    -1.06411172500365 * Marital_StatusMarried
163994    +          +     0.57554615813234 * Marital_StatusSingle
163995    +          +    -0.91141797290702 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.85482961039457 * Marital_StatusDivorced +
-1.06411172500365 * Marital_StatusMarried + 0.57554615813234 * Marital_StatusSingle +
-0.91141797290702 * Marital_StatusTogether ;
163996    +   H15  = H15  +      0.2197825206844 * Marital_StatusDivorced
163997    +          +     0.66663600919341 * Marital_StatusMarried
163998    +          +    -0.69696969089357 * Marital_StatusSingle
163999    +          +     0.48232861459141 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.2197825206844 * Marital_StatusDivorced + 0.66663600919341
* Marital_StatusMarried + -0.69696969089357 * Marital_StatusSingle + 0.48232861459141 *
Marital_StatusTogether ;
164000    +   H11  =    -1.58463812409211 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.58463812409211 + H11 ;
164001    +   H12  =    -0.59413927784841 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.59413927784841 + H12 ;
164002    +   H13  =    -1.40790569062078 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -1.40790569062078 + H13 ;
164003    +   H14  =     -0.2073181654495 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -0.2073181654495 + H14 ;
164004    +   H15  =     1.99108524971007 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 1.99108524971007 + H15 ;
164005    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
164006    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
164007    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
164008    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
164009    +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
164010    +END;
MPRINT(EM_DIAGRAM):   END;
164011    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
164012    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
164013    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
164014    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
164015    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
164016    +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
164017    +END;
MPRINT(EM_DIAGRAM):   END;
164018    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
164019    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
164020    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
164021    +
164022    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
164023    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
164024    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
164025    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
164026    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
164027    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
164028    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
164029    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
164030    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
164031    +end;
MPRINT(EM_DIAGRAM):   end;
164032    +else do;
MPRINT(EM_DIAGRAM):   else do;
164033    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
164034    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
164035    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
164036    +   end;
MPRINT(EM_DIAGRAM):   end;
164037    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
164038    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
164039    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
164040    +   end;
MPRINT(EM_DIAGRAM):   end;
164041    +   else do;
MPRINT(EM_DIAGRAM):   else do;
164042    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
164043    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
164044    +   end;
MPRINT(EM_DIAGRAM):   end;
164045    +end;
MPRINT(EM_DIAGRAM):   end;
164046    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
164047    +   P_DepVar1  =     3.73071630847853 * H11  +     2.94025483165613 * H12
164048    +          +    -3.96191932636925 * H13  +     3.36339025105162 * H14
164049    +          +    -4.82596427081675 * H15 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 3.73071630847853 * H11 + 2.94025483165613 * H12 +
-3.96191932636925 * H13 + 3.36339025105162 * H14 + -4.82596427081675 * H15 ;
164050    +   P_DepVar1  =     0.43428060622858 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.43428060622858 + P_DepVar1 ;
164051    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
164052    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
164053    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
164054    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
164055    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
164056    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
164057    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
164058    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
164059    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
164060    +END;
MPRINT(EM_DIAGRAM):   END;
164061    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
164062    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
164063    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
164064    +END;
MPRINT(EM_DIAGRAM):   END;
164065    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
164066    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
164067    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
164068    +END;
MPRINT(EM_DIAGRAM):   END;
164069    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
164070    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
164071    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
164072    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
164073    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
164074    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
164075    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
164076    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
164077    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
164078    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
164079    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
164080    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
164081    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
164082    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
164083    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
164084    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
164085    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
164086    +END;
MPRINT(EM_DIAGRAM):   END;
164087    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
164088    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
164089    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
164090    +drop
164091    +H11
164092    +H12
164093    +H13
164094    +H14
164095    +H15
164096    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 ;
164097    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
164098    +* Renaming variables for Neural34;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural34;
164099    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
164100    +* Renaming Posterior variables for Neural34;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural34;
164101    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
164102    +drop Neural34_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural34_P_DepVar1;
164103    +Neural34_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural34_P_DepVar1 = P_DepVar1;
164104    +drop Neural34_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural34_P_DepVar0;
164105    +Neural34_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural34_P_DepVar0 = P_DepVar0;
164106    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
164107    +* Renaming _WARN_ variable for Neural34;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural34;
164108    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
164109    +length Neural34_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural34_WARN_ $4;
164110    +drop Neural34_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural34_WARN_;
164111    +Neural34_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural34_WARN_ = _WARN_;
164112    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
164113    +* Ensmbl21: Scoring Code of model 2 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl21: Scoring Code of model 2 of 5;
164114    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
164115    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
164116    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
164117    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
164118    +* NODE: AutoNeural42;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural42;
164119    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
164120    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
164121    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
164122    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
164123    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
164124    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
164125    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
164126    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
164127    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
164128    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
164129    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
164130    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
164131    +LENGTH _WARN_ $4
164132    +      F_DepVar  $ 12
164133    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
164134    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
164135    +
164136    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
164137    +
164138    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
164139    +
164140    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
164141    +
164142    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
164143    +
164144    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
164145    +
164146    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
164147    +
164148    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
164149    +
164150    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
164151    +
164152    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
164153    +
164154    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
164155    +
164156    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
164157    +
164158    +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
164159    +
164160    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
164161    +
164162    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
164163    +
164164    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
164165    +
164166    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
164167    +
164168    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
164169    +
164170    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
164171    +
164172    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
164173    +
164174    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
164175    +
164176    +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
164177    +
164178    +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
164179    +
164180    +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
164181    +
164182    +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
164183    +
164184    +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
164185    +
164186    +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
164187    +
164188    +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
164189    +
164190    +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
164191    +
164192    +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
164193    +
164194    +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
164195    +
164196    +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
164197    +
164198    +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
164199    +
164200    +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
164201    +
164202    +      label H2x1_6 = 'Hidden: H2x1_=6' ;
MPRINT(EM_DIAGRAM):   label H2x1_6 = 'Hidden: H2x1_=6' ;
164203    +
164204    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
164205    +
164206    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
164207    +
164208    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
164209    +
164210    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
164211    +
164212    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
164213    +
164214    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
164215    +
164216    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
164217    +
164218    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
164219    +
164220    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
164221    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
164222    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
164223    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
164224    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
164225    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
164226    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
164227    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
164228    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
164229    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
164230    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
164231    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
164232    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
164233    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
164234    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
164235    +end;
MPRINT(EM_DIAGRAM):   end;
164236    +else do;
MPRINT(EM_DIAGRAM):   else do;
164237    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
164238    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
164239    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
164240    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
164241    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
164242    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
164243    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
164244    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
164245    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
164246    +         end;
MPRINT(EM_DIAGRAM):   end;
164247    +         else do;
MPRINT(EM_DIAGRAM):   else do;
164248    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
164249    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
164250    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
164251    +            end;
MPRINT(EM_DIAGRAM):   end;
164252    +         end;
MPRINT(EM_DIAGRAM):   end;
164253    +      end;
MPRINT(EM_DIAGRAM):   end;
164254    +      else do;
MPRINT(EM_DIAGRAM):   else do;
164255    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
164256    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
164257    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
164258    +         end;
MPRINT(EM_DIAGRAM):   end;
164259    +      end;
MPRINT(EM_DIAGRAM):   end;
164260    +   end;
MPRINT(EM_DIAGRAM):   end;
164261    +   else do;
MPRINT(EM_DIAGRAM):   else do;
164262    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
164263    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
164264    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
164265    +      end;
MPRINT(EM_DIAGRAM):   end;
164266    +      else do;
MPRINT(EM_DIAGRAM):   else do;
164267    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
164268    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
164269    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
164270    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
164271    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
164272    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
164273    +         end;
MPRINT(EM_DIAGRAM):   end;
164274    +      end;
MPRINT(EM_DIAGRAM):   end;
164275    +   end;
MPRINT(EM_DIAGRAM):   end;
164276    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
164277    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
164278    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
164279    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
164280    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
164281    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
164282    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
164283    +   end;
MPRINT(EM_DIAGRAM):   end;
164284    +end;
MPRINT(EM_DIAGRAM):   end;
164285    +
164286    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
164287    +*** Checking missing input Interval
164288    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
164289    +
164290    +IF NMISS(
164291    +   AcceptedCmpTotal ,
164292    +   Frq ,
164293    +   Income ,
164294    +   Mnt ,
164295    +   MntGoldProds ,
164296    +   MntMeatProducts ,
164297    +   NumCatalogPurchases ,
164298    +   NumDealsPurchases ,
164299    +   NumWebVisitsMonth ,
164300    +   RFMstat ,
164301    +   Recency ,
164302    +   Teenhome ,
164303    +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntGoldProds ,
MntMeatProducts , NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , RFMstat ,
Recency , Teenhome , Year_Birth ) THEN DO;
164304    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
164305    +
164306    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
164307    +END;
MPRINT(EM_DIAGRAM):   END;
164308    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
164309    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
164310    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
164311    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
164312    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
164313    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
164314    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
164315    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
164316    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
164317    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
164318    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
164319    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
164320    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
164321    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
164322    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
164323    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
164324    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
164325    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
164326    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
164327    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
164328    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
164329    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
164330    +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
164331    +END;
MPRINT(EM_DIAGRAM):   END;
164332    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
164333    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
164334    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
164335    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
164336    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
164337    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
164338    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
164339    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
164340    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
164341    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
164342    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
164343    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
164344    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
164345    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
164346    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
164347    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
164348    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
164349    +   ELSE S_NumCatalogPurchases
164350    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
164351    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
164352    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
164353    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
164354    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
164355    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
164356    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
164357    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
164358    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
164359    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
164360    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
164361    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
164362    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
164363    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
164364    +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
164365    +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
164366    +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
164367    +END;
MPRINT(EM_DIAGRAM):   END;
164368    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
164369    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
164370    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
164371    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
164372    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
164373    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
164374    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
164375    +   H1x1_1  =    -3.92905088817122 * S_AcceptedCmpTotal
164376    +          +    -4.76567955922662 * S_Frq  +    -3.20305851407308 * S_Income
164377    +          +     10.4290156082038 * S_Mnt  +     2.82139196372317 *
164378    +        S_MntGoldProds  +    -4.54749029525518 * S_MntMeatProducts
164379    +          +    -12.1201262560598 * S_NumCatalogPurchases
164380    +          +    -7.64265449386917 * S_NumDealsPurchases
164381    +          +     -0.8154661733691 * S_NumWebVisitsMonth
164382    +          +    -7.34275682075933 * S_RFMstat  +     3.14025498790893 *
164383    +        S_Recency  +     3.79010135100643 * S_Teenhome
164384    +          +    -1.18831354068466 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -3.92905088817122 * S_AcceptedCmpTotal + -4.76567955922662 *
S_Frq + -3.20305851407308 * S_Income + 10.4290156082038 * S_Mnt + 2.82139196372317 *
S_MntGoldProds + -4.54749029525518 * S_MntMeatProducts + -12.1201262560598 *
S_NumCatalogPurchases + -7.64265449386917 * S_NumDealsPurchases + -0.8154661733691 *
S_NumWebVisitsMonth + -7.34275682075933 * S_RFMstat + 3.14025498790893 * S_Recency +
3.79010135100643 * S_Teenhome + -1.18831354068466 * S_Year_Birth ;
164385    +   H1x1_2  =    -4.72019183577823 * S_AcceptedCmpTotal
164386    +          +     5.14902294151494 * S_Frq  +     -2.7967028726716 * S_Income
164387    +          +     7.90170532262596 * S_Mnt  +    -0.27896242131344 *
164388    +        S_MntGoldProds  +    -6.13177486713562 * S_MntMeatProducts
164389    +          +    -5.64377068696071 * S_NumCatalogPurchases
164390    +          +       1.315880732417 * S_NumDealsPurchases
164391    +          +    -7.12689902819995 * S_NumWebVisitsMonth
164392    +          +     -0.1333171344564 * S_RFMstat  +     8.57178329047956 *
164393    +        S_Recency  +     2.42655161118896 * S_Teenhome
164394    +          +     0.41845495922131 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -4.72019183577823 * S_AcceptedCmpTotal + 5.14902294151494 *
S_Frq + -2.7967028726716 * S_Income + 7.90170532262596 * S_Mnt + -0.27896242131344 *
S_MntGoldProds + -6.13177486713562 * S_MntMeatProducts + -5.64377068696071 *
S_NumCatalogPurchases + 1.315880732417 * S_NumDealsPurchases + -7.12689902819995 *
S_NumWebVisitsMonth + -0.1333171344564 * S_RFMstat + 8.57178329047956 * S_Recency +
2.42655161118896 * S_Teenhome + 0.41845495922131 * S_Year_Birth ;
164395    +   H1x1_3  =    -3.47660178529996 * S_AcceptedCmpTotal
164396    +          +     6.36750571377116 * S_Frq  +    -3.65638554203354 * S_Income
164397    +          +     5.03085244876136 * S_Mnt  +    -1.53184712146016 *
164398    +        S_MntGoldProds  +    -11.4803326240536 * S_MntMeatProducts
164399    +          +    -7.71653347900468 * S_NumCatalogPurchases
164400    +          +    -2.29382480020793 * S_NumDealsPurchases
164401    +          +    -3.92350308032578 * S_NumWebVisitsMonth
164402    +          +      0.1666173174602 * S_RFMstat  +      5.5545699438819 *
164403    +        S_Recency  +     1.88830044274756 * S_Teenhome
164404    +          +     0.36177301880441 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -3.47660178529996 * S_AcceptedCmpTotal + 6.36750571377116 *
S_Frq + -3.65638554203354 * S_Income + 5.03085244876136 * S_Mnt + -1.53184712146016 *
S_MntGoldProds + -11.4803326240536 * S_MntMeatProducts + -7.71653347900468 *
S_NumCatalogPurchases + -2.29382480020793 * S_NumDealsPurchases + -3.92350308032578 *
S_NumWebVisitsMonth + 0.1666173174602 * S_RFMstat + 5.5545699438819 * S_Recency +
1.88830044274756 * S_Teenhome + 0.36177301880441 * S_Year_Birth ;
164405    +   H1x1_4  =     3.46597508500309 * S_AcceptedCmpTotal
164406    +          +    -3.55913679518365 * S_Frq  +     -3.8279864380535 * S_Income
164407    +          +     4.37031319397754 * S_Mnt  +     0.25558899887189 *
164408    +        S_MntGoldProds  +     1.30937005137526 * S_MntMeatProducts
164409    +          +     0.50178849511862 * S_NumCatalogPurchases
164410    +          +     3.33915340676542 * S_NumDealsPurchases
164411    +          +     2.99171363234904 * S_NumWebVisitsMonth
164412    +          +    -1.10860117011224 * S_RFMstat  +     -5.2144291963152 *
164413    +        S_Recency  +     1.84778865722952 * S_Teenhome
164414    +          +     1.48264084751626 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 3.46597508500309 * S_AcceptedCmpTotal + -3.55913679518365 *
S_Frq + -3.8279864380535 * S_Income + 4.37031319397754 * S_Mnt + 0.25558899887189 *
S_MntGoldProds + 1.30937005137526 * S_MntMeatProducts + 0.50178849511862 *
S_NumCatalogPurchases + 3.33915340676542 * S_NumDealsPurchases + 2.99171363234904 *
S_NumWebVisitsMonth + -1.10860117011224 * S_RFMstat + -5.2144291963152 * S_Recency +
1.84778865722952 * S_Teenhome + 1.48264084751626 * S_Year_Birth ;
164415    +   H1x1_5  =    -3.28077802512331 * S_AcceptedCmpTotal
164416    +          +     3.26112701694144 * S_Frq  +    -3.51257256391539 * S_Income
164417    +          +     -13.277904245629 * S_Mnt  +    -0.08185099069039 *
164418    +        S_MntGoldProds  +      2.6349809613264 * S_MntMeatProducts
164419    +          +    -5.23430097842472 * S_NumCatalogPurchases
164420    +          +    -1.25644862473488 * S_NumDealsPurchases
164421    +          +     -3.0943337340276 * S_NumWebVisitsMonth
164422    +          +     0.96429102250453 * S_RFMstat  +     4.60373013139143 *
164423    +        S_Recency  +     1.52557456336148 * S_Teenhome
164424    +          +     0.00287578113165 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -3.28077802512331 * S_AcceptedCmpTotal + 3.26112701694144 *
S_Frq + -3.51257256391539 * S_Income + -13.277904245629 * S_Mnt + -0.08185099069039 *
S_MntGoldProds + 2.6349809613264 * S_MntMeatProducts + -5.23430097842472 *
S_NumCatalogPurchases + -1.25644862473488 * S_NumDealsPurchases + -3.0943337340276 *
S_NumWebVisitsMonth + 0.96429102250453 * S_RFMstat + 4.60373013139143 * S_Recency +
1.52557456336148 * S_Teenhome + 0.00287578113165 * S_Year_Birth ;
164425    +   H1x1_1  = H1x1_1  +     1.77432710413329 * Marital_StatusDivorced
164426    +          +     5.12496303990022 * Marital_StatusMarried
164427    +          +    -7.61364369696186 * Marital_StatusSingle
164428    +          +     2.78937374370395 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 1.77432710413329 * Marital_StatusDivorced +
5.12496303990022 * Marital_StatusMarried + -7.61364369696186 * Marital_StatusSingle +
2.78937374370395 * Marital_StatusTogether ;
164429    +   H1x1_2  = H1x1_2  +    -5.49070434381597 * Marital_StatusDivorced
164430    +          +     7.65332274940308 * Marital_StatusMarried
164431    +          +    -5.13332947688313 * Marital_StatusSingle
164432    +          +     8.25159601985572 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -5.49070434381597 * Marital_StatusDivorced +
7.65332274940308 * Marital_StatusMarried + -5.13332947688313 * Marital_StatusSingle +
8.25159601985572 * Marital_StatusTogether ;
164433    +   H1x1_3  = H1x1_3  +     1.57910552070948 * Marital_StatusDivorced
164434    +          +     7.95162959069432 * Marital_StatusMarried
164435    +          +    -6.10797604390061 * Marital_StatusSingle
164436    +          +     2.98577039618027 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 1.57910552070948 * Marital_StatusDivorced +
7.95162959069432 * Marital_StatusMarried + -6.10797604390061 * Marital_StatusSingle +
2.98577039618027 * Marital_StatusTogether ;
164437    +   H1x1_4  = H1x1_4  +     3.65411081783958 * Marital_StatusDivorced
164438    +          +     5.45977621823616 * Marital_StatusMarried
164439    +          +    -10.3527985391218 * Marital_StatusSingle
164440    +          +     4.66094015963389 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 3.65411081783958 * Marital_StatusDivorced +
5.45977621823616 * Marital_StatusMarried + -10.3527985391218 * Marital_StatusSingle +
4.66094015963389 * Marital_StatusTogether ;
164441    +   H1x1_5  = H1x1_5  +     1.57864743151562 * Marital_StatusDivorced
164442    +          +     8.15909630638185 * Marital_StatusMarried
164443    +          +    -5.88497367282032 * Marital_StatusSingle
164444    +          +     3.05474303626666 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 1.57864743151562 * Marital_StatusDivorced +
8.15909630638185 * Marital_StatusMarried + -5.88497367282032 * Marital_StatusSingle +
3.05474303626666 * Marital_StatusTogether ;
164445    +   H1x1_1  =    -1.55078746609233 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.55078746609233 + H1x1_1 ;
164446    +   H1x1_2  =     5.40474806112383 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 5.40474806112383 + H1x1_2 ;
164447    +   H1x1_3  =     11.2733164995662 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 11.2733164995662 + H1x1_3 ;
164448    +   H1x1_4  =    -7.78487963966384 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -7.78487963966384 + H1x1_4 ;
164449    +   H1x1_5  =      3.8784406873535 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 3.8784406873535 + H1x1_5 ;
164450    +   H1x1_6  = 0;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0;
164451    +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
164452    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
164453    +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
164454    +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
164455    +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
164456    +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
164457    +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
164458    +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
164459    +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
164460    +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
164461    +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
164462    +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
164463    +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
164464    +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
164465    +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
164466    +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
164467    +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
164468    +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
164469    +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
164470    +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
164471    +END;
MPRINT(EM_DIAGRAM):   END;
164472    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
164473    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
164474    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
164475    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
164476    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
164477    +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
164478    +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
164479    +END;
MPRINT(EM_DIAGRAM):   END;
164480    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
164481    +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
164482    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
164483    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
164484    +   H1x2_1  =     0.07453146398445 * S_AcceptedCmpTotal
164485    +          +     0.17438368465616 * S_Frq  +     0.97121905855093 * S_Income
164486    +          +    -0.15757686261675 * S_Mnt  +     0.28678754855648 *
164487    +        S_MntGoldProds  +     2.03999655184815 * S_MntMeatProducts
164488    +          +      0.8747576336553 * S_NumCatalogPurchases
164489    +          +    -0.23551985234916 * S_NumDealsPurchases
164490    +          +     0.83901499225112 * S_NumWebVisitsMonth
164491    +          +     -0.7643570473353 * S_RFMstat  +      0.0823609346051 *
164492    +        S_Recency  +    -0.38340703993831 * S_Teenhome
164493    +          +     1.16037573405943 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.07453146398445 * S_AcceptedCmpTotal + 0.17438368465616 *
S_Frq + 0.97121905855093 * S_Income + -0.15757686261675 * S_Mnt + 0.28678754855648 *
S_MntGoldProds + 2.03999655184815 * S_MntMeatProducts + 0.8747576336553 *
S_NumCatalogPurchases + -0.23551985234916 * S_NumDealsPurchases + 0.83901499225112 *
S_NumWebVisitsMonth + -0.7643570473353 * S_RFMstat + 0.0823609346051 * S_Recency +
-0.38340703993831 * S_Teenhome + 1.16037573405943 * S_Year_Birth ;
164494    +   H1x2_2  =      -2.285017059996 * S_AcceptedCmpTotal
164495    +          +    -0.29646095672581 * S_Frq  +     -3.5024410668082 * S_Income
164496    +          +    -2.12091528193185 * S_Mnt  +    -1.48506012188621 *
164497    +        S_MntGoldProds  +    -1.38316375865608 * S_MntMeatProducts
164498    +          +    -0.99107054453387 * S_NumCatalogPurchases
164499    +          +    -0.68379823410573 * S_NumDealsPurchases
164500    +          +    -1.67939872609259 * S_NumWebVisitsMonth
164501    +          +     0.49106697429539 * S_RFMstat  +    -0.01117108974211 *
164502    +        S_Recency  +    -1.65033346710833 * S_Teenhome
164503    +          +    -1.03897054098621 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -2.285017059996 * S_AcceptedCmpTotal + -0.29646095672581 *
S_Frq + -3.5024410668082 * S_Income + -2.12091528193185 * S_Mnt + -1.48506012188621 *
S_MntGoldProds + -1.38316375865608 * S_MntMeatProducts + -0.99107054453387 *
S_NumCatalogPurchases + -0.68379823410573 * S_NumDealsPurchases + -1.67939872609259 *
S_NumWebVisitsMonth + 0.49106697429539 * S_RFMstat + -0.01117108974211 * S_Recency +
-1.65033346710833 * S_Teenhome + -1.03897054098621 * S_Year_Birth ;
164504    +   H1x2_3  =      2.9562672276462 * S_AcceptedCmpTotal
164505    +          +    -0.19531439441895 * S_Frq  +      0.3125078734463 * S_Income
164506    +          +     -1.6099267525002 * S_Mnt  +    -0.36573328507463 *
164507    +        S_MntGoldProds  +     -0.3392853565114 * S_MntMeatProducts
164508    +          +      1.4506330104932 * S_NumCatalogPurchases
164509    +          +     0.20085283861849 * S_NumDealsPurchases
164510    +          +     2.37974383924154 * S_NumWebVisitsMonth
164511    +          +     -0.1106906484364 * S_RFMstat  +    -3.36701384866793 *
164512    +        S_Recency  +     0.60726269989058 * S_Teenhome
164513    +          +     0.51474814816173 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_3 = 2.9562672276462 * S_AcceptedCmpTotal + -0.19531439441895 *
S_Frq + 0.3125078734463 * S_Income + -1.6099267525002 * S_Mnt + -0.36573328507463 *
S_MntGoldProds + -0.3392853565114 * S_MntMeatProducts + 1.4506330104932 *
S_NumCatalogPurchases + 0.20085283861849 * S_NumDealsPurchases + 2.37974383924154 *
S_NumWebVisitsMonth + -0.1106906484364 * S_RFMstat + -3.36701384866793 * S_Recency +
0.60726269989058 * S_Teenhome + 0.51474814816173 * S_Year_Birth ;
164514    +   H1x2_4  =    -3.19375607611292 * S_AcceptedCmpTotal
164515    +          +    -1.28391627024222 * S_Frq  +     1.20886875907222 * S_Income
164516    +          +     0.33241907162962 * S_Mnt  +     0.81131852742978 *
164517    +        S_MntGoldProds  +     0.66955477854362 * S_MntMeatProducts
164518    +          +    -0.79952426911069 * S_NumCatalogPurchases
164519    +          +    -0.70571099772216 * S_NumDealsPurchases
164520    +          +    -0.32158728049114 * S_NumWebVisitsMonth
164521    +          +    -0.83126265863782 * S_RFMstat  +     1.49830148501327 *
164522    +        S_Recency  +     2.29389047813725 * S_Teenhome
164523    +          +     0.04615513391624 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -3.19375607611292 * S_AcceptedCmpTotal + -1.28391627024222 *
S_Frq + 1.20886875907222 * S_Income + 0.33241907162962 * S_Mnt + 0.81131852742978 *
S_MntGoldProds + 0.66955477854362 * S_MntMeatProducts + -0.79952426911069 *
S_NumCatalogPurchases + -0.70571099772216 * S_NumDealsPurchases + -0.32158728049114 *
S_NumWebVisitsMonth + -0.83126265863782 * S_RFMstat + 1.49830148501327 * S_Recency +
2.29389047813725 * S_Teenhome + 0.04615513391624 * S_Year_Birth ;
164524    +   H1x2_5  =     -0.6002425930451 * S_AcceptedCmpTotal
164525    +          +    -0.86762771301251 * S_Frq  +    -0.57793933969656 * S_Income
164526    +          +     0.41975808190408 * S_Mnt  +    -0.13242897225011 *
164527    +        S_MntGoldProds  +    -1.44402585881872 * S_MntMeatProducts
164528    +          +    -0.41491605544255 * S_NumCatalogPurchases
164529    +          +     0.49374983047507 * S_NumDealsPurchases
164530    +          +    -1.38692718220359 * S_NumWebVisitsMonth
164531    +          +    -0.07580803465143 * S_RFMstat  +      0.4152505934779 *
164532    +        S_Recency  +     1.29605991841828 * S_Teenhome
164533    +          +     2.17160180088465 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.6002425930451 * S_AcceptedCmpTotal + -0.86762771301251 *
S_Frq + -0.57793933969656 * S_Income + 0.41975808190408 * S_Mnt + -0.13242897225011 *
S_MntGoldProds + -1.44402585881872 * S_MntMeatProducts + -0.41491605544255 *
S_NumCatalogPurchases + 0.49374983047507 * S_NumDealsPurchases + -1.38692718220359 *
S_NumWebVisitsMonth + -0.07580803465143 * S_RFMstat + 0.4152505934779 * S_Recency +
1.29605991841828 * S_Teenhome + 2.17160180088465 * S_Year_Birth ;
164534    +   H1x2_1  = H1x2_1  +     0.77674448865903 * Marital_StatusDivorced
164535    +          +    -1.29227303709115 * Marital_StatusMarried
164536    +          +     0.71446782242025 * Marital_StatusSingle
164537    +          +     0.55295867102727 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 0.77674448865903 * Marital_StatusDivorced +
-1.29227303709115 * Marital_StatusMarried + 0.71446782242025 * Marital_StatusSingle +
0.55295867102727 * Marital_StatusTogether ;
164538    +   H1x2_2  = H1x2_2  +     -0.1845223373129 * Marital_StatusDivorced
164539    +          +      2.0815223604364 * Marital_StatusMarried
164540    +          +     0.79462013188709 * Marital_StatusSingle
164541    +          +     0.20668835346022 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.1845223373129 * Marital_StatusDivorced +
2.0815223604364 * Marital_StatusMarried + 0.79462013188709 * Marital_StatusSingle +
0.20668835346022 * Marital_StatusTogether ;
164542    +   H1x2_3  = H1x2_3  +    -1.02774258915556 * Marital_StatusDivorced
164543    +          +     0.44769683627357 * Marital_StatusMarried
164544    +          +     1.09957357551209 * Marital_StatusSingle
164545    +          +     0.98246644516303 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -1.02774258915556 * Marital_StatusDivorced +
0.44769683627357 * Marital_StatusMarried + 1.09957357551209 * Marital_StatusSingle +
0.98246644516303 * Marital_StatusTogether ;
164546    +   H1x2_4  = H1x2_4  +     1.02578628033933 * Marital_StatusDivorced
164547    +          +    -0.71096069683657 * Marital_StatusMarried
164548    +          +    -0.46849808497503 * Marital_StatusSingle
164549    +          +    -0.50186472808298 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 1.02578628033933 * Marital_StatusDivorced +
-0.71096069683657 * Marital_StatusMarried + -0.46849808497503 * Marital_StatusSingle +
-0.50186472808298 * Marital_StatusTogether ;
164550    +   H1x2_5  = H1x2_5  +     0.83514340443964 * Marital_StatusDivorced
164551    +          +     0.21000014809177 * Marital_StatusMarried
164552    +          +    -1.05959388759825 * Marital_StatusSingle
164553    +          +     -0.8202251717493 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.83514340443964 * Marital_StatusDivorced +
0.21000014809177 * Marital_StatusMarried + -1.05959388759825 * Marital_StatusSingle +
-0.8202251717493 * Marital_StatusTogether ;
164554    +   H1x2_1  =     0.66244588339698 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.66244588339698 + H1x2_1 ;
164555    +   H1x2_2  =     0.36306484617725 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.36306484617725 + H1x2_2 ;
164556    +   H1x2_3  =     0.00299288434405 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = 0.00299288434405 + H1x2_3 ;
164557    +   H1x2_4  =     0.32206403734945 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.32206403734945 + H1x2_4 ;
164558    +   H1x2_5  =     0.48514364636978 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 0.48514364636978 + H1x2_5 ;
164559    +   H1x2_6  = 0;
MPRINT(EM_DIAGRAM):   H1x2_6 = 0;
164560    +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
164561    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
164562    +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
164563    +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
164564    +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
164565    +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
164566    +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
164567    +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
164568    +   H1x2_4  = EXP(H1x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(H1x2_4 - _MAX_);
164569    +   _SUM_ = _SUM_ + H1x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_4 ;
164570    +   H1x2_5  = EXP(H1x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(H1x2_5 - _MAX_);
164571    +   _SUM_ = _SUM_ + H1x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_5 ;
164572    +   H1x2_6  = EXP(H1x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(H1x2_6 - _MAX_);
164573    +   _SUM_ = _SUM_ + H1x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_6 ;
164574    +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
164575    +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
164576    +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
164577    +   H1x2_4  = H1x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 / _SUM_;
164578    +   H1x2_5  = H1x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 / _SUM_;
164579    +   H1x2_6  = H1x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 / _SUM_;
164580    +END;
MPRINT(EM_DIAGRAM):   END;
164581    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
164582    +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
164583    +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
164584    +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
164585    +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
164586    +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
164587    +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
164588    +END;
MPRINT(EM_DIAGRAM):   END;
164589    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
164590    +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
164591    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
164592    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
164593    +   H2x1_1  =     5.34062678932931 * H1x1_1  +     7.71604112891627 * H1x1_2
164594    +          +     7.54377937186103 * H1x1_3  +    -5.90943850663966 * H1x1_4
164595    +          +    -6.06522890475814 * H1x1_5  +    -7.94470945127082 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 5.34062678932931 * H1x1_1 + 7.71604112891627 * H1x1_2 +
7.54377937186103 * H1x1_3 + -5.90943850663966 * H1x1_4 + -6.06522890475814 * H1x1_5 +
-7.94470945127082 * H1x1_6 ;
164596    +   H2x1_2  =      1.1479485803131 * H1x1_1  +      1.4482835893576 * H1x1_2
164597    +          +    -0.15220644394866 * H1x1_3  +    -1.30000676790854 * H1x1_4
164598    +          +    -0.49333138568117 * H1x1_5  +    -1.96124154717115 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.1479485803131 * H1x1_1 + 1.4482835893576 * H1x1_2 +
-0.15220644394866 * H1x1_3 + -1.30000676790854 * H1x1_4 + -0.49333138568117 * H1x1_5 +
-1.96124154717115 * H1x1_6 ;
164599    +   H2x1_3  =     2.12915623251937 * H1x1_1  +     4.39530013559682 * H1x1_2
164600    +          +     3.38050961443392 * H1x1_3  +    -5.12182301645649 * H1x1_4
164601    +          +    -3.74697079524831 * H1x1_5  +    -5.26174801543685 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 2.12915623251937 * H1x1_1 + 4.39530013559682 * H1x1_2 +
3.38050961443392 * H1x1_3 + -5.12182301645649 * H1x1_4 + -3.74697079524831 * H1x1_5 +
-5.26174801543685 * H1x1_6 ;
164602    +   H2x1_4  =     0.54854810712303 * H1x1_1  +      1.6486650469525 * H1x1_2
164603    +          +     1.84563084742932 * H1x1_3  +    -2.43710509923951 * H1x1_4
164604    +          +     0.03038093596976 * H1x1_5  +    -1.34566786751269 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 0.54854810712303 * H1x1_1 + 1.6486650469525 * H1x1_2 +
1.84563084742932 * H1x1_3 + -2.43710509923951 * H1x1_4 + 0.03038093596976 * H1x1_5 +
-1.34566786751269 * H1x1_6 ;
164605    +   H2x1_5  =     0.89845480530178 * H1x1_1  +     3.19967829294268 * H1x1_2
164606    +          +     3.58592569542093 * H1x1_3  +    -3.76417733693485 * H1x1_4
164607    +          +     -4.1568039640005 * H1x1_5  +    -4.42895004794637 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = 0.89845480530178 * H1x1_1 + 3.19967829294268 * H1x1_2 +
3.58592569542093 * H1x1_3 + -3.76417733693485 * H1x1_4 + -4.1568039640005 * H1x1_5 +
-4.42895004794637 * H1x1_6 ;
164608    +   H2x1_1  = H2x1_1  +     0.44545310705069 * H1x2_1
164609    +          +     2.72471946580982 * H1x2_2  +    -1.42856846603531 * H1x2_3
164610    +          +     0.25357521888082 * H1x2_4  +    -1.25902268741411 * H1x2_5
164611    +          +    -1.70956044020454 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 0.44545310705069 * H1x2_1 + 2.72471946580982 * H1x2_2
+ -1.42856846603531 * H1x2_3 + 0.25357521888082 * H1x2_4 + -1.25902268741411 * H1x2_5 +
-1.70956044020454 * H1x2_6 ;
164612    +   H2x1_2  = H2x1_2  +      0.9465771639497 * H1x2_1
164613    +          +    -0.41110969777104 * H1x2_2  +    -0.92834816798625 * H1x2_3
164614    +          +     -1.7337755087443 * H1x2_4  +     -1.2522448489667 * H1x2_5
164615    +          +    -0.90111756793979 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.9465771639497 * H1x2_1 + -0.41110969777104 * H1x2_2
+ -0.92834816798625 * H1x2_3 + -1.7337755087443 * H1x2_4 + -1.2522448489667 * H1x2_5 +
-0.90111756793979 * H1x2_6 ;
164616    +   H2x1_3  = H2x1_3  +    -0.22355080983787 * H1x2_1
164617    +          +    -0.18918346120545 * H1x2_2  +    -1.50592518382263 * H1x2_3
164618    +          +    -1.00672320426732 * H1x2_4  +    -1.09510249463921 * H1x2_5
164619    +          +     0.83089577154267 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -0.22355080983787 * H1x2_1 + -0.18918346120545 *
H1x2_2 + -1.50592518382263 * H1x2_3 + -1.00672320426732 * H1x2_4 + -1.09510249463921 * H1x2_5
+ 0.83089577154267 * H1x2_6 ;
164620    +   H2x1_4  = H2x1_4  +    -0.74505363577487 * H1x2_1
164621    +          +     0.41544439689687 * H1x2_2  +    -0.11467073820729 * H1x2_3
164622    +          +    -2.16913690278917 * H1x2_4  +     1.07667011067144 * H1x2_5
164623    +          +    -0.21291665093094 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + -0.74505363577487 * H1x2_1 + 0.41544439689687 * H1x2_2
+ -0.11467073820729 * H1x2_3 + -2.16913690278917 * H1x2_4 + 1.07667011067144 * H1x2_5 +
-0.21291665093094 * H1x2_6 ;
164624    +   H2x1_5  = H2x1_5  +    -0.22639397151159 * H1x2_1
164625    +          +     0.59976504799464 * H1x2_2  +    -1.19497833953318 * H1x2_3
164626    +          +     0.40681132265012 * H1x2_4  +    -1.18142813082248 * H1x2_5
164627    +          +     0.28627108561279 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + -0.22639397151159 * H1x2_1 + 0.59976504799464 * H1x2_2
+ -1.19497833953318 * H1x2_3 + 0.40681132265012 * H1x2_4 + -1.18142813082248 * H1x2_5 +
0.28627108561279 * H1x2_6 ;
164628    +   H2x1_1  =     0.80837297417824 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 0.80837297417824 + H2x1_1 ;
164629    +   H2x1_2  =    -3.15918654233626 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -3.15918654233626 + H2x1_2 ;
164630    +   H2x1_3  =     -1.1148455701308 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -1.1148455701308 + H2x1_3 ;
164631    +   H2x1_4  =    -2.43637271773179 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -2.43637271773179 + H2x1_4 ;
164632    +   H2x1_5  =     -1.5068240097035 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -1.5068240097035 + H2x1_5 ;
164633    +   H2x1_6  = 0;
MPRINT(EM_DIAGRAM):   H2x1_6 = 0;
164634    +   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 , H2x1_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 , H2x1_6 );
164635    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
164636    +   H2x1_1  = EXP(H2x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_1 = EXP(H2x1_1 - _MAX_);
164637    +   _SUM_ = _SUM_ + H2x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_1 ;
164638    +   H2x1_2  = EXP(H2x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_2 = EXP(H2x1_2 - _MAX_);
164639    +   _SUM_ = _SUM_ + H2x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_2 ;
164640    +   H2x1_3  = EXP(H2x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_3 = EXP(H2x1_3 - _MAX_);
164641    +   _SUM_ = _SUM_ + H2x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_3 ;
164642    +   H2x1_4  = EXP(H2x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_4 = EXP(H2x1_4 - _MAX_);
164643    +   _SUM_ = _SUM_ + H2x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_4 ;
164644    +   H2x1_5  = EXP(H2x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_5 = EXP(H2x1_5 - _MAX_);
164645    +   _SUM_ = _SUM_ + H2x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_5 ;
164646    +   H2x1_6  = EXP(H2x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_6 = EXP(H2x1_6 - _MAX_);
164647    +   _SUM_ = _SUM_ + H2x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_6 ;
164648    +   H2x1_1  = H2x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 / _SUM_;
164649    +   H2x1_2  = H2x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 / _SUM_;
164650    +   H2x1_3  = H2x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 / _SUM_;
164651    +   H2x1_4  = H2x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 / _SUM_;
164652    +   H2x1_5  = H2x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 / _SUM_;
164653    +   H2x1_6  = H2x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 / _SUM_;
164654    +END;
MPRINT(EM_DIAGRAM):   END;
164655    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
164656    +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
164657    +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
164658    +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
164659    +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
164660    +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
164661    +   H2x1_6  = .;
MPRINT(EM_DIAGRAM):   H2x1_6 = .;
164662    +END;
MPRINT(EM_DIAGRAM):   END;
164663    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
164664    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
164665    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
164666    +
164667    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
164668    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
164669    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
164670    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
164671    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
164672    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
164673    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
164674    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
164675    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
164676    +end;
MPRINT(EM_DIAGRAM):   end;
164677    +else do;
MPRINT(EM_DIAGRAM):   else do;
164678    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
164679    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
164680    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
164681    +   end;
MPRINT(EM_DIAGRAM):   end;
164682    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
164683    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
164684    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
164685    +   end;
MPRINT(EM_DIAGRAM):   end;
164686    +   else do;
MPRINT(EM_DIAGRAM):   else do;
164687    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
164688    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
164689    +   end;
MPRINT(EM_DIAGRAM):   end;
164690    +end;
MPRINT(EM_DIAGRAM):   end;
164691    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
164692    +   P_DepVar1  =    -14.9408685199347 * H2x1_1  +     1.48309430635242 * H2x1_2
164693    +          +     -4.3496216751271 * H2x1_3  +     0.01239249943556 * H2x1_4
164694    +          +    -6.27169756239783 * H2x1_5  +     2.70843493957574 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -14.9408685199347 * H2x1_1 + 1.48309430635242 * H2x1_2 +
-4.3496216751271 * H2x1_3 + 0.01239249943556 * H2x1_4 + -6.27169756239783 * H2x1_5 +
2.70843493957574 * H2x1_6 ;
164695    +   P_DepVar1  =     5.67267561171469 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 5.67267561171469 + P_DepVar1 ;
164696    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
164697    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
164698    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
164699    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
164700    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
164701    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
164702    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
164703    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
164704    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
164705    +END;
MPRINT(EM_DIAGRAM):   END;
164706    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
164707    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
164708    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
164709    +END;
MPRINT(EM_DIAGRAM):   END;
164710    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
164711    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
164712    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
164713    +END;
MPRINT(EM_DIAGRAM):   END;
164714    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
164715    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
164716    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
164717    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
164718    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
164719    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
164720    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
164721    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
164722    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
164723    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
164724    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
164725    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
164726    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
164727    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
164728    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
164729    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
164730    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
164731    +END;
MPRINT(EM_DIAGRAM):   END;
164732    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
164733    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
164734    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
164735    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
164736    +* Renaming variables for AutoNeural42;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural42;
164737    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
164738    +* Renaming Posterior variables for AutoNeural42;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural42;
164739    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
164740    +drop AutoNeural42_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural42_P_DepVar1;
164741    +AutoNeural42_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural42_P_DepVar1 = P_DepVar1;
164742    +drop AutoNeural42_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural42_P_DepVar0;
164743    +AutoNeural42_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural42_P_DepVar0 = P_DepVar0;
164744    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
164745    +* Renaming _WARN_ variable for AutoNeural42;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural42;
164746    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
164747    +length AutoNeural42_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural42_WARN_ $4;
164748    +drop AutoNeural42_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural42_WARN_;
164749    +AutoNeural42_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural42_WARN_ = _WARN_;
164750    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
164751    +* Ensmbl21: Scoring Code of model 3 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl21: Scoring Code of model 3 of 5;
164752    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
164753    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
164754    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
164755    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
164756    +* NODE: AutoNeural46;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural46;
164757    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
164758    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
164759    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
164760    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
164761    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
164762    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
164763    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
164764    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
164765    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
164766    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
164767    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
164768    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
164769    +LENGTH _WARN_ $4
164770    +      F_DepVar  $ 12
164771    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
164772    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
164773    +
164774    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
164775    +
164776    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
164777    +
164778    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
164779    +
164780    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
164781    +
164782    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
164783    +
164784    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
164785    +
164786    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
164787    +
164788    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
164789    +
164790    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
164791    +
164792    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
164793    +
164794    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
164795    +
164796    +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
164797    +
164798    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
164799    +
164800    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
164801    +
164802    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
164803    +
164804    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
164805    +
164806    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
164807    +
164808    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
164809    +
164810    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
164811    +
164812    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
164813    +
164814    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
164815    +
164816    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
164817    +
164818    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
164819    +
164820    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
164821    +
164822    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
164823    +
164824    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
164825    +
164826    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
164827    +
164828    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
164829    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
164830    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
164831    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
164832    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
164833    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
164834    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
164835    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
164836    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
164837    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
164838    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
164839    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
164840    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
164841    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
164842    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
164843    +end;
MPRINT(EM_DIAGRAM):   end;
164844    +else do;
MPRINT(EM_DIAGRAM):   else do;
164845    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
164846    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
164847    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
164848    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
164849    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
164850    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
164851    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
164852    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
164853    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
164854    +         end;
MPRINT(EM_DIAGRAM):   end;
164855    +         else do;
MPRINT(EM_DIAGRAM):   else do;
164856    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
164857    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
164858    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
164859    +            end;
MPRINT(EM_DIAGRAM):   end;
164860    +         end;
MPRINT(EM_DIAGRAM):   end;
164861    +      end;
MPRINT(EM_DIAGRAM):   end;
164862    +      else do;
MPRINT(EM_DIAGRAM):   else do;
164863    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
164864    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
164865    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
164866    +         end;
MPRINT(EM_DIAGRAM):   end;
164867    +      end;
MPRINT(EM_DIAGRAM):   end;
164868    +   end;
MPRINT(EM_DIAGRAM):   end;
164869    +   else do;
MPRINT(EM_DIAGRAM):   else do;
164870    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
164871    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
164872    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
164873    +      end;
MPRINT(EM_DIAGRAM):   end;
164874    +      else do;
MPRINT(EM_DIAGRAM):   else do;
164875    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
164876    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
164877    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
164878    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
164879    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
164880    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
164881    +         end;
MPRINT(EM_DIAGRAM):   end;
164882    +      end;
MPRINT(EM_DIAGRAM):   end;
164883    +   end;
MPRINT(EM_DIAGRAM):   end;
164884    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
164885    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
164886    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
164887    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
164888    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
164889    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
164890    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
164891    +   end;
MPRINT(EM_DIAGRAM):   end;
164892    +end;
MPRINT(EM_DIAGRAM):   end;
164893    +
164894    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
164895    +*** Checking missing input Interval
164896    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
164897    +
164898    +IF NMISS(
164899    +   AcceptedCmpTotal ,
164900    +   Frq ,
164901    +   Income ,
164902    +   Mnt ,
164903    +   MntGoldProds ,
164904    +   MntMeatProducts ,
164905    +   NumCatalogPurchases ,
164906    +   NumDealsPurchases ,
164907    +   NumWebVisitsMonth ,
164908    +   RFMstat ,
164909    +   Recency ,
164910    +   Teenhome ,
164911    +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntGoldProds ,
MntMeatProducts , NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , RFMstat ,
Recency , Teenhome , Year_Birth ) THEN DO;
164912    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
164913    +
164914    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
164915    +END;
MPRINT(EM_DIAGRAM):   END;
164916    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
164917    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
164918    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
164919    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
164920    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
164921    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
164922    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
164923    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
164924    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
164925    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
164926    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
164927    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
164928    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
164929    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
164930    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
164931    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
164932    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
164933    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
164934    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
164935    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
164936    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
164937    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
164938    +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
164939    +END;
MPRINT(EM_DIAGRAM):   END;
164940    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
164941    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
164942    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
164943    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
164944    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
164945    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
164946    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
164947    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
164948    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
164949    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
164950    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
164951    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
164952    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
164953    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
164954    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
164955    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
164956    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
164957    +   ELSE S_NumCatalogPurchases
164958    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
164959    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
164960    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
164961    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
164962    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
164963    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
164964    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
164965    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
164966    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
164967    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
164968    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
164969    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
164970    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
164971    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
164972    +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
164973    +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
164974    +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
164975    +END;
MPRINT(EM_DIAGRAM):   END;
164976    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
164977    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
164978    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
164979    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
164980    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
164981    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
164982    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
164983    +   H1x1_1  =    -0.10743056275421 * S_AcceptedCmpTotal
164984    +          +     0.03409888241348 * S_Frq  +    -0.00055974837068 * S_Income
164985    +          +       0.134341851096 * S_Mnt  +    -0.00857864409164 *
164986    +        S_MntGoldProds  +      0.4895390061827 * S_MntMeatProducts
164987    +          +    -0.01423451356563 * S_NumCatalogPurchases
164988    +          +     0.06006350655487 * S_NumDealsPurchases
164989    +          +    -0.20885493964335 * S_NumWebVisitsMonth
164990    +          +    -0.01173202621744 * S_RFMstat  +     0.25819909101611 *
164991    +        S_Recency  +    -0.03326479668652 * S_Teenhome
164992    +          +     0.03371888312814 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.10743056275421 * S_AcceptedCmpTotal + 0.03409888241348 *
S_Frq + -0.00055974837068 * S_Income + 0.134341851096 * S_Mnt + -0.00857864409164 *
S_MntGoldProds + 0.4895390061827 * S_MntMeatProducts + -0.01423451356563 *
S_NumCatalogPurchases + 0.06006350655487 * S_NumDealsPurchases + -0.20885493964335 *
S_NumWebVisitsMonth + -0.01173202621744 * S_RFMstat + 0.25819909101611 * S_Recency +
-0.03326479668652 * S_Teenhome + 0.03371888312814 * S_Year_Birth ;
164993    +   H1x1_2  =    -0.03078478134042 * S_AcceptedCmpTotal
164994    +          +    -0.12351766308972 * S_Frq  +     -0.1943406821731 * S_Income
164995    +          +    -0.36027326127049 * S_Mnt  +     0.05117597516658 *
164996    +        S_MntGoldProds  +     0.07931191953223 * S_MntMeatProducts
164997    +          +    -0.03109266966794 * S_NumCatalogPurchases
164998    +          +     0.05524435494328 * S_NumDealsPurchases
164999    +          +     -0.0105802056898 * S_NumWebVisitsMonth
165000    +          +     0.01793771049002 * S_RFMstat  +      0.0322880575902 *
165001    +        S_Recency  +       0.195010707702 * S_Teenhome
165002    +          +     -0.0351563039686 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.03078478134042 * S_AcceptedCmpTotal + -0.12351766308972 *
S_Frq + -0.1943406821731 * S_Income + -0.36027326127049 * S_Mnt + 0.05117597516658 *
S_MntGoldProds + 0.07931191953223 * S_MntMeatProducts + -0.03109266966794 *
S_NumCatalogPurchases + 0.05524435494328 * S_NumDealsPurchases + -0.0105802056898 *
S_NumWebVisitsMonth + 0.01793771049002 * S_RFMstat + 0.0322880575902 * S_Recency +
0.195010707702 * S_Teenhome + -0.0351563039686 * S_Year_Birth ;
165003    +   H1x1_3  =     0.23990987498311 * S_AcceptedCmpTotal
165004    +          +     0.04052411845464 * S_Frq  +    -0.00302331972067 * S_Income
165005    +          +     0.39981531247427 * S_Mnt  +     0.01433011413993 *
165006    +        S_MntGoldProds  +    -0.19955782687502 * S_MntMeatProducts
165007    +          +     0.07777995109144 * S_NumCatalogPurchases
165008    +          +     0.08683394019767 * S_NumDealsPurchases
165009    +          +     0.27328366433987 * S_NumWebVisitsMonth
165010    +          +      0.0263930429288 * S_RFMstat  +    -0.38900647412136 *
165011    +        S_Recency  +      0.0640153287908 * S_Teenhome
165012    +          +     0.07587467002123 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.23990987498311 * S_AcceptedCmpTotal + 0.04052411845464 *
S_Frq + -0.00302331972067 * S_Income + 0.39981531247427 * S_Mnt + 0.01433011413993 *
S_MntGoldProds + -0.19955782687502 * S_MntMeatProducts + 0.07777995109144 *
S_NumCatalogPurchases + 0.08683394019767 * S_NumDealsPurchases + 0.27328366433987 *
S_NumWebVisitsMonth + 0.0263930429288 * S_RFMstat + -0.38900647412136 * S_Recency +
0.0640153287908 * S_Teenhome + 0.07587467002123 * S_Year_Birth ;
165013    +   H1x1_1  = H1x1_1  +    -0.05820552608682 * Marital_StatusDivorced
165014    +          +    -0.02695167777393 * Marital_StatusMarried
165015    +          +    -0.00733864032764 * Marital_StatusSingle
165016    +          +     0.03838747494293 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.05820552608682 * Marital_StatusDivorced +
-0.02695167777393 * Marital_StatusMarried + -0.00733864032764 * Marital_StatusSingle +
0.03838747494293 * Marital_StatusTogether ;
165017    +   H1x1_2  = H1x1_2  +    -0.00853551919442 * Marital_StatusDivorced
165018    +          +     0.42249671001117 * Marital_StatusMarried
165019    +          +    -0.18515416581955 * Marital_StatusSingle
165020    +          +     0.25783473520826 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.00853551919442 * Marital_StatusDivorced +
0.42249671001117 * Marital_StatusMarried + -0.18515416581955 * Marital_StatusSingle +
0.25783473520826 * Marital_StatusTogether ;
165021    +   H1x1_3  = H1x1_3  +      0.4175036565076 * Marital_StatusDivorced
165022    +          +     0.45127582934777 * Marital_StatusMarried
165023    +          +       0.358157766485 * Marital_StatusSingle
165024    +          +     0.42627185625497 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.4175036565076 * Marital_StatusDivorced +
0.45127582934777 * Marital_StatusMarried + 0.358157766485 * Marital_StatusSingle +
0.42627185625497 * Marital_StatusTogether ;
165025    +   H1x1_1  =    -1.23226472635566 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.23226472635566 + H1x1_1 ;
165026    +   H1x1_2  =      2.2313165328971 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 2.2313165328971 + H1x1_2 ;
165027    +   H1x1_3  =     0.09755782095138 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.09755782095138 + H1x1_3 ;
165028    +   H1x1_1  = SIN(H1x1_1 );
MPRINT(EM_DIAGRAM):   H1x1_1 = SIN(H1x1_1 );
165029    +   H1x1_2  = SIN(H1x1_2 );
MPRINT(EM_DIAGRAM):   H1x1_2 = SIN(H1x1_2 );
165030    +   H1x1_3  = SIN(H1x1_3 );
MPRINT(EM_DIAGRAM):   H1x1_3 = SIN(H1x1_3 );
165031    +END;
MPRINT(EM_DIAGRAM):   END;
165032    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
165033    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
165034    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
165035    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
165036    +END;
MPRINT(EM_DIAGRAM):   END;
165037    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
165038    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
165039    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
165040    +
165041    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
165042    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
165043    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
165044    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
165045    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
165046    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
165047    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
165048    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
165049    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
165050    +end;
MPRINT(EM_DIAGRAM):   end;
165051    +else do;
MPRINT(EM_DIAGRAM):   else do;
165052    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
165053    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
165054    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
165055    +   end;
MPRINT(EM_DIAGRAM):   end;
165056    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
165057    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
165058    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
165059    +   end;
MPRINT(EM_DIAGRAM):   end;
165060    +   else do;
MPRINT(EM_DIAGRAM):   else do;
165061    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
165062    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
165063    +   end;
MPRINT(EM_DIAGRAM):   end;
165064    +end;
MPRINT(EM_DIAGRAM):   end;
165065    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
165066    +   P_DepVar1  =     -68.075125441494 * H1x1_1  +    -72.7630361672259 * H1x1_2
165067    +          +    -71.6251597703755 * H1x1_3 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -68.075125441494 * H1x1_1 + -72.7630361672259 * H1x1_2 +
-71.6251597703755 * H1x1_3 ;
165068    +   P_DepVar1  =    -25.6080957302662 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -25.6080957302662 + P_DepVar1 ;
165069    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
165070    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
165071    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
165072    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
165073    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
165074    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
165075    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
165076    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
165077    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
165078    +END;
MPRINT(EM_DIAGRAM):   END;
165079    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
165080    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
165081    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
165082    +END;
MPRINT(EM_DIAGRAM):   END;
165083    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
165084    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
165085    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
165086    +END;
MPRINT(EM_DIAGRAM):   END;
165087    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
165088    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
165089    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
165090    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
165091    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
165092    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
165093    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
165094    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
165095    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
165096    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
165097    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
165098    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
165099    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
165100    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
165101    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
165102    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
165103    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
165104    +END;
MPRINT(EM_DIAGRAM):   END;
165105    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
165106    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
165107    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
165108    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
165109    +* Renaming variables for AutoNeural46;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural46;
165110    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
165111    +* Renaming Posterior variables for AutoNeural46;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural46;
165112    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
165113    +drop AutoNeural46_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural46_P_DepVar1;
165114    +AutoNeural46_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural46_P_DepVar1 = P_DepVar1;
165115    +drop AutoNeural46_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural46_P_DepVar0;
165116    +AutoNeural46_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural46_P_DepVar0 = P_DepVar0;
165117    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
165118    +* Renaming _WARN_ variable for AutoNeural46;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural46;
165119    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
165120    +length AutoNeural46_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural46_WARN_ $4;
165121    +drop AutoNeural46_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural46_WARN_;
165122    +AutoNeural46_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural46_WARN_ = _WARN_;
165123    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
165124    +* Ensmbl21: Scoring Code of model 4 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl21: Scoring Code of model 4 of 5;
165125    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
165126    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
165127    +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
165128    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
165129    +* NODE: Neural30;
MPRINT(EM_DIAGRAM):   * NODE: Neural30;
165130    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
165131    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
165132    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
165133    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
165134    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
165135    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
165136    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
165137    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
165138    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
165139    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
165140    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
165141    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
165142    +LENGTH _WARN_ $4
165143    +      F_DepVar  $ 12
165144    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
165145    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
165146    +
165147    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
165148    +
165149    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
165150    +
165151    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
165152    +
165153    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
165154    +
165155    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
165156    +
165157    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
165158    +
165159    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
165160    +
165161    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
165162    +
165163    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
165164    +
165165    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
165166    +
165167    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
165168    +
165169    +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
165170    +
165171    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
165172    +
165173    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
165174    +
165175    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
165176    +
165177    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
165178    +
165179    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
165180    +
165181    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
165182    +
165183    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
165184    +
165185    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
165186    +
165187    +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
165188    +
165189    +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
165190    +
165191    +      label H17 = 'Hidden: H1=7' ;
MPRINT(EM_DIAGRAM):   label H17 = 'Hidden: H1=7' ;
165192    +
165193    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
165194    +
165195    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
165196    +
165197    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
165198    +
165199    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
165200    +
165201    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
165202    +
165203    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
165204    +
165205    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
165206    +
165207    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
165208    +
165209    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
165210    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
165211    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
165212    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
165213    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
165214    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
165215    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
165216    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
165217    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
165218    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
165219    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
165220    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
165221    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
165222    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
165223    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
165224    +end;
MPRINT(EM_DIAGRAM):   end;
165225    +else do;
MPRINT(EM_DIAGRAM):   else do;
165226    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
165227    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
165228    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
165229    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
165230    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
165231    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
165232    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
165233    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
165234    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
165235    +         end;
MPRINT(EM_DIAGRAM):   end;
165236    +         else do;
MPRINT(EM_DIAGRAM):   else do;
165237    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
165238    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
165239    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
165240    +            end;
MPRINT(EM_DIAGRAM):   end;
165241    +         end;
MPRINT(EM_DIAGRAM):   end;
165242    +      end;
MPRINT(EM_DIAGRAM):   end;
165243    +      else do;
MPRINT(EM_DIAGRAM):   else do;
165244    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
165245    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
165246    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
165247    +         end;
MPRINT(EM_DIAGRAM):   end;
165248    +      end;
MPRINT(EM_DIAGRAM):   end;
165249    +   end;
MPRINT(EM_DIAGRAM):   end;
165250    +   else do;
MPRINT(EM_DIAGRAM):   else do;
165251    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
165252    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
165253    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
165254    +      end;
MPRINT(EM_DIAGRAM):   end;
165255    +      else do;
MPRINT(EM_DIAGRAM):   else do;
165256    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
165257    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
165258    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
165259    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
165260    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
165261    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
165262    +         end;
MPRINT(EM_DIAGRAM):   end;
165263    +      end;
MPRINT(EM_DIAGRAM):   end;
165264    +   end;
MPRINT(EM_DIAGRAM):   end;
165265    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
165266    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
165267    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
165268    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
165269    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
165270    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
165271    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
165272    +   end;
MPRINT(EM_DIAGRAM):   end;
165273    +end;
MPRINT(EM_DIAGRAM):   end;
165274    +
165275    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
165276    +*** Checking missing input Interval
165277    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
165278    +
165279    +IF NMISS(
165280    +   AcceptedCmpTotal ,
165281    +   Frq ,
165282    +   Income ,
165283    +   Mnt ,
165284    +   MntGoldProds ,
165285    +   MntMeatProducts ,
165286    +   NumCatalogPurchases ,
165287    +   NumDealsPurchases ,
165288    +   NumWebVisitsMonth ,
165289    +   RFMstat ,
165290    +   Recency ,
165291    +   Teenhome ,
165292    +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntGoldProds ,
MntMeatProducts , NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , RFMstat ,
Recency , Teenhome , Year_Birth ) THEN DO;
165293    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
165294    +
165295    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
165296    +END;
MPRINT(EM_DIAGRAM):   END;
165297    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
165298    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
165299    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
165300    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
165301    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
165302    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
165303    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
165304    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
165305    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
165306    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
165307    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
165308    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
165309    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
165310    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
165311    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
165312    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
165313    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
165314    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
165315    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
165316    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
165317    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
165318    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
165319    +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
165320    +END;
MPRINT(EM_DIAGRAM):   END;
165321    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
165322    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
165323    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
165324    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
165325    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
165326    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
165327    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
165328    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
165329    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
165330    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
165331    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
165332    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
165333    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
165334    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
165335    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
165336    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
165337    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
165338    +   ELSE S_NumCatalogPurchases
165339    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
165340    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
165341    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
165342    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
165343    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
165344    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
165345    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
165346    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
165347    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
165348    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
165349    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
165350    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
165351    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
165352    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
165353    +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
165354    +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
165355    +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
165356    +END;
MPRINT(EM_DIAGRAM):   END;
165357    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
165358    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
165359    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
165360    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
165361    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
165362    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
165363    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
165364    +   H11  =      0.5448177358872 * S_AcceptedCmpTotal  +    -0.56918032958607 *
165365    +        S_Frq  +     0.21060618200218 * S_Income  +    -0.40246310954349 *
165366    +        S_Mnt  +    -0.18690574082736 * S_MntGoldProds
165367    +          +     0.83028677347709 * S_MntMeatProducts
165368    +          +     0.56366676093724 * S_NumCatalogPurchases
165369    +          +     0.63662278307649 * S_NumDealsPurchases
165370    +          +     0.45030521898264 * S_NumWebVisitsMonth
165371    +          +     0.23005584857727 * S_RFMstat  +    -0.64234820627061 *
165372    +        S_Recency  +     0.00774462163198 * S_Teenhome
165373    +          +     0.03680161242347 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H11 = 0.5448177358872 * S_AcceptedCmpTotal + -0.56918032958607 * S_Frq +
0.21060618200218 * S_Income + -0.40246310954349 * S_Mnt + -0.18690574082736 * S_MntGoldProds +
0.83028677347709 * S_MntMeatProducts + 0.56366676093724 * S_NumCatalogPurchases +
0.63662278307649 * S_NumDealsPurchases + 0.45030521898264 * S_NumWebVisitsMonth +
0.23005584857727 * S_RFMstat + -0.64234820627061 * S_Recency + 0.00774462163198 * S_Teenhome +
0.03680161242347 * S_Year_Birth ;
165374    +   H12  =     0.66298961317118 * S_AcceptedCmpTotal  +      -0.935153223999 *
165375    +        S_Frq  +     0.41449292848187 * S_Income  +    -1.26694271574069 *
165376    +        S_Mnt  +     0.18765833055879 * S_MntGoldProds
165377    +          +       0.802198131853 * S_MntMeatProducts
165378    +          +     0.80699693779953 * S_NumCatalogPurchases
165379    +          +    -0.32111921080627 * S_NumDealsPurchases
165380    +          +     1.05495977150176 * S_NumWebVisitsMonth
165381    +          +    -0.03067071763188 * S_RFMstat  +    -1.14158068786273 *
165382    +        S_Recency  +     -0.3863391299289 * S_Teenhome
165383    +          +    -0.01515301188334 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H12 = 0.66298961317118 * S_AcceptedCmpTotal + -0.935153223999 * S_Frq +
0.41449292848187 * S_Income + -1.26694271574069 * S_Mnt + 0.18765833055879 * S_MntGoldProds +
0.802198131853 * S_MntMeatProducts + 0.80699693779953 * S_NumCatalogPurchases +
-0.32111921080627 * S_NumDealsPurchases + 1.05495977150176 * S_NumWebVisitsMonth +
-0.03067071763188 * S_RFMstat + -1.14158068786273 * S_Recency + -0.3863391299289 * S_Teenhome
+ -0.01515301188334 * S_Year_Birth ;
165384    +   H13  =    -0.20258357169781 * S_AcceptedCmpTotal  +    -0.01927951320398 *
165385    +        S_Frq  +     0.04768604929306 * S_Income  +     0.30271184148932 *
165386    +        S_Mnt  +    -0.24825280571811 * S_MntGoldProds
165387    +          +     0.56634068580527 * S_MntMeatProducts
165388    +          +    -0.06012432168804 * S_NumCatalogPurchases
165389    +          +     0.00616163066885 * S_NumDealsPurchases
165390    +          +    -0.28643715149767 * S_NumWebVisitsMonth
165391    +          +    -0.21657284982294 * S_RFMstat  +    -0.11323681460779 *
165392    +        S_Recency  +    -0.05360047278594 * S_Teenhome
165393    +          +     -0.3574952891844 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H13 = -0.20258357169781 * S_AcceptedCmpTotal + -0.01927951320398 * S_Frq
+ 0.04768604929306 * S_Income + 0.30271184148932 * S_Mnt + -0.24825280571811 * S_MntGoldProds
+ 0.56634068580527 * S_MntMeatProducts + -0.06012432168804 * S_NumCatalogPurchases +
0.00616163066885 * S_NumDealsPurchases + -0.28643715149767 * S_NumWebVisitsMonth +
-0.21657284982294 * S_RFMstat + -0.11323681460779 * S_Recency + -0.05360047278594 * S_Teenhome
+ -0.3574952891844 * S_Year_Birth ;
165394    +   H14  =    -0.01671557172552 * S_AcceptedCmpTotal  +     0.14126480109635 *
165395    +        S_Frq  +    -0.16542260420764 * S_Income  +    -0.02938555904655 *
165396    +        S_Mnt  +    -0.09628993953297 * S_MntGoldProds
165397    +          +     0.29490772106233 * S_MntMeatProducts
165398    +          +    -0.37973658516518 * S_NumCatalogPurchases
165399    +          +     0.08377613406035 * S_NumDealsPurchases
165400    +          +    -0.17242298863338 * S_NumWebVisitsMonth
165401    +          +     0.24623716603984 * S_RFMstat  +     0.27333937644041 *
165402    +        S_Recency  +    -0.00972098456963 * S_Teenhome
165403    +          +      0.0278167406933 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H14 = -0.01671557172552 * S_AcceptedCmpTotal + 0.14126480109635 * S_Frq
+ -0.16542260420764 * S_Income + -0.02938555904655 * S_Mnt + -0.09628993953297 *
S_MntGoldProds + 0.29490772106233 * S_MntMeatProducts + -0.37973658516518 *
S_NumCatalogPurchases + 0.08377613406035 * S_NumDealsPurchases + -0.17242298863338 *
S_NumWebVisitsMonth + 0.24623716603984 * S_RFMstat + 0.27333937644041 * S_Recency +
-0.00972098456963 * S_Teenhome + 0.0278167406933 * S_Year_Birth ;
165404    +   H15  =     0.26338443874493 * S_AcceptedCmpTotal  +    -1.05933447721817 *
165405    +        S_Frq  +     0.15944073710657 * S_Income  +    -0.08201141214939 *
165406    +        S_Mnt  +     0.21740350334003 * S_MntGoldProds
165407    +          +     1.25414895016379 * S_MntMeatProducts
165408    +          +     1.38122748809658 * S_NumCatalogPurchases
165409    +          +     0.28983101492886 * S_NumDealsPurchases
165410    +          +     0.34016977363062 * S_NumWebVisitsMonth
165411    +          +    -0.07539662108021 * S_RFMstat  +    -0.48223583966095 *
165412    +        S_Recency  +    -0.21769282483378 * S_Teenhome
165413    +          +    -0.03637501600986 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H15 = 0.26338443874493 * S_AcceptedCmpTotal + -1.05933447721817 * S_Frq
+ 0.15944073710657 * S_Income + -0.08201141214939 * S_Mnt + 0.21740350334003 * S_MntGoldProds
+ 1.25414895016379 * S_MntMeatProducts + 1.38122748809658 * S_NumCatalogPurchases +
0.28983101492886 * S_NumDealsPurchases + 0.34016977363062 * S_NumWebVisitsMonth +
-0.07539662108021 * S_RFMstat + -0.48223583966095 * S_Recency + -0.21769282483378 * S_Teenhome
+ -0.03637501600986 * S_Year_Birth ;
165414    +   H16  =    -0.02235292240802 * S_AcceptedCmpTotal  +     0.05344170585354 *
165415    +        S_Frq  +    -0.16059837639399 * S_Income  +     -0.2016987951784 *
165416    +        S_Mnt  +     0.10489473589715 * S_MntGoldProds
165417    +          +    -0.24223453001761 * S_MntMeatProducts
165418    +          +     0.08658296964034 * S_NumCatalogPurchases
165419    +          +    -0.12912434217806 * S_NumDealsPurchases
165420    +          +     0.20103807385888 * S_NumWebVisitsMonth
165421    +          +     0.26367670266536 * S_RFMstat  +    -0.44098166476515 *
165422    +        S_Recency  +    -0.46051939225222 * S_Teenhome
165423    +          +    -0.03446671446496 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H16 = -0.02235292240802 * S_AcceptedCmpTotal + 0.05344170585354 * S_Frq
+ -0.16059837639399 * S_Income + -0.2016987951784 * S_Mnt + 0.10489473589715 * S_MntGoldProds
+ -0.24223453001761 * S_MntMeatProducts + 0.08658296964034 * S_NumCatalogPurchases +
-0.12912434217806 * S_NumDealsPurchases + 0.20103807385888 * S_NumWebVisitsMonth +
0.26367670266536 * S_RFMstat + -0.44098166476515 * S_Recency + -0.46051939225222 * S_Teenhome
+ -0.03446671446496 * S_Year_Birth ;
165424    +   H17  =    -0.33265903592033 * S_AcceptedCmpTotal  +      0.8252218937614 *
165425    +        S_Frq  +     0.41954791536781 * S_Income  +     0.46211299623005 *
165426    +        S_Mnt  +     0.01356150389301 * S_MntGoldProds
165427    +          +    -0.44066080788477 * S_MntMeatProducts
165428    +          +    -0.50262630360787 * S_NumCatalogPurchases
165429    +          +    -0.76106916776546 * S_NumDealsPurchases
165430    +          +     -0.1148740911192 * S_NumWebVisitsMonth
165431    +          +    -0.07226607709062 * S_RFMstat  +       0.057209463183 *
165432    +        S_Recency  +    -0.46203013614528 * S_Teenhome
165433    +          +    -0.19513280423468 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H17 = -0.33265903592033 * S_AcceptedCmpTotal + 0.8252218937614 * S_Frq +
0.41954791536781 * S_Income + 0.46211299623005 * S_Mnt + 0.01356150389301 * S_MntGoldProds +
-0.44066080788477 * S_MntMeatProducts + -0.50262630360787 * S_NumCatalogPurchases +
-0.76106916776546 * S_NumDealsPurchases + -0.1148740911192 * S_NumWebVisitsMonth +
-0.07226607709062 * S_RFMstat + 0.057209463183 * S_Recency + -0.46203013614528 * S_Teenhome +
-0.19513280423468 * S_Year_Birth ;
165434    +   H11  = H11  +    -0.25061450597172 * Marital_StatusDivorced
165435    +          +    -0.04190107680763 * Marital_StatusMarried
165436    +          +     0.60475477366656 * Marital_StatusSingle
165437    +          +    -0.23249465504861 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.25061450597172 * Marital_StatusDivorced +
-0.04190107680763 * Marital_StatusMarried + 0.60475477366656 * Marital_StatusSingle +
-0.23249465504861 * Marital_StatusTogether ;
165438    +   H12  = H12  +     0.44175341112836 * Marital_StatusDivorced
165439    +          +    -1.07400114292035 * Marital_StatusMarried
165440    +          +     0.68928831262407 * Marital_StatusSingle
165441    +          +    -0.77691960068409 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.44175341112836 * Marital_StatusDivorced +
-1.07400114292035 * Marital_StatusMarried + 0.68928831262407 * Marital_StatusSingle +
-0.77691960068409 * Marital_StatusTogether ;
165442    +   H13  = H13  +     0.06946121372082 * Marital_StatusDivorced
165443    +          +    -0.20121339725415 * Marital_StatusMarried
165444    +          +     0.11417921391157 * Marital_StatusSingle
165445    +          +     0.09230572943508 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.06946121372082 * Marital_StatusDivorced +
-0.20121339725415 * Marital_StatusMarried + 0.11417921391157 * Marital_StatusSingle +
0.09230572943508 * Marital_StatusTogether ;
165446    +   H14  = H14  +    -0.23294461421366 * Marital_StatusDivorced
165447    +          +    -0.17406326256113 * Marital_StatusMarried
165448    +          +    -0.23720358325215 * Marital_StatusSingle
165449    +          +    -0.43999719513424 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.23294461421366 * Marital_StatusDivorced +
-0.17406326256113 * Marital_StatusMarried + -0.23720358325215 * Marital_StatusSingle +
-0.43999719513424 * Marital_StatusTogether ;
165450    +   H15  = H15  +    -0.02489582646664 * Marital_StatusDivorced
165451    +          +     0.09754614002146 * Marital_StatusMarried
165452    +          +    -0.13004651836918 * Marital_StatusSingle
165453    +          +     0.26863820003928 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.02489582646664 * Marital_StatusDivorced +
0.09754614002146 * Marital_StatusMarried + -0.13004651836918 * Marital_StatusSingle +
0.26863820003928 * Marital_StatusTogether ;
165454    +   H16  = H16  +    -0.03288546792064 * Marital_StatusDivorced
165455    +          +     0.33991066094948 * Marital_StatusMarried
165456    +          +     0.16726714912168 * Marital_StatusSingle
165457    +          +    -0.25665070086096 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + -0.03288546792064 * Marital_StatusDivorced +
0.33991066094948 * Marital_StatusMarried + 0.16726714912168 * Marital_StatusSingle +
-0.25665070086096 * Marital_StatusTogether ;
165458    +   H17  = H17  +     0.10942200598558 * Marital_StatusDivorced
165459    +          +    -0.70406010688765 * Marital_StatusMarried
165460    +          +     0.77355395614085 * Marital_StatusSingle
165461    +          +    -0.37671922953654 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H17 = H17 + 0.10942200598558 * Marital_StatusDivorced +
-0.70406010688765 * Marital_StatusMarried + 0.77355395614085 * Marital_StatusSingle +
-0.37671922953654 * Marital_StatusTogether ;
165462    +   H11  =    -1.10989436564707 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.10989436564707 + H11 ;
165463    +   H12  =    -0.21288050694071 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.21288050694071 + H12 ;
165464    +   H13  =     0.48811938879702 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 0.48811938879702 + H13 ;
165465    +   H14  =    -1.71523073897191 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -1.71523073897191 + H14 ;
165466    +   H15  =    -0.04554136165237 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -0.04554136165237 + H15 ;
165467    +   H16  =    -2.78464164526225 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -2.78464164526225 + H16 ;
165468    +   H17  =     1.73418398166308 + H17 ;
MPRINT(EM_DIAGRAM):   H17 = 1.73418398166308 + H17 ;
165469    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
165470    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
165471    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
165472    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
165473    +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
165474    +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
165475    +   H17  = TANH(H17 );
MPRINT(EM_DIAGRAM):   H17 = TANH(H17 );
165476    +END;
MPRINT(EM_DIAGRAM):   END;
165477    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
165478    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
165479    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
165480    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
165481    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
165482    +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
165483    +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
165484    +   H17  = .;
MPRINT(EM_DIAGRAM):   H17 = .;
165485    +END;
MPRINT(EM_DIAGRAM):   END;
165486    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
165487    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
165488    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
165489    +
165490    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
165491    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
165492    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
165493    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
165494    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
165495    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
165496    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
165497    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
165498    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
165499    +end;
MPRINT(EM_DIAGRAM):   end;
165500    +else do;
MPRINT(EM_DIAGRAM):   else do;
165501    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
165502    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
165503    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
165504    +   end;
MPRINT(EM_DIAGRAM):   end;
165505    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
165506    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
165507    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
165508    +   end;
MPRINT(EM_DIAGRAM):   end;
165509    +   else do;
MPRINT(EM_DIAGRAM):   else do;
165510    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
165511    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
165512    +   end;
MPRINT(EM_DIAGRAM):   end;
165513    +end;
MPRINT(EM_DIAGRAM):   end;
165514    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
165515    +   P_DepVar1  =     1.99078165508498 * H11  +     3.59667555265579 * H12
165516    +          +     0.22520578396696 * H13  +     0.07999056432817 * H14
165517    +          +     2.73336314915489 * H15  +     0.11536142898008 * H16
165518    +          +    -1.90380424208785 * H17 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.99078165508498 * H11 + 3.59667555265579 * H12 +
0.22520578396696 * H13 + 0.07999056432817 * H14 + 2.73336314915489 * H15 + 0.11536142898008 *
H16 + -1.90380424208785 * H17 ;
165519    +   P_DepVar1  =    -1.65978316370044 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.65978316370044 + P_DepVar1 ;
165520    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
165521    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
165522    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
165523    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
165524    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
165525    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
165526    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
165527    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
165528    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
165529    +END;
MPRINT(EM_DIAGRAM):   END;
165530    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
165531    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
165532    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
165533    +END;
MPRINT(EM_DIAGRAM):   END;
165534    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
165535    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
165536    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
165537    +END;
MPRINT(EM_DIAGRAM):   END;
165538    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
165539    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
165540    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
165541    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
165542    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
165543    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
165544    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
165545    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
165546    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
165547    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
165548    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
165549    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
165550    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
165551    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
165552    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
165553    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
165554    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
165555    +END;
MPRINT(EM_DIAGRAM):   END;
165556    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
165557    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
165558    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
165559    +drop
165560    +H11
165561    +H12
165562    +H13
165563    +H14
165564    +H15
165565    +H16
165566    +H17
165567    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 H17 ;
165568    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
165569    +* Renaming variables for Neural30;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural30;
165570    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
165571    +* Renaming Posterior variables for Neural30;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural30;
165572    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
165573    +drop Neural30_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural30_P_DepVar1;
165574    +Neural30_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural30_P_DepVar1 = P_DepVar1;
165575    +drop Neural30_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural30_P_DepVar0;
165576    +Neural30_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural30_P_DepVar0 = P_DepVar0;
165577    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
165578    +* Renaming _WARN_ variable for Neural30;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural30;
165579    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
165580    +length Neural30_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural30_WARN_ $4;
165581    +drop Neural30_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural30_WARN_;
165582    +Neural30_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural30_WARN_ = _WARN_;
165583    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
165584    +* Ensmbl21: Scoring Code of model 5 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl21: Scoring Code of model 5 of 5;
165585    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
165586    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
165587    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
165588    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
165589    +* NODE: AutoNeural47;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural47;
165590    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
165591    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
165592    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
165593    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
165594    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
165595    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
165596    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
165597    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
165598    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
165599    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
165600    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
165601    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
165602    +LENGTH _WARN_ $4
165603    +      F_DepVar  $ 12
165604    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
165605    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
165606    +
165607    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
165608    +
165609    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
165610    +
165611    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
165612    +
165613    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
165614    +
165615    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
165616    +
165617    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
165618    +
165619    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
165620    +
165621    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
165622    +
165623    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
165624    +
165625    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
165626    +
165627    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
165628    +
165629    +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
165630    +
165631    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
165632    +
165633    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
165634    +
165635    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
165636    +
165637    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
165638    +
165639    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
165640    +
165641    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
165642    +
165643    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
165644    +
165645    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
165646    +
165647    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
165648    +
165649    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
165650    +
165651    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
165652    +
165653    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
165654    +
165655    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
165656    +
165657    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
165658    +
165659    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
165660    +
165661    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
165662    +
165663    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
165664    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
165665    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
165666    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
165667    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
165668    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
165669    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
165670    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
165671    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
165672    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
165673    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
165674    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
165675    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
165676    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
165677    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
165678    +end;
MPRINT(EM_DIAGRAM):   end;
165679    +else do;
MPRINT(EM_DIAGRAM):   else do;
165680    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
165681    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
165682    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
165683    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
165684    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
165685    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
165686    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
165687    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
165688    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
165689    +         end;
MPRINT(EM_DIAGRAM):   end;
165690    +         else do;
MPRINT(EM_DIAGRAM):   else do;
165691    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
165692    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
165693    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
165694    +            end;
MPRINT(EM_DIAGRAM):   end;
165695    +         end;
MPRINT(EM_DIAGRAM):   end;
165696    +      end;
MPRINT(EM_DIAGRAM):   end;
165697    +      else do;
MPRINT(EM_DIAGRAM):   else do;
165698    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
165699    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
165700    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
165701    +         end;
MPRINT(EM_DIAGRAM):   end;
165702    +      end;
MPRINT(EM_DIAGRAM):   end;
165703    +   end;
MPRINT(EM_DIAGRAM):   end;
165704    +   else do;
MPRINT(EM_DIAGRAM):   else do;
165705    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
165706    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
165707    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
165708    +      end;
MPRINT(EM_DIAGRAM):   end;
165709    +      else do;
MPRINT(EM_DIAGRAM):   else do;
165710    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
165711    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
165712    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
165713    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
165714    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
165715    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
165716    +         end;
MPRINT(EM_DIAGRAM):   end;
165717    +      end;
MPRINT(EM_DIAGRAM):   end;
165718    +   end;
MPRINT(EM_DIAGRAM):   end;
165719    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
165720    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
165721    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
165722    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
165723    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
165724    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
165725    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
165726    +   end;
MPRINT(EM_DIAGRAM):   end;
165727    +end;
MPRINT(EM_DIAGRAM):   end;
165728    +
165729    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
165730    +*** Checking missing input Interval
165731    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
165732    +
165733    +IF NMISS(
165734    +   AcceptedCmpTotal ,
165735    +   Frq ,
165736    +   Income ,
165737    +   Mnt ,
165738    +   MntGoldProds ,
165739    +   MntMeatProducts ,
165740    +   NumCatalogPurchases ,
165741    +   NumDealsPurchases ,
165742    +   NumWebVisitsMonth ,
165743    +   RFMstat ,
165744    +   Recency ,
165745    +   Teenhome ,
165746    +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntGoldProds ,
MntMeatProducts , NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , RFMstat ,
Recency , Teenhome , Year_Birth ) THEN DO;
165747    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
165748    +
165749    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
165750    +END;
MPRINT(EM_DIAGRAM):   END;
165751    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
165752    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
165753    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
165754    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
165755    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
165756    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
165757    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
165758    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
165759    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
165760    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
165761    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
165762    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
165763    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
165764    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
165765    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
165766    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
165767    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
165768    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
165769    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
165770    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
165771    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
165772    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
165773    +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
165774    +END;
MPRINT(EM_DIAGRAM):   END;
165775    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
165776    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
165777    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
165778    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
165779    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
165780    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
165781    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
165782    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
165783    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
165784    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
165785    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
165786    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
165787    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
165788    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
165789    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
165790    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
165791    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
165792    +   ELSE S_NumCatalogPurchases
165793    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
165794    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
165795    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
165796    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
165797    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
165798    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
165799    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
165800    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
165801    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
165802    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
165803    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
165804    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
165805    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
165806    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
165807    +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
165808    +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
165809    +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
165810    +END;
MPRINT(EM_DIAGRAM):   END;
165811    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
165812    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
165813    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
165814    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
165815    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
165816    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
165817    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
165818    +   H1x1_1  =      1.3507655650527 * S_AcceptedCmpTotal
165819    +          +    -1.10614122240879 * S_Frq  +     1.75303764660855 * S_Income
165820    +          +    -3.36358487853209 * S_Mnt  +     0.66482370197508 *
165821    +        S_MntGoldProds  +     2.20380795880989 * S_MntMeatProducts
165822    +          +     0.96941096546276 * S_NumCatalogPurchases
165823    +          +    -0.78169009272221 * S_NumDealsPurchases
165824    +          +     2.46694552614806 * S_NumWebVisitsMonth
165825    +          +    -0.70379796230966 * S_RFMstat  +    -2.91060571548081 *
165826    +        S_Recency  +    -1.09760548427625 * S_Teenhome
165827    +          +    -0.04996948842393 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.3507655650527 * S_AcceptedCmpTotal + -1.10614122240879 *
S_Frq + 1.75303764660855 * S_Income + -3.36358487853209 * S_Mnt + 0.66482370197508 *
S_MntGoldProds + 2.20380795880989 * S_MntMeatProducts + 0.96941096546276 *
S_NumCatalogPurchases + -0.78169009272221 * S_NumDealsPurchases + 2.46694552614806 *
S_NumWebVisitsMonth + -0.70379796230966 * S_RFMstat + -2.91060571548081 * S_Recency +
-1.09760548427625 * S_Teenhome + -0.04996948842393 * S_Year_Birth ;
165828    +   H1x1_2  =    -0.31908942522077 * S_AcceptedCmpTotal
165829    +          +     3.74791296051726 * S_Frq  +     2.24284839751303 * S_Income
165830    +          +    -1.78405040388815 * S_Mnt  +      0.8742942749026 *
165831    +        S_MntGoldProds  +    -0.14368654003355 * S_MntMeatProducts
165832    +          +    -2.01779739147185 * S_NumCatalogPurchases
165833    +          +     -2.6507470301089 * S_NumDealsPurchases
165834    +          +     0.43757499676531 * S_NumWebVisitsMonth
165835    +          +    -1.37847156147455 * S_RFMstat  +    -0.69576523519337 *
165836    +        S_Recency  +    -0.45321912120397 * S_Teenhome
165837    +          +     0.52676912620048 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.31908942522077 * S_AcceptedCmpTotal + 3.74791296051726 *
S_Frq + 2.24284839751303 * S_Income + -1.78405040388815 * S_Mnt + 0.8742942749026 *
S_MntGoldProds + -0.14368654003355 * S_MntMeatProducts + -2.01779739147185 *
S_NumCatalogPurchases + -2.6507470301089 * S_NumDealsPurchases + 0.43757499676531 *
S_NumWebVisitsMonth + -1.37847156147455 * S_RFMstat + -0.69576523519337 * S_Recency +
-0.45321912120397 * S_Teenhome + 0.52676912620048 * S_Year_Birth ;
165838    +   H1x1_3  =     2.41023196591392 * S_AcceptedCmpTotal
165839    +          +    -2.36084733932675 * S_Frq  +     1.24213632619464 * S_Income
165840    +          +    -1.85110475917758 * S_Mnt  +    -0.28004157450889 *
165841    +        S_MntGoldProds  +     2.40469717841771 * S_MntMeatProducts
165842    +          +      3.9474982958259 * S_NumCatalogPurchases
165843    +          +       0.376468804707 * S_NumDealsPurchases
165844    +          +     3.31501013882439 * S_NumWebVisitsMonth
165845    +          +     0.11559780336909 * S_RFMstat  +    -4.25267693921008 *
165846    +        S_Recency  +    -1.57729700618019 * S_Teenhome
165847    +          +      0.1824973506119 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 2.41023196591392 * S_AcceptedCmpTotal + -2.36084733932675 *
S_Frq + 1.24213632619464 * S_Income + -1.85110475917758 * S_Mnt + -0.28004157450889 *
S_MntGoldProds + 2.40469717841771 * S_MntMeatProducts + 3.9474982958259 *
S_NumCatalogPurchases + 0.376468804707 * S_NumDealsPurchases + 3.31501013882439 *
S_NumWebVisitsMonth + 0.11559780336909 * S_RFMstat + -4.25267693921008 * S_Recency +
-1.57729700618019 * S_Teenhome + 0.1824973506119 * S_Year_Birth ;
165848    +   H1x1_4  =     -0.2757766975278 * S_AcceptedCmpTotal
165849    +          +     3.82725387338192 * S_Frq  +      -0.761164420496 * S_Income
165850    +          +    -1.14207863171921 * S_Mnt  +     -0.1745335405903 *
165851    +        S_MntGoldProds  +    -5.79657274001258 * S_MntMeatProducts
165852    +          +    -1.47064436222345 * S_NumCatalogPurchases
165853    +          +    -0.47773085529503 * S_NumDealsPurchases
165854    +          +     0.20028656323595 * S_NumWebVisitsMonth
165855    +          +    -0.18383173425255 * S_RFMstat  +     0.10522454853137 *
165856    +        S_Recency  +    -0.11530372179295 * S_Teenhome
165857    +          +    -0.34167488644648 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.2757766975278 * S_AcceptedCmpTotal + 3.82725387338192 *
S_Frq + -0.761164420496 * S_Income + -1.14207863171921 * S_Mnt + -0.1745335405903 *
S_MntGoldProds + -5.79657274001258 * S_MntMeatProducts + -1.47064436222345 *
S_NumCatalogPurchases + -0.47773085529503 * S_NumDealsPurchases + 0.20028656323595 *
S_NumWebVisitsMonth + -0.18383173425255 * S_RFMstat + 0.10522454853137 * S_Recency +
-0.11530372179295 * S_Teenhome + -0.34167488644648 * S_Year_Birth ;
165858    +   H1x1_1  = H1x1_1  +     1.48263364530339 * Marital_StatusDivorced
165859    +          +    -1.68634246986018 * Marital_StatusMarried
165860    +          +     0.61674763327859 * Marital_StatusSingle
165861    +          +    -1.26649958570453 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 1.48263364530339 * Marital_StatusDivorced +
-1.68634246986018 * Marital_StatusMarried + 0.61674763327859 * Marital_StatusSingle +
-1.26649958570453 * Marital_StatusTogether ;
165862    +   H1x1_2  = H1x1_2  +     1.03937964147637 * Marital_StatusDivorced
165863    +          +    -0.63821523628652 * Marital_StatusMarried
165864    +          +    -1.40431603473643 * Marital_StatusSingle
165865    +          +    -0.20849152262706 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 1.03937964147637 * Marital_StatusDivorced +
-0.63821523628652 * Marital_StatusMarried + -1.40431603473643 * Marital_StatusSingle +
-0.20849152262706 * Marital_StatusTogether ;
165866    +   H1x1_3  = H1x1_3  +    -0.00632006555267 * Marital_StatusDivorced
165867    +          +    -2.86773035723606 * Marital_StatusMarried
165868    +          +     2.52900517550184 * Marital_StatusSingle
165869    +          +    -3.34343954102751 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.00632006555267 * Marital_StatusDivorced +
-2.86773035723606 * Marital_StatusMarried + 2.52900517550184 * Marital_StatusSingle +
-3.34343954102751 * Marital_StatusTogether ;
165870    +   H1x1_4  = H1x1_4  +     0.05620673245628 * Marital_StatusDivorced
165871    +          +    -0.89880425714459 * Marital_StatusMarried
165872    +          +     0.97652284934456 * Marital_StatusSingle
165873    +          +    -0.83414241747679 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.05620673245628 * Marital_StatusDivorced +
-0.89880425714459 * Marital_StatusMarried + 0.97652284934456 * Marital_StatusSingle +
-0.83414241747679 * Marital_StatusTogether ;
165874    +   H1x1_1  =    -0.73505942586437 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.73505942586437 + H1x1_1 ;
165875    +   H1x1_2  =     2.97401194500651 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 2.97401194500651 + H1x1_2 ;
165876    +   H1x1_3  =    -7.86049995366383 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -7.86049995366383 + H1x1_3 ;
165877    +   H1x1_4  =    -3.77808914097545 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -3.77808914097545 + H1x1_4 ;
165878    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
165879    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
165880    +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
165881    +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
165882    +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
165883    +   H1x1_4  = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
165884    +END;
MPRINT(EM_DIAGRAM):   END;
165885    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
165886    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
165887    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
165888    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
165889    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
165890    +END;
MPRINT(EM_DIAGRAM):   END;
165891    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
165892    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
165893    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
165894    +
165895    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
165896    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
165897    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
165898    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
165899    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
165900    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
165901    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
165902    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
165903    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
165904    +end;
MPRINT(EM_DIAGRAM):   end;
165905    +else do;
MPRINT(EM_DIAGRAM):   else do;
165906    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
165907    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
165908    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
165909    +   end;
MPRINT(EM_DIAGRAM):   end;
165910    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
165911    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
165912    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
165913    +   end;
MPRINT(EM_DIAGRAM):   end;
165914    +   else do;
MPRINT(EM_DIAGRAM):   else do;
165915    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
165916    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
165917    +   end;
MPRINT(EM_DIAGRAM):   end;
165918    +end;
MPRINT(EM_DIAGRAM):   end;
165919    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
165920    +   P_DepVar1  =     17.1091261255058 * H1x1_1  +    -15.4649724088409 * H1x1_2
165921    +          +     14.2519883476498 * H1x1_3  +    -25.0940711325771 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 17.1091261255058 * H1x1_1 + -15.4649724088409 * H1x1_2 +
14.2519883476498 * H1x1_3 + -25.0940711325771 * H1x1_4 ;
165922    +   P_DepVar1  =     -0.7898064443713 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.7898064443713 + P_DepVar1 ;
165923    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
165924    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
165925    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
165926    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
165927    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
165928    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
165929    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
165930    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
165931    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
165932    +END;
MPRINT(EM_DIAGRAM):   END;
165933    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
165934    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
165935    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
165936    +END;
MPRINT(EM_DIAGRAM):   END;
165937    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
165938    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
165939    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
165940    +END;
MPRINT(EM_DIAGRAM):   END;
165941    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
165942    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
165943    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
165944    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
165945    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
165946    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
165947    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
165948    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
165949    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
165950    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
165951    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
165952    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
165953    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
165954    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
165955    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
165956    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
165957    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
165958    +END;
MPRINT(EM_DIAGRAM):   END;
165959    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
165960    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
165961    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
165962    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
165963    +* Renaming variables for AutoNeural47;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural47;
165964    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
165965    +* Renaming Posterior variables for AutoNeural47;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural47;
165966    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
165967    +drop AutoNeural47_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural47_P_DepVar1;
165968    +AutoNeural47_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural47_P_DepVar1 = P_DepVar1;
165969    +drop AutoNeural47_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural47_P_DepVar0;
165970    +AutoNeural47_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural47_P_DepVar0 = P_DepVar0;
165971    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
165972    +* Renaming _WARN_ variable for AutoNeural47;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural47;
165973    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
165974    +length AutoNeural47_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural47_WARN_ $4;
165975    +drop AutoNeural47_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural47_WARN_;
165976    +AutoNeural47_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural47_WARN_ = _WARN_;
165977    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
165978    +* Ensmbl21: Average Posteriors of 5 models;
MPRINT(EM_DIAGRAM):   * Ensmbl21: Average Posteriors of 5 models;
165979    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
165980    +P_DepVar1 = (
165981    +Neural34_P_DepVar1 +
165982    +AutoNeural42_P_DepVar1 +
165983    +AutoNeural46_P_DepVar1 +
165984    +Neural30_P_DepVar1 +
165985    +AutoNeural47_P_DepVar1
165986    +)/5;
MPRINT(EM_DIAGRAM):   P_DepVar1 = ( Neural34_P_DepVar1 + AutoNeural42_P_DepVar1 +
AutoNeural46_P_DepVar1 + Neural30_P_DepVar1 + AutoNeural47_P_DepVar1 )/5;
165987    +P_DepVar0 = (
165988    +Neural34_P_DepVar0 +
165989    +AutoNeural42_P_DepVar0 +
165990    +AutoNeural46_P_DepVar0 +
165991    +Neural30_P_DepVar0 +
165992    +AutoNeural47_P_DepVar0
165993    +)/5;
MPRINT(EM_DIAGRAM):   P_DepVar0 = ( Neural34_P_DepVar0 + AutoNeural42_P_DepVar0 +
AutoNeural46_P_DepVar0 + Neural30_P_DepVar0 + AutoNeural47_P_DepVar0 )/5;
165994    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
165995    +* Ensmbl21: Computing Classification Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl21: Computing Classification Vars;
165996    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
165997    +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set.
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the
         length of a character variable.
165998    +label I_DepVar = 'Into: DepVar';
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar';
165999    +length _format $200;
MPRINT(EM_DIAGRAM):   length _format $200;
166000    +drop _format;
MPRINT(EM_DIAGRAM):   drop _format;
166001    +_format= ' ';
MPRINT(EM_DIAGRAM):   _format= ' ';
166002    +_p_= 0;
MPRINT(EM_DIAGRAM):   _p_= 0;
166003    +drop _p_;
MPRINT(EM_DIAGRAM):   drop _p_;
166004    +if P_DepVar1 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _p_ then do;
166005    +_p_= P_DepVar1;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar1;
166006    +_format= '1';
MPRINT(EM_DIAGRAM):   _format= '1';
166007    +end;
MPRINT(EM_DIAGRAM):   end;
166008    +if P_DepVar0 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _p_ then do;
166009    +_p_= P_DepVar0;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar0;
166010    +_format= '0';
MPRINT(EM_DIAGRAM):   _format= '0';
166011    +end;
MPRINT(EM_DIAGRAM):   end;
166012    +%DMNORMCP(_format,I_DepVar);
MPRINT(DMNORMCP):   I_DepVar=dmnorm(_format,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
166013    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
166014    +* Ensmbl21: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   * Ensmbl21: Producing Unformatted variable;
166015    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
166016    +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
166017    +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
166018    +else
166019    +if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
166020    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
166021    +* Ensmbl21: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl21: Computing _WARN_ Variable;
166022    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
166023    +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
166024    +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
166025    +_WARN_ = '';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
166026    +if index(NEURAL34_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
166026   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL34_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
166027    +if index(NEURAL34_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
166027   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL34_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
166028    +if index(NEURAL34_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
166028   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL34_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
166029    +if index(NEURAL34_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
166029   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL34_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
166030    +if index(AUTONEURAL42_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
166030   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL42_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
166031    +if index(AUTONEURAL42_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
166031   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL42_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
166032    +if index(AUTONEURAL42_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
166032   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL42_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
166033    +if index(AUTONEURAL42_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
166033   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL42_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
166034    +if index(AUTONEURAL46_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
166034   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL46_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
166035    +if index(AUTONEURAL46_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
166035   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL46_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
166036    +if index(AUTONEURAL46_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
166036   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL46_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
166037    +if index(AUTONEURAL46_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
166037   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL46_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
166038    +if index(NEURAL30_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
166038   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL30_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
166039    +if index(NEURAL30_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
166039   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL30_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
166040    +if index(NEURAL30_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
166040   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL30_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
166041    +if index(NEURAL30_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
166041   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL30_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
166042    +if index(AUTONEURAL47_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
166042   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL47_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
166043    +if index(AUTONEURAL47_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
166043   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL47_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
166044    +if index(AUTONEURAL47_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
166044   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL47_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
166045    +if index(AUTONEURAL47_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
166045   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL47_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
166046    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
166047    +* Ensmbl21: Computing Residual Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl21: Computing Residual Vars;
166048    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
166049    +if
166050    +F_DepVar NE '1'
166051    +AND F_DepVar NE '0'
166052    +then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE '1' AND F_DepVar NE '0' then do;
166053    +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
166054    +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
166055    +end;
MPRINT(EM_DIAGRAM):   end;
166056    +else do;
MPRINT(EM_DIAGRAM):   else do;
166057    +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
166058    +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
166059    +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
166060    +WHEN('1') R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN('1') R_DepVar1 = R_DepVar1 +1;
166061    +WHEN('0') R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN('0') R_DepVar0 = R_DepVar0 +1;
166062    +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
166063    +END;
MPRINT(EM_DIAGRAM):   END;
166064    +END;
MPRINT(EM_DIAGRAM):   END;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
166065     run;
 
NOTE: DATA STEP view saved on file EMWS8.ENSMBL21_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.NEURAL34_TRAIN.VIEW used (Total process time):
      real time           0.09 seconds
      cpu time            0.09 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.10 seconds
      cpu time            0.11 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
166066     quit;
166067     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
166068     filename emflow
166068   ! "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl21\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl21\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl21: Scoring NEURAL34_VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
166069     *------------------------------------------------------------*;
166070     * Ensmbl21: Scoring NEURAL34_VALIDATE data;
166071     *------------------------------------------------------------*;
166072     data EMWS8.Ensmbl21_VALIDATE
166073     / view=EMWS8.Ensmbl21_VALIDATE
166074     ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl21_VALIDATE / view=EMWS8.Ensmbl21_VALIDATE ;
166075     set EMWS8.Neural34_VALIDATE
166076     ;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural34_VALIDATE ;
166077     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file
      C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl21\EMFLOWSCORE.sas.
166078    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
166079    +* Ensmbl21: Combine model for DepVar;
MPRINT(EM_DIAGRAM):   * Ensmbl21: Combine model for DepVar;
166080    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
166081    +* Ensmbl21: Scoring Code of model 1 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl21: Scoring Code of model 1 of 5;
166082    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
166083    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
166084    +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
166085    +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
166086    +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
166087    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
166088    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
166089    +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
166090    +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
166091    +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
166092    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
166093    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
166094    +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
166095    +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
166096    +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
166097    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
166098    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
166099    +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
166100    +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
166101    +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
166102    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
166103    +
166104    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
166105    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
166105   !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
166106    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
166107    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
166108    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
166109    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
166110    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
166111    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
166112    +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
166113    +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
166114    +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
166115    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
166116    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
166117    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
166118    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
166119    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
166120    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
166121    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
166122    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
166123    +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
166124    +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
166125    +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
166126    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
166127    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
166128    +* TOOL: Metadata Node;
MPRINT(EM_DIAGRAM):   * TOOL: Metadata Node;
166129    +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
166130    +* NODE: Meta2;
MPRINT(EM_DIAGRAM):   * NODE: Meta2;
166131    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
166132    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
166133    +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
166134    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
166135    +* NODE: Neural34;
MPRINT(EM_DIAGRAM):   * NODE: Neural34;
166136    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
166137    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
166138    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
166139    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
166140    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
166141    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
166142    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
166143    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
166144    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
166145    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
166146    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
166147    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
166148    +LENGTH _WARN_ $4
166149    +      F_DepVar  $ 12
166150    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
166151    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
166152    +
166153    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
166154    +
166155    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
166156    +
166157    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
166158    +
166159    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
166160    +
166161    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
166162    +
166163    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
166164    +
166165    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
166166    +
166167    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
166168    +
166169    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
166170    +
166171    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
166172    +
166173    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
166174    +
166175    +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
166176    +
166177    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
166178    +
166179    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
166180    +
166181    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
166182    +
166183    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
166184    +
166185    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
166186    +
166187    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
166188    +
166189    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
166190    +
166191    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
166192    +
166193    +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
166194    +
166195    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
166196    +
166197    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
166198    +
166199    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
166200    +
166201    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
166202    +
166203    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
166204    +
166205    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
166206    +
166207    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
166208    +
166209    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
166210    +
166211    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
166212    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
166213    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
166214    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
166215    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
166216    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
166217    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
166218    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
166219    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
166220    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
166221    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
166222    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
166223    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
166224    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
166225    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
166226    +end;
MPRINT(EM_DIAGRAM):   end;
166227    +else do;
MPRINT(EM_DIAGRAM):   else do;
166228    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
166229    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
166230    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
166231    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
166232    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
166233    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
166234    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
166235    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
166236    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
166237    +         end;
MPRINT(EM_DIAGRAM):   end;
166238    +         else do;
MPRINT(EM_DIAGRAM):   else do;
166239    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
166240    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
166241    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
166242    +            end;
MPRINT(EM_DIAGRAM):   end;
166243    +         end;
MPRINT(EM_DIAGRAM):   end;
166244    +      end;
MPRINT(EM_DIAGRAM):   end;
166245    +      else do;
MPRINT(EM_DIAGRAM):   else do;
166246    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
166247    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
166248    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
166249    +         end;
MPRINT(EM_DIAGRAM):   end;
166250    +      end;
MPRINT(EM_DIAGRAM):   end;
166251    +   end;
MPRINT(EM_DIAGRAM):   end;
166252    +   else do;
MPRINT(EM_DIAGRAM):   else do;
166253    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
166254    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
166255    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
166256    +      end;
MPRINT(EM_DIAGRAM):   end;
166257    +      else do;
MPRINT(EM_DIAGRAM):   else do;
166258    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
166259    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
166260    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
166261    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
166262    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
166263    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
166264    +         end;
MPRINT(EM_DIAGRAM):   end;
166265    +      end;
MPRINT(EM_DIAGRAM):   end;
166266    +   end;
MPRINT(EM_DIAGRAM):   end;
166267    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
166268    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
166269    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
166270    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
166271    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
166272    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
166273    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
166274    +   end;
MPRINT(EM_DIAGRAM):   end;
166275    +end;
MPRINT(EM_DIAGRAM):   end;
166276    +
166277    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
166278    +*** Checking missing input Interval
166279    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
166280    +
166281    +IF NMISS(
166282    +   AcceptedCmpTotal ,
166283    +   Frq ,
166284    +   Income ,
166285    +   Mnt ,
166286    +   MntGoldProds ,
166287    +   MntMeatProducts ,
166288    +   NumCatalogPurchases ,
166289    +   NumDealsPurchases ,
166290    +   NumWebVisitsMonth ,
166291    +   RFMstat ,
166292    +   Recency ,
166293    +   Teenhome ,
166294    +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntGoldProds ,
MntMeatProducts , NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , RFMstat ,
Recency , Teenhome , Year_Birth ) THEN DO;
166295    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
166296    +
166297    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
166298    +END;
MPRINT(EM_DIAGRAM):   END;
166299    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
166300    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
166301    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
166302    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
166303    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
166304    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
166305    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
166306    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
166307    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
166308    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
166309    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
166310    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
166311    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
166312    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
166313    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
166314    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
166315    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
166316    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
166317    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
166318    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
166319    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
166320    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
166321    +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
166322    +END;
MPRINT(EM_DIAGRAM):   END;
166323    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
166324    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
166325    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
166326    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
166327    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
166328    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
166329    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
166330    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
166331    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
166332    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
166333    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
166334    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
166335    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
166336    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
166337    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
166338    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
166339    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
166340    +   ELSE S_NumCatalogPurchases
166341    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
166342    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
166343    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
166344    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
166345    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
166346    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
166347    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
166348    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
166349    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
166350    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
166351    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
166352    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
166353    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
166354    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
166355    +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
166356    +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
166357    +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
166358    +END;
MPRINT(EM_DIAGRAM):   END;
166359    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
166360    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
166361    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
166362    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
166363    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
166364    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
166365    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
166366    +   H11  =     0.39113138187571 * S_AcceptedCmpTotal  +    -0.61540725344485 *
166367    +        S_Frq  +    -0.39640720965637 * S_Income  +    -0.29779259024925 *
166368    +        S_Mnt  +     0.09159537668687 * S_MntGoldProds
166369    +          +     0.66968861823847 * S_MntMeatProducts
166370    +          +     0.43410284729103 * S_NumCatalogPurchases
166371    +          +     0.38169769247512 * S_NumDealsPurchases
166372    +          +     0.42568124883788 * S_NumWebVisitsMonth
166373    +          +       0.117680996215 * S_RFMstat  +    -0.81755740196945 *
166374    +        S_Recency  +     0.34714100236873 * S_Teenhome
166375    +          +     0.39595885220917 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H11 = 0.39113138187571 * S_AcceptedCmpTotal + -0.61540725344485 * S_Frq
+ -0.39640720965637 * S_Income + -0.29779259024925 * S_Mnt + 0.09159537668687 * S_MntGoldProds
+ 0.66968861823847 * S_MntMeatProducts + 0.43410284729103 * S_NumCatalogPurchases +
0.38169769247512 * S_NumDealsPurchases + 0.42568124883788 * S_NumWebVisitsMonth +
0.117680996215 * S_RFMstat + -0.81755740196945 * S_Recency + 0.34714100236873 * S_Teenhome +
0.39595885220917 * S_Year_Birth ;
166376    +   H12  =    -0.17603311184545 * S_AcceptedCmpTotal  +    -1.87448667460975 *
166377    +        S_Frq  +    -0.13770783826558 * S_Income  +    -0.07794509574546 *
166378    +        S_Mnt  +     -0.0367231623133 * S_MntGoldProds
166379    +          +     0.43468157063779 * S_MntMeatProducts
166380    +          +     1.22287851495207 * S_NumCatalogPurchases
166381    +          +     1.34810668047823 * S_NumDealsPurchases
166382    +          +     0.29744386797792 * S_NumWebVisitsMonth
166383    +          +     0.24598010228595 * S_RFMstat  +     0.45054459604149 *
166384    +        S_Recency  +    -0.31884355104334 * S_Teenhome
166385    +          +    -0.49374494273323 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H12 = -0.17603311184545 * S_AcceptedCmpTotal + -1.87448667460975 * S_Frq
+ -0.13770783826558 * S_Income + -0.07794509574546 * S_Mnt + -0.0367231623133 * S_MntGoldProds
+ 0.43468157063779 * S_MntMeatProducts + 1.22287851495207 * S_NumCatalogPurchases +
1.34810668047823 * S_NumDealsPurchases + 0.29744386797792 * S_NumWebVisitsMonth +
0.24598010228595 * S_RFMstat + 0.45054459604149 * S_Recency + -0.31884355104334 * S_Teenhome +
-0.49374494273323 * S_Year_Birth ;
166386    +   H13  =    -0.35894234681627 * S_AcceptedCmpTotal  +     2.22535530920485 *
166387    +        S_Frq  +    -0.60759993740885 * S_Income  +    -0.19127405324439 *
166388    +        S_Mnt  +     0.13903548885363 * S_MntGoldProds
166389    +          +    -3.08800901663199 * S_MntMeatProducts
166390    +          +    -1.19043292478827 * S_NumCatalogPurchases
166391    +          +    -0.37179794210537 * S_NumDealsPurchases
166392    +          +     0.03624847445355 * S_NumWebVisitsMonth
166393    +          +    -0.62521514183331 * S_RFMstat  +     0.01074839631068 *
166394    +        S_Recency  +     0.08240530440608 * S_Teenhome
166395    +          +    -0.04154769345168 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H13 = -0.35894234681627 * S_AcceptedCmpTotal + 2.22535530920485 * S_Frq
+ -0.60759993740885 * S_Income + -0.19127405324439 * S_Mnt + 0.13903548885363 * S_MntGoldProds
+ -3.08800901663199 * S_MntMeatProducts + -1.19043292478827 * S_NumCatalogPurchases +
-0.37179794210537 * S_NumDealsPurchases + 0.03624847445355 * S_NumWebVisitsMonth +
-0.62521514183331 * S_RFMstat + 0.01074839631068 * S_Recency + 0.08240530440608 * S_Teenhome +
-0.04154769345168 * S_Year_Birth ;
166396    +   H14  =     0.72612390853906 * S_AcceptedCmpTotal  +    -1.03331426863575 *
166397    +        S_Frq  +     0.44630396705527 * S_Income  +    -1.29648064151656 *
166398    +        S_Mnt  +     0.20190465471738 * S_MntGoldProds
166399    +          +     0.78481425439956 * S_MntMeatProducts
166400    +          +      0.6107688367092 * S_NumCatalogPurchases
166401    +          +    -0.39308332306764 * S_NumDealsPurchases
166402    +          +     1.13986700740733 * S_NumWebVisitsMonth
166403    +          +    -0.10095149614189 * S_RFMstat  +    -1.23708147180809 *
166404    +        S_Recency  +    -0.40344648497219 * S_Teenhome
166405    +          +    -0.21455944295735 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H14 = 0.72612390853906 * S_AcceptedCmpTotal + -1.03331426863575 * S_Frq
+ 0.44630396705527 * S_Income + -1.29648064151656 * S_Mnt + 0.20190465471738 * S_MntGoldProds
+ 0.78481425439956 * S_MntMeatProducts + 0.6107688367092 * S_NumCatalogPurchases +
-0.39308332306764 * S_NumDealsPurchases + 1.13986700740733 * S_NumWebVisitsMonth +
-0.10095149614189 * S_RFMstat + -1.23708147180809 * S_Recency + -0.40344648497219 * S_Teenhome
+ -0.21455944295735 * S_Year_Birth ;
166406    +   H15  =    -0.52000103453301 * S_AcceptedCmpTotal  +    -0.14144790393123 *
166407    +        S_Frq  +    -0.47209445285116 * S_Income  +     0.51267592710475 *
166408    +        S_Mnt  +     0.07876708495313 * S_MntGoldProds
166409    +          +    -0.61914125284805 * S_MntMeatProducts
166410    +          +    -0.54746366292992 * S_NumCatalogPurchases
166411    +          +     0.25925395549236 * S_NumDealsPurchases
166412    +          +    -0.60979686139101 * S_NumWebVisitsMonth
166413    +          +     0.08166171339337 * S_RFMstat  +     0.96981534293427 *
166414    +        S_Recency  +     0.36245179070453 * S_Teenhome
166415    +          +    -0.09267442906112 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H15 = -0.52000103453301 * S_AcceptedCmpTotal + -0.14144790393123 * S_Frq
+ -0.47209445285116 * S_Income + 0.51267592710475 * S_Mnt + 0.07876708495313 * S_MntGoldProds
+ -0.61914125284805 * S_MntMeatProducts + -0.54746366292992 * S_NumCatalogPurchases +
0.25925395549236 * S_NumDealsPurchases + -0.60979686139101 * S_NumWebVisitsMonth +
0.08166171339337 * S_RFMstat + 0.96981534293427 * S_Recency + 0.36245179070453 * S_Teenhome +
-0.09267442906112 * S_Year_Birth ;
166416    +   H11  = H11  +     0.01565392034595 * Marital_StatusDivorced
166417    +          +     0.22493072364483 * Marital_StatusMarried
166418    +          +    -0.34177799020181 * Marital_StatusSingle
166419    +          +    -0.04779249269081 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.01565392034595 * Marital_StatusDivorced + 0.22493072364483
* Marital_StatusMarried + -0.34177799020181 * Marital_StatusSingle + -0.04779249269081 *
Marital_StatusTogether ;
166420    +   H12  = H12  +     0.58482172427767 * Marital_StatusDivorced
166421    +          +     0.05031503177659 * Marital_StatusMarried
166422    +          +     0.28039335778718 * Marital_StatusSingle
166423    +          +     0.00709736205513 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.58482172427767 * Marital_StatusDivorced + 0.05031503177659
* Marital_StatusMarried + 0.28039335778718 * Marital_StatusSingle + 0.00709736205513 *
Marital_StatusTogether ;
166424    +   H13  = H13  +     0.35081594367456 * Marital_StatusDivorced
166425    +          +    -0.24395984745809 * Marital_StatusMarried
166426    +          +     0.22708224780413 * Marital_StatusSingle
166427    +          +    -0.34334833500124 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.35081594367456 * Marital_StatusDivorced +
-0.24395984745809 * Marital_StatusMarried + 0.22708224780413 * Marital_StatusSingle +
-0.34334833500124 * Marital_StatusTogether ;
166428    +   H14  = H14  +     0.85482961039457 * Marital_StatusDivorced
166429    +          +    -1.06411172500365 * Marital_StatusMarried
166430    +          +     0.57554615813234 * Marital_StatusSingle
166431    +          +    -0.91141797290702 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.85482961039457 * Marital_StatusDivorced +
-1.06411172500365 * Marital_StatusMarried + 0.57554615813234 * Marital_StatusSingle +
-0.91141797290702 * Marital_StatusTogether ;
166432    +   H15  = H15  +      0.2197825206844 * Marital_StatusDivorced
166433    +          +     0.66663600919341 * Marital_StatusMarried
166434    +          +    -0.69696969089357 * Marital_StatusSingle
166435    +          +     0.48232861459141 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.2197825206844 * Marital_StatusDivorced + 0.66663600919341
* Marital_StatusMarried + -0.69696969089357 * Marital_StatusSingle + 0.48232861459141 *
Marital_StatusTogether ;
166436    +   H11  =    -1.58463812409211 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.58463812409211 + H11 ;
166437    +   H12  =    -0.59413927784841 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.59413927784841 + H12 ;
166438    +   H13  =    -1.40790569062078 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -1.40790569062078 + H13 ;
166439    +   H14  =     -0.2073181654495 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -0.2073181654495 + H14 ;
166440    +   H15  =     1.99108524971007 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 1.99108524971007 + H15 ;
166441    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
166442    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
166443    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
166444    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
166445    +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
166446    +END;
MPRINT(EM_DIAGRAM):   END;
166447    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
166448    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
166449    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
166450    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
166451    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
166452    +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
166453    +END;
MPRINT(EM_DIAGRAM):   END;
166454    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
166455    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
166456    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
166457    +
166458    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
166459    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
166460    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
166461    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
166462    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
166463    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
166464    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
166465    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
166466    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
166467    +end;
MPRINT(EM_DIAGRAM):   end;
166468    +else do;
MPRINT(EM_DIAGRAM):   else do;
166469    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
166470    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
166471    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
166472    +   end;
MPRINT(EM_DIAGRAM):   end;
166473    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
166474    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
166475    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
166476    +   end;
MPRINT(EM_DIAGRAM):   end;
166477    +   else do;
MPRINT(EM_DIAGRAM):   else do;
166478    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
166479    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
166480    +   end;
MPRINT(EM_DIAGRAM):   end;
166481    +end;
MPRINT(EM_DIAGRAM):   end;
166482    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
166483    +   P_DepVar1  =     3.73071630847853 * H11  +     2.94025483165613 * H12
166484    +          +    -3.96191932636925 * H13  +     3.36339025105162 * H14
166485    +          +    -4.82596427081675 * H15 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 3.73071630847853 * H11 + 2.94025483165613 * H12 +
-3.96191932636925 * H13 + 3.36339025105162 * H14 + -4.82596427081675 * H15 ;
166486    +   P_DepVar1  =     0.43428060622858 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.43428060622858 + P_DepVar1 ;
166487    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
166488    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
166489    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
166490    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
166491    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
166492    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
166493    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
166494    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
166495    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
166496    +END;
MPRINT(EM_DIAGRAM):   END;
166497    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
166498    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
166499    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
166500    +END;
MPRINT(EM_DIAGRAM):   END;
166501    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
166502    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
166503    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
166504    +END;
MPRINT(EM_DIAGRAM):   END;
166505    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
166506    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
166507    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
166508    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
166509    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
166510    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
166511    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
166512    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
166513    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
166514    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
166515    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
166516    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
166517    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
166518    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
166519    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
166520    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
166521    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
166522    +END;
MPRINT(EM_DIAGRAM):   END;
166523    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
166524    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
166525    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
166526    +drop
166527    +H11
166528    +H12
166529    +H13
166530    +H14
166531    +H15
166532    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 ;
166533    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
166534    +* Renaming variables for Neural34;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural34;
166535    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
166536    +* Renaming Posterior variables for Neural34;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural34;
166537    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
166538    +drop Neural34_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural34_P_DepVar1;
166539    +Neural34_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural34_P_DepVar1 = P_DepVar1;
166540    +drop Neural34_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural34_P_DepVar0;
166541    +Neural34_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural34_P_DepVar0 = P_DepVar0;
166542    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
166543    +* Renaming _WARN_ variable for Neural34;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural34;
166544    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
166545    +length Neural34_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural34_WARN_ $4;
166546    +drop Neural34_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural34_WARN_;
166547    +Neural34_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural34_WARN_ = _WARN_;
166548    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
166549    +* Ensmbl21: Scoring Code of model 2 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl21: Scoring Code of model 2 of 5;
166550    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
166551    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
166552    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
166553    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
166554    +* NODE: AutoNeural42;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural42;
166555    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
166556    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
166557    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
166558    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
166559    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
166560    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
166561    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
166562    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
166563    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
166564    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
166565    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
166566    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
166567    +LENGTH _WARN_ $4
166568    +      F_DepVar  $ 12
166569    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
166570    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
166571    +
166572    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
166573    +
166574    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
166575    +
166576    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
166577    +
166578    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
166579    +
166580    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
166581    +
166582    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
166583    +
166584    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
166585    +
166586    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
166587    +
166588    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
166589    +
166590    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
166591    +
166592    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
166593    +
166594    +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
166595    +
166596    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
166597    +
166598    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
166599    +
166600    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
166601    +
166602    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
166603    +
166604    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
166605    +
166606    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
166607    +
166608    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
166609    +
166610    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
166611    +
166612    +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
166613    +
166614    +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
166615    +
166616    +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
166617    +
166618    +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
166619    +
166620    +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
166621    +
166622    +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
166623    +
166624    +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
166625    +
166626    +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
166627    +
166628    +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
166629    +
166630    +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
166631    +
166632    +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
166633    +
166634    +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
166635    +
166636    +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
166637    +
166638    +      label H2x1_6 = 'Hidden: H2x1_=6' ;
MPRINT(EM_DIAGRAM):   label H2x1_6 = 'Hidden: H2x1_=6' ;
166639    +
166640    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
166641    +
166642    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
166643    +
166644    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
166645    +
166646    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
166647    +
166648    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
166649    +
166650    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
166651    +
166652    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
166653    +
166654    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
166655    +
166656    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
166657    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
166658    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
166659    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
166660    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
166661    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
166662    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
166663    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
166664    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
166665    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
166666    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
166667    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
166668    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
166669    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
166670    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
166671    +end;
MPRINT(EM_DIAGRAM):   end;
166672    +else do;
MPRINT(EM_DIAGRAM):   else do;
166673    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
166674    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
166675    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
166676    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
166677    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
166678    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
166679    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
166680    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
166681    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
166682    +         end;
MPRINT(EM_DIAGRAM):   end;
166683    +         else do;
MPRINT(EM_DIAGRAM):   else do;
166684    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
166685    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
166686    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
166687    +            end;
MPRINT(EM_DIAGRAM):   end;
166688    +         end;
MPRINT(EM_DIAGRAM):   end;
166689    +      end;
MPRINT(EM_DIAGRAM):   end;
166690    +      else do;
MPRINT(EM_DIAGRAM):   else do;
166691    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
166692    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
166693    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
166694    +         end;
MPRINT(EM_DIAGRAM):   end;
166695    +      end;
MPRINT(EM_DIAGRAM):   end;
166696    +   end;
MPRINT(EM_DIAGRAM):   end;
166697    +   else do;
MPRINT(EM_DIAGRAM):   else do;
166698    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
166699    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
166700    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
166701    +      end;
MPRINT(EM_DIAGRAM):   end;
166702    +      else do;
MPRINT(EM_DIAGRAM):   else do;
166703    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
166704    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
166705    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
166706    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
166707    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
166708    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
166709    +         end;
MPRINT(EM_DIAGRAM):   end;
166710    +      end;
MPRINT(EM_DIAGRAM):   end;
166711    +   end;
MPRINT(EM_DIAGRAM):   end;
166712    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
166713    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
166714    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
166715    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
166716    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
166717    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
166718    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
166719    +   end;
MPRINT(EM_DIAGRAM):   end;
166720    +end;
MPRINT(EM_DIAGRAM):   end;
166721    +
166722    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
166723    +*** Checking missing input Interval
166724    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
166725    +
166726    +IF NMISS(
166727    +   AcceptedCmpTotal ,
166728    +   Frq ,
166729    +   Income ,
166730    +   Mnt ,
166731    +   MntGoldProds ,
166732    +   MntMeatProducts ,
166733    +   NumCatalogPurchases ,
166734    +   NumDealsPurchases ,
166735    +   NumWebVisitsMonth ,
166736    +   RFMstat ,
166737    +   Recency ,
166738    +   Teenhome ,
166739    +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntGoldProds ,
MntMeatProducts , NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , RFMstat ,
Recency , Teenhome , Year_Birth ) THEN DO;
166740    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
166741    +
166742    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
166743    +END;
MPRINT(EM_DIAGRAM):   END;
166744    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
166745    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
166746    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
166747    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
166748    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
166749    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
166750    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
166751    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
166752    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
166753    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
166754    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
166755    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
166756    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
166757    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
166758    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
166759    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
166760    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
166761    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
166762    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
166763    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
166764    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
166765    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
166766    +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
166767    +END;
MPRINT(EM_DIAGRAM):   END;
166768    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
166769    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
166770    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
166771    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
166772    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
166773    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
166774    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
166775    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
166776    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
166777    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
166778    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
166779    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
166780    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
166781    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
166782    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
166783    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
166784    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
166785    +   ELSE S_NumCatalogPurchases
166786    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
166787    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
166788    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
166789    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
166790    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
166791    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
166792    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
166793    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
166794    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
166795    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
166796    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
166797    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
166798    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
166799    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
166800    +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
166801    +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
166802    +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
166803    +END;
MPRINT(EM_DIAGRAM):   END;
166804    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
166805    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
166806    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
166807    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
166808    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
166809    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
166810    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
166811    +   H1x1_1  =    -3.92905088817122 * S_AcceptedCmpTotal
166812    +          +    -4.76567955922662 * S_Frq  +    -3.20305851407308 * S_Income
166813    +          +     10.4290156082038 * S_Mnt  +     2.82139196372317 *
166814    +        S_MntGoldProds  +    -4.54749029525518 * S_MntMeatProducts
166815    +          +    -12.1201262560598 * S_NumCatalogPurchases
166816    +          +    -7.64265449386917 * S_NumDealsPurchases
166817    +          +     -0.8154661733691 * S_NumWebVisitsMonth
166818    +          +    -7.34275682075933 * S_RFMstat  +     3.14025498790893 *
166819    +        S_Recency  +     3.79010135100643 * S_Teenhome
166820    +          +    -1.18831354068466 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -3.92905088817122 * S_AcceptedCmpTotal + -4.76567955922662 *
S_Frq + -3.20305851407308 * S_Income + 10.4290156082038 * S_Mnt + 2.82139196372317 *
S_MntGoldProds + -4.54749029525518 * S_MntMeatProducts + -12.1201262560598 *
S_NumCatalogPurchases + -7.64265449386917 * S_NumDealsPurchases + -0.8154661733691 *
S_NumWebVisitsMonth + -7.34275682075933 * S_RFMstat + 3.14025498790893 * S_Recency +
3.79010135100643 * S_Teenhome + -1.18831354068466 * S_Year_Birth ;
166821    +   H1x1_2  =    -4.72019183577823 * S_AcceptedCmpTotal
166822    +          +     5.14902294151494 * S_Frq  +     -2.7967028726716 * S_Income
166823    +          +     7.90170532262596 * S_Mnt  +    -0.27896242131344 *
166824    +        S_MntGoldProds  +    -6.13177486713562 * S_MntMeatProducts
166825    +          +    -5.64377068696071 * S_NumCatalogPurchases
166826    +          +       1.315880732417 * S_NumDealsPurchases
166827    +          +    -7.12689902819995 * S_NumWebVisitsMonth
166828    +          +     -0.1333171344564 * S_RFMstat  +     8.57178329047956 *
166829    +        S_Recency  +     2.42655161118896 * S_Teenhome
166830    +          +     0.41845495922131 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -4.72019183577823 * S_AcceptedCmpTotal + 5.14902294151494 *
S_Frq + -2.7967028726716 * S_Income + 7.90170532262596 * S_Mnt + -0.27896242131344 *
S_MntGoldProds + -6.13177486713562 * S_MntMeatProducts + -5.64377068696071 *
S_NumCatalogPurchases + 1.315880732417 * S_NumDealsPurchases + -7.12689902819995 *
S_NumWebVisitsMonth + -0.1333171344564 * S_RFMstat + 8.57178329047956 * S_Recency +
2.42655161118896 * S_Teenhome + 0.41845495922131 * S_Year_Birth ;
166831    +   H1x1_3  =    -3.47660178529996 * S_AcceptedCmpTotal
166832    +          +     6.36750571377116 * S_Frq  +    -3.65638554203354 * S_Income
166833    +          +     5.03085244876136 * S_Mnt  +    -1.53184712146016 *
166834    +        S_MntGoldProds  +    -11.4803326240536 * S_MntMeatProducts
166835    +          +    -7.71653347900468 * S_NumCatalogPurchases
166836    +          +    -2.29382480020793 * S_NumDealsPurchases
166837    +          +    -3.92350308032578 * S_NumWebVisitsMonth
166838    +          +      0.1666173174602 * S_RFMstat  +      5.5545699438819 *
166839    +        S_Recency  +     1.88830044274756 * S_Teenhome
166840    +          +     0.36177301880441 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -3.47660178529996 * S_AcceptedCmpTotal + 6.36750571377116 *
S_Frq + -3.65638554203354 * S_Income + 5.03085244876136 * S_Mnt + -1.53184712146016 *
S_MntGoldProds + -11.4803326240536 * S_MntMeatProducts + -7.71653347900468 *
S_NumCatalogPurchases + -2.29382480020793 * S_NumDealsPurchases + -3.92350308032578 *
S_NumWebVisitsMonth + 0.1666173174602 * S_RFMstat + 5.5545699438819 * S_Recency +
1.88830044274756 * S_Teenhome + 0.36177301880441 * S_Year_Birth ;
166841    +   H1x1_4  =     3.46597508500309 * S_AcceptedCmpTotal
166842    +          +    -3.55913679518365 * S_Frq  +     -3.8279864380535 * S_Income
166843    +          +     4.37031319397754 * S_Mnt  +     0.25558899887189 *
166844    +        S_MntGoldProds  +     1.30937005137526 * S_MntMeatProducts
166845    +          +     0.50178849511862 * S_NumCatalogPurchases
166846    +          +     3.33915340676542 * S_NumDealsPurchases
166847    +          +     2.99171363234904 * S_NumWebVisitsMonth
166848    +          +    -1.10860117011224 * S_RFMstat  +     -5.2144291963152 *
166849    +        S_Recency  +     1.84778865722952 * S_Teenhome
166850    +          +     1.48264084751626 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 3.46597508500309 * S_AcceptedCmpTotal + -3.55913679518365 *
S_Frq + -3.8279864380535 * S_Income + 4.37031319397754 * S_Mnt + 0.25558899887189 *
S_MntGoldProds + 1.30937005137526 * S_MntMeatProducts + 0.50178849511862 *
S_NumCatalogPurchases + 3.33915340676542 * S_NumDealsPurchases + 2.99171363234904 *
S_NumWebVisitsMonth + -1.10860117011224 * S_RFMstat + -5.2144291963152 * S_Recency +
1.84778865722952 * S_Teenhome + 1.48264084751626 * S_Year_Birth ;
166851    +   H1x1_5  =    -3.28077802512331 * S_AcceptedCmpTotal
166852    +          +     3.26112701694144 * S_Frq  +    -3.51257256391539 * S_Income
166853    +          +     -13.277904245629 * S_Mnt  +    -0.08185099069039 *
166854    +        S_MntGoldProds  +      2.6349809613264 * S_MntMeatProducts
166855    +          +    -5.23430097842472 * S_NumCatalogPurchases
166856    +          +    -1.25644862473488 * S_NumDealsPurchases
166857    +          +     -3.0943337340276 * S_NumWebVisitsMonth
166858    +          +     0.96429102250453 * S_RFMstat  +     4.60373013139143 *
166859    +        S_Recency  +     1.52557456336148 * S_Teenhome
166860    +          +     0.00287578113165 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -3.28077802512331 * S_AcceptedCmpTotal + 3.26112701694144 *
S_Frq + -3.51257256391539 * S_Income + -13.277904245629 * S_Mnt + -0.08185099069039 *
S_MntGoldProds + 2.6349809613264 * S_MntMeatProducts + -5.23430097842472 *
S_NumCatalogPurchases + -1.25644862473488 * S_NumDealsPurchases + -3.0943337340276 *
S_NumWebVisitsMonth + 0.96429102250453 * S_RFMstat + 4.60373013139143 * S_Recency +
1.52557456336148 * S_Teenhome + 0.00287578113165 * S_Year_Birth ;
166861    +   H1x1_1  = H1x1_1  +     1.77432710413329 * Marital_StatusDivorced
166862    +          +     5.12496303990022 * Marital_StatusMarried
166863    +          +    -7.61364369696186 * Marital_StatusSingle
166864    +          +     2.78937374370395 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 1.77432710413329 * Marital_StatusDivorced +
5.12496303990022 * Marital_StatusMarried + -7.61364369696186 * Marital_StatusSingle +
2.78937374370395 * Marital_StatusTogether ;
166865    +   H1x1_2  = H1x1_2  +    -5.49070434381597 * Marital_StatusDivorced
166866    +          +     7.65332274940308 * Marital_StatusMarried
166867    +          +    -5.13332947688313 * Marital_StatusSingle
166868    +          +     8.25159601985572 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -5.49070434381597 * Marital_StatusDivorced +
7.65332274940308 * Marital_StatusMarried + -5.13332947688313 * Marital_StatusSingle +
8.25159601985572 * Marital_StatusTogether ;
166869    +   H1x1_3  = H1x1_3  +     1.57910552070948 * Marital_StatusDivorced
166870    +          +     7.95162959069432 * Marital_StatusMarried
166871    +          +    -6.10797604390061 * Marital_StatusSingle
166872    +          +     2.98577039618027 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 1.57910552070948 * Marital_StatusDivorced +
7.95162959069432 * Marital_StatusMarried + -6.10797604390061 * Marital_StatusSingle +
2.98577039618027 * Marital_StatusTogether ;
166873    +   H1x1_4  = H1x1_4  +     3.65411081783958 * Marital_StatusDivorced
166874    +          +     5.45977621823616 * Marital_StatusMarried
166875    +          +    -10.3527985391218 * Marital_StatusSingle
166876    +          +     4.66094015963389 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 3.65411081783958 * Marital_StatusDivorced +
5.45977621823616 * Marital_StatusMarried + -10.3527985391218 * Marital_StatusSingle +
4.66094015963389 * Marital_StatusTogether ;
166877    +   H1x1_5  = H1x1_5  +     1.57864743151562 * Marital_StatusDivorced
166878    +          +     8.15909630638185 * Marital_StatusMarried
166879    +          +    -5.88497367282032 * Marital_StatusSingle
166880    +          +     3.05474303626666 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 1.57864743151562 * Marital_StatusDivorced +
8.15909630638185 * Marital_StatusMarried + -5.88497367282032 * Marital_StatusSingle +
3.05474303626666 * Marital_StatusTogether ;
166881    +   H1x1_1  =    -1.55078746609233 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.55078746609233 + H1x1_1 ;
166882    +   H1x1_2  =     5.40474806112383 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 5.40474806112383 + H1x1_2 ;
166883    +   H1x1_3  =     11.2733164995662 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 11.2733164995662 + H1x1_3 ;
166884    +   H1x1_4  =    -7.78487963966384 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -7.78487963966384 + H1x1_4 ;
166885    +   H1x1_5  =      3.8784406873535 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 3.8784406873535 + H1x1_5 ;
166886    +   H1x1_6  = 0;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0;
166887    +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
166888    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
166889    +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
166890    +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
166891    +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
166892    +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
166893    +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
166894    +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
166895    +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
166896    +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
166897    +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
166898    +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
166899    +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
166900    +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
166901    +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
166902    +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
166903    +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
166904    +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
166905    +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
166906    +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
166907    +END;
MPRINT(EM_DIAGRAM):   END;
166908    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
166909    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
166910    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
166911    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
166912    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
166913    +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
166914    +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
166915    +END;
MPRINT(EM_DIAGRAM):   END;
166916    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
166917    +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
166918    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
166919    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
166920    +   H1x2_1  =     0.07453146398445 * S_AcceptedCmpTotal
166921    +          +     0.17438368465616 * S_Frq  +     0.97121905855093 * S_Income
166922    +          +    -0.15757686261675 * S_Mnt  +     0.28678754855648 *
166923    +        S_MntGoldProds  +     2.03999655184815 * S_MntMeatProducts
166924    +          +      0.8747576336553 * S_NumCatalogPurchases
166925    +          +    -0.23551985234916 * S_NumDealsPurchases
166926    +          +     0.83901499225112 * S_NumWebVisitsMonth
166927    +          +     -0.7643570473353 * S_RFMstat  +      0.0823609346051 *
166928    +        S_Recency  +    -0.38340703993831 * S_Teenhome
166929    +          +     1.16037573405943 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.07453146398445 * S_AcceptedCmpTotal + 0.17438368465616 *
S_Frq + 0.97121905855093 * S_Income + -0.15757686261675 * S_Mnt + 0.28678754855648 *
S_MntGoldProds + 2.03999655184815 * S_MntMeatProducts + 0.8747576336553 *
S_NumCatalogPurchases + -0.23551985234916 * S_NumDealsPurchases + 0.83901499225112 *
S_NumWebVisitsMonth + -0.7643570473353 * S_RFMstat + 0.0823609346051 * S_Recency +
-0.38340703993831 * S_Teenhome + 1.16037573405943 * S_Year_Birth ;
166930    +   H1x2_2  =      -2.285017059996 * S_AcceptedCmpTotal
166931    +          +    -0.29646095672581 * S_Frq  +     -3.5024410668082 * S_Income
166932    +          +    -2.12091528193185 * S_Mnt  +    -1.48506012188621 *
166933    +        S_MntGoldProds  +    -1.38316375865608 * S_MntMeatProducts
166934    +          +    -0.99107054453387 * S_NumCatalogPurchases
166935    +          +    -0.68379823410573 * S_NumDealsPurchases
166936    +          +    -1.67939872609259 * S_NumWebVisitsMonth
166937    +          +     0.49106697429539 * S_RFMstat  +    -0.01117108974211 *
166938    +        S_Recency  +    -1.65033346710833 * S_Teenhome
166939    +          +    -1.03897054098621 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -2.285017059996 * S_AcceptedCmpTotal + -0.29646095672581 *
S_Frq + -3.5024410668082 * S_Income + -2.12091528193185 * S_Mnt + -1.48506012188621 *
S_MntGoldProds + -1.38316375865608 * S_MntMeatProducts + -0.99107054453387 *
S_NumCatalogPurchases + -0.68379823410573 * S_NumDealsPurchases + -1.67939872609259 *
S_NumWebVisitsMonth + 0.49106697429539 * S_RFMstat + -0.01117108974211 * S_Recency +
-1.65033346710833 * S_Teenhome + -1.03897054098621 * S_Year_Birth ;
166940    +   H1x2_3  =      2.9562672276462 * S_AcceptedCmpTotal
166941    +          +    -0.19531439441895 * S_Frq  +      0.3125078734463 * S_Income
166942    +          +     -1.6099267525002 * S_Mnt  +    -0.36573328507463 *
166943    +        S_MntGoldProds  +     -0.3392853565114 * S_MntMeatProducts
166944    +          +      1.4506330104932 * S_NumCatalogPurchases
166945    +          +     0.20085283861849 * S_NumDealsPurchases
166946    +          +     2.37974383924154 * S_NumWebVisitsMonth
166947    +          +     -0.1106906484364 * S_RFMstat  +    -3.36701384866793 *
166948    +        S_Recency  +     0.60726269989058 * S_Teenhome
166949    +          +     0.51474814816173 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_3 = 2.9562672276462 * S_AcceptedCmpTotal + -0.19531439441895 *
S_Frq + 0.3125078734463 * S_Income + -1.6099267525002 * S_Mnt + -0.36573328507463 *
S_MntGoldProds + -0.3392853565114 * S_MntMeatProducts + 1.4506330104932 *
S_NumCatalogPurchases + 0.20085283861849 * S_NumDealsPurchases + 2.37974383924154 *
S_NumWebVisitsMonth + -0.1106906484364 * S_RFMstat + -3.36701384866793 * S_Recency +
0.60726269989058 * S_Teenhome + 0.51474814816173 * S_Year_Birth ;
166950    +   H1x2_4  =    -3.19375607611292 * S_AcceptedCmpTotal
166951    +          +    -1.28391627024222 * S_Frq  +     1.20886875907222 * S_Income
166952    +          +     0.33241907162962 * S_Mnt  +     0.81131852742978 *
166953    +        S_MntGoldProds  +     0.66955477854362 * S_MntMeatProducts
166954    +          +    -0.79952426911069 * S_NumCatalogPurchases
166955    +          +    -0.70571099772216 * S_NumDealsPurchases
166956    +          +    -0.32158728049114 * S_NumWebVisitsMonth
166957    +          +    -0.83126265863782 * S_RFMstat  +     1.49830148501327 *
166958    +        S_Recency  +     2.29389047813725 * S_Teenhome
166959    +          +     0.04615513391624 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -3.19375607611292 * S_AcceptedCmpTotal + -1.28391627024222 *
S_Frq + 1.20886875907222 * S_Income + 0.33241907162962 * S_Mnt + 0.81131852742978 *
S_MntGoldProds + 0.66955477854362 * S_MntMeatProducts + -0.79952426911069 *
S_NumCatalogPurchases + -0.70571099772216 * S_NumDealsPurchases + -0.32158728049114 *
S_NumWebVisitsMonth + -0.83126265863782 * S_RFMstat + 1.49830148501327 * S_Recency +
2.29389047813725 * S_Teenhome + 0.04615513391624 * S_Year_Birth ;
166960    +   H1x2_5  =     -0.6002425930451 * S_AcceptedCmpTotal
166961    +          +    -0.86762771301251 * S_Frq  +    -0.57793933969656 * S_Income
166962    +          +     0.41975808190408 * S_Mnt  +    -0.13242897225011 *
166963    +        S_MntGoldProds  +    -1.44402585881872 * S_MntMeatProducts
166964    +          +    -0.41491605544255 * S_NumCatalogPurchases
166965    +          +     0.49374983047507 * S_NumDealsPurchases
166966    +          +    -1.38692718220359 * S_NumWebVisitsMonth
166967    +          +    -0.07580803465143 * S_RFMstat  +      0.4152505934779 *
166968    +        S_Recency  +     1.29605991841828 * S_Teenhome
166969    +          +     2.17160180088465 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.6002425930451 * S_AcceptedCmpTotal + -0.86762771301251 *
S_Frq + -0.57793933969656 * S_Income + 0.41975808190408 * S_Mnt + -0.13242897225011 *
S_MntGoldProds + -1.44402585881872 * S_MntMeatProducts + -0.41491605544255 *
S_NumCatalogPurchases + 0.49374983047507 * S_NumDealsPurchases + -1.38692718220359 *
S_NumWebVisitsMonth + -0.07580803465143 * S_RFMstat + 0.4152505934779 * S_Recency +
1.29605991841828 * S_Teenhome + 2.17160180088465 * S_Year_Birth ;
166970    +   H1x2_1  = H1x2_1  +     0.77674448865903 * Marital_StatusDivorced
166971    +          +    -1.29227303709115 * Marital_StatusMarried
166972    +          +     0.71446782242025 * Marital_StatusSingle
166973    +          +     0.55295867102727 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 0.77674448865903 * Marital_StatusDivorced +
-1.29227303709115 * Marital_StatusMarried + 0.71446782242025 * Marital_StatusSingle +
0.55295867102727 * Marital_StatusTogether ;
166974    +   H1x2_2  = H1x2_2  +     -0.1845223373129 * Marital_StatusDivorced
166975    +          +      2.0815223604364 * Marital_StatusMarried
166976    +          +     0.79462013188709 * Marital_StatusSingle
166977    +          +     0.20668835346022 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.1845223373129 * Marital_StatusDivorced +
2.0815223604364 * Marital_StatusMarried + 0.79462013188709 * Marital_StatusSingle +
0.20668835346022 * Marital_StatusTogether ;
166978    +   H1x2_3  = H1x2_3  +    -1.02774258915556 * Marital_StatusDivorced
166979    +          +     0.44769683627357 * Marital_StatusMarried
166980    +          +     1.09957357551209 * Marital_StatusSingle
166981    +          +     0.98246644516303 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -1.02774258915556 * Marital_StatusDivorced +
0.44769683627357 * Marital_StatusMarried + 1.09957357551209 * Marital_StatusSingle +
0.98246644516303 * Marital_StatusTogether ;
166982    +   H1x2_4  = H1x2_4  +     1.02578628033933 * Marital_StatusDivorced
166983    +          +    -0.71096069683657 * Marital_StatusMarried
166984    +          +    -0.46849808497503 * Marital_StatusSingle
166985    +          +    -0.50186472808298 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 1.02578628033933 * Marital_StatusDivorced +
-0.71096069683657 * Marital_StatusMarried + -0.46849808497503 * Marital_StatusSingle +
-0.50186472808298 * Marital_StatusTogether ;
166986    +   H1x2_5  = H1x2_5  +     0.83514340443964 * Marital_StatusDivorced
166987    +          +     0.21000014809177 * Marital_StatusMarried
166988    +          +    -1.05959388759825 * Marital_StatusSingle
166989    +          +     -0.8202251717493 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.83514340443964 * Marital_StatusDivorced +
0.21000014809177 * Marital_StatusMarried + -1.05959388759825 * Marital_StatusSingle +
-0.8202251717493 * Marital_StatusTogether ;
166990    +   H1x2_1  =     0.66244588339698 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.66244588339698 + H1x2_1 ;
166991    +   H1x2_2  =     0.36306484617725 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.36306484617725 + H1x2_2 ;
166992    +   H1x2_3  =     0.00299288434405 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = 0.00299288434405 + H1x2_3 ;
166993    +   H1x2_4  =     0.32206403734945 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.32206403734945 + H1x2_4 ;
166994    +   H1x2_5  =     0.48514364636978 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 0.48514364636978 + H1x2_5 ;
166995    +   H1x2_6  = 0;
MPRINT(EM_DIAGRAM):   H1x2_6 = 0;
166996    +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
166997    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
166998    +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
166999    +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
167000    +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
167001    +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
167002    +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
167003    +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
167004    +   H1x2_4  = EXP(H1x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(H1x2_4 - _MAX_);
167005    +   _SUM_ = _SUM_ + H1x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_4 ;
167006    +   H1x2_5  = EXP(H1x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(H1x2_5 - _MAX_);
167007    +   _SUM_ = _SUM_ + H1x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_5 ;
167008    +   H1x2_6  = EXP(H1x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(H1x2_6 - _MAX_);
167009    +   _SUM_ = _SUM_ + H1x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_6 ;
167010    +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
167011    +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
167012    +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
167013    +   H1x2_4  = H1x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 / _SUM_;
167014    +   H1x2_5  = H1x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 / _SUM_;
167015    +   H1x2_6  = H1x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 / _SUM_;
167016    +END;
MPRINT(EM_DIAGRAM):   END;
167017    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
167018    +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
167019    +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
167020    +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
167021    +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
167022    +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
167023    +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
167024    +END;
MPRINT(EM_DIAGRAM):   END;
167025    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
167026    +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
167027    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
167028    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
167029    +   H2x1_1  =     5.34062678932931 * H1x1_1  +     7.71604112891627 * H1x1_2
167030    +          +     7.54377937186103 * H1x1_3  +    -5.90943850663966 * H1x1_4
167031    +          +    -6.06522890475814 * H1x1_5  +    -7.94470945127082 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 5.34062678932931 * H1x1_1 + 7.71604112891627 * H1x1_2 +
7.54377937186103 * H1x1_3 + -5.90943850663966 * H1x1_4 + -6.06522890475814 * H1x1_5 +
-7.94470945127082 * H1x1_6 ;
167032    +   H2x1_2  =      1.1479485803131 * H1x1_1  +      1.4482835893576 * H1x1_2
167033    +          +    -0.15220644394866 * H1x1_3  +    -1.30000676790854 * H1x1_4
167034    +          +    -0.49333138568117 * H1x1_5  +    -1.96124154717115 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.1479485803131 * H1x1_1 + 1.4482835893576 * H1x1_2 +
-0.15220644394866 * H1x1_3 + -1.30000676790854 * H1x1_4 + -0.49333138568117 * H1x1_5 +
-1.96124154717115 * H1x1_6 ;
167035    +   H2x1_3  =     2.12915623251937 * H1x1_1  +     4.39530013559682 * H1x1_2
167036    +          +     3.38050961443392 * H1x1_3  +    -5.12182301645649 * H1x1_4
167037    +          +    -3.74697079524831 * H1x1_5  +    -5.26174801543685 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 2.12915623251937 * H1x1_1 + 4.39530013559682 * H1x1_2 +
3.38050961443392 * H1x1_3 + -5.12182301645649 * H1x1_4 + -3.74697079524831 * H1x1_5 +
-5.26174801543685 * H1x1_6 ;
167038    +   H2x1_4  =     0.54854810712303 * H1x1_1  +      1.6486650469525 * H1x1_2
167039    +          +     1.84563084742932 * H1x1_3  +    -2.43710509923951 * H1x1_4
167040    +          +     0.03038093596976 * H1x1_5  +    -1.34566786751269 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 0.54854810712303 * H1x1_1 + 1.6486650469525 * H1x1_2 +
1.84563084742932 * H1x1_3 + -2.43710509923951 * H1x1_4 + 0.03038093596976 * H1x1_5 +
-1.34566786751269 * H1x1_6 ;
167041    +   H2x1_5  =     0.89845480530178 * H1x1_1  +     3.19967829294268 * H1x1_2
167042    +          +     3.58592569542093 * H1x1_3  +    -3.76417733693485 * H1x1_4
167043    +          +     -4.1568039640005 * H1x1_5  +    -4.42895004794637 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = 0.89845480530178 * H1x1_1 + 3.19967829294268 * H1x1_2 +
3.58592569542093 * H1x1_3 + -3.76417733693485 * H1x1_4 + -4.1568039640005 * H1x1_5 +
-4.42895004794637 * H1x1_6 ;
167044    +   H2x1_1  = H2x1_1  +     0.44545310705069 * H1x2_1
167045    +          +     2.72471946580982 * H1x2_2  +    -1.42856846603531 * H1x2_3
167046    +          +     0.25357521888082 * H1x2_4  +    -1.25902268741411 * H1x2_5
167047    +          +    -1.70956044020454 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 0.44545310705069 * H1x2_1 + 2.72471946580982 * H1x2_2
+ -1.42856846603531 * H1x2_3 + 0.25357521888082 * H1x2_4 + -1.25902268741411 * H1x2_5 +
-1.70956044020454 * H1x2_6 ;
167048    +   H2x1_2  = H2x1_2  +      0.9465771639497 * H1x2_1
167049    +          +    -0.41110969777104 * H1x2_2  +    -0.92834816798625 * H1x2_3
167050    +          +     -1.7337755087443 * H1x2_4  +     -1.2522448489667 * H1x2_5
167051    +          +    -0.90111756793979 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.9465771639497 * H1x2_1 + -0.41110969777104 * H1x2_2
+ -0.92834816798625 * H1x2_3 + -1.7337755087443 * H1x2_4 + -1.2522448489667 * H1x2_5 +
-0.90111756793979 * H1x2_6 ;
167052    +   H2x1_3  = H2x1_3  +    -0.22355080983787 * H1x2_1
167053    +          +    -0.18918346120545 * H1x2_2  +    -1.50592518382263 * H1x2_3
167054    +          +    -1.00672320426732 * H1x2_4  +    -1.09510249463921 * H1x2_5
167055    +          +     0.83089577154267 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -0.22355080983787 * H1x2_1 + -0.18918346120545 *
H1x2_2 + -1.50592518382263 * H1x2_3 + -1.00672320426732 * H1x2_4 + -1.09510249463921 * H1x2_5
+ 0.83089577154267 * H1x2_6 ;
167056    +   H2x1_4  = H2x1_4  +    -0.74505363577487 * H1x2_1
167057    +          +     0.41544439689687 * H1x2_2  +    -0.11467073820729 * H1x2_3
167058    +          +    -2.16913690278917 * H1x2_4  +     1.07667011067144 * H1x2_5
167059    +          +    -0.21291665093094 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + -0.74505363577487 * H1x2_1 + 0.41544439689687 * H1x2_2
+ -0.11467073820729 * H1x2_3 + -2.16913690278917 * H1x2_4 + 1.07667011067144 * H1x2_5 +
-0.21291665093094 * H1x2_6 ;
167060    +   H2x1_5  = H2x1_5  +    -0.22639397151159 * H1x2_1
167061    +          +     0.59976504799464 * H1x2_2  +    -1.19497833953318 * H1x2_3
167062    +          +     0.40681132265012 * H1x2_4  +    -1.18142813082248 * H1x2_5
167063    +          +     0.28627108561279 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + -0.22639397151159 * H1x2_1 + 0.59976504799464 * H1x2_2
+ -1.19497833953318 * H1x2_3 + 0.40681132265012 * H1x2_4 + -1.18142813082248 * H1x2_5 +
0.28627108561279 * H1x2_6 ;
167064    +   H2x1_1  =     0.80837297417824 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 0.80837297417824 + H2x1_1 ;
167065    +   H2x1_2  =    -3.15918654233626 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -3.15918654233626 + H2x1_2 ;
167066    +   H2x1_3  =     -1.1148455701308 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -1.1148455701308 + H2x1_3 ;
167067    +   H2x1_4  =    -2.43637271773179 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -2.43637271773179 + H2x1_4 ;
167068    +   H2x1_5  =     -1.5068240097035 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -1.5068240097035 + H2x1_5 ;
167069    +   H2x1_6  = 0;
MPRINT(EM_DIAGRAM):   H2x1_6 = 0;
167070    +   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 , H2x1_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 , H2x1_6 );
167071    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
167072    +   H2x1_1  = EXP(H2x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_1 = EXP(H2x1_1 - _MAX_);
167073    +   _SUM_ = _SUM_ + H2x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_1 ;
167074    +   H2x1_2  = EXP(H2x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_2 = EXP(H2x1_2 - _MAX_);
167075    +   _SUM_ = _SUM_ + H2x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_2 ;
167076    +   H2x1_3  = EXP(H2x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_3 = EXP(H2x1_3 - _MAX_);
167077    +   _SUM_ = _SUM_ + H2x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_3 ;
167078    +   H2x1_4  = EXP(H2x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_4 = EXP(H2x1_4 - _MAX_);
167079    +   _SUM_ = _SUM_ + H2x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_4 ;
167080    +   H2x1_5  = EXP(H2x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_5 = EXP(H2x1_5 - _MAX_);
167081    +   _SUM_ = _SUM_ + H2x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_5 ;
167082    +   H2x1_6  = EXP(H2x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_6 = EXP(H2x1_6 - _MAX_);
167083    +   _SUM_ = _SUM_ + H2x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_6 ;
167084    +   H2x1_1  = H2x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 / _SUM_;
167085    +   H2x1_2  = H2x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 / _SUM_;
167086    +   H2x1_3  = H2x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 / _SUM_;
167087    +   H2x1_4  = H2x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 / _SUM_;
167088    +   H2x1_5  = H2x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 / _SUM_;
167089    +   H2x1_6  = H2x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 / _SUM_;
167090    +END;
MPRINT(EM_DIAGRAM):   END;
167091    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
167092    +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
167093    +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
167094    +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
167095    +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
167096    +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
167097    +   H2x1_6  = .;
MPRINT(EM_DIAGRAM):   H2x1_6 = .;
167098    +END;
MPRINT(EM_DIAGRAM):   END;
167099    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
167100    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
167101    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
167102    +
167103    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
167104    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
167105    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
167106    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
167107    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
167108    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
167109    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
167110    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
167111    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
167112    +end;
MPRINT(EM_DIAGRAM):   end;
167113    +else do;
MPRINT(EM_DIAGRAM):   else do;
167114    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
167115    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
167116    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
167117    +   end;
MPRINT(EM_DIAGRAM):   end;
167118    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
167119    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
167120    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
167121    +   end;
MPRINT(EM_DIAGRAM):   end;
167122    +   else do;
MPRINT(EM_DIAGRAM):   else do;
167123    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
167124    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
167125    +   end;
MPRINT(EM_DIAGRAM):   end;
167126    +end;
MPRINT(EM_DIAGRAM):   end;
167127    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
167128    +   P_DepVar1  =    -14.9408685199347 * H2x1_1  +     1.48309430635242 * H2x1_2
167129    +          +     -4.3496216751271 * H2x1_3  +     0.01239249943556 * H2x1_4
167130    +          +    -6.27169756239783 * H2x1_5  +     2.70843493957574 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -14.9408685199347 * H2x1_1 + 1.48309430635242 * H2x1_2 +
-4.3496216751271 * H2x1_3 + 0.01239249943556 * H2x1_4 + -6.27169756239783 * H2x1_5 +
2.70843493957574 * H2x1_6 ;
167131    +   P_DepVar1  =     5.67267561171469 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 5.67267561171469 + P_DepVar1 ;
167132    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
167133    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
167134    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
167135    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
167136    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
167137    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
167138    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
167139    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
167140    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
167141    +END;
MPRINT(EM_DIAGRAM):   END;
167142    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
167143    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
167144    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
167145    +END;
MPRINT(EM_DIAGRAM):   END;
167146    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
167147    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
167148    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
167149    +END;
MPRINT(EM_DIAGRAM):   END;
167150    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
167151    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
167152    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
167153    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
167154    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
167155    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
167156    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
167157    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
167158    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
167159    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
167160    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
167161    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
167162    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
167163    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
167164    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
167165    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
167166    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
167167    +END;
MPRINT(EM_DIAGRAM):   END;
167168    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
167169    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
167170    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
167171    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
167172    +* Renaming variables for AutoNeural42;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural42;
167173    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
167174    +* Renaming Posterior variables for AutoNeural42;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural42;
167175    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
167176    +drop AutoNeural42_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural42_P_DepVar1;
167177    +AutoNeural42_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural42_P_DepVar1 = P_DepVar1;
167178    +drop AutoNeural42_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural42_P_DepVar0;
167179    +AutoNeural42_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural42_P_DepVar0 = P_DepVar0;
167180    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
167181    +* Renaming _WARN_ variable for AutoNeural42;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural42;
167182    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
167183    +length AutoNeural42_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural42_WARN_ $4;
167184    +drop AutoNeural42_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural42_WARN_;
167185    +AutoNeural42_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural42_WARN_ = _WARN_;
167186    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
167187    +* Ensmbl21: Scoring Code of model 3 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl21: Scoring Code of model 3 of 5;
167188    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
167189    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
167190    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
167191    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
167192    +* NODE: AutoNeural46;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural46;
167193    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
167194    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
167195    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
167196    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
167197    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
167198    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
167199    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
167200    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
167201    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
167202    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
167203    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
167204    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
167205    +LENGTH _WARN_ $4
167206    +      F_DepVar  $ 12
167207    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
167208    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
167209    +
167210    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
167211    +
167212    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
167213    +
167214    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
167215    +
167216    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
167217    +
167218    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
167219    +
167220    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
167221    +
167222    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
167223    +
167224    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
167225    +
167226    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
167227    +
167228    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
167229    +
167230    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
167231    +
167232    +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
167233    +
167234    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
167235    +
167236    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
167237    +
167238    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
167239    +
167240    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
167241    +
167242    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
167243    +
167244    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
167245    +
167246    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
167247    +
167248    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
167249    +
167250    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
167251    +
167252    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
167253    +
167254    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
167255    +
167256    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
167257    +
167258    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
167259    +
167260    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
167261    +
167262    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
167263    +
167264    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
167265    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
167266    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
167267    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
167268    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
167269    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
167270    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
167271    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
167272    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
167273    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
167274    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
167275    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
167276    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
167277    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
167278    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
167279    +end;
MPRINT(EM_DIAGRAM):   end;
167280    +else do;
MPRINT(EM_DIAGRAM):   else do;
167281    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
167282    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
167283    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
167284    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
167285    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
167286    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
167287    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
167288    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
167289    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
167290    +         end;
MPRINT(EM_DIAGRAM):   end;
167291    +         else do;
MPRINT(EM_DIAGRAM):   else do;
167292    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
167293    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
167294    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
167295    +            end;
MPRINT(EM_DIAGRAM):   end;
167296    +         end;
MPRINT(EM_DIAGRAM):   end;
167297    +      end;
MPRINT(EM_DIAGRAM):   end;
167298    +      else do;
MPRINT(EM_DIAGRAM):   else do;
167299    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
167300    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
167301    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
167302    +         end;
MPRINT(EM_DIAGRAM):   end;
167303    +      end;
MPRINT(EM_DIAGRAM):   end;
167304    +   end;
MPRINT(EM_DIAGRAM):   end;
167305    +   else do;
MPRINT(EM_DIAGRAM):   else do;
167306    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
167307    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
167308    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
167309    +      end;
MPRINT(EM_DIAGRAM):   end;
167310    +      else do;
MPRINT(EM_DIAGRAM):   else do;
167311    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
167312    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
167313    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
167314    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
167315    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
167316    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
167317    +         end;
MPRINT(EM_DIAGRAM):   end;
167318    +      end;
MPRINT(EM_DIAGRAM):   end;
167319    +   end;
MPRINT(EM_DIAGRAM):   end;
167320    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
167321    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
167322    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
167323    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
167324    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
167325    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
167326    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
167327    +   end;
MPRINT(EM_DIAGRAM):   end;
167328    +end;
MPRINT(EM_DIAGRAM):   end;
167329    +
167330    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
167331    +*** Checking missing input Interval
167332    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
167333    +
167334    +IF NMISS(
167335    +   AcceptedCmpTotal ,
167336    +   Frq ,
167337    +   Income ,
167338    +   Mnt ,
167339    +   MntGoldProds ,
167340    +   MntMeatProducts ,
167341    +   NumCatalogPurchases ,
167342    +   NumDealsPurchases ,
167343    +   NumWebVisitsMonth ,
167344    +   RFMstat ,
167345    +   Recency ,
167346    +   Teenhome ,
167347    +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntGoldProds ,
MntMeatProducts , NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , RFMstat ,
Recency , Teenhome , Year_Birth ) THEN DO;
167348    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
167349    +
167350    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
167351    +END;
MPRINT(EM_DIAGRAM):   END;
167352    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
167353    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
167354    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
167355    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
167356    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
167357    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
167358    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
167359    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
167360    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
167361    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
167362    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
167363    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
167364    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
167365    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
167366    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
167367    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
167368    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
167369    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
167370    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
167371    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
167372    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
167373    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
167374    +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
167375    +END;
MPRINT(EM_DIAGRAM):   END;
167376    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
167377    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
167378    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
167379    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
167380    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
167381    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
167382    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
167383    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
167384    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
167385    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
167386    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
167387    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
167388    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
167389    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
167390    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
167391    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
167392    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
167393    +   ELSE S_NumCatalogPurchases
167394    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
167395    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
167396    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
167397    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
167398    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
167399    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
167400    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
167401    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
167402    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
167403    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
167404    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
167405    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
167406    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
167407    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
167408    +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
167409    +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
167410    +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
167411    +END;
MPRINT(EM_DIAGRAM):   END;
167412    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
167413    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
167414    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
167415    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
167416    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
167417    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
167418    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
167419    +   H1x1_1  =    -0.10743056275421 * S_AcceptedCmpTotal
167420    +          +     0.03409888241348 * S_Frq  +    -0.00055974837068 * S_Income
167421    +          +       0.134341851096 * S_Mnt  +    -0.00857864409164 *
167422    +        S_MntGoldProds  +      0.4895390061827 * S_MntMeatProducts
167423    +          +    -0.01423451356563 * S_NumCatalogPurchases
167424    +          +     0.06006350655487 * S_NumDealsPurchases
167425    +          +    -0.20885493964335 * S_NumWebVisitsMonth
167426    +          +    -0.01173202621744 * S_RFMstat  +     0.25819909101611 *
167427    +        S_Recency  +    -0.03326479668652 * S_Teenhome
167428    +          +     0.03371888312814 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.10743056275421 * S_AcceptedCmpTotal + 0.03409888241348 *
S_Frq + -0.00055974837068 * S_Income + 0.134341851096 * S_Mnt + -0.00857864409164 *
S_MntGoldProds + 0.4895390061827 * S_MntMeatProducts + -0.01423451356563 *
S_NumCatalogPurchases + 0.06006350655487 * S_NumDealsPurchases + -0.20885493964335 *
S_NumWebVisitsMonth + -0.01173202621744 * S_RFMstat + 0.25819909101611 * S_Recency +
-0.03326479668652 * S_Teenhome + 0.03371888312814 * S_Year_Birth ;
167429    +   H1x1_2  =    -0.03078478134042 * S_AcceptedCmpTotal
167430    +          +    -0.12351766308972 * S_Frq  +     -0.1943406821731 * S_Income
167431    +          +    -0.36027326127049 * S_Mnt  +     0.05117597516658 *
167432    +        S_MntGoldProds  +     0.07931191953223 * S_MntMeatProducts
167433    +          +    -0.03109266966794 * S_NumCatalogPurchases
167434    +          +     0.05524435494328 * S_NumDealsPurchases
167435    +          +     -0.0105802056898 * S_NumWebVisitsMonth
167436    +          +     0.01793771049002 * S_RFMstat  +      0.0322880575902 *
167437    +        S_Recency  +       0.195010707702 * S_Teenhome
167438    +          +     -0.0351563039686 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.03078478134042 * S_AcceptedCmpTotal + -0.12351766308972 *
S_Frq + -0.1943406821731 * S_Income + -0.36027326127049 * S_Mnt + 0.05117597516658 *
S_MntGoldProds + 0.07931191953223 * S_MntMeatProducts + -0.03109266966794 *
S_NumCatalogPurchases + 0.05524435494328 * S_NumDealsPurchases + -0.0105802056898 *
S_NumWebVisitsMonth + 0.01793771049002 * S_RFMstat + 0.0322880575902 * S_Recency +
0.195010707702 * S_Teenhome + -0.0351563039686 * S_Year_Birth ;
167439    +   H1x1_3  =     0.23990987498311 * S_AcceptedCmpTotal
167440    +          +     0.04052411845464 * S_Frq  +    -0.00302331972067 * S_Income
167441    +          +     0.39981531247427 * S_Mnt  +     0.01433011413993 *
167442    +        S_MntGoldProds  +    -0.19955782687502 * S_MntMeatProducts
167443    +          +     0.07777995109144 * S_NumCatalogPurchases
167444    +          +     0.08683394019767 * S_NumDealsPurchases
167445    +          +     0.27328366433987 * S_NumWebVisitsMonth
167446    +          +      0.0263930429288 * S_RFMstat  +    -0.38900647412136 *
167447    +        S_Recency  +      0.0640153287908 * S_Teenhome
167448    +          +     0.07587467002123 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.23990987498311 * S_AcceptedCmpTotal + 0.04052411845464 *
S_Frq + -0.00302331972067 * S_Income + 0.39981531247427 * S_Mnt + 0.01433011413993 *
S_MntGoldProds + -0.19955782687502 * S_MntMeatProducts + 0.07777995109144 *
S_NumCatalogPurchases + 0.08683394019767 * S_NumDealsPurchases + 0.27328366433987 *
S_NumWebVisitsMonth + 0.0263930429288 * S_RFMstat + -0.38900647412136 * S_Recency +
0.0640153287908 * S_Teenhome + 0.07587467002123 * S_Year_Birth ;
167449    +   H1x1_1  = H1x1_1  +    -0.05820552608682 * Marital_StatusDivorced
167450    +          +    -0.02695167777393 * Marital_StatusMarried
167451    +          +    -0.00733864032764 * Marital_StatusSingle
167452    +          +     0.03838747494293 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.05820552608682 * Marital_StatusDivorced +
-0.02695167777393 * Marital_StatusMarried + -0.00733864032764 * Marital_StatusSingle +
0.03838747494293 * Marital_StatusTogether ;
167453    +   H1x1_2  = H1x1_2  +    -0.00853551919442 * Marital_StatusDivorced
167454    +          +     0.42249671001117 * Marital_StatusMarried
167455    +          +    -0.18515416581955 * Marital_StatusSingle
167456    +          +     0.25783473520826 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.00853551919442 * Marital_StatusDivorced +
0.42249671001117 * Marital_StatusMarried + -0.18515416581955 * Marital_StatusSingle +
0.25783473520826 * Marital_StatusTogether ;
167457    +   H1x1_3  = H1x1_3  +      0.4175036565076 * Marital_StatusDivorced
167458    +          +     0.45127582934777 * Marital_StatusMarried
167459    +          +       0.358157766485 * Marital_StatusSingle
167460    +          +     0.42627185625497 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.4175036565076 * Marital_StatusDivorced +
0.45127582934777 * Marital_StatusMarried + 0.358157766485 * Marital_StatusSingle +
0.42627185625497 * Marital_StatusTogether ;
167461    +   H1x1_1  =    -1.23226472635566 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.23226472635566 + H1x1_1 ;
167462    +   H1x1_2  =      2.2313165328971 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 2.2313165328971 + H1x1_2 ;
167463    +   H1x1_3  =     0.09755782095138 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.09755782095138 + H1x1_3 ;
167464    +   H1x1_1  = SIN(H1x1_1 );
MPRINT(EM_DIAGRAM):   H1x1_1 = SIN(H1x1_1 );
167465    +   H1x1_2  = SIN(H1x1_2 );
MPRINT(EM_DIAGRAM):   H1x1_2 = SIN(H1x1_2 );
167466    +   H1x1_3  = SIN(H1x1_3 );
MPRINT(EM_DIAGRAM):   H1x1_3 = SIN(H1x1_3 );
167467    +END;
MPRINT(EM_DIAGRAM):   END;
167468    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
167469    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
167470    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
167471    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
167472    +END;
MPRINT(EM_DIAGRAM):   END;
167473    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
167474    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
167475    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
167476    +
167477    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
167478    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
167479    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
167480    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
167481    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
167482    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
167483    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
167484    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
167485    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
167486    +end;
MPRINT(EM_DIAGRAM):   end;
167487    +else do;
MPRINT(EM_DIAGRAM):   else do;
167488    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
167489    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
167490    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
167491    +   end;
MPRINT(EM_DIAGRAM):   end;
167492    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
167493    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
167494    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
167495    +   end;
MPRINT(EM_DIAGRAM):   end;
167496    +   else do;
MPRINT(EM_DIAGRAM):   else do;
167497    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
167498    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
167499    +   end;
MPRINT(EM_DIAGRAM):   end;
167500    +end;
MPRINT(EM_DIAGRAM):   end;
167501    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
167502    +   P_DepVar1  =     -68.075125441494 * H1x1_1  +    -72.7630361672259 * H1x1_2
167503    +          +    -71.6251597703755 * H1x1_3 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -68.075125441494 * H1x1_1 + -72.7630361672259 * H1x1_2 +
-71.6251597703755 * H1x1_3 ;
167504    +   P_DepVar1  =    -25.6080957302662 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -25.6080957302662 + P_DepVar1 ;
167505    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
167506    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
167507    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
167508    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
167509    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
167510    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
167511    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
167512    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
167513    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
167514    +END;
MPRINT(EM_DIAGRAM):   END;
167515    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
167516    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
167517    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
167518    +END;
MPRINT(EM_DIAGRAM):   END;
167519    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
167520    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
167521    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
167522    +END;
MPRINT(EM_DIAGRAM):   END;
167523    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
167524    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
167525    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
167526    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
167527    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
167528    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
167529    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
167530    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
167531    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
167532    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
167533    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
167534    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
167535    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
167536    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
167537    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
167538    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
167539    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
167540    +END;
MPRINT(EM_DIAGRAM):   END;
167541    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
167542    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
167543    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
167544    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
167545    +* Renaming variables for AutoNeural46;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural46;
167546    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
167547    +* Renaming Posterior variables for AutoNeural46;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural46;
167548    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
167549    +drop AutoNeural46_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural46_P_DepVar1;
167550    +AutoNeural46_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural46_P_DepVar1 = P_DepVar1;
167551    +drop AutoNeural46_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural46_P_DepVar0;
167552    +AutoNeural46_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural46_P_DepVar0 = P_DepVar0;
167553    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
167554    +* Renaming _WARN_ variable for AutoNeural46;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural46;
167555    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
167556    +length AutoNeural46_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural46_WARN_ $4;
167557    +drop AutoNeural46_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural46_WARN_;
167558    +AutoNeural46_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural46_WARN_ = _WARN_;
167559    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
167560    +* Ensmbl21: Scoring Code of model 4 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl21: Scoring Code of model 4 of 5;
167561    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
167562    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
167563    +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
167564    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
167565    +* NODE: Neural30;
MPRINT(EM_DIAGRAM):   * NODE: Neural30;
167566    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
167567    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
167568    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
167569    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
167570    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
167571    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
167572    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
167573    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
167574    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
167575    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
167576    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
167577    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
167578    +LENGTH _WARN_ $4
167579    +      F_DepVar  $ 12
167580    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
167581    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
167582    +
167583    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
167584    +
167585    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
167586    +
167587    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
167588    +
167589    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
167590    +
167591    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
167592    +
167593    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
167594    +
167595    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
167596    +
167597    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
167598    +
167599    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
167600    +
167601    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
167602    +
167603    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
167604    +
167605    +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
167606    +
167607    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
167608    +
167609    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
167610    +
167611    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
167612    +
167613    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
167614    +
167615    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
167616    +
167617    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
167618    +
167619    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
167620    +
167621    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
167622    +
167623    +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
167624    +
167625    +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
167626    +
167627    +      label H17 = 'Hidden: H1=7' ;
MPRINT(EM_DIAGRAM):   label H17 = 'Hidden: H1=7' ;
167628    +
167629    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
167630    +
167631    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
167632    +
167633    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
167634    +
167635    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
167636    +
167637    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
167638    +
167639    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
167640    +
167641    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
167642    +
167643    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
167644    +
167645    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
167646    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
167647    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
167648    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
167649    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
167650    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
167651    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
167652    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
167653    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
167654    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
167655    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
167656    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
167657    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
167658    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
167659    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
167660    +end;
MPRINT(EM_DIAGRAM):   end;
167661    +else do;
MPRINT(EM_DIAGRAM):   else do;
167662    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
167663    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
167664    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
167665    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
167666    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
167667    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
167668    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
167669    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
167670    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
167671    +         end;
MPRINT(EM_DIAGRAM):   end;
167672    +         else do;
MPRINT(EM_DIAGRAM):   else do;
167673    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
167674    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
167675    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
167676    +            end;
MPRINT(EM_DIAGRAM):   end;
167677    +         end;
MPRINT(EM_DIAGRAM):   end;
167678    +      end;
MPRINT(EM_DIAGRAM):   end;
167679    +      else do;
MPRINT(EM_DIAGRAM):   else do;
167680    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
167681    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
167682    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
167683    +         end;
MPRINT(EM_DIAGRAM):   end;
167684    +      end;
MPRINT(EM_DIAGRAM):   end;
167685    +   end;
MPRINT(EM_DIAGRAM):   end;
167686    +   else do;
MPRINT(EM_DIAGRAM):   else do;
167687    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
167688    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
167689    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
167690    +      end;
MPRINT(EM_DIAGRAM):   end;
167691    +      else do;
MPRINT(EM_DIAGRAM):   else do;
167692    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
167693    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
167694    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
167695    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
167696    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
167697    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
167698    +         end;
MPRINT(EM_DIAGRAM):   end;
167699    +      end;
MPRINT(EM_DIAGRAM):   end;
167700    +   end;
MPRINT(EM_DIAGRAM):   end;
167701    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
167702    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
167703    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
167704    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
167705    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
167706    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
167707    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
167708    +   end;
MPRINT(EM_DIAGRAM):   end;
167709    +end;
MPRINT(EM_DIAGRAM):   end;
167710    +
167711    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
167712    +*** Checking missing input Interval
167713    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
167714    +
167715    +IF NMISS(
167716    +   AcceptedCmpTotal ,
167717    +   Frq ,
167718    +   Income ,
167719    +   Mnt ,
167720    +   MntGoldProds ,
167721    +   MntMeatProducts ,
167722    +   NumCatalogPurchases ,
167723    +   NumDealsPurchases ,
167724    +   NumWebVisitsMonth ,
167725    +   RFMstat ,
167726    +   Recency ,
167727    +   Teenhome ,
167728    +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntGoldProds ,
MntMeatProducts , NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , RFMstat ,
Recency , Teenhome , Year_Birth ) THEN DO;
167729    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
167730    +
167731    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
167732    +END;
MPRINT(EM_DIAGRAM):   END;
167733    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
167734    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
167735    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
167736    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
167737    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
167738    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
167739    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
167740    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
167741    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
167742    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
167743    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
167744    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
167745    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
167746    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
167747    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
167748    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
167749    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
167750    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
167751    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
167752    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
167753    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
167754    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
167755    +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
167756    +END;
MPRINT(EM_DIAGRAM):   END;
167757    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
167758    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
167759    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
167760    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
167761    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
167762    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
167763    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
167764    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
167765    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
167766    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
167767    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
167768    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
167769    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
167770    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
167771    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
167772    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
167773    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
167774    +   ELSE S_NumCatalogPurchases
167775    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
167776    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
167777    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
167778    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
167779    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
167780    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
167781    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
167782    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
167783    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
167784    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
167785    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
167786    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
167787    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
167788    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
167789    +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
167790    +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
167791    +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
167792    +END;
MPRINT(EM_DIAGRAM):   END;
167793    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
167794    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
167795    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
167796    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
167797    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
167798    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
167799    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
167800    +   H11  =      0.5448177358872 * S_AcceptedCmpTotal  +    -0.56918032958607 *
167801    +        S_Frq  +     0.21060618200218 * S_Income  +    -0.40246310954349 *
167802    +        S_Mnt  +    -0.18690574082736 * S_MntGoldProds
167803    +          +     0.83028677347709 * S_MntMeatProducts
167804    +          +     0.56366676093724 * S_NumCatalogPurchases
167805    +          +     0.63662278307649 * S_NumDealsPurchases
167806    +          +     0.45030521898264 * S_NumWebVisitsMonth
167807    +          +     0.23005584857727 * S_RFMstat  +    -0.64234820627061 *
167808    +        S_Recency  +     0.00774462163198 * S_Teenhome
167809    +          +     0.03680161242347 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H11 = 0.5448177358872 * S_AcceptedCmpTotal + -0.56918032958607 * S_Frq +
0.21060618200218 * S_Income + -0.40246310954349 * S_Mnt + -0.18690574082736 * S_MntGoldProds +
0.83028677347709 * S_MntMeatProducts + 0.56366676093724 * S_NumCatalogPurchases +
0.63662278307649 * S_NumDealsPurchases + 0.45030521898264 * S_NumWebVisitsMonth +
0.23005584857727 * S_RFMstat + -0.64234820627061 * S_Recency + 0.00774462163198 * S_Teenhome +
0.03680161242347 * S_Year_Birth ;
167810    +   H12  =     0.66298961317118 * S_AcceptedCmpTotal  +      -0.935153223999 *
167811    +        S_Frq  +     0.41449292848187 * S_Income  +    -1.26694271574069 *
167812    +        S_Mnt  +     0.18765833055879 * S_MntGoldProds
167813    +          +       0.802198131853 * S_MntMeatProducts
167814    +          +     0.80699693779953 * S_NumCatalogPurchases
167815    +          +    -0.32111921080627 * S_NumDealsPurchases
167816    +          +     1.05495977150176 * S_NumWebVisitsMonth
167817    +          +    -0.03067071763188 * S_RFMstat  +    -1.14158068786273 *
167818    +        S_Recency  +     -0.3863391299289 * S_Teenhome
167819    +          +    -0.01515301188334 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H12 = 0.66298961317118 * S_AcceptedCmpTotal + -0.935153223999 * S_Frq +
0.41449292848187 * S_Income + -1.26694271574069 * S_Mnt + 0.18765833055879 * S_MntGoldProds +
0.802198131853 * S_MntMeatProducts + 0.80699693779953 * S_NumCatalogPurchases +
-0.32111921080627 * S_NumDealsPurchases + 1.05495977150176 * S_NumWebVisitsMonth +
-0.03067071763188 * S_RFMstat + -1.14158068786273 * S_Recency + -0.3863391299289 * S_Teenhome
+ -0.01515301188334 * S_Year_Birth ;
167820    +   H13  =    -0.20258357169781 * S_AcceptedCmpTotal  +    -0.01927951320398 *
167821    +        S_Frq  +     0.04768604929306 * S_Income  +     0.30271184148932 *
167822    +        S_Mnt  +    -0.24825280571811 * S_MntGoldProds
167823    +          +     0.56634068580527 * S_MntMeatProducts
167824    +          +    -0.06012432168804 * S_NumCatalogPurchases
167825    +          +     0.00616163066885 * S_NumDealsPurchases
167826    +          +    -0.28643715149767 * S_NumWebVisitsMonth
167827    +          +    -0.21657284982294 * S_RFMstat  +    -0.11323681460779 *
167828    +        S_Recency  +    -0.05360047278594 * S_Teenhome
167829    +          +     -0.3574952891844 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H13 = -0.20258357169781 * S_AcceptedCmpTotal + -0.01927951320398 * S_Frq
+ 0.04768604929306 * S_Income + 0.30271184148932 * S_Mnt + -0.24825280571811 * S_MntGoldProds
+ 0.56634068580527 * S_MntMeatProducts + -0.06012432168804 * S_NumCatalogPurchases +
0.00616163066885 * S_NumDealsPurchases + -0.28643715149767 * S_NumWebVisitsMonth +
-0.21657284982294 * S_RFMstat + -0.11323681460779 * S_Recency + -0.05360047278594 * S_Teenhome
+ -0.3574952891844 * S_Year_Birth ;
167830    +   H14  =    -0.01671557172552 * S_AcceptedCmpTotal  +     0.14126480109635 *
167831    +        S_Frq  +    -0.16542260420764 * S_Income  +    -0.02938555904655 *
167832    +        S_Mnt  +    -0.09628993953297 * S_MntGoldProds
167833    +          +     0.29490772106233 * S_MntMeatProducts
167834    +          +    -0.37973658516518 * S_NumCatalogPurchases
167835    +          +     0.08377613406035 * S_NumDealsPurchases
167836    +          +    -0.17242298863338 * S_NumWebVisitsMonth
167837    +          +     0.24623716603984 * S_RFMstat  +     0.27333937644041 *
167838    +        S_Recency  +    -0.00972098456963 * S_Teenhome
167839    +          +      0.0278167406933 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H14 = -0.01671557172552 * S_AcceptedCmpTotal + 0.14126480109635 * S_Frq
+ -0.16542260420764 * S_Income + -0.02938555904655 * S_Mnt + -0.09628993953297 *
S_MntGoldProds + 0.29490772106233 * S_MntMeatProducts + -0.37973658516518 *
S_NumCatalogPurchases + 0.08377613406035 * S_NumDealsPurchases + -0.17242298863338 *
S_NumWebVisitsMonth + 0.24623716603984 * S_RFMstat + 0.27333937644041 * S_Recency +
-0.00972098456963 * S_Teenhome + 0.0278167406933 * S_Year_Birth ;
167840    +   H15  =     0.26338443874493 * S_AcceptedCmpTotal  +    -1.05933447721817 *
167841    +        S_Frq  +     0.15944073710657 * S_Income  +    -0.08201141214939 *
167842    +        S_Mnt  +     0.21740350334003 * S_MntGoldProds
167843    +          +     1.25414895016379 * S_MntMeatProducts
167844    +          +     1.38122748809658 * S_NumCatalogPurchases
167845    +          +     0.28983101492886 * S_NumDealsPurchases
167846    +          +     0.34016977363062 * S_NumWebVisitsMonth
167847    +          +    -0.07539662108021 * S_RFMstat  +    -0.48223583966095 *
167848    +        S_Recency  +    -0.21769282483378 * S_Teenhome
167849    +          +    -0.03637501600986 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H15 = 0.26338443874493 * S_AcceptedCmpTotal + -1.05933447721817 * S_Frq
+ 0.15944073710657 * S_Income + -0.08201141214939 * S_Mnt + 0.21740350334003 * S_MntGoldProds
+ 1.25414895016379 * S_MntMeatProducts + 1.38122748809658 * S_NumCatalogPurchases +
0.28983101492886 * S_NumDealsPurchases + 0.34016977363062 * S_NumWebVisitsMonth +
-0.07539662108021 * S_RFMstat + -0.48223583966095 * S_Recency + -0.21769282483378 * S_Teenhome
+ -0.03637501600986 * S_Year_Birth ;
167850    +   H16  =    -0.02235292240802 * S_AcceptedCmpTotal  +     0.05344170585354 *
167851    +        S_Frq  +    -0.16059837639399 * S_Income  +     -0.2016987951784 *
167852    +        S_Mnt  +     0.10489473589715 * S_MntGoldProds
167853    +          +    -0.24223453001761 * S_MntMeatProducts
167854    +          +     0.08658296964034 * S_NumCatalogPurchases
167855    +          +    -0.12912434217806 * S_NumDealsPurchases
167856    +          +     0.20103807385888 * S_NumWebVisitsMonth
167857    +          +     0.26367670266536 * S_RFMstat  +    -0.44098166476515 *
167858    +        S_Recency  +    -0.46051939225222 * S_Teenhome
167859    +          +    -0.03446671446496 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H16 = -0.02235292240802 * S_AcceptedCmpTotal + 0.05344170585354 * S_Frq
+ -0.16059837639399 * S_Income + -0.2016987951784 * S_Mnt + 0.10489473589715 * S_MntGoldProds
+ -0.24223453001761 * S_MntMeatProducts + 0.08658296964034 * S_NumCatalogPurchases +
-0.12912434217806 * S_NumDealsPurchases + 0.20103807385888 * S_NumWebVisitsMonth +
0.26367670266536 * S_RFMstat + -0.44098166476515 * S_Recency + -0.46051939225222 * S_Teenhome
+ -0.03446671446496 * S_Year_Birth ;
167860    +   H17  =    -0.33265903592033 * S_AcceptedCmpTotal  +      0.8252218937614 *
167861    +        S_Frq  +     0.41954791536781 * S_Income  +     0.46211299623005 *
167862    +        S_Mnt  +     0.01356150389301 * S_MntGoldProds
167863    +          +    -0.44066080788477 * S_MntMeatProducts
167864    +          +    -0.50262630360787 * S_NumCatalogPurchases
167865    +          +    -0.76106916776546 * S_NumDealsPurchases
167866    +          +     -0.1148740911192 * S_NumWebVisitsMonth
167867    +          +    -0.07226607709062 * S_RFMstat  +       0.057209463183 *
167868    +        S_Recency  +    -0.46203013614528 * S_Teenhome
167869    +          +    -0.19513280423468 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H17 = -0.33265903592033 * S_AcceptedCmpTotal + 0.8252218937614 * S_Frq +
0.41954791536781 * S_Income + 0.46211299623005 * S_Mnt + 0.01356150389301 * S_MntGoldProds +
-0.44066080788477 * S_MntMeatProducts + -0.50262630360787 * S_NumCatalogPurchases +
-0.76106916776546 * S_NumDealsPurchases + -0.1148740911192 * S_NumWebVisitsMonth +
-0.07226607709062 * S_RFMstat + 0.057209463183 * S_Recency + -0.46203013614528 * S_Teenhome +
-0.19513280423468 * S_Year_Birth ;
167870    +   H11  = H11  +    -0.25061450597172 * Marital_StatusDivorced
167871    +          +    -0.04190107680763 * Marital_StatusMarried
167872    +          +     0.60475477366656 * Marital_StatusSingle
167873    +          +    -0.23249465504861 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.25061450597172 * Marital_StatusDivorced +
-0.04190107680763 * Marital_StatusMarried + 0.60475477366656 * Marital_StatusSingle +
-0.23249465504861 * Marital_StatusTogether ;
167874    +   H12  = H12  +     0.44175341112836 * Marital_StatusDivorced
167875    +          +    -1.07400114292035 * Marital_StatusMarried
167876    +          +     0.68928831262407 * Marital_StatusSingle
167877    +          +    -0.77691960068409 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.44175341112836 * Marital_StatusDivorced +
-1.07400114292035 * Marital_StatusMarried + 0.68928831262407 * Marital_StatusSingle +
-0.77691960068409 * Marital_StatusTogether ;
167878    +   H13  = H13  +     0.06946121372082 * Marital_StatusDivorced
167879    +          +    -0.20121339725415 * Marital_StatusMarried
167880    +          +     0.11417921391157 * Marital_StatusSingle
167881    +          +     0.09230572943508 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.06946121372082 * Marital_StatusDivorced +
-0.20121339725415 * Marital_StatusMarried + 0.11417921391157 * Marital_StatusSingle +
0.09230572943508 * Marital_StatusTogether ;
167882    +   H14  = H14  +    -0.23294461421366 * Marital_StatusDivorced
167883    +          +    -0.17406326256113 * Marital_StatusMarried
167884    +          +    -0.23720358325215 * Marital_StatusSingle
167885    +          +    -0.43999719513424 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.23294461421366 * Marital_StatusDivorced +
-0.17406326256113 * Marital_StatusMarried + -0.23720358325215 * Marital_StatusSingle +
-0.43999719513424 * Marital_StatusTogether ;
167886    +   H15  = H15  +    -0.02489582646664 * Marital_StatusDivorced
167887    +          +     0.09754614002146 * Marital_StatusMarried
167888    +          +    -0.13004651836918 * Marital_StatusSingle
167889    +          +     0.26863820003928 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.02489582646664 * Marital_StatusDivorced +
0.09754614002146 * Marital_StatusMarried + -0.13004651836918 * Marital_StatusSingle +
0.26863820003928 * Marital_StatusTogether ;
167890    +   H16  = H16  +    -0.03288546792064 * Marital_StatusDivorced
167891    +          +     0.33991066094948 * Marital_StatusMarried
167892    +          +     0.16726714912168 * Marital_StatusSingle
167893    +          +    -0.25665070086096 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + -0.03288546792064 * Marital_StatusDivorced +
0.33991066094948 * Marital_StatusMarried + 0.16726714912168 * Marital_StatusSingle +
-0.25665070086096 * Marital_StatusTogether ;
167894    +   H17  = H17  +     0.10942200598558 * Marital_StatusDivorced
167895    +          +    -0.70406010688765 * Marital_StatusMarried
167896    +          +     0.77355395614085 * Marital_StatusSingle
167897    +          +    -0.37671922953654 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H17 = H17 + 0.10942200598558 * Marital_StatusDivorced +
-0.70406010688765 * Marital_StatusMarried + 0.77355395614085 * Marital_StatusSingle +
-0.37671922953654 * Marital_StatusTogether ;
167898    +   H11  =    -1.10989436564707 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.10989436564707 + H11 ;
167899    +   H12  =    -0.21288050694071 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.21288050694071 + H12 ;
167900    +   H13  =     0.48811938879702 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 0.48811938879702 + H13 ;
167901    +   H14  =    -1.71523073897191 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -1.71523073897191 + H14 ;
167902    +   H15  =    -0.04554136165237 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -0.04554136165237 + H15 ;
167903    +   H16  =    -2.78464164526225 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -2.78464164526225 + H16 ;
167904    +   H17  =     1.73418398166308 + H17 ;
MPRINT(EM_DIAGRAM):   H17 = 1.73418398166308 + H17 ;
167905    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
167906    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
167907    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
167908    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
167909    +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
167910    +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
167911    +   H17  = TANH(H17 );
MPRINT(EM_DIAGRAM):   H17 = TANH(H17 );
167912    +END;
MPRINT(EM_DIAGRAM):   END;
167913    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
167914    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
167915    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
167916    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
167917    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
167918    +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
167919    +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
167920    +   H17  = .;
MPRINT(EM_DIAGRAM):   H17 = .;
167921    +END;
MPRINT(EM_DIAGRAM):   END;
167922    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
167923    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
167924    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
167925    +
167926    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
167927    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
167928    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
167929    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
167930    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
167931    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
167932    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
167933    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
167934    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
167935    +end;
MPRINT(EM_DIAGRAM):   end;
167936    +else do;
MPRINT(EM_DIAGRAM):   else do;
167937    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
167938    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
167939    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
167940    +   end;
MPRINT(EM_DIAGRAM):   end;
167941    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
167942    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
167943    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
167944    +   end;
MPRINT(EM_DIAGRAM):   end;
167945    +   else do;
MPRINT(EM_DIAGRAM):   else do;
167946    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
167947    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
167948    +   end;
MPRINT(EM_DIAGRAM):   end;
167949    +end;
MPRINT(EM_DIAGRAM):   end;
167950    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
167951    +   P_DepVar1  =     1.99078165508498 * H11  +     3.59667555265579 * H12
167952    +          +     0.22520578396696 * H13  +     0.07999056432817 * H14
167953    +          +     2.73336314915489 * H15  +     0.11536142898008 * H16
167954    +          +    -1.90380424208785 * H17 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.99078165508498 * H11 + 3.59667555265579 * H12 +
0.22520578396696 * H13 + 0.07999056432817 * H14 + 2.73336314915489 * H15 + 0.11536142898008 *
H16 + -1.90380424208785 * H17 ;
167955    +   P_DepVar1  =    -1.65978316370044 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.65978316370044 + P_DepVar1 ;
167956    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
167957    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
167958    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
167959    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
167960    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
167961    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
167962    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
167963    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
167964    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
167965    +END;
MPRINT(EM_DIAGRAM):   END;
167966    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
167967    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
167968    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
167969    +END;
MPRINT(EM_DIAGRAM):   END;
167970    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
167971    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
167972    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
167973    +END;
MPRINT(EM_DIAGRAM):   END;
167974    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
167975    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
167976    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
167977    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
167978    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
167979    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
167980    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
167981    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
167982    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
167983    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
167984    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
167985    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
167986    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
167987    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
167988    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
167989    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
167990    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
167991    +END;
MPRINT(EM_DIAGRAM):   END;
167992    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
167993    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
167994    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
167995    +drop
167996    +H11
167997    +H12
167998    +H13
167999    +H14
168000    +H15
168001    +H16
168002    +H17
168003    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 H17 ;
168004    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
168005    +* Renaming variables for Neural30;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural30;
168006    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
168007    +* Renaming Posterior variables for Neural30;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural30;
168008    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
168009    +drop Neural30_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural30_P_DepVar1;
168010    +Neural30_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural30_P_DepVar1 = P_DepVar1;
168011    +drop Neural30_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural30_P_DepVar0;
168012    +Neural30_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural30_P_DepVar0 = P_DepVar0;
168013    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
168014    +* Renaming _WARN_ variable for Neural30;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural30;
168015    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
168016    +length Neural30_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural30_WARN_ $4;
168017    +drop Neural30_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural30_WARN_;
168018    +Neural30_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural30_WARN_ = _WARN_;
168019    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
168020    +* Ensmbl21: Scoring Code of model 5 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl21: Scoring Code of model 5 of 5;
168021    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
168022    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
168023    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
168024    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
168025    +* NODE: AutoNeural47;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural47;
168026    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
168027    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
168028    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
168029    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
168030    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
168031    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
168032    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
168033    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
168034    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
168035    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
168036    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
168037    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
168038    +LENGTH _WARN_ $4
168039    +      F_DepVar  $ 12
168040    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
168041    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
168042    +
168043    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
168044    +
168045    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
168046    +
168047    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
168048    +
168049    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
168050    +
168051    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
168052    +
168053    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
168054    +
168055    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
168056    +
168057    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
168058    +
168059    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
168060    +
168061    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
168062    +
168063    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
168064    +
168065    +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
168066    +
168067    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
168068    +
168069    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
168070    +
168071    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
168072    +
168073    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
168074    +
168075    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
168076    +
168077    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
168078    +
168079    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
168080    +
168081    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
168082    +
168083    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
168084    +
168085    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
168086    +
168087    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
168088    +
168089    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
168090    +
168091    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
168092    +
168093    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
168094    +
168095    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
168096    +
168097    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
168098    +
168099    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
168100    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
168101    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
168102    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
168103    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
168104    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
168105    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
168106    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
168107    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
168108    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
168109    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
168110    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
168111    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
168112    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
168113    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
168114    +end;
MPRINT(EM_DIAGRAM):   end;
168115    +else do;
MPRINT(EM_DIAGRAM):   else do;
168116    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
168117    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
168118    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
168119    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
168120    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
168121    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
168122    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
168123    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
168124    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
168125    +         end;
MPRINT(EM_DIAGRAM):   end;
168126    +         else do;
MPRINT(EM_DIAGRAM):   else do;
168127    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
168128    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
168129    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
168130    +            end;
MPRINT(EM_DIAGRAM):   end;
168131    +         end;
MPRINT(EM_DIAGRAM):   end;
168132    +      end;
MPRINT(EM_DIAGRAM):   end;
168133    +      else do;
MPRINT(EM_DIAGRAM):   else do;
168134    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
168135    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
168136    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
168137    +         end;
MPRINT(EM_DIAGRAM):   end;
168138    +      end;
MPRINT(EM_DIAGRAM):   end;
168139    +   end;
MPRINT(EM_DIAGRAM):   end;
168140    +   else do;
MPRINT(EM_DIAGRAM):   else do;
168141    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
168142    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
168143    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
168144    +      end;
MPRINT(EM_DIAGRAM):   end;
168145    +      else do;
MPRINT(EM_DIAGRAM):   else do;
168146    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
168147    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
168148    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
168149    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
168150    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
168151    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
168152    +         end;
MPRINT(EM_DIAGRAM):   end;
168153    +      end;
MPRINT(EM_DIAGRAM):   end;
168154    +   end;
MPRINT(EM_DIAGRAM):   end;
168155    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
168156    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
168157    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
168158    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
168159    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
168160    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
168161    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
168162    +   end;
MPRINT(EM_DIAGRAM):   end;
168163    +end;
MPRINT(EM_DIAGRAM):   end;
168164    +
168165    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
168166    +*** Checking missing input Interval
168167    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
168168    +
168169    +IF NMISS(
168170    +   AcceptedCmpTotal ,
168171    +   Frq ,
168172    +   Income ,
168173    +   Mnt ,
168174    +   MntGoldProds ,
168175    +   MntMeatProducts ,
168176    +   NumCatalogPurchases ,
168177    +   NumDealsPurchases ,
168178    +   NumWebVisitsMonth ,
168179    +   RFMstat ,
168180    +   Recency ,
168181    +   Teenhome ,
168182    +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntGoldProds ,
MntMeatProducts , NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , RFMstat ,
Recency , Teenhome , Year_Birth ) THEN DO;
168183    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
168184    +
168185    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
168186    +END;
MPRINT(EM_DIAGRAM):   END;
168187    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
168188    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
168189    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
168190    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
168191    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
168192    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
168193    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
168194    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
168195    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
168196    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
168197    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
168198    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
168199    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
168200    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
168201    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
168202    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
168203    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
168204    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
168205    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
168206    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
168207    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
168208    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
168209    +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
168210    +END;
MPRINT(EM_DIAGRAM):   END;
168211    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
168212    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
168213    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
168214    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
168215    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
168216    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
168217    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
168218    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
168219    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
168220    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
168221    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
168222    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
168223    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
168224    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
168225    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
168226    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
168227    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
168228    +   ELSE S_NumCatalogPurchases
168229    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
168230    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
168231    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
168232    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
168233    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
168234    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
168235    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
168236    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
168237    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
168238    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
168239    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
168240    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
168241    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
168242    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
168243    +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
168244    +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
168245    +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
168246    +END;
MPRINT(EM_DIAGRAM):   END;
168247    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
168248    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
168249    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
168250    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
168251    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
168252    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
168253    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
168254    +   H1x1_1  =      1.3507655650527 * S_AcceptedCmpTotal
168255    +          +    -1.10614122240879 * S_Frq  +     1.75303764660855 * S_Income
168256    +          +    -3.36358487853209 * S_Mnt  +     0.66482370197508 *
168257    +        S_MntGoldProds  +     2.20380795880989 * S_MntMeatProducts
168258    +          +     0.96941096546276 * S_NumCatalogPurchases
168259    +          +    -0.78169009272221 * S_NumDealsPurchases
168260    +          +     2.46694552614806 * S_NumWebVisitsMonth
168261    +          +    -0.70379796230966 * S_RFMstat  +    -2.91060571548081 *
168262    +        S_Recency  +    -1.09760548427625 * S_Teenhome
168263    +          +    -0.04996948842393 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.3507655650527 * S_AcceptedCmpTotal + -1.10614122240879 *
S_Frq + 1.75303764660855 * S_Income + -3.36358487853209 * S_Mnt + 0.66482370197508 *
S_MntGoldProds + 2.20380795880989 * S_MntMeatProducts + 0.96941096546276 *
S_NumCatalogPurchases + -0.78169009272221 * S_NumDealsPurchases + 2.46694552614806 *
S_NumWebVisitsMonth + -0.70379796230966 * S_RFMstat + -2.91060571548081 * S_Recency +
-1.09760548427625 * S_Teenhome + -0.04996948842393 * S_Year_Birth ;
168264    +   H1x1_2  =    -0.31908942522077 * S_AcceptedCmpTotal
168265    +          +     3.74791296051726 * S_Frq  +     2.24284839751303 * S_Income
168266    +          +    -1.78405040388815 * S_Mnt  +      0.8742942749026 *
168267    +        S_MntGoldProds  +    -0.14368654003355 * S_MntMeatProducts
168268    +          +    -2.01779739147185 * S_NumCatalogPurchases
168269    +          +     -2.6507470301089 * S_NumDealsPurchases
168270    +          +     0.43757499676531 * S_NumWebVisitsMonth
168271    +          +    -1.37847156147455 * S_RFMstat  +    -0.69576523519337 *
168272    +        S_Recency  +    -0.45321912120397 * S_Teenhome
168273    +          +     0.52676912620048 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.31908942522077 * S_AcceptedCmpTotal + 3.74791296051726 *
S_Frq + 2.24284839751303 * S_Income + -1.78405040388815 * S_Mnt + 0.8742942749026 *
S_MntGoldProds + -0.14368654003355 * S_MntMeatProducts + -2.01779739147185 *
S_NumCatalogPurchases + -2.6507470301089 * S_NumDealsPurchases + 0.43757499676531 *
S_NumWebVisitsMonth + -1.37847156147455 * S_RFMstat + -0.69576523519337 * S_Recency +
-0.45321912120397 * S_Teenhome + 0.52676912620048 * S_Year_Birth ;
168274    +   H1x1_3  =     2.41023196591392 * S_AcceptedCmpTotal
168275    +          +    -2.36084733932675 * S_Frq  +     1.24213632619464 * S_Income
168276    +          +    -1.85110475917758 * S_Mnt  +    -0.28004157450889 *
168277    +        S_MntGoldProds  +     2.40469717841771 * S_MntMeatProducts
168278    +          +      3.9474982958259 * S_NumCatalogPurchases
168279    +          +       0.376468804707 * S_NumDealsPurchases
168280    +          +     3.31501013882439 * S_NumWebVisitsMonth
168281    +          +     0.11559780336909 * S_RFMstat  +    -4.25267693921008 *
168282    +        S_Recency  +    -1.57729700618019 * S_Teenhome
168283    +          +      0.1824973506119 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 2.41023196591392 * S_AcceptedCmpTotal + -2.36084733932675 *
S_Frq + 1.24213632619464 * S_Income + -1.85110475917758 * S_Mnt + -0.28004157450889 *
S_MntGoldProds + 2.40469717841771 * S_MntMeatProducts + 3.9474982958259 *
S_NumCatalogPurchases + 0.376468804707 * S_NumDealsPurchases + 3.31501013882439 *
S_NumWebVisitsMonth + 0.11559780336909 * S_RFMstat + -4.25267693921008 * S_Recency +
-1.57729700618019 * S_Teenhome + 0.1824973506119 * S_Year_Birth ;
168284    +   H1x1_4  =     -0.2757766975278 * S_AcceptedCmpTotal
168285    +          +     3.82725387338192 * S_Frq  +      -0.761164420496 * S_Income
168286    +          +    -1.14207863171921 * S_Mnt  +     -0.1745335405903 *
168287    +        S_MntGoldProds  +    -5.79657274001258 * S_MntMeatProducts
168288    +          +    -1.47064436222345 * S_NumCatalogPurchases
168289    +          +    -0.47773085529503 * S_NumDealsPurchases
168290    +          +     0.20028656323595 * S_NumWebVisitsMonth
168291    +          +    -0.18383173425255 * S_RFMstat  +     0.10522454853137 *
168292    +        S_Recency  +    -0.11530372179295 * S_Teenhome
168293    +          +    -0.34167488644648 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.2757766975278 * S_AcceptedCmpTotal + 3.82725387338192 *
S_Frq + -0.761164420496 * S_Income + -1.14207863171921 * S_Mnt + -0.1745335405903 *
S_MntGoldProds + -5.79657274001258 * S_MntMeatProducts + -1.47064436222345 *
S_NumCatalogPurchases + -0.47773085529503 * S_NumDealsPurchases + 0.20028656323595 *
S_NumWebVisitsMonth + -0.18383173425255 * S_RFMstat + 0.10522454853137 * S_Recency +
-0.11530372179295 * S_Teenhome + -0.34167488644648 * S_Year_Birth ;
168294    +   H1x1_1  = H1x1_1  +     1.48263364530339 * Marital_StatusDivorced
168295    +          +    -1.68634246986018 * Marital_StatusMarried
168296    +          +     0.61674763327859 * Marital_StatusSingle
168297    +          +    -1.26649958570453 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 1.48263364530339 * Marital_StatusDivorced +
-1.68634246986018 * Marital_StatusMarried + 0.61674763327859 * Marital_StatusSingle +
-1.26649958570453 * Marital_StatusTogether ;
168298    +   H1x1_2  = H1x1_2  +     1.03937964147637 * Marital_StatusDivorced
168299    +          +    -0.63821523628652 * Marital_StatusMarried
168300    +          +    -1.40431603473643 * Marital_StatusSingle
168301    +          +    -0.20849152262706 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 1.03937964147637 * Marital_StatusDivorced +
-0.63821523628652 * Marital_StatusMarried + -1.40431603473643 * Marital_StatusSingle +
-0.20849152262706 * Marital_StatusTogether ;
168302    +   H1x1_3  = H1x1_3  +    -0.00632006555267 * Marital_StatusDivorced
168303    +          +    -2.86773035723606 * Marital_StatusMarried
168304    +          +     2.52900517550184 * Marital_StatusSingle
168305    +          +    -3.34343954102751 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.00632006555267 * Marital_StatusDivorced +
-2.86773035723606 * Marital_StatusMarried + 2.52900517550184 * Marital_StatusSingle +
-3.34343954102751 * Marital_StatusTogether ;
168306    +   H1x1_4  = H1x1_4  +     0.05620673245628 * Marital_StatusDivorced
168307    +          +    -0.89880425714459 * Marital_StatusMarried
168308    +          +     0.97652284934456 * Marital_StatusSingle
168309    +          +    -0.83414241747679 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.05620673245628 * Marital_StatusDivorced +
-0.89880425714459 * Marital_StatusMarried + 0.97652284934456 * Marital_StatusSingle +
-0.83414241747679 * Marital_StatusTogether ;
168310    +   H1x1_1  =    -0.73505942586437 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.73505942586437 + H1x1_1 ;
168311    +   H1x1_2  =     2.97401194500651 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 2.97401194500651 + H1x1_2 ;
168312    +   H1x1_3  =    -7.86049995366383 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -7.86049995366383 + H1x1_3 ;
168313    +   H1x1_4  =    -3.77808914097545 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -3.77808914097545 + H1x1_4 ;
168314    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
168315    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
168316    +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
168317    +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
168318    +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
168319    +   H1x1_4  = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
168320    +END;
MPRINT(EM_DIAGRAM):   END;
168321    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
168322    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
168323    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
168324    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
168325    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
168326    +END;
MPRINT(EM_DIAGRAM):   END;
168327    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
168328    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
168329    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
168330    +
168331    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
168332    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
168333    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
168334    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
168335    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
168336    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
168337    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
168338    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
168339    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
168340    +end;
MPRINT(EM_DIAGRAM):   end;
168341    +else do;
MPRINT(EM_DIAGRAM):   else do;
168342    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
168343    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
168344    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
168345    +   end;
MPRINT(EM_DIAGRAM):   end;
168346    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
168347    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
168348    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
168349    +   end;
MPRINT(EM_DIAGRAM):   end;
168350    +   else do;
MPRINT(EM_DIAGRAM):   else do;
168351    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
168352    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
168353    +   end;
MPRINT(EM_DIAGRAM):   end;
168354    +end;
MPRINT(EM_DIAGRAM):   end;
168355    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
168356    +   P_DepVar1  =     17.1091261255058 * H1x1_1  +    -15.4649724088409 * H1x1_2
168357    +          +     14.2519883476498 * H1x1_3  +    -25.0940711325771 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 17.1091261255058 * H1x1_1 + -15.4649724088409 * H1x1_2 +
14.2519883476498 * H1x1_3 + -25.0940711325771 * H1x1_4 ;
168358    +   P_DepVar1  =     -0.7898064443713 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.7898064443713 + P_DepVar1 ;
168359    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
168360    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
168361    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
168362    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
168363    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
168364    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
168365    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
168366    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
168367    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
168368    +END;
MPRINT(EM_DIAGRAM):   END;
168369    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
168370    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
168371    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
168372    +END;
MPRINT(EM_DIAGRAM):   END;
168373    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
168374    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
168375    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
168376    +END;
MPRINT(EM_DIAGRAM):   END;
168377    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
168378    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
168379    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
168380    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
168381    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
168382    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
168383    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
168384    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
168385    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
168386    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
168387    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
168388    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
168389    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
168390    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
168391    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
168392    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
168393    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
168394    +END;
MPRINT(EM_DIAGRAM):   END;
168395    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
168396    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
168397    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
168398    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
168399    +* Renaming variables for AutoNeural47;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural47;
168400    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
168401    +* Renaming Posterior variables for AutoNeural47;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural47;
168402    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
168403    +drop AutoNeural47_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural47_P_DepVar1;
168404    +AutoNeural47_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural47_P_DepVar1 = P_DepVar1;
168405    +drop AutoNeural47_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural47_P_DepVar0;
168406    +AutoNeural47_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural47_P_DepVar0 = P_DepVar0;
168407    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
168408    +* Renaming _WARN_ variable for AutoNeural47;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural47;
168409    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
168410    +length AutoNeural47_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural47_WARN_ $4;
168411    +drop AutoNeural47_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural47_WARN_;
168412    +AutoNeural47_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural47_WARN_ = _WARN_;
168413    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
168414    +* Ensmbl21: Average Posteriors of 5 models;
MPRINT(EM_DIAGRAM):   * Ensmbl21: Average Posteriors of 5 models;
168415    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
168416    +P_DepVar1 = (
168417    +Neural34_P_DepVar1 +
168418    +AutoNeural42_P_DepVar1 +
168419    +AutoNeural46_P_DepVar1 +
168420    +Neural30_P_DepVar1 +
168421    +AutoNeural47_P_DepVar1
168422    +)/5;
MPRINT(EM_DIAGRAM):   P_DepVar1 = ( Neural34_P_DepVar1 + AutoNeural42_P_DepVar1 +
AutoNeural46_P_DepVar1 + Neural30_P_DepVar1 + AutoNeural47_P_DepVar1 )/5;
168423    +P_DepVar0 = (
168424    +Neural34_P_DepVar0 +
168425    +AutoNeural42_P_DepVar0 +
168426    +AutoNeural46_P_DepVar0 +
168427    +Neural30_P_DepVar0 +
168428    +AutoNeural47_P_DepVar0
168429    +)/5;
MPRINT(EM_DIAGRAM):   P_DepVar0 = ( Neural34_P_DepVar0 + AutoNeural42_P_DepVar0 +
AutoNeural46_P_DepVar0 + Neural30_P_DepVar0 + AutoNeural47_P_DepVar0 )/5;
168430    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
168431    +* Ensmbl21: Computing Classification Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl21: Computing Classification Vars;
168432    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
168433    +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set.
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the
         length of a character variable.
168434    +label I_DepVar = 'Into: DepVar';
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar';
168435    +length _format $200;
MPRINT(EM_DIAGRAM):   length _format $200;
168436    +drop _format;
MPRINT(EM_DIAGRAM):   drop _format;
168437    +_format= ' ';
MPRINT(EM_DIAGRAM):   _format= ' ';
168438    +_p_= 0;
MPRINT(EM_DIAGRAM):   _p_= 0;
168439    +drop _p_;
MPRINT(EM_DIAGRAM):   drop _p_;
168440    +if P_DepVar1 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _p_ then do;
168441    +_p_= P_DepVar1;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar1;
168442    +_format= '1';
MPRINT(EM_DIAGRAM):   _format= '1';
168443    +end;
MPRINT(EM_DIAGRAM):   end;
168444    +if P_DepVar0 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _p_ then do;
168445    +_p_= P_DepVar0;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar0;
168446    +_format= '0';
MPRINT(EM_DIAGRAM):   _format= '0';
168447    +end;
MPRINT(EM_DIAGRAM):   end;
168448    +%DMNORMCP(_format,I_DepVar);
MPRINT(DMNORMCP):   I_DepVar=dmnorm(_format,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
168449    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
168450    +* Ensmbl21: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   * Ensmbl21: Producing Unformatted variable;
168451    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
168452    +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
168453    +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
168454    +else
168455    +if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
168456    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
168457    +* Ensmbl21: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl21: Computing _WARN_ Variable;
168458    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
168459    +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
168460    +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
168461    +_WARN_ = '';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
168462    +if index(NEURAL34_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
168462   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL34_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
168463    +if index(NEURAL34_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
168463   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL34_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
168464    +if index(NEURAL34_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
168464   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL34_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
168465    +if index(NEURAL34_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
168465   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL34_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
168466    +if index(AUTONEURAL42_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
168466   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL42_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
168467    +if index(AUTONEURAL42_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
168467   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL42_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
168468    +if index(AUTONEURAL42_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
168468   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL42_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
168469    +if index(AUTONEURAL42_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
168469   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL42_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
168470    +if index(AUTONEURAL46_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
168470   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL46_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
168471    +if index(AUTONEURAL46_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
168471   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL46_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
168472    +if index(AUTONEURAL46_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
168472   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL46_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
168473    +if index(AUTONEURAL46_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
168473   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL46_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
168474    +if index(NEURAL30_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
168474   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL30_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
168475    +if index(NEURAL30_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
168475   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL30_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
168476    +if index(NEURAL30_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
168476   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL30_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
168477    +if index(NEURAL30_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
168477   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL30_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
168478    +if index(AUTONEURAL47_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
168478   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL47_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
168479    +if index(AUTONEURAL47_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
168479   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL47_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
168480    +if index(AUTONEURAL47_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
168480   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL47_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
168481    +if index(AUTONEURAL47_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
168481   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL47_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
168482    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
168483    +* Ensmbl21: Computing Residual Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl21: Computing Residual Vars;
168484    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
168485    +if
168486    +F_DepVar NE '1'
168487    +AND F_DepVar NE '0'
168488    +then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE '1' AND F_DepVar NE '0' then do;
168489    +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
168490    +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
168491    +end;
MPRINT(EM_DIAGRAM):   end;
168492    +else do;
MPRINT(EM_DIAGRAM):   else do;
168493    +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
168494    +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
168495    +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
168496    +WHEN('1') R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN('1') R_DepVar1 = R_DepVar1 +1;
168497    +WHEN('0') R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN('0') R_DepVar0 = R_DepVar0 +1;
168498    +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
168499    +END;
MPRINT(EM_DIAGRAM):   END;
168500    +END;
MPRINT(EM_DIAGRAM):   END;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
168501     run;
 
NOTE: DATA STEP view saved on file EMWS8.ENSMBL21_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.NEURAL34_VALIDATE.VIEW used (Total process time):
      real time           0.09 seconds
      cpu time            0.09 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.10 seconds
      cpu time            0.10 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
168502     quit;
168503     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
MPRINT(EM_DIAGRAM):
MPRINT(CALFITSTATSNOMINAL):   data _tmpTrainFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.Ensmbl21_TRAIN end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Train: Target Variable" _NOBS_= "Train: Sum of
Frequencies" _SSE_= "Train: Sum of Squared Errors" _MAX_= "Train: Maximum Absolute Error"
_DIV_ = "Train: Divisor for ASE" _WRONG_= "Train: Number of Wrong Classifications" _DISF_=
"Train: Frequency of Classified Cases" _MISC_= "Train: Misclassification Rate" _ASE_ = "Train:
Average Squared Error" _RASE_ = "Train: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl21_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set _tmpTrainFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):
MPRINT(CALFITSTATSNOMINAL):   data _tmpValidFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.Ensmbl21_VALIDATE end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Valid: Target Variable" _NOBS_= "Valid: Sum of
Frequencies" _SSE_= "Valid: Sum of Squared Errors" _MAX_= "Valid: Maximum Absolute Error"
_DIV_ = "Valid: Divisor for ASE" _WRONG_= "Valid: Number of Wrong Classifications" _DISF_=
"Valid: Frequency of Classified Cases" _MISC_= "Valid: Misclassification Rate" _ASE_ = "Valid:
Average Squared Error" _RASE_ = "Valid: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _tmpdata_(DROP= TARGET);
MPRINT(EM_DIAGRAM):   set _tmpValidFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _tmpdata_;
MPRINT(EM_DIAGRAM):   set _tmpdata_;
MPRINT(EM_DIAGRAM):   rename _ASE_=_VASE_;
MPRINT(EM_DIAGRAM):   rename _DIV_=_VDIV_;
MPRINT(EM_DIAGRAM):   rename _MAX_=_VMAX_;
MPRINT(EM_DIAGRAM):   rename _NOBS_=_VNOBS_;
MPRINT(EM_DIAGRAM):   rename _RASE_=_VRASE_;
MPRINT(EM_DIAGRAM):   rename _SSE_=_VSSE_;
MPRINT(EM_DIAGRAM):   rename _DISF_=_VDISF_;
MPRINT(EM_DIAGRAM):   rename _MISC_=_VMISC_;
MPRINT(EM_DIAGRAM):   rename _WRONG_=_VWRONG_;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl21_EMOUTFIT;
MPRINT(EM_DIAGRAM):   merge EMWS8.Ensmbl21_EMOUTFIT _tmpdata_;
MPRINT(EM_DIAGRAM):   run;
168563     filename _pref
168563   ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural34\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Neural34\EMPUBLISHSCORE.sas";
168564     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
168565     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Neural34\EMPUBLISHSCORE.sas.
168566    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
168567    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
168568    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
168569    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
168570    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
168571    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
168572    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
168573    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
168574    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
168575    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
168576    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
168577    +LENGTH _WARN_ $4
168578    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
168579    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
168580    +
168581    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
168582    +
168583    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
168584    +
168585    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
168586    +
168587    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
168588    +
168589    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
168590    +
168591    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
168592    +
168593    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
168594    +
168595    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
168596    +
168597    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
168598    +
168599    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
168600    +
168601    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
168602    +
168603    +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
168604    +
168605    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
168606    +
168607    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
168608    +
168609    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
168610    +
168611    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
168612    +
168613    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
168614    +
168615    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
168616    +
168617    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
168618    +
168619    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
168620    +
168621    +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
168622    +
168623    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
168624    +
168625    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
168626    +
168627    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
168628    +
168629    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
168630    +
168631    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
168632    +
168633    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
168634    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
168635    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
168636    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
168637    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
168638    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
168639    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
168640    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
168641    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
168642    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
168643    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
168644    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
168645    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
168646    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
168647    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
168648    +end;
MPRINT(EM_DIAGRAM):   end;
168649    +else do;
MPRINT(EM_DIAGRAM):   else do;
168650    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
168651    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
168652    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
168653    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
168654    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
168655    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
168656    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
168657    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
168658    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
168659    +         end;
MPRINT(EM_DIAGRAM):   end;
168660    +         else do;
MPRINT(EM_DIAGRAM):   else do;
168661    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
168662    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
168663    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
168664    +            end;
MPRINT(EM_DIAGRAM):   end;
168665    +         end;
MPRINT(EM_DIAGRAM):   end;
168666    +      end;
MPRINT(EM_DIAGRAM):   end;
168667    +      else do;
MPRINT(EM_DIAGRAM):   else do;
168668    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
168669    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
168670    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
168671    +         end;
MPRINT(EM_DIAGRAM):   end;
168672    +      end;
MPRINT(EM_DIAGRAM):   end;
168673    +   end;
MPRINT(EM_DIAGRAM):   end;
168674    +   else do;
MPRINT(EM_DIAGRAM):   else do;
168675    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
168676    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
168677    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
168678    +      end;
MPRINT(EM_DIAGRAM):   end;
168679    +      else do;
MPRINT(EM_DIAGRAM):   else do;
168680    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
168681    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
168682    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
168683    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
168684    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
168685    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
168686    +         end;
MPRINT(EM_DIAGRAM):   end;
168687    +      end;
MPRINT(EM_DIAGRAM):   end;
168688    +   end;
MPRINT(EM_DIAGRAM):   end;
168689    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
168690    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
168691    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
168692    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
168693    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
168694    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
168695    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
168696    +   end;
MPRINT(EM_DIAGRAM):   end;
168697    +end;
MPRINT(EM_DIAGRAM):   end;
168698    +
168699    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
168700    +*** Checking missing input Interval
168701    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
168702    +
168703    +IF NMISS(
168704    +   AcceptedCmpTotal ,
168705    +   Frq ,
168706    +   Income ,
168707    +   Mnt ,
168708    +   MntGoldProds ,
168709    +   MntMeatProducts ,
168710    +   NumCatalogPurchases ,
168711    +   NumDealsPurchases ,
168712    +   NumWebVisitsMonth ,
168713    +   RFMstat ,
168714    +   Recency ,
168715    +   Teenhome ,
168716    +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntGoldProds ,
MntMeatProducts , NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , RFMstat ,
Recency , Teenhome , Year_Birth ) THEN DO;
168717    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
168718    +
168719    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
168720    +END;
MPRINT(EM_DIAGRAM):   END;
168721    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
168722    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
168723    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
168724    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
168725    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
168726    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
168727    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
168728    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
168729    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
168730    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
168731    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
168732    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
168733    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
168734    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
168735    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
168736    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
168737    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
168738    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
168739    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
168740    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
168741    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
168742    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
168743    +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
168744    +END;
MPRINT(EM_DIAGRAM):   END;
168745    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
168746    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
168747    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
168748    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
168749    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
168750    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
168751    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
168752    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
168753    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
168754    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
168755    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
168756    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
168757    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
168758    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
168759    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
168760    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
168761    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
168762    +   ELSE S_NumCatalogPurchases
168763    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
168764    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
168765    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
168766    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
168767    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
168768    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
168769    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
168770    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
168771    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
168772    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
168773    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
168774    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
168775    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
168776    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
168777    +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
168778    +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
168779    +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
168780    +END;
MPRINT(EM_DIAGRAM):   END;
168781    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
168782    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
168783    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
168784    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
168785    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
168786    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
168787    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
168788    +   H11  =     0.39113138187571 * S_AcceptedCmpTotal  +    -0.61540725344485 *
168789    +        S_Frq  +    -0.39640720965637 * S_Income  +    -0.29779259024925 *
168790    +        S_Mnt  +     0.09159537668687 * S_MntGoldProds
168791    +          +     0.66968861823847 * S_MntMeatProducts
168792    +          +     0.43410284729103 * S_NumCatalogPurchases
168793    +          +     0.38169769247512 * S_NumDealsPurchases
168794    +          +     0.42568124883788 * S_NumWebVisitsMonth
168795    +          +       0.117680996215 * S_RFMstat  +    -0.81755740196945 *
168796    +        S_Recency  +     0.34714100236873 * S_Teenhome
168797    +          +     0.39595885220917 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H11 = 0.39113138187571 * S_AcceptedCmpTotal + -0.61540725344485 * S_Frq
+ -0.39640720965637 * S_Income + -0.29779259024925 * S_Mnt + 0.09159537668687 * S_MntGoldProds
+ 0.66968861823847 * S_MntMeatProducts + 0.43410284729103 * S_NumCatalogPurchases +
0.38169769247512 * S_NumDealsPurchases + 0.42568124883788 * S_NumWebVisitsMonth +
0.117680996215 * S_RFMstat + -0.81755740196945 * S_Recency + 0.34714100236873 * S_Teenhome +
0.39595885220917 * S_Year_Birth ;
168798    +   H12  =    -0.17603311184545 * S_AcceptedCmpTotal  +    -1.87448667460975 *
168799    +        S_Frq  +    -0.13770783826558 * S_Income  +    -0.07794509574546 *
168800    +        S_Mnt  +     -0.0367231623133 * S_MntGoldProds
168801    +          +     0.43468157063779 * S_MntMeatProducts
168802    +          +     1.22287851495207 * S_NumCatalogPurchases
168803    +          +     1.34810668047823 * S_NumDealsPurchases
168804    +          +     0.29744386797792 * S_NumWebVisitsMonth
168805    +          +     0.24598010228595 * S_RFMstat  +     0.45054459604149 *
168806    +        S_Recency  +    -0.31884355104334 * S_Teenhome
168807    +          +    -0.49374494273323 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H12 = -0.17603311184545 * S_AcceptedCmpTotal + -1.87448667460975 * S_Frq
+ -0.13770783826558 * S_Income + -0.07794509574546 * S_Mnt + -0.0367231623133 * S_MntGoldProds
+ 0.43468157063779 * S_MntMeatProducts + 1.22287851495207 * S_NumCatalogPurchases +
1.34810668047823 * S_NumDealsPurchases + 0.29744386797792 * S_NumWebVisitsMonth +
0.24598010228595 * S_RFMstat + 0.45054459604149 * S_Recency + -0.31884355104334 * S_Teenhome +
-0.49374494273323 * S_Year_Birth ;
168808    +   H13  =    -0.35894234681627 * S_AcceptedCmpTotal  +     2.22535530920485 *
168809    +        S_Frq  +    -0.60759993740885 * S_Income  +    -0.19127405324439 *
168810    +        S_Mnt  +     0.13903548885363 * S_MntGoldProds
168811    +          +    -3.08800901663199 * S_MntMeatProducts
168812    +          +    -1.19043292478827 * S_NumCatalogPurchases
168813    +          +    -0.37179794210537 * S_NumDealsPurchases
168814    +          +     0.03624847445355 * S_NumWebVisitsMonth
168815    +          +    -0.62521514183331 * S_RFMstat  +     0.01074839631068 *
168816    +        S_Recency  +     0.08240530440608 * S_Teenhome
168817    +          +    -0.04154769345168 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H13 = -0.35894234681627 * S_AcceptedCmpTotal + 2.22535530920485 * S_Frq
+ -0.60759993740885 * S_Income + -0.19127405324439 * S_Mnt + 0.13903548885363 * S_MntGoldProds
+ -3.08800901663199 * S_MntMeatProducts + -1.19043292478827 * S_NumCatalogPurchases +
-0.37179794210537 * S_NumDealsPurchases + 0.03624847445355 * S_NumWebVisitsMonth +
-0.62521514183331 * S_RFMstat + 0.01074839631068 * S_Recency + 0.08240530440608 * S_Teenhome +
-0.04154769345168 * S_Year_Birth ;
168818    +   H14  =     0.72612390853906 * S_AcceptedCmpTotal  +    -1.03331426863575 *
168819    +        S_Frq  +     0.44630396705527 * S_Income  +    -1.29648064151656 *
168820    +        S_Mnt  +     0.20190465471738 * S_MntGoldProds
168821    +          +     0.78481425439956 * S_MntMeatProducts
168822    +          +      0.6107688367092 * S_NumCatalogPurchases
168823    +          +    -0.39308332306764 * S_NumDealsPurchases
168824    +          +     1.13986700740733 * S_NumWebVisitsMonth
168825    +          +    -0.10095149614189 * S_RFMstat  +    -1.23708147180809 *
168826    +        S_Recency  +    -0.40344648497219 * S_Teenhome
168827    +          +    -0.21455944295735 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H14 = 0.72612390853906 * S_AcceptedCmpTotal + -1.03331426863575 * S_Frq
+ 0.44630396705527 * S_Income + -1.29648064151656 * S_Mnt + 0.20190465471738 * S_MntGoldProds
+ 0.78481425439956 * S_MntMeatProducts + 0.6107688367092 * S_NumCatalogPurchases +
-0.39308332306764 * S_NumDealsPurchases + 1.13986700740733 * S_NumWebVisitsMonth +
-0.10095149614189 * S_RFMstat + -1.23708147180809 * S_Recency + -0.40344648497219 * S_Teenhome
+ -0.21455944295735 * S_Year_Birth ;
168828    +   H15  =    -0.52000103453301 * S_AcceptedCmpTotal  +    -0.14144790393123 *
168829    +        S_Frq  +    -0.47209445285116 * S_Income  +     0.51267592710475 *
168830    +        S_Mnt  +     0.07876708495313 * S_MntGoldProds
168831    +          +    -0.61914125284805 * S_MntMeatProducts
168832    +          +    -0.54746366292992 * S_NumCatalogPurchases
168833    +          +     0.25925395549236 * S_NumDealsPurchases
168834    +          +    -0.60979686139101 * S_NumWebVisitsMonth
168835    +          +     0.08166171339337 * S_RFMstat  +     0.96981534293427 *
168836    +        S_Recency  +     0.36245179070453 * S_Teenhome
168837    +          +    -0.09267442906112 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H15 = -0.52000103453301 * S_AcceptedCmpTotal + -0.14144790393123 * S_Frq
+ -0.47209445285116 * S_Income + 0.51267592710475 * S_Mnt + 0.07876708495313 * S_MntGoldProds
The SAS System
 
+ -0.61914125284805 * S_MntMeatProducts + -0.54746366292992 * S_NumCatalogPurchases +
0.25925395549236 * S_NumDealsPurchases + -0.60979686139101 * S_NumWebVisitsMonth +
0.08166171339337 * S_RFMstat + 0.96981534293427 * S_Recency + 0.36245179070453 * S_Teenhome +
-0.09267442906112 * S_Year_Birth ;
168838    +   H11  = H11  +     0.01565392034595 * Marital_StatusDivorced
168839    +          +     0.22493072364483 * Marital_StatusMarried
168840    +          +    -0.34177799020181 * Marital_StatusSingle
168841    +          +    -0.04779249269081 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.01565392034595 * Marital_StatusDivorced + 0.22493072364483
* Marital_StatusMarried + -0.34177799020181 * Marital_StatusSingle + -0.04779249269081 *
Marital_StatusTogether ;
168842    +   H12  = H12  +     0.58482172427767 * Marital_StatusDivorced
168843    +          +     0.05031503177659 * Marital_StatusMarried
168844    +          +     0.28039335778718 * Marital_StatusSingle
168845    +          +     0.00709736205513 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.58482172427767 * Marital_StatusDivorced + 0.05031503177659
* Marital_StatusMarried + 0.28039335778718 * Marital_StatusSingle + 0.00709736205513 *
Marital_StatusTogether ;
168846    +   H13  = H13  +     0.35081594367456 * Marital_StatusDivorced
168847    +          +    -0.24395984745809 * Marital_StatusMarried
168848    +          +     0.22708224780413 * Marital_StatusSingle
168849    +          +    -0.34334833500124 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.35081594367456 * Marital_StatusDivorced +
-0.24395984745809 * Marital_StatusMarried + 0.22708224780413 * Marital_StatusSingle +
-0.34334833500124 * Marital_StatusTogether ;
168850    +   H14  = H14  +     0.85482961039457 * Marital_StatusDivorced
168851    +          +    -1.06411172500365 * Marital_StatusMarried
168852    +          +     0.57554615813234 * Marital_StatusSingle
168853    +          +    -0.91141797290702 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.85482961039457 * Marital_StatusDivorced +
-1.06411172500365 * Marital_StatusMarried + 0.57554615813234 * Marital_StatusSingle +
-0.91141797290702 * Marital_StatusTogether ;
168854    +   H15  = H15  +      0.2197825206844 * Marital_StatusDivorced
168855    +          +     0.66663600919341 * Marital_StatusMarried
168856    +          +    -0.69696969089357 * Marital_StatusSingle
168857    +          +     0.48232861459141 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.2197825206844 * Marital_StatusDivorced + 0.66663600919341
* Marital_StatusMarried + -0.69696969089357 * Marital_StatusSingle + 0.48232861459141 *
Marital_StatusTogether ;
168858    +   H11  =    -1.58463812409211 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.58463812409211 + H11 ;
168859    +   H12  =    -0.59413927784841 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.59413927784841 + H12 ;
168860    +   H13  =    -1.40790569062078 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -1.40790569062078 + H13 ;
168861    +   H14  =     -0.2073181654495 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -0.2073181654495 + H14 ;
168862    +   H15  =     1.99108524971007 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 1.99108524971007 + H15 ;
168863    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
168864    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
168865    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
168866    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
168867    +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
168868    +END;
MPRINT(EM_DIAGRAM):   END;
168869    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
168870    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
168871    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
168872    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
168873    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
168874    +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
168875    +END;
MPRINT(EM_DIAGRAM):   END;
168876    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
168877    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
168878    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
168879    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
168880    +   P_DepVar1  =     3.73071630847853 * H11  +     2.94025483165613 * H12
168881    +          +    -3.96191932636925 * H13  +     3.36339025105162 * H14
168882    +          +    -4.82596427081675 * H15 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 3.73071630847853 * H11 + 2.94025483165613 * H12 +
-3.96191932636925 * H13 + 3.36339025105162 * H14 + -4.82596427081675 * H15 ;
168883    +   P_DepVar1  =     0.43428060622858 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.43428060622858 + P_DepVar1 ;
168884    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
168885    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
168886    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
168887    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
168888    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
168889    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
168890    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
168891    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
168892    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
168893    +END;
MPRINT(EM_DIAGRAM):   END;
168894    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
168895    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
168896    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
168897    +END;
MPRINT(EM_DIAGRAM):   END;
168898    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
168899    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
168900    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
168901    +END;
MPRINT(EM_DIAGRAM):   END;
168902    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
168903    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
168904    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
168905    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
168906    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
168907    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
168908    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
168909    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
168910    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
168911    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
168912    +END;
MPRINT(EM_DIAGRAM):   END;
168913    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
168914    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
168915    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
168916    +drop
168917    +H11
168918    +H12
168919    +H13
168920    +H14
168921    +H15
168922    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 ;
168923    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
168924     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
168925     quit;
168926     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
168927     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
168928     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
168929     retain ID 2 Node "Neural34";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural34";
168930     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
168931     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1140 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1140 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
168932     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
168933     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
168934     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1140 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1140 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
168935     proc sort data=EMWS8.Neural34_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural34_variableset out=_temp2(keep=NAME CREATOR);
168936     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
168937     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.NEURAL34_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
168938     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
168939     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
168940     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
168941     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
168942     proc contents data=EMWS8.Neural34_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural34_train out=_meta(keep=NAME) noprint;
168943     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
168944     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
168945     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
168946     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
168947     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
168948     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
168949     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
168950     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
168951     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
168952     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
168952   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 516 rows and 5 columns.
 
168953     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
168954     proc append base=EMWS8.Ensmbl21_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl21_FCMP data=_tempx;
168955     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL21_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 516 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL21_FCMP has 516 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
168956     filename _pref
168956   ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
168957     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
168958     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
168959    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
168960    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
168961    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
168962    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
168963    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
168964    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
168965     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
168966     quit;
168967     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
168968     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
168969     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
168970     retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
168971     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
168972     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
168973     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
168974     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
168975     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
168976     proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
168977     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
168978     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
168979     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
168980     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
168981     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
168982     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
168983     proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
168984     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
168985     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
168986     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
168987     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
168988     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
168989     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
168990     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
168991     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
168992     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
168993     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
168993   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
168994     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
168995     proc append base=EMWS8.Ensmbl21_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl21_FCMP data=_tempx;
168996     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL21_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL21_FCMP has 520 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
168997     filename _pref
168997   ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
168998     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
168999     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
169000    +
169001    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
169002    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
169002   !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
169003    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
169004    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
169005    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
169006    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
169007    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
169008     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
169009     quit;
169010     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
169011     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
169012     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
169013     retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
169014     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
169015     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
169016     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
169017     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
169018     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
169019     proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
169020     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
169021     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
169022     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
169023     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
169024     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
169025     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
169026     proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
169027     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
169028     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
169029     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
169030     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
169031     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
169032     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
169033     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
169034     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
169035     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
169036     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
169036   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
169037     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
169038     proc append base=EMWS8.Ensmbl21_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl21_FCMP data=_tempx;
169039     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL21_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL21_FCMP has 559 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
169040     filename _pref
169040   ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
169041     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
169042     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
169043    +
169044    +
169045    +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
169046    +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
169047    +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
169048    +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
169049    +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
169050    +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
169051    +
169052    +
169053    +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
169054    +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
169055    +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
169056    +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
169057    +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
169058    +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
169059    +
169060    +
169061    +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
169062    +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
169063    +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
169064    +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
169065    +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
169066    +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
169067    +
169068    +
169069    +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
169070    +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
169071    +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
169072    +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
169073    +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
169074    +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
169075    +
169076    +
169077    +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
169078    +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
169079    +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
169080    +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
169081    +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
169082    +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
169083    +
169084    +
169085    +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
169086    +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
169087    +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
169088    +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
169089    +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
169090    +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
169091    +
169092    +
169093    +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
169094    +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
169095    +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
169096    +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
169097    +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
169098    +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
169099    +
169100    +
169101    +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
169102    +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
169103    +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
169104    +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
169105    +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
169106    +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
169107    +if
169108    +_FILTERNORM1 not in ( '.')
169109    + and
169110    +_FILTERNORM2 not in ( '.')
169111    + and
169112    +_FILTERNORM3 not in ( '.')
169113    + and
169114    +_FILTERNORM4 not in ( '.')
169115    + and
169116    +_FILTERNORM5 not in ( '.')
169117    + and
169118    +_FILTERNORM6 not in ( '.')
169119    + and
169120    +_FILTERNORM7 not in ( ' ')
169121    + and
169122    +_FILTERNORM8 not in ( ' ')
169123    +and
169124    +( Dt_Customer ne .)
169125    +and ( Income ne . and (Income<=107000))
169126    +and ( Kidhome ne .)
169127    +and ( MntFishProducts ne .)
169128    +and ( MntFruits ne .)
169129    +and ( MntGoldProds ne .)
169130    +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
169131    +and ( MntSweetProducts ne .)
169132    +and ( MntWines ne .)
169133    +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
169134    +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
169135    +and ( NumStorePurchases ne .)
169136    +and ( NumWebPurchases ne .)
169137    +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
169138    +and ( Recency ne .)
169139    +and ( Teenhome ne .)
169140    +and ( Year_Birth ne .)
169141    +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
169142    +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
169143    +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
169144    +end;
MPRINT(EM_DIAGRAM):   end;
169145    +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
169146    +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
169147     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
169148     quit;
169149     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
169150     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
169151     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
169152     retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
169153     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
169154     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
169155     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
169156     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
169157     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
169158     proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
169159     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
169160     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
169161     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
169162     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
169163     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
169164     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
169165     proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
169166     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
169167     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
169168     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
169169     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
169170     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
169171     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
169172     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
169173     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
169174     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
169175     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
169175   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
169176     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
169177     proc append base=EMWS8.Ensmbl21_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl21_FCMP data=_tempx;
169178     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL21_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL21_FCMP has 625 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
169179     %macro varDept(fcmpdata=,id=);
169180     %global nobs&id scoreFlag&id;
169181     %let scoreFlag&id = 0;
169182     %if &id=1 or ^&fcmpStart %then %do;
169183     proc sort data=&fcmpdata out=_temp&id nodupkey;
169184     by NAME;
169185     where id=&id and LHS in( %let j=1;
169186     %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
169187     %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
169188     "&var" %let j = %eval(&j+1);
169189     %end;
169190     );
169191     run;
169192     %let dsid = %sysfunc(open(_temp&id));
169193     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
169194     %let dsid = %sysfunc(close(&dsid));
169195     %if &&nobs&id %then %do;
169196     %let scoreFlag&id = 1;
169197     %let fcmpStart = 1;
169198     %end;
169199     %else %let fcmpStart = 0;
169200     %end;
169201     %else %do;
169202     proc sort data=&fcmpdata out=_tempid;
169203     where id=&id;
169204     by LHS;
169205     run;
169206     %let dsid = %sysfunc(open(_tempid));
169207     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
169208     %let dsid = %sysfunc(close(&dsid));
169209     %if ^&&nobs&id %then %do;
169210     proc datasets lib=work nolist;
169211     delete _tempid;
169212     run;
169213     quit;
169214     %end;
169215     %else %do;
169216     data _tempAll;
169217     set %let j=%eval(&id-1);
169218     %do x=1 %to &j;
169219     %if &&nobs&x %then %do;
169220     _temp&x %end;
169221     %end;
169222     ;
169223     run;
169224     proc sql;
169225     create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
169225   ! work._tempid p2 where p.name=p2.lhs;
169226     quit;
169227     data _temp&id;
169228     set _temp&id;
169229     where LHS ne '' and NAME ne '' and Node ne '';
169230     run;
169231     proc datasets lib=work nolist;
169232     delete _tempAll;
169233     run;
169234     %let dsid = %sysfunc(open(_temp&id));
169235     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
169236     %let dsid = %sysfunc(close(&dsid));
169237     %if ^&&nobs&id %then %do;
169238     proc datasets lib=work nolist;
169239     delete _temp&id;
169240     run;
169241     quit;
169242     %end;
169243     %else %do;
169244     %let scoreFlag&id = 1;
169245     data _temp&id;
169246     set _temp&id;
169247     where LHS ne NAME and node ne '';
169248     run;
169249     %let dsid = %sysfunc(open(_temp&id));
169250     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
169251     %let dsid = %sysfunc(close(&dsid));
169252     %if ^&&nobs&id %then %do;
169253     proc datasets lib=work nolist;
169254     delete _temp&id;
169255     run;
169256     quit;
169257     %end;
169258     %else %do;
169259     proc sort data=_temp&id nodupkey;
169260     by LHS NAME;
169261     run;
169262     %end;
169263     %end;
169264     %end;
169265     %end;
169266     %mend varDept;
169267     %macro optCode(outdata=fcmpdata);
169268     %global fcmpStart;
169269     %let fcmpStart = 0;
169270     %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
169271     %let NumNodes=9;
169272     %do k=1 %to &NumNodes;
169273     %vardept(fcmpdata=&outdata, id=&k);
169274     %end;
169275     %mend optCode;
169276     %optcode(outData=EMWS8.Ensmbl21_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl21_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL21_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl21_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 62 observations read from the data set EMWS8.ENSMBL21_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 46 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 16 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl21_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL21_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl21_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL21_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl21_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL21_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 16 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 16 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl21_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL21_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 16 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 16 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 26 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 26 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 26 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 26 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl21_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL21_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 16 observations read from the data set WORK._TEMP2.
NOTE: There were 26 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 42 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl21_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL21_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl21_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL21_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
169277     filename _pref
169277   ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural42\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural42\EMPUBLISHSCORE.sas";
169278     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
169279     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural42\EMPUBLISHSCORE.sas.
169280    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
169281    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
169282    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
169283    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
169284    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
169285    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
169286    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
169287    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
169288    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
169289    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
169290    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
169291    +LENGTH _WARN_ $4
169292    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
169293    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
169294    +
169295    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
169296    +
169297    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
169298    +
169299    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
169300    +
169301    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
169302    +
169303    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
169304    +
169305    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
169306    +
169307    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
169308    +
169309    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
169310    +
169311    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
169312    +
169313    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
169314    +
169315    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
169316    +
169317    +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
169318    +
169319    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
169320    +
169321    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
169322    +
169323    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
169324    +
169325    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
169326    +
169327    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
169328    +
169329    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
169330    +
169331    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
169332    +
169333    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
169334    +
169335    +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
169336    +
169337    +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
169338    +
169339    +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
169340    +
169341    +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
169342    +
169343    +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
169344    +
169345    +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
169346    +
169347    +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
169348    +
169349    +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
169350    +
169351    +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
169352    +
169353    +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
169354    +
169355    +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
169356    +
169357    +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
169358    +
169359    +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
169360    +
169361    +      label H2x1_6 = 'Hidden: H2x1_=6' ;
MPRINT(EM_DIAGRAM):   label H2x1_6 = 'Hidden: H2x1_=6' ;
169362    +
169363    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
169364    +
169365    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
169366    +
169367    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
169368    +
169369    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
169370    +
169371    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
169372    +
169373    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
169374    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
169375    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
169376    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
169377    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
169378    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
169379    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
169380    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
169381    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
169382    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
169383    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
169384    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
169385    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
169386    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
169387    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
169388    +end;
MPRINT(EM_DIAGRAM):   end;
169389    +else do;
MPRINT(EM_DIAGRAM):   else do;
169390    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
169391    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
169392    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
169393    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
169394    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
169395    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
169396    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
169397    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
169398    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
169399    +         end;
MPRINT(EM_DIAGRAM):   end;
169400    +         else do;
MPRINT(EM_DIAGRAM):   else do;
169401    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
169402    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
169403    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
169404    +            end;
MPRINT(EM_DIAGRAM):   end;
169405    +         end;
MPRINT(EM_DIAGRAM):   end;
169406    +      end;
MPRINT(EM_DIAGRAM):   end;
169407    +      else do;
MPRINT(EM_DIAGRAM):   else do;
169408    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
169409    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
169410    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
169411    +         end;
MPRINT(EM_DIAGRAM):   end;
169412    +      end;
MPRINT(EM_DIAGRAM):   end;
169413    +   end;
MPRINT(EM_DIAGRAM):   end;
169414    +   else do;
MPRINT(EM_DIAGRAM):   else do;
169415    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
169416    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
169417    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
169418    +      end;
MPRINT(EM_DIAGRAM):   end;
169419    +      else do;
MPRINT(EM_DIAGRAM):   else do;
169420    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
169421    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
169422    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
169423    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
169424    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
169425    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
169426    +         end;
MPRINT(EM_DIAGRAM):   end;
169427    +      end;
MPRINT(EM_DIAGRAM):   end;
169428    +   end;
MPRINT(EM_DIAGRAM):   end;
169429    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
169430    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
169431    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
169432    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
169433    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
169434    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
169435    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
169436    +   end;
MPRINT(EM_DIAGRAM):   end;
169437    +end;
MPRINT(EM_DIAGRAM):   end;
169438    +
169439    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
169440    +*** Checking missing input Interval
169441    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
169442    +
169443    +IF NMISS(
169444    +   AcceptedCmpTotal ,
169445    +   Frq ,
169446    +   Income ,
169447    +   Mnt ,
169448    +   MntGoldProds ,
169449    +   MntMeatProducts ,
169450    +   NumCatalogPurchases ,
169451    +   NumDealsPurchases ,
169452    +   NumWebVisitsMonth ,
169453    +   RFMstat ,
169454    +   Recency ,
169455    +   Teenhome ,
169456    +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntGoldProds ,
MntMeatProducts , NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , RFMstat ,
Recency , Teenhome , Year_Birth ) THEN DO;
169457    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
169458    +
169459    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
169460    +END;
MPRINT(EM_DIAGRAM):   END;
169461    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
169462    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
169463    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
169464    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
169465    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
169466    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
169467    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
169468    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
169469    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
169470    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
169471    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
169472    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
169473    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
169474    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
169475    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
169476    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
169477    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
169478    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
169479    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
169480    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
169481    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
169482    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
169483    +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
169484    +END;
MPRINT(EM_DIAGRAM):   END;
169485    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
169486    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
169487    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
169488    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
169489    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
169490    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
169491    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
169492    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
169493    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
169494    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
169495    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
169496    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
169497    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
169498    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
169499    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
169500    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
169501    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
169502    +   ELSE S_NumCatalogPurchases
169503    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
169504    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
169505    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
169506    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
169507    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
169508    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
169509    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
169510    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
169511    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
169512    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
169513    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
169514    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
169515    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
169516    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
169517    +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
169518    +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
169519    +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
169520    +END;
MPRINT(EM_DIAGRAM):   END;
169521    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
169522    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
169523    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
169524    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
169525    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
169526    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
169527    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
169528    +   H1x1_1  =    -3.92905088817122 * S_AcceptedCmpTotal
169529    +          +    -4.76567955922662 * S_Frq  +    -3.20305851407308 * S_Income
169530    +          +     10.4290156082038 * S_Mnt  +     2.82139196372317 *
169531    +        S_MntGoldProds  +    -4.54749029525518 * S_MntMeatProducts
169532    +          +    -12.1201262560598 * S_NumCatalogPurchases
169533    +          +    -7.64265449386917 * S_NumDealsPurchases
169534    +          +     -0.8154661733691 * S_NumWebVisitsMonth
169535    +          +    -7.34275682075933 * S_RFMstat  +     3.14025498790893 *
169536    +        S_Recency  +     3.79010135100643 * S_Teenhome
169537    +          +    -1.18831354068466 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -3.92905088817122 * S_AcceptedCmpTotal + -4.76567955922662 *
S_Frq + -3.20305851407308 * S_Income + 10.4290156082038 * S_Mnt + 2.82139196372317 *
S_MntGoldProds + -4.54749029525518 * S_MntMeatProducts + -12.1201262560598 *
S_NumCatalogPurchases + -7.64265449386917 * S_NumDealsPurchases + -0.8154661733691 *
S_NumWebVisitsMonth + -7.34275682075933 * S_RFMstat + 3.14025498790893 * S_Recency +
3.79010135100643 * S_Teenhome + -1.18831354068466 * S_Year_Birth ;
169538    +   H1x1_2  =    -4.72019183577823 * S_AcceptedCmpTotal
169539    +          +     5.14902294151494 * S_Frq  +     -2.7967028726716 * S_Income
169540    +          +     7.90170532262596 * S_Mnt  +    -0.27896242131344 *
169541    +        S_MntGoldProds  +    -6.13177486713562 * S_MntMeatProducts
169542    +          +    -5.64377068696071 * S_NumCatalogPurchases
169543    +          +       1.315880732417 * S_NumDealsPurchases
169544    +          +    -7.12689902819995 * S_NumWebVisitsMonth
169545    +          +     -0.1333171344564 * S_RFMstat  +     8.57178329047956 *
169546    +        S_Recency  +     2.42655161118896 * S_Teenhome
169547    +          +     0.41845495922131 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -4.72019183577823 * S_AcceptedCmpTotal + 5.14902294151494 *
S_Frq + -2.7967028726716 * S_Income + 7.90170532262596 * S_Mnt + -0.27896242131344 *
S_MntGoldProds + -6.13177486713562 * S_MntMeatProducts + -5.64377068696071 *
S_NumCatalogPurchases + 1.315880732417 * S_NumDealsPurchases + -7.12689902819995 *
S_NumWebVisitsMonth + -0.1333171344564 * S_RFMstat + 8.57178329047956 * S_Recency +
2.42655161118896 * S_Teenhome + 0.41845495922131 * S_Year_Birth ;
169548    +   H1x1_3  =    -3.47660178529996 * S_AcceptedCmpTotal
169549    +          +     6.36750571377116 * S_Frq  +    -3.65638554203354 * S_Income
169550    +          +     5.03085244876136 * S_Mnt  +    -1.53184712146016 *
169551    +        S_MntGoldProds  +    -11.4803326240536 * S_MntMeatProducts
169552    +          +    -7.71653347900468 * S_NumCatalogPurchases
169553    +          +    -2.29382480020793 * S_NumDealsPurchases
169554    +          +    -3.92350308032578 * S_NumWebVisitsMonth
169555    +          +      0.1666173174602 * S_RFMstat  +      5.5545699438819 *
169556    +        S_Recency  +     1.88830044274756 * S_Teenhome
169557    +          +     0.36177301880441 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -3.47660178529996 * S_AcceptedCmpTotal + 6.36750571377116 *
S_Frq + -3.65638554203354 * S_Income + 5.03085244876136 * S_Mnt + -1.53184712146016 *
S_MntGoldProds + -11.4803326240536 * S_MntMeatProducts + -7.71653347900468 *
S_NumCatalogPurchases + -2.29382480020793 * S_NumDealsPurchases + -3.92350308032578 *
S_NumWebVisitsMonth + 0.1666173174602 * S_RFMstat + 5.5545699438819 * S_Recency +
1.88830044274756 * S_Teenhome + 0.36177301880441 * S_Year_Birth ;
169558    +   H1x1_4  =     3.46597508500309 * S_AcceptedCmpTotal
169559    +          +    -3.55913679518365 * S_Frq  +     -3.8279864380535 * S_Income
169560    +          +     4.37031319397754 * S_Mnt  +     0.25558899887189 *
169561    +        S_MntGoldProds  +     1.30937005137526 * S_MntMeatProducts
169562    +          +     0.50178849511862 * S_NumCatalogPurchases
169563    +          +     3.33915340676542 * S_NumDealsPurchases
169564    +          +     2.99171363234904 * S_NumWebVisitsMonth
169565    +          +    -1.10860117011224 * S_RFMstat  +     -5.2144291963152 *
169566    +        S_Recency  +     1.84778865722952 * S_Teenhome
169567    +          +     1.48264084751626 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 3.46597508500309 * S_AcceptedCmpTotal + -3.55913679518365 *
S_Frq + -3.8279864380535 * S_Income + 4.37031319397754 * S_Mnt + 0.25558899887189 *
S_MntGoldProds + 1.30937005137526 * S_MntMeatProducts + 0.50178849511862 *
S_NumCatalogPurchases + 3.33915340676542 * S_NumDealsPurchases + 2.99171363234904 *
S_NumWebVisitsMonth + -1.10860117011224 * S_RFMstat + -5.2144291963152 * S_Recency +
1.84778865722952 * S_Teenhome + 1.48264084751626 * S_Year_Birth ;
169568    +   H1x1_5  =    -3.28077802512331 * S_AcceptedCmpTotal
169569    +          +     3.26112701694144 * S_Frq  +    -3.51257256391539 * S_Income
169570    +          +     -13.277904245629 * S_Mnt  +    -0.08185099069039 *
169571    +        S_MntGoldProds  +      2.6349809613264 * S_MntMeatProducts
169572    +          +    -5.23430097842472 * S_NumCatalogPurchases
169573    +          +    -1.25644862473488 * S_NumDealsPurchases
169574    +          +     -3.0943337340276 * S_NumWebVisitsMonth
169575    +          +     0.96429102250453 * S_RFMstat  +     4.60373013139143 *
169576    +        S_Recency  +     1.52557456336148 * S_Teenhome
169577    +          +     0.00287578113165 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -3.28077802512331 * S_AcceptedCmpTotal + 3.26112701694144 *
S_Frq + -3.51257256391539 * S_Income + -13.277904245629 * S_Mnt + -0.08185099069039 *
S_MntGoldProds + 2.6349809613264 * S_MntMeatProducts + -5.23430097842472 *
S_NumCatalogPurchases + -1.25644862473488 * S_NumDealsPurchases + -3.0943337340276 *
S_NumWebVisitsMonth + 0.96429102250453 * S_RFMstat + 4.60373013139143 * S_Recency +
1.52557456336148 * S_Teenhome + 0.00287578113165 * S_Year_Birth ;
169578    +   H1x1_1  = H1x1_1  +     1.77432710413329 * Marital_StatusDivorced
169579    +          +     5.12496303990022 * Marital_StatusMarried
169580    +          +    -7.61364369696186 * Marital_StatusSingle
169581    +          +     2.78937374370395 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 1.77432710413329 * Marital_StatusDivorced +
5.12496303990022 * Marital_StatusMarried + -7.61364369696186 * Marital_StatusSingle +
2.78937374370395 * Marital_StatusTogether ;
169582    +   H1x1_2  = H1x1_2  +    -5.49070434381597 * Marital_StatusDivorced
169583    +          +     7.65332274940308 * Marital_StatusMarried
169584    +          +    -5.13332947688313 * Marital_StatusSingle
169585    +          +     8.25159601985572 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -5.49070434381597 * Marital_StatusDivorced +
7.65332274940308 * Marital_StatusMarried + -5.13332947688313 * Marital_StatusSingle +
8.25159601985572 * Marital_StatusTogether ;
169586    +   H1x1_3  = H1x1_3  +     1.57910552070948 * Marital_StatusDivorced
169587    +          +     7.95162959069432 * Marital_StatusMarried
169588    +          +    -6.10797604390061 * Marital_StatusSingle
169589    +          +     2.98577039618027 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 1.57910552070948 * Marital_StatusDivorced +
7.95162959069432 * Marital_StatusMarried + -6.10797604390061 * Marital_StatusSingle +
2.98577039618027 * Marital_StatusTogether ;
169590    +   H1x1_4  = H1x1_4  +     3.65411081783958 * Marital_StatusDivorced
169591    +          +     5.45977621823616 * Marital_StatusMarried
169592    +          +    -10.3527985391218 * Marital_StatusSingle
169593    +          +     4.66094015963389 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 3.65411081783958 * Marital_StatusDivorced +
5.45977621823616 * Marital_StatusMarried + -10.3527985391218 * Marital_StatusSingle +
4.66094015963389 * Marital_StatusTogether ;
169594    +   H1x1_5  = H1x1_5  +     1.57864743151562 * Marital_StatusDivorced
169595    +          +     8.15909630638185 * Marital_StatusMarried
169596    +          +    -5.88497367282032 * Marital_StatusSingle
169597    +          +     3.05474303626666 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 1.57864743151562 * Marital_StatusDivorced +
8.15909630638185 * Marital_StatusMarried + -5.88497367282032 * Marital_StatusSingle +
3.05474303626666 * Marital_StatusTogether ;
169598    +   H1x1_1  =    -1.55078746609233 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.55078746609233 + H1x1_1 ;
169599    +   H1x1_2  =     5.40474806112383 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 5.40474806112383 + H1x1_2 ;
169600    +   H1x1_3  =     11.2733164995662 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 11.2733164995662 + H1x1_3 ;
169601    +   H1x1_4  =    -7.78487963966384 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -7.78487963966384 + H1x1_4 ;
169602    +   H1x1_5  =      3.8784406873535 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 3.8784406873535 + H1x1_5 ;
169603    +   H1x1_6  = 0;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0;
169604    +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
169605    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
169606    +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
169607    +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
169608    +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
169609    +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
169610    +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
169611    +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
169612    +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
169613    +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
169614    +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
169615    +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
169616    +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
169617    +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
169618    +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
169619    +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
169620    +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
169621    +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
169622    +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
169623    +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
169624    +END;
MPRINT(EM_DIAGRAM):   END;
169625    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
169626    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
169627    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
169628    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
169629    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
169630    +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
169631    +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
169632    +END;
MPRINT(EM_DIAGRAM):   END;
169633    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
169634    +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
169635    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
169636    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
169637    +   H1x2_1  =     0.07453146398445 * S_AcceptedCmpTotal
169638    +          +     0.17438368465616 * S_Frq  +     0.97121905855093 * S_Income
169639    +          +    -0.15757686261675 * S_Mnt  +     0.28678754855648 *
169640    +        S_MntGoldProds  +     2.03999655184815 * S_MntMeatProducts
169641    +          +      0.8747576336553 * S_NumCatalogPurchases
169642    +          +    -0.23551985234916 * S_NumDealsPurchases
169643    +          +     0.83901499225112 * S_NumWebVisitsMonth
169644    +          +     -0.7643570473353 * S_RFMstat  +      0.0823609346051 *
169645    +        S_Recency  +    -0.38340703993831 * S_Teenhome
169646    +          +     1.16037573405943 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.07453146398445 * S_AcceptedCmpTotal + 0.17438368465616 *
S_Frq + 0.97121905855093 * S_Income + -0.15757686261675 * S_Mnt + 0.28678754855648 *
S_MntGoldProds + 2.03999655184815 * S_MntMeatProducts + 0.8747576336553 *
S_NumCatalogPurchases + -0.23551985234916 * S_NumDealsPurchases + 0.83901499225112 *
S_NumWebVisitsMonth + -0.7643570473353 * S_RFMstat + 0.0823609346051 * S_Recency +
-0.38340703993831 * S_Teenhome + 1.16037573405943 * S_Year_Birth ;
169647    +   H1x2_2  =      -2.285017059996 * S_AcceptedCmpTotal
169648    +          +    -0.29646095672581 * S_Frq  +     -3.5024410668082 * S_Income
169649    +          +    -2.12091528193185 * S_Mnt  +    -1.48506012188621 *
169650    +        S_MntGoldProds  +    -1.38316375865608 * S_MntMeatProducts
169651    +          +    -0.99107054453387 * S_NumCatalogPurchases
169652    +          +    -0.68379823410573 * S_NumDealsPurchases
169653    +          +    -1.67939872609259 * S_NumWebVisitsMonth
169654    +          +     0.49106697429539 * S_RFMstat  +    -0.01117108974211 *
169655    +        S_Recency  +    -1.65033346710833 * S_Teenhome
169656    +          +    -1.03897054098621 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -2.285017059996 * S_AcceptedCmpTotal + -0.29646095672581 *
S_Frq + -3.5024410668082 * S_Income + -2.12091528193185 * S_Mnt + -1.48506012188621 *
S_MntGoldProds + -1.38316375865608 * S_MntMeatProducts + -0.99107054453387 *
S_NumCatalogPurchases + -0.68379823410573 * S_NumDealsPurchases + -1.67939872609259 *
S_NumWebVisitsMonth + 0.49106697429539 * S_RFMstat + -0.01117108974211 * S_Recency +
-1.65033346710833 * S_Teenhome + -1.03897054098621 * S_Year_Birth ;
169657    +   H1x2_3  =      2.9562672276462 * S_AcceptedCmpTotal
169658    +          +    -0.19531439441895 * S_Frq  +      0.3125078734463 * S_Income
169659    +          +     -1.6099267525002 * S_Mnt  +    -0.36573328507463 *
169660    +        S_MntGoldProds  +     -0.3392853565114 * S_MntMeatProducts
169661    +          +      1.4506330104932 * S_NumCatalogPurchases
169662    +          +     0.20085283861849 * S_NumDealsPurchases
169663    +          +     2.37974383924154 * S_NumWebVisitsMonth
169664    +          +     -0.1106906484364 * S_RFMstat  +    -3.36701384866793 *
169665    +        S_Recency  +     0.60726269989058 * S_Teenhome
169666    +          +     0.51474814816173 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_3 = 2.9562672276462 * S_AcceptedCmpTotal + -0.19531439441895 *
S_Frq + 0.3125078734463 * S_Income + -1.6099267525002 * S_Mnt + -0.36573328507463 *
S_MntGoldProds + -0.3392853565114 * S_MntMeatProducts + 1.4506330104932 *
S_NumCatalogPurchases + 0.20085283861849 * S_NumDealsPurchases + 2.37974383924154 *
S_NumWebVisitsMonth + -0.1106906484364 * S_RFMstat + -3.36701384866793 * S_Recency +
0.60726269989058 * S_Teenhome + 0.51474814816173 * S_Year_Birth ;
169667    +   H1x2_4  =    -3.19375607611292 * S_AcceptedCmpTotal
169668    +          +    -1.28391627024222 * S_Frq  +     1.20886875907222 * S_Income
169669    +          +     0.33241907162962 * S_Mnt  +     0.81131852742978 *
169670    +        S_MntGoldProds  +     0.66955477854362 * S_MntMeatProducts
169671    +          +    -0.79952426911069 * S_NumCatalogPurchases
169672    +          +    -0.70571099772216 * S_NumDealsPurchases
169673    +          +    -0.32158728049114 * S_NumWebVisitsMonth
169674    +          +    -0.83126265863782 * S_RFMstat  +     1.49830148501327 *
169675    +        S_Recency  +     2.29389047813725 * S_Teenhome
169676    +          +     0.04615513391624 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -3.19375607611292 * S_AcceptedCmpTotal + -1.28391627024222 *
S_Frq + 1.20886875907222 * S_Income + 0.33241907162962 * S_Mnt + 0.81131852742978 *
S_MntGoldProds + 0.66955477854362 * S_MntMeatProducts + -0.79952426911069 *
S_NumCatalogPurchases + -0.70571099772216 * S_NumDealsPurchases + -0.32158728049114 *
S_NumWebVisitsMonth + -0.83126265863782 * S_RFMstat + 1.49830148501327 * S_Recency +
2.29389047813725 * S_Teenhome + 0.04615513391624 * S_Year_Birth ;
169677    +   H1x2_5  =     -0.6002425930451 * S_AcceptedCmpTotal
169678    +          +    -0.86762771301251 * S_Frq  +    -0.57793933969656 * S_Income
169679    +          +     0.41975808190408 * S_Mnt  +    -0.13242897225011 *
169680    +        S_MntGoldProds  +    -1.44402585881872 * S_MntMeatProducts
169681    +          +    -0.41491605544255 * S_NumCatalogPurchases
169682    +          +     0.49374983047507 * S_NumDealsPurchases
169683    +          +    -1.38692718220359 * S_NumWebVisitsMonth
169684    +          +    -0.07580803465143 * S_RFMstat  +      0.4152505934779 *
169685    +        S_Recency  +     1.29605991841828 * S_Teenhome
169686    +          +     2.17160180088465 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.6002425930451 * S_AcceptedCmpTotal + -0.86762771301251 *
S_Frq + -0.57793933969656 * S_Income + 0.41975808190408 * S_Mnt + -0.13242897225011 *
S_MntGoldProds + -1.44402585881872 * S_MntMeatProducts + -0.41491605544255 *
S_NumCatalogPurchases + 0.49374983047507 * S_NumDealsPurchases + -1.38692718220359 *
S_NumWebVisitsMonth + -0.07580803465143 * S_RFMstat + 0.4152505934779 * S_Recency +
1.29605991841828 * S_Teenhome + 2.17160180088465 * S_Year_Birth ;
169687    +   H1x2_1  = H1x2_1  +     0.77674448865903 * Marital_StatusDivorced
169688    +          +    -1.29227303709115 * Marital_StatusMarried
169689    +          +     0.71446782242025 * Marital_StatusSingle
169690    +          +     0.55295867102727 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 0.77674448865903 * Marital_StatusDivorced +
-1.29227303709115 * Marital_StatusMarried + 0.71446782242025 * Marital_StatusSingle +
0.55295867102727 * Marital_StatusTogether ;
169691    +   H1x2_2  = H1x2_2  +     -0.1845223373129 * Marital_StatusDivorced
169692    +          +      2.0815223604364 * Marital_StatusMarried
169693    +          +     0.79462013188709 * Marital_StatusSingle
169694    +          +     0.20668835346022 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.1845223373129 * Marital_StatusDivorced +
2.0815223604364 * Marital_StatusMarried + 0.79462013188709 * Marital_StatusSingle +
0.20668835346022 * Marital_StatusTogether ;
169695    +   H1x2_3  = H1x2_3  +    -1.02774258915556 * Marital_StatusDivorced
169696    +          +     0.44769683627357 * Marital_StatusMarried
169697    +          +     1.09957357551209 * Marital_StatusSingle
169698    +          +     0.98246644516303 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -1.02774258915556 * Marital_StatusDivorced +
0.44769683627357 * Marital_StatusMarried + 1.09957357551209 * Marital_StatusSingle +
0.98246644516303 * Marital_StatusTogether ;
169699    +   H1x2_4  = H1x2_4  +     1.02578628033933 * Marital_StatusDivorced
169700    +          +    -0.71096069683657 * Marital_StatusMarried
169701    +          +    -0.46849808497503 * Marital_StatusSingle
169702    +          +    -0.50186472808298 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 1.02578628033933 * Marital_StatusDivorced +
-0.71096069683657 * Marital_StatusMarried + -0.46849808497503 * Marital_StatusSingle +
-0.50186472808298 * Marital_StatusTogether ;
169703    +   H1x2_5  = H1x2_5  +     0.83514340443964 * Marital_StatusDivorced
169704    +          +     0.21000014809177 * Marital_StatusMarried
169705    +          +    -1.05959388759825 * Marital_StatusSingle
169706    +          +     -0.8202251717493 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.83514340443964 * Marital_StatusDivorced +
0.21000014809177 * Marital_StatusMarried + -1.05959388759825 * Marital_StatusSingle +
-0.8202251717493 * Marital_StatusTogether ;
169707    +   H1x2_1  =     0.66244588339698 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.66244588339698 + H1x2_1 ;
169708    +   H1x2_2  =     0.36306484617725 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.36306484617725 + H1x2_2 ;
169709    +   H1x2_3  =     0.00299288434405 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = 0.00299288434405 + H1x2_3 ;
169710    +   H1x2_4  =     0.32206403734945 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.32206403734945 + H1x2_4 ;
169711    +   H1x2_5  =     0.48514364636978 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 0.48514364636978 + H1x2_5 ;
169712    +   H1x2_6  = 0;
MPRINT(EM_DIAGRAM):   H1x2_6 = 0;
169713    +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
169714    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
169715    +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
169716    +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
169717    +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
169718    +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
169719    +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
169720    +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
169721    +   H1x2_4  = EXP(H1x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(H1x2_4 - _MAX_);
169722    +   _SUM_ = _SUM_ + H1x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_4 ;
169723    +   H1x2_5  = EXP(H1x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(H1x2_5 - _MAX_);
169724    +   _SUM_ = _SUM_ + H1x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_5 ;
169725    +   H1x2_6  = EXP(H1x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(H1x2_6 - _MAX_);
169726    +   _SUM_ = _SUM_ + H1x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_6 ;
169727    +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
169728    +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
169729    +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
169730    +   H1x2_4  = H1x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 / _SUM_;
169731    +   H1x2_5  = H1x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 / _SUM_;
169732    +   H1x2_6  = H1x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 / _SUM_;
169733    +END;
MPRINT(EM_DIAGRAM):   END;
169734    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
169735    +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
169736    +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
169737    +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
169738    +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
169739    +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
169740    +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
169741    +END;
MPRINT(EM_DIAGRAM):   END;
169742    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
169743    +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
169744    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
169745    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
169746    +   H2x1_1  =     5.34062678932931 * H1x1_1  +     7.71604112891627 * H1x1_2
169747    +          +     7.54377937186103 * H1x1_3  +    -5.90943850663966 * H1x1_4
169748    +          +    -6.06522890475814 * H1x1_5  +    -7.94470945127082 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 5.34062678932931 * H1x1_1 + 7.71604112891627 * H1x1_2 +
7.54377937186103 * H1x1_3 + -5.90943850663966 * H1x1_4 + -6.06522890475814 * H1x1_5 +
-7.94470945127082 * H1x1_6 ;
169749    +   H2x1_2  =      1.1479485803131 * H1x1_1  +      1.4482835893576 * H1x1_2
169750    +          +    -0.15220644394866 * H1x1_3  +    -1.30000676790854 * H1x1_4
169751    +          +    -0.49333138568117 * H1x1_5  +    -1.96124154717115 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.1479485803131 * H1x1_1 + 1.4482835893576 * H1x1_2 +
-0.15220644394866 * H1x1_3 + -1.30000676790854 * H1x1_4 + -0.49333138568117 * H1x1_5 +
-1.96124154717115 * H1x1_6 ;
169752    +   H2x1_3  =     2.12915623251937 * H1x1_1  +     4.39530013559682 * H1x1_2
169753    +          +     3.38050961443392 * H1x1_3  +    -5.12182301645649 * H1x1_4
169754    +          +    -3.74697079524831 * H1x1_5  +    -5.26174801543685 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 2.12915623251937 * H1x1_1 + 4.39530013559682 * H1x1_2 +
3.38050961443392 * H1x1_3 + -5.12182301645649 * H1x1_4 + -3.74697079524831 * H1x1_5 +
-5.26174801543685 * H1x1_6 ;
169755    +   H2x1_4  =     0.54854810712303 * H1x1_1  +      1.6486650469525 * H1x1_2
169756    +          +     1.84563084742932 * H1x1_3  +    -2.43710509923951 * H1x1_4
169757    +          +     0.03038093596976 * H1x1_5  +    -1.34566786751269 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 0.54854810712303 * H1x1_1 + 1.6486650469525 * H1x1_2 +
1.84563084742932 * H1x1_3 + -2.43710509923951 * H1x1_4 + 0.03038093596976 * H1x1_5 +
-1.34566786751269 * H1x1_6 ;
169758    +   H2x1_5  =     0.89845480530178 * H1x1_1  +     3.19967829294268 * H1x1_2
169759    +          +     3.58592569542093 * H1x1_3  +    -3.76417733693485 * H1x1_4
169760    +          +     -4.1568039640005 * H1x1_5  +    -4.42895004794637 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = 0.89845480530178 * H1x1_1 + 3.19967829294268 * H1x1_2 +
3.58592569542093 * H1x1_3 + -3.76417733693485 * H1x1_4 + -4.1568039640005 * H1x1_5 +
-4.42895004794637 * H1x1_6 ;
169761    +   H2x1_1  = H2x1_1  +     0.44545310705069 * H1x2_1
169762    +          +     2.72471946580982 * H1x2_2  +    -1.42856846603531 * H1x2_3
169763    +          +     0.25357521888082 * H1x2_4  +    -1.25902268741411 * H1x2_5
169764    +          +    -1.70956044020454 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 0.44545310705069 * H1x2_1 + 2.72471946580982 * H1x2_2
+ -1.42856846603531 * H1x2_3 + 0.25357521888082 * H1x2_4 + -1.25902268741411 * H1x2_5 +
-1.70956044020454 * H1x2_6 ;
169765    +   H2x1_2  = H2x1_2  +      0.9465771639497 * H1x2_1
169766    +          +    -0.41110969777104 * H1x2_2  +    -0.92834816798625 * H1x2_3
169767    +          +     -1.7337755087443 * H1x2_4  +     -1.2522448489667 * H1x2_5
169768    +          +    -0.90111756793979 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.9465771639497 * H1x2_1 + -0.41110969777104 * H1x2_2
+ -0.92834816798625 * H1x2_3 + -1.7337755087443 * H1x2_4 + -1.2522448489667 * H1x2_5 +
-0.90111756793979 * H1x2_6 ;
169769    +   H2x1_3  = H2x1_3  +    -0.22355080983787 * H1x2_1
169770    +          +    -0.18918346120545 * H1x2_2  +    -1.50592518382263 * H1x2_3
169771    +          +    -1.00672320426732 * H1x2_4  +    -1.09510249463921 * H1x2_5
169772    +          +     0.83089577154267 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -0.22355080983787 * H1x2_1 + -0.18918346120545 *
H1x2_2 + -1.50592518382263 * H1x2_3 + -1.00672320426732 * H1x2_4 + -1.09510249463921 * H1x2_5
+ 0.83089577154267 * H1x2_6 ;
169773    +   H2x1_4  = H2x1_4  +    -0.74505363577487 * H1x2_1
169774    +          +     0.41544439689687 * H1x2_2  +    -0.11467073820729 * H1x2_3
169775    +          +    -2.16913690278917 * H1x2_4  +     1.07667011067144 * H1x2_5
169776    +          +    -0.21291665093094 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + -0.74505363577487 * H1x2_1 + 0.41544439689687 * H1x2_2
+ -0.11467073820729 * H1x2_3 + -2.16913690278917 * H1x2_4 + 1.07667011067144 * H1x2_5 +
-0.21291665093094 * H1x2_6 ;
169777    +   H2x1_5  = H2x1_5  +    -0.22639397151159 * H1x2_1
169778    +          +     0.59976504799464 * H1x2_2  +    -1.19497833953318 * H1x2_3
169779    +          +     0.40681132265012 * H1x2_4  +    -1.18142813082248 * H1x2_5
169780    +          +     0.28627108561279 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + -0.22639397151159 * H1x2_1 + 0.59976504799464 * H1x2_2
+ -1.19497833953318 * H1x2_3 + 0.40681132265012 * H1x2_4 + -1.18142813082248 * H1x2_5 +
0.28627108561279 * H1x2_6 ;
169781    +   H2x1_1  =     0.80837297417824 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 0.80837297417824 + H2x1_1 ;
169782    +   H2x1_2  =    -3.15918654233626 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -3.15918654233626 + H2x1_2 ;
169783    +   H2x1_3  =     -1.1148455701308 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -1.1148455701308 + H2x1_3 ;
169784    +   H2x1_4  =    -2.43637271773179 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -2.43637271773179 + H2x1_4 ;
169785    +   H2x1_5  =     -1.5068240097035 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -1.5068240097035 + H2x1_5 ;
169786    +   H2x1_6  = 0;
MPRINT(EM_DIAGRAM):   H2x1_6 = 0;
169787    +   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 , H2x1_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 , H2x1_6 );
169788    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
169789    +   H2x1_1  = EXP(H2x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_1 = EXP(H2x1_1 - _MAX_);
169790    +   _SUM_ = _SUM_ + H2x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_1 ;
169791    +   H2x1_2  = EXP(H2x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_2 = EXP(H2x1_2 - _MAX_);
169792    +   _SUM_ = _SUM_ + H2x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_2 ;
169793    +   H2x1_3  = EXP(H2x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_3 = EXP(H2x1_3 - _MAX_);
169794    +   _SUM_ = _SUM_ + H2x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_3 ;
169795    +   H2x1_4  = EXP(H2x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_4 = EXP(H2x1_4 - _MAX_);
169796    +   _SUM_ = _SUM_ + H2x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_4 ;
169797    +   H2x1_5  = EXP(H2x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_5 = EXP(H2x1_5 - _MAX_);
169798    +   _SUM_ = _SUM_ + H2x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_5 ;
169799    +   H2x1_6  = EXP(H2x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_6 = EXP(H2x1_6 - _MAX_);
169800    +   _SUM_ = _SUM_ + H2x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_6 ;
169801    +   H2x1_1  = H2x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 / _SUM_;
169802    +   H2x1_2  = H2x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 / _SUM_;
169803    +   H2x1_3  = H2x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 / _SUM_;
169804    +   H2x1_4  = H2x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 / _SUM_;
169805    +   H2x1_5  = H2x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 / _SUM_;
169806    +   H2x1_6  = H2x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 / _SUM_;
169807    +END;
MPRINT(EM_DIAGRAM):   END;
169808    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
169809    +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
169810    +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
169811    +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
169812    +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
169813    +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
169814    +   H2x1_6  = .;
MPRINT(EM_DIAGRAM):   H2x1_6 = .;
169815    +END;
MPRINT(EM_DIAGRAM):   END;
169816    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
169817    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
169818    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
169819    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
169820    +   P_DepVar1  =    -14.9408685199347 * H2x1_1  +     1.48309430635242 * H2x1_2
169821    +          +     -4.3496216751271 * H2x1_3  +     0.01239249943556 * H2x1_4
169822    +          +    -6.27169756239783 * H2x1_5  +     2.70843493957574 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -14.9408685199347 * H2x1_1 + 1.48309430635242 * H2x1_2 +
-4.3496216751271 * H2x1_3 + 0.01239249943556 * H2x1_4 + -6.27169756239783 * H2x1_5 +
2.70843493957574 * H2x1_6 ;
169823    +   P_DepVar1  =     5.67267561171469 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 5.67267561171469 + P_DepVar1 ;
169824    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
169825    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
169826    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
169827    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
169828    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
169829    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
169830    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
169831    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
169832    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
169833    +END;
MPRINT(EM_DIAGRAM):   END;
169834    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
169835    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
169836    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
169837    +END;
MPRINT(EM_DIAGRAM):   END;
169838    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
169839    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
169840    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
169841    +END;
MPRINT(EM_DIAGRAM):   END;
169842    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
169843    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
169844    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
169845    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
169846    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
169847    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
169848    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
169849    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
169850    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
169851    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
169852    +END;
MPRINT(EM_DIAGRAM):   END;
169853    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
169854    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
169855    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
169856    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
169857     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
169858     quit;
169859     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
169860     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
169861     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
169862     retain ID 2 Node "AutoNeural42";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural42";
169863     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
169864     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3812 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 3812 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
169865     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
169866     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
169867     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3812 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 3812 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
169868     proc sort data=EMWS8.AutoNeural42_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural42_variableset out=_temp2(keep=NAME
CREATOR);
169869     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
169870     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL42_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
169871     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
169872     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
169873     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
169874     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
169875     proc contents data=EMWS8.AutoNeural42_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural42_train out=_meta(keep=NAME) noprint;
169876     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 71 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
169877     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
169878     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
169879     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 71 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 71 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
169880     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
169881     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
169882     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
169883     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 71 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 71 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
169884     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
169885     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
169885   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1780 rows and 5 columns.
 
169886     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
169887     proc append base=EMWS8.Ensmbl21_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl21_FCMP data=_tempx;
169888     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL21_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1780 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL21_FCMP has 1780 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
169889     filename _pref
169889   ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
169890     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
169891     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
169892    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
169893    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
169894    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
169895    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
169896    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
169897    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
169898     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
169899     quit;
169900     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
169901     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
169902     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
169903     retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
169904     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
169905     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
169906     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
169907     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
169908     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
169909     proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
169910     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
169911     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
169912     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
169913     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
169914     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
169915     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
169916     proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
169917     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
 
 
169918     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
169919     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
169920     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
169921     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
169922     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
169923     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
169924     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
169925     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
169926     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
169926   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
169927     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
169928     proc append base=EMWS8.Ensmbl21_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl21_FCMP data=_tempx;
169929     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL21_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL21_FCMP has 1784 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
169930     filename _pref
169930   ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
169931     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
169932     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
169933    +
169934    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
169935    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
169935   !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
169936    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
169937    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
169938    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
169939    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
169940    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
169941     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
169942     quit;
169943     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
169944     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
169945     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
169946     retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
169947     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
169948     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
169949     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
169950     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
169951     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
169952     proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
169953     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
169954     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
169955     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
169956     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
169957     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
169958     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
169959     proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
169960     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
169961     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
169962     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
169963     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
169964     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
169965     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
169966     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
169967     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
169968     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
169969     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
169969   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
169970     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
169971     proc append base=EMWS8.Ensmbl21_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl21_FCMP data=_tempx;
169972     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL21_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL21_FCMP has 1823 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
169973     filename _pref
169973   ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
169974     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
169975     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
169976    +
169977    +
169978    +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
169979    +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
169980    +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
169981    +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
169982    +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
169983    +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
169984    +
169985    +
169986    +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
169987    +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
169988    +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
169989    +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
169990    +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
169991    +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
169992    +
169993    +
169994    +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
169995    +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
169996    +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
169997    +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
169998    +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
169999    +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
170000    +
170001    +
170002    +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
170003    +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
170004    +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
170005    +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
170006    +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
170007    +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
170008    +
170009    +
170010    +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
170011    +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
170012    +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
170013    +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
170014    +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
170015    +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
170016    +
170017    +
170018    +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
170019    +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
170020    +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
170021    +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
170022    +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
170023    +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
170024    +
170025    +
170026    +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
170027    +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
170028    +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
170029    +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
170030    +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
170031    +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
170032    +
170033    +
170034    +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
170035    +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
170036    +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
170037    +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
170038    +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
170039    +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
170040    +if
170041    +_FILTERNORM1 not in ( '.')
170042    + and
170043    +_FILTERNORM2 not in ( '.')
170044    + and
170045    +_FILTERNORM3 not in ( '.')
170046    + and
170047    +_FILTERNORM4 not in ( '.')
170048    + and
170049    +_FILTERNORM5 not in ( '.')
170050    + and
170051    +_FILTERNORM6 not in ( '.')
170052    + and
170053    +_FILTERNORM7 not in ( ' ')
170054    + and
170055    +_FILTERNORM8 not in ( ' ')
170056    +and
170057    +( Dt_Customer ne .)
170058    +and ( Income ne . and (Income<=107000))
170059    +and ( Kidhome ne .)
170060    +and ( MntFishProducts ne .)
170061    +and ( MntFruits ne .)
170062    +and ( MntGoldProds ne .)
170063    +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
170064    +and ( MntSweetProducts ne .)
170065    +and ( MntWines ne .)
170066    +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
170067    +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
170068    +and ( NumStorePurchases ne .)
170069    +and ( NumWebPurchases ne .)
170070    +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
170071    +and ( Recency ne .)
170072    +and ( Teenhome ne .)
170073    +and ( Year_Birth ne .)
170074    +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
170075    +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
170076    +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
170077    +end;
MPRINT(EM_DIAGRAM):   end;
170078    +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
170079    +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
170080     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
170081     quit;
170082     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
170083     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
170084     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
170085     retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
170086     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
170087     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
170088     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
170089     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
170090     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
170091     proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
170092     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
170093     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
170094     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
170095     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
170096     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
170097     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
170098     proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
170099     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
170100     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
170101     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
170102     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
170103     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
170104     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
170105     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
170106     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
170107     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
170108     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
170108   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
170109     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
170110     proc append base=EMWS8.Ensmbl21_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl21_FCMP data=_tempx;
170111     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL21_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL21_FCMP has 1889 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
170112     %macro varDept(fcmpdata=,id=);
170113     %global nobs&id scoreFlag&id;
170114     %let scoreFlag&id = 0;
170115     %if &id=1 or ^&fcmpStart %then %do;
170116     proc sort data=&fcmpdata out=_temp&id nodupkey;
170117     by NAME;
170118     where id=&id and LHS in( %let j=1;
170119     %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
170120     %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
170121     "&var" %let j = %eval(&j+1);
170122     %end;
170123     );
170124     run;
170125     %let dsid = %sysfunc(open(_temp&id));
170126     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
170127     %let dsid = %sysfunc(close(&dsid));
170128     %if &&nobs&id %then %do;
170129     %let scoreFlag&id = 1;
170130     %let fcmpStart = 1;
170131     %end;
170132     %else %let fcmpStart = 0;
170133     %end;
170134     %else %do;
170135     proc sort data=&fcmpdata out=_tempid;
170136     where id=&id;
170137     by LHS;
170138     run;
170139     %let dsid = %sysfunc(open(_tempid));
170140     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
170141     %let dsid = %sysfunc(close(&dsid));
170142     %if ^&&nobs&id %then %do;
170143     proc datasets lib=work nolist;
170144     delete _tempid;
170145     run;
170146     quit;
170147     %end;
170148     %else %do;
170149     data _tempAll;
170150     set %let j=%eval(&id-1);
170151     %do x=1 %to &j;
170152     %if &&nobs&x %then %do;
170153     _temp&x %end;
170154     %end;
170155     ;
170156     run;
170157     proc sql;
170158     create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
170158   ! work._tempid p2 where p.name=p2.lhs;
170159     quit;
170160     data _temp&id;
170161     set _temp&id;
170162     where LHS ne '' and NAME ne '' and Node ne '';
170163     run;
170164     proc datasets lib=work nolist;
170165     delete _tempAll;
170166     run;
170167     %let dsid = %sysfunc(open(_temp&id));
170168     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
170169     %let dsid = %sysfunc(close(&dsid));
170170     %if ^&&nobs&id %then %do;
170171     proc datasets lib=work nolist;
170172     delete _temp&id;
170173     run;
170174     quit;
170175     %end;
170176     %else %do;
170177     %let scoreFlag&id = 1;
170178     data _temp&id;
170179     set _temp&id;
170180     where LHS ne NAME and node ne '';
170181     run;
170182     %let dsid = %sysfunc(open(_temp&id));
170183     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
170184     %let dsid = %sysfunc(close(&dsid));
170185     %if ^&&nobs&id %then %do;
170186     proc datasets lib=work nolist;
170187     delete _temp&id;
170188     run;
170189     quit;
170190     %end;
170191     %else %do;
170192     proc sort data=_temp&id nodupkey;
170193     by LHS NAME;
170194     run;
170195     %end;
170196     %end;
170197     %end;
170198     %end;
170199     %mend varDept;
170200     %macro optCode(outdata=fcmpdata);
170201     %global fcmpStart;
170202     %let fcmpStart = 0;
170203     %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
170204     %let NumNodes=9;
170205     %do k=1 %to &NumNodes;
170206     %vardept(fcmpdata=&outdata, id=&k);
170207     %end;
170208     %mend optCode;
170209     %optcode(outData=EMWS8.Ensmbl21_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl21_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL21_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl21_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 116 observations read from the data set EMWS8.ENSMBL21_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 82 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 34 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl21_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL21_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl21_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL21_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl21_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL21_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 34 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl21_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL21_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 34 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 26 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 26 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 26 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 26 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl21_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL21_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 26 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 60 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl21_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL21_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl21_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL21_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
170210     filename _pref
170210   ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural46\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural46\EMPUBLISHSCORE.sas";
170211     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
170212     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural46\EMPUBLISHSCORE.sas.
170213    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
170214    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
170215    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
170216    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
170217    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
170218    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
170219    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
170220    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
170221    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
170222    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
170223    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
170224    +LENGTH _WARN_ $4
170225    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
170226    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
170227    +
170228    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
170229    +
170230    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
170231    +
170232    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
170233    +
170234    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
170235    +
170236    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
170237    +
170238    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
170239    +
170240    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
170241    +
170242    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
170243    +
170244    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
170245    +
170246    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
170247    +
170248    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
170249    +
170250    +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
170251    +
170252    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
170253    +
170254    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
170255    +
170256    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
170257    +
170258    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
170259    +
170260    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
170261    +
170262    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
170263    +
170264    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
170265    +
170266    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
170267    +
170268    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
170269    +
170270    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
170271    +
170272    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
170273    +
170274    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
170275    +
170276    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
170277    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
170278    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
170279    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
170280    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
170281    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
170282    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
170283    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
170284    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
170285    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
170286    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
170287    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
170288    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
170289    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
170290    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
170291    +end;
MPRINT(EM_DIAGRAM):   end;
170292    +else do;
MPRINT(EM_DIAGRAM):   else do;
170293    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
170294    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
170295    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
170296    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
170297    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
170298    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
170299    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
170300    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
170301    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
170302    +         end;
MPRINT(EM_DIAGRAM):   end;
170303    +         else do;
MPRINT(EM_DIAGRAM):   else do;
170304    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
170305    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
170306    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
170307    +            end;
MPRINT(EM_DIAGRAM):   end;
170308    +         end;
MPRINT(EM_DIAGRAM):   end;
170309    +      end;
MPRINT(EM_DIAGRAM):   end;
170310    +      else do;
MPRINT(EM_DIAGRAM):   else do;
170311    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
170312    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
170313    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
170314    +         end;
MPRINT(EM_DIAGRAM):   end;
170315    +      end;
MPRINT(EM_DIAGRAM):   end;
170316    +   end;
MPRINT(EM_DIAGRAM):   end;
170317    +   else do;
MPRINT(EM_DIAGRAM):   else do;
170318    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
170319    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
170320    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
170321    +      end;
MPRINT(EM_DIAGRAM):   end;
170322    +      else do;
MPRINT(EM_DIAGRAM):   else do;
170323    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
170324    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
170325    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
170326    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
170327    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
170328    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
170329    +         end;
MPRINT(EM_DIAGRAM):   end;
170330    +      end;
MPRINT(EM_DIAGRAM):   end;
170331    +   end;
MPRINT(EM_DIAGRAM):   end;
170332    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
170333    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
170334    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
170335    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
170336    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
170337    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
170338    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
170339    +   end;
MPRINT(EM_DIAGRAM):   end;
170340    +end;
MPRINT(EM_DIAGRAM):   end;
170341    +
170342    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
170343    +*** Checking missing input Interval
170344    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
170345    +
170346    +IF NMISS(
170347    +   AcceptedCmpTotal ,
170348    +   Frq ,
170349    +   Income ,
170350    +   Mnt ,
170351    +   MntGoldProds ,
170352    +   MntMeatProducts ,
170353    +   NumCatalogPurchases ,
170354    +   NumDealsPurchases ,
170355    +   NumWebVisitsMonth ,
170356    +   RFMstat ,
170357    +   Recency ,
170358    +   Teenhome ,
170359    +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntGoldProds ,
MntMeatProducts , NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , RFMstat ,
Recency , Teenhome , Year_Birth ) THEN DO;
170360    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
170361    +
170362    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
170363    +END;
MPRINT(EM_DIAGRAM):   END;
170364    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
170365    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
170366    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
170367    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
170368    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
170369    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
170370    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
170371    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
170372    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
170373    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
170374    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
170375    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
170376    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
170377    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
170378    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
170379    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
170380    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
170381    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
170382    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
170383    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
170384    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
170385    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
170386    +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
170387    +END;
MPRINT(EM_DIAGRAM):   END;
170388    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
170389    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
170390    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
170391    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
170392    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
170393    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
170394    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
170395    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
170396    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
170397    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
170398    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
170399    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
170400    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
170401    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
170402    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
170403    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
170404    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
170405    +   ELSE S_NumCatalogPurchases
170406    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
170407    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
170408    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
170409    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
170410    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
170411    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
170412    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
170413    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
170414    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
170415    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
170416    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
170417    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
170418    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
170419    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
170420    +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
170421    +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
170422    +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
170423    +END;
MPRINT(EM_DIAGRAM):   END;
170424    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
170425    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
170426    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
170427    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
170428    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
170429    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
170430    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
170431    +   H1x1_1  =    -0.10743056275421 * S_AcceptedCmpTotal
170432    +          +     0.03409888241348 * S_Frq  +    -0.00055974837068 * S_Income
170433    +          +       0.134341851096 * S_Mnt  +    -0.00857864409164 *
170434    +        S_MntGoldProds  +      0.4895390061827 * S_MntMeatProducts
170435    +          +    -0.01423451356563 * S_NumCatalogPurchases
170436    +          +     0.06006350655487 * S_NumDealsPurchases
170437    +          +    -0.20885493964335 * S_NumWebVisitsMonth
170438    +          +    -0.01173202621744 * S_RFMstat  +     0.25819909101611 *
170439    +        S_Recency  +    -0.03326479668652 * S_Teenhome
170440    +          +     0.03371888312814 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.10743056275421 * S_AcceptedCmpTotal + 0.03409888241348 *
S_Frq + -0.00055974837068 * S_Income + 0.134341851096 * S_Mnt + -0.00857864409164 *
S_MntGoldProds + 0.4895390061827 * S_MntMeatProducts + -0.01423451356563 *
S_NumCatalogPurchases + 0.06006350655487 * S_NumDealsPurchases + -0.20885493964335 *
S_NumWebVisitsMonth + -0.01173202621744 * S_RFMstat + 0.25819909101611 * S_Recency +
-0.03326479668652 * S_Teenhome + 0.03371888312814 * S_Year_Birth ;
170441    +   H1x1_2  =    -0.03078478134042 * S_AcceptedCmpTotal
170442    +          +    -0.12351766308972 * S_Frq  +     -0.1943406821731 * S_Income
170443    +          +    -0.36027326127049 * S_Mnt  +     0.05117597516658 *
170444    +        S_MntGoldProds  +     0.07931191953223 * S_MntMeatProducts
170445    +          +    -0.03109266966794 * S_NumCatalogPurchases
170446    +          +     0.05524435494328 * S_NumDealsPurchases
170447    +          +     -0.0105802056898 * S_NumWebVisitsMonth
170448    +          +     0.01793771049002 * S_RFMstat  +      0.0322880575902 *
170449    +        S_Recency  +       0.195010707702 * S_Teenhome
170450    +          +     -0.0351563039686 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.03078478134042 * S_AcceptedCmpTotal + -0.12351766308972 *
S_Frq + -0.1943406821731 * S_Income + -0.36027326127049 * S_Mnt + 0.05117597516658 *
S_MntGoldProds + 0.07931191953223 * S_MntMeatProducts + -0.03109266966794 *
S_NumCatalogPurchases + 0.05524435494328 * S_NumDealsPurchases + -0.0105802056898 *
S_NumWebVisitsMonth + 0.01793771049002 * S_RFMstat + 0.0322880575902 * S_Recency +
0.195010707702 * S_Teenhome + -0.0351563039686 * S_Year_Birth ;
170451    +   H1x1_3  =     0.23990987498311 * S_AcceptedCmpTotal
170452    +          +     0.04052411845464 * S_Frq  +    -0.00302331972067 * S_Income
170453    +          +     0.39981531247427 * S_Mnt  +     0.01433011413993 *
170454    +        S_MntGoldProds  +    -0.19955782687502 * S_MntMeatProducts
170455    +          +     0.07777995109144 * S_NumCatalogPurchases
170456    +          +     0.08683394019767 * S_NumDealsPurchases
170457    +          +     0.27328366433987 * S_NumWebVisitsMonth
170458    +          +      0.0263930429288 * S_RFMstat  +    -0.38900647412136 *
170459    +        S_Recency  +      0.0640153287908 * S_Teenhome
170460    +          +     0.07587467002123 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.23990987498311 * S_AcceptedCmpTotal + 0.04052411845464 *
S_Frq + -0.00302331972067 * S_Income + 0.39981531247427 * S_Mnt + 0.01433011413993 *
S_MntGoldProds + -0.19955782687502 * S_MntMeatProducts + 0.07777995109144 *
S_NumCatalogPurchases + 0.08683394019767 * S_NumDealsPurchases + 0.27328366433987 *
S_NumWebVisitsMonth + 0.0263930429288 * S_RFMstat + -0.38900647412136 * S_Recency +
0.0640153287908 * S_Teenhome + 0.07587467002123 * S_Year_Birth ;
170461    +   H1x1_1  = H1x1_1  +    -0.05820552608682 * Marital_StatusDivorced
170462    +          +    -0.02695167777393 * Marital_StatusMarried
170463    +          +    -0.00733864032764 * Marital_StatusSingle
170464    +          +     0.03838747494293 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.05820552608682 * Marital_StatusDivorced +
-0.02695167777393 * Marital_StatusMarried + -0.00733864032764 * Marital_StatusSingle +
0.03838747494293 * Marital_StatusTogether ;
170465    +   H1x1_2  = H1x1_2  +    -0.00853551919442 * Marital_StatusDivorced
170466    +          +     0.42249671001117 * Marital_StatusMarried
170467    +          +    -0.18515416581955 * Marital_StatusSingle
170468    +          +     0.25783473520826 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.00853551919442 * Marital_StatusDivorced +
0.42249671001117 * Marital_StatusMarried + -0.18515416581955 * Marital_StatusSingle +
0.25783473520826 * Marital_StatusTogether ;
170469    +   H1x1_3  = H1x1_3  +      0.4175036565076 * Marital_StatusDivorced
170470    +          +     0.45127582934777 * Marital_StatusMarried
170471    +          +       0.358157766485 * Marital_StatusSingle
170472    +          +     0.42627185625497 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.4175036565076 * Marital_StatusDivorced +
0.45127582934777 * Marital_StatusMarried + 0.358157766485 * Marital_StatusSingle +
0.42627185625497 * Marital_StatusTogether ;
170473    +   H1x1_1  =    -1.23226472635566 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.23226472635566 + H1x1_1 ;
170474    +   H1x1_2  =      2.2313165328971 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 2.2313165328971 + H1x1_2 ;
170475    +   H1x1_3  =     0.09755782095138 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.09755782095138 + H1x1_3 ;
170476    +   H1x1_1  = SIN(H1x1_1 );
MPRINT(EM_DIAGRAM):   H1x1_1 = SIN(H1x1_1 );
170477    +   H1x1_2  = SIN(H1x1_2 );
MPRINT(EM_DIAGRAM):   H1x1_2 = SIN(H1x1_2 );
170478    +   H1x1_3  = SIN(H1x1_3 );
MPRINT(EM_DIAGRAM):   H1x1_3 = SIN(H1x1_3 );
170479    +END;
MPRINT(EM_DIAGRAM):   END;
170480    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
170481    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
170482    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
170483    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
170484    +END;
MPRINT(EM_DIAGRAM):   END;
170485    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
170486    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
170487    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
170488    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
170489    +   P_DepVar1  =     -68.075125441494 * H1x1_1  +    -72.7630361672259 * H1x1_2
170490    +          +    -71.6251597703755 * H1x1_3 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -68.075125441494 * H1x1_1 + -72.7630361672259 * H1x1_2 +
-71.6251597703755 * H1x1_3 ;
170491    +   P_DepVar1  =    -25.6080957302662 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -25.6080957302662 + P_DepVar1 ;
170492    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
170493    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
170494    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
170495    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
170496    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
170497    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
170498    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
170499    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
170500    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
170501    +END;
MPRINT(EM_DIAGRAM):   END;
170502    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
170503    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
170504    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
170505    +END;
MPRINT(EM_DIAGRAM):   END;
170506    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
170507    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
170508    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
170509    +END;
MPRINT(EM_DIAGRAM):   END;
170510    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
170511    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
170512    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
170513    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
170514    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
170515    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
170516    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
170517    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
170518    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
170519    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
170520    +END;
MPRINT(EM_DIAGRAM):   END;
170521    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
170522    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
170523    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
170524    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
170525     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
170526     quit;
170527     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
170528     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
170529     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
170530     retain ID 2 Node "AutoNeural46";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural46";
170531     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
170532     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 956 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 956 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
170533     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
170534     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
170535     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 956 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 956 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
170536     proc sort data=EMWS8.AutoNeural46_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural46_variableset out=_temp2(keep=NAME
CREATOR);
170537     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
170538     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL46_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
170539     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
170540     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
170541     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
170542     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
170543     proc contents data=EMWS8.AutoNeural46_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural46_train out=_meta(keep=NAME) noprint;
170544     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 56 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
170545     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
170546     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
170547     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 56 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 56 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
170548     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
170549     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
170550     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
170551     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 56 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 56 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
170552     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
170553     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
170553   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 496 rows and 5 columns.
 
170554     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
170555     proc append base=EMWS8.Ensmbl21_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl21_FCMP data=_tempx;
170556     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL21_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 496 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL21_FCMP has 496 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
170557     filename _pref
170557   ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
170558     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
170559     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
170560    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
170561    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
170562    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
170563    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
170564    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
170565    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
170566     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
170567     quit;
170568     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
170569     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
170570     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
170571     retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
170572     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
170573     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
170574     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
170575     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
170576     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
170577     proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
170578     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
170579     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
170580     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
170581     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
170582     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
170583     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
170584     proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
170585     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
170586     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
170587     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
170588     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
170589     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
170590     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
170591     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
170592     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
170593     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
170594     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
170594   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
170595     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
170596     proc append base=EMWS8.Ensmbl21_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl21_FCMP data=_tempx;
170597     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL21_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL21_FCMP has 500 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
170598     filename _pref
170598   ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
170599     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
170600     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
170601    +
170602    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
170603    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
170603   !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
170604    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
170605    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
170606    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
170607    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
170608    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
170609     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
170610     quit;
170611     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
170612     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
170613     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
170614     retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
170615     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
170616     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
170617     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
170618     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
170619     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
170620     proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
170621     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
170622     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
170623     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
170624     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
170625     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
170626     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
170627     proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
170628     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
170629     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
170630     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
170631     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
170632     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
170633     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
170634     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
170635     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
170636     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
170637     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
170637   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
170638     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
170639     proc append base=EMWS8.Ensmbl21_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl21_FCMP data=_tempx;
170640     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL21_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL21_FCMP has 539 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
170641     filename _pref
170641   ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
170642     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
170643     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
170644    +
170645    +
170646    +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
170647    +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
170648    +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
170649    +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
170650    +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
170651    +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
170652    +
170653    +
170654    +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
170655    +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
170656    +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
170657    +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
170658    +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
170659    +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
170660    +
170661    +
170662    +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
170663    +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
170664    +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
170665    +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
170666    +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
170667    +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
170668    +
170669    +
170670    +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
170671    +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
170672    +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
170673    +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
170674    +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
170675    +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
170676    +
170677    +
170678    +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
170679    +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
170680    +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
170681    +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
170682    +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
170683    +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
170684    +
170685    +
170686    +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
170687    +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
170688    +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
170689    +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
170690    +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
170691    +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
170692    +
170693    +
170694    +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
170695    +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
170696    +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
170697    +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
170698    +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
170699    +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
170700    +
170701    +
170702    +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
170703    +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
170704    +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
170705    +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
170706    +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
170707    +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
170708    +if
170709    +_FILTERNORM1 not in ( '.')
170710    + and
170711    +_FILTERNORM2 not in ( '.')
170712    + and
170713    +_FILTERNORM3 not in ( '.')
170714    + and
170715    +_FILTERNORM4 not in ( '.')
170716    + and
170717    +_FILTERNORM5 not in ( '.')
170718    + and
170719    +_FILTERNORM6 not in ( '.')
170720    + and
170721    +_FILTERNORM7 not in ( ' ')
170722    + and
170723    +_FILTERNORM8 not in ( ' ')
170724    +and
170725    +( Dt_Customer ne .)
170726    +and ( Income ne . and (Income<=107000))
170727    +and ( Kidhome ne .)
170728    +and ( MntFishProducts ne .)
170729    +and ( MntFruits ne .)
170730    +and ( MntGoldProds ne .)
170731    +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
170732    +and ( MntSweetProducts ne .)
170733    +and ( MntWines ne .)
170734    +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
170735    +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
170736    +and ( NumStorePurchases ne .)
170737    +and ( NumWebPurchases ne .)
170738    +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
170739    +and ( Recency ne .)
170740    +and ( Teenhome ne .)
170741    +and ( Year_Birth ne .)
170742    +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
170743    +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
170744    +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
170745    +end;
MPRINT(EM_DIAGRAM):   end;
170746    +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
170747    +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
170748     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
170749     quit;
170750     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
170751     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
170752     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
170753     retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
170754     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
170755     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
170756     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
170757     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
170758     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
170759     proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
170760     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
170761     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
170762     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
170763     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
170764     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
170765     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
170766     proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
170767     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
170768     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
170769     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
170770     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
170771     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
170772     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
170773     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
170774     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
170775     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
170776     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
170776   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
170777     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
170778     proc append base=EMWS8.Ensmbl21_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl21_FCMP data=_tempx;
170779     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL21_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL21_FCMP has 605 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
170780     %macro varDept(fcmpdata=,id=);
170781     %global nobs&id scoreFlag&id;
170782     %let scoreFlag&id = 0;
170783     %if &id=1 or ^&fcmpStart %then %do;
170784     proc sort data=&fcmpdata out=_temp&id nodupkey;
170785     by NAME;
170786     where id=&id and LHS in( %let j=1;
170787     %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
170788     %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
170789     "&var" %let j = %eval(&j+1);
170790     %end;
170791     );
170792     run;
170793     %let dsid = %sysfunc(open(_temp&id));
170794     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
170795     %let dsid = %sysfunc(close(&dsid));
170796     %if &&nobs&id %then %do;
170797     %let scoreFlag&id = 1;
170798     %let fcmpStart = 1;
170799     %end;
170800     %else %let fcmpStart = 0;
170801     %end;
170802     %else %do;
170803     proc sort data=&fcmpdata out=_tempid;
170804     where id=&id;
170805     by LHS;
170806     run;
170807     %let dsid = %sysfunc(open(_tempid));
170808     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
170809     %let dsid = %sysfunc(close(&dsid));
170810     %if ^&&nobs&id %then %do;
170811     proc datasets lib=work nolist;
170812     delete _tempid;
170813     run;
170814     quit;
170815     %end;
170816     %else %do;
170817     data _tempAll;
170818     set %let j=%eval(&id-1);
170819     %do x=1 %to &j;
170820     %if &&nobs&x %then %do;
170821     _temp&x %end;
170822     %end;
170823     ;
170824     run;
170825     proc sql;
170826     create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
170826   ! work._tempid p2 where p.name=p2.lhs;
170827     quit;
170828     data _temp&id;
170829     set _temp&id;
170830     where LHS ne '' and NAME ne '' and Node ne '';
170831     run;
170832     proc datasets lib=work nolist;
170833     delete _tempAll;
170834     run;
170835     %let dsid = %sysfunc(open(_temp&id));
170836     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
170837     %let dsid = %sysfunc(close(&dsid));
170838     %if ^&&nobs&id %then %do;
170839     proc datasets lib=work nolist;
170840     delete _temp&id;
170841     run;
170842     quit;
170843     %end;
170844     %else %do;
170845     %let scoreFlag&id = 1;
170846     data _temp&id;
170847     set _temp&id;
170848     where LHS ne NAME and node ne '';
170849     run;
170850     %let dsid = %sysfunc(open(_temp&id));
170851     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
170852     %let dsid = %sysfunc(close(&dsid));
170853     %if ^&&nobs&id %then %do;
170854     proc datasets lib=work nolist;
170855     delete _temp&id;
170856     run;
170857     quit;
170858     %end;
170859     %else %do;
170860     proc sort data=_temp&id nodupkey;
170861     by LHS NAME;
170862     run;
170863     %end;
170864     %end;
170865     %end;
170866     %end;
170867     %mend varDept;
170868     %macro optCode(outdata=fcmpdata);
170869     %global fcmpStart;
170870     %let fcmpStart = 0;
170871     %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
170872     %let NumNodes=9;
170873     %do k=1 %to &NumNodes;
170874     %vardept(fcmpdata=&outdata, id=&k);
170875     %end;
170876     %mend optCode;
170877     %optcode(outData=EMWS8.Ensmbl21_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl21_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL21_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl21_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 71 observations read from the data set EMWS8.ENSMBL21_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 52 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 19 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl21_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL21_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl21_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL21_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl21_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL21_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 19 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 19 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl21_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL21_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 19 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 19 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 26 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 26 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 26 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 26 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl21_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL21_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 19 observations read from the data set WORK._TEMP2.
NOTE: There were 26 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 45 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl21_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL21_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl21_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL21_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
170878     filename _pref
170878   ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural30\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Neural30\EMPUBLISHSCORE.sas";
170879     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
170880     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Neural30\EMPUBLISHSCORE.sas.
170881    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
170882    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
170883    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
170884    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
170885    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
170886    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
170887    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
170888    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
170889    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
170890    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
170891    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
170892    +LENGTH _WARN_ $4
170893    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
170894    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
170895    +
170896    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
170897    +
170898    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
170899    +
170900    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
170901    +
170902    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
170903    +
170904    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
170905    +
170906    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
170907    +
170908    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
170909    +
170910    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
170911    +
170912    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
170913    +
170914    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
170915    +
170916    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
170917    +
170918    +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
170919    +
170920    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
170921    +
170922    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
170923    +
170924    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
170925    +
170926    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
170927    +
170928    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
170929    +
170930    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
170931    +
170932    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
170933    +
170934    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
170935    +
170936    +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
170937    +
170938    +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
170939    +
170940    +      label H17 = 'Hidden: H1=7' ;
MPRINT(EM_DIAGRAM):   label H17 = 'Hidden: H1=7' ;
170941    +
170942    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
170943    +
170944    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
170945    +
170946    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
170947    +
170948    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
170949    +
170950    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
170951    +
170952    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
170953    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
170954    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
170955    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
170956    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
170957    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
170958    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
170959    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
170960    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
170961    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
170962    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
170963    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
170964    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
170965    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
170966    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
170967    +end;
MPRINT(EM_DIAGRAM):   end;
170968    +else do;
MPRINT(EM_DIAGRAM):   else do;
170969    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
170970    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
170971    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
170972    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
170973    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
170974    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
170975    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
170976    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
170977    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
170978    +         end;
MPRINT(EM_DIAGRAM):   end;
170979    +         else do;
MPRINT(EM_DIAGRAM):   else do;
170980    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
170981    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
170982    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
170983    +            end;
MPRINT(EM_DIAGRAM):   end;
170984    +         end;
MPRINT(EM_DIAGRAM):   end;
170985    +      end;
MPRINT(EM_DIAGRAM):   end;
170986    +      else do;
MPRINT(EM_DIAGRAM):   else do;
170987    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
170988    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
170989    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
170990    +         end;
MPRINT(EM_DIAGRAM):   end;
170991    +      end;
MPRINT(EM_DIAGRAM):   end;
170992    +   end;
MPRINT(EM_DIAGRAM):   end;
170993    +   else do;
MPRINT(EM_DIAGRAM):   else do;
170994    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
170995    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
170996    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
170997    +      end;
MPRINT(EM_DIAGRAM):   end;
170998    +      else do;
MPRINT(EM_DIAGRAM):   else do;
170999    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
171000    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
171001    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
171002    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
171003    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
171004    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
171005    +         end;
MPRINT(EM_DIAGRAM):   end;
171006    +      end;
MPRINT(EM_DIAGRAM):   end;
171007    +   end;
MPRINT(EM_DIAGRAM):   end;
171008    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
171009    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
171010    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
171011    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
171012    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
171013    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
171014    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
171015    +   end;
MPRINT(EM_DIAGRAM):   end;
171016    +end;
MPRINT(EM_DIAGRAM):   end;
171017    +
171018    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
171019    +*** Checking missing input Interval
171020    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
171021    +
171022    +IF NMISS(
171023    +   AcceptedCmpTotal ,
171024    +   Frq ,
171025    +   Income ,
171026    +   Mnt ,
171027    +   MntGoldProds ,
171028    +   MntMeatProducts ,
171029    +   NumCatalogPurchases ,
171030    +   NumDealsPurchases ,
171031    +   NumWebVisitsMonth ,
171032    +   RFMstat ,
171033    +   Recency ,
171034    +   Teenhome ,
171035    +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntGoldProds ,
MntMeatProducts , NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , RFMstat ,
Recency , Teenhome , Year_Birth ) THEN DO;
171036    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
171037    +
171038    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
171039    +END;
MPRINT(EM_DIAGRAM):   END;
171040    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
171041    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
171042    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
171043    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
171044    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
171045    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
171046    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
171047    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
171048    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
171049    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
171050    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
171051    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
171052    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
171053    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
171054    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
171055    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
171056    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
171057    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
171058    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
171059    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
171060    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
171061    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
171062    +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
171063    +END;
MPRINT(EM_DIAGRAM):   END;
171064    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
171065    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
171066    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
171067    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
171068    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
171069    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
171070    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
171071    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
171072    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
171073    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
171074    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
171075    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
171076    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
171077    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
171078    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
171079    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
171080    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
171081    +   ELSE S_NumCatalogPurchases
171082    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
171083    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
171084    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
171085    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
171086    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
171087    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
171088    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
171089    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
171090    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
171091    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
171092    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
171093    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
171094    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
171095    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
171096    +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
171097    +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
171098    +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
171099    +END;
MPRINT(EM_DIAGRAM):   END;
171100    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
171101    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
171102    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
171103    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
171104    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
171105    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
171106    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
171107    +   H11  =      0.5448177358872 * S_AcceptedCmpTotal  +    -0.56918032958607 *
171108    +        S_Frq  +     0.21060618200218 * S_Income  +    -0.40246310954349 *
171109    +        S_Mnt  +    -0.18690574082736 * S_MntGoldProds
171110    +          +     0.83028677347709 * S_MntMeatProducts
171111    +          +     0.56366676093724 * S_NumCatalogPurchases
171112    +          +     0.63662278307649 * S_NumDealsPurchases
171113    +          +     0.45030521898264 * S_NumWebVisitsMonth
171114    +          +     0.23005584857727 * S_RFMstat  +    -0.64234820627061 *
171115    +        S_Recency  +     0.00774462163198 * S_Teenhome
171116    +          +     0.03680161242347 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H11 = 0.5448177358872 * S_AcceptedCmpTotal + -0.56918032958607 * S_Frq +
0.21060618200218 * S_Income + -0.40246310954349 * S_Mnt + -0.18690574082736 * S_MntGoldProds +
0.83028677347709 * S_MntMeatProducts + 0.56366676093724 * S_NumCatalogPurchases +
0.63662278307649 * S_NumDealsPurchases + 0.45030521898264 * S_NumWebVisitsMonth +
0.23005584857727 * S_RFMstat + -0.64234820627061 * S_Recency + 0.00774462163198 * S_Teenhome +
0.03680161242347 * S_Year_Birth ;
171117    +   H12  =     0.66298961317118 * S_AcceptedCmpTotal  +      -0.935153223999 *
171118    +        S_Frq  +     0.41449292848187 * S_Income  +    -1.26694271574069 *
171119    +        S_Mnt  +     0.18765833055879 * S_MntGoldProds
171120    +          +       0.802198131853 * S_MntMeatProducts
171121    +          +     0.80699693779953 * S_NumCatalogPurchases
171122    +          +    -0.32111921080627 * S_NumDealsPurchases
171123    +          +     1.05495977150176 * S_NumWebVisitsMonth
171124    +          +    -0.03067071763188 * S_RFMstat  +    -1.14158068786273 *
171125    +        S_Recency  +     -0.3863391299289 * S_Teenhome
171126    +          +    -0.01515301188334 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H12 = 0.66298961317118 * S_AcceptedCmpTotal + -0.935153223999 * S_Frq +
0.41449292848187 * S_Income + -1.26694271574069 * S_Mnt + 0.18765833055879 * S_MntGoldProds +
0.802198131853 * S_MntMeatProducts + 0.80699693779953 * S_NumCatalogPurchases +
-0.32111921080627 * S_NumDealsPurchases + 1.05495977150176 * S_NumWebVisitsMonth +
-0.03067071763188 * S_RFMstat + -1.14158068786273 * S_Recency + -0.3863391299289 * S_Teenhome
+ -0.01515301188334 * S_Year_Birth ;
171127    +   H13  =    -0.20258357169781 * S_AcceptedCmpTotal  +    -0.01927951320398 *
171128    +        S_Frq  +     0.04768604929306 * S_Income  +     0.30271184148932 *
171129    +        S_Mnt  +    -0.24825280571811 * S_MntGoldProds
171130    +          +     0.56634068580527 * S_MntMeatProducts
171131    +          +    -0.06012432168804 * S_NumCatalogPurchases
171132    +          +     0.00616163066885 * S_NumDealsPurchases
171133    +          +    -0.28643715149767 * S_NumWebVisitsMonth
171134    +          +    -0.21657284982294 * S_RFMstat  +    -0.11323681460779 *
171135    +        S_Recency  +    -0.05360047278594 * S_Teenhome
171136    +          +     -0.3574952891844 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H13 = -0.20258357169781 * S_AcceptedCmpTotal + -0.01927951320398 * S_Frq
+ 0.04768604929306 * S_Income + 0.30271184148932 * S_Mnt + -0.24825280571811 * S_MntGoldProds
+ 0.56634068580527 * S_MntMeatProducts + -0.06012432168804 * S_NumCatalogPurchases +
0.00616163066885 * S_NumDealsPurchases + -0.28643715149767 * S_NumWebVisitsMonth +
-0.21657284982294 * S_RFMstat + -0.11323681460779 * S_Recency + -0.05360047278594 * S_Teenhome
+ -0.3574952891844 * S_Year_Birth ;
171137    +   H14  =    -0.01671557172552 * S_AcceptedCmpTotal  +     0.14126480109635 *
171138    +        S_Frq  +    -0.16542260420764 * S_Income  +    -0.02938555904655 *
171139    +        S_Mnt  +    -0.09628993953297 * S_MntGoldProds
171140    +          +     0.29490772106233 * S_MntMeatProducts
171141    +          +    -0.37973658516518 * S_NumCatalogPurchases
171142    +          +     0.08377613406035 * S_NumDealsPurchases
171143    +          +    -0.17242298863338 * S_NumWebVisitsMonth
171144    +          +     0.24623716603984 * S_RFMstat  +     0.27333937644041 *
171145    +        S_Recency  +    -0.00972098456963 * S_Teenhome
171146    +          +      0.0278167406933 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H14 = -0.01671557172552 * S_AcceptedCmpTotal + 0.14126480109635 * S_Frq
+ -0.16542260420764 * S_Income + -0.02938555904655 * S_Mnt + -0.09628993953297 *
S_MntGoldProds + 0.29490772106233 * S_MntMeatProducts + -0.37973658516518 *
S_NumCatalogPurchases + 0.08377613406035 * S_NumDealsPurchases + -0.17242298863338 *
S_NumWebVisitsMonth + 0.24623716603984 * S_RFMstat + 0.27333937644041 * S_Recency +
-0.00972098456963 * S_Teenhome + 0.0278167406933 * S_Year_Birth ;
171147    +   H15  =     0.26338443874493 * S_AcceptedCmpTotal  +    -1.05933447721817 *
171148    +        S_Frq  +     0.15944073710657 * S_Income  +    -0.08201141214939 *
171149    +        S_Mnt  +     0.21740350334003 * S_MntGoldProds
171150    +          +     1.25414895016379 * S_MntMeatProducts
171151    +          +     1.38122748809658 * S_NumCatalogPurchases
171152    +          +     0.28983101492886 * S_NumDealsPurchases
171153    +          +     0.34016977363062 * S_NumWebVisitsMonth
171154    +          +    -0.07539662108021 * S_RFMstat  +    -0.48223583966095 *
171155    +        S_Recency  +    -0.21769282483378 * S_Teenhome
171156    +          +    -0.03637501600986 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H15 = 0.26338443874493 * S_AcceptedCmpTotal + -1.05933447721817 * S_Frq
+ 0.15944073710657 * S_Income + -0.08201141214939 * S_Mnt + 0.21740350334003 * S_MntGoldProds
+ 1.25414895016379 * S_MntMeatProducts + 1.38122748809658 * S_NumCatalogPurchases +
0.28983101492886 * S_NumDealsPurchases + 0.34016977363062 * S_NumWebVisitsMonth +
-0.07539662108021 * S_RFMstat + -0.48223583966095 * S_Recency + -0.21769282483378 * S_Teenhome
+ -0.03637501600986 * S_Year_Birth ;
171157    +   H16  =    -0.02235292240802 * S_AcceptedCmpTotal  +     0.05344170585354 *
171158    +        S_Frq  +    -0.16059837639399 * S_Income  +     -0.2016987951784 *
171159    +        S_Mnt  +     0.10489473589715 * S_MntGoldProds
171160    +          +    -0.24223453001761 * S_MntMeatProducts
171161    +          +     0.08658296964034 * S_NumCatalogPurchases
171162    +          +    -0.12912434217806 * S_NumDealsPurchases
171163    +          +     0.20103807385888 * S_NumWebVisitsMonth
171164    +          +     0.26367670266536 * S_RFMstat  +    -0.44098166476515 *
171165    +        S_Recency  +    -0.46051939225222 * S_Teenhome
171166    +          +    -0.03446671446496 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H16 = -0.02235292240802 * S_AcceptedCmpTotal + 0.05344170585354 * S_Frq
+ -0.16059837639399 * S_Income + -0.2016987951784 * S_Mnt + 0.10489473589715 * S_MntGoldProds
+ -0.24223453001761 * S_MntMeatProducts + 0.08658296964034 * S_NumCatalogPurchases +
-0.12912434217806 * S_NumDealsPurchases + 0.20103807385888 * S_NumWebVisitsMonth +
0.26367670266536 * S_RFMstat + -0.44098166476515 * S_Recency + -0.46051939225222 * S_Teenhome
+ -0.03446671446496 * S_Year_Birth ;
171167    +   H17  =    -0.33265903592033 * S_AcceptedCmpTotal  +      0.8252218937614 *
171168    +        S_Frq  +     0.41954791536781 * S_Income  +     0.46211299623005 *
171169    +        S_Mnt  +     0.01356150389301 * S_MntGoldProds
171170    +          +    -0.44066080788477 * S_MntMeatProducts
171171    +          +    -0.50262630360787 * S_NumCatalogPurchases
171172    +          +    -0.76106916776546 * S_NumDealsPurchases
171173    +          +     -0.1148740911192 * S_NumWebVisitsMonth
171174    +          +    -0.07226607709062 * S_RFMstat  +       0.057209463183 *
171175    +        S_Recency  +    -0.46203013614528 * S_Teenhome
171176    +          +    -0.19513280423468 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H17 = -0.33265903592033 * S_AcceptedCmpTotal + 0.8252218937614 * S_Frq +
0.41954791536781 * S_Income + 0.46211299623005 * S_Mnt + 0.01356150389301 * S_MntGoldProds +
-0.44066080788477 * S_MntMeatProducts + -0.50262630360787 * S_NumCatalogPurchases +
-0.76106916776546 * S_NumDealsPurchases + -0.1148740911192 * S_NumWebVisitsMonth +
-0.07226607709062 * S_RFMstat + 0.057209463183 * S_Recency + -0.46203013614528 * S_Teenhome +
-0.19513280423468 * S_Year_Birth ;
171177    +   H11  = H11  +    -0.25061450597172 * Marital_StatusDivorced
171178    +          +    -0.04190107680763 * Marital_StatusMarried
171179    +          +     0.60475477366656 * Marital_StatusSingle
171180    +          +    -0.23249465504861 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.25061450597172 * Marital_StatusDivorced +
-0.04190107680763 * Marital_StatusMarried + 0.60475477366656 * Marital_StatusSingle +
-0.23249465504861 * Marital_StatusTogether ;
171181    +   H12  = H12  +     0.44175341112836 * Marital_StatusDivorced
171182    +          +    -1.07400114292035 * Marital_StatusMarried
171183    +          +     0.68928831262407 * Marital_StatusSingle
171184    +          +    -0.77691960068409 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.44175341112836 * Marital_StatusDivorced +
-1.07400114292035 * Marital_StatusMarried + 0.68928831262407 * Marital_StatusSingle +
-0.77691960068409 * Marital_StatusTogether ;
171185    +   H13  = H13  +     0.06946121372082 * Marital_StatusDivorced
171186    +          +    -0.20121339725415 * Marital_StatusMarried
171187    +          +     0.11417921391157 * Marital_StatusSingle
171188    +          +     0.09230572943508 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.06946121372082 * Marital_StatusDivorced +
-0.20121339725415 * Marital_StatusMarried + 0.11417921391157 * Marital_StatusSingle +
0.09230572943508 * Marital_StatusTogether ;
171189    +   H14  = H14  +    -0.23294461421366 * Marital_StatusDivorced
171190    +          +    -0.17406326256113 * Marital_StatusMarried
171191    +          +    -0.23720358325215 * Marital_StatusSingle
171192    +          +    -0.43999719513424 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.23294461421366 * Marital_StatusDivorced +
-0.17406326256113 * Marital_StatusMarried + -0.23720358325215 * Marital_StatusSingle +
-0.43999719513424 * Marital_StatusTogether ;
171193    +   H15  = H15  +    -0.02489582646664 * Marital_StatusDivorced
171194    +          +     0.09754614002146 * Marital_StatusMarried
171195    +          +    -0.13004651836918 * Marital_StatusSingle
171196    +          +     0.26863820003928 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.02489582646664 * Marital_StatusDivorced +
0.09754614002146 * Marital_StatusMarried + -0.13004651836918 * Marital_StatusSingle +
0.26863820003928 * Marital_StatusTogether ;
171197    +   H16  = H16  +    -0.03288546792064 * Marital_StatusDivorced
171198    +          +     0.33991066094948 * Marital_StatusMarried
171199    +          +     0.16726714912168 * Marital_StatusSingle
171200    +          +    -0.25665070086096 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + -0.03288546792064 * Marital_StatusDivorced +
0.33991066094948 * Marital_StatusMarried + 0.16726714912168 * Marital_StatusSingle +
-0.25665070086096 * Marital_StatusTogether ;
171201    +   H17  = H17  +     0.10942200598558 * Marital_StatusDivorced
171202    +          +    -0.70406010688765 * Marital_StatusMarried
171203    +          +     0.77355395614085 * Marital_StatusSingle
171204    +          +    -0.37671922953654 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H17 = H17 + 0.10942200598558 * Marital_StatusDivorced +
-0.70406010688765 * Marital_StatusMarried + 0.77355395614085 * Marital_StatusSingle +
-0.37671922953654 * Marital_StatusTogether ;
171205    +   H11  =    -1.10989436564707 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.10989436564707 + H11 ;
171206    +   H12  =    -0.21288050694071 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.21288050694071 + H12 ;
171207    +   H13  =     0.48811938879702 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 0.48811938879702 + H13 ;
171208    +   H14  =    -1.71523073897191 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -1.71523073897191 + H14 ;
171209    +   H15  =    -0.04554136165237 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -0.04554136165237 + H15 ;
171210    +   H16  =    -2.78464164526225 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -2.78464164526225 + H16 ;
171211    +   H17  =     1.73418398166308 + H17 ;
MPRINT(EM_DIAGRAM):   H17 = 1.73418398166308 + H17 ;
171212    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
171213    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
171214    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
171215    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
171216    +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
171217    +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
171218    +   H17  = TANH(H17 );
MPRINT(EM_DIAGRAM):   H17 = TANH(H17 );
171219    +END;
MPRINT(EM_DIAGRAM):   END;
171220    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
171221    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
171222    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
171223    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
171224    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
171225    +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
171226    +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
171227    +   H17  = .;
MPRINT(EM_DIAGRAM):   H17 = .;
171228    +END;
MPRINT(EM_DIAGRAM):   END;
171229    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
171230    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
171231    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
171232    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
171233    +   P_DepVar1  =     1.99078165508498 * H11  +     3.59667555265579 * H12
171234    +          +     0.22520578396696 * H13  +     0.07999056432817 * H14
171235    +          +     2.73336314915489 * H15  +     0.11536142898008 * H16
171236    +          +    -1.90380424208785 * H17 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.99078165508498 * H11 + 3.59667555265579 * H12 +
0.22520578396696 * H13 + 0.07999056432817 * H14 + 2.73336314915489 * H15 + 0.11536142898008 *
H16 + -1.90380424208785 * H17 ;
171237    +   P_DepVar1  =    -1.65978316370044 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.65978316370044 + P_DepVar1 ;
171238    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
171239    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
171240    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
171241    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
171242    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
171243    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
171244    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
171245    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
171246    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
171247    +END;
MPRINT(EM_DIAGRAM):   END;
171248    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
171249    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
171250    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
171251    +END;
MPRINT(EM_DIAGRAM):   END;
171252    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
171253    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
171254    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
171255    +END;
MPRINT(EM_DIAGRAM):   END;
171256    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
171257    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
171258    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
171259    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
171260    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
171261    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
171262    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
171263    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
171264    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
171265    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
171266    +END;
MPRINT(EM_DIAGRAM):   END;
171267    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
171268    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
171269    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
171270    +drop
171271    +H11
171272    +H12
171273    +H13
171274    +H14
171275    +H15
171276    +H16
171277    +H17
171278    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 H17 ;
171279    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
171280     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
171281     quit;
171282     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
171283     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
171284     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
171285     retain ID 2 Node "Neural30";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural30";
171286     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
171287     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1324 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1324 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
171288     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
171289     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
171290     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1324 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1324 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
171291     proc sort data=EMWS8.Neural30_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural30_variableset out=_temp2(keep=NAME CREATOR);
171292     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
171293     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.NEURAL30_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
171294     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
171295     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
171296     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
171297     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
171298     proc contents data=EMWS8.Neural30_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural30_train out=_meta(keep=NAME) noprint;
171299     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
171300     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
171301     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
171302     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
171303     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
171304     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
171305     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
171306     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
171307     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
171308     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
171308   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 572 rows and 5 columns.
 
171309     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
171310     proc append base=EMWS8.Ensmbl21_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl21_FCMP data=_tempx;
171311     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL21_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 572 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL21_FCMP has 572 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
171312     filename _pref
171312   ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
171313     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
171314     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
171315    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
171316    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
171317    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
171318    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
171319    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
171320    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
171321     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
171322     quit;
171323     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
171324     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
171325     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
171326     retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
171327     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
171328     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
171329     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
171330     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
171331     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
171332     proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
171333     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
171334     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
171335     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
171336     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
171337     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
171338     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
171339     proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
171340     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
171341     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
171342     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
171343     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
171344     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
171345     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
171346     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
171347     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
171348     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
171349     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
171349   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
171350     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
171351     proc append base=EMWS8.Ensmbl21_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl21_FCMP data=_tempx;
171352     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL21_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL21_FCMP has 576 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
171353     filename _pref
171353   ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
171354     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
171355     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
171356    +
171357    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
171358    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
171358   !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
171359    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
171360    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
171361    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
171362    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
171363    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
171364     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
171365     quit;
171366     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
171367     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
171368     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
171369     retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
171370     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
171371     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
171372     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
171373     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
171374     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
171375     proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
171376     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
171377     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
171378     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
171379     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
171380     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
171381     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
171382     proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
171383     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
171384     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
171385     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
171386     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
171387     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
171388     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
171389     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
171390     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
171391     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
171392     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
171392   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
171393     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.03 seconds
 
 
171394     proc append base=EMWS8.Ensmbl21_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl21_FCMP data=_tempx;
171395     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL21_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL21_FCMP has 615 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
171396     filename _pref
171396   ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
171397     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
171398     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
171399    +
171400    +
171401    +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
171402    +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
171403    +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
171404    +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
171405    +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
171406    +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
171407    +
171408    +
171409    +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
171410    +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
171411    +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
171412    +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
171413    +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
171414    +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
171415    +
171416    +
171417    +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
171418    +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
171419    +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
171420    +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
171421    +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
171422    +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
171423    +
171424    +
171425    +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
171426    +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
171427    +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
171428    +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
171429    +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
171430    +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
171431    +
171432    +
171433    +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
171434    +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
171435    +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
171436    +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
171437    +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
171438    +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
171439    +
171440    +
171441    +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
171442    +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
171443    +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
171444    +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
171445    +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
171446    +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
171447    +
171448    +
171449    +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
171450    +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
171451    +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
171452    +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
171453    +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
171454    +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
171455    +
171456    +
171457    +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
171458    +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
171459    +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
171460    +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
171461    +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
171462    +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
171463    +if
171464    +_FILTERNORM1 not in ( '.')
171465    + and
171466    +_FILTERNORM2 not in ( '.')
171467    + and
171468    +_FILTERNORM3 not in ( '.')
171469    + and
171470    +_FILTERNORM4 not in ( '.')
171471    + and
171472    +_FILTERNORM5 not in ( '.')
171473    + and
171474    +_FILTERNORM6 not in ( '.')
171475    + and
171476    +_FILTERNORM7 not in ( ' ')
171477    + and
171478    +_FILTERNORM8 not in ( ' ')
171479    +and
171480    +( Dt_Customer ne .)
171481    +and ( Income ne . and (Income<=107000))
171482    +and ( Kidhome ne .)
171483    +and ( MntFishProducts ne .)
171484    +and ( MntFruits ne .)
171485    +and ( MntGoldProds ne .)
171486    +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
171487    +and ( MntSweetProducts ne .)
171488    +and ( MntWines ne .)
171489    +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
171490    +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
171491    +and ( NumStorePurchases ne .)
171492    +and ( NumWebPurchases ne .)
171493    +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
171494    +and ( Recency ne .)
171495    +and ( Teenhome ne .)
171496    +and ( Year_Birth ne .)
171497    +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
171498    +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
171499    +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
171500    +end;
MPRINT(EM_DIAGRAM):   end;
171501    +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
171502    +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
171503     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
171504     quit;
171505     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
171506     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
171507     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
171508     retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
171509     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
171510     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
171511     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
171512     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
171513     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
171514     proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
171515     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
171516     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
171517     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
171518     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
171519     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
171520     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
171521     proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
171522     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
171523     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
171524     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
171525     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
171526     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
171527     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
171528     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
171529     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
171530     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
171531     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
171531   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
171532     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
171533     proc append base=EMWS8.Ensmbl21_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl21_FCMP data=_tempx;
171534     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL21_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL21_FCMP has 681 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
171535     %macro varDept(fcmpdata=,id=);
171536     %global nobs&id scoreFlag&id;
171537     %let scoreFlag&id = 0;
171538     %if &id=1 or ^&fcmpStart %then %do;
171539     proc sort data=&fcmpdata out=_temp&id nodupkey;
171540     by NAME;
171541     where id=&id and LHS in( %let j=1;
171542     %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
171543     %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
171544     "&var" %let j = %eval(&j+1);
171545     %end;
171546     );
171547     run;
171548     %let dsid = %sysfunc(open(_temp&id));
171549     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
171550     %let dsid = %sysfunc(close(&dsid));
171551     %if &&nobs&id %then %do;
171552     %let scoreFlag&id = 1;
171553     %let fcmpStart = 1;
171554     %end;
171555     %else %let fcmpStart = 0;
171556     %end;
171557     %else %do;
171558     proc sort data=&fcmpdata out=_tempid;
171559     where id=&id;
171560     by LHS;
171561     run;
171562     %let dsid = %sysfunc(open(_tempid));
171563     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
171564     %let dsid = %sysfunc(close(&dsid));
171565     %if ^&&nobs&id %then %do;
171566     proc datasets lib=work nolist;
171567     delete _tempid;
171568     run;
171569     quit;
171570     %end;
171571     %else %do;
171572     data _tempAll;
171573     set %let j=%eval(&id-1);
171574     %do x=1 %to &j;
171575     %if &&nobs&x %then %do;
171576     _temp&x %end;
171577     %end;
171578     ;
171579     run;
171580     proc sql;
171581     create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
171581   ! work._tempid p2 where p.name=p2.lhs;
171582     quit;
171583     data _temp&id;
171584     set _temp&id;
171585     where LHS ne '' and NAME ne '' and Node ne '';
171586     run;
171587     proc datasets lib=work nolist;
171588     delete _tempAll;
171589     run;
171590     %let dsid = %sysfunc(open(_temp&id));
171591     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
171592     %let dsid = %sysfunc(close(&dsid));
171593     %if ^&&nobs&id %then %do;
171594     proc datasets lib=work nolist;
171595     delete _temp&id;
171596     run;
171597     quit;
171598     %end;
171599     %else %do;
171600     %let scoreFlag&id = 1;
171601     data _temp&id;
171602     set _temp&id;
171603     where LHS ne NAME and node ne '';
171604     run;
171605     %let dsid = %sysfunc(open(_temp&id));
171606     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
171607     %let dsid = %sysfunc(close(&dsid));
171608     %if ^&&nobs&id %then %do;
171609     proc datasets lib=work nolist;
171610     delete _temp&id;
171611     run;
171612     quit;
171613     %end;
171614     %else %do;
171615     proc sort data=_temp&id nodupkey;
171616     by LHS NAME;
171617     run;
171618     %end;
171619     %end;
171620     %end;
171621     %end;
171622     %mend varDept;
171623     %macro optCode(outdata=fcmpdata);
171624     %global fcmpStart;
171625     %let fcmpStart = 0;
171626     %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
171627     %let NumNodes=9;
171628     %do k=1 %to &NumNodes;
171629     %vardept(fcmpdata=&outdata, id=&k);
171630     %end;
171631     %mend optCode;
171632     %optcode(outData=EMWS8.Ensmbl21_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl21_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL21_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl21_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 62 observations read from the data set EMWS8.ENSMBL21_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 46 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 16 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl21_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL21_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl21_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL21_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl21_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL21_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 16 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 16 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl21_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL21_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 16 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 16 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 26 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 26 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 26 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 26 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl21_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL21_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 16 observations read from the data set WORK._TEMP2.
NOTE: There were 26 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 42 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl21_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL21_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl21_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL21_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
171633     filename _pref
171633   ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural47\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural47\EMPUBLISHSCORE.sas";
171634     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
171635     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural47\EMPUBLISHSCORE.sas.
171636    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
171637    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
171638    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
171639    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
171640    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
171641    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
171642    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
171643    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
171644    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
171645    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
171646    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
171647    +LENGTH _WARN_ $4
171648    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
171649    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
171650    +
171651    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
171652    +
171653    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
171654    +
171655    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
171656    +
171657    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
171658    +
171659    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
171660    +
171661    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
171662    +
171663    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
171664    +
171665    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
171666    +
171667    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
171668    +
171669    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
171670    +
171671    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
171672    +
171673    +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
171674    +
171675    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
171676    +
171677    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
171678    +
171679    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
171680    +
171681    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
171682    +
171683    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
171684    +
171685    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
171686    +
171687    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
171688    +
171689    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
171690    +
171691    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
171692    +
171693    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
171694    +
171695    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
171696    +
171697    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
171698    +
171699    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
171700    +
171701    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
171702    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
171703    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
171704    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
171705    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
171706    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
171707    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
171708    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
171709    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
171710    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
171711    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
171712    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
171713    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
171714    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
171715    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
171716    +end;
MPRINT(EM_DIAGRAM):   end;
171717    +else do;
MPRINT(EM_DIAGRAM):   else do;
171718    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
171719    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
171720    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
171721    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
171722    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
171723    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
171724    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
171725    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
171726    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
171727    +         end;
MPRINT(EM_DIAGRAM):   end;
171728    +         else do;
MPRINT(EM_DIAGRAM):   else do;
171729    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
171730    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
171731    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
171732    +            end;
MPRINT(EM_DIAGRAM):   end;
171733    +         end;
MPRINT(EM_DIAGRAM):   end;
171734    +      end;
MPRINT(EM_DIAGRAM):   end;
171735    +      else do;
MPRINT(EM_DIAGRAM):   else do;
171736    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
171737    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
171738    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
171739    +         end;
MPRINT(EM_DIAGRAM):   end;
171740    +      end;
MPRINT(EM_DIAGRAM):   end;
171741    +   end;
MPRINT(EM_DIAGRAM):   end;
171742    +   else do;
MPRINT(EM_DIAGRAM):   else do;
171743    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
171744    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
171745    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
171746    +      end;
MPRINT(EM_DIAGRAM):   end;
171747    +      else do;
MPRINT(EM_DIAGRAM):   else do;
171748    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
171749    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
171750    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
171751    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
171752    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
171753    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
171754    +         end;
MPRINT(EM_DIAGRAM):   end;
171755    +      end;
MPRINT(EM_DIAGRAM):   end;
171756    +   end;
MPRINT(EM_DIAGRAM):   end;
171757    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
171758    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
171759    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
171760    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
171761    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
171762    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
171763    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
171764    +   end;
MPRINT(EM_DIAGRAM):   end;
171765    +end;
MPRINT(EM_DIAGRAM):   end;
171766    +
171767    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
171768    +*** Checking missing input Interval
171769    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
171770    +
171771    +IF NMISS(
171772    +   AcceptedCmpTotal ,
171773    +   Frq ,
171774    +   Income ,
171775    +   Mnt ,
171776    +   MntGoldProds ,
171777    +   MntMeatProducts ,
171778    +   NumCatalogPurchases ,
171779    +   NumDealsPurchases ,
171780    +   NumWebVisitsMonth ,
171781    +   RFMstat ,
171782    +   Recency ,
171783    +   Teenhome ,
171784    +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntGoldProds ,
MntMeatProducts , NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , RFMstat ,
Recency , Teenhome , Year_Birth ) THEN DO;
171785    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
171786    +
171787    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
171788    +END;
MPRINT(EM_DIAGRAM):   END;
171789    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
171790    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
171791    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
171792    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
171793    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
171794    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
171795    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
171796    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
171797    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
171798    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
171799    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
171800    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
171801    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
171802    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
171803    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
171804    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
171805    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
171806    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
171807    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
171808    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
171809    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
171810    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
171811    +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
171812    +END;
MPRINT(EM_DIAGRAM):   END;
171813    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
171814    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
171815    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
171816    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
171817    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
171818    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
171819    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
171820    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
171821    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
171822    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
171823    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
171824    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
171825    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
171826    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
171827    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
171828    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
171829    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
171830    +   ELSE S_NumCatalogPurchases
171831    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
171832    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
171833    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
171834    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
171835    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
171836    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
171837    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
171838    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
171839    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
171840    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
171841    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
171842    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
171843    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
171844    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
171845    +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
171846    +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
171847    +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
171848    +END;
MPRINT(EM_DIAGRAM):   END;
171849    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
171850    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
171851    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
171852    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
171853    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
171854    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
171855    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
171856    +   H1x1_1  =      1.3507655650527 * S_AcceptedCmpTotal
171857    +          +    -1.10614122240879 * S_Frq  +     1.75303764660855 * S_Income
171858    +          +    -3.36358487853209 * S_Mnt  +     0.66482370197508 *
171859    +        S_MntGoldProds  +     2.20380795880989 * S_MntMeatProducts
171860    +          +     0.96941096546276 * S_NumCatalogPurchases
171861    +          +    -0.78169009272221 * S_NumDealsPurchases
171862    +          +     2.46694552614806 * S_NumWebVisitsMonth
171863    +          +    -0.70379796230966 * S_RFMstat  +    -2.91060571548081 *
171864    +        S_Recency  +    -1.09760548427625 * S_Teenhome
171865    +          +    -0.04996948842393 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.3507655650527 * S_AcceptedCmpTotal + -1.10614122240879 *
S_Frq + 1.75303764660855 * S_Income + -3.36358487853209 * S_Mnt + 0.66482370197508 *
S_MntGoldProds + 2.20380795880989 * S_MntMeatProducts + 0.96941096546276 *
S_NumCatalogPurchases + -0.78169009272221 * S_NumDealsPurchases + 2.46694552614806 *
S_NumWebVisitsMonth + -0.70379796230966 * S_RFMstat + -2.91060571548081 * S_Recency +
-1.09760548427625 * S_Teenhome + -0.04996948842393 * S_Year_Birth ;
171866    +   H1x1_2  =    -0.31908942522077 * S_AcceptedCmpTotal
171867    +          +     3.74791296051726 * S_Frq  +     2.24284839751303 * S_Income
171868    +          +    -1.78405040388815 * S_Mnt  +      0.8742942749026 *
171869    +        S_MntGoldProds  +    -0.14368654003355 * S_MntMeatProducts
171870    +          +    -2.01779739147185 * S_NumCatalogPurchases
171871    +          +     -2.6507470301089 * S_NumDealsPurchases
171872    +          +     0.43757499676531 * S_NumWebVisitsMonth
171873    +          +    -1.37847156147455 * S_RFMstat  +    -0.69576523519337 *
171874    +        S_Recency  +    -0.45321912120397 * S_Teenhome
171875    +          +     0.52676912620048 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.31908942522077 * S_AcceptedCmpTotal + 3.74791296051726 *
S_Frq + 2.24284839751303 * S_Income + -1.78405040388815 * S_Mnt + 0.8742942749026 *
S_MntGoldProds + -0.14368654003355 * S_MntMeatProducts + -2.01779739147185 *
S_NumCatalogPurchases + -2.6507470301089 * S_NumDealsPurchases + 0.43757499676531 *
S_NumWebVisitsMonth + -1.37847156147455 * S_RFMstat + -0.69576523519337 * S_Recency +
-0.45321912120397 * S_Teenhome + 0.52676912620048 * S_Year_Birth ;
171876    +   H1x1_3  =     2.41023196591392 * S_AcceptedCmpTotal
171877    +          +    -2.36084733932675 * S_Frq  +     1.24213632619464 * S_Income
171878    +          +    -1.85110475917758 * S_Mnt  +    -0.28004157450889 *
171879    +        S_MntGoldProds  +     2.40469717841771 * S_MntMeatProducts
171880    +          +      3.9474982958259 * S_NumCatalogPurchases
171881    +          +       0.376468804707 * S_NumDealsPurchases
171882    +          +     3.31501013882439 * S_NumWebVisitsMonth
171883    +          +     0.11559780336909 * S_RFMstat  +    -4.25267693921008 *
171884    +        S_Recency  +    -1.57729700618019 * S_Teenhome
171885    +          +      0.1824973506119 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 2.41023196591392 * S_AcceptedCmpTotal + -2.36084733932675 *
S_Frq + 1.24213632619464 * S_Income + -1.85110475917758 * S_Mnt + -0.28004157450889 *
S_MntGoldProds + 2.40469717841771 * S_MntMeatProducts + 3.9474982958259 *
S_NumCatalogPurchases + 0.376468804707 * S_NumDealsPurchases + 3.31501013882439 *
S_NumWebVisitsMonth + 0.11559780336909 * S_RFMstat + -4.25267693921008 * S_Recency +
-1.57729700618019 * S_Teenhome + 0.1824973506119 * S_Year_Birth ;
171886    +   H1x1_4  =     -0.2757766975278 * S_AcceptedCmpTotal
171887    +          +     3.82725387338192 * S_Frq  +      -0.761164420496 * S_Income
171888    +          +    -1.14207863171921 * S_Mnt  +     -0.1745335405903 *
171889    +        S_MntGoldProds  +    -5.79657274001258 * S_MntMeatProducts
171890    +          +    -1.47064436222345 * S_NumCatalogPurchases
171891    +          +    -0.47773085529503 * S_NumDealsPurchases
171892    +          +     0.20028656323595 * S_NumWebVisitsMonth
171893    +          +    -0.18383173425255 * S_RFMstat  +     0.10522454853137 *
171894    +        S_Recency  +    -0.11530372179295 * S_Teenhome
171895    +          +    -0.34167488644648 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.2757766975278 * S_AcceptedCmpTotal + 3.82725387338192 *
S_Frq + -0.761164420496 * S_Income + -1.14207863171921 * S_Mnt + -0.1745335405903 *
S_MntGoldProds + -5.79657274001258 * S_MntMeatProducts + -1.47064436222345 *
S_NumCatalogPurchases + -0.47773085529503 * S_NumDealsPurchases + 0.20028656323595 *
S_NumWebVisitsMonth + -0.18383173425255 * S_RFMstat + 0.10522454853137 * S_Recency +
-0.11530372179295 * S_Teenhome + -0.34167488644648 * S_Year_Birth ;
171896    +   H1x1_1  = H1x1_1  +     1.48263364530339 * Marital_StatusDivorced
171897    +          +    -1.68634246986018 * Marital_StatusMarried
171898    +          +     0.61674763327859 * Marital_StatusSingle
171899    +          +    -1.26649958570453 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 1.48263364530339 * Marital_StatusDivorced +
-1.68634246986018 * Marital_StatusMarried + 0.61674763327859 * Marital_StatusSingle +
-1.26649958570453 * Marital_StatusTogether ;
171900    +   H1x1_2  = H1x1_2  +     1.03937964147637 * Marital_StatusDivorced
171901    +          +    -0.63821523628652 * Marital_StatusMarried
171902    +          +    -1.40431603473643 * Marital_StatusSingle
171903    +          +    -0.20849152262706 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 1.03937964147637 * Marital_StatusDivorced +
-0.63821523628652 * Marital_StatusMarried + -1.40431603473643 * Marital_StatusSingle +
-0.20849152262706 * Marital_StatusTogether ;
171904    +   H1x1_3  = H1x1_3  +    -0.00632006555267 * Marital_StatusDivorced
171905    +          +    -2.86773035723606 * Marital_StatusMarried
171906    +          +     2.52900517550184 * Marital_StatusSingle
171907    +          +    -3.34343954102751 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.00632006555267 * Marital_StatusDivorced +
-2.86773035723606 * Marital_StatusMarried + 2.52900517550184 * Marital_StatusSingle +
-3.34343954102751 * Marital_StatusTogether ;
171908    +   H1x1_4  = H1x1_4  +     0.05620673245628 * Marital_StatusDivorced
171909    +          +    -0.89880425714459 * Marital_StatusMarried
171910    +          +     0.97652284934456 * Marital_StatusSingle
171911    +          +    -0.83414241747679 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.05620673245628 * Marital_StatusDivorced +
-0.89880425714459 * Marital_StatusMarried + 0.97652284934456 * Marital_StatusSingle +
-0.83414241747679 * Marital_StatusTogether ;
171912    +   H1x1_1  =    -0.73505942586437 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.73505942586437 + H1x1_1 ;
171913    +   H1x1_2  =     2.97401194500651 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 2.97401194500651 + H1x1_2 ;
171914    +   H1x1_3  =    -7.86049995366383 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -7.86049995366383 + H1x1_3 ;
171915    +   H1x1_4  =    -3.77808914097545 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -3.77808914097545 + H1x1_4 ;
171916    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
171917    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
171918    +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
171919    +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
171920    +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
171921    +   H1x1_4  = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
171922    +END;
MPRINT(EM_DIAGRAM):   END;
171923    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
171924    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
171925    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
171926    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
171927    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
171928    +END;
MPRINT(EM_DIAGRAM):   END;
171929    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
171930    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
171931    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
171932    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
171933    +   P_DepVar1  =     17.1091261255058 * H1x1_1  +    -15.4649724088409 * H1x1_2
171934    +          +     14.2519883476498 * H1x1_3  +    -25.0940711325771 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 17.1091261255058 * H1x1_1 + -15.4649724088409 * H1x1_2 +
14.2519883476498 * H1x1_3 + -25.0940711325771 * H1x1_4 ;
171935    +   P_DepVar1  =     -0.7898064443713 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.7898064443713 + P_DepVar1 ;
171936    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
171937    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
171938    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
171939    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
171940    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
171941    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
171942    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
171943    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
171944    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
171945    +END;
MPRINT(EM_DIAGRAM):   END;
171946    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
171947    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
171948    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
171949    +END;
MPRINT(EM_DIAGRAM):   END;
171950    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
171951    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
171952    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
171953    +END;
MPRINT(EM_DIAGRAM):   END;
171954    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
171955    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
171956    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
171957    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
171958    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
171959    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
171960    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
171961    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
171962    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
171963    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
171964    +END;
MPRINT(EM_DIAGRAM):   END;
171965    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
171966    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
171967    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
171968    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
171969     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
171970     quit;
171971     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
171972     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
171973     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
171974     retain ID 2 Node "AutoNeural47";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural47";
171975     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
171976     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1083 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1083 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
171977     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
171978     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
171979     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1083 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1083 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
171980     proc sort data=EMWS8.AutoNeural47_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural47_variableset out=_temp2(keep=NAME
CREATOR);
171981     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
171982     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL47_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
171983     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
171984     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
171985     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
171986     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
171987     proc contents data=EMWS8.AutoNeural47_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural47_train out=_meta(keep=NAME) noprint;
171988     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 57 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
171989     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
171990     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
171991     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 57 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 57 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
171992     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
171993     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
171994     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
171995     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 57 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 57 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
171996     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
171997     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
171997   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 550 rows and 5 columns.
 
171998     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
171999     proc append base=EMWS8.Ensmbl21_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl21_FCMP data=_tempx;
172000     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL21_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 550 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL21_FCMP has 550 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
172001     filename _pref
172001   ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
172002     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
172003     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
172004    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
172005    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
172006    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
172007    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
172008    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
172009    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
172010     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
172011     quit;
172012     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
172013     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
172014     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
172015     retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
172016     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
172017     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
172018     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
172019     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
172020     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
172021     proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
172022     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
172023     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
172024     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
172025     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
172026     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
172027     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
172028     proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
172029     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
172030     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
172031     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
172032     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
172033     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
172034     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
172035     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
172036     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
172037     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
172038     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
172038   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
172039     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
172040     proc append base=EMWS8.Ensmbl21_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl21_FCMP data=_tempx;
172041     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL21_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL21_FCMP has 554 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
172042     filename _pref
172042   ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
172043     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
172044     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
172045    +
172046    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
172047    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
172047   !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
172048    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
172049    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
172050    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
172051    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
172052    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
172053     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
172054     quit;
172055     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
172056     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
172057     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
172058     retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
172059     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
172060     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
172061     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
172062     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
172063     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
172064     proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
172065     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
172066     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
172067     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
172068     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
172069     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
172070     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
172071     proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
172072     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
172073     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
172074     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
172075     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
172076     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
172077     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
172078     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
172079     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
172080     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
172081     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
172081   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
172082     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
172083     proc append base=EMWS8.Ensmbl21_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl21_FCMP data=_tempx;
172084     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL21_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL21_FCMP has 593 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
172085     filename _pref
172085   ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
172086     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
172087     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
172088    +
172089    +
172090    +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
172091    +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
172092    +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
172093    +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
172094    +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
172095    +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
172096    +
172097    +
172098    +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
172099    +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
172100    +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
172101    +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
172102    +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
172103    +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
172104    +
172105    +
172106    +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
172107    +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
172108    +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
172109    +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
172110    +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
172111    +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
172112    +
172113    +
172114    +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
172115    +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
172116    +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
172117    +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
172118    +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
172119    +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
172120    +
172121    +
172122    +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
172123    +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
172124    +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
172125    +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
172126    +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
172127    +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
172128    +
172129    +
172130    +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
172131    +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
172132    +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
172133    +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
172134    +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
172135    +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
172136    +
172137    +
172138    +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
172139    +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
172140    +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
172141    +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
172142    +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
172143    +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
172144    +
172145    +
172146    +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
172147    +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
172148    +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
172149    +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
172150    +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
172151    +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
172152    +if
172153    +_FILTERNORM1 not in ( '.')
172154    + and
172155    +_FILTERNORM2 not in ( '.')
172156    + and
172157    +_FILTERNORM3 not in ( '.')
172158    + and
172159    +_FILTERNORM4 not in ( '.')
172160    + and
172161    +_FILTERNORM5 not in ( '.')
172162    + and
172163    +_FILTERNORM6 not in ( '.')
172164    + and
172165    +_FILTERNORM7 not in ( ' ')
172166    + and
172167    +_FILTERNORM8 not in ( ' ')
172168    +and
172169    +( Dt_Customer ne .)
172170    +and ( Income ne . and (Income<=107000))
172171    +and ( Kidhome ne .)
172172    +and ( MntFishProducts ne .)
172173    +and ( MntFruits ne .)
172174    +and ( MntGoldProds ne .)
172175    +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
172176    +and ( MntSweetProducts ne .)
172177    +and ( MntWines ne .)
172178    +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
172179    +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
172180    +and ( NumStorePurchases ne .)
172181    +and ( NumWebPurchases ne .)
172182    +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
172183    +and ( Recency ne .)
172184    +and ( Teenhome ne .)
172185    +and ( Year_Birth ne .)
172186    +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
172187    +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
172188    +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
172189    +end;
MPRINT(EM_DIAGRAM):   end;
172190    +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
172191    +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
172192     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
172193     quit;
172194     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
172195     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
172196     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
172197     retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
172198     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
172199     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
172200     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
172201     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
172202     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
172203     proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
172204     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
172205     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
172206     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
172207     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
172208     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
172209     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
172210     proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
172211     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
172212     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
172213     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
172214     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
172215     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
172216     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
172217     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
172218     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
172219     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
172220     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
172220   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
172221     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
172222     proc append base=EMWS8.Ensmbl21_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl21_FCMP data=_tempx;
172223     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL21_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL21_FCMP has 659 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
172224     %macro varDept(fcmpdata=,id=);
172225     %global nobs&id scoreFlag&id;
172226     %let scoreFlag&id = 0;
172227     %if &id=1 or ^&fcmpStart %then %do;
172228     proc sort data=&fcmpdata out=_temp&id nodupkey;
172229     by NAME;
172230     where id=&id and LHS in( %let j=1;
172231     %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
172232     %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
172233     "&var" %let j = %eval(&j+1);
172234     %end;
172235     );
172236     run;
172237     %let dsid = %sysfunc(open(_temp&id));
172238     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
172239     %let dsid = %sysfunc(close(&dsid));
172240     %if &&nobs&id %then %do;
172241     %let scoreFlag&id = 1;
172242     %let fcmpStart = 1;
172243     %end;
172244     %else %let fcmpStart = 0;
172245     %end;
172246     %else %do;
172247     proc sort data=&fcmpdata out=_tempid;
172248     where id=&id;
172249     by LHS;
172250     run;
172251     %let dsid = %sysfunc(open(_tempid));
172252     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
172253     %let dsid = %sysfunc(close(&dsid));
172254     %if ^&&nobs&id %then %do;
172255     proc datasets lib=work nolist;
172256     delete _tempid;
172257     run;
172258     quit;
172259     %end;
172260     %else %do;
172261     data _tempAll;
172262     set %let j=%eval(&id-1);
172263     %do x=1 %to &j;
172264     %if &&nobs&x %then %do;
172265     _temp&x %end;
172266     %end;
172267     ;
172268     run;
172269     proc sql;
172270     create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
172270   ! work._tempid p2 where p.name=p2.lhs;
172271     quit;
172272     data _temp&id;
172273     set _temp&id;
172274     where LHS ne '' and NAME ne '' and Node ne '';
172275     run;
172276     proc datasets lib=work nolist;
172277     delete _tempAll;
172278     run;
172279     %let dsid = %sysfunc(open(_temp&id));
172280     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
172281     %let dsid = %sysfunc(close(&dsid));
172282     %if ^&&nobs&id %then %do;
172283     proc datasets lib=work nolist;
172284     delete _temp&id;
172285     run;
172286     quit;
172287     %end;
172288     %else %do;
172289     %let scoreFlag&id = 1;
172290     data _temp&id;
172291     set _temp&id;
172292     where LHS ne NAME and node ne '';
172293     run;
172294     %let dsid = %sysfunc(open(_temp&id));
172295     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
172296     %let dsid = %sysfunc(close(&dsid));
172297     %if ^&&nobs&id %then %do;
172298     proc datasets lib=work nolist;
172299     delete _temp&id;
172300     run;
172301     quit;
172302     %end;
172303     %else %do;
172304     proc sort data=_temp&id nodupkey;
172305     by LHS NAME;
172306     run;
172307     %end;
172308     %end;
172309     %end;
172310     %end;
172311     %mend varDept;
172312     %macro optCode(outdata=fcmpdata);
172313     %global fcmpStart;
172314     %let fcmpStart = 0;
172315     %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
172316     %let NumNodes=9;
172317     %do k=1 %to &NumNodes;
172318     %vardept(fcmpdata=&outdata, id=&k);
172319     %end;
172320     %mend optCode;
172321     %optcode(outData=EMWS8.Ensmbl21_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl21_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL21_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl21_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 74 observations read from the data set EMWS8.ENSMBL21_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 54 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 20 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl21_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL21_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl21_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL21_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl21_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL21_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 20 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 20 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl21_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL21_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 20 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 20 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 26 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 26 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 26 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 26 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl21_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL21_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 20 observations read from the data set WORK._TEMP2.
NOTE: There were 26 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 46 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl21_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL21_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl21_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL21_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
172322     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
172323     * Ensmbl21: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Ensmbl21: Computing metadata for TRAIN data;
172324     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
NOTE: View EMWS8.ENSMBL21_TRAIN.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl21\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.Ensmbl21_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.Ensmbl21_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.Ensmbl21_TRAIN out=WORK.M09R0AOM noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M09R0AOM;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M09R0AOM(keep=name type length label format formatl
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl,
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd,
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat =
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl,
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M09R0AOM;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M09R0AOM;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M19FOJ3V NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M19FOJ3V;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M19FOJ3V;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0IJWWDP(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M19FOJ3V;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M19FOJ3V;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M19FOJ3V;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN"
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO"
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON"
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD"
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" ))
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype =
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" ))
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT"
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB"
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType =
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA',
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W',
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL',
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT',
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M19FOJ3V;
MPRINT(EMADVISECOLUMNS):   set WORK.M19FOJ3V;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL=
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY=
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT=
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL=
"Label" LENGTH= "Length";
The SAS System
 
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural34_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural34_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl21_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Ensmbl21";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "Ensmbl21";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "Ensmbl21";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "Ensmbl21";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "Ensmbl21";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "Ensmbl21";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "Ensmbl21";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "Ensmbl21";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Ensmbl21";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "Ensmbl21";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl21: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   if NAME in( "I_DepVar" "F_DepVar" "U_DepVar" "_WARN_" "P_DepVar1"
"P_DepVar0" "R_DepVar1" "R_DepVar0" ) then CREATOR="Ensmbl21";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
172644     data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
172645     set EMWS8.Ensmbl21_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl21_EMINFO;
172646     where DATA='Ensmbl21' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Ensmbl21' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE',
'MODEL');
172647     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL21_EMINFO.
      WHERE (DATA='Ensmbl21') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
172648     data EMWS8.Ensmbl21_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl21_EMINFO;
172649     length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
172650     input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
172651     cards;
MPRINT(EM_DIAGRAM):   cards;
 
NOTE: The data set EMWS8.ENSMBL21_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   run;
172655     run;
172656     data EMWS8.Ensmbl21_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl21_EMINFO;
172657     set EMWS8.Ensmbl21_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl21_EMINFO WORK.MODELTEMP_INFO;
172658     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS8.ENSMBL21_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.ENSMBL21_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
172659     proc sort data = EMWS8.Ensmbl21_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Ensmbl21_EMINFO NOTHREADS;
172660     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
172661     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS8.ENSMBL21_EMINFO.
NOTE: The data set EMWS8.ENSMBL21_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
172662     proc sort data = EMWS8.Neural34_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Neural34_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
172663     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
172664     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.NEURAL34_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
172665     proc sort data = EMWS8.Ensmbl21_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Ensmbl21_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
172666     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
172667     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.ENSMBL21_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
172668     data EMWS8.Ensmbl21_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl21_EMINFO;
172669     merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
172670     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
172671     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.ENSMBL21_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
172672     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
172673     delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
172674     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
172675     quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
NOTE: View EMWS8.ENSMBL21_TRAIN.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.07 seconds
 
NOTE: View EMWS8.ENSMBL21_VALIDATE.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "21.10 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Report Log
Date:                28. April 2016
Time:                21.10 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O206ROG1
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl21\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O206ROG1 new;
MPRINT(EM_DIAGRAM):   run;
172699     data EMWS8.Ensmbl21_EMOUTFIT;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl21_EMOUTFIT;
172700     set EMWS8.Ensmbl21_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl21_EMOUTFIT;
172701     length TargetLabel $200;
MPRINT(EM_DIAGRAM):   length TargetLabel $200;
172702     label targetLabel = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel,
172702   ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   label targetLabel = "Target Label";
172703     if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
172704     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.ENSMBL21_EMOUTFIT.
NOTE: The data set EMWS8.ENSMBL21_EMOUTFIT has 1 observations and 20 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
172705     proc sort data=EMWS8.Ensmbl21_EMREPORTFIT nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.Ensmbl21_EMREPORTFIT nothreads;
172706     by TARGET;
MPRINT(EM_DIAGRAM):   by TARGET;
172707     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 9 observations read from the data set EMWS8.ENSMBL21_EMREPORTFIT.
NOTE: The data set EMWS8.ENSMBL21_EMREPORTFIT has 9 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
172708     %let _EMwarndup = 0;
172709     %let _EMtargetdup =;
172710     %let _EMASEtargetdup =;
172711     data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
172712     set EMWS8.Ensmbl21_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl21_EMOUTFIT;
172713     if .<_ASE_<0.000001 then do;
MPRINT(EM_DIAGRAM):   if .<_ASE_<0.000001 then do;
172714     call symput('_EMwarndup', '1');
MPRINT(EM_DIAGRAM):   call symput('_EMwarndup', '1');
172715     call symput('_EMtargetdup', target);
MPRINT(EM_DIAGRAM):   call symput('_EMtargetdup', target);
172716     call symput('_EMASEtargetdup', put(_ASE_, best.));
MPRINT(EM_DIAGRAM):   call symput('_EMASEtargetdup', put(_ASE_, best.));
172717     end;
MPRINT(EM_DIAGRAM):   end;
172718     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.ENSMBL21_EMOUTFIT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
172719     proc sort data=EMWS8.Neural34_CMeta_TRAIN out=WORK.SUBSETINMETA;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.Neural34_CMeta_TRAIN out=WORK.SUBSETINMETA;
172720     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
172721     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set EMWS8.NEURAL34_CMETA_TRAIN.
NOTE: The data set WORK.SUBSETINMETA has 44 observations and 21 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
172722     proc sort data=EMWS8.Ensmbl21_VariableSet out=WORK.SUBSETVARSET(keep=NAME REPORT);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Ensmbl21_VariableSet
out=WORK.SUBSETVARSET(keep=NAME REPORT);
172723     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
172724     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.ENSMBL21_VARIABLESET.
NOTE: The data set WORK.SUBSETVARSET has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
172725     data WORK.ASSESS_META;
MPRINT(EM_DIAGRAM):   data WORK.ASSESS_META;
172726     merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
MPRINT(EM_DIAGRAM):   merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
172727     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
172728     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK.SUBSETINMETA.
NOTE: There were 34 observations read from the data set WORK.SUBSETVARSET.
NOTE: The data set WORK.ASSESS_META has 44 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
172729     data EM_temp_assessMeta;
MPRINT(EM_DIAGRAM):    data EM_temp_assessMeta;
172730     set EMWS8.Ensmbl21_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl21_CMeta_TRAIN;
172731     where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST')
172731   ! ;
MPRINT(EM_DIAGRAM):   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION',
'ASSESS', 'COST');
172732     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS8.ENSMBL21_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 8 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
172733     data EM_temp_assessdata;
MPRINT(EM_DIAGRAM):    data EM_temp_assessdata;
172734     set EMWS8.Ensmbl21_TRAIN(keep=
172735     F_DepVar
172736     I_DepVar
172737     P_DepVar0
172738     P_DepVar1
172739     R_DepVar0
172740     R_DepVar1
172741     U_DepVar
172742     _WARN_
172743     DepVar
172744     );
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl21_TRAIN(keep= F_DepVar I_DepVar P_DepVar0 P_DepVar1
R_DepVar0 R_DepVar1 U_DepVar _WARN_ DepVar );
172745     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2374 observations read from the data set EMWS8.PART_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.META2_TRAIN.
NOTE: View EMWS8.ENSMBL21_TRAIN.VIEW used (Total process time):
      real time           0.09 seconds
      cpu time            0.09 seconds
 
NOTE: There were 2374 observations read from the data set EMWS8.NEURAL34_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.ENSMBL21_TRAIN.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 2374 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.10 seconds
      cpu time            0.12 seconds
 
 
MPRINT(EM_DIAGRAM):    proc freq data=EM_temp_assessdata noprint;
MPRINT(EM_DIAGRAM):   table I_DepVar*F_DepVar / out = WORK.Ensmbl21_0WNN78Z nocol norow outpct;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.Ensmbl21_0WNN78Z;
MPRINT(EM_DIAGRAM):   length _TYPE_ $10 DATAROLE TARGET $32 TARGETLABEL $200 FROM INTO $32
CORRECTTEXT $40 ;
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Outcome Type";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role";
MPRINT(EM_DIAGRAM):   label TARGET = "Target Variable";
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
MPRINT(EM_DIAGRAM):   label CORRECTTEXT = "Correct Text";
MPRINT(EM_DIAGRAM):   label CORRECT = "Correct";
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl21_0WNN78Z(rename=(F_DepVar=FROM I_DepVar=INTO));
MPRINT(EM_DIAGRAM):   retain _TYPE_ 'PREDICTION' DATAROLE "TRAIN" TARGET "DepVar";
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   if FROM eq INTO then do;
MPRINT(EM_DIAGRAM):   CORRECT = 0;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Correct";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   CORRECT = 1;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Incorrect";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl21_EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl21_0WNN78Z;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl21_0WNN78Z;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT(drop=INTO FROM _TYPE_);
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   length MISC $12;
MPRINT(EM_DIAGRAM):   if FROM='1' and INTO='1' then MISC='TRUEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM='1' and INTO ne '1' then MISC='FALSENEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne '1' and INTO='1' then MISC='FALSEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne'1' and INTO ne '1' then MISC='TRUENEVENT';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.MISCREPORT nothreads;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc summary data=WORK.MISCREPORT NWAY;
MPRINT(EM_DIAGRAM):   output out=WORK.MISCCOUNT(drop=_FREQ_ _TYPE_) SUM=COUNT;
MPRINT(EM_DIAGRAM):   CLASS MISC;
MPRINT(EM_DIAGRAM):   VAR COUNT;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK.MISCCOUNT out=WORK.MISCREPORT(drop=_NAME_
_LABEL_);
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   ID MISC;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl21_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl21_VariableSet;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emassmt.em_assess.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural34_DepVar_DM;
MPRINT(EM_DIAGRAM):   where _TYPE_="TARGET";
MPRINT(EM_DIAGRAM):   call symput('ASSMT_EVENT', strip(event));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):
MPRINT(EM_ASSESS):   data _ea_tmpdata;
MPRINT(EM_ASSESS):   set EM_temp_assessdata;
MPRINT(EM_ASSESS):   _tmpfreqvar_=1;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_CHECKEMSETINIT):   DATA _NULL_;
MPRINT(EM_CHECKEMSETINIT):   EM_SETINIT = 'N';
MPRINT(EM_CHECKEMSETINIT):   IF SYSPROD('PRODNUM50') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM448') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM102') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM103') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   CALL SYMPUT('EM_SETINIT', EM_SETINIT);
MPRINT(EM_CHECKEMSETINIT):   RUN;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Reading in reporting data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET ASSESS_REPORTMETA END = EOF;
MPRINT(EM_ASSESS):   IF TYPE = "C" OR UPCASE (LEVEL) IN ("NOMINAL", "BINARY" , "ORDINAL") THEN
DO;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMCTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTC" || LEFT (PUT (NUMCTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "C");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMNTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTN" || LEFT (PUT (NUMNTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMNTOREPORT", NUMNTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMCTOREPORT", NUMCTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMTOREPORT", SUM (NUMNTOREPORT, NUMCTOREPORT));
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   PROC DMDB DATA = _ea_tmpdata VAROUT = VAROUT DMDBCAT = _D CLASSOUT =
_ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   CLASS F_DepVar ;
 
MPRINT(EM_ASSESS):   VAR P_DepVar1 _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_;
MPRINT(EM_ASSESS):   RUN ;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   PROC SORT DATA = _ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _auxeventname (keep = __event__) ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ...FLAG0_1 = ..... TARGET IS 0, 1 & EVENT = 1;
 
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   length __event__ $ 32;
MPRINT(EM_ASSESS):   RETAIN FLAG0_1 1 NUM1 . NUM0 . __event__ "_missing_" ;
 
MPRINT(EM_ASSESS):   SET _ASSMT_CLASSOUT END = EOF;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ....... LEVEL = BINARY OR NOMINAL OR ORDINAL;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   IF UPCASE(NAME) = UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   CUMFREQ + FREQUENCY;
MPRINT(EM_ASSESS):   IF LEVEL NE "." THEN DO;
MPRINT(EM_ASSESS):   N1 + 1;
MPRINT(EM_ASSESS):   IF (NRAW NE 0 AND NRAW NE 1) OR TYPE NE "N" OR "" > " " THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ......................... IF EVENT NE BLANK;
MPRINT(EM_ASSESS):   * ....................LEVEL IS CHAR VAR ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   IF UPCASE("1") = UPCASE(LEVEL) THEN DO;
MPRINT(EM_ASSESS):   NUM1 = FREQUENCY;
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", CRAW );
MPRINT(EM_ASSESS):   __event__ = craw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   ELSE do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", NRAW );
MPRINT(EM_ASSESS):   __event__ = nraw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF LAST.NAME THEN DO;
 
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * .............. IN NOMINAL CASE, NEED TO GROUP ALL '0' ;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   NUM0 = SUM (CUMFREQ, - NUM1);
MPRINT(EM_ASSESS):   IF NUM0 < 0 THEN NUM0 = 0;
MPRINT(EM_ASSESS):   IF NUM1 = . THEN NUM1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM0", NUM0 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM1", NUM1);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM1", NUM1 / CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM0", (CUMFREQ - NUM1) / CUMFREQ);
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN DO;
MPRINT(EM_ASSESS):   FLAG0_1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "C" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF "" = " " THEN DO;
MPRINT(EM_ASSESS):   IF "1" NE "1" THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "N" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ................... IF TYPE = N;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("FLAG0_1", FLAG0_1 );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................IF LAST.NAME ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ...............IF LEVEL NE '.' ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * .............. IF NAME = TARGET;
MPRINT(EM_ASSESS):   ELSE IF "" > " " AND UPCASE(NAME) = UPCASE("") THEN DO;
MPRINT(EM_ASSESS):   NUMDECISIONS + 1;
MPRINT(EM_ASSESS):   LEVEL = TRANSLATE (LEVEL, "_", "'", "_", '"');
MPRINT(EM_ASSESS):   CALL SYMPUTX ("D_LABEL" || LEFT (PUT (NUMDECISIONS, 3.)), LEVEL );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................... ELSE IF UPCASE;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   output _auxeventname;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMOBS", CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMDECISIONS", NUMDECISIONS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET VAROUT END = EOF;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) = UPCASE ("P_DepVar1") THEN DO;
MPRINT(EM_ASSESS):   IF N = 0 THEN DO;
MPRINT(EM_ASSESS):   PUT //// "          Warning: All posterior probabilities are missing
values ";
MPRINT(EM_ASSESS):   PUT ///;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("ALLMISS", 1);
MPRINT(EM_ASSESS):   STOP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("ALLMISS", 0);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB", MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB", MAX);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("DIFF", MAX - MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NMISSPROB", NMISS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF UPCASE (NAME) = UPCASE ("_tmpfreqvar_") THEN DO;
MPRINT(EM_ASSESS):   AUXMIN = MIN - INT (MIN);
MPRINT(EM_ASSESS):   AUXMAX = MAX - INT (MAX);
MPRINT(EM_ASSESS):   IF AUXMIN > 0 OR AUXMAX > 0 THEN CALL SYMPUTX ("USEWEIGHT", "Y");
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("USEWEIGHT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _ANY0;
MPRINT(EM_ASSESS):   SET _ea_tmpdata (KEEP = F_DepVar P_DepVar1 _tmpfreqvar_ );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................... No Formats;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF LEFT ( F_DepVar ) = "1" THEN NTARGET = 1;
MPRINT(EM_ASSESS):   ELSE NTARGET = 0;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Before proc summary of binary case;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC SUMMARY DATA = _ANY0 (KEEP = P_DepVar1 NTARGET _tmpfreqvar_ WHERE =
(NTARGET > . )) NWAY MISSING;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   CLASS P_DepVar1 ;
MPRINT(EM_ASSESS):   VAR NTARGET ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   OUTPUT OUT = ANYSUM (DROP = _TYPE_) MEAN = _MEANTARGET _MEANFREQVAR ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... Main Data Set Processing, Binary case;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK (KEEP = BASECAPC BASECAP __EVENT__ BASEEVENTS
BASEGAIN BASELIFT BASERESP BASERESPC BESTCAP BESTCAPC BESTGAIN BESTLIFT BESTLIFTC
BESTNUMEVENTS BESTRESP BESTRESPC BIN CBASELIFT C_LIFT C_P_CAPT_RESP C_P_RESP GAIN LIFT MAXPROB
MINPROB MNPROB NUMNONRESP NUMOBS NUMRESP PERCENTILE P_CAPT_RESP P_RESP ) WORK._TEMPSCOREDIST
(KEEP = BIN LOWERPROB UPPERPROB EVENTVALUE SCR_NUMEVENTS MODELSCORE SCR_NUMNONEVENTS RANGE
NUMOBSINGROUP PERCOBSINGROUP C_PERCOBSINGROUP SCR_P_EVENTS SCR_CP_EVENTS SCR_P_NONEVENTS
SCR_CP_NONEVENTS SCR_MNPROB SCR_MINPROB SCR_MAXPROB ) ;
 
MPRINT(EM_ASSESS):   SET ANYSUM END = EOF;
 
MPRINT(EM_ASSESS):   IF _N_ = 1 THEN SET _AUXEVENTNAME;
 
MPRINT(EM_ASSESS):   RETAIN MINPROB1 - MINPROB20 1 MAXPROB1 - MAXPROB20 0 MNPROB1 - MNPROB20 0
NUMOBS1 - NUMOBS20 0 NUMRESP1 - NUMRESP20 0 TRUEPOS1 - TRUEPOS100 0 TRUENEG1 - TRUENEG100 0
FALSEPOS1 - FALSEPOS100 0 FALSENEG1 - FALSENEG100 0 EVENTS1 - EVENTS100 NONEVENTS1 -
NONEVENTS100 0 FIRSTIN1 - FIRSTIN100 . LASTIN1 - LASTIN100 . RESPRATE 0.151221567 _NEVENTS 359
_NNONEVENTS 2015 TARGET "NTARGET" ;
MPRINT(EM_ASSESS):   ARRAY MINPROBS (20) MINPROB1 - MINPROB20;
MPRINT(EM_ASSESS):   ARRAY MAXPROBS (20) MAXPROB1 - MAXPROB20;
MPRINT(EM_ASSESS):   ARRAY MNPROBS (20) MNPROB1 - MNPROB20;
MPRINT(EM_ASSESS):   ARRAY NUMOBSS (20) NUMOBS1 - NUMOBS20;
MPRINT(EM_ASSESS):   ARRAY NUMRESPS (20) NUMRESP1 - NUMRESP20;
MPRINT(EM_ASSESS):   ARRAY TRUEPOSX (100) TRUEPOS1 - TRUEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSEPOSX (100) FALSEPOS1 - FALSEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSENEGX (100) FALSENEG1 - FALSENEG100;
MPRINT(EM_ASSESS):   ARRAY TRUENEGX (100) TRUENEG1 - TRUENEG100;
MPRINT(EM_ASSESS):   ARRAY _EVENTS (100) EVENTS1 - EVENTS100;
MPRINT(EM_ASSESS):   ARRAY NONEVENTS (100) NONEVENTS1 - NONEVENTS100;
MPRINT(EM_ASSESS):   ARRAY FIRSTIN (100) FIRSTIN1 - FIRSTIN100;
MPRINT(EM_ASSESS):   ARRAY LASTIN (100) LASTIN1 - LASTIN100;
MPRINT(EM_ASSESS):   RETAIN SCR_MNPROB1 - SCR_MNPROB100 0 SCR_MINPROB1 - SCR_MINPROB100 1
SCR_MAXPROB1 - SCR_MAXPROB100 0;
MPRINT(EM_ASSESS):   ARRAY SCR_MNPROBS (100) SCR_MNPROB1 - SCR_MNPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MINPROBS (100) SCR_MINPROB1 - SCR_MINPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MAXPROBS (100) SCR_MAXPROB1 - SCR_MAXPROB100;
MPRINT(EM_ASSESS):   DROP SCR_MINPROB1 - SCR_MINPROB100 SCR_MAXPROB1 - SCR_MAXPROB100
SCR_MNPROB1 - SCR_MNPROB100 ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...... Area For 8 Financials ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF _MEANTARGET = . THEN _MEANTARGET = RESPRATE;
MPRINT(EM_ASSESS):   DROP N1 _K SUMWEIGHTS ;
MPRINT(EM_ASSESS):   SUMWEIGHTS = 1;
 
MPRINT(EM_ASSESS):   DO _K = 1 TO CEIL (_FREQ_);
MPRINT(EM_ASSESS):   IF _K = CEIL (_FREQ_) THEN DO;
MPRINT(EM_ASSESS):   IF _FREQ_ < CEIL (_FREQ_) THEN _WEIGHT = _FREQ_ - FLOOR (_FREQ_);
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   N1 + _WEIGHT;
MPRINT(EM_ASSESS):   NTARGET = _MEANTARGET ;
MPRINT(EM_ASSESS):   DECILE = MIN (20, CEIL (N1 * 20 / 2374));
MPRINT(EM_ASSESS):   MINPROBS ( DECILE) = MIN (MINPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MAXPROBS ( DECILE) = MAX (MAXPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MNPROBS ( DECILE) = SUM (MNPROBS ( DECILE), P_DepVar1 * _WEIGHT);
MPRINT(EM_ASSESS):   NUMOBSS ( DECILE) = NUMOBSS ( DECILE) + _WEIGHT;
MPRINT(EM_ASSESS):   NUMRESPS ( DECILE) = NUMRESPS ( DECILE) + _MEANTARGET * _WEIGHT;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ outside of do loop, Area for final ROC;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   RANKDELTA = (ROUND ( _FREQ_ ) + 1) / 2;
MPRINT(EM_ASSESS):   RANK = UNTIEDRANK + RANKDELTA;
MPRINT(EM_ASSESS):   DROP RANK ;
MPRINT(EM_ASSESS):   SUMRANK1 + RANK * ROUND (_MEANTARGET * _FREQ_, .0000001);
MPRINT(EM_ASSESS):   UNTIEDRANK + ROUND (_FREQ_, .00000001);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Area For ROC Curve;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DO _K = 1 TO 100;
MPRINT(EM_ASSESS):   IF P_DepVar1 * 100 >= _K THEN DO;
MPRINT(EM_ASSESS):   TRUEPOSX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   FALSEPOSX ( _K ) + _FREQ_ * (1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   TRUENEGX ( _K ) + _FREQ_ * ( 1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   FALSENEGX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   SLOT = MIN (MAX (CEIL (P_DepVar1 * 100), 1), 100) ;
MPRINT(EM_ASSESS):   DROP SLOT;
MPRINT(EM_ASSESS):   FIRSTIN ( SLOT ) = MIN ( FIRSTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   LASTIN ( SLOT ) = MAX ( LASTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   _EVENTS ( SLOT) = _EVENTS ( SLOT) + _FREQ_ * _MEANTARGET;
MPRINT(EM_ASSESS):   NONEVENTS ( SLOT) = NONEVENTS ( SLOT) + _FREQ_ * (1 - _MEANTARGET);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ START OF OUTDIST IN BINARY CASE MAIN DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   SCR_MNPROBS ( SLOT ) = SUM (SCR_MNPROBS (SLOT), P_DepVar1 * _FREQ_ );
MPRINT(EM_ASSESS):   SCR_MINPROBS ( SLOT ) = MIN (SCR_MINPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   SCR_MAXPROBS ( SLOT ) = MAX (SCR_MAXPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ End of Outdist in Binary case main DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   PUT //;
MPRINT(EM_ASSESS):   DO K = 1 TO 20;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LENGTH EVENTVALUE $ 32;
MPRINT(EM_ASSESS):   RETAIN EVENTVALUE "1" ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ......... Start of EOF area of BINARY processing of main data set ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SUMRANK1", SUMRANK1);
MPRINT(EM_ASSESS):   LENGTH DATAROLE $ 10;
MPRINT(EM_ASSESS):   RETAIN DATAROLE "TRAIN" ;
MPRINT(EM_ASSESS):   RETAIN OVLMIN 0.0000203565 OVLMAX 0.9996942411 ;
MPRINT(EM_ASSESS):   DROP OVLMIN OVLMAX ;
MPRINT(EM_ASSESS):   C_NUMOBS = 0;
MPRINT(EM_ASSESS):   C_NUM_RESP = 0;
MPRINT(EM_ASSESS):   C_NUM_NONRESP = 0;
MPRINT(EM_ASSESS):   C_P_RESP = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   PREVIOUSPROFIT = 0;
MPRINT(EM_ASSESS):   MAXPROFIT = 0;
MPRINT(EM_ASSESS):   _KS_BIN_ = 0;
MPRINT(EM_ASSESS):   DROP _KS_BIN_;
MPRINT(EM_ASSESS):   AVGNUMRESP = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASERESP = 100 * RESPRATE;
MPRINT(EM_ASSESS):   BASERESPC = BASERESP;
MPRINT(EM_ASSESS):   BASECAP = 100 / 20;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................Start OF Gainschart = Outranks Area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = 0;
MPRINT(EM_ASSESS):   DO GROUP = 20 TO 1 BY -1;
 
MPRINT(EM_ASSESS):   BASECAPC + BASECAP;
MPRINT(EM_ASSESS):   PERCENTILE = GROUP * (100 / 20);
MPRINT(EM_ASSESS):   MINPROB = MINPROBS ( GROUP);
MPRINT(EM_ASSESS):   MAXPROB = MAXPROBS ( GROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB" || LEFT ( PUT (GROUP, 3.)), MINPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB" || LEFT ( PUT (GROUP, 3.)), MAXPROB);
MPRINT(EM_ASSESS):   NUMOBS = NUMOBSS ( GROUP);
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN MNPROB = MNPROBS ( GROUP) / NUMOBS;
MPRINT(EM_ASSESS):   ELSE MNPROB = .;
MPRINT(EM_ASSESS):   C_NUMOBS = SUM (NUMOBS, C_NUMOBS);
MPRINT(EM_ASSESS):   NUMRESP = NUMRESPS ( GROUP);
MPRINT(EM_ASSESS):   NUMNONRESP = NUMOBS - NUMRESP;
MPRINT(EM_ASSESS):   C_AVGNUM_RESP + AVGNUMRESP;
MPRINT(EM_ASSESS):   IF C_NUMOBS <= _NEVENTS THEN DO;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   BESTCAPC = C_NUMOBS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BASEEVENTS = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASENONEVENTS = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   FLAG + 1;
MPRINT(EM_ASSESS):   DROP FLAG;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = _NEVENTS - C_NUMOBS + NUMOBS;
MPRINT(EM_ASSESS):   IF FLAG > 1 THEN BESTNUMEVENTS = 0;
MPRINT(EM_ASSESS):   BESTCAPC = 100;
MPRINT(EM_ASSESS):   IF C_NUMOBS - _NEVENTS <= NUMOBS THEN DO;
MPRINT(EM_ASSESS):   BASEEVENTS = C_NUMOBS - _NEVENTS;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS - C_NUMOBS + _NEVENTS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BASEEVENTS = 0;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   BESTCAP = BESTNUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BESTLIFT = BESTNUMEVENTS / AVGNUMRESP;
MPRINT(EM_ASSESS):   C_BESTNUMEVENTS + BESTNUMEVENTS;
MPRINT(EM_ASSESS):   DROP C_BESTNUMEVENTS;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN BESTLIFTC = C_BESTNUMEVENTS / (_NEVENTS / 2374 *
C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE BESTLIFTC = .;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESP = BESTNUMEVENTS * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_RESP = NUMRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_NONRESP = NUMNONRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESP = .;
MPRINT(EM_ASSESS):   P_RESP = .;
MPRINT(EM_ASSESS):   P_NONRESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESPC = C_BESTNUMEVENTS * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   BESTGAIN = MAX (0, ((C_BESTNUMEVENTS / C_NUMOBS ) / ( AVGNUMRESP /
NUMOBS) - 1) * 100);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESPC = .;
MPRINT(EM_ASSESS):   BESTGAIN = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMNONRESP > 0 THEN ODDS = NUMRESP / NUMNONRESP;
MPRINT(EM_ASSESS):   ELSE ODDS = .;
MPRINT(EM_ASSESS):   C_NUM_RESP = SUM (C_NUM_RESP , NUMRESP );
MPRINT(EM_ASSESS):   C_NUM_NONRESP = SUM (C_NUM_NONRESP, NUMNONRESP );
MPRINT(EM_ASSESS):   IF C_NUM_NONRESP > 0 THEN C_ODDS = C_NUM_RESP / C_NUM_NONRESP;
MPRINT(EM_ASSESS):   ELSE C_ODDS = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   C_P_RESP = C_NUM_RESP * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   GAIN = ABS(100 * (((C_NUM_RESP / C_NUMOBS ) / (_NEVENTS / 2374)) - 1));
MPRINT(EM_ASSESS):   BASEGAIN = 100 * (( (C_AVGNUM_RESP / C_NUMOBS) / ( AVGNUMRESP / NUMOBS))
- 1);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   GAIN = .;
MPRINT(EM_ASSESS):   BASEGAIN = .;
MPRINT(EM_ASSESS):   C_P_RESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF BASEGAIN <= 0 THEN BASEGAIN = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = NUMRESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   P_CAPT_NONRESP = NUMNONRESP * 100 / ( 2374 - _NEVENTS);
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = C_NUM_RESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   C_P_CAPT_NONRESP = C_NUM_NONRESP * 100 / ( 2374 - _NEVENTS);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Area For Binned KS in Outranks area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _DIFFERENCE = C_P_CAPT_RESP - C_P_CAPT_NONRESP ;
MPRINT(EM_ASSESS):   IF _KS_BIN_ < _DIFFERENCE THEN DO;
MPRINT(EM_ASSESS):   _KS_BIN_ = _DIFFERENCE;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = MINPROB + (MAXPROB - MINPROB) / 2 ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LIFT = P_RESP * .01 / RESPRATE ;
MPRINT(EM_ASSESS):   C_LIFT = C_P_RESP * .01 / RESPRATE;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BASELIFT = AVGNUMRESP / ( RESPRATE * NUMOBS );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE BASELIFT = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN CBASELIFT = C_AVGNUM_RESP / (RESPRATE * C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE CBASELIFT = .;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ WITHIN DO LOOP FOR OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 + 1 - GROUP;
MPRINT(EM_ASSESS):   PERCENTILE = BIN * (100 / 20);
MPRINT(EM_ASSESS):   B_C_P_RESP = PERCENTILE;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPRANK ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................ END OF GAINSCHART = OUTRANKS AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFITGROUP" , MAXPROFITGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFIT" , MAXPROFIT );
MPRINT(EM_ASSESS):   KS_ABSDIFF = 0 ;
MPRINT(EM_ASSESS):   MINPRECTPR = 9999;
MPRINT(EM_ASSESS):   Y0 = 1 - RESPRATE;
MPRINT(EM_ASSESS):   Y1 = RESPRATE;
MPRINT(EM_ASSESS):   MAXMUTUAL = 0;
MPRINT(EM_ASSESS):   DROP MAXMUTUAL KSPROB Y0 Y1 KS_ABSDIFF MINPRECTPR;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .....................About to start Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................... Finished Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Outdist ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS96 - EVENTS100 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS96 - NONEVENTS100);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB96 -
SCR_MNPROB100) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB96 - SCR_MINPROB100) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB96 - SCR_MAXPROB100) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 20;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 19 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS91 - EVENTS95 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS91 - NONEVENTS95);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB91 -
SCR_MNPROB95) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB91 - SCR_MINPROB95) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB91 - SCR_MAXPROB95) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 19;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 18 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS86 - EVENTS90 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS86 - NONEVENTS90);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB86 -
SCR_MNPROB90) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB86 - SCR_MINPROB90) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB86 - SCR_MAXPROB90) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 18;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 17 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS81 - EVENTS85 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS81 - NONEVENTS85);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB81 -
SCR_MNPROB85) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB81 - SCR_MINPROB85) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB81 - SCR_MAXPROB85) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 17;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 16 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS76 - EVENTS80 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS76 - NONEVENTS80);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB76 -
SCR_MNPROB80) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB76 - SCR_MINPROB80) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB76 - SCR_MAXPROB80) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 16;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 15 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS71 - EVENTS75 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS71 - NONEVENTS75);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB71 -
SCR_MNPROB75) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB71 - SCR_MINPROB75) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB71 - SCR_MAXPROB75) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 15;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 14 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS66 - EVENTS70 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS66 - NONEVENTS70);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB66 -
SCR_MNPROB70) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB66 - SCR_MINPROB70) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB66 - SCR_MAXPROB70) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 14;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 13 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS61 - EVENTS65 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS61 - NONEVENTS65);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB61 -
SCR_MNPROB65) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB61 - SCR_MINPROB65) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB61 - SCR_MAXPROB65) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 13;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 12 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS56 - EVENTS60 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS56 - NONEVENTS60);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB56 -
SCR_MNPROB60) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB56 - SCR_MINPROB60) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB56 - SCR_MAXPROB60) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 12;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 11 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS51 - EVENTS55 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS51 - NONEVENTS55);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB51 -
SCR_MNPROB55) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB51 - SCR_MINPROB55) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB51 - SCR_MAXPROB55) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 11;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 10 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS46 - EVENTS50 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS46 - NONEVENTS50);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB46 -
SCR_MNPROB50) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB46 - SCR_MINPROB50) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB46 - SCR_MAXPROB50) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 10;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 9 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS41 - EVENTS45 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS41 - NONEVENTS45);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB41 -
SCR_MNPROB45) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB41 - SCR_MINPROB45) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB41 - SCR_MAXPROB45) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 9;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 8 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS36 - EVENTS40 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS36 - NONEVENTS40);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB36 -
SCR_MNPROB40) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB36 - SCR_MINPROB40) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB36 - SCR_MAXPROB40) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 8;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 7 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS31 - EVENTS35 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS31 - NONEVENTS35);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB31 -
SCR_MNPROB35) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB31 - SCR_MINPROB35) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB31 - SCR_MAXPROB35) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 7;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 6 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS26 - EVENTS30 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS26 - NONEVENTS30);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB26 -
SCR_MNPROB30) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB26 - SCR_MINPROB30) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB26 - SCR_MAXPROB30) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 6;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 5 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS21 - EVENTS25 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS21 - NONEVENTS25);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB21 -
SCR_MNPROB25) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB21 - SCR_MINPROB25) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB21 - SCR_MAXPROB25) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 5;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 4 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS16 - EVENTS20 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS16 - NONEVENTS20);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB16 -
SCR_MNPROB20) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB16 - SCR_MINPROB20) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB16 - SCR_MAXPROB20) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 4;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 3 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS11 - EVENTS15 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS11 - NONEVENTS15);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB11 -
SCR_MNPROB15) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB11 - SCR_MINPROB15) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB11 - SCR_MAXPROB15) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 3;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 2 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS6 - EVENTS10 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS6 - NONEVENTS10);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB6 -
SCR_MNPROB10) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB6 - SCR_MINPROB10) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB6 - SCR_MAXPROB10) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 2;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 1 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS1 - EVENTS5 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS1 - NONEVENTS5);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB1 - SCR_MNPROB5)
/ NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB1 - SCR_MINPROB5) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB1 - SCR_MAXPROB5) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 1;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSPROB" , PUT (KSPROB, 5.3 ) );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_PROB" , _KS_BIN_PROB );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_" , _KS_BIN_ / 100 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSDIFF" , KS_ABSDIFF );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PRECTPR" , PRECTPR );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXMUTUALPROB" , MAXMUTUALPROB);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LABEL __EVENT__ = "Event" DECILE = "Depth" BIN = "Bin" NUMOBS = "Number
of Observations" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * RUN for large data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST;
MPRINT(EM_ASSESS):   DELETE _AUXEVENTNAME;
MPRINT(EM_ASSESS):   QUIT;
 
MPRINT(EM_ASSESS):   OPTION NOCENTER LS = 95;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Report Vars Area.;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start OF Outdist Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPSCOREDIST;
MPRINT(EM_ASSESS):   RENAME MODELSCORE = SCORE UPPERPROB = UPPOSTERIOR SCR_CP_EVENTS =
CUMULATIVEPERCENTAGEOFEVENTS SCR_CP_NONEVENTS = CUMULATIVEPERCENTAGEOFNONEVENTS EVENTVALUE =
EVENT LOWERPROB = LOWPOSTERIOR NUMOBSINGROUP = N PERCOBSINGROUP = PERCENTAGE SCR_MINPROB =
_MINP_ SCR_MAXPROB = _MAXP_ SCR_MNPROB = _MEANP_ RANGE = P_LABEL C_PERCOBSINGROUP =
CUMULATIVEPERCENTAGE SCR_NUMEVENTS = NUMBEROFEVENTS SCR_NUMNONEVENTS = NUMBEROFNONEVENTS
SCR_P_EVENTS = PERCENTAGEOFEVENTS SCR_P_NONEVENTS = PERCENTAGEOFNONEVENTS ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... OUTDIST MODIFICATION LABEL AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL BIN = "Bin" N = "Number of Observations" P_LABEL = "Posterior
Probability Range" EVENT = "Event" LOWPOSTERIOR = "Lower Bound Posterior Probability"
PERCENTAGEOFEVENTS = "Percentage of Events" CUMULATIVEPERCENTAGEOFNONEVENTS = "Cumulative
Percentage of Nonevents" CUMULATIVEPERCENTAGE = "Cumulative Percentage" PERCENTAGEOFEVENTS =
"Percentage of Events" PERCENTAGEOFNONEVENTS = "Percentage of Nonevents"
CUMULATIVEPERCENTAGEOFEVENTS = "Cumulative Percentage of Events" UPPOSTERIOR = "Upper Bound
Posterior Probability" NUMBEROFEVENTS = "Number of Events" PERCENTAGE = "Percentage"
NUMBEROFNONEVENTS = "Number of Nonevents" _MEANP_ = "Mean Posterior Probability" _MINP_ = "Min
Posterior Probability" _MAXP_ = "Max Posterior Probability" SCORE = "Model Score" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   SET WORK._TEMPSCOREDIST (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........... END OF OUTDIST MODIFICATION;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start of OUTRANKS Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPRANK;
MPRINT(EM_ASSESS):   RENAME __EVENT__ = EVENT P_RESP = RESP C_P_CAPT_RESP = CAPC P_CAPT_RESP =
CAP NUMNONRESP = NUMNEVENT NUMRESP = NUMEVENT BASEEVENTS = BASENUMBEROFEVENTS BESTNUMEVENTS =
BESTNUMBEROFEVENTS MAXPROB = _MAXP_ MINPROB = _MINP_ CBASELIFT = BASELIFTC C_LIFT = LIFTC
MNPROB = _MEANP_ PERCENTILE = DECILE NUMOBS = N NUMEVENT = NUMBEROFEVENTS C_P_RESP = RESPC ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................. OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL _MAXP_ = "Max Posterior Probability" _MINP_ = "Min Posterior
Probability" _MEANP_ = "Mean Posterior Probability" BASECAP = "Baseline % Captured Response"
BASECAPC = "Baseline Cumulative % Captured Response" BASENUMBEROFEVENTS = "Baseline Number of
Events" BASEGAIN = "Baseline Gain" BASELIFT = "Baseline Lift" BASELIFTC = "Baseline Cumulative
Lift" BASERESP = "Baseline % Response" BASERESPC = "Baseline Cumulative % Response" BASELIFTC
= "Baseline Cumulative Lift" BESTCAP = "Best % Captured Response" BESTCAPC = "Best Cumulative
% Captured Response" BESTGAIN = "Best Gain" BESTRESP = "Best % Response" BESTRESPC = "Best
Cumulative % Response" BESTLIFT = "Best Lift" BESTLIFTC = "Best Cumulative Lift"
BESTNUMBEROFEVENTS = "Best Number of Events" CAP = "% Captured Response" CAPC = "Cumulative %
Captured Response" DECILE = "Depth" GAIN = "Gain" LIFT = "Lift" LIFTC = "Cumulative Lift"
NUMNEVENT = "Number of Nonevents" N = "Number of Observations" EVENT = "Event" RESPC =
"Cumulative % Response" NUMBEROFEVENTS = "Number of Events" RESP = "% Response" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK;
MPRINT(EM_ASSESS):   SET WORK._TEMPRANK (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   proc datasets lib=work nolist;
MPRINT(EM_ASSESS):   delete _ea_tmpdata;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_ASSESS):   quit;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   OPTION ERRORS = 20;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):    data WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "TRAIN";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl21_EMRANK;
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "TRAIN";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl21_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   run;
177011     data EM_temp_assessMeta;
MPRINT(EM_DIAGRAM):    data EM_temp_assessMeta;
177012     set EMWS8.Ensmbl21_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl21_CMeta_TRAIN;
177013     where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST')
177013   ! ;
MPRINT(EM_DIAGRAM):   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION',
'ASSESS', 'COST');
177014     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS8.ENSMBL21_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 8 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
177015     data EM_temp_assessdata;
MPRINT(EM_DIAGRAM):    data EM_temp_assessdata;
177016     set EMWS8.Ensmbl21_VALIDATE(keep=
177017     F_DepVar
177018     I_DepVar
177019     P_DepVar0
177020     P_DepVar1
177021     R_DepVar0
177022     R_DepVar1
177023     U_DepVar
177024     _WARN_
177025     DepVar
177026     );
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl21_VALIDATE(keep= F_DepVar I_DepVar P_DepVar0 P_DepVar1
R_DepVar0 R_DepVar1 U_DepVar _WARN_ DepVar );
177027     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: There were 1018 observations read from the data set EMWS8.META2_VALIDATE.
NOTE: View EMWS8.ENSMBL21_VALIDATE.VIEW used (Total process time):
      real time           0.07 seconds
      cpu time            0.06 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.NEURAL34_VALIDATE.
NOTE: There were 1018 observations read from the data set EMWS8.ENSMBL21_VALIDATE.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 1018 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.09 seconds
      cpu time            0.07 seconds
 
 
MPRINT(EM_DIAGRAM):    proc freq data=EM_temp_assessdata noprint;
MPRINT(EM_DIAGRAM):   table I_DepVar*F_DepVar / out = WORK.Ensmbl21_2DUVYU2 nocol norow outpct;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.Ensmbl21_2DUVYU2;
MPRINT(EM_DIAGRAM):   length _TYPE_ $10 DATAROLE TARGET $32 TARGETLABEL $200 FROM INTO $32
CORRECTTEXT $40 ;
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Outcome Type";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role";
MPRINT(EM_DIAGRAM):   label TARGET = "Target Variable";
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
MPRINT(EM_DIAGRAM):   label CORRECTTEXT = "Correct Text";
MPRINT(EM_DIAGRAM):   label CORRECT = "Correct";
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl21_2DUVYU2(rename=(F_DepVar=FROM I_DepVar=INTO));
MPRINT(EM_DIAGRAM):   retain _TYPE_ 'PREDICTION' DATAROLE "VALIDATE" TARGET "DepVar";
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   if FROM eq INTO then do;
MPRINT(EM_DIAGRAM):   CORRECT = 0;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Correct";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   CORRECT = 1;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Incorrect";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl21_EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl21_EMCLASSIFICATION WORK.Ensmbl21_2DUVYU2;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl21_2DUVYU2;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT(drop=INTO FROM _TYPE_);
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   length MISC $12;
MPRINT(EM_DIAGRAM):   if FROM='1' and INTO='1' then MISC='TRUEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM='1' and INTO ne '1' then MISC='FALSENEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne '1' and INTO='1' then MISC='FALSEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne'1' and INTO ne '1' then MISC='TRUENEVENT';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.MISCREPORT nothreads;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc summary data=WORK.MISCREPORT NWAY;
MPRINT(EM_DIAGRAM):   output out=WORK.MISCCOUNT(drop=_FREQ_ _TYPE_) SUM=COUNT;
MPRINT(EM_DIAGRAM):   CLASS MISC;
MPRINT(EM_DIAGRAM):   VAR COUNT;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK.MISCCOUNT out=WORK.MISCREPORT(drop=_NAME_
_LABEL_);
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   ID MISC;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl21_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl21_EMEVENTREPORT WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl21_VariableSet;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emassmt.em_assess.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural34_DepVar_DM;
MPRINT(EM_DIAGRAM):   where _TYPE_="TARGET";
MPRINT(EM_DIAGRAM):   call symput('ASSMT_EVENT', strip(event));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):
MPRINT(EM_ASSESS):   data _ea_tmpdata;
MPRINT(EM_ASSESS):   set EM_temp_assessdata;
MPRINT(EM_ASSESS):   _tmpfreqvar_=1;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_CHECKEMSETINIT):   DATA _NULL_;
MPRINT(EM_CHECKEMSETINIT):   EM_SETINIT = 'N';
MPRINT(EM_CHECKEMSETINIT):   IF SYSPROD('PRODNUM50') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM448') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM102') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM103') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   CALL SYMPUT('EM_SETINIT', EM_SETINIT);
MPRINT(EM_CHECKEMSETINIT):   RUN;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Reading in reporting data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET ASSESS_REPORTMETA END = EOF;
MPRINT(EM_ASSESS):   IF TYPE = "C" OR UPCASE (LEVEL) IN ("NOMINAL", "BINARY" , "ORDINAL") THEN
DO;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMCTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTC" || LEFT (PUT (NUMCTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "C");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMNTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTN" || LEFT (PUT (NUMNTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMNTOREPORT", NUMNTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMCTOREPORT", NUMCTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMTOREPORT", SUM (NUMNTOREPORT, NUMCTOREPORT));
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   PROC DMDB DATA = _ea_tmpdata VAROUT = VAROUT DMDBCAT = _D CLASSOUT =
_ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   CLASS F_DepVar ;
 
MPRINT(EM_ASSESS):   VAR P_DepVar1 _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_;
MPRINT(EM_ASSESS):   RUN ;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   PROC SORT DATA = _ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _auxeventname (keep = __event__) ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ...FLAG0_1 = ..... TARGET IS 0, 1 & EVENT = 1;
 
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   length __event__ $ 32;
MPRINT(EM_ASSESS):   RETAIN FLAG0_1 1 NUM1 . NUM0 . __event__ "_missing_" ;
 
MPRINT(EM_ASSESS):   SET _ASSMT_CLASSOUT END = EOF;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ....... LEVEL = BINARY OR NOMINAL OR ORDINAL;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   IF UPCASE(NAME) = UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   CUMFREQ + FREQUENCY;
MPRINT(EM_ASSESS):   IF LEVEL NE "." THEN DO;
MPRINT(EM_ASSESS):   N1 + 1;
MPRINT(EM_ASSESS):   IF (NRAW NE 0 AND NRAW NE 1) OR TYPE NE "N" OR "" > " " THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ......................... IF EVENT NE BLANK;
MPRINT(EM_ASSESS):   * ....................LEVEL IS CHAR VAR ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   IF UPCASE("1") = UPCASE(LEVEL) THEN DO;
MPRINT(EM_ASSESS):   NUM1 = FREQUENCY;
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", CRAW );
MPRINT(EM_ASSESS):   __event__ = craw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   ELSE do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", NRAW );
MPRINT(EM_ASSESS):   __event__ = nraw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF LAST.NAME THEN DO;
 
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * .............. IN NOMINAL CASE, NEED TO GROUP ALL '0' ;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   NUM0 = SUM (CUMFREQ, - NUM1);
MPRINT(EM_ASSESS):   IF NUM0 < 0 THEN NUM0 = 0;
MPRINT(EM_ASSESS):   IF NUM1 = . THEN NUM1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM0", NUM0 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM1", NUM1);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM1", NUM1 / CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM0", (CUMFREQ - NUM1) / CUMFREQ);
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN DO;
MPRINT(EM_ASSESS):   FLAG0_1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "C" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF "" = " " THEN DO;
MPRINT(EM_ASSESS):   IF "1" NE "1" THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "N" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ................... IF TYPE = N;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("FLAG0_1", FLAG0_1 );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................IF LAST.NAME ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ...............IF LEVEL NE '.' ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * .............. IF NAME = TARGET;
MPRINT(EM_ASSESS):   ELSE IF "" > " " AND UPCASE(NAME) = UPCASE("") THEN DO;
MPRINT(EM_ASSESS):   NUMDECISIONS + 1;
MPRINT(EM_ASSESS):   LEVEL = TRANSLATE (LEVEL, "_", "'", "_", '"');
MPRINT(EM_ASSESS):   CALL SYMPUTX ("D_LABEL" || LEFT (PUT (NUMDECISIONS, 3.)), LEVEL );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................... ELSE IF UPCASE;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   output _auxeventname;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMOBS", CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMDECISIONS", NUMDECISIONS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET VAROUT END = EOF;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) = UPCASE ("P_DepVar1") THEN DO;
MPRINT(EM_ASSESS):   IF N = 0 THEN DO;
MPRINT(EM_ASSESS):   PUT //// "          Warning: All posterior probabilities are missing
values ";
MPRINT(EM_ASSESS):   PUT ///;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("ALLMISS", 1);
MPRINT(EM_ASSESS):   STOP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("ALLMISS", 0);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB", MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB", MAX);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("DIFF", MAX - MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NMISSPROB", NMISS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF UPCASE (NAME) = UPCASE ("_tmpfreqvar_") THEN DO;
MPRINT(EM_ASSESS):   AUXMIN = MIN - INT (MIN);
MPRINT(EM_ASSESS):   AUXMAX = MAX - INT (MAX);
MPRINT(EM_ASSESS):   IF AUXMIN > 0 OR AUXMAX > 0 THEN CALL SYMPUTX ("USEWEIGHT", "Y");
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("USEWEIGHT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _ANY0;
MPRINT(EM_ASSESS):   SET _ea_tmpdata (KEEP = F_DepVar P_DepVar1 _tmpfreqvar_ );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................... No Formats;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF LEFT ( F_DepVar ) = "1" THEN NTARGET = 1;
MPRINT(EM_ASSESS):   ELSE NTARGET = 0;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Before proc summary of binary case;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC SUMMARY DATA = _ANY0 (KEEP = P_DepVar1 NTARGET _tmpfreqvar_ WHERE =
(NTARGET > . )) NWAY MISSING;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   CLASS P_DepVar1 ;
MPRINT(EM_ASSESS):   VAR NTARGET ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   OUTPUT OUT = ANYSUM (DROP = _TYPE_) MEAN = _MEANTARGET _MEANFREQVAR ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... Main Data Set Processing, Binary case;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK (KEEP = BASECAPC BASECAP __EVENT__ BASEEVENTS
BASEGAIN BASELIFT BASERESP BASERESPC BESTCAP BESTCAPC BESTGAIN BESTLIFT BESTLIFTC
BESTNUMEVENTS BESTRESP BESTRESPC BIN CBASELIFT C_LIFT C_P_CAPT_RESP C_P_RESP GAIN LIFT MAXPROB
MINPROB MNPROB NUMNONRESP NUMOBS NUMRESP PERCENTILE P_CAPT_RESP P_RESP ) WORK._TEMPSCOREDIST
(KEEP = BIN LOWERPROB UPPERPROB EVENTVALUE SCR_NUMEVENTS MODELSCORE SCR_NUMNONEVENTS RANGE
NUMOBSINGROUP PERCOBSINGROUP C_PERCOBSINGROUP SCR_P_EVENTS SCR_CP_EVENTS SCR_P_NONEVENTS
SCR_CP_NONEVENTS SCR_MNPROB SCR_MINPROB SCR_MAXPROB ) ;
 
MPRINT(EM_ASSESS):   SET ANYSUM END = EOF;
 
MPRINT(EM_ASSESS):   IF _N_ = 1 THEN SET _AUXEVENTNAME;
 
MPRINT(EM_ASSESS):   RETAIN MINPROB1 - MINPROB20 1 MAXPROB1 - MAXPROB20 0 MNPROB1 - MNPROB20 0
NUMOBS1 - NUMOBS20 0 NUMRESP1 - NUMRESP20 0 TRUEPOS1 - TRUEPOS100 0 TRUENEG1 - TRUENEG100 0
FALSEPOS1 - FALSEPOS100 0 FALSENEG1 - FALSENEG100 0 EVENTS1 - EVENTS100 NONEVENTS1 -
NONEVENTS100 0 FIRSTIN1 - FIRSTIN100 . LASTIN1 - LASTIN100 . RESPRATE 0.152259332 _NEVENTS 155
_NNONEVENTS 863 TARGET "NTARGET" ;
MPRINT(EM_ASSESS):   ARRAY MINPROBS (20) MINPROB1 - MINPROB20;
MPRINT(EM_ASSESS):   ARRAY MAXPROBS (20) MAXPROB1 - MAXPROB20;
MPRINT(EM_ASSESS):   ARRAY MNPROBS (20) MNPROB1 - MNPROB20;
MPRINT(EM_ASSESS):   ARRAY NUMOBSS (20) NUMOBS1 - NUMOBS20;
MPRINT(EM_ASSESS):   ARRAY NUMRESPS (20) NUMRESP1 - NUMRESP20;
MPRINT(EM_ASSESS):   ARRAY TRUEPOSX (100) TRUEPOS1 - TRUEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSEPOSX (100) FALSEPOS1 - FALSEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSENEGX (100) FALSENEG1 - FALSENEG100;
MPRINT(EM_ASSESS):   ARRAY TRUENEGX (100) TRUENEG1 - TRUENEG100;
MPRINT(EM_ASSESS):   ARRAY _EVENTS (100) EVENTS1 - EVENTS100;
MPRINT(EM_ASSESS):   ARRAY NONEVENTS (100) NONEVENTS1 - NONEVENTS100;
MPRINT(EM_ASSESS):   ARRAY FIRSTIN (100) FIRSTIN1 - FIRSTIN100;
MPRINT(EM_ASSESS):   ARRAY LASTIN (100) LASTIN1 - LASTIN100;
MPRINT(EM_ASSESS):   RETAIN SCR_MNPROB1 - SCR_MNPROB100 0 SCR_MINPROB1 - SCR_MINPROB100 1
SCR_MAXPROB1 - SCR_MAXPROB100 0;
MPRINT(EM_ASSESS):   ARRAY SCR_MNPROBS (100) SCR_MNPROB1 - SCR_MNPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MINPROBS (100) SCR_MINPROB1 - SCR_MINPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MAXPROBS (100) SCR_MAXPROB1 - SCR_MAXPROB100;
MPRINT(EM_ASSESS):   DROP SCR_MINPROB1 - SCR_MINPROB100 SCR_MAXPROB1 - SCR_MAXPROB100
SCR_MNPROB1 - SCR_MNPROB100 ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...... Area For 8 Financials ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF _MEANTARGET = . THEN _MEANTARGET = RESPRATE;
MPRINT(EM_ASSESS):   DROP N1 _K SUMWEIGHTS ;
MPRINT(EM_ASSESS):   SUMWEIGHTS = 1;
 
MPRINT(EM_ASSESS):   DO _K = 1 TO CEIL (_FREQ_);
MPRINT(EM_ASSESS):   IF _K = CEIL (_FREQ_) THEN DO;
MPRINT(EM_ASSESS):   IF _FREQ_ < CEIL (_FREQ_) THEN _WEIGHT = _FREQ_ - FLOOR (_FREQ_);
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   N1 + _WEIGHT;
MPRINT(EM_ASSESS):   NTARGET = _MEANTARGET ;
MPRINT(EM_ASSESS):   DECILE = MIN (20, CEIL (N1 * 20 / 1018));
MPRINT(EM_ASSESS):   MINPROBS ( DECILE) = MIN (MINPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MAXPROBS ( DECILE) = MAX (MAXPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MNPROBS ( DECILE) = SUM (MNPROBS ( DECILE), P_DepVar1 * _WEIGHT);
MPRINT(EM_ASSESS):   NUMOBSS ( DECILE) = NUMOBSS ( DECILE) + _WEIGHT;
MPRINT(EM_ASSESS):   NUMRESPS ( DECILE) = NUMRESPS ( DECILE) + _MEANTARGET * _WEIGHT;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ outside of do loop, Area for final ROC;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   RANKDELTA = (ROUND ( _FREQ_ ) + 1) / 2;
MPRINT(EM_ASSESS):   RANK = UNTIEDRANK + RANKDELTA;
MPRINT(EM_ASSESS):   DROP RANK ;
MPRINT(EM_ASSESS):   SUMRANK1 + RANK * ROUND (_MEANTARGET * _FREQ_, .0000001);
MPRINT(EM_ASSESS):   UNTIEDRANK + ROUND (_FREQ_, .00000001);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Area For ROC Curve;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DO _K = 1 TO 100;
MPRINT(EM_ASSESS):   IF P_DepVar1 * 100 >= _K THEN DO;
MPRINT(EM_ASSESS):   TRUEPOSX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   FALSEPOSX ( _K ) + _FREQ_ * (1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   TRUENEGX ( _K ) + _FREQ_ * ( 1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   FALSENEGX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   SLOT = MIN (MAX (CEIL (P_DepVar1 * 100), 1), 100) ;
MPRINT(EM_ASSESS):   DROP SLOT;
MPRINT(EM_ASSESS):   FIRSTIN ( SLOT ) = MIN ( FIRSTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   LASTIN ( SLOT ) = MAX ( LASTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   _EVENTS ( SLOT) = _EVENTS ( SLOT) + _FREQ_ * _MEANTARGET;
MPRINT(EM_ASSESS):   NONEVENTS ( SLOT) = NONEVENTS ( SLOT) + _FREQ_ * (1 - _MEANTARGET);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ START OF OUTDIST IN BINARY CASE MAIN DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   SCR_MNPROBS ( SLOT ) = SUM (SCR_MNPROBS (SLOT), P_DepVar1 * _FREQ_ );
MPRINT(EM_ASSESS):   SCR_MINPROBS ( SLOT ) = MIN (SCR_MINPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   SCR_MAXPROBS ( SLOT ) = MAX (SCR_MAXPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ End of Outdist in Binary case main DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   PUT //;
MPRINT(EM_ASSESS):   DO K = 1 TO 20;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LENGTH EVENTVALUE $ 32;
MPRINT(EM_ASSESS):   RETAIN EVENTVALUE "1" ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ......... Start of EOF area of BINARY processing of main data set ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SUMRANK1", SUMRANK1);
MPRINT(EM_ASSESS):   LENGTH DATAROLE $ 10;
MPRINT(EM_ASSESS):   RETAIN DATAROLE "VALIDATE" ;
MPRINT(EM_ASSESS):   RETAIN OVLMIN 0.0000204999 OVLMAX 0.9942156693 ;
MPRINT(EM_ASSESS):   DROP OVLMIN OVLMAX ;
MPRINT(EM_ASSESS):   C_NUMOBS = 0;
MPRINT(EM_ASSESS):   C_NUM_RESP = 0;
MPRINT(EM_ASSESS):   C_NUM_NONRESP = 0;
MPRINT(EM_ASSESS):   C_P_RESP = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   PREVIOUSPROFIT = 0;
MPRINT(EM_ASSESS):   MAXPROFIT = 0;
MPRINT(EM_ASSESS):   _KS_BIN_ = 0;
MPRINT(EM_ASSESS):   DROP _KS_BIN_;
MPRINT(EM_ASSESS):   AVGNUMRESP = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASERESP = 100 * RESPRATE;
MPRINT(EM_ASSESS):   BASERESPC = BASERESP;
MPRINT(EM_ASSESS):   BASECAP = 100 / 20;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................Start OF Gainschart = Outranks Area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = 0;
MPRINT(EM_ASSESS):   DO GROUP = 20 TO 1 BY -1;
 
MPRINT(EM_ASSESS):   BASECAPC + BASECAP;
MPRINT(EM_ASSESS):   PERCENTILE = GROUP * (100 / 20);
MPRINT(EM_ASSESS):   MINPROB = MINPROBS ( GROUP);
MPRINT(EM_ASSESS):   MAXPROB = MAXPROBS ( GROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB" || LEFT ( PUT (GROUP, 3.)), MINPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB" || LEFT ( PUT (GROUP, 3.)), MAXPROB);
MPRINT(EM_ASSESS):   NUMOBS = NUMOBSS ( GROUP);
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN MNPROB = MNPROBS ( GROUP) / NUMOBS;
MPRINT(EM_ASSESS):   ELSE MNPROB = .;
MPRINT(EM_ASSESS):   C_NUMOBS = SUM (NUMOBS, C_NUMOBS);
MPRINT(EM_ASSESS):   NUMRESP = NUMRESPS ( GROUP);
MPRINT(EM_ASSESS):   NUMNONRESP = NUMOBS - NUMRESP;
MPRINT(EM_ASSESS):   C_AVGNUM_RESP + AVGNUMRESP;
MPRINT(EM_ASSESS):   IF C_NUMOBS <= _NEVENTS THEN DO;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   BESTCAPC = C_NUMOBS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BASEEVENTS = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASENONEVENTS = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   FLAG + 1;
MPRINT(EM_ASSESS):   DROP FLAG;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = _NEVENTS - C_NUMOBS + NUMOBS;
MPRINT(EM_ASSESS):   IF FLAG > 1 THEN BESTNUMEVENTS = 0;
MPRINT(EM_ASSESS):   BESTCAPC = 100;
MPRINT(EM_ASSESS):   IF C_NUMOBS - _NEVENTS <= NUMOBS THEN DO;
MPRINT(EM_ASSESS):   BASEEVENTS = C_NUMOBS - _NEVENTS;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS - C_NUMOBS + _NEVENTS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BASEEVENTS = 0;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   BESTCAP = BESTNUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BESTLIFT = BESTNUMEVENTS / AVGNUMRESP;
MPRINT(EM_ASSESS):   C_BESTNUMEVENTS + BESTNUMEVENTS;
MPRINT(EM_ASSESS):   DROP C_BESTNUMEVENTS;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN BESTLIFTC = C_BESTNUMEVENTS / (_NEVENTS / 1018 *
C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE BESTLIFTC = .;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESP = BESTNUMEVENTS * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_RESP = NUMRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_NONRESP = NUMNONRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESP = .;
MPRINT(EM_ASSESS):   P_RESP = .;
MPRINT(EM_ASSESS):   P_NONRESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESPC = C_BESTNUMEVENTS * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   BESTGAIN = MAX (0, ((C_BESTNUMEVENTS / C_NUMOBS ) / ( AVGNUMRESP /
NUMOBS) - 1) * 100);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESPC = .;
MPRINT(EM_ASSESS):   BESTGAIN = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMNONRESP > 0 THEN ODDS = NUMRESP / NUMNONRESP;
MPRINT(EM_ASSESS):   ELSE ODDS = .;
MPRINT(EM_ASSESS):   C_NUM_RESP = SUM (C_NUM_RESP , NUMRESP );
MPRINT(EM_ASSESS):   C_NUM_NONRESP = SUM (C_NUM_NONRESP, NUMNONRESP );
MPRINT(EM_ASSESS):   IF C_NUM_NONRESP > 0 THEN C_ODDS = C_NUM_RESP / C_NUM_NONRESP;
MPRINT(EM_ASSESS):   ELSE C_ODDS = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   C_P_RESP = C_NUM_RESP * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   GAIN = ABS(100 * (((C_NUM_RESP / C_NUMOBS ) / (_NEVENTS / 1018)) - 1));
MPRINT(EM_ASSESS):   BASEGAIN = 100 * (( (C_AVGNUM_RESP / C_NUMOBS) / ( AVGNUMRESP / NUMOBS))
- 1);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   GAIN = .;
MPRINT(EM_ASSESS):   BASEGAIN = .;
MPRINT(EM_ASSESS):   C_P_RESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF BASEGAIN <= 0 THEN BASEGAIN = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = NUMRESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   P_CAPT_NONRESP = NUMNONRESP * 100 / ( 1018 - _NEVENTS);
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = C_NUM_RESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   C_P_CAPT_NONRESP = C_NUM_NONRESP * 100 / ( 1018 - _NEVENTS);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Area For Binned KS in Outranks area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _DIFFERENCE = C_P_CAPT_RESP - C_P_CAPT_NONRESP ;
MPRINT(EM_ASSESS):   IF _KS_BIN_ < _DIFFERENCE THEN DO;
MPRINT(EM_ASSESS):   _KS_BIN_ = _DIFFERENCE;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = MINPROB + (MAXPROB - MINPROB) / 2 ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LIFT = P_RESP * .01 / RESPRATE ;
MPRINT(EM_ASSESS):   C_LIFT = C_P_RESP * .01 / RESPRATE;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BASELIFT = AVGNUMRESP / ( RESPRATE * NUMOBS );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE BASELIFT = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN CBASELIFT = C_AVGNUM_RESP / (RESPRATE * C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE CBASELIFT = .;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ WITHIN DO LOOP FOR OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 + 1 - GROUP;
MPRINT(EM_ASSESS):   PERCENTILE = BIN * (100 / 20);
MPRINT(EM_ASSESS):   B_C_P_RESP = PERCENTILE;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPRANK ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................ END OF GAINSCHART = OUTRANKS AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFITGROUP" , MAXPROFITGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFIT" , MAXPROFIT );
MPRINT(EM_ASSESS):   KS_ABSDIFF = 0 ;
MPRINT(EM_ASSESS):   MINPRECTPR = 9999;
MPRINT(EM_ASSESS):   Y0 = 1 - RESPRATE;
MPRINT(EM_ASSESS):   Y1 = RESPRATE;
MPRINT(EM_ASSESS):   MAXMUTUAL = 0;
MPRINT(EM_ASSESS):   DROP MAXMUTUAL KSPROB Y0 Y1 KS_ABSDIFF MINPRECTPR;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .....................About to start Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................... Finished Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Outdist ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS96 - EVENTS100 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS96 - NONEVENTS100);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB96 -
SCR_MNPROB100) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB96 - SCR_MINPROB100) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB96 - SCR_MAXPROB100) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 20;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 19 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS91 - EVENTS95 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS91 - NONEVENTS95);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB91 -
SCR_MNPROB95) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB91 - SCR_MINPROB95) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB91 - SCR_MAXPROB95) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 19;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 18 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS86 - EVENTS90 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS86 - NONEVENTS90);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB86 -
SCR_MNPROB90) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB86 - SCR_MINPROB90) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB86 - SCR_MAXPROB90) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 18;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 17 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS81 - EVENTS85 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS81 - NONEVENTS85);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB81 -
SCR_MNPROB85) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB81 - SCR_MINPROB85) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB81 - SCR_MAXPROB85) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 17;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 16 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS76 - EVENTS80 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS76 - NONEVENTS80);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB76 -
SCR_MNPROB80) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB76 - SCR_MINPROB80) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB76 - SCR_MAXPROB80) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 16;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 15 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS71 - EVENTS75 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS71 - NONEVENTS75);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB71 -
SCR_MNPROB75) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB71 - SCR_MINPROB75) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB71 - SCR_MAXPROB75) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 15;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 14 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS66 - EVENTS70 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS66 - NONEVENTS70);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB66 -
SCR_MNPROB70) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB66 - SCR_MINPROB70) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB66 - SCR_MAXPROB70) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 14;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 13 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS61 - EVENTS65 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS61 - NONEVENTS65);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB61 -
SCR_MNPROB65) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB61 - SCR_MINPROB65) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB61 - SCR_MAXPROB65) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 13;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 12 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS56 - EVENTS60 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS56 - NONEVENTS60);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB56 -
SCR_MNPROB60) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB56 - SCR_MINPROB60) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB56 - SCR_MAXPROB60) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 12;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 11 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS51 - EVENTS55 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS51 - NONEVENTS55);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB51 -
SCR_MNPROB55) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB51 - SCR_MINPROB55) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB51 - SCR_MAXPROB55) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 11;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 10 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS46 - EVENTS50 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS46 - NONEVENTS50);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB46 -
SCR_MNPROB50) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB46 - SCR_MINPROB50) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB46 - SCR_MAXPROB50) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 10;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 9 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS41 - EVENTS45 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS41 - NONEVENTS45);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB41 -
SCR_MNPROB45) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB41 - SCR_MINPROB45) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB41 - SCR_MAXPROB45) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 9;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 8 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS36 - EVENTS40 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS36 - NONEVENTS40);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB36 -
SCR_MNPROB40) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB36 - SCR_MINPROB40) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB36 - SCR_MAXPROB40) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 8;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 7 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS31 - EVENTS35 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS31 - NONEVENTS35);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB31 -
SCR_MNPROB35) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB31 - SCR_MINPROB35) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB31 - SCR_MAXPROB35) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 7;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 6 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS26 - EVENTS30 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS26 - NONEVENTS30);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB26 -
SCR_MNPROB30) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB26 - SCR_MINPROB30) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB26 - SCR_MAXPROB30) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 6;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 5 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS21 - EVENTS25 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS21 - NONEVENTS25);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB21 -
SCR_MNPROB25) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB21 - SCR_MINPROB25) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB21 - SCR_MAXPROB25) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 5;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 4 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS16 - EVENTS20 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS16 - NONEVENTS20);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB16 -
SCR_MNPROB20) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB16 - SCR_MINPROB20) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB16 - SCR_MAXPROB20) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 4;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 3 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS11 - EVENTS15 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS11 - NONEVENTS15);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB11 -
SCR_MNPROB15) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB11 - SCR_MINPROB15) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB11 - SCR_MAXPROB15) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 3;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 2 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS6 - EVENTS10 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS6 - NONEVENTS10);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB6 -
SCR_MNPROB10) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB6 - SCR_MINPROB10) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB6 - SCR_MAXPROB10) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 2;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 1 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS1 - EVENTS5 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS1 - NONEVENTS5);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB1 - SCR_MNPROB5)
/ NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB1 - SCR_MINPROB5) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB1 - SCR_MAXPROB5) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 1;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSPROB" , PUT (KSPROB, 5.3 ) );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_PROB" , _KS_BIN_PROB );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_" , _KS_BIN_ / 100 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSDIFF" , KS_ABSDIFF );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PRECTPR" , PRECTPR );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXMUTUALPROB" , MAXMUTUALPROB);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LABEL __EVENT__ = "Event" DECILE = "Depth" BIN = "Bin" NUMOBS = "Number
of Observations" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * RUN for large data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST;
MPRINT(EM_ASSESS):   DELETE _AUXEVENTNAME;
MPRINT(EM_ASSESS):   QUIT;
 
MPRINT(EM_ASSESS):   OPTION NOCENTER LS = 95;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Report Vars Area.;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start OF Outdist Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPSCOREDIST;
MPRINT(EM_ASSESS):   RENAME MODELSCORE = SCORE UPPERPROB = UPPOSTERIOR SCR_CP_EVENTS =
CUMULATIVEPERCENTAGEOFEVENTS SCR_CP_NONEVENTS = CUMULATIVEPERCENTAGEOFNONEVENTS EVENTVALUE =
EVENT LOWERPROB = LOWPOSTERIOR NUMOBSINGROUP = N PERCOBSINGROUP = PERCENTAGE SCR_MINPROB =
_MINP_ SCR_MAXPROB = _MAXP_ SCR_MNPROB = _MEANP_ RANGE = P_LABEL C_PERCOBSINGROUP =
CUMULATIVEPERCENTAGE SCR_NUMEVENTS = NUMBEROFEVENTS SCR_NUMNONEVENTS = NUMBEROFNONEVENTS
SCR_P_EVENTS = PERCENTAGEOFEVENTS SCR_P_NONEVENTS = PERCENTAGEOFNONEVENTS ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... OUTDIST MODIFICATION LABEL AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL BIN = "Bin" N = "Number of Observations" P_LABEL = "Posterior
Probability Range" EVENT = "Event" LOWPOSTERIOR = "Lower Bound Posterior Probability"
PERCENTAGEOFEVENTS = "Percentage of Events" CUMULATIVEPERCENTAGEOFNONEVENTS = "Cumulative
Percentage of Nonevents" CUMULATIVEPERCENTAGE = "Cumulative Percentage" PERCENTAGEOFEVENTS =
"Percentage of Events" PERCENTAGEOFNONEVENTS = "Percentage of Nonevents"
CUMULATIVEPERCENTAGEOFEVENTS = "Cumulative Percentage of Events" UPPOSTERIOR = "Upper Bound
Posterior Probability" NUMBEROFEVENTS = "Number of Events" PERCENTAGE = "Percentage"
NUMBEROFNONEVENTS = "Number of Nonevents" _MEANP_ = "Mean Posterior Probability" _MINP_ = "Min
Posterior Probability" _MAXP_ = "Max Posterior Probability" SCORE = "Model Score" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   SET WORK._TEMPSCOREDIST (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........... END OF OUTDIST MODIFICATION;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start of OUTRANKS Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPRANK;
MPRINT(EM_ASSESS):   RENAME __EVENT__ = EVENT P_RESP = RESP C_P_CAPT_RESP = CAPC P_CAPT_RESP =
CAP NUMNONRESP = NUMNEVENT NUMRESP = NUMEVENT BASEEVENTS = BASENUMBEROFEVENTS BESTNUMEVENTS =
BESTNUMBEROFEVENTS MAXPROB = _MAXP_ MINPROB = _MINP_ CBASELIFT = BASELIFTC C_LIFT = LIFTC
MNPROB = _MEANP_ PERCENTILE = DECILE NUMOBS = N NUMEVENT = NUMBEROFEVENTS C_P_RESP = RESPC ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................. OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL _MAXP_ = "Max Posterior Probability" _MINP_ = "Min Posterior
Probability" _MEANP_ = "Mean Posterior Probability" BASECAP = "Baseline % Captured Response"
BASECAPC = "Baseline Cumulative % Captured Response" BASENUMBEROFEVENTS = "Baseline Number of
Events" BASEGAIN = "Baseline Gain" BASELIFT = "Baseline Lift" BASELIFTC = "Baseline Cumulative
Lift" BASERESP = "Baseline % Response" BASERESPC = "Baseline Cumulative % Response" BASELIFTC
= "Baseline Cumulative Lift" BESTCAP = "Best % Captured Response" BESTCAPC = "Best Cumulative
% Captured Response" BESTGAIN = "Best Gain" BESTRESP = "Best % Response" BESTRESPC = "Best
Cumulative % Response" BESTLIFT = "Best Lift" BESTLIFTC = "Best Cumulative Lift"
BESTNUMBEROFEVENTS = "Best Number of Events" CAP = "% Captured Response" CAPC = "Cumulative %
Captured Response" DECILE = "Depth" GAIN = "Gain" LIFT = "Lift" LIFTC = "Cumulative Lift"
NUMNEVENT = "Number of Nonevents" N = "Number of Observations" EVENT = "Event" RESPC =
"Cumulative % Response" NUMBEROFEVENTS = "Number of Events" RESP = "% Response" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK;
MPRINT(EM_ASSESS):   SET WORK._TEMPRANK (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   proc datasets lib=work nolist;
MPRINT(EM_ASSESS):   delete _ea_tmpdata;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_ASSESS):   quit;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   OPTION ERRORS = 20;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):    data WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "VALIDATE";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl21_EMRANK;
MPRINT(EM_DIAGRAM):   length target $32;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   length dataRole $20;
MPRINT(EM_DIAGRAM):   length EVENT $32;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl21_EMRANK WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "VALIDATE";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl21_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   length dataRole $20;
MPRINT(EM_DIAGRAM):   length EVENT $32;
MPRINT(EM_DIAGRAM):   length P_LABEL $9;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl21_EMSCOREDIST WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   run;
181302     %let _cn = %sysfunc(getoption(CENTER));
181303     options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
181304     proc print data=EMWS8.Ensmbl21_EMREPORTFIT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl21_EMREPORTFIT noobs label;
181305     var STAT LABEL TRAIN
181306     VALIDATE
181307     ;
MPRINT(EM_DIAGRAM):   var STAT LABEL TRAIN VALIDATE ;
181308     by TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by TARGET TARGETLABEL;
181309     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
181310     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Fit Statistics";
MPRINT(EM_DIAGRAM):   run;
181311     run;
 
NOTE: There were 9 observations read from the data set EMWS8.ENSMBL21_EMREPORTFIT.
NOTE: The PROCEDURE PRINT printed page 53.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
181312     title10;
MPRINT(EM_DIAGRAM):   title10;
181313     options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
181314     proc sort data=EMWS8.Ensmbl21_EMCLASSIFICATION nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.Ensmbl21_EMCLASSIFICATION nothreads;
181315     by DATAROLE TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET TARGETLABEL;
181316     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS8.ENSMBL21_EMCLASSIFICATION.
NOTE: The data set EMWS8.ENSMBL21_EMCLASSIFICATION has 8 observations and 12 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
181317     %let _cn = %sysfunc(getoption(CENTER));
181318     options nocenter;
MPRINT(EM_DIAGRAM):   options nocenter;
181319     proc print data=EMWS8.Ensmbl21_EMCLASSIFICATION noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl21_EMCLASSIFICATION noobs label;
181320     var from into pct_row pct_col count percent
181321     ;
MPRINT(EM_DIAGRAM):   var from into pct_row pct_col count percent ;
181322     by DATAROLE TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET TARGETLABEL;
181323     label FROM = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,     NOQUOTE))";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
181324     label INTO = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcome_vlabel ,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
181325     label PCT_ROW = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetpct_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
181326     label PCT_COL = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcomepct_vlabel , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
181327     label COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel ,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
181328     label PERCENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_totalpct_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
181329     where _TYPE_='PREDICTION';
MPRINT(EM_DIAGRAM):   where _TYPE_='PREDICTION';
181330     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
181331     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_classification_title    , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Classification Table";
MPRINT(EM_DIAGRAM):   run;
181332     run;
 
NOTE: There were 8 observations read from the data set EMWS8.ENSMBL21_EMCLASSIFICATION.
      WHERE _TYPE_='PREDICTION';
NOTE: The PROCEDURE PRINT printed page 54.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
181333     title9;
MPRINT(EM_DIAGRAM):   title9;
181334     title10;
MPRINT(EM_DIAGRAM):   title10;
181335     options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
181336     %let _cn = %sysfunc(getoption(CENTER));
181337     options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
181338     data EMWS8.Ensmbl21_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl21_EMEVENTREPORT;
181339     length DATAROLE TARGET $32 TARGETLABEL $200 FALSENEVENT TRUENEVENT FALSEEVENT
181339   ! TRUEEVENT 8;
MPRINT(EM_DIAGRAM):   length DATAROLE TARGET $32 TARGETLABEL $200 FALSENEVENT TRUENEVENT
FALSEEVENT TRUEEVENT 8;
181340     label DATAROLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
181340   !  TARGET = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,      NOQUOTE))"
181340   ! TARGETLABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel, NOQUOTE))"
181340   ! FALSEEVENT
181341     = "%sysfunc(sasmsg(sashelp.dmine, rpt_falseevent_vlabel ,  NOQUOTE))" FALSENEVENT =
181341   ! "%sysfunc(sasmsg(sashelp.dmine, rpt_falsenevent_vlabel , NOQUOTE))" TRUEEVENT =
181341   ! "%sysfunc(sasmsg(sashelp.dmine, rpt_trueevent_vlabel ,   NOQUOTE))" TRUENEVENT =
181342        "%sysfunc(sasmsg(sashelp.dmine, rpt_truenevent_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role" TARGET = "Target" TARGETLABEL = "Target
Label" FALSEEVENT = "False Positive" FALSENEVENT = "False Negative" TRUEEVENT = "True
Positive" TRUENEVENT = "True Negative";
181343     FALSEEVENT=0;
MPRINT(EM_DIAGRAM):   FALSEEVENT=0;
181344     FALSENEVENT=0;
MPRINT(EM_DIAGRAM):   FALSENEVENT=0;
181345     TRUEEVENT=0;
MPRINT(EM_DIAGRAM):   TRUEEVENT=0;
181346     TRUENEVENT=0;
MPRINT(EM_DIAGRAM):   TRUENEVENT=0;
181347     set EMWS8.Ensmbl21_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl21_EMEVENTREPORT;
181348     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set EMWS8.ENSMBL21_EMEVENTREPORT.
NOTE: The data set EMWS8.ENSMBL21_EMEVENTREPORT has 2 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
181349     proc print data=EMWS8.Ensmbl21_EMEVENTREPORT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl21_EMEVENTREPORT noobs label;
181350     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
181351     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_eventtable_title    , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Event Classification Table";
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL;
MPRINT(EM_DIAGRAM):   run;
181352     by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL;
181353     run;
 
NOTE: There were 2 observations read from the data set EMWS8.ENSMBL21_EMEVENTREPORT.
NOTE: The PROCEDURE PRINT printed page 55.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
181354     title10;
MPRINT(EM_DIAGRAM):   title10;
181355     options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
181356     proc datasets library=EMWS8 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS8 nolist;
181357     modify Ensmbl21_EMRANK;
MPRINT(EM_DIAGRAM):   modify Ensmbl21_EMRANK;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
181358     label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
181359     label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
181359   ! ;
MPRINT(EM_DIAGRAM):   run;
181360     run;
 
NOTE: MODIFY was successful for EMWS8.ENSMBL21_EMRANK.DATA.
181361     quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.17 seconds
      cpu time            0.17 seconds
 
 
181362     %let _cn = %sysfunc(getoption(CENTER));
181363     options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
181364     proc print data=EMWS8.Ensmbl21_EMRANK label noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl21_EMRANK label noobs;
181365     var
181366     decile gain lift liftc resp respc N _meanP_;
MPRINT(EM_DIAGRAM):   var decile gain lift liftc resp respc N _meanP_;
181367     by
181368     notsorted DATAROLE
181369     notsorted TARGET
181370     notsorted TARGETLABEL
181371     ;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL ;
181372     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
181373     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_scoreranking_title , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Rankings";
MPRINT(EM_DIAGRAM):   run;
181374     run;
 
NOTE: There were 40 observations read from the data set EMWS8.ENSMBL21_EMRANK.
NOTE: The PROCEDURE PRINT printed page 56.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
181375     title10;
MPRINT(EM_DIAGRAM):   title10;
181376     options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
181377     proc datasets library=EMWS8 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS8 nolist;
181378     modify Ensmbl21_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   modify Ensmbl21_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
181379     label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,
181379   ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
181380     label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
181380   ! ;
MPRINT(EM_DIAGRAM):   run;
181381     run;
 
NOTE: MODIFY was successful for EMWS8.ENSMBL21_EMSCOREDIST.DATA.
181382     quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.23 seconds
      cpu time            0.23 seconds
 
 
MPRINT(EM_DIAGRAM):    options nocenter;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl21_EMSCOREDIST label noobs;
MPRINT(EM_DIAGRAM):   var p_label numberOfEvents numberOfNonEvents _meanp_ percentage;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL ;
MPRINT(EM_DIAGRAM):   where TARGET in( "DepVar" );
MPRINT(EM_DIAGRAM):   title9 ' ';
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Distribution";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   title10;
MPRINT(EM_DIAGRAM):   options NOCENTER;
MPRINT(EM_DIAGRAM):   proc printto;
MPRINT(EM_DIAGRAM):   run;
