MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "20. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17.29 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                20. April 2016
Time:                17.29 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O32GM6HI 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural40\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O32GM6HI new;
MPRINT(EM_DIAGRAM):   run;
1186454    data work.outkey;
MPRINT(EM_DIAGRAM):    data work.outkey;
1186455    set EMWS8.Neural40_OUTKEY;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural40_OUTKEY;
1186456    if upcase(ROLE) = 'HIDDEN';
MPRINT(EM_DIAGRAM):   if upcase(ROLE) = 'HIDDEN';
1186457    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 48 observations read from the data set EMWS8.NEURAL40_OUTKEY.
NOTE: The data set WORK.OUTKEY has 5 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1186458    filename emflow
1186458  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural40\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural40\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural40: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1186459    *------------------------------------------------------------*;
1186460    * Neural40: Scoring DATA data;
1186461    *------------------------------------------------------------*;
1186462    data EMWS8.Neural40_TRAIN
1186463    / view=EMWS8.Neural40_TRAIN
1186464    ;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural40_TRAIN / view=EMWS8.Neural40_TRAIN ;
1186465    set EMWS8.Meta3_TRAIN
1186466    ;
MPRINT(EM_DIAGRAM):   set EMWS8.Meta3_TRAIN ;
1186467    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural40\EMFLOWSCORE.sas.
1186468   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1186469   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1186470   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1186471   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1186472   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1186473   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1186474   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1186475   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1186476   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1186477   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1186478   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1186479   +LENGTH _WARN_ $4
1186480   +      F_DepVar  $ 12
1186481   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1186482   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1186483   +
1186484   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1186485   +
1186486   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1186487   +
1186488   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1186489   +
1186490   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1186491   +
1186492   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1186493   +
1186494   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1186495   +
1186496   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1186497   +
1186498   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1186499   +
1186500   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1186501   +
1186502   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1186503   +
1186504   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1186505   +
1186506   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1186507   +
1186508   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1186509   +
1186510   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1186511   +
1186512   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1186513   +
1186514   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1186515   +
1186516   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1186517   +
1186518   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1186519   +
1186520   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1186521   +
1186522   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1186523   +
1186524   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1186525   +
1186526   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1186527   +
1186528   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1186529   +
1186530   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1186531   +
1186532   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1186533   +
1186534   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1186535   +
1186536   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1186537   +
1186538   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1186539   +
1186540   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1186541   +
1186542   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1186543   +
1186544   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1186545   +
1186546   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1186547   +
1186548   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1186549   +
1186550   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1186551   +
1186552   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1186553   +
1186554   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1186555   +
1186556   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1186557   +
1186558   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1186559   +
1186560   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1186561   +
1186562   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1186563   +
1186564   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1186565   +
1186566   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1186567   +
1186568   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1186569   +
1186570   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1186571   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1186572   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1186573   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1186574   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1186575   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1186576   +end;
MPRINT(EM_DIAGRAM):   end;
1186577   +else do;
MPRINT(EM_DIAGRAM):   else do;
1186578   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1186579   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1186580   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1186581   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1186582   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1186583   +   end;
MPRINT(EM_DIAGRAM):   end;
1186584   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1186585   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1186586   +   end;
MPRINT(EM_DIAGRAM):   end;
1186587   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1186588   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1186589   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1186590   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1186591   +   end;
MPRINT(EM_DIAGRAM):   end;
1186592   +end;
MPRINT(EM_DIAGRAM):   end;
1186593   +
1186594   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1186595   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1186596   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1186597   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1186598   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1186599   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1186600   +end;
MPRINT(EM_DIAGRAM):   end;
1186601   +else do;
MPRINT(EM_DIAGRAM):   else do;
1186602   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1186603   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1186604   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1186605   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1186606   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1186607   +   end;
MPRINT(EM_DIAGRAM):   end;
1186608   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1186609   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1186610   +   end;
MPRINT(EM_DIAGRAM):   end;
1186611   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1186612   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1186613   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1186614   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1186615   +   end;
MPRINT(EM_DIAGRAM):   end;
1186616   +end;
MPRINT(EM_DIAGRAM):   end;
1186617   +
1186618   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1186619   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1186620   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1186621   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1186622   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1186623   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1186624   +end;
MPRINT(EM_DIAGRAM):   end;
1186625   +else do;
MPRINT(EM_DIAGRAM):   else do;
1186626   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1186627   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1186628   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1186629   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1186630   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1186631   +   end;
MPRINT(EM_DIAGRAM):   end;
1186632   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1186633   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1186634   +   end;
MPRINT(EM_DIAGRAM):   end;
1186635   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1186636   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1186637   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1186638   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1186639   +   end;
MPRINT(EM_DIAGRAM):   end;
1186640   +end;
MPRINT(EM_DIAGRAM):   end;
1186641   +
1186642   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1186643   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1186644   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1186645   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1186646   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1186647   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1186648   +end;
MPRINT(EM_DIAGRAM):   end;
1186649   +else do;
MPRINT(EM_DIAGRAM):   else do;
1186650   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1186651   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1186652   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1186653   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1186654   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1186655   +   end;
MPRINT(EM_DIAGRAM):   end;
1186656   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1186657   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1186658   +   end;
MPRINT(EM_DIAGRAM):   end;
1186659   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1186660   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1186661   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1186662   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1186663   +   end;
MPRINT(EM_DIAGRAM):   end;
1186664   +end;
MPRINT(EM_DIAGRAM):   end;
1186665   +
1186666   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1186667   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1186668   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1186669   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1186670   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1186671   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1186672   +end;
MPRINT(EM_DIAGRAM):   end;
1186673   +else do;
MPRINT(EM_DIAGRAM):   else do;
1186674   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1186675   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1186676   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1186677   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1186678   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1186679   +   end;
MPRINT(EM_DIAGRAM):   end;
1186680   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1186681   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1186682   +   end;
MPRINT(EM_DIAGRAM):   end;
1186683   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1186684   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1186685   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1186686   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1186687   +   end;
MPRINT(EM_DIAGRAM):   end;
1186688   +end;
MPRINT(EM_DIAGRAM):   end;
1186689   +
1186690   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1186691   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1186692   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1186693   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1186694   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1186695   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1186696   +end;
MPRINT(EM_DIAGRAM):   end;
1186697   +else do;
MPRINT(EM_DIAGRAM):   else do;
1186698   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1186699   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1186700   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1186701   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1186702   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1186703   +   end;
MPRINT(EM_DIAGRAM):   end;
1186704   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1186705   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1186706   +   end;
MPRINT(EM_DIAGRAM):   end;
1186707   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1186708   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1186709   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1186710   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1186711   +   end;
MPRINT(EM_DIAGRAM):   end;
1186712   +end;
MPRINT(EM_DIAGRAM):   end;
1186713   +
1186714   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1186715   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1186716   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1186717   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1186718   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1186719   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1186720   +end;
MPRINT(EM_DIAGRAM):   end;
1186721   +else do;
MPRINT(EM_DIAGRAM):   else do;
1186722   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1186723   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1186724   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1186725   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1186726   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1186727   +   end;
MPRINT(EM_DIAGRAM):   end;
1186728   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1186729   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1186730   +   end;
MPRINT(EM_DIAGRAM):   end;
1186731   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1186732   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1186733   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1186734   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1186735   +   end;
MPRINT(EM_DIAGRAM):   end;
1186736   +end;
MPRINT(EM_DIAGRAM):   end;
1186737   +
1186738   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1186739   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1186740   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1186741   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1186742   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1186743   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1186744   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1186745   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1186746   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1186747   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1186748   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1186749   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1186750   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1186751   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1186752   +end;
MPRINT(EM_DIAGRAM):   end;
1186753   +else do;
MPRINT(EM_DIAGRAM):   else do;
1186754   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1186755   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1186756   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1186757   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1186758   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1186759   +   end;
MPRINT(EM_DIAGRAM):   end;
1186760   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1186761   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1186762   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1186763   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1186764   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1186765   +   end;
MPRINT(EM_DIAGRAM):   end;
1186766   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1186767   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1186768   +   end;
MPRINT(EM_DIAGRAM):   end;
1186769   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1186770   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1186771   +   end;
MPRINT(EM_DIAGRAM):   end;
1186772   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1186773   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1186774   +   end;
MPRINT(EM_DIAGRAM):   end;
1186775   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1186776   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1186777   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1186778   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1186779   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1186780   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1186781   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1186782   +   end;
MPRINT(EM_DIAGRAM):   end;
1186783   +end;
MPRINT(EM_DIAGRAM):   end;
1186784   +
1186785   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1186786   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1186787   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1186788   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1186789   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1186790   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1186791   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1186792   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1186793   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1186794   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1186795   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1186796   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1186797   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1186798   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1186799   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1186800   +end;
MPRINT(EM_DIAGRAM):   end;
1186801   +else do;
MPRINT(EM_DIAGRAM):   else do;
1186802   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1186803   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1186804   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1186805   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1186806   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1186807   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1186808   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1186809   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1186810   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1186811   +         end;
MPRINT(EM_DIAGRAM):   end;
1186812   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1186813   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1186814   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1186815   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1186816   +            end;
MPRINT(EM_DIAGRAM):   end;
1186817   +         end;
MPRINT(EM_DIAGRAM):   end;
1186818   +      end;
MPRINT(EM_DIAGRAM):   end;
1186819   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1186820   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1186821   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1186822   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1186823   +         end;
MPRINT(EM_DIAGRAM):   end;
1186824   +      end;
MPRINT(EM_DIAGRAM):   end;
1186825   +   end;
MPRINT(EM_DIAGRAM):   end;
1186826   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1186827   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1186828   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1186829   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1186830   +      end;
MPRINT(EM_DIAGRAM):   end;
1186831   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1186832   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1186833   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1186834   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1186835   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1186836   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1186837   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1186838   +         end;
MPRINT(EM_DIAGRAM):   end;
1186839   +      end;
MPRINT(EM_DIAGRAM):   end;
1186840   +   end;
MPRINT(EM_DIAGRAM):   end;
1186841   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1186842   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1186843   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1186844   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1186845   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1186846   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1186847   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1186848   +   end;
MPRINT(EM_DIAGRAM):   end;
1186849   +end;
MPRINT(EM_DIAGRAM):   end;
1186850   +
1186851   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1186852   +*** Checking missing input Interval
1186853   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1186854   +
1186855   +IF NMISS(
1186856   +   AcceptedCmpTotal ,
1186857   +   Age ,
1186858   +   Frq ,
1186859   +   Income ,
1186860   +   Kidhome ,
1186861   +   MntFishProducts ,
1186862   +   MntFruits ,
1186863   +   MntGoldProds ,
1186864   +   MntSweetProducts ,
1186865   +   MonthsAsCustomer ,
1186866   +   NumDealsPurchases ,
1186867   +   NumWebVisitsMonth ,
1186868   +   RFMstat ,
1186869   +   RMntFrq ,
1186870   +   Recency ,
1186871   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
1186872   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1186873   +
1186874   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1186875   +END;
MPRINT(EM_DIAGRAM):   END;
1186876   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1186877   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1186878   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1186879   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1186880   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1186881   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1186882   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1186883   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1186884   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1186885   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1186886   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1186887   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1186888   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1186889   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1186890   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1186891   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1186892   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1186893   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
1186894   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
1186895   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1186896   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1186897   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1186898   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1186899   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1186900   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1186901   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1186902   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1186903   +END;
MPRINT(EM_DIAGRAM):   END;
1186904   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1186905   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1186906   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1186907   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1186908   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1186909   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1186910   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1186911   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1186912   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1186913   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1186914   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1186915   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1186916   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1186917   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1186918   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1186919   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1186920   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1186921   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1186922   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1186923   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1186924   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1186925   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1186926   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1186927   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1186928   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1186929   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
1186930   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
1186931   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1186932   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1186933   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1186934   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1186935   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1186936   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1186937   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1186938   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1186939   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1186940   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1186941   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1186942   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1186943   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1186944   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1186945   +END;
MPRINT(EM_DIAGRAM):   END;
1186946   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1186947   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1186948   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1186949   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1186950   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1186951   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1186952   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1186953   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1186954   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1186955   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1186956   +   H11  =     0.02151728870806 * S_AcceptedCmpTotal  +     0.05254894554809 *
1186957   +        S_Age  +    -0.16973386556377 * S_Frq  +    -0.82728779491682 *
1186958   +        S_Income  +     0.39903592539043 * S_Kidhome
1186959   +          +    -0.04460924056526 * S_MntFishProducts
1186960   +          +     0.02733683231833 * S_MntFruits  +     0.05011896594494 *
1186961   +        S_MntGoldProds  +     0.19517504324129 * S_MntSweetProducts
1186962   +          +    -0.13600486461772 * S_MonthsAsCustomer
1186963   +          +    -0.00505319277464 * S_NumDealsPurchases
1186964   +          +    -0.02131770482252 * S_NumWebVisitsMonth
1186965   +          +     0.00524769837231 * S_RFMstat  +    -0.21746675829719 *
1186966   +        S_RMntFrq  +     0.54271297675327 * S_Recency
1186967   +          +      0.5568869219643 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.02151728870806 * S_AcceptedCmpTotal + 0.05254894554809 * S_Age + 
-0.16973386556377 * S_Frq + -0.82728779491682 * S_Income + 0.39903592539043 * S_Kidhome + 
-0.04460924056526 * S_MntFishProducts + 0.02733683231833 * S_MntFruits + 0.05011896594494 * 
S_MntGoldProds + 0.19517504324129 * S_MntSweetProducts + -0.13600486461772 * 
S_MonthsAsCustomer + -0.00505319277464 * S_NumDealsPurchases + -0.02131770482252 * 
S_NumWebVisitsMonth + 0.00524769837231 * S_RFMstat + -0.21746675829719 * S_RMntFrq + 
0.54271297675327 * S_Recency + 0.5568869219643 * S_Teenhome ;
1186968   +   H12  =    -0.31677356986514 * S_AcceptedCmpTotal  +    -0.13636654958991 *
1186969   +        S_Age  +    -0.12127604451874 * S_Frq  +    -0.03912727186842 *
1186970   +        S_Income  +     0.31541271020596 * S_Kidhome
1186971   +          +    -0.06070575535455 * S_MntFishProducts
1186972   +          +     0.04717351357982 * S_MntFruits  +     0.20035627551608 *
1186973   +        S_MntGoldProds  +     0.34661630810838 * S_MntSweetProducts
1186974   +          +    -0.49660266591157 * S_MonthsAsCustomer
1186975   +          +     0.31834511850835 * S_NumDealsPurchases
1186976   +          +     0.24781307795044 * S_NumWebVisitsMonth
1186977   +          +      0.2962065441422 * S_RFMstat  +    -0.00931536368325 *
1186978   +        S_RMntFrq  +     -0.4887066152184 * S_Recency
1186979   +          +    -0.31733549884932 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.31677356986514 * S_AcceptedCmpTotal + -0.13636654958991 * S_Age 
+ -0.12127604451874 * S_Frq + -0.03912727186842 * S_Income + 0.31541271020596 * S_Kidhome + 
-0.06070575535455 * S_MntFishProducts + 0.04717351357982 * S_MntFruits + 0.20035627551608 * 
S_MntGoldProds + 0.34661630810838 * S_MntSweetProducts + -0.49660266591157 * 
S_MonthsAsCustomer + 0.31834511850835 * S_NumDealsPurchases + 0.24781307795044 * 
S_NumWebVisitsMonth + 0.2962065441422 * S_RFMstat + -0.00931536368325 * S_RMntFrq + 
-0.4887066152184 * S_Recency + -0.31733549884932 * S_Teenhome ;
1186980   +   H13  =    -0.67923945541429 * S_AcceptedCmpTotal  +     -0.1600759141845 *
1186981   +        S_Age  +    -0.32206936571155 * S_Frq  +    -0.42231968918367 *
1186982   +        S_Income  +    -0.48980326576867 * S_Kidhome
1186983   +          +     0.16754214531813 * S_MntFishProducts
1186984   +          +     0.07042633274724 * S_MntFruits  +    -0.54860029741519 *
1186985   +        S_MntGoldProds  +    -0.02870819733746 * S_MntSweetProducts
1186986   +          +    -0.09017520473136 * S_MonthsAsCustomer
1186987   +          +    -0.45842921605242 * S_NumDealsPurchases
1186988   +          +    -0.51952177798857 * S_NumWebVisitsMonth
1186989   +          +    -0.31466002172051 * S_RFMstat  +    -0.48848348436254 *
1186990   +        S_RMntFrq  +     0.79178959337864 * S_Recency
1186991   +          +    -0.01573946454754 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.67923945541429 * S_AcceptedCmpTotal + -0.1600759141845 * S_Age 
+ -0.32206936571155 * S_Frq + -0.42231968918367 * S_Income + -0.48980326576867 * S_Kidhome + 
0.16754214531813 * S_MntFishProducts + 0.07042633274724 * S_MntFruits + -0.54860029741519 * 
S_MntGoldProds + -0.02870819733746 * S_MntSweetProducts + -0.09017520473136 * 
S_MonthsAsCustomer + -0.45842921605242 * S_NumDealsPurchases + -0.51952177798857 * 
S_NumWebVisitsMonth + -0.31466002172051 * S_RFMstat + -0.48848348436254 * S_RMntFrq + 
0.79178959337864 * S_Recency + -0.01573946454754 * S_Teenhome ;
1186992   +   H14  =     0.38562838138579 * S_AcceptedCmpTotal  +     0.07260700845897 *
1186993   +        S_Age  +     0.06970375186829 * S_Frq  +     0.14363271673316 *
1186994   +        S_Income  +    -0.63270966560605 * S_Kidhome
1186995   +          +    -0.08814987977037 * S_MntFishProducts
1186996   +          +    -0.16742996280424 * S_MntFruits  +     -0.0048241161297 *
1186997   +        S_MntGoldProds  +    -0.29868881598251 * S_MntSweetProducts
1186998   +          +    -0.04826032378728 * S_MonthsAsCustomer
1186999   +          +     0.01599853180114 * S_NumDealsPurchases
1187000   +          +     0.60119173038714 * S_NumWebVisitsMonth
1187001   +          +     0.24192512657122 * S_RFMstat  +    -0.16600268948701 *
1187002   +        S_RMntFrq  +    -0.74024886149073 * S_Recency
1187003   +          +    -0.33502330424595 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 0.38562838138579 * S_AcceptedCmpTotal + 0.07260700845897 * S_Age + 
0.06970375186829 * S_Frq + 0.14363271673316 * S_Income + -0.63270966560605 * S_Kidhome + 
-0.08814987977037 * S_MntFishProducts + -0.16742996280424 * S_MntFruits + -0.0048241161297 * 
S_MntGoldProds + -0.29868881598251 * S_MntSweetProducts + -0.04826032378728 * 
S_MonthsAsCustomer + 0.01599853180114 * S_NumDealsPurchases + 0.60119173038714 * 
S_NumWebVisitsMonth + 0.24192512657122 * S_RFMstat + -0.16600268948701 * S_RMntFrq + 
-0.74024886149073 * S_Recency + -0.33502330424595 * S_Teenhome ;
1187004   +   H15  =    -0.34311356733661 * S_AcceptedCmpTotal  +     0.16235616443826 *
1187005   +        S_Age  +     0.94382517748399 * S_Frq  +      0.2748531338861 *
1187006   +        S_Income  +    -0.02219671454546 * S_Kidhome
1187007   +          +    -0.15542333204257 * S_MntFishProducts
1187008   +          +     0.05860799445207 * S_MntFruits  +      0.0164088007412 *
1187009   +        S_MntGoldProds  +    -0.12449090470408 * S_MntSweetProducts
1187010   +          +     0.03737130526687 * S_MonthsAsCustomer
1187011   +          +    -0.55633092697691 * S_NumDealsPurchases
1187012   +          +     -0.5935978122359 * S_NumWebVisitsMonth
1187013   +          +    -0.06684824395733 * S_RFMstat  +    -0.17365329607203 *
1187014   +        S_RMntFrq  +      0.6764486616945 * S_Recency
1187015   +          +     -0.1892667221599 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = -0.34311356733661 * S_AcceptedCmpTotal + 0.16235616443826 * S_Age 
+ 0.94382517748399 * S_Frq + 0.2748531338861 * S_Income + -0.02219671454546 * S_Kidhome + 
-0.15542333204257 * S_MntFishProducts + 0.05860799445207 * S_MntFruits + 0.0164088007412 * 
S_MntGoldProds + -0.12449090470408 * S_MntSweetProducts + 0.03737130526687 * 
S_MonthsAsCustomer + -0.55633092697691 * S_NumDealsPurchases + -0.5935978122359 * 
S_NumWebVisitsMonth + -0.06684824395733 * S_RFMstat + -0.17365329607203 * S_RMntFrq + 
0.6764486616945 * S_Recency + -0.1892667221599 * S_Teenhome ;
1187016   +   H11  = H11  +     0.32339671285779 * AcceptedCmp10
1187017   +          +     0.40704039360735 * AcceptedCmp20  +     0.30956684671901 *
1187018   +        AcceptedCmp30  +     0.31438728866768 * AcceptedCmp40
1187019   +          +     0.23235496545772 * AcceptedCmp50  +     0.16248155382451 *
1187020   +        Complain0  +    -0.30696195142475 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.32339671285779 * AcceptedCmp10 + 0.40704039360735 * 
AcceptedCmp20 + 0.30956684671901 * AcceptedCmp30 + 0.31438728866768 * AcceptedCmp40 + 
0.23235496545772 * AcceptedCmp50 + 0.16248155382451 * Complain0 + -0.30696195142475 * 
HigherEducationBinary0 ;
1187021   +   H12  = H12  +     0.15468195814719 * AcceptedCmp10
1187022   +          +    -0.01658463628305 * AcceptedCmp20  +    -0.18284432439766 *
1187023   +        AcceptedCmp30  +     0.10412487730599 * AcceptedCmp40
1187024   +          +      0.2784347604012 * AcceptedCmp50  +     0.21341015945758 *
1187025   +        Complain0  +     0.26769837741874 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.15468195814719 * AcceptedCmp10 + -0.01658463628305 * 
AcceptedCmp20 + -0.18284432439766 * AcceptedCmp30 + 0.10412487730599 * AcceptedCmp40 + 
0.2784347604012 * AcceptedCmp50 + 0.21341015945758 * Complain0 + 0.26769837741874 * 
HigherEducationBinary0 ;
1187026   +   H13  = H13  +    -0.11177158752481 * AcceptedCmp10
1187027   +          +    -0.13739486515218 * AcceptedCmp20  +     0.15972072685818 *
1187028   +        AcceptedCmp30  +    -0.09073450388158 * AcceptedCmp40
1187029   +          +     0.20479045598357 * AcceptedCmp50  +    -0.28874847014038 *
1187030   +        Complain0  +     0.12082289787754 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.11177158752481 * AcceptedCmp10 + -0.13739486515218 * 
AcceptedCmp20 + 0.15972072685818 * AcceptedCmp30 + -0.09073450388158 * AcceptedCmp40 + 
0.20479045598357 * AcceptedCmp50 + -0.28874847014038 * Complain0 + 0.12082289787754 * 
HigherEducationBinary0 ;
1187031   +   H14  = H14  +     0.22760562650379 * AcceptedCmp10
1187032   +          +    -0.01066432835565 * AcceptedCmp20  +    -0.32053666689899 *
1187033   +        AcceptedCmp30  +     0.01405337529301 * AcceptedCmp40
1187034   +          +     0.00690669937705 * AcceptedCmp50  +     0.18207401895977 *
1187035   +        Complain0  +     0.02728138057211 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.22760562650379 * AcceptedCmp10 + -0.01066432835565 * 
AcceptedCmp20 + -0.32053666689899 * AcceptedCmp30 + 0.01405337529301 * AcceptedCmp40 + 
0.00690669937705 * AcceptedCmp50 + 0.18207401895977 * Complain0 + 0.02728138057211 * 
HigherEducationBinary0 ;
1187036   +   H15  = H15  +     0.53146690040164 * AcceptedCmp10
1187037   +          +     0.02061647343682 * AcceptedCmp20  +     0.47331796914114 *
1187038   +        AcceptedCmp30  +    -0.05515580192077 * AcceptedCmp40
1187039   +          +     0.29161268499344 * AcceptedCmp50  +     0.05844301388229 *
1187040   +        Complain0  +      0.1779848505105 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.53146690040164 * AcceptedCmp10 + 0.02061647343682 * 
AcceptedCmp20 + 0.47331796914114 * AcceptedCmp30 + -0.05515580192077 * AcceptedCmp40 + 
0.29161268499344 * AcceptedCmp50 + 0.05844301388229 * Complain0 + 0.1779848505105 * 
HigherEducationBinary0 ;
1187041   +   H11  = H11  +     0.03097010145548 * Education2n_Cycle
1187042   +          +    -0.13406554569598 * EducationBasic  +    -0.09871242696608 *
1187043   +        EducationGraduation  +     0.23998958645262 * EducationMaster
1187044   +          +    -0.42082033749096 * Marital_StatusDivorced
1187045   +          +     0.66219400411029 * Marital_StatusMarried
1187046   +          +     -0.5319693170402 * Marital_StatusSingle
1187047   +          +     0.70748197229966 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.03097010145548 * Education2n_Cycle + -0.13406554569598 * 
EducationBasic + -0.09871242696608 * EducationGraduation + 0.23998958645262 * EducationMaster 
+ -0.42082033749096 * Marital_StatusDivorced + 0.66219400411029 * Marital_StatusMarried + 
-0.5319693170402 * Marital_StatusSingle + 0.70748197229966 * Marital_StatusTogether ;
1187048   +   H12  = H12  +    -0.18240954892125 * Education2n_Cycle
1187049   +          +      -0.040279707928 * EducationBasic  +     0.26318151864922 *
1187050   +        EducationGraduation  +     0.04495546932118 * EducationMaster
1187051   +          +      -0.322040509013 * Marital_StatusDivorced
1187052   +          +     0.15587841196747 * Marital_StatusMarried
1187053   +          +     0.28814320146342 * Marital_StatusSingle
1187054   +          +    -0.31522150769005 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.18240954892125 * Education2n_Cycle + -0.040279707928 * 
EducationBasic + 0.26318151864922 * EducationGraduation + 0.04495546932118 * EducationMaster + 
-0.322040509013 * Marital_StatusDivorced + 0.15587841196747 * Marital_StatusMarried + 
0.28814320146342 * Marital_StatusSingle + -0.31522150769005 * Marital_StatusTogether ;
1187055   +   H13  = H13  +     0.03294796280016 * Education2n_Cycle
1187056   +          +     0.16865870867242 * EducationBasic  +    -0.24783622415669 *
1187057   +        EducationGraduation  +    -0.16728377319058 * EducationMaster
1187058   +          +    -0.06468619863793 * Marital_StatusDivorced
1187059   +          +    -0.01423713588549 * Marital_StatusMarried
1187060   +          +    -0.04729389811247 * Marital_StatusSingle
1187061   +          +    -0.15198305020182 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.03294796280016 * Education2n_Cycle + 0.16865870867242 * 
EducationBasic + -0.24783622415669 * EducationGraduation + -0.16728377319058 * EducationMaster 
+ -0.06468619863793 * Marital_StatusDivorced + -0.01423713588549 * Marital_StatusMarried + 
-0.04729389811247 * Marital_StatusSingle + -0.15198305020182 * Marital_StatusTogether ;
1187062   +   H14  = H14  +      0.0429131340472 * Education2n_Cycle
1187063   +          +     0.09798160258855 * EducationBasic  +     0.23808953197663 *
1187064   +        EducationGraduation  +    -0.18027397340106 * EducationMaster
1187065   +          +     0.20711724648422 * Marital_StatusDivorced
1187066   +          +    -0.52428656670194 * Marital_StatusMarried
1187067   +          +     0.50784243935214 * Marital_StatusSingle
1187068   +          +    -0.15093459229255 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.0429131340472 * Education2n_Cycle + 0.09798160258855 * 
EducationBasic + 0.23808953197663 * EducationGraduation + -0.18027397340106 * EducationMaster 
+ 0.20711724648422 * Marital_StatusDivorced + -0.52428656670194 * Marital_StatusMarried + 
0.50784243935214 * Marital_StatusSingle + -0.15093459229255 * Marital_StatusTogether ;
1187069   +   H15  = H15  +    -0.07839732345604 * Education2n_Cycle
1187070   +          +     0.23809754868431 * EducationBasic  +     0.00672017411768 *
1187071   +        EducationGraduation  +     0.02815790747137 * EducationMaster
1187072   +          +    -0.13878251101316 * Marital_StatusDivorced
1187073   +          +     -0.1763810748285 * Marital_StatusMarried
1187074   +          +     0.09863670564728 * Marital_StatusSingle
1187075   +          +     0.03752805463412 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.07839732345604 * Education2n_Cycle + 0.23809754868431 * 
EducationBasic + 0.00672017411768 * EducationGraduation + 0.02815790747137 * EducationMaster + 
-0.13878251101316 * Marital_StatusDivorced + -0.1763810748285 * Marital_StatusMarried + 
0.09863670564728 * Marital_StatusSingle + 0.03752805463412 * Marital_StatusTogether ;
1187076   +   H11  =     0.45564602198436 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.45564602198436 + H11 ;
1187077   +   H12  =    -0.95855185996396 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.95855185996396 + H12 ;
1187078   +   H13  =    -0.44150964212393 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.44150964212393 + H13 ;
1187079   +   H14  =     0.53989079832138 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.53989079832138 + H14 ;
1187080   +   H15  =     0.82844095622763 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 0.82844095622763 + H15 ;
1187081   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1187082   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1187083   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1187084   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1187085   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1187086   +END;
MPRINT(EM_DIAGRAM):   END;
1187087   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1187088   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1187089   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1187090   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1187091   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1187092   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1187093   +END;
MPRINT(EM_DIAGRAM):   END;
1187094   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1187095   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1187096   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1187097   +
1187098   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1187099   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1187100   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1187101   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1187102   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1187103   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1187104   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1187105   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1187106   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1187107   +end;
MPRINT(EM_DIAGRAM):   end;
1187108   +else do;
MPRINT(EM_DIAGRAM):   else do;
1187109   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1187110   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1187111   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1187112   +   end;
MPRINT(EM_DIAGRAM):   end;
1187113   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1187114   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1187115   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1187116   +   end;
MPRINT(EM_DIAGRAM):   end;
1187117   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1187118   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1187119   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1187120   +   end;
MPRINT(EM_DIAGRAM):   end;
1187121   +end;
MPRINT(EM_DIAGRAM):   end;
1187122   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1187123   +   P_DepVar1  =    -3.08524657689897 * H11  +     0.90135731546766 * H12
1187124   +          +    -2.65297083917138 * H13  +     1.47809334967539 * H14
1187125   +          +    -1.92897922289298 * H15 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.08524657689897 * H11 + 0.90135731546766 * H12 + 
-2.65297083917138 * H13 + 1.47809334967539 * H14 + -1.92897922289298 * H15 ;
1187126   +   P_DepVar1  =    -1.84374798036079 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.84374798036079 + P_DepVar1 ;
1187127   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1187128   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1187129   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1187130   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1187131   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1187132   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1187133   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1187134   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1187135   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1187136   +END;
MPRINT(EM_DIAGRAM):   END;
1187137   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1187138   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1187139   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1187140   +END;
MPRINT(EM_DIAGRAM):   END;
1187141   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1187142   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1187143   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1187144   +END;
MPRINT(EM_DIAGRAM):   END;
1187145   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1187146   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1187147   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1187148   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1187149   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1187150   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1187151   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1187152   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1187153   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1187154   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1187155   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1187156   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1187157   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1187158   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1187159   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1187160   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1187161   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1187162   +END;
MPRINT(EM_DIAGRAM):   END;
1187163   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1187164   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1187165   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1187166   +drop
1187167   +H11
1187168   +H12
1187169   +H13
1187170   +H14
1187171   +H15
1187172   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 ;
1187173   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1187174    run;

NOTE: DATA STEP view saved on file EMWS8.NEURAL40_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.META3_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1187175    quit;
1187176    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
1187177    filename emflow
1187177  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural40\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural40\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural40: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1187178    *------------------------------------------------------------*;
1187179    * Neural40: Scoring VALIDATE data;
1187180    *------------------------------------------------------------*;
1187181    data EMWS8.Neural40_VALIDATE
1187182    / view=EMWS8.Neural40_VALIDATE
1187183    ;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural40_VALIDATE / view=EMWS8.Neural40_VALIDATE ;
1187184    set EMWS8.Meta3_VALIDATE
1187185    ;
MPRINT(EM_DIAGRAM):   set EMWS8.Meta3_VALIDATE ;
1187186    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural40\EMFLOWSCORE.sas.
1187187   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1187188   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1187189   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1187190   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1187191   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1187192   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1187193   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1187194   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1187195   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1187196   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1187197   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1187198   +LENGTH _WARN_ $4
1187199   +      F_DepVar  $ 12
1187200   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1187201   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1187202   +
1187203   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1187204   +
1187205   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1187206   +
1187207   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1187208   +
1187209   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1187210   +
1187211   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1187212   +
1187213   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1187214   +
1187215   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1187216   +
1187217   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1187218   +
1187219   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1187220   +
1187221   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1187222   +
1187223   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1187224   +
1187225   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1187226   +
1187227   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1187228   +
1187229   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1187230   +
1187231   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1187232   +
1187233   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1187234   +
1187235   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1187236   +
1187237   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1187238   +
1187239   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1187240   +
1187241   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1187242   +
1187243   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1187244   +
1187245   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1187246   +
1187247   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1187248   +
1187249   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1187250   +
1187251   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1187252   +
1187253   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1187254   +
1187255   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1187256   +
1187257   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1187258   +
1187259   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1187260   +
1187261   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1187262   +
1187263   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1187264   +
1187265   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1187266   +
1187267   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1187268   +
1187269   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1187270   +
1187271   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1187272   +
1187273   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1187274   +
1187275   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1187276   +
1187277   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1187278   +
1187279   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1187280   +
1187281   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1187282   +
1187283   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1187284   +
1187285   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1187286   +
1187287   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1187288   +
1187289   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1187290   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1187291   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1187292   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1187293   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1187294   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1187295   +end;
MPRINT(EM_DIAGRAM):   end;
1187296   +else do;
MPRINT(EM_DIAGRAM):   else do;
1187297   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1187298   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1187299   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1187300   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1187301   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1187302   +   end;
MPRINT(EM_DIAGRAM):   end;
1187303   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1187304   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1187305   +   end;
MPRINT(EM_DIAGRAM):   end;
1187306   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1187307   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1187308   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1187309   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1187310   +   end;
MPRINT(EM_DIAGRAM):   end;
1187311   +end;
MPRINT(EM_DIAGRAM):   end;
1187312   +
1187313   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1187314   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1187315   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1187316   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1187317   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1187318   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1187319   +end;
MPRINT(EM_DIAGRAM):   end;
1187320   +else do;
MPRINT(EM_DIAGRAM):   else do;
1187321   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1187322   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1187323   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1187324   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1187325   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1187326   +   end;
MPRINT(EM_DIAGRAM):   end;
1187327   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1187328   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1187329   +   end;
MPRINT(EM_DIAGRAM):   end;
1187330   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1187331   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1187332   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1187333   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1187334   +   end;
MPRINT(EM_DIAGRAM):   end;
1187335   +end;
MPRINT(EM_DIAGRAM):   end;
1187336   +
1187337   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1187338   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1187339   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1187340   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1187341   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1187342   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1187343   +end;
MPRINT(EM_DIAGRAM):   end;
1187344   +else do;
MPRINT(EM_DIAGRAM):   else do;
1187345   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1187346   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1187347   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1187348   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1187349   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1187350   +   end;
MPRINT(EM_DIAGRAM):   end;
1187351   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1187352   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1187353   +   end;
MPRINT(EM_DIAGRAM):   end;
1187354   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1187355   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1187356   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1187357   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1187358   +   end;
MPRINT(EM_DIAGRAM):   end;
1187359   +end;
MPRINT(EM_DIAGRAM):   end;
1187360   +
1187361   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1187362   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1187363   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1187364   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1187365   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1187366   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1187367   +end;
MPRINT(EM_DIAGRAM):   end;
1187368   +else do;
MPRINT(EM_DIAGRAM):   else do;
1187369   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1187370   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1187371   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1187372   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1187373   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1187374   +   end;
MPRINT(EM_DIAGRAM):   end;
1187375   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1187376   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1187377   +   end;
MPRINT(EM_DIAGRAM):   end;
1187378   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1187379   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1187380   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1187381   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1187382   +   end;
MPRINT(EM_DIAGRAM):   end;
1187383   +end;
MPRINT(EM_DIAGRAM):   end;
1187384   +
1187385   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1187386   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1187387   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1187388   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1187389   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1187390   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1187391   +end;
MPRINT(EM_DIAGRAM):   end;
1187392   +else do;
MPRINT(EM_DIAGRAM):   else do;
1187393   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1187394   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1187395   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1187396   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1187397   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1187398   +   end;
MPRINT(EM_DIAGRAM):   end;
1187399   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1187400   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1187401   +   end;
MPRINT(EM_DIAGRAM):   end;
1187402   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1187403   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1187404   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1187405   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1187406   +   end;
MPRINT(EM_DIAGRAM):   end;
1187407   +end;
MPRINT(EM_DIAGRAM):   end;
1187408   +
1187409   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1187410   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1187411   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1187412   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1187413   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1187414   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1187415   +end;
MPRINT(EM_DIAGRAM):   end;
1187416   +else do;
MPRINT(EM_DIAGRAM):   else do;
1187417   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1187418   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1187419   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1187420   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1187421   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1187422   +   end;
MPRINT(EM_DIAGRAM):   end;
1187423   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1187424   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1187425   +   end;
MPRINT(EM_DIAGRAM):   end;
1187426   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1187427   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1187428   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1187429   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1187430   +   end;
MPRINT(EM_DIAGRAM):   end;
1187431   +end;
MPRINT(EM_DIAGRAM):   end;
1187432   +
1187433   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1187434   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1187435   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1187436   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1187437   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1187438   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1187439   +end;
MPRINT(EM_DIAGRAM):   end;
1187440   +else do;
MPRINT(EM_DIAGRAM):   else do;
1187441   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1187442   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1187443   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1187444   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1187445   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1187446   +   end;
MPRINT(EM_DIAGRAM):   end;
1187447   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1187448   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1187449   +   end;
MPRINT(EM_DIAGRAM):   end;
1187450   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1187451   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1187452   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1187453   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1187454   +   end;
MPRINT(EM_DIAGRAM):   end;
1187455   +end;
MPRINT(EM_DIAGRAM):   end;
1187456   +
1187457   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1187458   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1187459   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1187460   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1187461   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1187462   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1187463   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1187464   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1187465   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1187466   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1187467   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1187468   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1187469   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1187470   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1187471   +end;
MPRINT(EM_DIAGRAM):   end;
1187472   +else do;
MPRINT(EM_DIAGRAM):   else do;
1187473   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1187474   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1187475   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1187476   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1187477   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1187478   +   end;
MPRINT(EM_DIAGRAM):   end;
1187479   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1187480   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1187481   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1187482   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1187483   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1187484   +   end;
MPRINT(EM_DIAGRAM):   end;
1187485   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1187486   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1187487   +   end;
MPRINT(EM_DIAGRAM):   end;
1187488   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1187489   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1187490   +   end;
MPRINT(EM_DIAGRAM):   end;
1187491   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1187492   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1187493   +   end;
MPRINT(EM_DIAGRAM):   end;
1187494   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1187495   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1187496   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1187497   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1187498   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1187499   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1187500   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1187501   +   end;
MPRINT(EM_DIAGRAM):   end;
1187502   +end;
MPRINT(EM_DIAGRAM):   end;
1187503   +
1187504   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1187505   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1187506   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1187507   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1187508   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1187509   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1187510   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1187511   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1187512   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1187513   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1187514   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1187515   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1187516   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1187517   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1187518   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1187519   +end;
MPRINT(EM_DIAGRAM):   end;
1187520   +else do;
MPRINT(EM_DIAGRAM):   else do;
1187521   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1187522   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1187523   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1187524   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1187525   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1187526   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1187527   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1187528   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1187529   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1187530   +         end;
MPRINT(EM_DIAGRAM):   end;
1187531   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1187532   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1187533   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1187534   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1187535   +            end;
MPRINT(EM_DIAGRAM):   end;
1187536   +         end;
MPRINT(EM_DIAGRAM):   end;
1187537   +      end;
MPRINT(EM_DIAGRAM):   end;
1187538   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1187539   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1187540   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1187541   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1187542   +         end;
MPRINT(EM_DIAGRAM):   end;
1187543   +      end;
MPRINT(EM_DIAGRAM):   end;
1187544   +   end;
MPRINT(EM_DIAGRAM):   end;
1187545   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1187546   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1187547   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1187548   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1187549   +      end;
MPRINT(EM_DIAGRAM):   end;
1187550   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1187551   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1187552   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1187553   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1187554   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1187555   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1187556   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1187557   +         end;
MPRINT(EM_DIAGRAM):   end;
1187558   +      end;
MPRINT(EM_DIAGRAM):   end;
1187559   +   end;
MPRINT(EM_DIAGRAM):   end;
1187560   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1187561   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1187562   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1187563   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1187564   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1187565   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1187566   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1187567   +   end;
MPRINT(EM_DIAGRAM):   end;
1187568   +end;
MPRINT(EM_DIAGRAM):   end;
1187569   +
1187570   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1187571   +*** Checking missing input Interval
1187572   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1187573   +
1187574   +IF NMISS(
1187575   +   AcceptedCmpTotal ,
1187576   +   Age ,
1187577   +   Frq ,
1187578   +   Income ,
1187579   +   Kidhome ,
1187580   +   MntFishProducts ,
1187581   +   MntFruits ,
1187582   +   MntGoldProds ,
1187583   +   MntSweetProducts ,
1187584   +   MonthsAsCustomer ,
1187585   +   NumDealsPurchases ,
1187586   +   NumWebVisitsMonth ,
1187587   +   RFMstat ,
1187588   +   RMntFrq ,
1187589   +   Recency ,
1187590   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
1187591   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1187592   +
1187593   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1187594   +END;
MPRINT(EM_DIAGRAM):   END;
1187595   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1187596   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1187597   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1187598   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1187599   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1187600   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1187601   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1187602   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1187603   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1187604   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1187605   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1187606   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1187607   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1187608   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1187609   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1187610   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1187611   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1187612   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
1187613   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
1187614   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1187615   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1187616   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1187617   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1187618   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1187619   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1187620   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1187621   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1187622   +END;
MPRINT(EM_DIAGRAM):   END;
1187623   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1187624   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1187625   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1187626   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1187627   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1187628   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1187629   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1187630   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1187631   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1187632   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1187633   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1187634   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1187635   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1187636   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1187637   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1187638   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1187639   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1187640   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1187641   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1187642   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1187643   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1187644   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1187645   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1187646   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1187647   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1187648   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
1187649   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
1187650   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1187651   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1187652   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1187653   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1187654   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1187655   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1187656   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1187657   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1187658   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1187659   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1187660   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1187661   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1187662   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1187663   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1187664   +END;
MPRINT(EM_DIAGRAM):   END;
1187665   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1187666   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1187667   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1187668   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1187669   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1187670   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1187671   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1187672   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1187673   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1187674   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1187675   +   H11  =     0.02151728870806 * S_AcceptedCmpTotal  +     0.05254894554809 *
1187676   +        S_Age  +    -0.16973386556377 * S_Frq  +    -0.82728779491682 *
1187677   +        S_Income  +     0.39903592539043 * S_Kidhome
1187678   +          +    -0.04460924056526 * S_MntFishProducts
1187679   +          +     0.02733683231833 * S_MntFruits  +     0.05011896594494 *
1187680   +        S_MntGoldProds  +     0.19517504324129 * S_MntSweetProducts
1187681   +          +    -0.13600486461772 * S_MonthsAsCustomer
1187682   +          +    -0.00505319277464 * S_NumDealsPurchases
1187683   +          +    -0.02131770482252 * S_NumWebVisitsMonth
1187684   +          +     0.00524769837231 * S_RFMstat  +    -0.21746675829719 *
1187685   +        S_RMntFrq  +     0.54271297675327 * S_Recency
1187686   +          +      0.5568869219643 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.02151728870806 * S_AcceptedCmpTotal + 0.05254894554809 * S_Age + 
-0.16973386556377 * S_Frq + -0.82728779491682 * S_Income + 0.39903592539043 * S_Kidhome + 
-0.04460924056526 * S_MntFishProducts + 0.02733683231833 * S_MntFruits + 0.05011896594494 * 
S_MntGoldProds + 0.19517504324129 * S_MntSweetProducts + -0.13600486461772 * 
S_MonthsAsCustomer + -0.00505319277464 * S_NumDealsPurchases + -0.02131770482252 * 
S_NumWebVisitsMonth + 0.00524769837231 * S_RFMstat + -0.21746675829719 * S_RMntFrq + 
0.54271297675327 * S_Recency + 0.5568869219643 * S_Teenhome ;
1187687   +   H12  =    -0.31677356986514 * S_AcceptedCmpTotal  +    -0.13636654958991 *
1187688   +        S_Age  +    -0.12127604451874 * S_Frq  +    -0.03912727186842 *
1187689   +        S_Income  +     0.31541271020596 * S_Kidhome
1187690   +          +    -0.06070575535455 * S_MntFishProducts
1187691   +          +     0.04717351357982 * S_MntFruits  +     0.20035627551608 *
1187692   +        S_MntGoldProds  +     0.34661630810838 * S_MntSweetProducts
1187693   +          +    -0.49660266591157 * S_MonthsAsCustomer
1187694   +          +     0.31834511850835 * S_NumDealsPurchases
1187695   +          +     0.24781307795044 * S_NumWebVisitsMonth
1187696   +          +      0.2962065441422 * S_RFMstat  +    -0.00931536368325 *
1187697   +        S_RMntFrq  +     -0.4887066152184 * S_Recency
1187698   +          +    -0.31733549884932 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.31677356986514 * S_AcceptedCmpTotal + -0.13636654958991 * S_Age 
+ -0.12127604451874 * S_Frq + -0.03912727186842 * S_Income + 0.31541271020596 * S_Kidhome + 
-0.06070575535455 * S_MntFishProducts + 0.04717351357982 * S_MntFruits + 0.20035627551608 * 
S_MntGoldProds + 0.34661630810838 * S_MntSweetProducts + -0.49660266591157 * 
S_MonthsAsCustomer + 0.31834511850835 * S_NumDealsPurchases + 0.24781307795044 * 
S_NumWebVisitsMonth + 0.2962065441422 * S_RFMstat + -0.00931536368325 * S_RMntFrq + 
-0.4887066152184 * S_Recency + -0.31733549884932 * S_Teenhome ;
1187699   +   H13  =    -0.67923945541429 * S_AcceptedCmpTotal  +     -0.1600759141845 *
1187700   +        S_Age  +    -0.32206936571155 * S_Frq  +    -0.42231968918367 *
1187701   +        S_Income  +    -0.48980326576867 * S_Kidhome
1187702   +          +     0.16754214531813 * S_MntFishProducts
1187703   +          +     0.07042633274724 * S_MntFruits  +    -0.54860029741519 *
1187704   +        S_MntGoldProds  +    -0.02870819733746 * S_MntSweetProducts
1187705   +          +    -0.09017520473136 * S_MonthsAsCustomer
1187706   +          +    -0.45842921605242 * S_NumDealsPurchases
1187707   +          +    -0.51952177798857 * S_NumWebVisitsMonth
1187708   +          +    -0.31466002172051 * S_RFMstat  +    -0.48848348436254 *
1187709   +        S_RMntFrq  +     0.79178959337864 * S_Recency
1187710   +          +    -0.01573946454754 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.67923945541429 * S_AcceptedCmpTotal + -0.1600759141845 * S_Age 
+ -0.32206936571155 * S_Frq + -0.42231968918367 * S_Income + -0.48980326576867 * S_Kidhome + 
0.16754214531813 * S_MntFishProducts + 0.07042633274724 * S_MntFruits + -0.54860029741519 * 
S_MntGoldProds + -0.02870819733746 * S_MntSweetProducts + -0.09017520473136 * 
S_MonthsAsCustomer + -0.45842921605242 * S_NumDealsPurchases + -0.51952177798857 * 
S_NumWebVisitsMonth + -0.31466002172051 * S_RFMstat + -0.48848348436254 * S_RMntFrq + 
0.79178959337864 * S_Recency + -0.01573946454754 * S_Teenhome ;
1187711   +   H14  =     0.38562838138579 * S_AcceptedCmpTotal  +     0.07260700845897 *
1187712   +        S_Age  +     0.06970375186829 * S_Frq  +     0.14363271673316 *
1187713   +        S_Income  +    -0.63270966560605 * S_Kidhome
1187714   +          +    -0.08814987977037 * S_MntFishProducts
1187715   +          +    -0.16742996280424 * S_MntFruits  +     -0.0048241161297 *
1187716   +        S_MntGoldProds  +    -0.29868881598251 * S_MntSweetProducts
1187717   +          +    -0.04826032378728 * S_MonthsAsCustomer
1187718   +          +     0.01599853180114 * S_NumDealsPurchases
1187719   +          +     0.60119173038714 * S_NumWebVisitsMonth
1187720   +          +     0.24192512657122 * S_RFMstat  +    -0.16600268948701 *
1187721   +        S_RMntFrq  +    -0.74024886149073 * S_Recency
1187722   +          +    -0.33502330424595 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 0.38562838138579 * S_AcceptedCmpTotal + 0.07260700845897 * S_Age + 
0.06970375186829 * S_Frq + 0.14363271673316 * S_Income + -0.63270966560605 * S_Kidhome + 
-0.08814987977037 * S_MntFishProducts + -0.16742996280424 * S_MntFruits + -0.0048241161297 * 
S_MntGoldProds + -0.29868881598251 * S_MntSweetProducts + -0.04826032378728 * 
S_MonthsAsCustomer + 0.01599853180114 * S_NumDealsPurchases + 0.60119173038714 * 
S_NumWebVisitsMonth + 0.24192512657122 * S_RFMstat + -0.16600268948701 * S_RMntFrq + 
-0.74024886149073 * S_Recency + -0.33502330424595 * S_Teenhome ;
1187723   +   H15  =    -0.34311356733661 * S_AcceptedCmpTotal  +     0.16235616443826 *
1187724   +        S_Age  +     0.94382517748399 * S_Frq  +      0.2748531338861 *
1187725   +        S_Income  +    -0.02219671454546 * S_Kidhome
1187726   +          +    -0.15542333204257 * S_MntFishProducts
1187727   +          +     0.05860799445207 * S_MntFruits  +      0.0164088007412 *
1187728   +        S_MntGoldProds  +    -0.12449090470408 * S_MntSweetProducts
1187729   +          +     0.03737130526687 * S_MonthsAsCustomer
1187730   +          +    -0.55633092697691 * S_NumDealsPurchases
1187731   +          +     -0.5935978122359 * S_NumWebVisitsMonth
1187732   +          +    -0.06684824395733 * S_RFMstat  +    -0.17365329607203 *
1187733   +        S_RMntFrq  +      0.6764486616945 * S_Recency
1187734   +          +     -0.1892667221599 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = -0.34311356733661 * S_AcceptedCmpTotal + 0.16235616443826 * S_Age 
+ 0.94382517748399 * S_Frq + 0.2748531338861 * S_Income + -0.02219671454546 * S_Kidhome + 
-0.15542333204257 * S_MntFishProducts + 0.05860799445207 * S_MntFruits + 0.0164088007412 * 
S_MntGoldProds + -0.12449090470408 * S_MntSweetProducts + 0.03737130526687 * 
S_MonthsAsCustomer + -0.55633092697691 * S_NumDealsPurchases + -0.5935978122359 * 
S_NumWebVisitsMonth + -0.06684824395733 * S_RFMstat + -0.17365329607203 * S_RMntFrq + 
0.6764486616945 * S_Recency + -0.1892667221599 * S_Teenhome ;
1187735   +   H11  = H11  +     0.32339671285779 * AcceptedCmp10
1187736   +          +     0.40704039360735 * AcceptedCmp20  +     0.30956684671901 *
1187737   +        AcceptedCmp30  +     0.31438728866768 * AcceptedCmp40
1187738   +          +     0.23235496545772 * AcceptedCmp50  +     0.16248155382451 *
1187739   +        Complain0  +    -0.30696195142475 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.32339671285779 * AcceptedCmp10 + 0.40704039360735 * 
AcceptedCmp20 + 0.30956684671901 * AcceptedCmp30 + 0.31438728866768 * AcceptedCmp40 + 
0.23235496545772 * AcceptedCmp50 + 0.16248155382451 * Complain0 + -0.30696195142475 * 
HigherEducationBinary0 ;
1187740   +   H12  = H12  +     0.15468195814719 * AcceptedCmp10
1187741   +          +    -0.01658463628305 * AcceptedCmp20  +    -0.18284432439766 *
1187742   +        AcceptedCmp30  +     0.10412487730599 * AcceptedCmp40
1187743   +          +      0.2784347604012 * AcceptedCmp50  +     0.21341015945758 *
1187744   +        Complain0  +     0.26769837741874 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.15468195814719 * AcceptedCmp10 + -0.01658463628305 * 
AcceptedCmp20 + -0.18284432439766 * AcceptedCmp30 + 0.10412487730599 * AcceptedCmp40 + 
0.2784347604012 * AcceptedCmp50 + 0.21341015945758 * Complain0 + 0.26769837741874 * 
HigherEducationBinary0 ;
1187745   +   H13  = H13  +    -0.11177158752481 * AcceptedCmp10
1187746   +          +    -0.13739486515218 * AcceptedCmp20  +     0.15972072685818 *
1187747   +        AcceptedCmp30  +    -0.09073450388158 * AcceptedCmp40
1187748   +          +     0.20479045598357 * AcceptedCmp50  +    -0.28874847014038 *
1187749   +        Complain0  +     0.12082289787754 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.11177158752481 * AcceptedCmp10 + -0.13739486515218 * 
AcceptedCmp20 + 0.15972072685818 * AcceptedCmp30 + -0.09073450388158 * AcceptedCmp40 + 
0.20479045598357 * AcceptedCmp50 + -0.28874847014038 * Complain0 + 0.12082289787754 * 
HigherEducationBinary0 ;
1187750   +   H14  = H14  +     0.22760562650379 * AcceptedCmp10
1187751   +          +    -0.01066432835565 * AcceptedCmp20  +    -0.32053666689899 *
1187752   +        AcceptedCmp30  +     0.01405337529301 * AcceptedCmp40
1187753   +          +     0.00690669937705 * AcceptedCmp50  +     0.18207401895977 *
1187754   +        Complain0  +     0.02728138057211 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.22760562650379 * AcceptedCmp10 + -0.01066432835565 * 
AcceptedCmp20 + -0.32053666689899 * AcceptedCmp30 + 0.01405337529301 * AcceptedCmp40 + 
0.00690669937705 * AcceptedCmp50 + 0.18207401895977 * Complain0 + 0.02728138057211 * 
HigherEducationBinary0 ;
1187755   +   H15  = H15  +     0.53146690040164 * AcceptedCmp10
1187756   +          +     0.02061647343682 * AcceptedCmp20  +     0.47331796914114 *
1187757   +        AcceptedCmp30  +    -0.05515580192077 * AcceptedCmp40
1187758   +          +     0.29161268499344 * AcceptedCmp50  +     0.05844301388229 *
1187759   +        Complain0  +      0.1779848505105 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.53146690040164 * AcceptedCmp10 + 0.02061647343682 * 
AcceptedCmp20 + 0.47331796914114 * AcceptedCmp30 + -0.05515580192077 * AcceptedCmp40 + 
0.29161268499344 * AcceptedCmp50 + 0.05844301388229 * Complain0 + 0.1779848505105 * 
HigherEducationBinary0 ;
1187760   +   H11  = H11  +     0.03097010145548 * Education2n_Cycle
1187761   +          +    -0.13406554569598 * EducationBasic  +    -0.09871242696608 *
1187762   +        EducationGraduation  +     0.23998958645262 * EducationMaster
1187763   +          +    -0.42082033749096 * Marital_StatusDivorced
1187764   +          +     0.66219400411029 * Marital_StatusMarried
1187765   +          +     -0.5319693170402 * Marital_StatusSingle
1187766   +          +     0.70748197229966 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.03097010145548 * Education2n_Cycle + -0.13406554569598 * 
EducationBasic + -0.09871242696608 * EducationGraduation + 0.23998958645262 * EducationMaster 
+ -0.42082033749096 * Marital_StatusDivorced + 0.66219400411029 * Marital_StatusMarried + 
-0.5319693170402 * Marital_StatusSingle + 0.70748197229966 * Marital_StatusTogether ;
1187767   +   H12  = H12  +    -0.18240954892125 * Education2n_Cycle
1187768   +          +      -0.040279707928 * EducationBasic  +     0.26318151864922 *
1187769   +        EducationGraduation  +     0.04495546932118 * EducationMaster
1187770   +          +      -0.322040509013 * Marital_StatusDivorced
1187771   +          +     0.15587841196747 * Marital_StatusMarried
1187772   +          +     0.28814320146342 * Marital_StatusSingle
1187773   +          +    -0.31522150769005 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.18240954892125 * Education2n_Cycle + -0.040279707928 * 
EducationBasic + 0.26318151864922 * EducationGraduation + 0.04495546932118 * EducationMaster + 
-0.322040509013 * Marital_StatusDivorced + 0.15587841196747 * Marital_StatusMarried + 
0.28814320146342 * Marital_StatusSingle + -0.31522150769005 * Marital_StatusTogether ;
1187774   +   H13  = H13  +     0.03294796280016 * Education2n_Cycle
1187775   +          +     0.16865870867242 * EducationBasic  +    -0.24783622415669 *
1187776   +        EducationGraduation  +    -0.16728377319058 * EducationMaster
1187777   +          +    -0.06468619863793 * Marital_StatusDivorced
1187778   +          +    -0.01423713588549 * Marital_StatusMarried
1187779   +          +    -0.04729389811247 * Marital_StatusSingle
1187780   +          +    -0.15198305020182 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.03294796280016 * Education2n_Cycle + 0.16865870867242 * 
EducationBasic + -0.24783622415669 * EducationGraduation + -0.16728377319058 * EducationMaster 
+ -0.06468619863793 * Marital_StatusDivorced + -0.01423713588549 * Marital_StatusMarried + 
-0.04729389811247 * Marital_StatusSingle + -0.15198305020182 * Marital_StatusTogether ;
1187781   +   H14  = H14  +      0.0429131340472 * Education2n_Cycle
1187782   +          +     0.09798160258855 * EducationBasic  +     0.23808953197663 *
1187783   +        EducationGraduation  +    -0.18027397340106 * EducationMaster
1187784   +          +     0.20711724648422 * Marital_StatusDivorced
1187785   +          +    -0.52428656670194 * Marital_StatusMarried
1187786   +          +     0.50784243935214 * Marital_StatusSingle
1187787   +          +    -0.15093459229255 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.0429131340472 * Education2n_Cycle + 0.09798160258855 * 
EducationBasic + 0.23808953197663 * EducationGraduation + -0.18027397340106 * EducationMaster 
+ 0.20711724648422 * Marital_StatusDivorced + -0.52428656670194 * Marital_StatusMarried + 
0.50784243935214 * Marital_StatusSingle + -0.15093459229255 * Marital_StatusTogether ;
1187788   +   H15  = H15  +    -0.07839732345604 * Education2n_Cycle
1187789   +          +     0.23809754868431 * EducationBasic  +     0.00672017411768 *
1187790   +        EducationGraduation  +     0.02815790747137 * EducationMaster
1187791   +          +    -0.13878251101316 * Marital_StatusDivorced
1187792   +          +     -0.1763810748285 * Marital_StatusMarried
1187793   +          +     0.09863670564728 * Marital_StatusSingle
1187794   +          +     0.03752805463412 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.07839732345604 * Education2n_Cycle + 0.23809754868431 * 
EducationBasic + 0.00672017411768 * EducationGraduation + 0.02815790747137 * EducationMaster + 
-0.13878251101316 * Marital_StatusDivorced + -0.1763810748285 * Marital_StatusMarried + 
0.09863670564728 * Marital_StatusSingle + 0.03752805463412 * Marital_StatusTogether ;
1187795   +   H11  =     0.45564602198436 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.45564602198436 + H11 ;
1187796   +   H12  =    -0.95855185996396 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.95855185996396 + H12 ;
1187797   +   H13  =    -0.44150964212393 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.44150964212393 + H13 ;
1187798   +   H14  =     0.53989079832138 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.53989079832138 + H14 ;
1187799   +   H15  =     0.82844095622763 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 0.82844095622763 + H15 ;
1187800   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1187801   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1187802   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1187803   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1187804   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1187805   +END;
MPRINT(EM_DIAGRAM):   END;
1187806   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1187807   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1187808   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1187809   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1187810   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1187811   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1187812   +END;
MPRINT(EM_DIAGRAM):   END;
1187813   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1187814   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1187815   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1187816   +
1187817   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1187818   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1187819   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1187820   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1187821   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1187822   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1187823   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1187824   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1187825   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1187826   +end;
MPRINT(EM_DIAGRAM):   end;
1187827   +else do;
MPRINT(EM_DIAGRAM):   else do;
1187828   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1187829   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1187830   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1187831   +   end;
MPRINT(EM_DIAGRAM):   end;
1187832   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1187833   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1187834   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1187835   +   end;
MPRINT(EM_DIAGRAM):   end;
1187836   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1187837   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1187838   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1187839   +   end;
MPRINT(EM_DIAGRAM):   end;
1187840   +end;
MPRINT(EM_DIAGRAM):   end;
1187841   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1187842   +   P_DepVar1  =    -3.08524657689897 * H11  +     0.90135731546766 * H12
1187843   +          +    -2.65297083917138 * H13  +     1.47809334967539 * H14
1187844   +          +    -1.92897922289298 * H15 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.08524657689897 * H11 + 0.90135731546766 * H12 + 
-2.65297083917138 * H13 + 1.47809334967539 * H14 + -1.92897922289298 * H15 ;
1187845   +   P_DepVar1  =    -1.84374798036079 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.84374798036079 + P_DepVar1 ;
1187846   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1187847   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1187848   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1187849   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1187850   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1187851   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1187852   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1187853   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1187854   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1187855   +END;
MPRINT(EM_DIAGRAM):   END;
1187856   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1187857   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1187858   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1187859   +END;
MPRINT(EM_DIAGRAM):   END;
1187860   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1187861   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1187862   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1187863   +END;
MPRINT(EM_DIAGRAM):   END;
1187864   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1187865   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1187866   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1187867   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1187868   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1187869   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1187870   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1187871   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1187872   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1187873   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1187874   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1187875   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1187876   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1187877   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1187878   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1187879   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1187880   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1187881   +END;
MPRINT(EM_DIAGRAM):   END;
1187882   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1187883   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1187884   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1187885   +drop
1187886   +H11
1187887   +H12
1187888   +H13
1187889   +H14
1187890   +H15
1187891   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 ;
1187892   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1187893    run;

NOTE: DATA STEP view saved on file EMWS8.NEURAL40_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.META3_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1187894    quit;
1187895    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
1187896    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
1187897    * Neural40: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Neural40: Computing metadata for TRAIN data;
1187898    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS8.NEURAL40_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural40\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.Neural40_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.Neural40_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.Neural40_TRAIN out=WORK.M1VMOVTJ noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1VMOVTJ;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M1VMOVTJ(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = 
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1VMOVTJ;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M1VMOVTJ;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M28OKL6X NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M28OKL6X;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M28OKL6X;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1FUMQFF(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M28OKL6X;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M28OKL6X;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M28OKL6X;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M28OKL6X;
MPRINT(EMADVISECOLUMNS):   set WORK.M28OKL6X;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Meta3_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Meta3_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural40_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Neural40";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "Neural40";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "Neural40";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "Neural40";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "Neural40";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "Neural40";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "Neural40";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "Neural40";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Neural40";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "Neural40";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural40: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
1188210    data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
1188211    set EMWS8.Neural40_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural40_EMINFO;
1188212    where DATA='Neural40' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Neural40' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 
'MODEL');
1188213    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.NEURAL40_EMINFO.
      WHERE (DATA='Neural40') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1188214    data EMWS8.Neural40_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.Neural40_EMINFO;
1188215    length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
1188216    input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
1188217    cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS8.NEURAL40_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   run;
1188221    run;
1188222    data EMWS8.Neural40_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural40_EMINFO;
1188223    set EMWS8.Neural40_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural40_EMINFO WORK.MODELTEMP_INFO;
1188224    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.NEURAL40_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.NEURAL40_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1188225    proc sort data = EMWS8.Neural40_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Neural40_EMINFO NOTHREADS;
1188226    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1188227    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.NEURAL40_EMINFO.
NOTE: The data set EMWS8.NEURAL40_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1188228    proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
1188229    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1188230    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS8.FIMPORT_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1188231    proc sort data = EMWS8.Neural40_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Neural40_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
1188232    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1188233    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.NEURAL40_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1188234    data EMWS8.Neural40_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural40_EMINFO;
1188235    merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
1188236    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1188237    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.NEURAL40_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1188238    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
1188239    delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
1188240    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
1188241    quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
      

NOTE: View EMWS8.NEURAL40_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: View EMWS8.NEURAL40_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
