MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "19. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "12.26 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                19. April 2016
Time:                12.26 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O00P5QH7 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural40\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O00P5QH7 new;
MPRINT(EM_DIAGRAM):   run;
153267     data work.outkey;
MPRINT(EM_DIAGRAM):    data work.outkey;
153268     set EMWS8.Neural40_OUTKEY;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural40_OUTKEY;
153269     if upcase(ROLE) = 'HIDDEN';
MPRINT(EM_DIAGRAM):   if upcase(ROLE) = 'HIDDEN';
153270     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 48 observations read from the data set EMWS8.NEURAL40_OUTKEY.
NOTE: The data set WORK.OUTKEY has 5 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

153271     filename emflow
153271   ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural40\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural40\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural40: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
153272     *------------------------------------------------------------*;
153273     * Neural40: Scoring DATA data;
153274     *------------------------------------------------------------*;
153275     data EMWS8.Neural40_TRAIN
153276     / view=EMWS8.Neural40_TRAIN
153277     ;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural40_TRAIN / view=EMWS8.Neural40_TRAIN ;
153278     set EMWS8.Meta3_TRAIN
153279     ;
MPRINT(EM_DIAGRAM):   set EMWS8.Meta3_TRAIN ;
153280     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural40\EMFLOWSCORE.sas.
153281    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
153282    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
153283    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
153284    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
153285    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
153286    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
153287    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
153288    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
153289    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
153290    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
153291    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
153292    +LENGTH _WARN_ $4
153293    +      F_DepVar  $ 12
153294    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
153295    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
153296    +
153297    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
153298    +
153299    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
153300    +
153301    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
153302    +
153303    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
153304    +
153305    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
153306    +
153307    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
153308    +
153309    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
153310    +
153311    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
153312    +
153313    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
153314    +
153315    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
153316    +
153317    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
153318    +
153319    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
153320    +
153321    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
153322    +
153323    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
153324    +
153325    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
153326    +
153327    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
153328    +
153329    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
153330    +
153331    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
153332    +
153333    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
153334    +
153335    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
153336    +
153337    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
153338    +
153339    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
153340    +
153341    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
153342    +
153343    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
153344    +
153345    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
153346    +
153347    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
153348    +
153349    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
153350    +
153351    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
153352    +
153353    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
153354    +
153355    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
153356    +
153357    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
153358    +
153359    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
153360    +
153361    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
153362    +
153363    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
153364    +
153365    +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
153366    +
153367    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
153368    +
153369    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
153370    +
153371    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
153372    +
153373    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
153374    +
153375    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
153376    +
153377    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
153378    +
153379    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
153380    +
153381    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
153382    +
153383    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
153384    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
153385    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
153386    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
153387    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
153388    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
153389    +end;
MPRINT(EM_DIAGRAM):   end;
153390    +else do;
MPRINT(EM_DIAGRAM):   else do;
153391    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
153392    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
153393    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
153394    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
153395    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
153396    +   end;
MPRINT(EM_DIAGRAM):   end;
153397    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
153398    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
153399    +   end;
MPRINT(EM_DIAGRAM):   end;
153400    +   else do;
MPRINT(EM_DIAGRAM):   else do;
153401    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
153402    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
153403    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
153404    +   end;
MPRINT(EM_DIAGRAM):   end;
153405    +end;
MPRINT(EM_DIAGRAM):   end;
153406    +
153407    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
153408    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
153409    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
153410    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
153411    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
153412    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
153413    +end;
MPRINT(EM_DIAGRAM):   end;
153414    +else do;
MPRINT(EM_DIAGRAM):   else do;
153415    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
153416    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
153417    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
153418    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
153419    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
153420    +   end;
MPRINT(EM_DIAGRAM):   end;
153421    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
153422    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
153423    +   end;
MPRINT(EM_DIAGRAM):   end;
153424    +   else do;
MPRINT(EM_DIAGRAM):   else do;
153425    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
153426    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
153427    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
153428    +   end;
MPRINT(EM_DIAGRAM):   end;
153429    +end;
MPRINT(EM_DIAGRAM):   end;
153430    +
153431    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
153432    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
153433    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
153434    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
153435    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
153436    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
153437    +end;
MPRINT(EM_DIAGRAM):   end;
153438    +else do;
MPRINT(EM_DIAGRAM):   else do;
153439    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
153440    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
153441    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
153442    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
153443    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
153444    +   end;
MPRINT(EM_DIAGRAM):   end;
153445    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
153446    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
153447    +   end;
MPRINT(EM_DIAGRAM):   end;
153448    +   else do;
MPRINT(EM_DIAGRAM):   else do;
153449    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
153450    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
153451    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
153452    +   end;
MPRINT(EM_DIAGRAM):   end;
153453    +end;
MPRINT(EM_DIAGRAM):   end;
153454    +
153455    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
153456    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
153457    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
153458    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
153459    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
153460    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
153461    +end;
MPRINT(EM_DIAGRAM):   end;
153462    +else do;
MPRINT(EM_DIAGRAM):   else do;
153463    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
153464    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
153465    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
153466    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
153467    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
153468    +   end;
MPRINT(EM_DIAGRAM):   end;
153469    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
153470    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
153471    +   end;
MPRINT(EM_DIAGRAM):   end;
153472    +   else do;
MPRINT(EM_DIAGRAM):   else do;
153473    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
153474    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
153475    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
153476    +   end;
MPRINT(EM_DIAGRAM):   end;
153477    +end;
MPRINT(EM_DIAGRAM):   end;
153478    +
153479    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
153480    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
153481    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
153482    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
153483    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
153484    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
153485    +end;
MPRINT(EM_DIAGRAM):   end;
153486    +else do;
MPRINT(EM_DIAGRAM):   else do;
153487    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
153488    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
153489    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
153490    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
153491    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
153492    +   end;
MPRINT(EM_DIAGRAM):   end;
153493    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
153494    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
153495    +   end;
MPRINT(EM_DIAGRAM):   end;
153496    +   else do;
MPRINT(EM_DIAGRAM):   else do;
153497    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
153498    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
153499    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
153500    +   end;
MPRINT(EM_DIAGRAM):   end;
153501    +end;
MPRINT(EM_DIAGRAM):   end;
153502    +
153503    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
153504    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
153505    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
153506    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
153507    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
153508    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
153509    +end;
MPRINT(EM_DIAGRAM):   end;
153510    +else do;
MPRINT(EM_DIAGRAM):   else do;
153511    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
153512    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
153513    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
153514    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
153515    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
153516    +   end;
MPRINT(EM_DIAGRAM):   end;
153517    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
153518    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
153519    +   end;
MPRINT(EM_DIAGRAM):   end;
153520    +   else do;
MPRINT(EM_DIAGRAM):   else do;
153521    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
153522    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
153523    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
153524    +   end;
MPRINT(EM_DIAGRAM):   end;
153525    +end;
MPRINT(EM_DIAGRAM):   end;
153526    +
153527    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
153528    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
153529    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
153530    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
153531    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
153532    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
153533    +end;
MPRINT(EM_DIAGRAM):   end;
153534    +else do;
MPRINT(EM_DIAGRAM):   else do;
153535    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
153536    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
153537    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
153538    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
153539    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
153540    +   end;
MPRINT(EM_DIAGRAM):   end;
153541    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
153542    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
153543    +   end;
MPRINT(EM_DIAGRAM):   end;
153544    +   else do;
MPRINT(EM_DIAGRAM):   else do;
153545    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
153546    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
153547    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
153548    +   end;
MPRINT(EM_DIAGRAM):   end;
153549    +end;
MPRINT(EM_DIAGRAM):   end;
153550    +
153551    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
153552    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
153553    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
153554    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
153555    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
153556    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
153557    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
153558    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
153559    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
153560    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
153561    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
153562    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
153563    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
153564    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
153565    +end;
MPRINT(EM_DIAGRAM):   end;
153566    +else do;
MPRINT(EM_DIAGRAM):   else do;
153567    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
153568    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
153569    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
153570    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
153571    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
153572    +   end;
MPRINT(EM_DIAGRAM):   end;
153573    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
153574    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
153575    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
153576    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
153577    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
153578    +   end;
MPRINT(EM_DIAGRAM):   end;
153579    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
153580    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
153581    +   end;
MPRINT(EM_DIAGRAM):   end;
153582    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
153583    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
153584    +   end;
MPRINT(EM_DIAGRAM):   end;
153585    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
153586    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
153587    +   end;
MPRINT(EM_DIAGRAM):   end;
153588    +   else do;
MPRINT(EM_DIAGRAM):   else do;
153589    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
153590    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
153591    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
153592    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
153593    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
153594    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
153595    +   end;
MPRINT(EM_DIAGRAM):   end;
153596    +end;
MPRINT(EM_DIAGRAM):   end;
153597    +
153598    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
153599    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
153600    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
153601    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
153602    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
153603    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
153604    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
153605    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
153606    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
153607    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
153608    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
153609    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
153610    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
153611    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
153612    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
153613    +end;
MPRINT(EM_DIAGRAM):   end;
153614    +else do;
MPRINT(EM_DIAGRAM):   else do;
153615    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
153616    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
153617    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
153618    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
153619    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
153620    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
153621    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
153622    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
153623    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
153624    +         end;
MPRINT(EM_DIAGRAM):   end;
153625    +         else do;
MPRINT(EM_DIAGRAM):   else do;
153626    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
153627    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
153628    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
153629    +            end;
MPRINT(EM_DIAGRAM):   end;
153630    +         end;
MPRINT(EM_DIAGRAM):   end;
153631    +      end;
MPRINT(EM_DIAGRAM):   end;
153632    +      else do;
MPRINT(EM_DIAGRAM):   else do;
153633    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
153634    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
153635    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
153636    +         end;
MPRINT(EM_DIAGRAM):   end;
153637    +      end;
MPRINT(EM_DIAGRAM):   end;
153638    +   end;
MPRINT(EM_DIAGRAM):   end;
153639    +   else do;
MPRINT(EM_DIAGRAM):   else do;
153640    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
153641    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
153642    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
153643    +      end;
MPRINT(EM_DIAGRAM):   end;
153644    +      else do;
MPRINT(EM_DIAGRAM):   else do;
153645    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
153646    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
153647    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
153648    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
153649    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
153650    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
153651    +         end;
MPRINT(EM_DIAGRAM):   end;
153652    +      end;
MPRINT(EM_DIAGRAM):   end;
153653    +   end;
MPRINT(EM_DIAGRAM):   end;
153654    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
153655    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
153656    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
153657    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
153658    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
153659    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
153660    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
153661    +   end;
MPRINT(EM_DIAGRAM):   end;
153662    +end;
MPRINT(EM_DIAGRAM):   end;
153663    +
153664    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
153665    +*** Checking missing input Interval
153666    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
153667    +
153668    +IF NMISS(
153669    +   AcceptedCmpTotal ,
153670    +   Age ,
153671    +   Frq ,
153672    +   Income ,
153673    +   Kidhome ,
153674    +   MntFishProducts ,
153675    +   MntFruits ,
153676    +   MntGoldProds ,
153677    +   MntSweetProducts ,
153678    +   MonthsAsCustomer ,
153679    +   NumDealsPurchases ,
153680    +   NumWebVisitsMonth ,
153681    +   RFMstat ,
153682    +   RMntFrq ,
153683    +   Recency ,
153684    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
153685    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
153686    +
153687    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
153688    +END;
MPRINT(EM_DIAGRAM):   END;
153689    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
153690    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
153691    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
153692    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
153693    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
153694    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
153695    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
153696    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
153697    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
153698    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
153699    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
153700    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
153701    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
153702    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
153703    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
153704    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
153705    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
153706    +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
153707    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
153708    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
153709    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
153710    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
153711    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
153712    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
153713    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
153714    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
153715    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
153716    +END;
MPRINT(EM_DIAGRAM):   END;
153717    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
153718    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
153719    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
153720    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
153721    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
153722    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
153723    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
153724    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
153725    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
153726    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
153727    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
153728    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
153729    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
153730    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
153731    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
153732    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
153733    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
153734    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
153735    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
153736    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
153737    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
153738    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
153739    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
153740    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
153741    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
153742    +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
153743    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
153744    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
153745    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
153746    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
153747    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
153748    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
153749    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
153750    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
153751    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
153752    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
153753    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
153754    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
153755    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
153756    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
153757    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
153758    +END;
MPRINT(EM_DIAGRAM):   END;
153759    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
153760    +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
153761    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
153762    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
153763    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
153764    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
153765    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
153766    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
153767    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
153768    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
153769    +   H11  =      0.0175934799517 * S_AcceptedCmpTotal  +     0.05885450913465 *
153770    +        S_Age  +    -0.17194721523787 * S_Frq  +    -0.82356228294539 *
153771    +        S_Income  +     0.39869341630865 * S_Kidhome
153772    +          +    -0.04263586382867 * S_MntFishProducts
153773    +          +     0.02697365132515 * S_MntFruits  +     0.04818007940845 *
153774    +        S_MntGoldProds  +      0.1933390486387 * S_MntSweetProducts
153775    +          +    -0.14308588367026 * S_MonthsAsCustomer
153776    +          +    -0.01053346972758 * S_NumDealsPurchases
153777    +          +    -0.02308351901024 * S_NumWebVisitsMonth
153778    +          +     0.00403225397753 * S_RFMstat  +    -0.21691316840182 *
153779    +        S_RMntFrq  +     0.53938373050534 * S_Recency
153780    +          +     0.55541282723709 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.0175934799517 * S_AcceptedCmpTotal + 0.05885450913465 * S_Age + 
-0.17194721523787 * S_Frq + -0.82356228294539 * S_Income + 0.39869341630865 * S_Kidhome + 
-0.04263586382867 * S_MntFishProducts + 0.02697365132515 * S_MntFruits + 0.04818007940845 * 
S_MntGoldProds + 0.1933390486387 * S_MntSweetProducts + -0.14308588367026 * S_MonthsAsCustomer 
+ -0.01053346972758 * S_NumDealsPurchases + -0.02308351901024 * S_NumWebVisitsMonth + 
0.00403225397753 * S_RFMstat + -0.21691316840182 * S_RMntFrq + 0.53938373050534 * S_Recency + 
0.55541282723709 * S_Teenhome ;
153781    +   H12  =    -0.31735811206172 * S_AcceptedCmpTotal  +    -0.13976815294846 *
153782    +        S_Age  +    -0.11928757030551 * S_Frq  +    -0.03597478449162 *
153783    +        S_Income  +     0.31514301668626 * S_Kidhome
153784    +          +    -0.05723808748191 * S_MntFishProducts
153785    +          +     0.04545715816601 * S_MntFruits  +     0.19006209866265 *
153786    +        S_MntGoldProds  +     0.34690576354698 * S_MntSweetProducts
153787    +          +    -0.48738730918684 * S_MonthsAsCustomer
153788    +          +     0.31545795225489 * S_NumDealsPurchases
153789    +          +     0.24686603252864 * S_NumWebVisitsMonth
153790    +          +     0.29857007170218 * S_RFMstat  +    -0.01009427724752 *
153791    +        S_RMntFrq  +    -0.48894693883774 * S_Recency
153792    +          +    -0.32384426712368 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.31735811206172 * S_AcceptedCmpTotal + -0.13976815294846 * S_Age 
+ -0.11928757030551 * S_Frq + -0.03597478449162 * S_Income + 0.31514301668626 * S_Kidhome + 
-0.05723808748191 * S_MntFishProducts + 0.04545715816601 * S_MntFruits + 0.19006209866265 * 
S_MntGoldProds + 0.34690576354698 * S_MntSweetProducts + -0.48738730918684 * 
S_MonthsAsCustomer + 0.31545795225489 * S_NumDealsPurchases + 0.24686603252864 * 
S_NumWebVisitsMonth + 0.29857007170218 * S_RFMstat + -0.01009427724752 * S_RMntFrq + 
-0.48894693883774 * S_Recency + -0.32384426712368 * S_Teenhome ;
153793    +   H13  =    -0.67705794412683 * S_AcceptedCmpTotal  +     -0.1538815804864 *
153794    +        S_Age  +    -0.32580272740463 * S_Frq  +    -0.42829033761305 *
153795    +        S_Income  +    -0.48452563006855 * S_Kidhome
153796    +          +      0.1638851163007 * S_MntFishProducts
153797    +          +      0.0664068987141 * S_MntFruits  +    -0.54942999951449 *
153798    +        S_MntGoldProds  +    -0.03119903843323 * S_MntSweetProducts
153799    +          +    -0.09008316729574 * S_MonthsAsCustomer
153800    +          +    -0.45452883452999 * S_NumDealsPurchases
153801    +          +    -0.51499533680205 * S_NumWebVisitsMonth
153802    +          +    -0.31380282266424 * S_RFMstat  +    -0.49525143192723 *
153803    +        S_RMntFrq  +     0.78729387300328 * S_Recency
153804    +          +    -0.00915408985389 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.67705794412683 * S_AcceptedCmpTotal + -0.1538815804864 * S_Age 
+ -0.32580272740463 * S_Frq + -0.42829033761305 * S_Income + -0.48452563006855 * S_Kidhome + 
0.1638851163007 * S_MntFishProducts + 0.0664068987141 * S_MntFruits + -0.54942999951449 * 
S_MntGoldProds + -0.03119903843323 * S_MntSweetProducts + -0.09008316729574 * 
S_MonthsAsCustomer + -0.45452883452999 * S_NumDealsPurchases + -0.51499533680205 * 
S_NumWebVisitsMonth + -0.31380282266424 * S_RFMstat + -0.49525143192723 * S_RMntFrq + 
0.78729387300328 * S_Recency + -0.00915408985389 * S_Teenhome ;
153805    +   H14  =     0.38318271090494 * S_AcceptedCmpTotal  +     0.06739638561066 *
153806    +        S_Age  +     0.06912614028701 * S_Frq  +     0.14095220260271 *
153807    +        S_Income  +    -0.62959343200613 * S_Kidhome
153808    +          +    -0.08953561593231 * S_MntFishProducts
153809    +          +    -0.17218233364246 * S_MntFruits  +    -0.00637076803669 *
153810    +        S_MntGoldProds  +    -0.30194599011284 * S_MntSweetProducts
153811    +          +    -0.04786752357029 * S_MonthsAsCustomer
153812    +          +     0.01658790214447 * S_NumDealsPurchases
153813    +          +     0.60508225698649 * S_NumWebVisitsMonth
153814    +          +     0.24353060507938 * S_RFMstat  +    -0.16860031884486 *
153815    +        S_RMntFrq  +    -0.74371082820398 * S_Recency
153816    +          +    -0.33551735128078 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 0.38318271090494 * S_AcceptedCmpTotal + 0.06739638561066 * S_Age + 
0.06912614028701 * S_Frq + 0.14095220260271 * S_Income + -0.62959343200613 * S_Kidhome + 
-0.08953561593231 * S_MntFishProducts + -0.17218233364246 * S_MntFruits + -0.00637076803669 * 
S_MntGoldProds + -0.30194599011284 * S_MntSweetProducts + -0.04786752357029 * 
S_MonthsAsCustomer + 0.01658790214447 * S_NumDealsPurchases + 0.60508225698649 * 
S_NumWebVisitsMonth + 0.24353060507938 * S_RFMstat + -0.16860031884486 * S_RMntFrq + 
-0.74371082820398 * S_Recency + -0.33551735128078 * S_Teenhome ;
153817    +   H15  =    -0.33857166416401 * S_AcceptedCmpTotal  +     0.16520608022036 *
153818    +        S_Age  +     0.94641603263172 * S_Frq  +     0.27973805141234 *
153819    +        S_Income  +    -0.02417847760857 * S_Kidhome
153820    +          +    -0.15499190740194 * S_MntFishProducts
153821    +          +     0.06053779821593 * S_MntFruits  +     0.01880479324025 *
153822    +        S_MntGoldProds  +    -0.12339726666832 * S_MntSweetProducts
153823    +          +     0.03507116553703 * S_MonthsAsCustomer
153824    +          +    -0.55190381693021 * S_NumDealsPurchases
153825    +          +    -0.59332657995985 * S_NumWebVisitsMonth
153826    +          +    -0.06593374840561 * S_RFMstat  +     -0.1695910963416 *
153827    +        S_RMntFrq  +     0.67557246434122 * S_Recency
153828    +          +    -0.18658362303394 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = -0.33857166416401 * S_AcceptedCmpTotal + 0.16520608022036 * S_Age 
+ 0.94641603263172 * S_Frq + 0.27973805141234 * S_Income + -0.02417847760857 * S_Kidhome + 
-0.15499190740194 * S_MntFishProducts + 0.06053779821593 * S_MntFruits + 0.01880479324025 * 
S_MntGoldProds + -0.12339726666832 * S_MntSweetProducts + 0.03507116553703 * 
S_MonthsAsCustomer + -0.55190381693021 * S_NumDealsPurchases + -0.59332657995985 * 
S_NumWebVisitsMonth + -0.06593374840561 * S_RFMstat + -0.1695910963416 * S_RMntFrq + 
0.67557246434122 * S_Recency + -0.18658362303394 * S_Teenhome ;
153829    +   H11  = H11  +     0.33421746514492 * AcceptedCmp10
153830    +          +     0.40665603760529 * AcceptedCmp20  +     0.31091046539166 *
153831    +        AcceptedCmp30  +     0.31067810471417 * AcceptedCmp40
153832    +          +     0.23230606314386 * AcceptedCmp50  +     0.16336773428886 *
153833    +        Complain0  +    -0.30987882500611 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.33421746514492 * AcceptedCmp10 + 0.40665603760529 * 
AcceptedCmp20 + 0.31091046539166 * AcceptedCmp30 + 0.31067810471417 * AcceptedCmp40 + 
0.23230606314386 * AcceptedCmp50 + 0.16336773428886 * Complain0 + -0.30987882500611 * 
HigherEducationBinary0 ;
153834    +   H12  = H12  +     0.15837463939449 * AcceptedCmp10
153835    +          +    -0.01452684677445 * AcceptedCmp20  +    -0.18194082864383 *
153836    +        AcceptedCmp30  +     0.10656170173016 * AcceptedCmp40
153837    +          +     0.27710912124072 * AcceptedCmp50  +     0.21438736172214 *
153838    +        Complain0  +      0.2669951422121 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.15837463939449 * AcceptedCmp10 + -0.01452684677445 * 
AcceptedCmp20 + -0.18194082864383 * AcceptedCmp30 + 0.10656170173016 * AcceptedCmp40 + 
0.27710912124072 * AcceptedCmp50 + 0.21438736172214 * Complain0 + 0.2669951422121 * 
HigherEducationBinary0 ;
153839    +   H13  = H13  +    -0.11101425179048 * AcceptedCmp10
153840    +          +    -0.13751555879468 * AcceptedCmp20  +     0.15733527433639 *
153841    +        AcceptedCmp30  +    -0.09214109408136 * AcceptedCmp40
153842    +          +     0.20478673178439 * AcceptedCmp50  +    -0.28890027497717 *
153843    +        Complain0  +     0.12242984309847 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.11101425179048 * AcceptedCmp10 + -0.13751555879468 * 
AcceptedCmp20 + 0.15733527433639 * AcceptedCmp30 + -0.09214109408136 * AcceptedCmp40 + 
0.20478673178439 * AcceptedCmp50 + -0.28890027497717 * Complain0 + 0.12242984309847 * 
HigherEducationBinary0 ;
153844    +   H14  = H14  +     0.23187291622457 * AcceptedCmp10
153845    +          +    -0.00683976547266 * AcceptedCmp20  +    -0.31710598764248 *
153846    +        AcceptedCmp30  +     0.01758514221597 * AcceptedCmp40
153847    +          +     0.01100509244187 * AcceptedCmp50  +     0.18584999296157 *
153848    +        Complain0  +     0.02524550049258 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.23187291622457 * AcceptedCmp10 + -0.00683976547266 * 
AcceptedCmp20 + -0.31710598764248 * AcceptedCmp30 + 0.01758514221597 * AcceptedCmp40 + 
0.01100509244187 * AcceptedCmp50 + 0.18584999296157 * Complain0 + 0.02524550049258 * 
HigherEducationBinary0 ;
153849    +   H15  = H15  +     0.53220831693924 * AcceptedCmp10
153850    +          +     0.01983211122446 * AcceptedCmp20  +      0.4704897795251 *
153851    +        AcceptedCmp30  +    -0.05798671810245 * AcceptedCmp40
153852    +          +      0.2900384423652 * AcceptedCmp50  +     0.05796705496261 *
153853    +        Complain0  +     0.17745347141736 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.53220831693924 * AcceptedCmp10 + 0.01983211122446 * 
AcceptedCmp20 + 0.4704897795251 * AcceptedCmp30 + -0.05798671810245 * AcceptedCmp40 + 
0.2900384423652 * AcceptedCmp50 + 0.05796705496261 * Complain0 + 0.17745347141736 * 
HigherEducationBinary0 ;
153854    +   H11  = H11  +     0.02871001640043 * Education2n_Cycle
153855    +          +    -0.13470776546868 * EducationBasic  +    -0.09722995474504 *
153856    +        EducationGraduation  +     0.23764107317064 * EducationMaster
153857    +          +    -0.41654638301737 * Marital_StatusDivorced
153858    +          +     0.65956207700583 * Marital_StatusMarried
153859    +          +    -0.52573042887166 * Marital_StatusSingle
153860    +          +     0.70466028872575 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.02871001640043 * Education2n_Cycle + -0.13470776546868 * 
EducationBasic + -0.09722995474504 * EducationGraduation + 0.23764107317064 * EducationMaster 
+ -0.41654638301737 * Marital_StatusDivorced + 0.65956207700583 * Marital_StatusMarried + 
-0.52573042887166 * Marital_StatusSingle + 0.70466028872575 * Marital_StatusTogether ;
153861    +   H12  = H12  +    -0.18219729356622 * Education2n_Cycle
153862    +          +    -0.04034334204744 * EducationBasic  +     0.26266153233615 *
153863    +        EducationGraduation  +     0.04617834975571 * EducationMaster
153864    +          +    -0.32313846862799 * Marital_StatusDivorced
153865    +          +     0.15910539009887 * Marital_StatusMarried
153866    +          +     0.28781821946114 * Marital_StatusSingle
153867    +          +    -0.31451367898445 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.18219729356622 * Education2n_Cycle + -0.04034334204744 * 
EducationBasic + 0.26266153233615 * EducationGraduation + 0.04617834975571 * EducationMaster + 
-0.32313846862799 * Marital_StatusDivorced + 0.15910539009887 * Marital_StatusMarried + 
0.28781821946114 * Marital_StatusSingle + -0.31451367898445 * Marital_StatusTogether ;
153868    +   H13  = H13  +     0.03267721493849 * Education2n_Cycle
153869    +          +     0.16906837093601 * EducationBasic  +    -0.24874822218195 *
153870    +        EducationGraduation  +    -0.16815820019721 * EducationMaster
153871    +          +    -0.06481096024989 * Marital_StatusDivorced
153872    +          +    -0.01184060710261 * Marital_StatusMarried
153873    +          +    -0.04932258474026 * Marital_StatusSingle
153874    +          +     -0.1515388053958 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.03267721493849 * Education2n_Cycle + 0.16906837093601 * 
EducationBasic + -0.24874822218195 * EducationGraduation + -0.16815820019721 * EducationMaster 
+ -0.06481096024989 * Marital_StatusDivorced + -0.01184060710261 * Marital_StatusMarried + 
-0.04932258474026 * Marital_StatusSingle + -0.1515388053958 * Marital_StatusTogether ;
153875    +   H14  = H14  +     0.04382537081818 * Education2n_Cycle
153876    +          +     0.09896945976445 * EducationBasic  +      0.2410849324915 *
153877    +        EducationGraduation  +    -0.17878202935912 * EducationMaster
153878    +          +      0.2062190716357 * Marital_StatusDivorced
153879    +          +      -0.523160668609 * Marital_StatusMarried
153880    +          +     0.50687401816278 * Marital_StatusSingle
153881    +          +    -0.14896192891933 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.04382537081818 * Education2n_Cycle + 0.09896945976445 * 
EducationBasic + 0.2410849324915 * EducationGraduation + -0.17878202935912 * EducationMaster + 
0.2062190716357 * Marital_StatusDivorced + -0.523160668609 * Marital_StatusMarried + 
0.50687401816278 * Marital_StatusSingle + -0.14896192891933 * Marital_StatusTogether ;
153882    +   H15  = H15  +    -0.08178258730533 * Education2n_Cycle
153883    +          +      0.2352291498146 * EducationBasic  +     0.00142061419661 *
153884    +        EducationGraduation  +      0.0248100493803 * EducationMaster
153885    +          +     -0.1386176879533 * Marital_StatusDivorced
153886    +          +    -0.17611433777439 * Marital_StatusMarried
153887    +          +     0.09908348348999 * Marital_StatusSingle
153888    +          +     0.03642332762739 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.08178258730533 * Education2n_Cycle + 0.2352291498146 * 
EducationBasic + 0.00142061419661 * EducationGraduation + 0.0248100493803 * EducationMaster + 
-0.1386176879533 * Marital_StatusDivorced + -0.17611433777439 * Marital_StatusMarried + 
0.09908348348999 * Marital_StatusSingle + 0.03642332762739 * Marital_StatusTogether ;
153889    +   H11  =     0.45628072516851 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.45628072516851 + H11 ;
153890    +   H12  =    -0.95695553300305 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.95695553300305 + H12 ;
153891    +   H13  =    -0.44156518168947 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.44156518168947 + H13 ;
153892    +   H14  =      0.5435213841731 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.5435213841731 + H14 ;
153893    +   H15  =     0.82816554742793 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 0.82816554742793 + H15 ;
153894    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
153895    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
153896    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
153897    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
153898    +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
153899    +END;
MPRINT(EM_DIAGRAM):   END;
153900    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
153901    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
153902    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
153903    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
153904    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
153905    +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
153906    +END;
MPRINT(EM_DIAGRAM):   END;
153907    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
153908    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
153909    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
153910    +
153911    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
153912    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
153913    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
153914    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
153915    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
153916    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
153917    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
153918    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
153919    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
153920    +end;
MPRINT(EM_DIAGRAM):   end;
153921    +else do;
MPRINT(EM_DIAGRAM):   else do;
153922    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
153923    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
153924    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
153925    +   end;
MPRINT(EM_DIAGRAM):   end;
153926    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
153927    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
153928    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
153929    +   end;
MPRINT(EM_DIAGRAM):   end;
153930    +   else do;
MPRINT(EM_DIAGRAM):   else do;
153931    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
153932    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
153933    +   end;
MPRINT(EM_DIAGRAM):   end;
153934    +end;
MPRINT(EM_DIAGRAM):   end;
153935    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
153936    +   P_DepVar1  =    -3.08501570662701 * H11  +     0.89180279281701 * H12
153937    +          +    -2.65199906073292 * H13  +     1.47191997336768 * H14
153938    +          +     -1.9303334635002 * H15 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.08501570662701 * H11 + 0.89180279281701 * H12 + 
-2.65199906073292 * H13 + 1.47191997336768 * H14 + -1.9303334635002 * H15 ;
153939    +   P_DepVar1  =    -1.84416627670626 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.84416627670626 + P_DepVar1 ;
153940    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
153941    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
153942    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
153943    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
153944    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
153945    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
153946    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
153947    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
153948    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
153949    +END;
MPRINT(EM_DIAGRAM):   END;
153950    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
153951    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
153952    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
153953    +END;
MPRINT(EM_DIAGRAM):   END;
153954    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
153955    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
153956    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
153957    +END;
MPRINT(EM_DIAGRAM):   END;
153958    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
153959    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
153960    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
153961    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
153962    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
153963    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
153964    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
153965    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
153966    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
153967    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
153968    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
153969    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
153970    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
153971    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
153972    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
153973    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
153974    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
153975    +END;
MPRINT(EM_DIAGRAM):   END;
153976    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
153977    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
153978    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
153979    +drop
153980    +H11
153981    +H12
153982    +H13
153983    +H14
153984    +H15
153985    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 ;
153986    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
153987     run;

NOTE: DATA STEP view saved on file EMWS8.NEURAL40_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.META3_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_DIAGRAM):   quit;
153988     quit;
153989     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
153990     filename emflow
153990   ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural40\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural40\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural40: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
153991     *------------------------------------------------------------*;
153992     * Neural40: Scoring VALIDATE data;
153993     *------------------------------------------------------------*;
153994     data EMWS8.Neural40_VALIDATE
153995     / view=EMWS8.Neural40_VALIDATE
153996     ;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural40_VALIDATE / view=EMWS8.Neural40_VALIDATE ;
153997     set EMWS8.Meta3_VALIDATE
153998     ;
MPRINT(EM_DIAGRAM):   set EMWS8.Meta3_VALIDATE ;
153999     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural40\EMFLOWSCORE.sas.
154000    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
154001    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
154002    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
154003    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
154004    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
154005    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
154006    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
154007    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
154008    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
154009    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
154010    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
154011    +LENGTH _WARN_ $4
154012    +      F_DepVar  $ 12
154013    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
154014    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
154015    +
154016    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
154017    +
154018    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
154019    +
154020    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
154021    +
154022    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
154023    +
154024    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
154025    +
154026    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
154027    +
154028    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
154029    +
154030    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
154031    +
154032    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
154033    +
154034    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
154035    +
154036    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
154037    +
154038    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
154039    +
154040    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
154041    +
154042    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
154043    +
154044    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
154045    +
154046    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
154047    +
154048    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
154049    +
154050    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
154051    +
154052    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
154053    +
154054    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
154055    +
154056    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
154057    +
154058    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
154059    +
154060    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
154061    +
154062    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
154063    +
154064    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
154065    +
154066    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
154067    +
154068    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
154069    +
154070    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
154071    +
154072    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
154073    +
154074    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
154075    +
154076    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
154077    +
154078    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
154079    +
154080    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
154081    +
154082    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
154083    +
154084    +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
154085    +
154086    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
154087    +
154088    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
154089    +
154090    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
154091    +
154092    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
154093    +
154094    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
154095    +
154096    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
154097    +
154098    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
154099    +
154100    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
154101    +
154102    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
154103    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
154104    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
154105    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
154106    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
154107    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
154108    +end;
MPRINT(EM_DIAGRAM):   end;
154109    +else do;
MPRINT(EM_DIAGRAM):   else do;
154110    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
154111    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
154112    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
154113    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
154114    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
154115    +   end;
MPRINT(EM_DIAGRAM):   end;
154116    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
154117    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
154118    +   end;
MPRINT(EM_DIAGRAM):   end;
154119    +   else do;
MPRINT(EM_DIAGRAM):   else do;
154120    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
154121    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
154122    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
154123    +   end;
MPRINT(EM_DIAGRAM):   end;
154124    +end;
MPRINT(EM_DIAGRAM):   end;
154125    +
154126    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
154127    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
154128    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
154129    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
154130    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
154131    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
154132    +end;
MPRINT(EM_DIAGRAM):   end;
154133    +else do;
MPRINT(EM_DIAGRAM):   else do;
154134    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
154135    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
154136    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
154137    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
154138    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
154139    +   end;
MPRINT(EM_DIAGRAM):   end;
154140    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
154141    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
154142    +   end;
MPRINT(EM_DIAGRAM):   end;
154143    +   else do;
MPRINT(EM_DIAGRAM):   else do;
154144    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
154145    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
154146    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
154147    +   end;
MPRINT(EM_DIAGRAM):   end;
154148    +end;
MPRINT(EM_DIAGRAM):   end;
154149    +
154150    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
154151    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
154152    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
154153    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
154154    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
154155    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
154156    +end;
MPRINT(EM_DIAGRAM):   end;
154157    +else do;
MPRINT(EM_DIAGRAM):   else do;
154158    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
154159    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
154160    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
154161    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
154162    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
154163    +   end;
MPRINT(EM_DIAGRAM):   end;
154164    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
154165    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
154166    +   end;
MPRINT(EM_DIAGRAM):   end;
154167    +   else do;
MPRINT(EM_DIAGRAM):   else do;
154168    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
154169    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
154170    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
154171    +   end;
MPRINT(EM_DIAGRAM):   end;
154172    +end;
MPRINT(EM_DIAGRAM):   end;
154173    +
154174    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
154175    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
154176    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
154177    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
154178    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
154179    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
154180    +end;
MPRINT(EM_DIAGRAM):   end;
154181    +else do;
MPRINT(EM_DIAGRAM):   else do;
154182    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
154183    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
154184    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
154185    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
154186    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
154187    +   end;
MPRINT(EM_DIAGRAM):   end;
154188    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
154189    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
154190    +   end;
MPRINT(EM_DIAGRAM):   end;
154191    +   else do;
MPRINT(EM_DIAGRAM):   else do;
154192    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
154193    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
154194    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
154195    +   end;
MPRINT(EM_DIAGRAM):   end;
154196    +end;
MPRINT(EM_DIAGRAM):   end;
154197    +
154198    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
154199    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
154200    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
154201    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
154202    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
154203    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
154204    +end;
MPRINT(EM_DIAGRAM):   end;
154205    +else do;
MPRINT(EM_DIAGRAM):   else do;
154206    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
154207    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
154208    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
154209    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
154210    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
154211    +   end;
MPRINT(EM_DIAGRAM):   end;
154212    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
154213    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
154214    +   end;
MPRINT(EM_DIAGRAM):   end;
154215    +   else do;
MPRINT(EM_DIAGRAM):   else do;
154216    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
154217    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
154218    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
154219    +   end;
MPRINT(EM_DIAGRAM):   end;
154220    +end;
MPRINT(EM_DIAGRAM):   end;
154221    +
154222    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
154223    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
154224    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
154225    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
154226    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
154227    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
154228    +end;
MPRINT(EM_DIAGRAM):   end;
154229    +else do;
MPRINT(EM_DIAGRAM):   else do;
154230    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
154231    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
154232    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
154233    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
154234    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
154235    +   end;
MPRINT(EM_DIAGRAM):   end;
154236    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
154237    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
154238    +   end;
MPRINT(EM_DIAGRAM):   end;
154239    +   else do;
MPRINT(EM_DIAGRAM):   else do;
154240    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
154241    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
154242    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
154243    +   end;
MPRINT(EM_DIAGRAM):   end;
154244    +end;
MPRINT(EM_DIAGRAM):   end;
154245    +
154246    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
154247    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
154248    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
154249    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
154250    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
154251    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
154252    +end;
MPRINT(EM_DIAGRAM):   end;
154253    +else do;
MPRINT(EM_DIAGRAM):   else do;
154254    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
154255    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
154256    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
154257    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
154258    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
154259    +   end;
MPRINT(EM_DIAGRAM):   end;
154260    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
154261    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
154262    +   end;
MPRINT(EM_DIAGRAM):   end;
154263    +   else do;
MPRINT(EM_DIAGRAM):   else do;
154264    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
154265    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
154266    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
154267    +   end;
MPRINT(EM_DIAGRAM):   end;
154268    +end;
MPRINT(EM_DIAGRAM):   end;
154269    +
154270    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
154271    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
154272    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
154273    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
154274    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
154275    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
154276    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
154277    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
154278    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
154279    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
154280    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
154281    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
154282    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
154283    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
154284    +end;
MPRINT(EM_DIAGRAM):   end;
154285    +else do;
MPRINT(EM_DIAGRAM):   else do;
154286    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
154287    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
154288    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
154289    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
154290    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
154291    +   end;
MPRINT(EM_DIAGRAM):   end;
154292    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
154293    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
154294    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
154295    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
154296    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
154297    +   end;
MPRINT(EM_DIAGRAM):   end;
154298    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
154299    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
154300    +   end;
MPRINT(EM_DIAGRAM):   end;
154301    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
154302    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
154303    +   end;
MPRINT(EM_DIAGRAM):   end;
154304    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
154305    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
154306    +   end;
MPRINT(EM_DIAGRAM):   end;
154307    +   else do;
MPRINT(EM_DIAGRAM):   else do;
154308    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
154309    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
154310    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
154311    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
154312    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
154313    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
154314    +   end;
MPRINT(EM_DIAGRAM):   end;
154315    +end;
MPRINT(EM_DIAGRAM):   end;
154316    +
154317    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
154318    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
154319    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
154320    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
154321    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
154322    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
154323    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
154324    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
154325    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
154326    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
154327    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
154328    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
154329    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
154330    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
154331    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
154332    +end;
MPRINT(EM_DIAGRAM):   end;
154333    +else do;
MPRINT(EM_DIAGRAM):   else do;
154334    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
154335    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
154336    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
154337    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
154338    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
154339    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
154340    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
154341    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
154342    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
154343    +         end;
MPRINT(EM_DIAGRAM):   end;
154344    +         else do;
MPRINT(EM_DIAGRAM):   else do;
154345    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
154346    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
154347    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
154348    +            end;
MPRINT(EM_DIAGRAM):   end;
154349    +         end;
MPRINT(EM_DIAGRAM):   end;
154350    +      end;
MPRINT(EM_DIAGRAM):   end;
154351    +      else do;
MPRINT(EM_DIAGRAM):   else do;
154352    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
154353    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
154354    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
154355    +         end;
MPRINT(EM_DIAGRAM):   end;
154356    +      end;
MPRINT(EM_DIAGRAM):   end;
154357    +   end;
MPRINT(EM_DIAGRAM):   end;
154358    +   else do;
MPRINT(EM_DIAGRAM):   else do;
154359    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
154360    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
154361    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
154362    +      end;
MPRINT(EM_DIAGRAM):   end;
154363    +      else do;
MPRINT(EM_DIAGRAM):   else do;
154364    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
154365    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
154366    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
154367    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
154368    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
154369    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
154370    +         end;
MPRINT(EM_DIAGRAM):   end;
154371    +      end;
MPRINT(EM_DIAGRAM):   end;
154372    +   end;
MPRINT(EM_DIAGRAM):   end;
154373    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
154374    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
154375    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
154376    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
154377    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
154378    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
154379    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
154380    +   end;
MPRINT(EM_DIAGRAM):   end;
154381    +end;
MPRINT(EM_DIAGRAM):   end;
154382    +
154383    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
154384    +*** Checking missing input Interval
154385    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
154386    +
154387    +IF NMISS(
154388    +   AcceptedCmpTotal ,
154389    +   Age ,
154390    +   Frq ,
154391    +   Income ,
154392    +   Kidhome ,
154393    +   MntFishProducts ,
154394    +   MntFruits ,
154395    +   MntGoldProds ,
154396    +   MntSweetProducts ,
154397    +   MonthsAsCustomer ,
154398    +   NumDealsPurchases ,
154399    +   NumWebVisitsMonth ,
154400    +   RFMstat ,
154401    +   RMntFrq ,
154402    +   Recency ,
154403    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
154404    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
154405    +
154406    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
154407    +END;
MPRINT(EM_DIAGRAM):   END;
154408    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
154409    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
154410    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
154411    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
154412    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
154413    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
154414    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
154415    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
154416    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
154417    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
154418    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
154419    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
154420    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
154421    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
154422    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
154423    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
154424    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
154425    +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
154426    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
154427    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
154428    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
154429    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
154430    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
154431    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
154432    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
154433    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
154434    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
154435    +END;
MPRINT(EM_DIAGRAM):   END;
154436    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
154437    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
154438    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
154439    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
154440    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
154441    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
154442    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
154443    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
154444    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
154445    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
154446    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
154447    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
154448    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
154449    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
154450    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
154451    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
154452    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
154453    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
154454    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
154455    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
154456    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
154457    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
154458    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
154459    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
154460    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
154461    +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
154462    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
154463    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
154464    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
154465    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
154466    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
154467    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
154468    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
154469    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
154470    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
154471    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
154472    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
154473    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
154474    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
154475    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
154476    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
154477    +END;
MPRINT(EM_DIAGRAM):   END;
154478    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
154479    +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
154480    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
154481    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
154482    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
154483    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
154484    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
154485    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
154486    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
154487    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
154488    +   H11  =      0.0175934799517 * S_AcceptedCmpTotal  +     0.05885450913465 *
154489    +        S_Age  +    -0.17194721523787 * S_Frq  +    -0.82356228294539 *
154490    +        S_Income  +     0.39869341630865 * S_Kidhome
154491    +          +    -0.04263586382867 * S_MntFishProducts
154492    +          +     0.02697365132515 * S_MntFruits  +     0.04818007940845 *
154493    +        S_MntGoldProds  +      0.1933390486387 * S_MntSweetProducts
154494    +          +    -0.14308588367026 * S_MonthsAsCustomer
154495    +          +    -0.01053346972758 * S_NumDealsPurchases
154496    +          +    -0.02308351901024 * S_NumWebVisitsMonth
154497    +          +     0.00403225397753 * S_RFMstat  +    -0.21691316840182 *
154498    +        S_RMntFrq  +     0.53938373050534 * S_Recency
154499    +          +     0.55541282723709 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.0175934799517 * S_AcceptedCmpTotal + 0.05885450913465 * S_Age + 
-0.17194721523787 * S_Frq + -0.82356228294539 * S_Income + 0.39869341630865 * S_Kidhome + 
-0.04263586382867 * S_MntFishProducts + 0.02697365132515 * S_MntFruits + 0.04818007940845 * 
S_MntGoldProds + 0.1933390486387 * S_MntSweetProducts + -0.14308588367026 * S_MonthsAsCustomer 
+ -0.01053346972758 * S_NumDealsPurchases + -0.02308351901024 * S_NumWebVisitsMonth + 
0.00403225397753 * S_RFMstat + -0.21691316840182 * S_RMntFrq + 0.53938373050534 * S_Recency + 
0.55541282723709 * S_Teenhome ;
154500    +   H12  =    -0.31735811206172 * S_AcceptedCmpTotal  +    -0.13976815294846 *
154501    +        S_Age  +    -0.11928757030551 * S_Frq  +    -0.03597478449162 *
154502    +        S_Income  +     0.31514301668626 * S_Kidhome
154503    +          +    -0.05723808748191 * S_MntFishProducts
154504    +          +     0.04545715816601 * S_MntFruits  +     0.19006209866265 *
154505    +        S_MntGoldProds  +     0.34690576354698 * S_MntSweetProducts
154506    +          +    -0.48738730918684 * S_MonthsAsCustomer
154507    +          +     0.31545795225489 * S_NumDealsPurchases
154508    +          +     0.24686603252864 * S_NumWebVisitsMonth
154509    +          +     0.29857007170218 * S_RFMstat  +    -0.01009427724752 *
154510    +        S_RMntFrq  +    -0.48894693883774 * S_Recency
154511    +          +    -0.32384426712368 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.31735811206172 * S_AcceptedCmpTotal + -0.13976815294846 * S_Age 
+ -0.11928757030551 * S_Frq + -0.03597478449162 * S_Income + 0.31514301668626 * S_Kidhome + 
-0.05723808748191 * S_MntFishProducts + 0.04545715816601 * S_MntFruits + 0.19006209866265 * 
S_MntGoldProds + 0.34690576354698 * S_MntSweetProducts + -0.48738730918684 * 
S_MonthsAsCustomer + 0.31545795225489 * S_NumDealsPurchases + 0.24686603252864 * 
S_NumWebVisitsMonth + 0.29857007170218 * S_RFMstat + -0.01009427724752 * S_RMntFrq + 
-0.48894693883774 * S_Recency + -0.32384426712368 * S_Teenhome ;
154512    +   H13  =    -0.67705794412683 * S_AcceptedCmpTotal  +     -0.1538815804864 *
154513    +        S_Age  +    -0.32580272740463 * S_Frq  +    -0.42829033761305 *
154514    +        S_Income  +    -0.48452563006855 * S_Kidhome
154515    +          +      0.1638851163007 * S_MntFishProducts
154516    +          +      0.0664068987141 * S_MntFruits  +    -0.54942999951449 *
154517    +        S_MntGoldProds  +    -0.03119903843323 * S_MntSweetProducts
154518    +          +    -0.09008316729574 * S_MonthsAsCustomer
154519    +          +    -0.45452883452999 * S_NumDealsPurchases
154520    +          +    -0.51499533680205 * S_NumWebVisitsMonth
154521    +          +    -0.31380282266424 * S_RFMstat  +    -0.49525143192723 *
154522    +        S_RMntFrq  +     0.78729387300328 * S_Recency
154523    +          +    -0.00915408985389 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.67705794412683 * S_AcceptedCmpTotal + -0.1538815804864 * S_Age 
+ -0.32580272740463 * S_Frq + -0.42829033761305 * S_Income + -0.48452563006855 * S_Kidhome + 
0.1638851163007 * S_MntFishProducts + 0.0664068987141 * S_MntFruits + -0.54942999951449 * 
S_MntGoldProds + -0.03119903843323 * S_MntSweetProducts + -0.09008316729574 * 
S_MonthsAsCustomer + -0.45452883452999 * S_NumDealsPurchases + -0.51499533680205 * 
S_NumWebVisitsMonth + -0.31380282266424 * S_RFMstat + -0.49525143192723 * S_RMntFrq + 
0.78729387300328 * S_Recency + -0.00915408985389 * S_Teenhome ;
154524    +   H14  =     0.38318271090494 * S_AcceptedCmpTotal  +     0.06739638561066 *
154525    +        S_Age  +     0.06912614028701 * S_Frq  +     0.14095220260271 *
154526    +        S_Income  +    -0.62959343200613 * S_Kidhome
154527    +          +    -0.08953561593231 * S_MntFishProducts
154528    +          +    -0.17218233364246 * S_MntFruits  +    -0.00637076803669 *
154529    +        S_MntGoldProds  +    -0.30194599011284 * S_MntSweetProducts
154530    +          +    -0.04786752357029 * S_MonthsAsCustomer
154531    +          +     0.01658790214447 * S_NumDealsPurchases
154532    +          +     0.60508225698649 * S_NumWebVisitsMonth
154533    +          +     0.24353060507938 * S_RFMstat  +    -0.16860031884486 *
154534    +        S_RMntFrq  +    -0.74371082820398 * S_Recency
154535    +          +    -0.33551735128078 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 0.38318271090494 * S_AcceptedCmpTotal + 0.06739638561066 * S_Age + 
0.06912614028701 * S_Frq + 0.14095220260271 * S_Income + -0.62959343200613 * S_Kidhome + 
-0.08953561593231 * S_MntFishProducts + -0.17218233364246 * S_MntFruits + -0.00637076803669 * 
S_MntGoldProds + -0.30194599011284 * S_MntSweetProducts + -0.04786752357029 * 
S_MonthsAsCustomer + 0.01658790214447 * S_NumDealsPurchases + 0.60508225698649 * 
S_NumWebVisitsMonth + 0.24353060507938 * S_RFMstat + -0.16860031884486 * S_RMntFrq + 
-0.74371082820398 * S_Recency + -0.33551735128078 * S_Teenhome ;
154536    +   H15  =    -0.33857166416401 * S_AcceptedCmpTotal  +     0.16520608022036 *
154537    +        S_Age  +     0.94641603263172 * S_Frq  +     0.27973805141234 *
154538    +        S_Income  +    -0.02417847760857 * S_Kidhome
154539    +          +    -0.15499190740194 * S_MntFishProducts
154540    +          +     0.06053779821593 * S_MntFruits  +     0.01880479324025 *
154541    +        S_MntGoldProds  +    -0.12339726666832 * S_MntSweetProducts
154542    +          +     0.03507116553703 * S_MonthsAsCustomer
154543    +          +    -0.55190381693021 * S_NumDealsPurchases
154544    +          +    -0.59332657995985 * S_NumWebVisitsMonth
154545    +          +    -0.06593374840561 * S_RFMstat  +     -0.1695910963416 *
154546    +        S_RMntFrq  +     0.67557246434122 * S_Recency
154547    +          +    -0.18658362303394 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = -0.33857166416401 * S_AcceptedCmpTotal + 0.16520608022036 * S_Age 
+ 0.94641603263172 * S_Frq + 0.27973805141234 * S_Income + -0.02417847760857 * S_Kidhome + 
-0.15499190740194 * S_MntFishProducts + 0.06053779821593 * S_MntFruits + 0.01880479324025 * 
S_MntGoldProds + -0.12339726666832 * S_MntSweetProducts + 0.03507116553703 * 
S_MonthsAsCustomer + -0.55190381693021 * S_NumDealsPurchases + -0.59332657995985 * 
S_NumWebVisitsMonth + -0.06593374840561 * S_RFMstat + -0.1695910963416 * S_RMntFrq + 
0.67557246434122 * S_Recency + -0.18658362303394 * S_Teenhome ;
154548    +   H11  = H11  +     0.33421746514492 * AcceptedCmp10
154549    +          +     0.40665603760529 * AcceptedCmp20  +     0.31091046539166 *
154550    +        AcceptedCmp30  +     0.31067810471417 * AcceptedCmp40
154551    +          +     0.23230606314386 * AcceptedCmp50  +     0.16336773428886 *
154552    +        Complain0  +    -0.30987882500611 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.33421746514492 * AcceptedCmp10 + 0.40665603760529 * 
AcceptedCmp20 + 0.31091046539166 * AcceptedCmp30 + 0.31067810471417 * AcceptedCmp40 + 
0.23230606314386 * AcceptedCmp50 + 0.16336773428886 * Complain0 + -0.30987882500611 * 
HigherEducationBinary0 ;
154553    +   H12  = H12  +     0.15837463939449 * AcceptedCmp10
154554    +          +    -0.01452684677445 * AcceptedCmp20  +    -0.18194082864383 *
154555    +        AcceptedCmp30  +     0.10656170173016 * AcceptedCmp40
154556    +          +     0.27710912124072 * AcceptedCmp50  +     0.21438736172214 *
154557    +        Complain0  +      0.2669951422121 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.15837463939449 * AcceptedCmp10 + -0.01452684677445 * 
AcceptedCmp20 + -0.18194082864383 * AcceptedCmp30 + 0.10656170173016 * AcceptedCmp40 + 
0.27710912124072 * AcceptedCmp50 + 0.21438736172214 * Complain0 + 0.2669951422121 * 
HigherEducationBinary0 ;
154558    +   H13  = H13  +    -0.11101425179048 * AcceptedCmp10
154559    +          +    -0.13751555879468 * AcceptedCmp20  +     0.15733527433639 *
154560    +        AcceptedCmp30  +    -0.09214109408136 * AcceptedCmp40
154561    +          +     0.20478673178439 * AcceptedCmp50  +    -0.28890027497717 *
154562    +        Complain0  +     0.12242984309847 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.11101425179048 * AcceptedCmp10 + -0.13751555879468 * 
AcceptedCmp20 + 0.15733527433639 * AcceptedCmp30 + -0.09214109408136 * AcceptedCmp40 + 
0.20478673178439 * AcceptedCmp50 + -0.28890027497717 * Complain0 + 0.12242984309847 * 
HigherEducationBinary0 ;
154563    +   H14  = H14  +     0.23187291622457 * AcceptedCmp10
154564    +          +    -0.00683976547266 * AcceptedCmp20  +    -0.31710598764248 *
154565    +        AcceptedCmp30  +     0.01758514221597 * AcceptedCmp40
154566    +          +     0.01100509244187 * AcceptedCmp50  +     0.18584999296157 *
154567    +        Complain0  +     0.02524550049258 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.23187291622457 * AcceptedCmp10 + -0.00683976547266 * 
AcceptedCmp20 + -0.31710598764248 * AcceptedCmp30 + 0.01758514221597 * AcceptedCmp40 + 
0.01100509244187 * AcceptedCmp50 + 0.18584999296157 * Complain0 + 0.02524550049258 * 
HigherEducationBinary0 ;
154568    +   H15  = H15  +     0.53220831693924 * AcceptedCmp10
154569    +          +     0.01983211122446 * AcceptedCmp20  +      0.4704897795251 *
154570    +        AcceptedCmp30  +    -0.05798671810245 * AcceptedCmp40
154571    +          +      0.2900384423652 * AcceptedCmp50  +     0.05796705496261 *
154572    +        Complain0  +     0.17745347141736 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.53220831693924 * AcceptedCmp10 + 0.01983211122446 * 
AcceptedCmp20 + 0.4704897795251 * AcceptedCmp30 + -0.05798671810245 * AcceptedCmp40 + 
0.2900384423652 * AcceptedCmp50 + 0.05796705496261 * Complain0 + 0.17745347141736 * 
HigherEducationBinary0 ;
154573    +   H11  = H11  +     0.02871001640043 * Education2n_Cycle
154574    +          +    -0.13470776546868 * EducationBasic  +    -0.09722995474504 *
154575    +        EducationGraduation  +     0.23764107317064 * EducationMaster
154576    +          +    -0.41654638301737 * Marital_StatusDivorced
154577    +          +     0.65956207700583 * Marital_StatusMarried
154578    +          +    -0.52573042887166 * Marital_StatusSingle
154579    +          +     0.70466028872575 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.02871001640043 * Education2n_Cycle + -0.13470776546868 * 
EducationBasic + -0.09722995474504 * EducationGraduation + 0.23764107317064 * EducationMaster 
+ -0.41654638301737 * Marital_StatusDivorced + 0.65956207700583 * Marital_StatusMarried + 
-0.52573042887166 * Marital_StatusSingle + 0.70466028872575 * Marital_StatusTogether ;
154580    +   H12  = H12  +    -0.18219729356622 * Education2n_Cycle
154581    +          +    -0.04034334204744 * EducationBasic  +     0.26266153233615 *
154582    +        EducationGraduation  +     0.04617834975571 * EducationMaster
154583    +          +    -0.32313846862799 * Marital_StatusDivorced
154584    +          +     0.15910539009887 * Marital_StatusMarried
154585    +          +     0.28781821946114 * Marital_StatusSingle
154586    +          +    -0.31451367898445 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.18219729356622 * Education2n_Cycle + -0.04034334204744 * 
EducationBasic + 0.26266153233615 * EducationGraduation + 0.04617834975571 * EducationMaster + 
-0.32313846862799 * Marital_StatusDivorced + 0.15910539009887 * Marital_StatusMarried + 
0.28781821946114 * Marital_StatusSingle + -0.31451367898445 * Marital_StatusTogether ;
154587    +   H13  = H13  +     0.03267721493849 * Education2n_Cycle
154588    +          +     0.16906837093601 * EducationBasic  +    -0.24874822218195 *
154589    +        EducationGraduation  +    -0.16815820019721 * EducationMaster
154590    +          +    -0.06481096024989 * Marital_StatusDivorced
154591    +          +    -0.01184060710261 * Marital_StatusMarried
154592    +          +    -0.04932258474026 * Marital_StatusSingle
154593    +          +     -0.1515388053958 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.03267721493849 * Education2n_Cycle + 0.16906837093601 * 
EducationBasic + -0.24874822218195 * EducationGraduation + -0.16815820019721 * EducationMaster 
+ -0.06481096024989 * Marital_StatusDivorced + -0.01184060710261 * Marital_StatusMarried + 
-0.04932258474026 * Marital_StatusSingle + -0.1515388053958 * Marital_StatusTogether ;
154594    +   H14  = H14  +     0.04382537081818 * Education2n_Cycle
154595    +          +     0.09896945976445 * EducationBasic  +      0.2410849324915 *
154596    +        EducationGraduation  +    -0.17878202935912 * EducationMaster
154597    +          +      0.2062190716357 * Marital_StatusDivorced
154598    +          +      -0.523160668609 * Marital_StatusMarried
154599    +          +     0.50687401816278 * Marital_StatusSingle
154600    +          +    -0.14896192891933 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.04382537081818 * Education2n_Cycle + 0.09896945976445 * 
EducationBasic + 0.2410849324915 * EducationGraduation + -0.17878202935912 * EducationMaster + 
0.2062190716357 * Marital_StatusDivorced + -0.523160668609 * Marital_StatusMarried + 
0.50687401816278 * Marital_StatusSingle + -0.14896192891933 * Marital_StatusTogether ;
154601    +   H15  = H15  +    -0.08178258730533 * Education2n_Cycle
154602    +          +      0.2352291498146 * EducationBasic  +     0.00142061419661 *
154603    +        EducationGraduation  +      0.0248100493803 * EducationMaster
154604    +          +     -0.1386176879533 * Marital_StatusDivorced
154605    +          +    -0.17611433777439 * Marital_StatusMarried
154606    +          +     0.09908348348999 * Marital_StatusSingle
154607    +          +     0.03642332762739 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.08178258730533 * Education2n_Cycle + 0.2352291498146 * 
EducationBasic + 0.00142061419661 * EducationGraduation + 0.0248100493803 * EducationMaster + 
-0.1386176879533 * Marital_StatusDivorced + -0.17611433777439 * Marital_StatusMarried + 
0.09908348348999 * Marital_StatusSingle + 0.03642332762739 * Marital_StatusTogether ;
154608    +   H11  =     0.45628072516851 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.45628072516851 + H11 ;
154609    +   H12  =    -0.95695553300305 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.95695553300305 + H12 ;
154610    +   H13  =    -0.44156518168947 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.44156518168947 + H13 ;
154611    +   H14  =      0.5435213841731 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.5435213841731 + H14 ;
154612    +   H15  =     0.82816554742793 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 0.82816554742793 + H15 ;
154613    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
154614    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
154615    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
154616    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
154617    +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
154618    +END;
MPRINT(EM_DIAGRAM):   END;
154619    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
154620    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
154621    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
154622    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
154623    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
154624    +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
154625    +END;
MPRINT(EM_DIAGRAM):   END;
154626    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
154627    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
154628    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
154629    +
154630    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
154631    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
154632    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
154633    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
154634    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
154635    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
154636    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
154637    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
154638    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
154639    +end;
MPRINT(EM_DIAGRAM):   end;
154640    +else do;
MPRINT(EM_DIAGRAM):   else do;
154641    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
154642    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
154643    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
154644    +   end;
MPRINT(EM_DIAGRAM):   end;
154645    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
154646    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
154647    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
154648    +   end;
MPRINT(EM_DIAGRAM):   end;
154649    +   else do;
MPRINT(EM_DIAGRAM):   else do;
154650    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
154651    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
154652    +   end;
MPRINT(EM_DIAGRAM):   end;
154653    +end;
MPRINT(EM_DIAGRAM):   end;
154654    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
154655    +   P_DepVar1  =    -3.08501570662701 * H11  +     0.89180279281701 * H12
154656    +          +    -2.65199906073292 * H13  +     1.47191997336768 * H14
154657    +          +     -1.9303334635002 * H15 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.08501570662701 * H11 + 0.89180279281701 * H12 + 
-2.65199906073292 * H13 + 1.47191997336768 * H14 + -1.9303334635002 * H15 ;
154658    +   P_DepVar1  =    -1.84416627670626 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.84416627670626 + P_DepVar1 ;
154659    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
154660    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
154661    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
154662    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
154663    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
154664    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
154665    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
154666    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
154667    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
154668    +END;
MPRINT(EM_DIAGRAM):   END;
154669    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
154670    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
154671    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
154672    +END;
MPRINT(EM_DIAGRAM):   END;
154673    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
154674    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
154675    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
154676    +END;
MPRINT(EM_DIAGRAM):   END;
154677    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
154678    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
154679    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
154680    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
154681    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
154682    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
154683    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
154684    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
154685    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
154686    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
154687    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
154688    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
154689    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
154690    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
154691    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
154692    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
154693    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
154694    +END;
MPRINT(EM_DIAGRAM):   END;
154695    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
154696    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
154697    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
154698    +drop
154699    +H11
154700    +H12
154701    +H13
154702    +H14
154703    +H15
154704    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 ;
154705    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
154706     run;

NOTE: DATA STEP view saved on file EMWS8.NEURAL40_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.META3_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_DIAGRAM):   quit;
154707     quit;
154708     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
154709     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
154710     * Neural40: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Neural40: Computing metadata for TRAIN data;
154711     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS8.NEURAL40_TRAIN.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural40\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.Neural40_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.Neural40_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.Neural40_TRAIN out=WORK.M0HFFV5P noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0HFFV5P;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M0HFFV5P(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = 
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0HFFV5P;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M0HFFV5P;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M15_TXM_ NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M15_TXM_;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M15_TXM_;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0R_J9ML(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M15_TXM_;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M15_TXM_;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M15_TXM_;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M15_TXM_;
MPRINT(EMADVISECOLUMNS):   set WORK.M15_TXM_;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Meta3_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Meta3_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural40_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Neural40";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "Neural40";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "Neural40";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "Neural40";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "Neural40";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "Neural40";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "Neural40";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "Neural40";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Neural40";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "Neural40";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural40: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
155023     data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
155024     set EMWS8.Neural40_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural40_EMINFO;
155025     where DATA='Neural40' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Neural40' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 
'MODEL');
155026     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.NEURAL40_EMINFO.
      WHERE (DATA='Neural40') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

155027     data EMWS8.Neural40_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.Neural40_EMINFO;
155028     length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
155029     input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
155030     cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS8.NEURAL40_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   run;
155034     run;
155035     data EMWS8.Neural40_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural40_EMINFO;
155036     set EMWS8.Neural40_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural40_EMINFO WORK.MODELTEMP_INFO;
155037     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.NEURAL40_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.NEURAL40_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

155038     proc sort data = EMWS8.Neural40_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Neural40_EMINFO NOTHREADS;
155039     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
155040     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.NEURAL40_EMINFO.
NOTE: The data set EMWS8.NEURAL40_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

155041     proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
155042     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
155043     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS8.FIMPORT_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

155044     proc sort data = EMWS8.Neural40_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Neural40_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
155045     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
155046     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.NEURAL40_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

155047     data EMWS8.Neural40_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural40_EMINFO;
155048     merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
155049     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
155050     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.NEURAL40_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

155051     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
155052     delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
155053     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
155054     quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

NOTE: View EMWS8.NEURAL40_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: View EMWS8.NEURAL40_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
