MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "11.17 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                28. April 2016
Time:                11.17 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O0B94KVE 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural40\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O0B94KVE new;
MPRINT(EM_DIAGRAM):   run;
3204067    data work.outkey;
MPRINT(EM_DIAGRAM):    data work.outkey;
3204068    set EMWS8.Neural40_OUTKEY;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural40_OUTKEY;
3204069    if upcase(ROLE) = 'HIDDEN';
MPRINT(EM_DIAGRAM):   if upcase(ROLE) = 'HIDDEN';
3204070    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 48 observations read from the data set EMWS8.NEURAL40_OUTKEY.
NOTE: The data set WORK.OUTKEY has 5 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

3204071    filename emflow
3204071  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural40\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural40\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural40: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3204072    *------------------------------------------------------------*;
3204073    * Neural40: Scoring DATA data;
3204074    *------------------------------------------------------------*;
3204075    data EMWS8.Neural40_TRAIN
3204076    / view=EMWS8.Neural40_TRAIN
3204077    ;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural40_TRAIN / view=EMWS8.Neural40_TRAIN ;
3204078    set EMWS8.Meta3_TRAIN
3204079    ;
MPRINT(EM_DIAGRAM):   set EMWS8.Meta3_TRAIN ;
3204080    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural40\EMFLOWSCORE.sas.
3204081   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
3204082   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
3204083   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
3204084   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
3204085   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
3204086   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
3204087   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
3204088   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
3204089   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
3204090   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
3204091   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
3204092   +LENGTH _WARN_ $4
3204093   +      F_DepVar  $ 12
3204094   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
3204095   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
3204096   +
3204097   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
3204098   +
3204099   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
3204100   +
3204101   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
3204102   +
3204103   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
3204104   +
3204105   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
3204106   +
3204107   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
3204108   +
3204109   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
3204110   +
3204111   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
3204112   +
3204113   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
3204114   +
3204115   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
3204116   +
3204117   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
3204118   +
3204119   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
3204120   +
3204121   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
3204122   +
3204123   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
3204124   +
3204125   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
3204126   +
3204127   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
3204128   +
3204129   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
3204130   +
3204131   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
3204132   +
3204133   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
3204134   +
3204135   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
3204136   +
3204137   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
3204138   +
3204139   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
3204140   +
3204141   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
3204142   +
3204143   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
3204144   +
3204145   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
3204146   +
3204147   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
3204148   +
3204149   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
3204150   +
3204151   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
3204152   +
3204153   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
3204154   +
3204155   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
3204156   +
3204157   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
3204158   +
3204159   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
3204160   +
3204161   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
3204162   +
3204163   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
3204164   +
3204165   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
3204166   +
3204167   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
3204168   +
3204169   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
3204170   +
3204171   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
3204172   +
3204173   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
3204174   +
3204175   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
3204176   +
3204177   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
3204178   +
3204179   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
3204180   +
3204181   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
3204182   +
3204183   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
3204184   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
3204185   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
3204186   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
3204187   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3204188   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3204189   +end;
MPRINT(EM_DIAGRAM):   end;
3204190   +else do;
MPRINT(EM_DIAGRAM):   else do;
3204191   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
3204192   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
3204193   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3204194   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
3204195   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
3204196   +   end;
MPRINT(EM_DIAGRAM):   end;
3204197   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
3204198   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
3204199   +   end;
MPRINT(EM_DIAGRAM):   end;
3204200   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3204201   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
3204202   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
3204203   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3204204   +   end;
MPRINT(EM_DIAGRAM):   end;
3204205   +end;
MPRINT(EM_DIAGRAM):   end;
3204206   +
3204207   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
3204208   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
3204209   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
3204210   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
3204211   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3204212   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3204213   +end;
MPRINT(EM_DIAGRAM):   end;
3204214   +else do;
MPRINT(EM_DIAGRAM):   else do;
3204215   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
3204216   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
3204217   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3204218   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
3204219   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
3204220   +   end;
MPRINT(EM_DIAGRAM):   end;
3204221   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
3204222   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
3204223   +   end;
MPRINT(EM_DIAGRAM):   end;
3204224   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3204225   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
3204226   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
3204227   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3204228   +   end;
MPRINT(EM_DIAGRAM):   end;
3204229   +end;
MPRINT(EM_DIAGRAM):   end;
3204230   +
3204231   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
3204232   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
3204233   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
3204234   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
3204235   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3204236   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3204237   +end;
MPRINT(EM_DIAGRAM):   end;
3204238   +else do;
MPRINT(EM_DIAGRAM):   else do;
3204239   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
3204240   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
3204241   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3204242   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
3204243   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
3204244   +   end;
MPRINT(EM_DIAGRAM):   end;
3204245   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
3204246   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
3204247   +   end;
MPRINT(EM_DIAGRAM):   end;
3204248   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3204249   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
3204250   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
3204251   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3204252   +   end;
MPRINT(EM_DIAGRAM):   end;
3204253   +end;
MPRINT(EM_DIAGRAM):   end;
3204254   +
3204255   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
3204256   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
3204257   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
3204258   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
3204259   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3204260   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3204261   +end;
MPRINT(EM_DIAGRAM):   end;
3204262   +else do;
MPRINT(EM_DIAGRAM):   else do;
3204263   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
3204264   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
3204265   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3204266   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
3204267   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
3204268   +   end;
MPRINT(EM_DIAGRAM):   end;
3204269   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
3204270   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
3204271   +   end;
MPRINT(EM_DIAGRAM):   end;
3204272   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3204273   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
3204274   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
3204275   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3204276   +   end;
MPRINT(EM_DIAGRAM):   end;
3204277   +end;
MPRINT(EM_DIAGRAM):   end;
3204278   +
3204279   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
3204280   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
3204281   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
3204282   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
3204283   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3204284   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3204285   +end;
MPRINT(EM_DIAGRAM):   end;
3204286   +else do;
MPRINT(EM_DIAGRAM):   else do;
3204287   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
3204288   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
3204289   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3204290   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
3204291   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
3204292   +   end;
MPRINT(EM_DIAGRAM):   end;
3204293   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
3204294   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
3204295   +   end;
MPRINT(EM_DIAGRAM):   end;
3204296   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3204297   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
3204298   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
3204299   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3204300   +   end;
MPRINT(EM_DIAGRAM):   end;
3204301   +end;
MPRINT(EM_DIAGRAM):   end;
3204302   +
3204303   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
3204304   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
3204305   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
3204306   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
3204307   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3204308   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3204309   +end;
MPRINT(EM_DIAGRAM):   end;
3204310   +else do;
MPRINT(EM_DIAGRAM):   else do;
3204311   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
3204312   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
3204313   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3204314   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
3204315   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
3204316   +   end;
MPRINT(EM_DIAGRAM):   end;
3204317   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
3204318   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
3204319   +   end;
MPRINT(EM_DIAGRAM):   end;
3204320   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3204321   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
3204322   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
3204323   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3204324   +   end;
MPRINT(EM_DIAGRAM):   end;
3204325   +end;
MPRINT(EM_DIAGRAM):   end;
3204326   +
3204327   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
3204328   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
3204329   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
3204330   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
3204331   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3204332   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3204333   +end;
MPRINT(EM_DIAGRAM):   end;
3204334   +else do;
MPRINT(EM_DIAGRAM):   else do;
3204335   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
3204336   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
3204337   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3204338   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
3204339   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
3204340   +   end;
MPRINT(EM_DIAGRAM):   end;
3204341   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
3204342   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
3204343   +   end;
MPRINT(EM_DIAGRAM):   end;
3204344   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3204345   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
3204346   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
3204347   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3204348   +   end;
MPRINT(EM_DIAGRAM):   end;
3204349   +end;
MPRINT(EM_DIAGRAM):   end;
3204350   +
3204351   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
3204352   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
3204353   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
3204354   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
3204355   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
3204356   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
3204357   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
3204358   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
3204359   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
3204360   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
3204361   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
3204362   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
3204363   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3204364   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3204365   +end;
MPRINT(EM_DIAGRAM):   end;
3204366   +else do;
MPRINT(EM_DIAGRAM):   else do;
3204367   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
3204368   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
3204369   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3204370   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
3204371   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
3204372   +   end;
MPRINT(EM_DIAGRAM):   end;
3204373   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
3204374   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
3204375   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
3204376   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
3204377   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
3204378   +   end;
MPRINT(EM_DIAGRAM):   end;
3204379   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
3204380   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
3204381   +   end;
MPRINT(EM_DIAGRAM):   end;
3204382   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
3204383   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
3204384   +   end;
MPRINT(EM_DIAGRAM):   end;
3204385   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
3204386   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
3204387   +   end;
MPRINT(EM_DIAGRAM):   end;
3204388   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3204389   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
3204390   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
3204391   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
3204392   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
3204393   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
3204394   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3204395   +   end;
MPRINT(EM_DIAGRAM):   end;
3204396   +end;
MPRINT(EM_DIAGRAM):   end;
3204397   +
3204398   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
3204399   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
3204400   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
3204401   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
3204402   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
3204403   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
3204404   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
3204405   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
3204406   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
3204407   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
3204408   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
3204409   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
3204410   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
3204411   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3204412   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3204413   +end;
MPRINT(EM_DIAGRAM):   end;
3204414   +else do;
MPRINT(EM_DIAGRAM):   else do;
3204415   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
3204416   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
3204417   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3204418   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
3204419   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
3204420   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
3204421   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
3204422   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
3204423   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3204424   +         end;
MPRINT(EM_DIAGRAM):   end;
3204425   +         else do;
MPRINT(EM_DIAGRAM):   else do;
3204426   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
3204427   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
3204428   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3204429   +            end;
MPRINT(EM_DIAGRAM):   end;
3204430   +         end;
MPRINT(EM_DIAGRAM):   end;
3204431   +      end;
MPRINT(EM_DIAGRAM):   end;
3204432   +      else do;
MPRINT(EM_DIAGRAM):   else do;
3204433   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
3204434   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
3204435   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3204436   +         end;
MPRINT(EM_DIAGRAM):   end;
3204437   +      end;
MPRINT(EM_DIAGRAM):   end;
3204438   +   end;
MPRINT(EM_DIAGRAM):   end;
3204439   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3204440   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
3204441   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
3204442   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3204443   +      end;
MPRINT(EM_DIAGRAM):   end;
3204444   +      else do;
MPRINT(EM_DIAGRAM):   else do;
3204445   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
3204446   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
3204447   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
3204448   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
3204449   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
3204450   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3204451   +         end;
MPRINT(EM_DIAGRAM):   end;
3204452   +      end;
MPRINT(EM_DIAGRAM):   end;
3204453   +   end;
MPRINT(EM_DIAGRAM):   end;
3204454   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
3204455   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
3204456   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
3204457   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
3204458   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
3204459   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
3204460   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3204461   +   end;
MPRINT(EM_DIAGRAM):   end;
3204462   +end;
MPRINT(EM_DIAGRAM):   end;
3204463   +
3204464   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3204465   +*** Checking missing input Interval
3204466   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
3204467   +
3204468   +IF NMISS(
3204469   +   AcceptedCmpTotal ,
3204470   +   Age ,
3204471   +   Frq ,
3204472   +   Income ,
3204473   +   Kidhome ,
3204474   +   MntFishProducts ,
3204475   +   MntFruits ,
3204476   +   MntGoldProds ,
3204477   +   MntSweetProducts ,
3204478   +   MonthsAsCustomer ,
3204479   +   NumDealsPurchases ,
3204480   +   NumWebVisitsMonth ,
3204481   +   RFMstat ,
3204482   +   RMntFrq ,
3204483   +   Recency ,
3204484   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
3204485   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
3204486   +
3204487   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3204488   +END;
MPRINT(EM_DIAGRAM):   END;
3204489   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3204490   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
3204491   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3204492   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3204493   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
3204494   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
3204495   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
3204496   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
3204497   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
3204498   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
3204499   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
3204500   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
3204501   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
3204502   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
3204503   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
3204504   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
3204505   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
3204506   +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
3204507   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
3204508   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
3204509   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
3204510   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
3204511   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
3204512   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
3204513   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
3204514   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
3204515   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
3204516   +END;
MPRINT(EM_DIAGRAM):   END;
3204517   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3204518   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
3204519   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
3204520   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
3204521   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
3204522   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
3204523   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
3204524   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
3204525   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
3204526   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
3204527   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
3204528   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
3204529   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
3204530   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
3204531   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
3204532   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
3204533   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
3204534   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
3204535   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
3204536   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
3204537   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
3204538   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
3204539   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
3204540   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
3204541   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
3204542   +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
3204543   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
3204544   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
3204545   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
3204546   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
3204547   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
3204548   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
3204549   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
3204550   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
3204551   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
3204552   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
3204553   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
3204554   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
3204555   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
3204556   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
3204557   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
3204558   +END;
MPRINT(EM_DIAGRAM):   END;
3204559   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3204560   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
3204561   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3204562   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3204563   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
3204564   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3204565   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3204566   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
3204567   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3204568   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3204569   +   H11  =     0.00871038651131 * S_AcceptedCmpTotal  +     0.04885111887799 *
3204570   +        S_Age  +    -0.16081720955101 * S_Frq  +    -0.81673231415398 *
3204571   +        S_Income  +     0.39760289149752 * S_Kidhome
3204572   +          +     -0.0376693415484 * S_MntFishProducts
3204573   +          +     0.01707556953741 * S_MntFruits  +     0.03640992016126 *
3204574   +        S_MntGoldProds  +     0.18721014378487 * S_MntSweetProducts
3204575   +          +    -0.13043754404228 * S_MonthsAsCustomer
3204576   +          +     -0.0139146653349 * S_NumDealsPurchases
3204577   +          +    -0.01539820220757 * S_NumWebVisitsMonth
3204578   +          +     0.00494819481975 * S_RFMstat  +    -0.22517942530642 *
3204579   +        S_RMntFrq  +     0.55149605442396 * S_Recency
3204580   +          +     0.54614592562743 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.00871038651131 * S_AcceptedCmpTotal + 0.04885111887799 * S_Age + 
-0.16081720955101 * S_Frq + -0.81673231415398 * S_Income + 0.39760289149752 * S_Kidhome + 
-0.0376693415484 * S_MntFishProducts + 0.01707556953741 * S_MntFruits + 0.03640992016126 * 
S_MntGoldProds + 0.18721014378487 * S_MntSweetProducts + -0.13043754404228 * 
S_MonthsAsCustomer + -0.0139146653349 * S_NumDealsPurchases + -0.01539820220757 * 
S_NumWebVisitsMonth + 0.00494819481975 * S_RFMstat + -0.22517942530642 * S_RMntFrq + 
0.55149605442396 * S_Recency + 0.54614592562743 * S_Teenhome ;
3204581   +   H12  =    -0.31218916782956 * S_AcceptedCmpTotal  +    -0.13577174745207 *
3204582   +        S_Age  +     -0.1133596721701 * S_Frq  +    -0.03250630326063 *
3204583   +        S_Income  +     0.31208673256073 * S_Kidhome
3204584   +          +    -0.04911763008195 * S_MntFishProducts
3204585   +          +     0.04440357574827 * S_MntFruits  +     0.18064625439163 *
3204586   +        S_MntGoldProds  +     0.34124097901137 * S_MntSweetProducts
3204587   +          +    -0.48577934340503 * S_MonthsAsCustomer
3204588   +          +     0.31218334237091 * S_NumDealsPurchases
3204589   +          +     0.24212805498377 * S_NumWebVisitsMonth
3204590   +          +     0.30439494800184 * S_RFMstat  +    -0.01845944589462 *
3204591   +        S_RMntFrq  +    -0.48513476805321 * S_Recency
3204592   +          +    -0.32721006241811 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.31218916782956 * S_AcceptedCmpTotal + -0.13577174745207 * S_Age 
+ -0.1133596721701 * S_Frq + -0.03250630326063 * S_Income + 0.31208673256073 * S_Kidhome + 
-0.04911763008195 * S_MntFishProducts + 0.04440357574827 * S_MntFruits + 0.18064625439163 * 
S_MntGoldProds + 0.34124097901137 * S_MntSweetProducts + -0.48577934340503 * 
S_MonthsAsCustomer + 0.31218334237091 * S_NumDealsPurchases + 0.24212805498377 * 
S_NumWebVisitsMonth + 0.30439494800184 * S_RFMstat + -0.01845944589462 * S_RMntFrq + 
-0.48513476805321 * S_Recency + -0.32721006241811 * S_Teenhome ;
3204593   +   H13  =    -0.68076549765273 * S_AcceptedCmpTotal  +    -0.14510411148941 *
3204594   +        S_Age  +     -0.3233004374436 * S_Frq  +    -0.42499945066724 *
3204595   +        S_Income  +    -0.48748003518551 * S_Kidhome
3204596   +          +     0.15434683428908 * S_MntFishProducts
3204597   +          +     0.06482294164983 * S_MntFruits  +    -0.54308686262134 *
3204598   +        S_MntGoldProds  +    -0.03954494482452 * S_MntSweetProducts
3204599   +          +    -0.07405705160744 * S_MonthsAsCustomer
3204600   +          +    -0.44979778263337 * S_NumDealsPurchases
3204601   +          +    -0.51422673599958 * S_NumWebVisitsMonth
3204602   +          +    -0.31727878849334 * S_RFMstat  +    -0.49659927360573 *
3204603   +        S_RMntFrq  +     0.79850779605341 * S_Recency
3204604   +          +    -0.01021777395977 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.68076549765273 * S_AcceptedCmpTotal + -0.14510411148941 * S_Age 
+ -0.3233004374436 * S_Frq + -0.42499945066724 * S_Income + -0.48748003518551 * S_Kidhome + 
0.15434683428908 * S_MntFishProducts + 0.06482294164983 * S_MntFruits + -0.54308686262134 * 
S_MntGoldProds + -0.03954494482452 * S_MntSweetProducts + -0.07405705160744 * 
S_MonthsAsCustomer + -0.44979778263337 * S_NumDealsPurchases + -0.51422673599958 * 
S_NumWebVisitsMonth + -0.31727878849334 * S_RFMstat + -0.49659927360573 * S_RMntFrq + 
0.79850779605341 * S_Recency + -0.01021777395977 * S_Teenhome ;
3204605   +   H14  =     0.38365136681667 * S_AcceptedCmpTotal  +     0.07084748712672 *
3204606   +        S_Age  +     0.07185932608666 * S_Frq  +     0.14505870102604 *
3204607   +        S_Income  +    -0.62401744170985 * S_Kidhome
3204608   +          +    -0.08499883212951 * S_MntFishProducts
3204609   +          +     -0.1648853454448 * S_MntFruits  +    -0.00355780886042 *
3204610   +        S_MntGoldProds  +    -0.29925551636086 * S_MntSweetProducts
3204611   +          +    -0.04051431518694 * S_MonthsAsCustomer
3204612   +          +     0.00788125797776 * S_NumDealsPurchases
3204613   +          +     0.59495434076477 * S_NumWebVisitsMonth
3204614   +          +     0.24302483463729 * S_RFMstat  +    -0.16358266655642 *
3204615   +        S_RMntFrq  +    -0.73053231334164 * S_Recency
3204616   +          +    -0.33321827557738 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 0.38365136681667 * S_AcceptedCmpTotal + 0.07084748712672 * S_Age + 
0.07185932608666 * S_Frq + 0.14505870102604 * S_Income + -0.62401744170985 * S_Kidhome + 
-0.08499883212951 * S_MntFishProducts + -0.1648853454448 * S_MntFruits + -0.00355780886042 * 
S_MntGoldProds + -0.29925551636086 * S_MntSweetProducts + -0.04051431518694 * 
S_MonthsAsCustomer + 0.00788125797776 * S_NumDealsPurchases + 0.59495434076477 * 
S_NumWebVisitsMonth + 0.24302483463729 * S_RFMstat + -0.16358266655642 * S_RMntFrq + 
-0.73053231334164 * S_Recency + -0.33321827557738 * S_Teenhome ;
3204617   +   H15  =    -0.33763603932626 * S_AcceptedCmpTotal  +     0.16015390350682 *
3204618   +        S_Age  +     0.93534536415494 * S_Frq  +     0.26932392970726 *
3204619   +        S_Income  +     -0.0256051183156 * S_Kidhome
3204620   +          +    -0.15661247042419 * S_MntFishProducts
3204621   +          +     0.05583315238736 * S_MntFruits  +     0.02103897411055 *
3204622   +        S_MntGoldProds  +     -0.1231125389085 * S_MntSweetProducts
3204623   +          +     0.03994503424293 * S_MonthsAsCustomer
3204624   +          +    -0.53734193208154 * S_NumDealsPurchases
3204625   +          +    -0.58547802324835 * S_NumWebVisitsMonth
3204626   +          +    -0.06088682875304 * S_RFMstat  +    -0.16953747051887 *
3204627   +        S_RMntFrq  +     0.66048924026365 * S_Recency
3204628   +          +    -0.18125808371879 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = -0.33763603932626 * S_AcceptedCmpTotal + 0.16015390350682 * S_Age 
+ 0.93534536415494 * S_Frq + 0.26932392970726 * S_Income + -0.0256051183156 * S_Kidhome + 
-0.15661247042419 * S_MntFishProducts + 0.05583315238736 * S_MntFruits + 0.02103897411055 * 
S_MntGoldProds + -0.1231125389085 * S_MntSweetProducts + 0.03994503424293 * S_MonthsAsCustomer 
+ -0.53734193208154 * S_NumDealsPurchases + -0.58547802324835 * S_NumWebVisitsMonth + 
-0.06088682875304 * S_RFMstat + -0.16953747051887 * S_RMntFrq + 0.66048924026365 * S_Recency + 
-0.18125808371879 * S_Teenhome ;
3204629   +   H11  = H11  +     0.32214548124302 * AcceptedCmp10
3204630   +          +     0.39647739988372 * AcceptedCmp20  +     0.31108042021128 *
3204631   +        AcceptedCmp30  +     0.29806974935147 * AcceptedCmp40
3204632   +          +     0.22776887209675 * AcceptedCmp50  +     0.15240663199135 *
3204633   +        Complain0  +    -0.29371842867452 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.32214548124302 * AcceptedCmp10 + 0.39647739988372 * 
AcceptedCmp20 + 0.31108042021128 * AcceptedCmp30 + 0.29806974935147 * AcceptedCmp40 + 
0.22776887209675 * AcceptedCmp50 + 0.15240663199135 * Complain0 + -0.29371842867452 * 
HigherEducationBinary0 ;
3204634   +   H12  = H12  +     0.16508910764131 * AcceptedCmp10
3204635   +          +    -0.01591698903562 * AcceptedCmp20  +    -0.18749319390831 *
3204636   +        AcceptedCmp30  +     0.10267845517937 * AcceptedCmp40
3204637   +          +     0.26889478167941 * AcceptedCmp50  +     0.21127321497252 *
3204638   +        Complain0  +     0.26244151632714 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.16508910764131 * AcceptedCmp10 + -0.01591698903562 * 
AcceptedCmp20 + -0.18749319390831 * AcceptedCmp30 + 0.10267845517937 * AcceptedCmp40 + 
0.26889478167941 * AcceptedCmp50 + 0.21127321497252 * Complain0 + 0.26244151632714 * 
HigherEducationBinary0 ;
3204639   +   H13  = H13  +     -0.1188260559539 * AcceptedCmp10
3204640   +          +    -0.14527518577208 * AcceptedCmp20  +     0.15234135364477 *
3204641   +        AcceptedCmp30  +    -0.09444923232962 * AcceptedCmp40
3204642   +          +     0.19708535923248 * AcceptedCmp50  +    -0.29618019247654 *
3204643   +        Complain0  +     0.12575052691333 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.1188260559539 * AcceptedCmp10 + -0.14527518577208 * 
AcceptedCmp20 + 0.15234135364477 * AcceptedCmp30 + -0.09444923232962 * AcceptedCmp40 + 
0.19708535923248 * AcceptedCmp50 + -0.29618019247654 * Complain0 + 0.12575052691333 * 
HigherEducationBinary0 ;
3204644   +   H14  = H14  +     0.22744978434743 * AcceptedCmp10
3204645   +          +    -0.01189686575388 * AcceptedCmp20  +    -0.32196819611195 *
3204646   +        AcceptedCmp30  +     0.01600068421368 * AcceptedCmp40
3204647   +          +     0.00556822856215 * AcceptedCmp50  +     0.18009079154413 *
3204648   +        Complain0  +     0.03016266549641 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.22744978434743 * AcceptedCmp10 + -0.01189686575388 * 
AcceptedCmp20 + -0.32196819611195 * AcceptedCmp30 + 0.01600068421368 * AcceptedCmp40 + 
0.00556822856215 * AcceptedCmp50 + 0.18009079154413 * Complain0 + 0.03016266549641 * 
HigherEducationBinary0 ;
3204649   +   H15  = H15  +     0.52725777941338 * AcceptedCmp10
3204650   +          +     0.01843467049946 * AcceptedCmp20  +     0.47168025621809 *
3204651   +        AcceptedCmp30  +    -0.05224480469429 * AcceptedCmp40
3204652   +          +     0.29146234318613 * AcceptedCmp50  +     0.05946217105031 *
3204653   +        Complain0  +     0.16683238673979 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.52725777941338 * AcceptedCmp10 + 0.01843467049946 * 
AcceptedCmp20 + 0.47168025621809 * AcceptedCmp30 + -0.05224480469429 * AcceptedCmp40 + 
0.29146234318613 * AcceptedCmp50 + 0.05946217105031 * Complain0 + 0.16683238673979 * 
HigherEducationBinary0 ;
3204654   +   H11  = H11  +     0.02840049264257 * Education2n_Cycle
3204655   +          +    -0.12984345243569 * EducationBasic  +    -0.10299098163695 *
3204656   +        EducationGraduation  +     0.23295390047952 * EducationMaster
3204657   +          +    -0.41529808115031 * Marital_StatusDivorced
3204658   +          +     0.65264978817749 * Marital_StatusMarried
3204659   +          +    -0.52150453945732 * Marital_StatusSingle
3204660   +          +     0.69963607397544 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.02840049264257 * Education2n_Cycle + -0.12984345243569 * 
EducationBasic + -0.10299098163695 * EducationGraduation + 0.23295390047952 * EducationMaster 
+ -0.41529808115031 * Marital_StatusDivorced + 0.65264978817749 * Marital_StatusMarried + 
-0.52150453945732 * Marital_StatusSingle + 0.69963607397544 * Marital_StatusTogether ;
3204661   +   H12  = H12  +    -0.18683184010407 * Education2n_Cycle
3204662   +          +    -0.04325754530797 * EducationBasic  +     0.25926294135162 *
3204663   +        EducationGraduation  +     0.04425534246646 * EducationMaster
3204664   +          +    -0.32207382402099 * Marital_StatusDivorced
3204665   +          +     0.16112567537413 * Marital_StatusMarried
3204666   +          +     0.28859198712458 * Marital_StatusSingle
3204667   +          +    -0.31707896724726 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.18683184010407 * Education2n_Cycle + -0.04325754530797 * 
EducationBasic + 0.25926294135162 * EducationGraduation + 0.04425534246646 * EducationMaster + 
-0.32207382402099 * Marital_StatusDivorced + 0.16112567537413 * Marital_StatusMarried + 
0.28859198712458 * Marital_StatusSingle + -0.31707896724726 * Marital_StatusTogether ;
3204668   +   H13  = H13  +     0.03402340531236 * Education2n_Cycle
3204669   +          +     0.17313991053917 * EducationBasic  +    -0.24806694961277 *
3204670   +        EducationGraduation  +    -0.16283334360744 * EducationMaster
3204671   +          +    -0.06823118087629 * Marital_StatusDivorced
3204672   +          +    -0.01696675344176 * Marital_StatusMarried
3204673   +          +    -0.04922830766868 * Marital_StatusSingle
3204674   +          +    -0.15449558545998 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.03402340531236 * Education2n_Cycle + 0.17313991053917 * 
EducationBasic + -0.24806694961277 * EducationGraduation + -0.16283334360744 * EducationMaster 
+ -0.06823118087629 * Marital_StatusDivorced + -0.01696675344176 * Marital_StatusMarried + 
-0.04922830766868 * Marital_StatusSingle + -0.15449558545998 * Marital_StatusTogether ;
3204675   +   H14  = H14  +     0.04419529419265 * Education2n_Cycle
3204676   +          +     0.10023190362026 * EducationBasic  +     0.23777777952905 *
3204677   +        EducationGraduation  +     -0.1779877655909 * EducationMaster
3204678   +          +     0.20346888384065 * Marital_StatusDivorced
3204679   +          +     -0.5246097720646 * Marital_StatusMarried
3204680   +          +     0.50991923175058 * Marital_StatusSingle
3204681   +          +    -0.15346924309445 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.04419529419265 * Education2n_Cycle + 0.10023190362026 * 
EducationBasic + 0.23777777952905 * EducationGraduation + -0.1779877655909 * EducationMaster + 
0.20346888384065 * Marital_StatusDivorced + -0.5246097720646 * Marital_StatusMarried + 
0.50991923175058 * Marital_StatusSingle + -0.15346924309445 * Marital_StatusTogether ;
3204682   +   H15  = H15  +     -0.0859109352002 * Education2n_Cycle
3204683   +          +     0.23688872874499 * EducationBasic  +      0.0044459307881 *
3204684   +        EducationGraduation  +     0.03117170136897 * EducationMaster
3204685   +          +    -0.14128509643843 * Marital_StatusDivorced
3204686   +          +    -0.17344467864829 * Marital_StatusMarried
3204687   +          +     0.09201105049634 * Marital_StatusSingle
3204688   +          +     0.03562553790735 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.0859109352002 * Education2n_Cycle + 0.23688872874499 * 
EducationBasic + 0.0044459307881 * EducationGraduation + 0.03117170136897 * EducationMaster + 
-0.14128509643843 * Marital_StatusDivorced + -0.17344467864829 * Marital_StatusMarried + 
0.09201105049634 * Marital_StatusSingle + 0.03562553790735 * Marital_StatusTogether ;
3204689   +   H11  =     0.44460027749342 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.44460027749342 + H11 ;
3204690   +   H12  =    -0.95819350927335 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.95819350927335 + H12 ;
3204691   +   H13  =    -0.44968673753742 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.44968673753742 + H13 ;
3204692   +   H14  =     0.53878131931255 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.53878131931255 + H14 ;
3204693   +   H15  =     0.82891048270823 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 0.82891048270823 + H15 ;
3204694   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
3204695   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
3204696   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
3204697   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
3204698   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
3204699   +END;
MPRINT(EM_DIAGRAM):   END;
3204700   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3204701   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
3204702   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
3204703   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
3204704   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
3204705   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
3204706   +END;
MPRINT(EM_DIAGRAM):   END;
3204707   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3204708   +*** Writing the Node DepVar ;
The SAS System

MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
3204709   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3204710   +
3204711   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
3204712   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
3204713   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
3204714   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
3204715   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
3204716   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3204717   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
3204718   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
3204719   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
3204720   +end;
MPRINT(EM_DIAGRAM):   end;
3204721   +else do;
MPRINT(EM_DIAGRAM):   else do;
3204722   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
3204723   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
3204724   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
3204725   +   end;
MPRINT(EM_DIAGRAM):   end;
3204726   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
3204727   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
3204728   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
3204729   +   end;
MPRINT(EM_DIAGRAM):   end;
3204730   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3204731   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
3204732   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
3204733   +   end;
MPRINT(EM_DIAGRAM):   end;
3204734   +end;
MPRINT(EM_DIAGRAM):   end;
3204735   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3204736   +   P_DepVar1  =    -3.09211467027119 * H11  +      0.8780551921753 * H12
3204737   +          +    -2.64280779387115 * H13  +     1.47258844960489 * H14
3204738   +          +     -1.9161512747512 * H15 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.09211467027119 * H11 + 0.8780551921753 * H12 + 
-2.64280779387115 * H13 + 1.47258844960489 * H14 + -1.9161512747512 * H15 ;
3204739   +   P_DepVar1  =    -1.84694532241195 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.84694532241195 + P_DepVar1 ;
3204740   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
3204741   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
3204742   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
3204743   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
3204744   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
3204745   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
3204746   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
3204747   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
3204748   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
3204749   +END;
MPRINT(EM_DIAGRAM):   END;
3204750   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3204751   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
3204752   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
3204753   +END;
MPRINT(EM_DIAGRAM):   END;
3204754   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
3204755   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
3204756   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
3204757   +END;
MPRINT(EM_DIAGRAM):   END;
3204758   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
3204759   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
3204760   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
3204761   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
3204762   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
3204763   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
3204764   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
3204765   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3204766   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
3204767   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3204768   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
3204769   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
3204770   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
3204771   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
3204772   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
3204773   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
3204774   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
3204775   +END;
MPRINT(EM_DIAGRAM):   END;
3204776   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
3204777   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
3204778   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
3204779   +drop
3204780   +H11
3204781   +H12
3204782   +H13
3204783   +H14
3204784   +H15
3204785   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 ;
3204786   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
3204787    run;

NOTE: DATA STEP view saved on file EMWS8.NEURAL40_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.META3_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_DIAGRAM):   quit;
3204788    quit;
3204789    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
3204790    filename emflow
3204790  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural40\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural40\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural40: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3204791    *------------------------------------------------------------*;
3204792    * Neural40: Scoring VALIDATE data;
3204793    *------------------------------------------------------------*;
3204794    data EMWS8.Neural40_VALIDATE
3204795    / view=EMWS8.Neural40_VALIDATE
3204796    ;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural40_VALIDATE / view=EMWS8.Neural40_VALIDATE ;
3204797    set EMWS8.Meta3_VALIDATE
3204798    ;
MPRINT(EM_DIAGRAM):   set EMWS8.Meta3_VALIDATE ;
3204799    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural40\EMFLOWSCORE.sas.
3204800   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
3204801   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
3204802   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
3204803   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
3204804   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
3204805   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
3204806   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
3204807   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
3204808   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
3204809   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
3204810   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
3204811   +LENGTH _WARN_ $4
3204812   +      F_DepVar  $ 12
3204813   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
3204814   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
3204815   +
3204816   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
3204817   +
3204818   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
3204819   +
3204820   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
3204821   +
3204822   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
3204823   +
3204824   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
3204825   +
3204826   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
3204827   +
3204828   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
3204829   +
3204830   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
3204831   +
3204832   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
3204833   +
3204834   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
3204835   +
3204836   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
3204837   +
3204838   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
3204839   +
3204840   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
3204841   +
3204842   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
3204843   +
3204844   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
3204845   +
3204846   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
3204847   +
3204848   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
3204849   +
3204850   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
3204851   +
3204852   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
3204853   +
3204854   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
3204855   +
3204856   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
3204857   +
3204858   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
3204859   +
3204860   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
3204861   +
3204862   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
3204863   +
3204864   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
3204865   +
3204866   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
3204867   +
3204868   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
3204869   +
3204870   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
3204871   +
3204872   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
3204873   +
3204874   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
3204875   +
3204876   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
3204877   +
3204878   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
3204879   +
3204880   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
3204881   +
3204882   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
3204883   +
3204884   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
3204885   +
3204886   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
3204887   +
3204888   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
3204889   +
3204890   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
3204891   +
3204892   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
3204893   +
3204894   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
3204895   +
3204896   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
3204897   +
3204898   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
3204899   +
3204900   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
3204901   +
3204902   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
3204903   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
3204904   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
3204905   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
3204906   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3204907   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3204908   +end;
MPRINT(EM_DIAGRAM):   end;
3204909   +else do;
MPRINT(EM_DIAGRAM):   else do;
3204910   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
3204911   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
3204912   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3204913   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
3204914   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
3204915   +   end;
MPRINT(EM_DIAGRAM):   end;
3204916   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
3204917   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
3204918   +   end;
MPRINT(EM_DIAGRAM):   end;
3204919   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3204920   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
3204921   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
3204922   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3204923   +   end;
MPRINT(EM_DIAGRAM):   end;
3204924   +end;
MPRINT(EM_DIAGRAM):   end;
3204925   +
3204926   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
3204927   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
3204928   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
3204929   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
3204930   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3204931   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3204932   +end;
MPRINT(EM_DIAGRAM):   end;
3204933   +else do;
MPRINT(EM_DIAGRAM):   else do;
3204934   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
3204935   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
3204936   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3204937   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
3204938   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
3204939   +   end;
MPRINT(EM_DIAGRAM):   end;
3204940   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
3204941   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
3204942   +   end;
MPRINT(EM_DIAGRAM):   end;
3204943   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3204944   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
3204945   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
3204946   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3204947   +   end;
MPRINT(EM_DIAGRAM):   end;
3204948   +end;
MPRINT(EM_DIAGRAM):   end;
3204949   +
3204950   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
3204951   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
3204952   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
3204953   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
3204954   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3204955   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3204956   +end;
MPRINT(EM_DIAGRAM):   end;
3204957   +else do;
MPRINT(EM_DIAGRAM):   else do;
3204958   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
3204959   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
3204960   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3204961   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
3204962   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
3204963   +   end;
MPRINT(EM_DIAGRAM):   end;
3204964   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
3204965   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
3204966   +   end;
MPRINT(EM_DIAGRAM):   end;
3204967   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3204968   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
3204969   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
3204970   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3204971   +   end;
MPRINT(EM_DIAGRAM):   end;
3204972   +end;
MPRINT(EM_DIAGRAM):   end;
3204973   +
3204974   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
3204975   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
3204976   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
3204977   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
3204978   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3204979   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3204980   +end;
MPRINT(EM_DIAGRAM):   end;
3204981   +else do;
MPRINT(EM_DIAGRAM):   else do;
3204982   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
3204983   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
3204984   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3204985   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
3204986   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
3204987   +   end;
MPRINT(EM_DIAGRAM):   end;
3204988   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
3204989   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
3204990   +   end;
MPRINT(EM_DIAGRAM):   end;
3204991   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3204992   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
3204993   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
3204994   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3204995   +   end;
MPRINT(EM_DIAGRAM):   end;
3204996   +end;
MPRINT(EM_DIAGRAM):   end;
3204997   +
3204998   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
3204999   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
3205000   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
3205001   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
3205002   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3205003   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3205004   +end;
MPRINT(EM_DIAGRAM):   end;
3205005   +else do;
MPRINT(EM_DIAGRAM):   else do;
3205006   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
3205007   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
3205008   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3205009   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
3205010   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
3205011   +   end;
MPRINT(EM_DIAGRAM):   end;
3205012   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
3205013   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
3205014   +   end;
MPRINT(EM_DIAGRAM):   end;
3205015   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3205016   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
3205017   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
3205018   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3205019   +   end;
MPRINT(EM_DIAGRAM):   end;
3205020   +end;
MPRINT(EM_DIAGRAM):   end;
3205021   +
3205022   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
3205023   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
3205024   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
3205025   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
3205026   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3205027   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3205028   +end;
MPRINT(EM_DIAGRAM):   end;
3205029   +else do;
MPRINT(EM_DIAGRAM):   else do;
3205030   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
3205031   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
3205032   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3205033   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
3205034   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
3205035   +   end;
MPRINT(EM_DIAGRAM):   end;
3205036   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
3205037   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
3205038   +   end;
MPRINT(EM_DIAGRAM):   end;
3205039   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3205040   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
3205041   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
3205042   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3205043   +   end;
MPRINT(EM_DIAGRAM):   end;
3205044   +end;
MPRINT(EM_DIAGRAM):   end;
3205045   +
3205046   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
3205047   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
3205048   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
3205049   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
3205050   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3205051   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3205052   +end;
MPRINT(EM_DIAGRAM):   end;
3205053   +else do;
MPRINT(EM_DIAGRAM):   else do;
3205054   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
3205055   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
3205056   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3205057   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
3205058   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
3205059   +   end;
MPRINT(EM_DIAGRAM):   end;
3205060   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
3205061   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
3205062   +   end;
MPRINT(EM_DIAGRAM):   end;
3205063   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3205064   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
3205065   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
3205066   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3205067   +   end;
MPRINT(EM_DIAGRAM):   end;
3205068   +end;
MPRINT(EM_DIAGRAM):   end;
3205069   +
3205070   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
3205071   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
3205072   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
3205073   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
3205074   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
3205075   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
3205076   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
3205077   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
3205078   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
3205079   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
3205080   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
3205081   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
3205082   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3205083   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3205084   +end;
MPRINT(EM_DIAGRAM):   end;
3205085   +else do;
MPRINT(EM_DIAGRAM):   else do;
3205086   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
3205087   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
3205088   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3205089   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
3205090   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
3205091   +   end;
MPRINT(EM_DIAGRAM):   end;
3205092   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
3205093   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
3205094   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
3205095   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
3205096   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
3205097   +   end;
MPRINT(EM_DIAGRAM):   end;
3205098   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
3205099   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
3205100   +   end;
MPRINT(EM_DIAGRAM):   end;
3205101   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
3205102   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
3205103   +   end;
MPRINT(EM_DIAGRAM):   end;
3205104   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
3205105   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
3205106   +   end;
MPRINT(EM_DIAGRAM):   end;
3205107   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3205108   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
3205109   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
3205110   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
3205111   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
3205112   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
3205113   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3205114   +   end;
MPRINT(EM_DIAGRAM):   end;
3205115   +end;
MPRINT(EM_DIAGRAM):   end;
3205116   +
3205117   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
3205118   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
3205119   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
3205120   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
3205121   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
3205122   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
3205123   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
3205124   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
3205125   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
3205126   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
3205127   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
3205128   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
3205129   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
3205130   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3205131   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3205132   +end;
MPRINT(EM_DIAGRAM):   end;
3205133   +else do;
MPRINT(EM_DIAGRAM):   else do;
3205134   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
3205135   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
3205136   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3205137   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
3205138   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
3205139   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
3205140   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
3205141   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
3205142   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3205143   +         end;
MPRINT(EM_DIAGRAM):   end;
3205144   +         else do;
MPRINT(EM_DIAGRAM):   else do;
3205145   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
3205146   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
3205147   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3205148   +            end;
MPRINT(EM_DIAGRAM):   end;
3205149   +         end;
MPRINT(EM_DIAGRAM):   end;
3205150   +      end;
MPRINT(EM_DIAGRAM):   end;
3205151   +      else do;
MPRINT(EM_DIAGRAM):   else do;
3205152   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
3205153   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
3205154   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3205155   +         end;
MPRINT(EM_DIAGRAM):   end;
3205156   +      end;
MPRINT(EM_DIAGRAM):   end;
3205157   +   end;
MPRINT(EM_DIAGRAM):   end;
3205158   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3205159   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
3205160   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
3205161   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3205162   +      end;
MPRINT(EM_DIAGRAM):   end;
3205163   +      else do;
MPRINT(EM_DIAGRAM):   else do;
3205164   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
3205165   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
3205166   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
3205167   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
3205168   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
3205169   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3205170   +         end;
MPRINT(EM_DIAGRAM):   end;
3205171   +      end;
MPRINT(EM_DIAGRAM):   end;
3205172   +   end;
MPRINT(EM_DIAGRAM):   end;
3205173   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
3205174   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
3205175   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
3205176   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
3205177   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
3205178   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
3205179   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3205180   +   end;
MPRINT(EM_DIAGRAM):   end;
3205181   +end;
MPRINT(EM_DIAGRAM):   end;
3205182   +
3205183   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3205184   +*** Checking missing input Interval
3205185   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
3205186   +
3205187   +IF NMISS(
3205188   +   AcceptedCmpTotal ,
3205189   +   Age ,
3205190   +   Frq ,
3205191   +   Income ,
3205192   +   Kidhome ,
3205193   +   MntFishProducts ,
3205194   +   MntFruits ,
3205195   +   MntGoldProds ,
3205196   +   MntSweetProducts ,
3205197   +   MonthsAsCustomer ,
3205198   +   NumDealsPurchases ,
3205199   +   NumWebVisitsMonth ,
3205200   +   RFMstat ,
3205201   +   RMntFrq ,
3205202   +   Recency ,
3205203   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
3205204   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
3205205   +
3205206   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3205207   +END;
MPRINT(EM_DIAGRAM):   END;
3205208   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3205209   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
3205210   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3205211   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3205212   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
3205213   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
3205214   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
3205215   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
3205216   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
3205217   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
3205218   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
3205219   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
3205220   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
3205221   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
3205222   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
3205223   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
3205224   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
3205225   +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
3205226   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
3205227   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
3205228   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
3205229   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
3205230   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
3205231   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
3205232   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
3205233   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
3205234   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
3205235   +END;
MPRINT(EM_DIAGRAM):   END;
3205236   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3205237   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
3205238   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
3205239   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
3205240   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
3205241   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
3205242   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
3205243   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
3205244   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
3205245   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
3205246   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
3205247   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
3205248   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
3205249   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
3205250   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
3205251   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
3205252   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
3205253   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
3205254   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
3205255   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
3205256   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
3205257   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
3205258   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
3205259   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
3205260   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
3205261   +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
3205262   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
3205263   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
3205264   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
3205265   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
3205266   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
3205267   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
3205268   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
3205269   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
3205270   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
3205271   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
3205272   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
3205273   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
3205274   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
3205275   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
3205276   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
3205277   +END;
MPRINT(EM_DIAGRAM):   END;
3205278   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3205279   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
3205280   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3205281   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3205282   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
3205283   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3205284   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3205285   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
3205286   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3205287   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3205288   +   H11  =     0.00871038651131 * S_AcceptedCmpTotal  +     0.04885111887799 *
3205289   +        S_Age  +    -0.16081720955101 * S_Frq  +    -0.81673231415398 *
3205290   +        S_Income  +     0.39760289149752 * S_Kidhome
3205291   +          +     -0.0376693415484 * S_MntFishProducts
3205292   +          +     0.01707556953741 * S_MntFruits  +     0.03640992016126 *
3205293   +        S_MntGoldProds  +     0.18721014378487 * S_MntSweetProducts
3205294   +          +    -0.13043754404228 * S_MonthsAsCustomer
3205295   +          +     -0.0139146653349 * S_NumDealsPurchases
3205296   +          +    -0.01539820220757 * S_NumWebVisitsMonth
3205297   +          +     0.00494819481975 * S_RFMstat  +    -0.22517942530642 *
3205298   +        S_RMntFrq  +     0.55149605442396 * S_Recency
3205299   +          +     0.54614592562743 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.00871038651131 * S_AcceptedCmpTotal + 0.04885111887799 * S_Age + 
-0.16081720955101 * S_Frq + -0.81673231415398 * S_Income + 0.39760289149752 * S_Kidhome + 
-0.0376693415484 * S_MntFishProducts + 0.01707556953741 * S_MntFruits + 0.03640992016126 * 
S_MntGoldProds + 0.18721014378487 * S_MntSweetProducts + -0.13043754404228 * 
S_MonthsAsCustomer + -0.0139146653349 * S_NumDealsPurchases + -0.01539820220757 * 
S_NumWebVisitsMonth + 0.00494819481975 * S_RFMstat + -0.22517942530642 * S_RMntFrq + 
0.55149605442396 * S_Recency + 0.54614592562743 * S_Teenhome ;
3205300   +   H12  =    -0.31218916782956 * S_AcceptedCmpTotal  +    -0.13577174745207 *
3205301   +        S_Age  +     -0.1133596721701 * S_Frq  +    -0.03250630326063 *
3205302   +        S_Income  +     0.31208673256073 * S_Kidhome
3205303   +          +    -0.04911763008195 * S_MntFishProducts
3205304   +          +     0.04440357574827 * S_MntFruits  +     0.18064625439163 *
3205305   +        S_MntGoldProds  +     0.34124097901137 * S_MntSweetProducts
3205306   +          +    -0.48577934340503 * S_MonthsAsCustomer
3205307   +          +     0.31218334237091 * S_NumDealsPurchases
3205308   +          +     0.24212805498377 * S_NumWebVisitsMonth
3205309   +          +     0.30439494800184 * S_RFMstat  +    -0.01845944589462 *
3205310   +        S_RMntFrq  +    -0.48513476805321 * S_Recency
3205311   +          +    -0.32721006241811 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.31218916782956 * S_AcceptedCmpTotal + -0.13577174745207 * S_Age 
+ -0.1133596721701 * S_Frq + -0.03250630326063 * S_Income + 0.31208673256073 * S_Kidhome + 
-0.04911763008195 * S_MntFishProducts + 0.04440357574827 * S_MntFruits + 0.18064625439163 * 
S_MntGoldProds + 0.34124097901137 * S_MntSweetProducts + -0.48577934340503 * 
S_MonthsAsCustomer + 0.31218334237091 * S_NumDealsPurchases + 0.24212805498377 * 
S_NumWebVisitsMonth + 0.30439494800184 * S_RFMstat + -0.01845944589462 * S_RMntFrq + 
-0.48513476805321 * S_Recency + -0.32721006241811 * S_Teenhome ;
3205312   +   H13  =    -0.68076549765273 * S_AcceptedCmpTotal  +    -0.14510411148941 *
3205313   +        S_Age  +     -0.3233004374436 * S_Frq  +    -0.42499945066724 *
3205314   +        S_Income  +    -0.48748003518551 * S_Kidhome
3205315   +          +     0.15434683428908 * S_MntFishProducts
3205316   +          +     0.06482294164983 * S_MntFruits  +    -0.54308686262134 *
3205317   +        S_MntGoldProds  +    -0.03954494482452 * S_MntSweetProducts
3205318   +          +    -0.07405705160744 * S_MonthsAsCustomer
3205319   +          +    -0.44979778263337 * S_NumDealsPurchases
3205320   +          +    -0.51422673599958 * S_NumWebVisitsMonth
3205321   +          +    -0.31727878849334 * S_RFMstat  +    -0.49659927360573 *
3205322   +        S_RMntFrq  +     0.79850779605341 * S_Recency
3205323   +          +    -0.01021777395977 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.68076549765273 * S_AcceptedCmpTotal + -0.14510411148941 * S_Age 
+ -0.3233004374436 * S_Frq + -0.42499945066724 * S_Income + -0.48748003518551 * S_Kidhome + 
0.15434683428908 * S_MntFishProducts + 0.06482294164983 * S_MntFruits + -0.54308686262134 * 
S_MntGoldProds + -0.03954494482452 * S_MntSweetProducts + -0.07405705160744 * 
S_MonthsAsCustomer + -0.44979778263337 * S_NumDealsPurchases + -0.51422673599958 * 
S_NumWebVisitsMonth + -0.31727878849334 * S_RFMstat + -0.49659927360573 * S_RMntFrq + 
0.79850779605341 * S_Recency + -0.01021777395977 * S_Teenhome ;
3205324   +   H14  =     0.38365136681667 * S_AcceptedCmpTotal  +     0.07084748712672 *
3205325   +        S_Age  +     0.07185932608666 * S_Frq  +     0.14505870102604 *
3205326   +        S_Income  +    -0.62401744170985 * S_Kidhome
3205327   +          +    -0.08499883212951 * S_MntFishProducts
3205328   +          +     -0.1648853454448 * S_MntFruits  +    -0.00355780886042 *
3205329   +        S_MntGoldProds  +    -0.29925551636086 * S_MntSweetProducts
3205330   +          +    -0.04051431518694 * S_MonthsAsCustomer
3205331   +          +     0.00788125797776 * S_NumDealsPurchases
3205332   +          +     0.59495434076477 * S_NumWebVisitsMonth
3205333   +          +     0.24302483463729 * S_RFMstat  +    -0.16358266655642 *
3205334   +        S_RMntFrq  +    -0.73053231334164 * S_Recency
3205335   +          +    -0.33321827557738 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 0.38365136681667 * S_AcceptedCmpTotal + 0.07084748712672 * S_Age + 
0.07185932608666 * S_Frq + 0.14505870102604 * S_Income + -0.62401744170985 * S_Kidhome + 
-0.08499883212951 * S_MntFishProducts + -0.1648853454448 * S_MntFruits + -0.00355780886042 * 
S_MntGoldProds + -0.29925551636086 * S_MntSweetProducts + -0.04051431518694 * 
S_MonthsAsCustomer + 0.00788125797776 * S_NumDealsPurchases + 0.59495434076477 * 
S_NumWebVisitsMonth + 0.24302483463729 * S_RFMstat + -0.16358266655642 * S_RMntFrq + 
-0.73053231334164 * S_Recency + -0.33321827557738 * S_Teenhome ;
3205336   +   H15  =    -0.33763603932626 * S_AcceptedCmpTotal  +     0.16015390350682 *
3205337   +        S_Age  +     0.93534536415494 * S_Frq  +     0.26932392970726 *
3205338   +        S_Income  +     -0.0256051183156 * S_Kidhome
3205339   +          +    -0.15661247042419 * S_MntFishProducts
3205340   +          +     0.05583315238736 * S_MntFruits  +     0.02103897411055 *
3205341   +        S_MntGoldProds  +     -0.1231125389085 * S_MntSweetProducts
3205342   +          +     0.03994503424293 * S_MonthsAsCustomer
3205343   +          +    -0.53734193208154 * S_NumDealsPurchases
3205344   +          +    -0.58547802324835 * S_NumWebVisitsMonth
3205345   +          +    -0.06088682875304 * S_RFMstat  +    -0.16953747051887 *
3205346   +        S_RMntFrq  +     0.66048924026365 * S_Recency
3205347   +          +    -0.18125808371879 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = -0.33763603932626 * S_AcceptedCmpTotal + 0.16015390350682 * S_Age 
+ 0.93534536415494 * S_Frq + 0.26932392970726 * S_Income + -0.0256051183156 * S_Kidhome + 
-0.15661247042419 * S_MntFishProducts + 0.05583315238736 * S_MntFruits + 0.02103897411055 * 
S_MntGoldProds + -0.1231125389085 * S_MntSweetProducts + 0.03994503424293 * S_MonthsAsCustomer 
+ -0.53734193208154 * S_NumDealsPurchases + -0.58547802324835 * S_NumWebVisitsMonth + 
-0.06088682875304 * S_RFMstat + -0.16953747051887 * S_RMntFrq + 0.66048924026365 * S_Recency + 
-0.18125808371879 * S_Teenhome ;
3205348   +   H11  = H11  +     0.32214548124302 * AcceptedCmp10
3205349   +          +     0.39647739988372 * AcceptedCmp20  +     0.31108042021128 *
3205350   +        AcceptedCmp30  +     0.29806974935147 * AcceptedCmp40
3205351   +          +     0.22776887209675 * AcceptedCmp50  +     0.15240663199135 *
3205352   +        Complain0  +    -0.29371842867452 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.32214548124302 * AcceptedCmp10 + 0.39647739988372 * 
AcceptedCmp20 + 0.31108042021128 * AcceptedCmp30 + 0.29806974935147 * AcceptedCmp40 + 
0.22776887209675 * AcceptedCmp50 + 0.15240663199135 * Complain0 + -0.29371842867452 * 
HigherEducationBinary0 ;
3205353   +   H12  = H12  +     0.16508910764131 * AcceptedCmp10
3205354   +          +    -0.01591698903562 * AcceptedCmp20  +    -0.18749319390831 *
3205355   +        AcceptedCmp30  +     0.10267845517937 * AcceptedCmp40
3205356   +          +     0.26889478167941 * AcceptedCmp50  +     0.21127321497252 *
3205357   +        Complain0  +     0.26244151632714 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.16508910764131 * AcceptedCmp10 + -0.01591698903562 * 
AcceptedCmp20 + -0.18749319390831 * AcceptedCmp30 + 0.10267845517937 * AcceptedCmp40 + 
0.26889478167941 * AcceptedCmp50 + 0.21127321497252 * Complain0 + 0.26244151632714 * 
HigherEducationBinary0 ;
3205358   +   H13  = H13  +     -0.1188260559539 * AcceptedCmp10
3205359   +          +    -0.14527518577208 * AcceptedCmp20  +     0.15234135364477 *
3205360   +        AcceptedCmp30  +    -0.09444923232962 * AcceptedCmp40
3205361   +          +     0.19708535923248 * AcceptedCmp50  +    -0.29618019247654 *
3205362   +        Complain0  +     0.12575052691333 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.1188260559539 * AcceptedCmp10 + -0.14527518577208 * 
AcceptedCmp20 + 0.15234135364477 * AcceptedCmp30 + -0.09444923232962 * AcceptedCmp40 + 
0.19708535923248 * AcceptedCmp50 + -0.29618019247654 * Complain0 + 0.12575052691333 * 
HigherEducationBinary0 ;
3205363   +   H14  = H14  +     0.22744978434743 * AcceptedCmp10
3205364   +          +    -0.01189686575388 * AcceptedCmp20  +    -0.32196819611195 *
3205365   +        AcceptedCmp30  +     0.01600068421368 * AcceptedCmp40
3205366   +          +     0.00556822856215 * AcceptedCmp50  +     0.18009079154413 *
3205367   +        Complain0  +     0.03016266549641 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.22744978434743 * AcceptedCmp10 + -0.01189686575388 * 
AcceptedCmp20 + -0.32196819611195 * AcceptedCmp30 + 0.01600068421368 * AcceptedCmp40 + 
0.00556822856215 * AcceptedCmp50 + 0.18009079154413 * Complain0 + 0.03016266549641 * 
HigherEducationBinary0 ;
3205368   +   H15  = H15  +     0.52725777941338 * AcceptedCmp10
3205369   +          +     0.01843467049946 * AcceptedCmp20  +     0.47168025621809 *
3205370   +        AcceptedCmp30  +    -0.05224480469429 * AcceptedCmp40
3205371   +          +     0.29146234318613 * AcceptedCmp50  +     0.05946217105031 *
3205372   +        Complain0  +     0.16683238673979 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.52725777941338 * AcceptedCmp10 + 0.01843467049946 * 
AcceptedCmp20 + 0.47168025621809 * AcceptedCmp30 + -0.05224480469429 * AcceptedCmp40 + 
0.29146234318613 * AcceptedCmp50 + 0.05946217105031 * Complain0 + 0.16683238673979 * 
HigherEducationBinary0 ;
3205373   +   H11  = H11  +     0.02840049264257 * Education2n_Cycle
3205374   +          +    -0.12984345243569 * EducationBasic  +    -0.10299098163695 *
3205375   +        EducationGraduation  +     0.23295390047952 * EducationMaster
3205376   +          +    -0.41529808115031 * Marital_StatusDivorced
3205377   +          +     0.65264978817749 * Marital_StatusMarried
3205378   +          +    -0.52150453945732 * Marital_StatusSingle
3205379   +          +     0.69963607397544 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.02840049264257 * Education2n_Cycle + -0.12984345243569 * 
EducationBasic + -0.10299098163695 * EducationGraduation + 0.23295390047952 * EducationMaster 
+ -0.41529808115031 * Marital_StatusDivorced + 0.65264978817749 * Marital_StatusMarried + 
-0.52150453945732 * Marital_StatusSingle + 0.69963607397544 * Marital_StatusTogether ;
3205380   +   H12  = H12  +    -0.18683184010407 * Education2n_Cycle
3205381   +          +    -0.04325754530797 * EducationBasic  +     0.25926294135162 *
3205382   +        EducationGraduation  +     0.04425534246646 * EducationMaster
3205383   +          +    -0.32207382402099 * Marital_StatusDivorced
3205384   +          +     0.16112567537413 * Marital_StatusMarried
3205385   +          +     0.28859198712458 * Marital_StatusSingle
3205386   +          +    -0.31707896724726 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.18683184010407 * Education2n_Cycle + -0.04325754530797 * 
EducationBasic + 0.25926294135162 * EducationGraduation + 0.04425534246646 * EducationMaster + 
-0.32207382402099 * Marital_StatusDivorced + 0.16112567537413 * Marital_StatusMarried + 
0.28859198712458 * Marital_StatusSingle + -0.31707896724726 * Marital_StatusTogether ;
3205387   +   H13  = H13  +     0.03402340531236 * Education2n_Cycle
3205388   +          +     0.17313991053917 * EducationBasic  +    -0.24806694961277 *
3205389   +        EducationGraduation  +    -0.16283334360744 * EducationMaster
3205390   +          +    -0.06823118087629 * Marital_StatusDivorced
3205391   +          +    -0.01696675344176 * Marital_StatusMarried
3205392   +          +    -0.04922830766868 * Marital_StatusSingle
3205393   +          +    -0.15449558545998 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.03402340531236 * Education2n_Cycle + 0.17313991053917 * 
EducationBasic + -0.24806694961277 * EducationGraduation + -0.16283334360744 * EducationMaster 
+ -0.06823118087629 * Marital_StatusDivorced + -0.01696675344176 * Marital_StatusMarried + 
-0.04922830766868 * Marital_StatusSingle + -0.15449558545998 * Marital_StatusTogether ;
3205394   +   H14  = H14  +     0.04419529419265 * Education2n_Cycle
3205395   +          +     0.10023190362026 * EducationBasic  +     0.23777777952905 *
3205396   +        EducationGraduation  +     -0.1779877655909 * EducationMaster
3205397   +          +     0.20346888384065 * Marital_StatusDivorced
3205398   +          +     -0.5246097720646 * Marital_StatusMarried
3205399   +          +     0.50991923175058 * Marital_StatusSingle
3205400   +          +    -0.15346924309445 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.04419529419265 * Education2n_Cycle + 0.10023190362026 * 
EducationBasic + 0.23777777952905 * EducationGraduation + -0.1779877655909 * EducationMaster + 
0.20346888384065 * Marital_StatusDivorced + -0.5246097720646 * Marital_StatusMarried + 
0.50991923175058 * Marital_StatusSingle + -0.15346924309445 * Marital_StatusTogether ;
3205401   +   H15  = H15  +     -0.0859109352002 * Education2n_Cycle
3205402   +          +     0.23688872874499 * EducationBasic  +      0.0044459307881 *
3205403   +        EducationGraduation  +     0.03117170136897 * EducationMaster
3205404   +          +    -0.14128509643843 * Marital_StatusDivorced
3205405   +          +    -0.17344467864829 * Marital_StatusMarried
3205406   +          +     0.09201105049634 * Marital_StatusSingle
3205407   +          +     0.03562553790735 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.0859109352002 * Education2n_Cycle + 0.23688872874499 * 
EducationBasic + 0.0044459307881 * EducationGraduation + 0.03117170136897 * EducationMaster + 
-0.14128509643843 * Marital_StatusDivorced + -0.17344467864829 * Marital_StatusMarried + 
0.09201105049634 * Marital_StatusSingle + 0.03562553790735 * Marital_StatusTogether ;
3205408   +   H11  =     0.44460027749342 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.44460027749342 + H11 ;
3205409   +   H12  =    -0.95819350927335 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.95819350927335 + H12 ;
3205410   +   H13  =    -0.44968673753742 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.44968673753742 + H13 ;
3205411   +   H14  =     0.53878131931255 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.53878131931255 + H14 ;
3205412   +   H15  =     0.82891048270823 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 0.82891048270823 + H15 ;
3205413   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
3205414   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
3205415   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
3205416   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
3205417   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
3205418   +END;
MPRINT(EM_DIAGRAM):   END;
3205419   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3205420   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
3205421   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
3205422   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
3205423   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
3205424   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
3205425   +END;
MPRINT(EM_DIAGRAM):   END;
3205426   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3205427   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
3205428   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3205429   +
3205430   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
3205431   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
3205432   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
3205433   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
3205434   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
3205435   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3205436   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
3205437   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
3205438   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
3205439   +end;
MPRINT(EM_DIAGRAM):   end;
3205440   +else do;
MPRINT(EM_DIAGRAM):   else do;
3205441   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
3205442   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
3205443   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
3205444   +   end;
MPRINT(EM_DIAGRAM):   end;
3205445   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
3205446   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
3205447   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
3205448   +   end;
MPRINT(EM_DIAGRAM):   end;
3205449   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3205450   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
3205451   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
3205452   +   end;
MPRINT(EM_DIAGRAM):   end;
3205453   +end;
MPRINT(EM_DIAGRAM):   end;
3205454   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3205455   +   P_DepVar1  =    -3.09211467027119 * H11  +      0.8780551921753 * H12
3205456   +          +    -2.64280779387115 * H13  +     1.47258844960489 * H14
3205457   +          +     -1.9161512747512 * H15 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.09211467027119 * H11 + 0.8780551921753 * H12 + 
-2.64280779387115 * H13 + 1.47258844960489 * H14 + -1.9161512747512 * H15 ;
3205458   +   P_DepVar1  =    -1.84694532241195 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.84694532241195 + P_DepVar1 ;
3205459   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
3205460   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
3205461   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
3205462   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
3205463   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
3205464   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
3205465   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
3205466   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
3205467   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
3205468   +END;
MPRINT(EM_DIAGRAM):   END;
3205469   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3205470   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
3205471   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
3205472   +END;
MPRINT(EM_DIAGRAM):   END;
3205473   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
3205474   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
3205475   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
3205476   +END;
MPRINT(EM_DIAGRAM):   END;
3205477   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
3205478   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
3205479   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
3205480   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
3205481   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
3205482   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
3205483   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
3205484   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3205485   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
3205486   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3205487   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
3205488   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
3205489   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
3205490   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
3205491   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
3205492   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
3205493   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
3205494   +END;
MPRINT(EM_DIAGRAM):   END;
3205495   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
3205496   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
3205497   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
3205498   +drop
3205499   +H11
3205500   +H12
3205501   +H13
3205502   +H14
3205503   +H15
3205504   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 ;
3205505   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
3205506    run;

NOTE: DATA STEP view saved on file EMWS8.NEURAL40_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.META3_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_DIAGRAM):   quit;
3205507    quit;
3205508    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
3205509    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
3205510    * Neural40: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Neural40: Computing metadata for TRAIN data;
3205511    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS8.NEURAL40_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural40\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.Neural40_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.Neural40_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.Neural40_TRAIN out=WORK.M3QGMRIK noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3QGMRIK;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M3QGMRIK(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = 
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3QGMRIK;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M3QGMRIK;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M1JBMNC_ NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1JBMNC_;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M1JBMNC_;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0IMOAVT(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M1JBMNC_;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1JBMNC_;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M1JBMNC_;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1JBMNC_;
MPRINT(EMADVISECOLUMNS):   set WORK.M1JBMNC_;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Meta3_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Meta3_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural40_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Neural40";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "Neural40";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "Neural40";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "Neural40";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "Neural40";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "Neural40";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "Neural40";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "Neural40";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Neural40";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "Neural40";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural40: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
3205823    data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
3205824    set EMWS8.Neural40_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural40_EMINFO;
3205825    where DATA='Neural40' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Neural40' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 
'MODEL');
3205826    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.NEURAL40_EMINFO.
      WHERE (DATA='Neural40') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

3205827    data EMWS8.Neural40_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.Neural40_EMINFO;
3205828    length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
3205829    input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
3205830    cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS8.NEURAL40_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   run;
3205834    run;
3205835    data EMWS8.Neural40_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural40_EMINFO;
3205836    set EMWS8.Neural40_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural40_EMINFO WORK.MODELTEMP_INFO;
3205837    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.NEURAL40_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.NEURAL40_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

3205838    proc sort data = EMWS8.Neural40_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Neural40_EMINFO NOTHREADS;
3205839    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
3205840    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.NEURAL40_EMINFO.
NOTE: The data set EMWS8.NEURAL40_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

3205841    proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
3205842    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
3205843    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS8.FIMPORT_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

3205844    proc sort data = EMWS8.Neural40_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Neural40_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
3205845    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
3205846    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.NEURAL40_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

3205847    data EMWS8.Neural40_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural40_EMINFO;
3205848    merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
3205849    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
3205850    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.NEURAL40_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

3205851    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
3205852    delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
3205853    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
3205854    quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.08 seconds
      cpu time            0.06 seconds
      

NOTE: View EMWS8.NEURAL40_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
      
NOTE: View EMWS8.NEURAL40_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
