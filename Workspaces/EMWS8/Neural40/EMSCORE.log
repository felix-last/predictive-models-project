MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "21. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "18.55 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                21. April 2016
Time:                18.55 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O12NDAII 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural40\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O12NDAII new;
MPRINT(EM_DIAGRAM):   run;
1170950    data work.outkey;
MPRINT(EM_DIAGRAM):    data work.outkey;
1170951    set EMWS8.Neural40_OUTKEY;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural40_OUTKEY;
1170952    if upcase(ROLE) = 'HIDDEN';
MPRINT(EM_DIAGRAM):   if upcase(ROLE) = 'HIDDEN';
1170953    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 48 observations read from the data set EMWS8.NEURAL40_OUTKEY.
NOTE: The data set WORK.OUTKEY has 5 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1170954    filename emflow
1170954  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural40\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural40\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural40: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1170955    *------------------------------------------------------------*;
1170956    * Neural40: Scoring DATA data;
1170957    *------------------------------------------------------------*;
1170958    data EMWS8.Neural40_TRAIN
1170959    / view=EMWS8.Neural40_TRAIN
1170960    ;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural40_TRAIN / view=EMWS8.Neural40_TRAIN ;
1170961    set EMWS8.Meta3_TRAIN
1170962    ;
MPRINT(EM_DIAGRAM):   set EMWS8.Meta3_TRAIN ;
1170963    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural40\EMFLOWSCORE.sas.
1170964   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1170965   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1170966   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1170967   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1170968   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1170969   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1170970   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1170971   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1170972   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1170973   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1170974   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1170975   +LENGTH _WARN_ $4
1170976   +      F_DepVar  $ 12
1170977   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1170978   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1170979   +
1170980   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1170981   +
1170982   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1170983   +
1170984   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1170985   +
1170986   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1170987   +
1170988   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1170989   +
1170990   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1170991   +
1170992   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1170993   +
1170994   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1170995   +
1170996   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1170997   +
1170998   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1170999   +
1171000   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1171001   +
1171002   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1171003   +
1171004   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1171005   +
1171006   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1171007   +
1171008   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1171009   +
1171010   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1171011   +
1171012   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1171013   +
1171014   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1171015   +
1171016   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1171017   +
1171018   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1171019   +
1171020   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1171021   +
1171022   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1171023   +
1171024   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1171025   +
1171026   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1171027   +
1171028   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1171029   +
1171030   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1171031   +
1171032   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1171033   +
1171034   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1171035   +
1171036   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1171037   +
1171038   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1171039   +
1171040   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1171041   +
1171042   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1171043   +
1171044   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1171045   +
1171046   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1171047   +
1171048   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1171049   +
1171050   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1171051   +
1171052   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1171053   +
1171054   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1171055   +
1171056   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1171057   +
1171058   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1171059   +
1171060   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1171061   +
1171062   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1171063   +
1171064   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1171065   +
1171066   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1171067   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1171068   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1171069   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1171070   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1171071   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1171072   +end;
MPRINT(EM_DIAGRAM):   end;
1171073   +else do;
MPRINT(EM_DIAGRAM):   else do;
1171074   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1171075   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1171076   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1171077   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1171078   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1171079   +   end;
MPRINT(EM_DIAGRAM):   end;
1171080   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1171081   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1171082   +   end;
MPRINT(EM_DIAGRAM):   end;
1171083   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1171084   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1171085   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1171086   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1171087   +   end;
MPRINT(EM_DIAGRAM):   end;
1171088   +end;
MPRINT(EM_DIAGRAM):   end;
1171089   +
1171090   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1171091   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1171092   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1171093   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1171094   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1171095   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1171096   +end;
MPRINT(EM_DIAGRAM):   end;
1171097   +else do;
MPRINT(EM_DIAGRAM):   else do;
1171098   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1171099   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1171100   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1171101   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1171102   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1171103   +   end;
MPRINT(EM_DIAGRAM):   end;
1171104   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1171105   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1171106   +   end;
MPRINT(EM_DIAGRAM):   end;
1171107   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1171108   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1171109   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1171110   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1171111   +   end;
MPRINT(EM_DIAGRAM):   end;
1171112   +end;
MPRINT(EM_DIAGRAM):   end;
1171113   +
1171114   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1171115   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1171116   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1171117   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1171118   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1171119   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1171120   +end;
MPRINT(EM_DIAGRAM):   end;
1171121   +else do;
MPRINT(EM_DIAGRAM):   else do;
1171122   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1171123   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1171124   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1171125   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1171126   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1171127   +   end;
MPRINT(EM_DIAGRAM):   end;
1171128   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1171129   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1171130   +   end;
MPRINT(EM_DIAGRAM):   end;
1171131   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1171132   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1171133   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1171134   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1171135   +   end;
MPRINT(EM_DIAGRAM):   end;
1171136   +end;
MPRINT(EM_DIAGRAM):   end;
1171137   +
1171138   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1171139   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1171140   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1171141   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1171142   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1171143   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1171144   +end;
MPRINT(EM_DIAGRAM):   end;
1171145   +else do;
MPRINT(EM_DIAGRAM):   else do;
1171146   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1171147   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1171148   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1171149   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1171150   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1171151   +   end;
MPRINT(EM_DIAGRAM):   end;
1171152   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1171153   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1171154   +   end;
MPRINT(EM_DIAGRAM):   end;
1171155   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1171156   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1171157   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1171158   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1171159   +   end;
MPRINT(EM_DIAGRAM):   end;
1171160   +end;
MPRINT(EM_DIAGRAM):   end;
1171161   +
1171162   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1171163   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1171164   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1171165   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1171166   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1171167   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1171168   +end;
MPRINT(EM_DIAGRAM):   end;
1171169   +else do;
MPRINT(EM_DIAGRAM):   else do;
1171170   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1171171   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1171172   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1171173   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1171174   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1171175   +   end;
MPRINT(EM_DIAGRAM):   end;
1171176   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1171177   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1171178   +   end;
MPRINT(EM_DIAGRAM):   end;
1171179   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1171180   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1171181   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1171182   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1171183   +   end;
MPRINT(EM_DIAGRAM):   end;
1171184   +end;
MPRINT(EM_DIAGRAM):   end;
1171185   +
1171186   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1171187   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1171188   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1171189   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1171190   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1171191   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1171192   +end;
MPRINT(EM_DIAGRAM):   end;
1171193   +else do;
MPRINT(EM_DIAGRAM):   else do;
1171194   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1171195   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1171196   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1171197   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1171198   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1171199   +   end;
MPRINT(EM_DIAGRAM):   end;
1171200   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1171201   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1171202   +   end;
MPRINT(EM_DIAGRAM):   end;
1171203   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1171204   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1171205   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1171206   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1171207   +   end;
MPRINT(EM_DIAGRAM):   end;
1171208   +end;
MPRINT(EM_DIAGRAM):   end;
1171209   +
1171210   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1171211   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1171212   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1171213   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1171214   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1171215   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1171216   +end;
MPRINT(EM_DIAGRAM):   end;
1171217   +else do;
MPRINT(EM_DIAGRAM):   else do;
1171218   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1171219   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1171220   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1171221   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1171222   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1171223   +   end;
MPRINT(EM_DIAGRAM):   end;
1171224   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1171225   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1171226   +   end;
MPRINT(EM_DIAGRAM):   end;
1171227   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1171228   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1171229   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1171230   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1171231   +   end;
MPRINT(EM_DIAGRAM):   end;
1171232   +end;
MPRINT(EM_DIAGRAM):   end;
1171233   +
1171234   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1171235   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1171236   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1171237   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1171238   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1171239   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1171240   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1171241   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1171242   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1171243   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1171244   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1171245   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1171246   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1171247   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1171248   +end;
MPRINT(EM_DIAGRAM):   end;
1171249   +else do;
MPRINT(EM_DIAGRAM):   else do;
1171250   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1171251   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1171252   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1171253   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1171254   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1171255   +   end;
MPRINT(EM_DIAGRAM):   end;
1171256   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1171257   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1171258   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1171259   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1171260   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1171261   +   end;
MPRINT(EM_DIAGRAM):   end;
1171262   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1171263   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1171264   +   end;
MPRINT(EM_DIAGRAM):   end;
1171265   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1171266   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1171267   +   end;
MPRINT(EM_DIAGRAM):   end;
1171268   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1171269   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1171270   +   end;
MPRINT(EM_DIAGRAM):   end;
1171271   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1171272   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1171273   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1171274   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1171275   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1171276   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1171277   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1171278   +   end;
MPRINT(EM_DIAGRAM):   end;
1171279   +end;
MPRINT(EM_DIAGRAM):   end;
1171280   +
1171281   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1171282   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1171283   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1171284   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1171285   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1171286   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1171287   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1171288   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1171289   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1171290   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1171291   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1171292   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1171293   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1171294   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1171295   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1171296   +end;
MPRINT(EM_DIAGRAM):   end;
1171297   +else do;
MPRINT(EM_DIAGRAM):   else do;
1171298   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1171299   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1171300   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1171301   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1171302   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1171303   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1171304   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1171305   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1171306   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1171307   +         end;
MPRINT(EM_DIAGRAM):   end;
1171308   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1171309   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1171310   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1171311   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1171312   +            end;
MPRINT(EM_DIAGRAM):   end;
1171313   +         end;
MPRINT(EM_DIAGRAM):   end;
1171314   +      end;
MPRINT(EM_DIAGRAM):   end;
1171315   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1171316   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1171317   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1171318   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1171319   +         end;
MPRINT(EM_DIAGRAM):   end;
1171320   +      end;
MPRINT(EM_DIAGRAM):   end;
1171321   +   end;
MPRINT(EM_DIAGRAM):   end;
1171322   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1171323   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1171324   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1171325   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1171326   +      end;
MPRINT(EM_DIAGRAM):   end;
1171327   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1171328   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1171329   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1171330   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1171331   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1171332   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1171333   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1171334   +         end;
MPRINT(EM_DIAGRAM):   end;
1171335   +      end;
MPRINT(EM_DIAGRAM):   end;
1171336   +   end;
MPRINT(EM_DIAGRAM):   end;
1171337   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1171338   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1171339   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1171340   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1171341   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1171342   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1171343   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1171344   +   end;
MPRINT(EM_DIAGRAM):   end;
1171345   +end;
MPRINT(EM_DIAGRAM):   end;
1171346   +
1171347   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1171348   +*** Checking missing input Interval
1171349   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1171350   +
1171351   +IF NMISS(
1171352   +   AcceptedCmpTotal ,
1171353   +   Age ,
1171354   +   Frq ,
1171355   +   Income ,
1171356   +   Kidhome ,
1171357   +   MntFishProducts ,
1171358   +   MntFruits ,
1171359   +   MntGoldProds ,
1171360   +   MntSweetProducts ,
1171361   +   MonthsAsCustomer ,
1171362   +   NumDealsPurchases ,
1171363   +   NumWebVisitsMonth ,
1171364   +   RFMstat ,
1171365   +   RMntFrq ,
1171366   +   Recency ,
1171367   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
1171368   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1171369   +
1171370   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1171371   +END;
MPRINT(EM_DIAGRAM):   END;
1171372   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1171373   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1171374   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1171375   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1171376   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1171377   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1171378   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1171379   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1171380   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1171381   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1171382   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1171383   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1171384   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1171385   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1171386   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1171387   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1171388   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1171389   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
1171390   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
1171391   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1171392   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1171393   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1171394   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1171395   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1171396   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1171397   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1171398   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1171399   +END;
MPRINT(EM_DIAGRAM):   END;
1171400   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1171401   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1171402   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1171403   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1171404   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1171405   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1171406   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1171407   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1171408   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1171409   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1171410   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1171411   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1171412   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1171413   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1171414   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1171415   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1171416   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1171417   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1171418   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1171419   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1171420   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1171421   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1171422   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1171423   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1171424   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1171425   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
1171426   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
1171427   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1171428   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1171429   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1171430   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1171431   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1171432   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1171433   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1171434   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1171435   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1171436   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1171437   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1171438   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1171439   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1171440   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1171441   +END;
MPRINT(EM_DIAGRAM):   END;
1171442   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1171443   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1171444   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1171445   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1171446   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1171447   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1171448   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1171449   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1171450   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1171451   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1171452   +   H11  =      0.0032927309355 * S_AcceptedCmpTotal  +     0.09101334306394 *
1171453   +        S_Age  +    -0.17737387030956 * S_Frq  +     -0.7980677567639 *
1171454   +        S_Income  +     0.43076147384738 * S_Kidhome
1171455   +          +    -0.03764687993601 * S_MntFishProducts
1171456   +          +     0.02729806956772 * S_MntFruits  +     0.08803652910758 *
1171457   +        S_MntGoldProds  +     0.17643871051763 * S_MntSweetProducts
1171458   +          +    -0.21857007362207 * S_MonthsAsCustomer
1171459   +          +    -0.01738553271488 * S_NumDealsPurchases
1171460   +          +    -0.05405784617097 * S_NumWebVisitsMonth
1171461   +          +    -0.02555104359687 * S_RFMstat  +    -0.22262932120098 *
1171462   +        S_RMntFrq  +     0.52463751421504 * S_Recency
1171463   +          +     0.54544496970995 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.0032927309355 * S_AcceptedCmpTotal + 0.09101334306394 * S_Age + 
-0.17737387030956 * S_Frq + -0.7980677567639 * S_Income + 0.43076147384738 * S_Kidhome + 
-0.03764687993601 * S_MntFishProducts + 0.02729806956772 * S_MntFruits + 0.08803652910758 * 
S_MntGoldProds + 0.17643871051763 * S_MntSweetProducts + -0.21857007362207 * 
S_MonthsAsCustomer + -0.01738553271488 * S_NumDealsPurchases + -0.05405784617097 * 
S_NumWebVisitsMonth + -0.02555104359687 * S_RFMstat + -0.22262932120098 * S_RMntFrq + 
0.52463751421504 * S_Recency + 0.54544496970995 * S_Teenhome ;
1171464   +   H12  =    -0.33803565764996 * S_AcceptedCmpTotal  +     -0.1574598864259 *
1171465   +        S_Age  +    -0.11819127145626 * S_Frq  +     -0.0410639104551 *
1171466   +        S_Income  +     0.30116999256128 * S_Kidhome
1171467   +          +    -0.05148754431395 * S_MntFishProducts
1171468   +          +     0.06976805639315 * S_MntFruits  +     0.21288156312487 *
1171469   +        S_MntGoldProds  +     0.38336457324703 * S_MntSweetProducts
1171470   +          +    -0.47049602184046 * S_MonthsAsCustomer
1171471   +          +     0.31766759211089 * S_NumDealsPurchases
1171472   +          +     0.23065914125267 * S_NumWebVisitsMonth
1171473   +          +     0.30304676466657 * S_RFMstat  +     0.02069006823415 *
1171474   +        S_RMntFrq  +    -0.50214492406349 * S_Recency
1171475   +          +    -0.31828314433486 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.33803565764996 * S_AcceptedCmpTotal + -0.1574598864259 * S_Age 
+ -0.11819127145626 * S_Frq + -0.0410639104551 * S_Income + 0.30116999256128 * S_Kidhome + 
-0.05148754431395 * S_MntFishProducts + 0.06976805639315 * S_MntFruits + 0.21288156312487 * 
S_MntGoldProds + 0.38336457324703 * S_MntSweetProducts + -0.47049602184046 * 
S_MonthsAsCustomer + 0.31766759211089 * S_NumDealsPurchases + 0.23065914125267 * 
S_NumWebVisitsMonth + 0.30304676466657 * S_RFMstat + 0.02069006823415 * S_RMntFrq + 
-0.50214492406349 * S_Recency + -0.31828314433486 * S_Teenhome ;
1171476   +   H13  =    -0.66950066433143 * S_AcceptedCmpTotal  +    -0.13180706544499 *
1171477   +        S_Age  +    -0.35768347811788 * S_Frq  +    -0.48081944747804 *
1171478   +        S_Income  +    -0.47031432651131 * S_Kidhome
1171479   +          +     0.14501559210465 * S_MntFishProducts
1171480   +          +     0.04696430031502 * S_MntFruits  +    -0.56155803643986 *
1171481   +        S_MntGoldProds  +    -0.03811468849817 * S_MntSweetProducts
1171482   +          +    -0.12263198714092 * S_MonthsAsCustomer
1171483   +          +    -0.44778701790462 * S_NumDealsPurchases
1171484   +          +    -0.48451328063306 * S_NumWebVisitsMonth
1171485   +          +    -0.30729532219651 * S_RFMstat  +    -0.53933327781572 *
1171486   +        S_RMntFrq  +     0.73816873319969 * S_Recency
1171487   +          +     0.02727962791734 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.66950066433143 * S_AcceptedCmpTotal + -0.13180706544499 * S_Age 
+ -0.35768347811788 * S_Frq + -0.48081944747804 * S_Income + -0.47031432651131 * S_Kidhome + 
0.14501559210465 * S_MntFishProducts + 0.04696430031502 * S_MntFruits + -0.56155803643986 * 
S_MntGoldProds + -0.03811468849817 * S_MntSweetProducts + -0.12263198714092 * 
S_MonthsAsCustomer + -0.44778701790462 * S_NumDealsPurchases + -0.48451328063306 * 
S_NumWebVisitsMonth + -0.30729532219651 * S_RFMstat + -0.53933327781572 * S_RMntFrq + 
0.73816873319969 * S_Recency + 0.02727962791734 * S_Teenhome ;
1171488   +   H14  =     0.31637384240651 * S_AcceptedCmpTotal  +     0.01318551698119 *
1171489   +        S_Age  +     0.05366305732147 * S_Frq  +     0.11980702632855 *
1171490   +        S_Income  +    -0.63361814765775 * S_Kidhome
1171491   +          +    -0.09824863224867 * S_MntFishProducts
1171492   +          +    -0.19022726480556 * S_MntFruits  +    -0.03622071498812 *
1171493   +        S_MntGoldProds  +    -0.33481056314568 * S_MntSweetProducts
1171494   +          +    -0.02935796970517 * S_MonthsAsCustomer
1171495   +          +     0.02015249143837 * S_NumDealsPurchases
1171496   +          +     0.60675564879689 * S_NumWebVisitsMonth
1171497   +          +     0.25432072256404 * S_RFMstat  +    -0.18855949493817 *
1171498   +        S_RMntFrq  +    -0.75663473950421 * S_Recency
1171499   +          +    -0.34865918998533 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 0.31637384240651 * S_AcceptedCmpTotal + 0.01318551698119 * S_Age + 
0.05366305732147 * S_Frq + 0.11980702632855 * S_Income + -0.63361814765775 * S_Kidhome + 
-0.09824863224867 * S_MntFishProducts + -0.19022726480556 * S_MntFruits + -0.03622071498812 * 
S_MntGoldProds + -0.33481056314568 * S_MntSweetProducts + -0.02935796970517 * 
S_MonthsAsCustomer + 0.02015249143837 * S_NumDealsPurchases + 0.60675564879689 * 
S_NumWebVisitsMonth + 0.25432072256404 * S_RFMstat + -0.18855949493817 * S_RMntFrq + 
-0.75663473950421 * S_Recency + -0.34865918998533 * S_Teenhome ;
1171500   +   H15  =    -0.32654270849386 * S_AcceptedCmpTotal  +     0.17707100422873 *
1171501   +        S_Age  +     0.93625207609464 * S_Frq  +     0.26987977696455 *
1171502   +        S_Income  +    -0.00728146808361 * S_Kidhome
1171503   +          +    -0.15850529937985 * S_MntFishProducts
1171504   +          +     0.06513447200778 * S_MntFruits  +      0.0398444679725 *
1171505   +        S_MntGoldProds  +    -0.12149497244296 * S_MntSweetProducts
1171506   +          +    -0.00539233520343 * S_MonthsAsCustomer
1171507   +          +    -0.54182368084643 * S_NumDealsPurchases
1171508   +          +    -0.60072233649965 * S_NumWebVisitsMonth
1171509   +          +    -0.09022759163793 * S_RFMstat  +    -0.16894620369906 *
1171510   +        S_RMntFrq  +     0.66307424769463 * S_Recency
1171511   +          +    -0.17356690404814 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = -0.32654270849386 * S_AcceptedCmpTotal + 0.17707100422873 * S_Age 
+ 0.93625207609464 * S_Frq + 0.26987977696455 * S_Income + -0.00728146808361 * S_Kidhome + 
-0.15850529937985 * S_MntFishProducts + 0.06513447200778 * S_MntFruits + 0.0398444679725 * 
S_MntGoldProds + -0.12149497244296 * S_MntSweetProducts + -0.00539233520343 * 
S_MonthsAsCustomer + -0.54182368084643 * S_NumDealsPurchases + -0.60072233649965 * 
S_NumWebVisitsMonth + -0.09022759163793 * S_RFMstat + -0.16894620369906 * S_RMntFrq + 
0.66307424769463 * S_Recency + -0.17356690404814 * S_Teenhome ;
1171512   +   H11  = H11  +     0.40379020589792 * AcceptedCmp10
1171513   +          +     0.41163608029184 * AcceptedCmp20  +     0.31824152457666 *
1171514   +        AcceptedCmp30  +     0.30059703252717 * AcceptedCmp40
1171515   +          +     0.21809621049566 * AcceptedCmp50  +     0.17161388784292 *
1171516   +        Complain0  +    -0.35356191864234 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.40379020589792 * AcceptedCmp10 + 0.41163608029184 * 
AcceptedCmp20 + 0.31824152457666 * AcceptedCmp30 + 0.30059703252717 * AcceptedCmp40 + 
0.21809621049566 * AcceptedCmp50 + 0.17161388784292 * Complain0 + -0.35356191864234 * 
HigherEducationBinary0 ;
1171517   +   H12  = H12  +     0.14146453229372 * AcceptedCmp10
1171518   +          +    -0.01499648130434 * AcceptedCmp20  +    -0.15319425809948 *
1171519   +        AcceptedCmp30  +     0.10722126908794 * AcceptedCmp40
1171520   +          +     0.29524215734213 * AcceptedCmp50  +     0.21901777981386 *
1171521   +        Complain0  +     0.26589689583514 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.14146453229372 * AcceptedCmp10 + -0.01499648130434 * 
AcceptedCmp20 + -0.15319425809948 * AcceptedCmp30 + 0.10722126908794 * AcceptedCmp40 + 
0.29524215734213 * AcceptedCmp50 + 0.21901777981386 * Complain0 + 0.26589689583514 * 
HigherEducationBinary0 ;
1171522   +   H13  = H13  +    -0.13089590705194 * AcceptedCmp10
1171523   +          +    -0.16147741287576 * AcceptedCmp20  +     0.13892066553636 *
1171524   +        AcceptedCmp30  +    -0.12220468306752 * AcceptedCmp40
1171525   +          +     0.18197624280085 * AcceptedCmp50  +    -0.31355578222066 *
1171526   +        Complain0  +     0.17409691060383 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.13089590705194 * AcceptedCmp10 + -0.16147741287576 * 
AcceptedCmp20 + 0.13892066553636 * AcceptedCmp30 + -0.12220468306752 * AcceptedCmp40 + 
0.18197624280085 * AcceptedCmp50 + -0.31355578222066 * Complain0 + 0.17409691060383 * 
HigherEducationBinary0 ;
1171527   +   H14  = H14  +     0.24764542202116 * AcceptedCmp10
1171528   +          +     0.00575121729576 * AcceptedCmp20  +    -0.30692671431758 *
1171529   +        AcceptedCmp30  +     0.04820882787304 * AcceptedCmp40
1171530   +          +     0.05262951745934 * AcceptedCmp50  +     0.19424906323292 *
1171531   +        Complain0  +     0.02739699491892 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.24764542202116 * AcceptedCmp10 + 0.00575121729576 * 
AcceptedCmp20 + -0.30692671431758 * AcceptedCmp30 + 0.04820882787304 * AcceptedCmp40 + 
0.05262951745934 * AcceptedCmp50 + 0.19424906323292 * Complain0 + 0.02739699491892 * 
HigherEducationBinary0 ;
1171532   +   H15  = H15  +     0.55249118257316 * AcceptedCmp10
1171533   +          +     0.03472783050924 * AcceptedCmp20  +     0.45051734949789 *
1171534   +        AcceptedCmp30  +    -0.03032221189323 * AcceptedCmp40
1171535   +          +     0.28472394784854 * AcceptedCmp50  +     0.06409321661831 *
1171536   +        Complain0  +     0.17517854321941 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.55249118257316 * AcceptedCmp10 + 0.03472783050924 * 
AcceptedCmp20 + 0.45051734949789 * AcceptedCmp30 + -0.03032221189323 * AcceptedCmp40 + 
0.28472394784854 * AcceptedCmp50 + 0.06409321661831 * Complain0 + 0.17517854321941 * 
HigherEducationBinary0 ;
1171537   +   H11  = H11  +     0.01296567207369 * Education2n_Cycle
1171538   +          +     -0.1384611563627 * EducationBasic  +    -0.07977602646684 *
1171539   +        EducationGraduation  +     0.24334570893333 * EducationMaster
1171540   +          +    -0.38882658584856 * Marital_StatusDivorced
1171541   +          +     0.65814014556907 * Marital_StatusMarried
1171542   +          +    -0.47946271812834 * Marital_StatusSingle
1171543   +          +     0.68266301555878 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.01296567207369 * Education2n_Cycle + -0.1384611563627 * 
EducationBasic + -0.07977602646684 * EducationGraduation + 0.24334570893333 * EducationMaster 
+ -0.38882658584856 * Marital_StatusDivorced + 0.65814014556907 * Marital_StatusMarried + 
-0.47946271812834 * Marital_StatusSingle + 0.68266301555878 * Marital_StatusTogether ;
1171544   +   H12  = H12  +    -0.17120287038112 * Education2n_Cycle
1171545   +          +    -0.02706838966272 * EducationBasic  +     0.28296380151006 *
1171546   +        EducationGraduation  +     0.06350902674039 * EducationMaster
1171547   +          +     -0.3300387788221 * Marital_StatusDivorced
1171548   +          +     0.15584744966644 * Marital_StatusMarried
1171549   +          +     0.26617174676758 * Marital_StatusSingle
1171550   +          +    -0.29771537576014 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.17120287038112 * Education2n_Cycle + -0.02706838966272 * 
EducationBasic + 0.28296380151006 * EducationGraduation + 0.06350902674039 * EducationMaster + 
-0.3300387788221 * Marital_StatusDivorced + 0.15584744966644 * Marital_StatusMarried + 
0.26617174676758 * Marital_StatusSingle + -0.29771537576014 * Marital_StatusTogether ;
1171551   +   H13  = H13  +     0.05524541069883 * Education2n_Cycle
1171552   +          +     0.18324866500855 * EducationBasic  +    -0.25557023117825 *
1171553   +        EducationGraduation  +    -0.16479543389993 * EducationMaster
1171554   +          +    -0.06758334778864 * Marital_StatusDivorced
1171555   +          +    -0.00076716594904 * Marital_StatusMarried
1171556   +          +    -0.04319541969046 * Marital_StatusSingle
1171557   +          +    -0.16936317180157 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.05524541069883 * Education2n_Cycle + 0.18324866500855 * 
EducationBasic + -0.25557023117825 * EducationGraduation + -0.16479543389993 * EducationMaster 
+ -0.06758334778864 * Marital_StatusDivorced + -0.00076716594904 * Marital_StatusMarried + 
-0.04319541969046 * Marital_StatusSingle + -0.16936317180157 * Marital_StatusTogether ;
1171558   +   H14  = H14  +     0.04763927770842 * Education2n_Cycle
1171559   +          +     0.09740370469315 * EducationBasic  +      0.2355172519549 *
1171560   +        EducationGraduation  +    -0.17375916527677 * EducationMaster
1171561   +          +      0.2099776154173 * Marital_StatusDivorced
1171562   +          +    -0.53311901286241 * Marital_StatusMarried
1171563   +          +     0.48618352894253 * Marital_StatusSingle
1171564   +          +    -0.13406957503471 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.04763927770842 * Education2n_Cycle + 0.09740370469315 * 
EducationBasic + 0.2355172519549 * EducationGraduation + -0.17375916527677 * EducationMaster + 
0.2099776154173 * Marital_StatusDivorced + -0.53311901286241 * Marital_StatusMarried + 
0.48618352894253 * Marital_StatusSingle + -0.13406957503471 * Marital_StatusTogether ;
1171565   +   H15  = H15  +     -0.1000300691329 * Education2n_Cycle
1171566   +          +      0.2070015782176 * EducationBasic  +    -0.02421180620986 *
1171567   +        EducationGraduation  +     -0.0194914340189 * EducationMaster
1171568   +          +     -0.1329378358285 * Marital_StatusDivorced
1171569   +          +     -0.1585939674118 * Marital_StatusMarried
1171570   +          +     0.12646246189261 * Marital_StatusSingle
1171571   +          +     0.02351898949739 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.1000300691329 * Education2n_Cycle + 0.2070015782176 * 
EducationBasic + -0.02421180620986 * EducationGraduation + -0.0194914340189 * EducationMaster 
+ -0.1329378358285 * Marital_StatusDivorced + -0.1585939674118 * Marital_StatusMarried + 
0.12646246189261 * Marital_StatusSingle + 0.02351898949739 * Marital_StatusTogether ;
1171572   +   H11  =      0.4650755258615 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.4650755258615 + H11 ;
1171573   +   H12  =    -0.95637983233364 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.95637983233364 + H12 ;
1171574   +   H13  =    -0.46557260942286 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.46557260942286 + H13 ;
1171575   +   H14  =     0.54843208877211 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.54843208877211 + H14 ;
1171576   +   H15  =     0.84042548309301 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 0.84042548309301 + H15 ;
1171577   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1171578   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1171579   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1171580   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1171581   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1171582   +END;
MPRINT(EM_DIAGRAM):   END;
1171583   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1171584   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1171585   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1171586   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1171587   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1171588   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1171589   +END;
MPRINT(EM_DIAGRAM):   END;
1171590   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1171591   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1171592   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1171593   +
1171594   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1171595   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1171596   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1171597   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1171598   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1171599   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1171600   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1171601   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1171602   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1171603   +end;
MPRINT(EM_DIAGRAM):   end;
1171604   +else do;
MPRINT(EM_DIAGRAM):   else do;
1171605   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1171606   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1171607   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1171608   +   end;
MPRINT(EM_DIAGRAM):   end;
1171609   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1171610   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1171611   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1171612   +   end;
MPRINT(EM_DIAGRAM):   end;
1171613   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1171614   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1171615   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1171616   +   end;
MPRINT(EM_DIAGRAM):   end;
1171617   +end;
MPRINT(EM_DIAGRAM):   end;
1171618   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1171619   +   P_DepVar1  =    -3.09243100351612 * H11  +     0.88657133745413 * H12
1171620   +          +    -2.65301673073237 * H13  +     1.47093743452607 * H14
1171621   +          +    -1.93226639391443 * H15 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.09243100351612 * H11 + 0.88657133745413 * H12 + 
-2.65301673073237 * H13 + 1.47093743452607 * H14 + -1.93226639391443 * H15 ;
1171622   +   P_DepVar1  =    -1.83325335768642 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.83325335768642 + P_DepVar1 ;
1171623   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1171624   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1171625   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1171626   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1171627   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1171628   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1171629   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1171630   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1171631   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1171632   +END;
MPRINT(EM_DIAGRAM):   END;
1171633   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1171634   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1171635   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1171636   +END;
MPRINT(EM_DIAGRAM):   END;
1171637   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1171638   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1171639   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1171640   +END;
MPRINT(EM_DIAGRAM):   END;
1171641   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1171642   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1171643   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1171644   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1171645   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1171646   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1171647   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1171648   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1171649   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1171650   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1171651   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1171652   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1171653   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1171654   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1171655   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1171656   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1171657   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1171658   +END;
MPRINT(EM_DIAGRAM):   END;
1171659   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1171660   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1171661   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1171662   +drop
1171663   +H11
1171664   +H12
1171665   +H13
1171666   +H14
1171667   +H15
1171668   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 ;
1171669   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1171670    run;

NOTE: DATA STEP view saved on file EMWS8.NEURAL40_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.META3_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1171671    quit;
1171672    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
1171673    filename emflow
1171673  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural40\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural40\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural40: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1171674    *------------------------------------------------------------*;
1171675    * Neural40: Scoring VALIDATE data;
1171676    *------------------------------------------------------------*;
1171677    data EMWS8.Neural40_VALIDATE
1171678    / view=EMWS8.Neural40_VALIDATE
1171679    ;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural40_VALIDATE / view=EMWS8.Neural40_VALIDATE ;
1171680    set EMWS8.Meta3_VALIDATE
1171681    ;
MPRINT(EM_DIAGRAM):   set EMWS8.Meta3_VALIDATE ;
1171682    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural40\EMFLOWSCORE.sas.
1171683   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1171684   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1171685   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1171686   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1171687   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1171688   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1171689   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1171690   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1171691   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1171692   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1171693   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1171694   +LENGTH _WARN_ $4
1171695   +      F_DepVar  $ 12
1171696   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1171697   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1171698   +
1171699   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1171700   +
1171701   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1171702   +
1171703   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1171704   +
1171705   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1171706   +
1171707   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1171708   +
1171709   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1171710   +
1171711   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1171712   +
1171713   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1171714   +
1171715   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1171716   +
1171717   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1171718   +
1171719   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1171720   +
1171721   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1171722   +
1171723   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1171724   +
1171725   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1171726   +
1171727   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1171728   +
1171729   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1171730   +
1171731   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1171732   +
1171733   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1171734   +
1171735   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1171736   +
1171737   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1171738   +
1171739   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1171740   +
1171741   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1171742   +
1171743   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1171744   +
1171745   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1171746   +
1171747   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1171748   +
1171749   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1171750   +
1171751   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1171752   +
1171753   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1171754   +
1171755   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1171756   +
1171757   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1171758   +
1171759   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1171760   +
1171761   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1171762   +
1171763   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1171764   +
1171765   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1171766   +
1171767   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1171768   +
1171769   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1171770   +
1171771   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1171772   +
1171773   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1171774   +
1171775   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1171776   +
1171777   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1171778   +
1171779   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1171780   +
1171781   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1171782   +
1171783   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1171784   +
1171785   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1171786   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1171787   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1171788   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1171789   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1171790   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1171791   +end;
MPRINT(EM_DIAGRAM):   end;
1171792   +else do;
MPRINT(EM_DIAGRAM):   else do;
1171793   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1171794   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1171795   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1171796   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1171797   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1171798   +   end;
MPRINT(EM_DIAGRAM):   end;
1171799   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1171800   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1171801   +   end;
MPRINT(EM_DIAGRAM):   end;
1171802   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1171803   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1171804   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1171805   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1171806   +   end;
MPRINT(EM_DIAGRAM):   end;
1171807   +end;
MPRINT(EM_DIAGRAM):   end;
1171808   +
1171809   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1171810   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1171811   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1171812   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1171813   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1171814   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1171815   +end;
MPRINT(EM_DIAGRAM):   end;
1171816   +else do;
MPRINT(EM_DIAGRAM):   else do;
1171817   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1171818   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1171819   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1171820   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1171821   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1171822   +   end;
MPRINT(EM_DIAGRAM):   end;
1171823   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1171824   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1171825   +   end;
MPRINT(EM_DIAGRAM):   end;
1171826   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1171827   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1171828   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1171829   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1171830   +   end;
MPRINT(EM_DIAGRAM):   end;
1171831   +end;
MPRINT(EM_DIAGRAM):   end;
1171832   +
1171833   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1171834   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1171835   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1171836   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1171837   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1171838   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1171839   +end;
MPRINT(EM_DIAGRAM):   end;
1171840   +else do;
MPRINT(EM_DIAGRAM):   else do;
1171841   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1171842   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1171843   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1171844   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1171845   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1171846   +   end;
MPRINT(EM_DIAGRAM):   end;
1171847   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1171848   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1171849   +   end;
MPRINT(EM_DIAGRAM):   end;
1171850   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1171851   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1171852   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1171853   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1171854   +   end;
MPRINT(EM_DIAGRAM):   end;
1171855   +end;
MPRINT(EM_DIAGRAM):   end;
1171856   +
1171857   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1171858   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1171859   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1171860   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1171861   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1171862   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1171863   +end;
MPRINT(EM_DIAGRAM):   end;
1171864   +else do;
MPRINT(EM_DIAGRAM):   else do;
1171865   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1171866   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1171867   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1171868   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1171869   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1171870   +   end;
MPRINT(EM_DIAGRAM):   end;
1171871   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1171872   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1171873   +   end;
MPRINT(EM_DIAGRAM):   end;
1171874   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1171875   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1171876   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1171877   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1171878   +   end;
MPRINT(EM_DIAGRAM):   end;
1171879   +end;
MPRINT(EM_DIAGRAM):   end;
1171880   +
1171881   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1171882   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1171883   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1171884   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1171885   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1171886   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1171887   +end;
MPRINT(EM_DIAGRAM):   end;
1171888   +else do;
MPRINT(EM_DIAGRAM):   else do;
1171889   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1171890   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1171891   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1171892   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1171893   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1171894   +   end;
MPRINT(EM_DIAGRAM):   end;
1171895   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1171896   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1171897   +   end;
MPRINT(EM_DIAGRAM):   end;
1171898   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1171899   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1171900   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1171901   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1171902   +   end;
MPRINT(EM_DIAGRAM):   end;
1171903   +end;
MPRINT(EM_DIAGRAM):   end;
1171904   +
1171905   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1171906   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1171907   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1171908   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1171909   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1171910   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1171911   +end;
MPRINT(EM_DIAGRAM):   end;
1171912   +else do;
MPRINT(EM_DIAGRAM):   else do;
1171913   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1171914   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1171915   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1171916   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1171917   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1171918   +   end;
MPRINT(EM_DIAGRAM):   end;
1171919   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1171920   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1171921   +   end;
MPRINT(EM_DIAGRAM):   end;
1171922   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1171923   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1171924   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1171925   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1171926   +   end;
MPRINT(EM_DIAGRAM):   end;
1171927   +end;
MPRINT(EM_DIAGRAM):   end;
1171928   +
1171929   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1171930   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1171931   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1171932   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1171933   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1171934   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1171935   +end;
MPRINT(EM_DIAGRAM):   end;
1171936   +else do;
MPRINT(EM_DIAGRAM):   else do;
1171937   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1171938   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1171939   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1171940   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1171941   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1171942   +   end;
MPRINT(EM_DIAGRAM):   end;
1171943   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1171944   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1171945   +   end;
MPRINT(EM_DIAGRAM):   end;
1171946   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1171947   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1171948   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1171949   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1171950   +   end;
MPRINT(EM_DIAGRAM):   end;
1171951   +end;
MPRINT(EM_DIAGRAM):   end;
1171952   +
1171953   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1171954   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1171955   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1171956   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1171957   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1171958   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1171959   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1171960   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1171961   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1171962   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1171963   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1171964   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1171965   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1171966   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1171967   +end;
MPRINT(EM_DIAGRAM):   end;
1171968   +else do;
MPRINT(EM_DIAGRAM):   else do;
1171969   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1171970   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1171971   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1171972   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1171973   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1171974   +   end;
MPRINT(EM_DIAGRAM):   end;
1171975   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1171976   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1171977   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1171978   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1171979   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1171980   +   end;
MPRINT(EM_DIAGRAM):   end;
1171981   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1171982   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1171983   +   end;
MPRINT(EM_DIAGRAM):   end;
1171984   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1171985   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1171986   +   end;
MPRINT(EM_DIAGRAM):   end;
1171987   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1171988   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1171989   +   end;
MPRINT(EM_DIAGRAM):   end;
1171990   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1171991   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1171992   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1171993   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1171994   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1171995   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1171996   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1171997   +   end;
MPRINT(EM_DIAGRAM):   end;
1171998   +end;
MPRINT(EM_DIAGRAM):   end;
1171999   +
1172000   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1172001   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1172002   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1172003   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1172004   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1172005   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1172006   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1172007   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1172008   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1172009   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1172010   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1172011   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1172012   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1172013   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1172014   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1172015   +end;
MPRINT(EM_DIAGRAM):   end;
1172016   +else do;
MPRINT(EM_DIAGRAM):   else do;
1172017   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1172018   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1172019   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1172020   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1172021   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1172022   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1172023   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1172024   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1172025   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1172026   +         end;
MPRINT(EM_DIAGRAM):   end;
1172027   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1172028   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1172029   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1172030   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1172031   +            end;
MPRINT(EM_DIAGRAM):   end;
1172032   +         end;
MPRINT(EM_DIAGRAM):   end;
1172033   +      end;
MPRINT(EM_DIAGRAM):   end;
1172034   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1172035   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1172036   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1172037   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1172038   +         end;
MPRINT(EM_DIAGRAM):   end;
1172039   +      end;
MPRINT(EM_DIAGRAM):   end;
1172040   +   end;
MPRINT(EM_DIAGRAM):   end;
1172041   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1172042   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1172043   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1172044   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1172045   +      end;
MPRINT(EM_DIAGRAM):   end;
1172046   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1172047   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1172048   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1172049   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1172050   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1172051   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1172052   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1172053   +         end;
MPRINT(EM_DIAGRAM):   end;
1172054   +      end;
MPRINT(EM_DIAGRAM):   end;
1172055   +   end;
MPRINT(EM_DIAGRAM):   end;
1172056   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1172057   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1172058   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1172059   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1172060   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1172061   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1172062   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1172063   +   end;
MPRINT(EM_DIAGRAM):   end;
1172064   +end;
MPRINT(EM_DIAGRAM):   end;
1172065   +
1172066   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1172067   +*** Checking missing input Interval
1172068   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1172069   +
1172070   +IF NMISS(
1172071   +   AcceptedCmpTotal ,
1172072   +   Age ,
1172073   +   Frq ,
1172074   +   Income ,
1172075   +   Kidhome ,
1172076   +   MntFishProducts ,
1172077   +   MntFruits ,
1172078   +   MntGoldProds ,
1172079   +   MntSweetProducts ,
1172080   +   MonthsAsCustomer ,
1172081   +   NumDealsPurchases ,
1172082   +   NumWebVisitsMonth ,
1172083   +   RFMstat ,
1172084   +   RMntFrq ,
1172085   +   Recency ,
1172086   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
1172087   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1172088   +
1172089   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1172090   +END;
MPRINT(EM_DIAGRAM):   END;
1172091   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1172092   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1172093   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1172094   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1172095   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1172096   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1172097   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1172098   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1172099   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1172100   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1172101   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1172102   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1172103   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1172104   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1172105   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1172106   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1172107   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1172108   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
1172109   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
1172110   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1172111   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1172112   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1172113   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1172114   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1172115   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1172116   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1172117   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1172118   +END;
MPRINT(EM_DIAGRAM):   END;
1172119   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1172120   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1172121   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1172122   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1172123   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1172124   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1172125   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1172126   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1172127   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1172128   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1172129   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1172130   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1172131   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1172132   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1172133   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1172134   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1172135   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1172136   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1172137   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1172138   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1172139   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1172140   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1172141   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1172142   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1172143   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1172144   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
1172145   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
1172146   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1172147   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1172148   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1172149   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1172150   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1172151   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1172152   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1172153   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1172154   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1172155   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1172156   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1172157   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1172158   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1172159   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1172160   +END;
MPRINT(EM_DIAGRAM):   END;
1172161   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1172162   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1172163   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1172164   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1172165   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1172166   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1172167   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1172168   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1172169   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1172170   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1172171   +   H11  =      0.0032927309355 * S_AcceptedCmpTotal  +     0.09101334306394 *
1172172   +        S_Age  +    -0.17737387030956 * S_Frq  +     -0.7980677567639 *
1172173   +        S_Income  +     0.43076147384738 * S_Kidhome
1172174   +          +    -0.03764687993601 * S_MntFishProducts
1172175   +          +     0.02729806956772 * S_MntFruits  +     0.08803652910758 *
1172176   +        S_MntGoldProds  +     0.17643871051763 * S_MntSweetProducts
1172177   +          +    -0.21857007362207 * S_MonthsAsCustomer
1172178   +          +    -0.01738553271488 * S_NumDealsPurchases
1172179   +          +    -0.05405784617097 * S_NumWebVisitsMonth
1172180   +          +    -0.02555104359687 * S_RFMstat  +    -0.22262932120098 *
1172181   +        S_RMntFrq  +     0.52463751421504 * S_Recency
1172182   +          +     0.54544496970995 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.0032927309355 * S_AcceptedCmpTotal + 0.09101334306394 * S_Age + 
-0.17737387030956 * S_Frq + -0.7980677567639 * S_Income + 0.43076147384738 * S_Kidhome + 
-0.03764687993601 * S_MntFishProducts + 0.02729806956772 * S_MntFruits + 0.08803652910758 * 
S_MntGoldProds + 0.17643871051763 * S_MntSweetProducts + -0.21857007362207 * 
S_MonthsAsCustomer + -0.01738553271488 * S_NumDealsPurchases + -0.05405784617097 * 
S_NumWebVisitsMonth + -0.02555104359687 * S_RFMstat + -0.22262932120098 * S_RMntFrq + 
0.52463751421504 * S_Recency + 0.54544496970995 * S_Teenhome ;
1172183   +   H12  =    -0.33803565764996 * S_AcceptedCmpTotal  +     -0.1574598864259 *
1172184   +        S_Age  +    -0.11819127145626 * S_Frq  +     -0.0410639104551 *
1172185   +        S_Income  +     0.30116999256128 * S_Kidhome
1172186   +          +    -0.05148754431395 * S_MntFishProducts
1172187   +          +     0.06976805639315 * S_MntFruits  +     0.21288156312487 *
1172188   +        S_MntGoldProds  +     0.38336457324703 * S_MntSweetProducts
1172189   +          +    -0.47049602184046 * S_MonthsAsCustomer
1172190   +          +     0.31766759211089 * S_NumDealsPurchases
1172191   +          +     0.23065914125267 * S_NumWebVisitsMonth
1172192   +          +     0.30304676466657 * S_RFMstat  +     0.02069006823415 *
1172193   +        S_RMntFrq  +    -0.50214492406349 * S_Recency
1172194   +          +    -0.31828314433486 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.33803565764996 * S_AcceptedCmpTotal + -0.1574598864259 * S_Age 
+ -0.11819127145626 * S_Frq + -0.0410639104551 * S_Income + 0.30116999256128 * S_Kidhome + 
-0.05148754431395 * S_MntFishProducts + 0.06976805639315 * S_MntFruits + 0.21288156312487 * 
S_MntGoldProds + 0.38336457324703 * S_MntSweetProducts + -0.47049602184046 * 
S_MonthsAsCustomer + 0.31766759211089 * S_NumDealsPurchases + 0.23065914125267 * 
S_NumWebVisitsMonth + 0.30304676466657 * S_RFMstat + 0.02069006823415 * S_RMntFrq + 
-0.50214492406349 * S_Recency + -0.31828314433486 * S_Teenhome ;
1172195   +   H13  =    -0.66950066433143 * S_AcceptedCmpTotal  +    -0.13180706544499 *
1172196   +        S_Age  +    -0.35768347811788 * S_Frq  +    -0.48081944747804 *
1172197   +        S_Income  +    -0.47031432651131 * S_Kidhome
1172198   +          +     0.14501559210465 * S_MntFishProducts
1172199   +          +     0.04696430031502 * S_MntFruits  +    -0.56155803643986 *
1172200   +        S_MntGoldProds  +    -0.03811468849817 * S_MntSweetProducts
1172201   +          +    -0.12263198714092 * S_MonthsAsCustomer
1172202   +          +    -0.44778701790462 * S_NumDealsPurchases
1172203   +          +    -0.48451328063306 * S_NumWebVisitsMonth
1172204   +          +    -0.30729532219651 * S_RFMstat  +    -0.53933327781572 *
1172205   +        S_RMntFrq  +     0.73816873319969 * S_Recency
1172206   +          +     0.02727962791734 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.66950066433143 * S_AcceptedCmpTotal + -0.13180706544499 * S_Age 
+ -0.35768347811788 * S_Frq + -0.48081944747804 * S_Income + -0.47031432651131 * S_Kidhome + 
0.14501559210465 * S_MntFishProducts + 0.04696430031502 * S_MntFruits + -0.56155803643986 * 
S_MntGoldProds + -0.03811468849817 * S_MntSweetProducts + -0.12263198714092 * 
S_MonthsAsCustomer + -0.44778701790462 * S_NumDealsPurchases + -0.48451328063306 * 
S_NumWebVisitsMonth + -0.30729532219651 * S_RFMstat + -0.53933327781572 * S_RMntFrq + 
0.73816873319969 * S_Recency + 0.02727962791734 * S_Teenhome ;
1172207   +   H14  =     0.31637384240651 * S_AcceptedCmpTotal  +     0.01318551698119 *
1172208   +        S_Age  +     0.05366305732147 * S_Frq  +     0.11980702632855 *
1172209   +        S_Income  +    -0.63361814765775 * S_Kidhome
1172210   +          +    -0.09824863224867 * S_MntFishProducts
1172211   +          +    -0.19022726480556 * S_MntFruits  +    -0.03622071498812 *
1172212   +        S_MntGoldProds  +    -0.33481056314568 * S_MntSweetProducts
1172213   +          +    -0.02935796970517 * S_MonthsAsCustomer
1172214   +          +     0.02015249143837 * S_NumDealsPurchases
1172215   +          +     0.60675564879689 * S_NumWebVisitsMonth
1172216   +          +     0.25432072256404 * S_RFMstat  +    -0.18855949493817 *
1172217   +        S_RMntFrq  +    -0.75663473950421 * S_Recency
1172218   +          +    -0.34865918998533 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 0.31637384240651 * S_AcceptedCmpTotal + 0.01318551698119 * S_Age + 
0.05366305732147 * S_Frq + 0.11980702632855 * S_Income + -0.63361814765775 * S_Kidhome + 
-0.09824863224867 * S_MntFishProducts + -0.19022726480556 * S_MntFruits + -0.03622071498812 * 
S_MntGoldProds + -0.33481056314568 * S_MntSweetProducts + -0.02935796970517 * 
S_MonthsAsCustomer + 0.02015249143837 * S_NumDealsPurchases + 0.60675564879689 * 
S_NumWebVisitsMonth + 0.25432072256404 * S_RFMstat + -0.18855949493817 * S_RMntFrq + 
-0.75663473950421 * S_Recency + -0.34865918998533 * S_Teenhome ;
1172219   +   H15  =    -0.32654270849386 * S_AcceptedCmpTotal  +     0.17707100422873 *
1172220   +        S_Age  +     0.93625207609464 * S_Frq  +     0.26987977696455 *
1172221   +        S_Income  +    -0.00728146808361 * S_Kidhome
1172222   +          +    -0.15850529937985 * S_MntFishProducts
1172223   +          +     0.06513447200778 * S_MntFruits  +      0.0398444679725 *
1172224   +        S_MntGoldProds  +    -0.12149497244296 * S_MntSweetProducts
1172225   +          +    -0.00539233520343 * S_MonthsAsCustomer
1172226   +          +    -0.54182368084643 * S_NumDealsPurchases
1172227   +          +    -0.60072233649965 * S_NumWebVisitsMonth
1172228   +          +    -0.09022759163793 * S_RFMstat  +    -0.16894620369906 *
1172229   +        S_RMntFrq  +     0.66307424769463 * S_Recency
1172230   +          +    -0.17356690404814 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = -0.32654270849386 * S_AcceptedCmpTotal + 0.17707100422873 * S_Age 
+ 0.93625207609464 * S_Frq + 0.26987977696455 * S_Income + -0.00728146808361 * S_Kidhome + 
-0.15850529937985 * S_MntFishProducts + 0.06513447200778 * S_MntFruits + 0.0398444679725 * 
S_MntGoldProds + -0.12149497244296 * S_MntSweetProducts + -0.00539233520343 * 
S_MonthsAsCustomer + -0.54182368084643 * S_NumDealsPurchases + -0.60072233649965 * 
S_NumWebVisitsMonth + -0.09022759163793 * S_RFMstat + -0.16894620369906 * S_RMntFrq + 
0.66307424769463 * S_Recency + -0.17356690404814 * S_Teenhome ;
1172231   +   H11  = H11  +     0.40379020589792 * AcceptedCmp10
1172232   +          +     0.41163608029184 * AcceptedCmp20  +     0.31824152457666 *
1172233   +        AcceptedCmp30  +     0.30059703252717 * AcceptedCmp40
1172234   +          +     0.21809621049566 * AcceptedCmp50  +     0.17161388784292 *
1172235   +        Complain0  +    -0.35356191864234 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.40379020589792 * AcceptedCmp10 + 0.41163608029184 * 
AcceptedCmp20 + 0.31824152457666 * AcceptedCmp30 + 0.30059703252717 * AcceptedCmp40 + 
0.21809621049566 * AcceptedCmp50 + 0.17161388784292 * Complain0 + -0.35356191864234 * 
HigherEducationBinary0 ;
1172236   +   H12  = H12  +     0.14146453229372 * AcceptedCmp10
1172237   +          +    -0.01499648130434 * AcceptedCmp20  +    -0.15319425809948 *
1172238   +        AcceptedCmp30  +     0.10722126908794 * AcceptedCmp40
1172239   +          +     0.29524215734213 * AcceptedCmp50  +     0.21901777981386 *
1172240   +        Complain0  +     0.26589689583514 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.14146453229372 * AcceptedCmp10 + -0.01499648130434 * 
AcceptedCmp20 + -0.15319425809948 * AcceptedCmp30 + 0.10722126908794 * AcceptedCmp40 + 
0.29524215734213 * AcceptedCmp50 + 0.21901777981386 * Complain0 + 0.26589689583514 * 
HigherEducationBinary0 ;
1172241   +   H13  = H13  +    -0.13089590705194 * AcceptedCmp10
1172242   +          +    -0.16147741287576 * AcceptedCmp20  +     0.13892066553636 *
1172243   +        AcceptedCmp30  +    -0.12220468306752 * AcceptedCmp40
1172244   +          +     0.18197624280085 * AcceptedCmp50  +    -0.31355578222066 *
1172245   +        Complain0  +     0.17409691060383 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.13089590705194 * AcceptedCmp10 + -0.16147741287576 * 
AcceptedCmp20 + 0.13892066553636 * AcceptedCmp30 + -0.12220468306752 * AcceptedCmp40 + 
0.18197624280085 * AcceptedCmp50 + -0.31355578222066 * Complain0 + 0.17409691060383 * 
HigherEducationBinary0 ;
1172246   +   H14  = H14  +     0.24764542202116 * AcceptedCmp10
1172247   +          +     0.00575121729576 * AcceptedCmp20  +    -0.30692671431758 *
1172248   +        AcceptedCmp30  +     0.04820882787304 * AcceptedCmp40
1172249   +          +     0.05262951745934 * AcceptedCmp50  +     0.19424906323292 *
1172250   +        Complain0  +     0.02739699491892 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.24764542202116 * AcceptedCmp10 + 0.00575121729576 * 
AcceptedCmp20 + -0.30692671431758 * AcceptedCmp30 + 0.04820882787304 * AcceptedCmp40 + 
0.05262951745934 * AcceptedCmp50 + 0.19424906323292 * Complain0 + 0.02739699491892 * 
HigherEducationBinary0 ;
1172251   +   H15  = H15  +     0.55249118257316 * AcceptedCmp10
1172252   +          +     0.03472783050924 * AcceptedCmp20  +     0.45051734949789 *
1172253   +        AcceptedCmp30  +    -0.03032221189323 * AcceptedCmp40
1172254   +          +     0.28472394784854 * AcceptedCmp50  +     0.06409321661831 *
1172255   +        Complain0  +     0.17517854321941 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.55249118257316 * AcceptedCmp10 + 0.03472783050924 * 
AcceptedCmp20 + 0.45051734949789 * AcceptedCmp30 + -0.03032221189323 * AcceptedCmp40 + 
0.28472394784854 * AcceptedCmp50 + 0.06409321661831 * Complain0 + 0.17517854321941 * 
HigherEducationBinary0 ;
1172256   +   H11  = H11  +     0.01296567207369 * Education2n_Cycle
1172257   +          +     -0.1384611563627 * EducationBasic  +    -0.07977602646684 *
1172258   +        EducationGraduation  +     0.24334570893333 * EducationMaster
1172259   +          +    -0.38882658584856 * Marital_StatusDivorced
1172260   +          +     0.65814014556907 * Marital_StatusMarried
1172261   +          +    -0.47946271812834 * Marital_StatusSingle
1172262   +          +     0.68266301555878 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.01296567207369 * Education2n_Cycle + -0.1384611563627 * 
EducationBasic + -0.07977602646684 * EducationGraduation + 0.24334570893333 * EducationMaster 
+ -0.38882658584856 * Marital_StatusDivorced + 0.65814014556907 * Marital_StatusMarried + 
-0.47946271812834 * Marital_StatusSingle + 0.68266301555878 * Marital_StatusTogether ;
1172263   +   H12  = H12  +    -0.17120287038112 * Education2n_Cycle
1172264   +          +    -0.02706838966272 * EducationBasic  +     0.28296380151006 *
1172265   +        EducationGraduation  +     0.06350902674039 * EducationMaster
1172266   +          +     -0.3300387788221 * Marital_StatusDivorced
1172267   +          +     0.15584744966644 * Marital_StatusMarried
1172268   +          +     0.26617174676758 * Marital_StatusSingle
1172269   +          +    -0.29771537576014 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.17120287038112 * Education2n_Cycle + -0.02706838966272 * 
EducationBasic + 0.28296380151006 * EducationGraduation + 0.06350902674039 * EducationMaster + 
-0.3300387788221 * Marital_StatusDivorced + 0.15584744966644 * Marital_StatusMarried + 
0.26617174676758 * Marital_StatusSingle + -0.29771537576014 * Marital_StatusTogether ;
1172270   +   H13  = H13  +     0.05524541069883 * Education2n_Cycle
1172271   +          +     0.18324866500855 * EducationBasic  +    -0.25557023117825 *
1172272   +        EducationGraduation  +    -0.16479543389993 * EducationMaster
1172273   +          +    -0.06758334778864 * Marital_StatusDivorced
1172274   +          +    -0.00076716594904 * Marital_StatusMarried
1172275   +          +    -0.04319541969046 * Marital_StatusSingle
1172276   +          +    -0.16936317180157 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.05524541069883 * Education2n_Cycle + 0.18324866500855 * 
EducationBasic + -0.25557023117825 * EducationGraduation + -0.16479543389993 * EducationMaster 
+ -0.06758334778864 * Marital_StatusDivorced + -0.00076716594904 * Marital_StatusMarried + 
-0.04319541969046 * Marital_StatusSingle + -0.16936317180157 * Marital_StatusTogether ;
1172277   +   H14  = H14  +     0.04763927770842 * Education2n_Cycle
1172278   +          +     0.09740370469315 * EducationBasic  +      0.2355172519549 *
1172279   +        EducationGraduation  +    -0.17375916527677 * EducationMaster
1172280   +          +      0.2099776154173 * Marital_StatusDivorced
1172281   +          +    -0.53311901286241 * Marital_StatusMarried
1172282   +          +     0.48618352894253 * Marital_StatusSingle
1172283   +          +    -0.13406957503471 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.04763927770842 * Education2n_Cycle + 0.09740370469315 * 
EducationBasic + 0.2355172519549 * EducationGraduation + -0.17375916527677 * EducationMaster + 
0.2099776154173 * Marital_StatusDivorced + -0.53311901286241 * Marital_StatusMarried + 
0.48618352894253 * Marital_StatusSingle + -0.13406957503471 * Marital_StatusTogether ;
1172284   +   H15  = H15  +     -0.1000300691329 * Education2n_Cycle
1172285   +          +      0.2070015782176 * EducationBasic  +    -0.02421180620986 *
1172286   +        EducationGraduation  +     -0.0194914340189 * EducationMaster
1172287   +          +     -0.1329378358285 * Marital_StatusDivorced
1172288   +          +     -0.1585939674118 * Marital_StatusMarried
1172289   +          +     0.12646246189261 * Marital_StatusSingle
1172290   +          +     0.02351898949739 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.1000300691329 * Education2n_Cycle + 0.2070015782176 * 
EducationBasic + -0.02421180620986 * EducationGraduation + -0.0194914340189 * EducationMaster 
+ -0.1329378358285 * Marital_StatusDivorced + -0.1585939674118 * Marital_StatusMarried + 
0.12646246189261 * Marital_StatusSingle + 0.02351898949739 * Marital_StatusTogether ;
1172291   +   H11  =      0.4650755258615 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.4650755258615 + H11 ;
1172292   +   H12  =    -0.95637983233364 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.95637983233364 + H12 ;
1172293   +   H13  =    -0.46557260942286 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.46557260942286 + H13 ;
1172294   +   H14  =     0.54843208877211 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.54843208877211 + H14 ;
1172295   +   H15  =     0.84042548309301 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 0.84042548309301 + H15 ;
1172296   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1172297   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1172298   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1172299   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1172300   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1172301   +END;
MPRINT(EM_DIAGRAM):   END;
1172302   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1172303   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1172304   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1172305   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1172306   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1172307   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1172308   +END;
MPRINT(EM_DIAGRAM):   END;
1172309   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1172310   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1172311   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1172312   +
1172313   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1172314   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1172315   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1172316   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1172317   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1172318   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1172319   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1172320   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1172321   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1172322   +end;
MPRINT(EM_DIAGRAM):   end;
1172323   +else do;
MPRINT(EM_DIAGRAM):   else do;
1172324   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1172325   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1172326   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1172327   +   end;
MPRINT(EM_DIAGRAM):   end;
1172328   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1172329   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1172330   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1172331   +   end;
MPRINT(EM_DIAGRAM):   end;
1172332   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1172333   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1172334   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1172335   +   end;
MPRINT(EM_DIAGRAM):   end;
1172336   +end;
MPRINT(EM_DIAGRAM):   end;
1172337   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1172338   +   P_DepVar1  =    -3.09243100351612 * H11  +     0.88657133745413 * H12
1172339   +          +    -2.65301673073237 * H13  +     1.47093743452607 * H14
1172340   +          +    -1.93226639391443 * H15 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.09243100351612 * H11 + 0.88657133745413 * H12 + 
-2.65301673073237 * H13 + 1.47093743452607 * H14 + -1.93226639391443 * H15 ;
1172341   +   P_DepVar1  =    -1.83325335768642 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.83325335768642 + P_DepVar1 ;
1172342   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1172343   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1172344   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1172345   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1172346   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1172347   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1172348   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1172349   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1172350   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1172351   +END;
MPRINT(EM_DIAGRAM):   END;
1172352   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1172353   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1172354   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1172355   +END;
MPRINT(EM_DIAGRAM):   END;
1172356   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1172357   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1172358   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1172359   +END;
MPRINT(EM_DIAGRAM):   END;
1172360   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1172361   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1172362   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1172363   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1172364   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1172365   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1172366   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1172367   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1172368   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1172369   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1172370   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1172371   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1172372   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1172373   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1172374   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1172375   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1172376   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1172377   +END;
MPRINT(EM_DIAGRAM):   END;
1172378   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1172379   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1172380   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1172381   +drop
1172382   +H11
1172383   +H12
1172384   +H13
1172385   +H14
1172386   +H15
1172387   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 ;
1172388   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1172389    run;

NOTE: DATA STEP view saved on file EMWS8.NEURAL40_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.META3_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1172390    quit;
1172391    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
1172392    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
1172393    * Neural40: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Neural40: Computing metadata for TRAIN data;
1172394    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS8.NEURAL40_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural40\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.Neural40_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.Neural40_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.Neural40_TRAIN out=WORK.M05EX0GP noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M05EX0GP;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M05EX0GP(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = 
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M05EX0GP;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M05EX0GP;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M13Q36PU NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M13Q36PU;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M13Q36PU;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0JONOA7(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M13Q36PU;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M13Q36PU;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M13Q36PU;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M13Q36PU;
MPRINT(EMADVISECOLUMNS):   set WORK.M13Q36PU;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Meta3_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Meta3_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural40_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Neural40";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "Neural40";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "Neural40";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "Neural40";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "Neural40";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "Neural40";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "Neural40";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "Neural40";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Neural40";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "Neural40";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural40: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
1172706    data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
1172707    set EMWS8.Neural40_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural40_EMINFO;
1172708    where DATA='Neural40' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Neural40' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 
'MODEL');
1172709    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.NEURAL40_EMINFO.
      WHERE (DATA='Neural40') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1172710    data EMWS8.Neural40_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.Neural40_EMINFO;
1172711    length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
1172712    input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
1172713    cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS8.NEURAL40_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   run;
1172717    run;
1172718    data EMWS8.Neural40_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural40_EMINFO;
1172719    set EMWS8.Neural40_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural40_EMINFO WORK.MODELTEMP_INFO;
1172720    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.NEURAL40_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.NEURAL40_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1172721    proc sort data = EMWS8.Neural40_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Neural40_EMINFO NOTHREADS;
1172722    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1172723    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.NEURAL40_EMINFO.
NOTE: The data set EMWS8.NEURAL40_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1172724    proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
1172725    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1172726    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS8.FIMPORT_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1172727    proc sort data = EMWS8.Neural40_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Neural40_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
1172728    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1172729    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.NEURAL40_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1172730    data EMWS8.Neural40_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural40_EMINFO;
1172731    merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
1172732    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1172733    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.NEURAL40_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1172734    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
1172735    delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
1172736    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
1172737    quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

NOTE: View EMWS8.NEURAL40_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: View EMWS8.NEURAL40_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
