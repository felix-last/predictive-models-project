*------------------------------------------------------------*
User:                Lukas Fahr
Date:                21. April 2016
Time:                19.03 Uhr
Site:                70107571
Platform:            X64_7PRO
Maintenance Release: 9.03.01M2P081512
EM Version:          12.1
* 
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "21. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "19.03 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Training Log
Date:                21. April 2016
Time:                19.03 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O0NIXFRZ
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl23\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O0NIXFRZ new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl23\EMLOG.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "21. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "19.03 Uhr" );
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                Lukas Fahr";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70107571";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_7PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.03.01M2P081512";
MPRINT(EM_DIAGRAM):   put "EM Version:          12.1";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl23\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _LOGIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl23\EMSCORE.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl23\EMREPORT.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl23\EMOUTPUT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "21. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "19.03 Uhr" );
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                Lukas Fahr";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl23\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl23\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl23\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_
'C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl23\EMRUNSTATUS.xml' encoding="UTF-8"
NOBOM;
(FREQ=(WHERE='ROLE = "FREQ"' DEFAULT='Y' RULE=(RULE1=(DESCRIPTION='USEATMOST1FREQ'
VALUES=(VALUE1='Y' )[272825] MAX=1 EXCEEDMAXVALUE='' )[272829] )[272823]
VALIDCHOICES=(CHOICE1='Y' )[272827] )[273111] INPUTREJECT=(WHERE='ROLE in("INPUT",
"REJECTED")' DEFAULT='D' VALIDCHOICES=(CHOICE1='D' )[272833]
RULE=(RULE1=(DESCRIPTION='USEATLEAST1INPUTREJECT' WHERE='(ROLE = "INPUT" and USE in("Y" "D"))
or (ROLE = "REJECTED" and USE = "Y")' MIN=. )[272837] )[272835] )[272831] TARGET=(WHERE='ROLE
= "TARGET"' DEFAULT='Y' VALIDCHOICES=(CHOICE1='Y' CHOICE2='N' )[272841]
RULE=(RULE1=(DESCRIPTION='METADATA.USE1TARGET' VALUES=(VALUE1='Y' )[272847] MIN=1 MAX=1
EXCEEDMAXVALUE='N' )[272845] )[272843] )[272839] )[272821]
2122816    proc freq data=EMWS8.Ensmbl23_VariableSet noprint;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS8.Ensmbl23_VariableSet noprint;
2122817    table ROLE*LEVEL/out=WORK.Ensmbl23META;
MPRINT(EM_DIAGRAM):   table ROLE*LEVEL/out=WORK.Ensmbl23META;
2122818    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.ENSMBL23_VARIABLESET.
NOTE: The data set WORK.ENSMBL23META has 5 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.06 seconds
      cpu time            0.00 seconds
 
 
2122819    proc print data=WORK.Ensmbl23META label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.Ensmbl23META label noobs;
2122820    var ROLE LEVEL COUNT;
MPRINT(EM_DIAGRAM):   var ROLE LEVEL COUNT;
2122821    label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL =
2122821  ! "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT =
2122821  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label ROLE = "Role" LEVEL = "Measurement Level" COUNT = "Frequency
Count";
2122822    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
2122823    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Variable Summary";
MPRINT(EM_DIAGRAM):   run;
2122824    run;
 
NOTE: There were 5 observations read from the data set WORK.ENSMBL23META.
NOTE: The PROCEDURE PRINT printed page 1527.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2122825    title10;
MPRINT(EM_DIAGRAM):   title10;
2122826    %let EMNORLEN = %DMNORLEN;
MPRINT(EM_DIAGRAM):
EMWS8.Neural37_TRAIN EMWS8.Neural37_TRAIN
EMWS8.Neural37_TRAIN EMWS8.Neural37_TRAIN EMWS8 Neural37_TRAIN
EMWS8.Neural37_TRAIN EMWS8.Neural37_TRAIN
EMWS8.Neural37_TRAIN EMWS8.Neural37_TRAIN EMWS8 Neural37_TRAIN
MPRINT(EM_DIAGRAM):    proc dmdb data=EMWS8.Neural37_TRAIN
classout=WORK._DMDBCLASSTARGET(keep=NAME NRAW CRAW LEVEL FREQUENCY NMISSPERCENT);
MPRINT(EM_DIAGRAM):   class DepVar(DESC) ;
MPRINT(EM_DIAGRAM):   run;
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _INIT >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _term >>
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set WORK._DMDBCLASSTARGET;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   if _N_=1 then call symput('_newevent', strip(LEVEL));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK._DMDBCLASSTARGET out=_TEMPCLASS(keep=LEVEL FREQUENCY
NMISSPERCENT rename=(LEVEL=DepVar));
MPRINT(EM_DIAGRAM):   by LEVEL;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _TEMPCLASS;
MPRINT(EM_DIAGRAM):   set _TEMPCLASS;
MPRINT(EM_DIAGRAM):   NMISSPERCENT= NMISSPERCENT/100;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.Neural37_DepVar_DD out=_sortedDecdata;
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   merge _TEMPCLASS(in=_a) _sortedDecdata(in=_b);
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   if (_a and ^_b) or (^_a and _b) then call symput('_emresetDec', '1');
MPRINT(EM_DIAGRAM):   run;
2122855    data WORK.Ensmbl23_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS ORDER);
MPRINT(EM_DIAGRAM):    data WORK.Ensmbl23_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS
ORDER);
2122856    length ORDER $20;
MPRINT(EM_DIAGRAM):   length ORDER $20;
2122857    label VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel,  NOQUOTE))"
2122857  ! EVENT = "%sysfunc(sasmsg(sashelp.dmine, assmt_event_vlabel, NOQUOTE))" NUMLEVELS =
2122857  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_numcat_vlabel, NOQUOTE))" LEVEL =
2122858       "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" ORDER =
2122858  ! "%sysfunc(sasmsg(sashelp.dmine, meta_order_vlabel, NOQUOTE))" LABEL =
2122858  ! "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label VARIABLE = "Target" EVENT = "Event" NUMLEVELS = "Number of Levels"
LEVEL = "Measurement Level" ORDER = "Order" LABEL = "Label";
2122859    set EMWS8.NEURAL37_DEPVAR_DM( where=(_TYPE_="TARGET"));
MPRINT(EM_DIAGRAM):   set EMWS8.NEURAL37_DEPVAR_DM( where=(_TYPE_="TARGET"));
2122860    NumLevels=2;
MPRINT(EM_DIAGRAM):   NumLevels=2;
2122861    select(upcase(ORDER));
MPRINT(EM_DIAGRAM):   select(upcase(ORDER));
2122862    when('DESC') ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   when('DESC') ORDER = 'Descending';
2122863    when('ASC') ORDER = 'Ascending';
MPRINT(EM_DIAGRAM):   when('ASC') ORDER = 'Ascending';
2122864    when('FMTDESC') ORDER = 'Formatted Descending';
MPRINT(EM_DIAGRAM):   when('FMTDESC') ORDER = 'Formatted Descending';
2122865    when('FMTASC') ORDER = 'Formatted Ascending';
MPRINT(EM_DIAGRAM):   when('FMTASC') ORDER = 'Formatted Ascending';
2122866    otherwise ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   otherwise ORDER = 'Descending';
2122867    end;
MPRINT(EM_DIAGRAM):   end;
2122868    output;
MPRINT(EM_DIAGRAM):   output;
2122869    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.NEURAL37_DEPVAR_DM.
      WHERE _TYPE_='TARGET';
NOTE: The data set WORK.ENSMBL23_EVENT has 1 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2122870    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
2122871    proc print data=WORK.Ensmbl23_EVENT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=WORK.Ensmbl23_EVENT noobs label;
2122872    var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
MPRINT(EM_DIAGRAM):   var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
2122873    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
2122874    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_modelEvent_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Model Events";
MPRINT(EM_DIAGRAM):   run;
2122875    run;
 
NOTE: There were 1 observations read from the data set WORK.ENSMBL23_EVENT.
NOTE: The PROCEDURE PRINT printed page 1528.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2122876    title10;
MPRINT(EM_DIAGRAM):   title10;
"No decisions defined for target "DepVar"."
2122877    proc print data = EMWS8.Neural37_DepVar_DM noobs label;
MPRINT(EM_DIAGRAM):    proc print data = EMWS8.Neural37_DepVar_DM noobs label;
2122878    var _type_ variable label;
MPRINT(EM_DIAGRAM):   var _type_ variable label;
2122879    where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR', 'DECPRIOR');
MPRINT(EM_DIAGRAM):   where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR',
'DECPRIOR');
2122880    label _TYPE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_type_vlabel,     NOQUOTE))"
2122880  ! VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))" LABEL =
2122880  ! "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Type" VARIABLE = "Variable" LABEL = "Label";
2122881    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
2122882    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_predDecVars_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Predicted and decision variables";
MPRINT(EM_DIAGRAM):   run;
2122883    run;
 
NOTE: There were 7 observations read from the data set EMWS8.NEURAL37_DEPVAR_DM.
      WHERE _type_ not in ('DATAPRIOR', 'DECISION', 'DECPRIOR', 'MATRIX', 'TRAINPRIOR');
NOTE: The PROCEDURE PRINT printed page 1529.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2122884    title10;
MPRINT(EM_DIAGRAM):   title10;
2122885    %let groupid =;
2122886    %let endGroupid =;
2122887    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
2122888    set EMWS8.Neural41_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural41_EMINFO;
2122889    where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
2122889  ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
2122890    if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
2122891    else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
2122892    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.NEURAL41_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2122893    %let groupid =;
2122894    %let endGroupid =;
2122895    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
2122896    set EMWS8.Neural40_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural40_EMINFO;
2122897    where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
2122897  ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
2122898    if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
2122899    else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
2122900    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.NEURAL40_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2122901    %let groupid =;
2122902    %let endGroupid =;
2122903    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
2122904    set EMWS8.Neural39_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural39_EMINFO;
2122905    where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
2122905  ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
2122906    if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
2122907    else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
2122908    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.NEURAL39_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2122909    %let groupid =;
2122910    %let endGroupid =;
2122911    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
2122912    set EMWS8.Neural38_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural38_EMINFO;
2122913    where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
2122913  ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
2122914    if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
2122915    else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
2122916    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.NEURAL38_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2122917    %let groupid =;
2122918    %let endGroupid =;
2122919    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
2122920    set EMWS8.Neural37_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural37_EMINFO;
2122921    where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
2122921  ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
2122922    if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
2122923    else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
2122924    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.NEURAL37_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2122925    data WORK.Ensmbl23;
MPRINT(EM_DIAGRAM):    data WORK.Ensmbl23;
2122926    length NodeId $32 Model $64;
MPRINT(EM_DIAGRAM):   length NodeId $32 Model $64;
2122927    label Nodeid = "%sysfunc(sasmsg(sashelp.dmine, rpt_nodeId_vlabel,  NOQUOTE))" Model
2122927  ! = "%sysfunc(sasmsg(sashelp.dmine, rpt_modeltype,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label Nodeid = "Node Id" Model = "rpt_modeltype";
2122928    nodeid="NEURAL41";
MPRINT(EM_DIAGRAM):   nodeid="NEURAL41";
2122929    model="Neural";
MPRINT(EM_DIAGRAM):   model="Neural";
2122930    output;
MPRINT(EM_DIAGRAM):   output;
2122931    nodeid="NEURAL40";
MPRINT(EM_DIAGRAM):   nodeid="NEURAL40";
2122932    model="Neural";
MPRINT(EM_DIAGRAM):   model="Neural";
2122933    output;
MPRINT(EM_DIAGRAM):   output;
2122934    nodeid="NEURAL39";
MPRINT(EM_DIAGRAM):   nodeid="NEURAL39";
2122935    model="Neural";
MPRINT(EM_DIAGRAM):   model="Neural";
2122936    output;
MPRINT(EM_DIAGRAM):   output;
2122937    nodeid="NEURAL38";
MPRINT(EM_DIAGRAM):   nodeid="NEURAL38";
2122938    model="Neural";
MPRINT(EM_DIAGRAM):   model="Neural";
2122939    output;
MPRINT(EM_DIAGRAM):   output;
2122940    nodeid="NEURAL37";
MPRINT(EM_DIAGRAM):   nodeid="NEURAL37";
2122941    model="Neural";
MPRINT(EM_DIAGRAM):   model="Neural";
2122942    output;
MPRINT(EM_DIAGRAM):   output;
2122943    ;
MPRINT(EM_DIAGRAM):   ;
2122944    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK.ENSMBL23 has 5 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2122945    title;
MPRINT(EM_DIAGRAM):   title;
2122946    proc print data=WORK.Ensmbl23 label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.Ensmbl23 label noobs;
2122947    title9 "%sysfunc(sasmsg(sashelp.dmine, rpt_combinemodels_title,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   title9 "Imported Models to be Combined";
2122948    title10 "Probability Function: Average";
MPRINT(EM_DIAGRAM):   title10 "Probability Function: Average";
MPRINT(EM_DIAGRAM):   run;
2122949    run;
 
NOTE: There were 5 observations read from the data set WORK.ENSMBL23.
NOTE: The PROCEDURE PRINT printed page 1530.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2122950    title9;
MPRINT(EM_DIAGRAM):   title9;
2122951    title10;
MPRINT(EM_DIAGRAM):   title10;
2122952    data WORK.M18VQS_U;
MPRINT(EM_DIAGRAM):    data WORK.M18VQS_U;
2122953    set WORK.M18VQS_U;
MPRINT(EM_DIAGRAM):   set WORK.M18VQS_U;
2122954    where NAME = "DepVar";
MPRINT(EM_DIAGRAM):   where NAME = "DepVar";
2122955    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.M18VQS_U.
      WHERE NAME='DepVar';
NOTE: The data set WORK.M18VQS_U has 1 observations and 22 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2122956    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
2122957    * EM: DMDBClass Macro ;
MPRINT(EM_DIAGRAM):   * EM: DMDBClass Macro ;
2122958    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
2122959    %macro DMDBClass;
2122960        DepVar(DESC)
2122961    %mend DMDBClass;
2122962    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
2122963    * EM: DMDBVar Macro ;
MPRINT(EM_DIAGRAM):   * EM: DMDBVar Macro ;
2122964    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
2122965    %macro DMDBVar;
2122966
2122967    %mend DMDBVar;
2122968    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2122969    * EM: Create DMDB;
MPRINT(EM_DIAGRAM):   * EM: Create DMDB;
2122970    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2122971    proc dmdb batch data=EMWS8.Neural41_TRAIN
2122972    dmdbcat=WORK.EM_DMDB
2122973    maxlevel = 513
2122974    ;
MPRINT(EM_DIAGRAM):   proc dmdb batch data=EMWS8.Neural41_TRAIN dmdbcat=WORK.EM_DMDB maxlevel
= 513 ;
MPRINT(EM_DIAGRAM):   class
2122975    class %DMDBClass;
MPRINT(DMDBCLASS):   DepVar(DESC)
MPRINT(EM_DIAGRAM):  ;
2122976    target
2122977    DepVar
2122978    ;
MPRINT(EM_DIAGRAM):   target DepVar ;
2122979    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Records processed = 2374   Memory used = 511K.
NOTE: There were 2374 observations read from the data set EMWS8.PART_TRAIN.
NOTE: View EMWS8.NEURAL41_TRAIN.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
NOTE: There were 2374 observations read from the data set EMWS8.META3_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.NEURAL41_TRAIN.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.06 seconds
      cpu time            0.04 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *--- end code ---*;
2122980    quit;
2122981    *--- end code ---*;
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "21. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "19.03 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                21. April 2016
Time:                19.03 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O2Q7Z9O_
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl23\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O2Q7Z9O_ new;
MPRINT(EM_DIAGRAM):   run;
2123083    filename emflow
2123083  ! "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl23\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl23\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl23: Scoring NEURAL41_TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2123084    *------------------------------------------------------------*;
2123085    * Ensmbl23: Scoring NEURAL41_TRAIN data;
2123086    *------------------------------------------------------------*;
2123087    data EMWS8.Ensmbl23_TRAIN
2123088    / view=EMWS8.Ensmbl23_TRAIN
2123089    ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl23_TRAIN / view=EMWS8.Ensmbl23_TRAIN ;
2123090    set EMWS8.Neural41_TRAIN
2123091    ;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural41_TRAIN ;
2123092    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file
      C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl23\EMFLOWSCORE.sas.
2123093   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2123094   +* Ensmbl23: Combine model for DepVar;
MPRINT(EM_DIAGRAM):   * Ensmbl23: Combine model for DepVar;
2123095   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2123096   +* Ensmbl23: Scoring Code of model 1 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl23: Scoring Code of model 1 of 5;
2123097   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2123098   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2123099   +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
2123100   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
2123101   +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
2123102   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2123103   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2123104   +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
2123105   +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
2123106   +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
2123107   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2123108   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2123109   +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
2123110   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
2123111   +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
2123112   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2123113   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2123114   +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
2123115   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
2123116   +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
2123117   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2123118   +
2123119   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
2123120   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
2123120  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
2123121   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
2123122   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
2123123   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
2123124   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
2123125   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
2123126   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2123127   +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
2123128   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
2123129   +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
2123130   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2123131   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2123132   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
2123133   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2123134   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
2123135   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
2123136   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
2123137   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2123138   +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
2123139   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
2123140   +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
2123141   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2123142   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2123143   +* TOOL: Metadata Node;
MPRINT(EM_DIAGRAM):   * TOOL: Metadata Node;
2123144   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
2123145   +* NODE: Meta3;
MPRINT(EM_DIAGRAM):   * NODE: Meta3;
2123146   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2123147   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2123148   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
2123149   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2123150   +* NODE: Neural41;
MPRINT(EM_DIAGRAM):   * NODE: Neural41;
2123151   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2123152   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2123153   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2123154   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2123155   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2123156   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2123157   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2123158   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2123159   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2123160   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2123161   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2123162   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2123163   +LENGTH _WARN_ $4
2123164   +      F_DepVar  $ 12
2123165   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2123166   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2123167   +
2123168   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2123169   +
2123170   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2123171   +
2123172   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2123173   +
2123174   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2123175   +
2123176   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2123177   +
2123178   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2123179   +
2123180   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2123181   +
2123182   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2123183   +
2123184   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2123185   +
2123186   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2123187   +
2123188   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2123189   +
2123190   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2123191   +
2123192   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2123193   +
2123194   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2123195   +
2123196   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2123197   +
2123198   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2123199   +
2123200   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2123201   +
2123202   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2123203   +
2123204   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2123205   +
2123206   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2123207   +
2123208   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2123209   +
2123210   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2123211   +
2123212   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2123213   +
2123214   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2123215   +
2123216   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2123217   +
2123218   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2123219   +
2123220   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2123221   +
2123222   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2123223   +
2123224   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2123225   +
2123226   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2123227   +
2123228   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
2123229   +
2123230   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
2123231   +
2123232   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
2123233   +
2123234   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
2123235   +
2123236   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
2123237   +
2123238   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
2123239   +
2123240   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2123241   +
2123242   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2123243   +
2123244   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2123245   +
2123246   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2123247   +
2123248   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2123249   +
2123250   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2123251   +
2123252   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2123253   +
2123254   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2123255   +
2123256   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2123257   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2123258   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2123259   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2123260   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2123261   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2123262   +end;
MPRINT(EM_DIAGRAM):   end;
2123263   +else do;
MPRINT(EM_DIAGRAM):   else do;
2123264   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2123265   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2123266   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2123267   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2123268   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2123269   +   end;
MPRINT(EM_DIAGRAM):   end;
2123270   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2123271   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2123272   +   end;
MPRINT(EM_DIAGRAM):   end;
2123273   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2123274   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2123275   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2123276   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2123277   +   end;
MPRINT(EM_DIAGRAM):   end;
2123278   +end;
MPRINT(EM_DIAGRAM):   end;
2123279   +
2123280   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2123281   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2123282   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2123283   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2123284   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2123285   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2123286   +end;
MPRINT(EM_DIAGRAM):   end;
2123287   +else do;
MPRINT(EM_DIAGRAM):   else do;
2123288   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2123289   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2123290   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2123291   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2123292   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2123293   +   end;
MPRINT(EM_DIAGRAM):   end;
2123294   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2123295   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2123296   +   end;
MPRINT(EM_DIAGRAM):   end;
2123297   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2123298   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2123299   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2123300   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2123301   +   end;
MPRINT(EM_DIAGRAM):   end;
2123302   +end;
MPRINT(EM_DIAGRAM):   end;
2123303   +
2123304   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2123305   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2123306   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2123307   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2123308   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2123309   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2123310   +end;
MPRINT(EM_DIAGRAM):   end;
2123311   +else do;
MPRINT(EM_DIAGRAM):   else do;
2123312   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2123313   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2123314   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2123315   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2123316   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2123317   +   end;
MPRINT(EM_DIAGRAM):   end;
2123318   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2123319   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2123320   +   end;
MPRINT(EM_DIAGRAM):   end;
2123321   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2123322   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2123323   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2123324   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2123325   +   end;
MPRINT(EM_DIAGRAM):   end;
2123326   +end;
MPRINT(EM_DIAGRAM):   end;
2123327   +
2123328   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2123329   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2123330   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2123331   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2123332   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2123333   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2123334   +end;
MPRINT(EM_DIAGRAM):   end;
2123335   +else do;
MPRINT(EM_DIAGRAM):   else do;
2123336   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2123337   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2123338   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2123339   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2123340   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2123341   +   end;
MPRINT(EM_DIAGRAM):   end;
2123342   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2123343   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2123344   +   end;
MPRINT(EM_DIAGRAM):   end;
2123345   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2123346   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2123347   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2123348   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2123349   +   end;
MPRINT(EM_DIAGRAM):   end;
2123350   +end;
MPRINT(EM_DIAGRAM):   end;
2123351   +
2123352   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2123353   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2123354   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2123355   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2123356   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2123357   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2123358   +end;
MPRINT(EM_DIAGRAM):   end;
2123359   +else do;
MPRINT(EM_DIAGRAM):   else do;
2123360   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2123361   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2123362   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2123363   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2123364   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2123365   +   end;
MPRINT(EM_DIAGRAM):   end;
2123366   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2123367   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2123368   +   end;
MPRINT(EM_DIAGRAM):   end;
2123369   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2123370   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2123371   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2123372   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2123373   +   end;
MPRINT(EM_DIAGRAM):   end;
2123374   +end;
MPRINT(EM_DIAGRAM):   end;
2123375   +
2123376   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2123377   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2123378   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2123379   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2123380   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2123381   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2123382   +end;
MPRINT(EM_DIAGRAM):   end;
2123383   +else do;
MPRINT(EM_DIAGRAM):   else do;
2123384   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2123385   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2123386   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2123387   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2123388   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2123389   +   end;
MPRINT(EM_DIAGRAM):   end;
2123390   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2123391   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2123392   +   end;
MPRINT(EM_DIAGRAM):   end;
2123393   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2123394   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2123395   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2123396   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2123397   +   end;
MPRINT(EM_DIAGRAM):   end;
2123398   +end;
MPRINT(EM_DIAGRAM):   end;
2123399   +
2123400   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2123401   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2123402   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2123403   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2123404   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2123405   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2123406   +end;
MPRINT(EM_DIAGRAM):   end;
2123407   +else do;
MPRINT(EM_DIAGRAM):   else do;
2123408   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2123409   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2123410   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2123411   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2123412   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2123413   +   end;
MPRINT(EM_DIAGRAM):   end;
2123414   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2123415   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2123416   +   end;
MPRINT(EM_DIAGRAM):   end;
2123417   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2123418   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2123419   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2123420   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2123421   +   end;
MPRINT(EM_DIAGRAM):   end;
2123422   +end;
MPRINT(EM_DIAGRAM):   end;
2123423   +
2123424   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2123425   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
2123426   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2123427   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2123428   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2123429   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2123430   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2123431   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2123432   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2123433   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2123434   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2123435   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2123436   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2123437   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2123438   +end;
MPRINT(EM_DIAGRAM):   end;
2123439   +else do;
MPRINT(EM_DIAGRAM):   else do;
2123440   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2123441   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2123442   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2123443   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2123444   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2123445   +   end;
MPRINT(EM_DIAGRAM):   end;
2123446   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2123447   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2123448   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2123449   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2123450   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2123451   +   end;
MPRINT(EM_DIAGRAM):   end;
2123452   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2123453   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2123454   +   end;
MPRINT(EM_DIAGRAM):   end;
2123455   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2123456   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2123457   +   end;
MPRINT(EM_DIAGRAM):   end;
2123458   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2123459   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2123460   +   end;
MPRINT(EM_DIAGRAM):   end;
2123461   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2123462   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2123463   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2123464   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2123465   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2123466   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2123467   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2123468   +   end;
MPRINT(EM_DIAGRAM):   end;
2123469   +end;
MPRINT(EM_DIAGRAM):   end;
2123470   +
2123471   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2123472   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2123473   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
2123474   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2123475   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2123476   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2123477   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2123478   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2123479   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2123480   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2123481   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2123482   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2123483   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2123484   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2123485   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2123486   +end;
MPRINT(EM_DIAGRAM):   end;
2123487   +else do;
MPRINT(EM_DIAGRAM):   else do;
2123488   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2123489   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2123490   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2123491   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2123492   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2123493   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2123494   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2123495   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2123496   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2123497   +         end;
MPRINT(EM_DIAGRAM):   end;
2123498   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2123499   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2123500   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2123501   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2123502   +            end;
MPRINT(EM_DIAGRAM):   end;
2123503   +         end;
MPRINT(EM_DIAGRAM):   end;
2123504   +      end;
MPRINT(EM_DIAGRAM):   end;
2123505   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2123506   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2123507   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2123508   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2123509   +         end;
MPRINT(EM_DIAGRAM):   end;
2123510   +      end;
MPRINT(EM_DIAGRAM):   end;
2123511   +   end;
MPRINT(EM_DIAGRAM):   end;
2123512   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2123513   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2123514   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2123515   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2123516   +      end;
MPRINT(EM_DIAGRAM):   end;
2123517   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2123518   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2123519   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2123520   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2123521   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2123522   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2123523   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2123524   +         end;
MPRINT(EM_DIAGRAM):   end;
2123525   +      end;
MPRINT(EM_DIAGRAM):   end;
2123526   +   end;
MPRINT(EM_DIAGRAM):   end;
2123527   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2123528   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2123529   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2123530   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2123531   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2123532   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2123533   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2123534   +   end;
MPRINT(EM_DIAGRAM):   end;
2123535   +end;
MPRINT(EM_DIAGRAM):   end;
2123536   +
2123537   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2123538   +*** Checking missing input Interval
2123539   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2123540   +
2123541   +IF NMISS(
2123542   +   AcceptedCmpTotal ,
2123543   +   Age ,
2123544   +   Frq ,
2123545   +   Income ,
2123546   +   Kidhome ,
2123547   +   MntFishProducts ,
2123548   +   MntFruits ,
2123549   +   MntGoldProds ,
2123550   +   MntSweetProducts ,
2123551   +   MonthsAsCustomer ,
2123552   +   NumDealsPurchases ,
2123553   +   NumWebVisitsMonth ,
2123554   +   RFMstat ,
2123555   +   RMntFrq ,
2123556   +   Recency ,
2123557   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome ,
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer ,
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
2123558   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2123559   +
2123560   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2123561   +END;
MPRINT(EM_DIAGRAM):   END;
2123562   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2123563   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
2123564   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2123565   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2123566   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2123567   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2123568   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2123569   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2123570   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2123571   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2123572   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2123573   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2123574   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2123575   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2123576   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2123577   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2123578   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2123579   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2123580   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 *
MonthsAsCustomer ;
2123581   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2123582   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2123583   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2123584   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2123585   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2123586   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2123587   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2123588   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2123589   +END;
MPRINT(EM_DIAGRAM):   END;
2123590   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2123591   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2123592   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2123593   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2123594   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2123595   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2123596   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2123597   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2123598   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2123599   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2123600   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2123601   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2123602   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2123603   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2123604   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2123605   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2123606   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2123607   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2123608   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2123609   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2123610   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
2123611   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2123612   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2123613   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2123614   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2123615   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2123616   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 *
MonthsAsCustomer ;
2123617   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2123618   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2123619   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2123620   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2123621   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2123622   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2123623   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2123624   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2123625   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2123626   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2123627   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2123628   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2123629   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2123630   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2123631   +END;
MPRINT(EM_DIAGRAM):   END;
2123632   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2123633   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
2123634   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2123635   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2123636   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
2123637   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2123638   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2123639   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
2123640   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2123641   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2123642   +   H11  =     0.00111540513846 * S_AcceptedCmpTotal  +    -0.12971131901586 *
2123643   +        S_Age  +    -0.18520628994151 * S_Frq  +     0.00222884615859 *
2123644   +        S_Income  +    -0.52351504306035 * S_Kidhome
2123645   +          +     0.08140325105151 * S_MntFishProducts
2123646   +          +    -0.04386492140302 * S_MntFruits  +     0.05295232764925 *
2123647   +        S_MntGoldProds  +    -0.39891652227681 * S_MntSweetProducts
2123648   +          +    -0.43676985181672 * S_MonthsAsCustomer
2123649   +          +    -0.20260708598657 * S_NumDealsPurchases
2123650   +          +     0.06428019964102 * S_NumWebVisitsMonth
2123651   +          +     0.13467234938466 * S_RFMstat  +    -0.29483834428412 *
2123652   +        S_RMntFrq  +    -0.68447200324777 * S_Recency
2123653   +          +    -0.29437834033294 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.00111540513846 * S_AcceptedCmpTotal + -0.12971131901586 * S_Age
+ -0.18520628994151 * S_Frq + 0.00222884615859 * S_Income + -0.52351504306035 * S_Kidhome +
0.08140325105151 * S_MntFishProducts + -0.04386492140302 * S_MntFruits + 0.05295232764925 *
S_MntGoldProds + -0.39891652227681 * S_MntSweetProducts + -0.43676985181672 *
S_MonthsAsCustomer + -0.20260708598657 * S_NumDealsPurchases + 0.06428019964102 *
S_NumWebVisitsMonth + 0.13467234938466 * S_RFMstat + -0.29483834428412 * S_RMntFrq +
-0.68447200324777 * S_Recency + -0.29437834033294 * S_Teenhome ;
2123654   +   H12  =     0.39213879457216 * S_AcceptedCmpTotal  +    -0.01440353989436 *
2123655   +        S_Age  +     0.23865918577825 * S_Frq  +      0.6365049428914 *
2123656   +        S_Income  +     0.91112653634925 * S_Kidhome
2123657   +          +     0.26539332041133 * S_MntFishProducts
2123658   +          +    -0.31480262631724 * S_MntFruits  +     0.14786958565778 *
2123659   +        S_MntGoldProds  +      0.2400589361571 * S_MntSweetProducts
2123660   +          +    -0.12141919451173 * S_MonthsAsCustomer
2123661   +          +     0.66105669553858 * S_NumDealsPurchases
2123662   +          +     0.35126523805992 * S_NumWebVisitsMonth
2123663   +          +     0.15877473113544 * S_RFMstat  +     0.04256559397745 *
2123664   +        S_RMntFrq  +    -0.82322754979428 * S_Recency
2123665   +          +    -0.38093159094381 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.39213879457216 * S_AcceptedCmpTotal + -0.01440353989436 * S_Age
+ 0.23865918577825 * S_Frq + 0.6365049428914 * S_Income + 0.91112653634925 * S_Kidhome +
0.26539332041133 * S_MntFishProducts + -0.31480262631724 * S_MntFruits + 0.14786958565778 *
S_MntGoldProds + 0.2400589361571 * S_MntSweetProducts + -0.12141919451173 * S_MonthsAsCustomer
+ 0.66105669553858 * S_NumDealsPurchases + 0.35126523805992 * S_NumWebVisitsMonth +
0.15877473113544 * S_RFMstat + 0.04256559397745 * S_RMntFrq + -0.82322754979428 * S_Recency +
-0.38093159094381 * S_Teenhome ;
2123666   +   H13  =     0.01698497071572 * S_AcceptedCmpTotal  +    -0.18194797866377 *
2123667   +        S_Age  +    -0.38541123385894 * S_Frq  +    -0.85948176553863 *
2123668   +        S_Income  +     0.62421717479738 * S_Kidhome
2123669   +          +     0.15545639003856 * S_MntFishProducts
2123670   +          +    -0.04951281670167 * S_MntFruits  +    -0.02786799666153 *
2123671   +        S_MntGoldProds  +     0.25863651263316 * S_MntSweetProducts
2123672   +          +     -0.2202976559774 * S_MonthsAsCustomer
2123673   +          +      0.2989117555747 * S_NumDealsPurchases
2123674   +          +    -0.14751065039865 * S_NumWebVisitsMonth
2123675   +          +    -0.02597231393441 * S_RFMstat  +    -0.39431255412396 *
2123676   +        S_RMntFrq  +     0.37177599027897 * S_Recency
2123677   +          +     0.58385986175941 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 0.01698497071572 * S_AcceptedCmpTotal + -0.18194797866377 * S_Age
+ -0.38541123385894 * S_Frq + -0.85948176553863 * S_Income + 0.62421717479738 * S_Kidhome +
0.15545639003856 * S_MntFishProducts + -0.04951281670167 * S_MntFruits + -0.02786799666153 *
S_MntGoldProds + 0.25863651263316 * S_MntSweetProducts + -0.2202976559774 * S_MonthsAsCustomer
+ 0.2989117555747 * S_NumDealsPurchases + -0.14751065039865 * S_NumWebVisitsMonth +
-0.02597231393441 * S_RFMstat + -0.39431255412396 * S_RMntFrq + 0.37177599027897 * S_Recency +
0.58385986175941 * S_Teenhome ;
2123678   +   H14  =    -0.23472826464263 * S_AcceptedCmpTotal  +      0.2784288410174 *
2123679   +        S_Age  +     0.88464843816774 * S_Frq  +     0.17112519951794 *
2123680   +        S_Income  +    -0.00640590904736 * S_Kidhome
2123681   +          +    -0.26951923409269 * S_MntFishProducts
2123682   +          +     0.32894249282173 * S_MntFruits  +     0.07344906774263 *
2123683   +        S_MntGoldProds  +    -0.34990462553578 * S_MntSweetProducts
2123684   +          +    -0.03084445162862 * S_MonthsAsCustomer
2123685   +          +    -0.63431809432586 * S_NumDealsPurchases
2123686   +          +     -0.8623000996519 * S_NumWebVisitsMonth
2123687   +          +    -0.16320962913093 * S_RFMstat  +     -0.0912884569806 *
2123688   +        S_RMntFrq  +     0.62097299931152 * S_Recency
2123689   +          +    -0.21174542653958 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = -0.23472826464263 * S_AcceptedCmpTotal + 0.2784288410174 * S_Age +
0.88464843816774 * S_Frq + 0.17112519951794 * S_Income + -0.00640590904736 * S_Kidhome +
-0.26951923409269 * S_MntFishProducts + 0.32894249282173 * S_MntFruits + 0.07344906774263 *
S_MntGoldProds + -0.34990462553578 * S_MntSweetProducts + -0.03084445162862 *
S_MonthsAsCustomer + -0.63431809432586 * S_NumDealsPurchases + -0.8623000996519 *
S_NumWebVisitsMonth + -0.16320962913093 * S_RFMstat + -0.0912884569806 * S_RMntFrq +
0.62097299931152 * S_Recency + -0.21174542653958 * S_Teenhome ;
2123690   +   H15  =     0.08498061851068 * S_AcceptedCmpTotal  +    -0.03874599391049 *
2123691   +        S_Age  +     0.26071229941538 * S_Frq  +      0.3037475539849 *
2123692   +        S_Income  +    -0.24194113790018 * S_Kidhome
2123693   +          +    -0.19083222216875 * S_MntFishProducts
2123694   +          +     -0.2295473697124 * S_MntFruits  +    -0.34933034439567 *
2123695   +        S_MntGoldProds  +    -0.02693984703623 * S_MntSweetProducts
2123696   +          +     0.04053963129428 * S_MonthsAsCustomer
2123697   +          +    -0.43392648307969 * S_NumDealsPurchases
2123698   +          +    -0.27875696570809 * S_NumWebVisitsMonth
2123699   +          +     0.15140901901886 * S_RFMstat  +     0.24456818451854 *
2123700   +        S_RMntFrq  +     0.50440740103916 * S_Recency
2123701   +          +    -0.22578843225375 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = 0.08498061851068 * S_AcceptedCmpTotal + -0.03874599391049 * S_Age
+ 0.26071229941538 * S_Frq + 0.3037475539849 * S_Income + -0.24194113790018 * S_Kidhome +
-0.19083222216875 * S_MntFishProducts + -0.2295473697124 * S_MntFruits + -0.34933034439567 *
S_MntGoldProds + -0.02693984703623 * S_MntSweetProducts + 0.04053963129428 *
S_MonthsAsCustomer + -0.43392648307969 * S_NumDealsPurchases + -0.27875696570809 *
S_NumWebVisitsMonth + 0.15140901901886 * S_RFMstat + 0.24456818451854 * S_RMntFrq +
0.50440740103916 * S_Recency + -0.22578843225375 * S_Teenhome ;
2123702   +   H16  =     0.04456496773686 * S_AcceptedCmpTotal  +    -0.27559491111701 *
2123703   +        S_Age  +    -0.17508336034033 * S_Frq  +     0.53227247274911 *
2123704   +        S_Income  +    -0.25899044305101 * S_Kidhome
2123705   +          +    -0.04059351293128 * S_MntFishProducts
2123706   +          +     -0.0638851827999 * S_MntFruits  +    -0.00679153562123 *
2123707   +        S_MntGoldProds  +    -0.03056442128246 * S_MntSweetProducts
2123708   +          +    -0.00021820216919 * S_MonthsAsCustomer
2123709   +          +     0.26994179879371 * S_NumDealsPurchases
2123710   +          +     0.22503342875269 * S_NumWebVisitsMonth
2123711   +          +      0.0842978170878 * S_RFMstat  +     0.10196131382306 *
2123712   +        S_RMntFrq  +    -0.89639874371569 * S_Recency
2123713   +          +     -0.2664087147783 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = 0.04456496773686 * S_AcceptedCmpTotal + -0.27559491111701 * S_Age
+ -0.17508336034033 * S_Frq + 0.53227247274911 * S_Income + -0.25899044305101 * S_Kidhome +
-0.04059351293128 * S_MntFishProducts + -0.0638851827999 * S_MntFruits + -0.00679153562123 *
S_MntGoldProds + -0.03056442128246 * S_MntSweetProducts + -0.00021820216919 *
S_MonthsAsCustomer + 0.26994179879371 * S_NumDealsPurchases + 0.22503342875269 *
S_NumWebVisitsMonth + 0.0842978170878 * S_RFMstat + 0.10196131382306 * S_RMntFrq +
-0.89639874371569 * S_Recency + -0.2664087147783 * S_Teenhome ;
2123714   +   H11  = H11  +     0.24041745169534 * AcceptedCmp10
2123715   +          +     0.02544174782123 * AcceptedCmp20  +     0.05985429287388 *
2123716   +        AcceptedCmp30  +    -0.43610564100855 * AcceptedCmp40
2123717   +          +     -0.0033678658149 * AcceptedCmp50  +      0.4302437669653 *
2123718   +        Complain0  +     0.23399064979433 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.24041745169534 * AcceptedCmp10 + 0.02544174782123 *
AcceptedCmp20 + 0.05985429287388 * AcceptedCmp30 + -0.43610564100855 * AcceptedCmp40 +
-0.0033678658149 * AcceptedCmp50 + 0.4302437669653 * Complain0 + 0.23399064979433 *
HigherEducationBinary0 ;
2123719   +   H12  = H12  +     0.04113908603951 * AcceptedCmp10
2123720   +          +    -0.01093566327356 * AcceptedCmp20  +    -0.29048302676994 *
2123721   +        AcceptedCmp30  +     0.58809451838917 * AcceptedCmp40
2123722   +          +    -0.40651652706331 * AcceptedCmp50  +     0.59503559231942 *
2123723   +        Complain0  +    -0.31162206924656 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.04113908603951 * AcceptedCmp10 + -0.01093566327356 *
AcceptedCmp20 + -0.29048302676994 * AcceptedCmp30 + 0.58809451838917 * AcceptedCmp40 +
-0.40651652706331 * AcceptedCmp50 + 0.59503559231942 * Complain0 + -0.31162206924656 *
HigherEducationBinary0 ;
2123724   +   H13  = H13  +     0.49980132733088 * AcceptedCmp10
2123725   +          +     0.42591357833168 * AcceptedCmp20  +     0.29341561692077 *
2123726   +        AcceptedCmp30  +      0.5385511712513 * AcceptedCmp40
2123727   +          +     0.11385275317979 * AcceptedCmp50  +     0.11081932391124 *
2123728   +        Complain0  +    -0.44840720707687 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.49980132733088 * AcceptedCmp10 + 0.42591357833168 *
AcceptedCmp20 + 0.29341561692077 * AcceptedCmp30 + 0.5385511712513 * AcceptedCmp40 +
0.11385275317979 * AcceptedCmp50 + 0.11081932391124 * Complain0 + -0.44840720707687 *
HigherEducationBinary0 ;
2123729   +   H14  = H14  +     0.70002770930064 * AcceptedCmp10
2123730   +          +     0.03624451131553 * AcceptedCmp20  +     0.75509304132809 *
2123731   +        AcceptedCmp30  +     0.10669150880089 * AcceptedCmp40
2123732   +          +     0.40957450849357 * AcceptedCmp50  +     0.19133447423047 *
2123733   +        Complain0  +      0.0901288611482 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.70002770930064 * AcceptedCmp10 + 0.03624451131553 *
AcceptedCmp20 + 0.75509304132809 * AcceptedCmp30 + 0.10669150880089 * AcceptedCmp40 +
0.40957450849357 * AcceptedCmp50 + 0.19133447423047 * Complain0 + 0.0901288611482 *
HigherEducationBinary0 ;
2123734   +   H15  = H15  +     0.30472902210864 * AcceptedCmp10
2123735   +          +     -0.0160831175686 * AcceptedCmp20  +     0.09226996454789 *
2123736   +        AcceptedCmp30  +     0.03526648068533 * AcceptedCmp40
2123737   +          +      0.1969983492734 * AcceptedCmp50  +    -0.32330512066062 *
2123738   +        Complain0  +     -0.2085030313253 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.30472902210864 * AcceptedCmp10 + -0.0160831175686 *
AcceptedCmp20 + 0.09226996454789 * AcceptedCmp30 + 0.03526648068533 * AcceptedCmp40 +
0.1969983492734 * AcceptedCmp50 + -0.32330512066062 * Complain0 + -0.2085030313253 *
HigherEducationBinary0 ;
2123739   +   H16  = H16  +    -0.19560821735212 * AcceptedCmp10
2123740   +          +     0.01476856325219 * AcceptedCmp20  +    -0.28505549110679 *
2123741   +        AcceptedCmp30  +    -0.13003702218159 * AcceptedCmp40
2123742   +          +     -0.0444894569881 * AcceptedCmp50  +    -0.19927466163886 *
2123743   +        Complain0  +      0.1418696986192 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + -0.19560821735212 * AcceptedCmp10 + 0.01476856325219 *
AcceptedCmp20 + -0.28505549110679 * AcceptedCmp30 + -0.13003702218159 * AcceptedCmp40 +
-0.0444894569881 * AcceptedCmp50 + -0.19927466163886 * Complain0 + 0.1418696986192 *
HigherEducationBinary0 ;
2123744   +   H11  = H11  +     0.05142300573614 * Education2n_Cycle
2123745   +          +    -0.08044262556314 * EducationBasic  +    -0.01420547642374 *
2123746   +        EducationGraduation  +     0.01590498605031 * EducationMaster
2123747   +          +     0.12486109091842 * Marital_StatusDivorced
2123748   +          +    -0.02537427599041 * Marital_StatusMarried
2123749   +          +     0.04139233887566 * Marital_StatusSingle
2123750   +          +     0.01979901000533 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.05142300573614 * Education2n_Cycle + -0.08044262556314 *
EducationBasic + -0.01420547642374 * EducationGraduation + 0.01590498605031 * EducationMaster
+ 0.12486109091842 * Marital_StatusDivorced + -0.02537427599041 * Marital_StatusMarried +
0.04139233887566 * Marital_StatusSingle + 0.01979901000533 * Marital_StatusTogether ;
2123751   +   H12  = H12  +    -0.18925528201163 * Education2n_Cycle
2123752   +          +     0.13542558539857 * EducationBasic  +    -0.00318989932343 *
2123753   +        EducationGraduation  +     0.00556061144517 * EducationMaster
2123754   +          +      0.1922952868897 * Marital_StatusDivorced
2123755   +          +    -0.15043025991045 * Marital_StatusMarried
2123756   +          +     0.24380549252268 * Marital_StatusSingle
2123757   +          +      0.0914480494515 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.18925528201163 * Education2n_Cycle + 0.13542558539857 *
EducationBasic + -0.00318989932343 * EducationGraduation + 0.00556061144517 * EducationMaster
+ 0.1922952868897 * Marital_StatusDivorced + -0.15043025991045 * Marital_StatusMarried +
0.24380549252268 * Marital_StatusSingle + 0.0914480494515 * Marital_StatusTogether ;
2123758   +   H13  = H13  +     0.01984994959794 * Education2n_Cycle
2123759   +          +     0.05848951032368 * EducationBasic  +    -0.44607095594807 *
2123760   +        EducationGraduation  +     0.17433329582337 * EducationMaster
2123761   +          +    -0.19065058903153 * Marital_StatusDivorced
2123762   +          +     0.75653054479625 * Marital_StatusMarried
2123763   +          +    -0.66014855183925 * Marital_StatusSingle
2123764   +          +     0.57813394995752 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.01984994959794 * Education2n_Cycle + 0.05848951032368 *
EducationBasic + -0.44607095594807 * EducationGraduation + 0.17433329582337 * EducationMaster
+ -0.19065058903153 * Marital_StatusDivorced + 0.75653054479625 * Marital_StatusMarried +
-0.66014855183925 * Marital_StatusSingle + 0.57813394995752 * Marital_StatusTogether ;
2123765   +   H14  = H14  +     0.18480056670996 * Education2n_Cycle
2123766   +          +    -0.06350174929241 * EducationBasic  +    -0.27462372414402 *
2123767   +        EducationGraduation  +    -0.30561816795813 * EducationMaster
2123768   +          +    -0.18567969656169 * Marital_StatusDivorced
2123769   +          +    -0.14971561557485 * Marital_StatusMarried
2123770   +          +     0.15498901175156 * Marital_StatusSingle
2123771   +          +    -0.03455782443417 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.18480056670996 * Education2n_Cycle + -0.06350174929241 *
EducationBasic + -0.27462372414402 * EducationGraduation + -0.30561816795813 * EducationMaster
+ -0.18567969656169 * Marital_StatusDivorced + -0.14971561557485 * Marital_StatusMarried +
0.15498901175156 * Marital_StatusSingle + -0.03455782443417 * Marital_StatusTogether ;
2123772   +   H15  = H15  +    -0.12232381400482 * Education2n_Cycle
2123773   +          +     0.20473341276352 * EducationBasic  +      0.0491931637595 *
2123774   +        EducationGraduation  +    -0.21833425438085 * EducationMaster
2123775   +          +    -0.10111355311896 * Marital_StatusDivorced
2123776   +          +     0.14131454959607 * Marital_StatusMarried
2123777   +          +    -0.18391621678023 * Marital_StatusSingle
2123778   +          +     0.23175084120404 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.12232381400482 * Education2n_Cycle + 0.20473341276352 *
EducationBasic + 0.0491931637595 * EducationGraduation + -0.21833425438085 * EducationMaster +
-0.10111355311896 * Marital_StatusDivorced + 0.14131454959607 * Marital_StatusMarried +
-0.18391621678023 * Marital_StatusSingle + 0.23175084120404 * Marital_StatusTogether ;
2123779   +   H16  = H16  +     0.03069778538103 * Education2n_Cycle
2123780   +          +    -0.45911946295888 * EducationBasic  +    -0.07922750315693 *
2123781   +        EducationGraduation  +    -0.19964669060264 * EducationMaster
2123782   +          +     0.04572591415975 * Marital_StatusDivorced
2123783   +          +    -0.38535549815638 * Marital_StatusMarried
2123784   +          +     0.30341063880196 * Marital_StatusSingle
2123785   +          +    -0.28342984798633 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.03069778538103 * Education2n_Cycle + -0.45911946295888 *
EducationBasic + -0.07922750315693 * EducationGraduation + -0.19964669060264 * EducationMaster
+ 0.04572591415975 * Marital_StatusDivorced + -0.38535549815638 * Marital_StatusMarried +
0.30341063880196 * Marital_StatusSingle + -0.28342984798633 * Marital_StatusTogether ;
2123786   +   H11  =     1.39441509752238 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 1.39441509752238 + H11 ;
2123787   +   H12  =     0.19328666321992 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.19328666321992 + H12 ;
2123788   +   H13  =     0.55771988222719 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 0.55771988222719 + H13 ;
2123789   +   H14  =     0.27935543639097 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.27935543639097 + H14 ;
2123790   +   H15  =     1.08911808634908 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 1.08911808634908 + H15 ;
2123791   +   H16  =    -0.22580376250744 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -0.22580376250744 + H16 ;
2123792   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
2123793   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
2123794   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
2123795   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
2123796   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
2123797   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
2123798   +END;
MPRINT(EM_DIAGRAM):   END;
2123799   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2123800   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
2123801   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
2123802   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
2123803   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
2123804   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
2123805   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
2123806   +END;
MPRINT(EM_DIAGRAM):   END;
2123807   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2123808   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2123809   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2123810   +
2123811   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2123812   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2123813   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2123814   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2123815   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2123816   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2123817   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2123818   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2123819   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2123820   +end;
MPRINT(EM_DIAGRAM):   end;
2123821   +else do;
MPRINT(EM_DIAGRAM):   else do;
2123822   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2123823   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2123824   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2123825   +   end;
MPRINT(EM_DIAGRAM):   end;
2123826   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2123827   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2123828   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2123829   +   end;
MPRINT(EM_DIAGRAM):   end;
2123830   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2123831   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2123832   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2123833   +   end;
MPRINT(EM_DIAGRAM):   end;
2123834   +end;
MPRINT(EM_DIAGRAM):   end;
2123835   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2123836   +   P_DepVar1  =     1.18423178138253 * H11  +     2.38126931545785 * H12
2123837   +          +    -2.42139186007404 * H13  +      -2.187729844004 * H14
2123838   +          +    -0.38226616805204 * H15  +      1.1710139734699 * H16 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.18423178138253 * H11 + 2.38126931545785 * H12 +
-2.42139186007404 * H13 + -2.187729844004 * H14 + -0.38226616805204 * H15 + 1.1710139734699 *
H16 ;
2123839   +   P_DepVar1  =    -1.69958173763243 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.69958173763243 + P_DepVar1 ;
2123840   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2123841   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2123842   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2123843   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2123844   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2123845   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2123846   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2123847   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2123848   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2123849   +END;
MPRINT(EM_DIAGRAM):   END;
2123850   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2123851   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2123852   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2123853   +END;
MPRINT(EM_DIAGRAM):   END;
2123854   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2123855   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2123856   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2123857   +END;
MPRINT(EM_DIAGRAM):   END;
2123858   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2123859   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2123860   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2123861   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2123862   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2123863   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2123864   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2123865   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2123866   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2123867   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2123868   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2123869   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2123870   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2123871   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2123872   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2123873   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2123874   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2123875   +END;
MPRINT(EM_DIAGRAM):   END;
2123876   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2123877   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2123878   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2123879   +drop
2123880   +H11
2123881   +H12
2123882   +H13
2123883   +H14
2123884   +H15
2123885   +H16
2123886   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 ;
2123887   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2123888   +* Renaming variables for Neural41;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural41;
2123889   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2123890   +* Renaming Posterior variables for Neural41;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural41;
2123891   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2123892   +drop Neural41_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural41_P_DepVar1;
2123893   +Neural41_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural41_P_DepVar1 = P_DepVar1;
2123894   +drop Neural41_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural41_P_DepVar0;
2123895   +Neural41_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural41_P_DepVar0 = P_DepVar0;
2123896   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2123897   +* Renaming _WARN_ variable for Neural41;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural41;
2123898   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2123899   +length Neural41_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural41_WARN_ $4;
2123900   +drop Neural41_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural41_WARN_;
2123901   +Neural41_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural41_WARN_ = _WARN_;
2123902   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2123903   +* Ensmbl23: Scoring Code of model 2 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl23: Scoring Code of model 2 of 5;
2123904   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2123905   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2123906   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
2123907   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2123908   +* NODE: Neural40;
MPRINT(EM_DIAGRAM):   * NODE: Neural40;
2123909   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2123910   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2123911   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2123912   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2123913   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2123914   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2123915   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2123916   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2123917   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2123918   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2123919   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2123920   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2123921   +LENGTH _WARN_ $4
2123922   +      F_DepVar  $ 12
2123923   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2123924   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2123925   +
2123926   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2123927   +
2123928   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2123929   +
2123930   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2123931   +
2123932   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2123933   +
2123934   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2123935   +
2123936   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2123937   +
2123938   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2123939   +
2123940   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2123941   +
2123942   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2123943   +
2123944   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2123945   +
2123946   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2123947   +
2123948   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2123949   +
2123950   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2123951   +
2123952   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2123953   +
2123954   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2123955   +
2123956   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2123957   +
2123958   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2123959   +
2123960   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2123961   +
2123962   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2123963   +
2123964   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2123965   +
2123966   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2123967   +
2123968   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2123969   +
2123970   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2123971   +
2123972   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2123973   +
2123974   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2123975   +
2123976   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2123977   +
2123978   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2123979   +
2123980   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2123981   +
2123982   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2123983   +
2123984   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2123985   +
2123986   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
2123987   +
2123988   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
2123989   +
2123990   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
2123991   +
2123992   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
2123993   +
2123994   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
2123995   +
2123996   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2123997   +
2123998   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2123999   +
2124000   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2124001   +
2124002   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2124003   +
2124004   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2124005   +
2124006   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2124007   +
2124008   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2124009   +
2124010   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2124011   +
2124012   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2124013   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2124014   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2124015   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2124016   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2124017   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2124018   +end;
MPRINT(EM_DIAGRAM):   end;
2124019   +else do;
MPRINT(EM_DIAGRAM):   else do;
2124020   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2124021   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2124022   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2124023   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2124024   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2124025   +   end;
MPRINT(EM_DIAGRAM):   end;
2124026   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2124027   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2124028   +   end;
MPRINT(EM_DIAGRAM):   end;
2124029   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2124030   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2124031   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2124032   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2124033   +   end;
MPRINT(EM_DIAGRAM):   end;
2124034   +end;
MPRINT(EM_DIAGRAM):   end;
2124035   +
2124036   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2124037   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2124038   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2124039   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2124040   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2124041   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2124042   +end;
MPRINT(EM_DIAGRAM):   end;
2124043   +else do;
MPRINT(EM_DIAGRAM):   else do;
2124044   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2124045   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2124046   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2124047   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2124048   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2124049   +   end;
MPRINT(EM_DIAGRAM):   end;
2124050   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2124051   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2124052   +   end;
MPRINT(EM_DIAGRAM):   end;
2124053   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2124054   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2124055   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2124056   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2124057   +   end;
MPRINT(EM_DIAGRAM):   end;
2124058   +end;
MPRINT(EM_DIAGRAM):   end;
2124059   +
2124060   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2124061   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2124062   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2124063   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2124064   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2124065   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2124066   +end;
MPRINT(EM_DIAGRAM):   end;
2124067   +else do;
MPRINT(EM_DIAGRAM):   else do;
2124068   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2124069   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2124070   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2124071   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2124072   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2124073   +   end;
MPRINT(EM_DIAGRAM):   end;
2124074   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2124075   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2124076   +   end;
MPRINT(EM_DIAGRAM):   end;
2124077   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2124078   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2124079   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2124080   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2124081   +   end;
MPRINT(EM_DIAGRAM):   end;
2124082   +end;
MPRINT(EM_DIAGRAM):   end;
2124083   +
2124084   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2124085   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2124086   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2124087   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2124088   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2124089   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2124090   +end;
MPRINT(EM_DIAGRAM):   end;
2124091   +else do;
MPRINT(EM_DIAGRAM):   else do;
2124092   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2124093   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2124094   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2124095   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2124096   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2124097   +   end;
MPRINT(EM_DIAGRAM):   end;
2124098   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2124099   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2124100   +   end;
MPRINT(EM_DIAGRAM):   end;
2124101   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2124102   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2124103   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2124104   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2124105   +   end;
MPRINT(EM_DIAGRAM):   end;
2124106   +end;
MPRINT(EM_DIAGRAM):   end;
2124107   +
2124108   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2124109   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2124110   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2124111   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2124112   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2124113   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2124114   +end;
MPRINT(EM_DIAGRAM):   end;
2124115   +else do;
MPRINT(EM_DIAGRAM):   else do;
2124116   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2124117   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2124118   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2124119   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2124120   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2124121   +   end;
MPRINT(EM_DIAGRAM):   end;
2124122   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2124123   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2124124   +   end;
MPRINT(EM_DIAGRAM):   end;
2124125   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2124126   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2124127   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2124128   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2124129   +   end;
MPRINT(EM_DIAGRAM):   end;
2124130   +end;
MPRINT(EM_DIAGRAM):   end;
2124131   +
2124132   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2124133   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2124134   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2124135   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2124136   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2124137   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2124138   +end;
MPRINT(EM_DIAGRAM):   end;
2124139   +else do;
MPRINT(EM_DIAGRAM):   else do;
2124140   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2124141   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2124142   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2124143   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2124144   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2124145   +   end;
MPRINT(EM_DIAGRAM):   end;
2124146   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2124147   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2124148   +   end;
MPRINT(EM_DIAGRAM):   end;
2124149   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2124150   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2124151   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2124152   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2124153   +   end;
MPRINT(EM_DIAGRAM):   end;
2124154   +end;
MPRINT(EM_DIAGRAM):   end;
2124155   +
2124156   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2124157   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2124158   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2124159   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2124160   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2124161   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2124162   +end;
MPRINT(EM_DIAGRAM):   end;
2124163   +else do;
MPRINT(EM_DIAGRAM):   else do;
2124164   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2124165   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2124166   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2124167   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2124168   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2124169   +   end;
MPRINT(EM_DIAGRAM):   end;
2124170   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2124171   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2124172   +   end;
MPRINT(EM_DIAGRAM):   end;
2124173   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2124174   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2124175   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2124176   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2124177   +   end;
MPRINT(EM_DIAGRAM):   end;
2124178   +end;
MPRINT(EM_DIAGRAM):   end;
2124179   +
2124180   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2124181   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
2124182   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2124183   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2124184   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2124185   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2124186   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2124187   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2124188   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2124189   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2124190   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2124191   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2124192   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2124193   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2124194   +end;
MPRINT(EM_DIAGRAM):   end;
2124195   +else do;
MPRINT(EM_DIAGRAM):   else do;
2124196   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2124197   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2124198   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2124199   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2124200   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2124201   +   end;
MPRINT(EM_DIAGRAM):   end;
2124202   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2124203   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2124204   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2124205   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2124206   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2124207   +   end;
MPRINT(EM_DIAGRAM):   end;
2124208   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2124209   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2124210   +   end;
MPRINT(EM_DIAGRAM):   end;
2124211   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2124212   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2124213   +   end;
MPRINT(EM_DIAGRAM):   end;
2124214   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2124215   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2124216   +   end;
MPRINT(EM_DIAGRAM):   end;
2124217   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2124218   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2124219   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2124220   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2124221   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2124222   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2124223   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2124224   +   end;
MPRINT(EM_DIAGRAM):   end;
2124225   +end;
MPRINT(EM_DIAGRAM):   end;
2124226   +
2124227   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2124228   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2124229   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
2124230   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2124231   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2124232   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2124233   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2124234   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2124235   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2124236   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2124237   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2124238   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2124239   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2124240   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2124241   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2124242   +end;
MPRINT(EM_DIAGRAM):   end;
2124243   +else do;
MPRINT(EM_DIAGRAM):   else do;
2124244   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2124245   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2124246   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2124247   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2124248   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2124249   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2124250   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2124251   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2124252   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2124253   +         end;
MPRINT(EM_DIAGRAM):   end;
2124254   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2124255   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2124256   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2124257   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2124258   +            end;
MPRINT(EM_DIAGRAM):   end;
2124259   +         end;
MPRINT(EM_DIAGRAM):   end;
2124260   +      end;
MPRINT(EM_DIAGRAM):   end;
2124261   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2124262   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2124263   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2124264   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2124265   +         end;
MPRINT(EM_DIAGRAM):   end;
2124266   +      end;
MPRINT(EM_DIAGRAM):   end;
2124267   +   end;
MPRINT(EM_DIAGRAM):   end;
2124268   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2124269   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2124270   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2124271   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2124272   +      end;
MPRINT(EM_DIAGRAM):   end;
2124273   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2124274   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2124275   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2124276   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2124277   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2124278   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2124279   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2124280   +         end;
MPRINT(EM_DIAGRAM):   end;
2124281   +      end;
MPRINT(EM_DIAGRAM):   end;
2124282   +   end;
MPRINT(EM_DIAGRAM):   end;
2124283   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2124284   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2124285   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2124286   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2124287   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2124288   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2124289   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2124290   +   end;
MPRINT(EM_DIAGRAM):   end;
2124291   +end;
MPRINT(EM_DIAGRAM):   end;
2124292   +
2124293   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2124294   +*** Checking missing input Interval
2124295   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2124296   +
2124297   +IF NMISS(
2124298   +   AcceptedCmpTotal ,
2124299   +   Age ,
2124300   +   Frq ,
2124301   +   Income ,
2124302   +   Kidhome ,
2124303   +   MntFishProducts ,
2124304   +   MntFruits ,
2124305   +   MntGoldProds ,
2124306   +   MntSweetProducts ,
2124307   +   MonthsAsCustomer ,
2124308   +   NumDealsPurchases ,
2124309   +   NumWebVisitsMonth ,
2124310   +   RFMstat ,
2124311   +   RMntFrq ,
2124312   +   Recency ,
2124313   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome ,
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer ,
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
2124314   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2124315   +
2124316   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2124317   +END;
MPRINT(EM_DIAGRAM):   END;
2124318   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2124319   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
2124320   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2124321   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2124322   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2124323   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2124324   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2124325   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2124326   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2124327   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2124328   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2124329   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2124330   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2124331   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2124332   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2124333   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2124334   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2124335   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2124336   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 *
MonthsAsCustomer ;
2124337   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2124338   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2124339   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2124340   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2124341   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2124342   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2124343   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2124344   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2124345   +END;
MPRINT(EM_DIAGRAM):   END;
2124346   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2124347   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2124348   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2124349   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2124350   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2124351   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2124352   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2124353   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2124354   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2124355   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2124356   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2124357   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2124358   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2124359   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2124360   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2124361   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2124362   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2124363   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2124364   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2124365   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2124366   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
2124367   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2124368   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2124369   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2124370   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2124371   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2124372   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 *
MonthsAsCustomer ;
2124373   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2124374   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2124375   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2124376   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2124377   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2124378   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2124379   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2124380   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2124381   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2124382   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2124383   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2124384   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2124385   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2124386   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2124387   +END;
MPRINT(EM_DIAGRAM):   END;
2124388   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2124389   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
2124390   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2124391   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2124392   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
2124393   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2124394   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2124395   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
2124396   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2124397   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2124398   +   H11  =      0.0032927309355 * S_AcceptedCmpTotal  +     0.09101334306394 *
2124399   +        S_Age  +    -0.17737387030956 * S_Frq  +     -0.7980677567639 *
2124400   +        S_Income  +     0.43076147384738 * S_Kidhome
2124401   +          +    -0.03764687993601 * S_MntFishProducts
2124402   +          +     0.02729806956772 * S_MntFruits  +     0.08803652910758 *
2124403   +        S_MntGoldProds  +     0.17643871051763 * S_MntSweetProducts
2124404   +          +    -0.21857007362207 * S_MonthsAsCustomer
2124405   +          +    -0.01738553271488 * S_NumDealsPurchases
2124406   +          +    -0.05405784617097 * S_NumWebVisitsMonth
2124407   +          +    -0.02555104359687 * S_RFMstat  +    -0.22262932120098 *
2124408   +        S_RMntFrq  +     0.52463751421504 * S_Recency
2124409   +          +     0.54544496970995 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.0032927309355 * S_AcceptedCmpTotal + 0.09101334306394 * S_Age +
-0.17737387030956 * S_Frq + -0.7980677567639 * S_Income + 0.43076147384738 * S_Kidhome +
-0.03764687993601 * S_MntFishProducts + 0.02729806956772 * S_MntFruits + 0.08803652910758 *
S_MntGoldProds + 0.17643871051763 * S_MntSweetProducts + -0.21857007362207 *
S_MonthsAsCustomer + -0.01738553271488 * S_NumDealsPurchases + -0.05405784617097 *
S_NumWebVisitsMonth + -0.02555104359687 * S_RFMstat + -0.22262932120098 * S_RMntFrq +
0.52463751421504 * S_Recency + 0.54544496970995 * S_Teenhome ;
2124410   +   H12  =    -0.33803565764996 * S_AcceptedCmpTotal  +     -0.1574598864259 *
2124411   +        S_Age  +    -0.11819127145626 * S_Frq  +     -0.0410639104551 *
2124412   +        S_Income  +     0.30116999256128 * S_Kidhome
2124413   +          +    -0.05148754431395 * S_MntFishProducts
2124414   +          +     0.06976805639315 * S_MntFruits  +     0.21288156312487 *
2124415   +        S_MntGoldProds  +     0.38336457324703 * S_MntSweetProducts
2124416   +          +    -0.47049602184046 * S_MonthsAsCustomer
2124417   +          +     0.31766759211089 * S_NumDealsPurchases
2124418   +          +     0.23065914125267 * S_NumWebVisitsMonth
2124419   +          +     0.30304676466657 * S_RFMstat  +     0.02069006823415 *
2124420   +        S_RMntFrq  +    -0.50214492406349 * S_Recency
2124421   +          +    -0.31828314433486 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.33803565764996 * S_AcceptedCmpTotal + -0.1574598864259 * S_Age
+ -0.11819127145626 * S_Frq + -0.0410639104551 * S_Income + 0.30116999256128 * S_Kidhome +
-0.05148754431395 * S_MntFishProducts + 0.06976805639315 * S_MntFruits + 0.21288156312487 *
S_MntGoldProds + 0.38336457324703 * S_MntSweetProducts + -0.47049602184046 *
S_MonthsAsCustomer + 0.31766759211089 * S_NumDealsPurchases + 0.23065914125267 *
S_NumWebVisitsMonth + 0.30304676466657 * S_RFMstat + 0.02069006823415 * S_RMntFrq +
-0.50214492406349 * S_Recency + -0.31828314433486 * S_Teenhome ;
2124422   +   H13  =    -0.66950066433143 * S_AcceptedCmpTotal  +    -0.13180706544499 *
2124423   +        S_Age  +    -0.35768347811788 * S_Frq  +    -0.48081944747804 *
2124424   +        S_Income  +    -0.47031432651131 * S_Kidhome
2124425   +          +     0.14501559210465 * S_MntFishProducts
2124426   +          +     0.04696430031502 * S_MntFruits  +    -0.56155803643986 *
2124427   +        S_MntGoldProds  +    -0.03811468849817 * S_MntSweetProducts
2124428   +          +    -0.12263198714092 * S_MonthsAsCustomer
2124429   +          +    -0.44778701790462 * S_NumDealsPurchases
2124430   +          +    -0.48451328063306 * S_NumWebVisitsMonth
2124431   +          +    -0.30729532219651 * S_RFMstat  +    -0.53933327781572 *
2124432   +        S_RMntFrq  +     0.73816873319969 * S_Recency
2124433   +          +     0.02727962791734 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.66950066433143 * S_AcceptedCmpTotal + -0.13180706544499 * S_Age
+ -0.35768347811788 * S_Frq + -0.48081944747804 * S_Income + -0.47031432651131 * S_Kidhome +
0.14501559210465 * S_MntFishProducts + 0.04696430031502 * S_MntFruits + -0.56155803643986 *
S_MntGoldProds + -0.03811468849817 * S_MntSweetProducts + -0.12263198714092 *
S_MonthsAsCustomer + -0.44778701790462 * S_NumDealsPurchases + -0.48451328063306 *
S_NumWebVisitsMonth + -0.30729532219651 * S_RFMstat + -0.53933327781572 * S_RMntFrq +
0.73816873319969 * S_Recency + 0.02727962791734 * S_Teenhome ;
2124434   +   H14  =     0.31637384240651 * S_AcceptedCmpTotal  +     0.01318551698119 *
2124435   +        S_Age  +     0.05366305732147 * S_Frq  +     0.11980702632855 *
2124436   +        S_Income  +    -0.63361814765775 * S_Kidhome
2124437   +          +    -0.09824863224867 * S_MntFishProducts
2124438   +          +    -0.19022726480556 * S_MntFruits  +    -0.03622071498812 *
2124439   +        S_MntGoldProds  +    -0.33481056314568 * S_MntSweetProducts
2124440   +          +    -0.02935796970517 * S_MonthsAsCustomer
2124441   +          +     0.02015249143837 * S_NumDealsPurchases
2124442   +          +     0.60675564879689 * S_NumWebVisitsMonth
2124443   +          +     0.25432072256404 * S_RFMstat  +    -0.18855949493817 *
2124444   +        S_RMntFrq  +    -0.75663473950421 * S_Recency
2124445   +          +    -0.34865918998533 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 0.31637384240651 * S_AcceptedCmpTotal + 0.01318551698119 * S_Age +
0.05366305732147 * S_Frq + 0.11980702632855 * S_Income + -0.63361814765775 * S_Kidhome +
-0.09824863224867 * S_MntFishProducts + -0.19022726480556 * S_MntFruits + -0.03622071498812 *
S_MntGoldProds + -0.33481056314568 * S_MntSweetProducts + -0.02935796970517 *
S_MonthsAsCustomer + 0.02015249143837 * S_NumDealsPurchases + 0.60675564879689 *
S_NumWebVisitsMonth + 0.25432072256404 * S_RFMstat + -0.18855949493817 * S_RMntFrq +
-0.75663473950421 * S_Recency + -0.34865918998533 * S_Teenhome ;
2124446   +   H15  =    -0.32654270849386 * S_AcceptedCmpTotal  +     0.17707100422873 *
2124447   +        S_Age  +     0.93625207609464 * S_Frq  +     0.26987977696455 *
2124448   +        S_Income  +    -0.00728146808361 * S_Kidhome
2124449   +          +    -0.15850529937985 * S_MntFishProducts
2124450   +          +     0.06513447200778 * S_MntFruits  +      0.0398444679725 *
2124451   +        S_MntGoldProds  +    -0.12149497244296 * S_MntSweetProducts
2124452   +          +    -0.00539233520343 * S_MonthsAsCustomer
2124453   +          +    -0.54182368084643 * S_NumDealsPurchases
2124454   +          +    -0.60072233649965 * S_NumWebVisitsMonth
2124455   +          +    -0.09022759163793 * S_RFMstat  +    -0.16894620369906 *
2124456   +        S_RMntFrq  +     0.66307424769463 * S_Recency
2124457   +          +    -0.17356690404814 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = -0.32654270849386 * S_AcceptedCmpTotal + 0.17707100422873 * S_Age
+ 0.93625207609464 * S_Frq + 0.26987977696455 * S_Income + -0.00728146808361 * S_Kidhome +
-0.15850529937985 * S_MntFishProducts + 0.06513447200778 * S_MntFruits + 0.0398444679725 *
S_MntGoldProds + -0.12149497244296 * S_MntSweetProducts + -0.00539233520343 *
S_MonthsAsCustomer + -0.54182368084643 * S_NumDealsPurchases + -0.60072233649965 *
S_NumWebVisitsMonth + -0.09022759163793 * S_RFMstat + -0.16894620369906 * S_RMntFrq +
0.66307424769463 * S_Recency + -0.17356690404814 * S_Teenhome ;
2124458   +   H11  = H11  +     0.40379020589792 * AcceptedCmp10
2124459   +          +     0.41163608029184 * AcceptedCmp20  +     0.31824152457666 *
2124460   +        AcceptedCmp30  +     0.30059703252717 * AcceptedCmp40
2124461   +          +     0.21809621049566 * AcceptedCmp50  +     0.17161388784292 *
2124462   +        Complain0  +    -0.35356191864234 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.40379020589792 * AcceptedCmp10 + 0.41163608029184 *
AcceptedCmp20 + 0.31824152457666 * AcceptedCmp30 + 0.30059703252717 * AcceptedCmp40 +
0.21809621049566 * AcceptedCmp50 + 0.17161388784292 * Complain0 + -0.35356191864234 *
HigherEducationBinary0 ;
2124463   +   H12  = H12  +     0.14146453229372 * AcceptedCmp10
2124464   +          +    -0.01499648130434 * AcceptedCmp20  +    -0.15319425809948 *
2124465   +        AcceptedCmp30  +     0.10722126908794 * AcceptedCmp40
2124466   +          +     0.29524215734213 * AcceptedCmp50  +     0.21901777981386 *
2124467   +        Complain0  +     0.26589689583514 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.14146453229372 * AcceptedCmp10 + -0.01499648130434 *
AcceptedCmp20 + -0.15319425809948 * AcceptedCmp30 + 0.10722126908794 * AcceptedCmp40 +
0.29524215734213 * AcceptedCmp50 + 0.21901777981386 * Complain0 + 0.26589689583514 *
HigherEducationBinary0 ;
2124468   +   H13  = H13  +    -0.13089590705194 * AcceptedCmp10
2124469   +          +    -0.16147741287576 * AcceptedCmp20  +     0.13892066553636 *
2124470   +        AcceptedCmp30  +    -0.12220468306752 * AcceptedCmp40
2124471   +          +     0.18197624280085 * AcceptedCmp50  +    -0.31355578222066 *
2124472   +        Complain0  +     0.17409691060383 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.13089590705194 * AcceptedCmp10 + -0.16147741287576 *
AcceptedCmp20 + 0.13892066553636 * AcceptedCmp30 + -0.12220468306752 * AcceptedCmp40 +
0.18197624280085 * AcceptedCmp50 + -0.31355578222066 * Complain0 + 0.17409691060383 *
HigherEducationBinary0 ;
2124473   +   H14  = H14  +     0.24764542202116 * AcceptedCmp10
2124474   +          +     0.00575121729576 * AcceptedCmp20  +    -0.30692671431758 *
2124475   +        AcceptedCmp30  +     0.04820882787304 * AcceptedCmp40
2124476   +          +     0.05262951745934 * AcceptedCmp50  +     0.19424906323292 *
2124477   +        Complain0  +     0.02739699491892 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.24764542202116 * AcceptedCmp10 + 0.00575121729576 *
AcceptedCmp20 + -0.30692671431758 * AcceptedCmp30 + 0.04820882787304 * AcceptedCmp40 +
0.05262951745934 * AcceptedCmp50 + 0.19424906323292 * Complain0 + 0.02739699491892 *
HigherEducationBinary0 ;
2124478   +   H15  = H15  +     0.55249118257316 * AcceptedCmp10
2124479   +          +     0.03472783050924 * AcceptedCmp20  +     0.45051734949789 *
2124480   +        AcceptedCmp30  +    -0.03032221189323 * AcceptedCmp40
2124481   +          +     0.28472394784854 * AcceptedCmp50  +     0.06409321661831 *
2124482   +        Complain0  +     0.17517854321941 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.55249118257316 * AcceptedCmp10 + 0.03472783050924 *
AcceptedCmp20 + 0.45051734949789 * AcceptedCmp30 + -0.03032221189323 * AcceptedCmp40 +
0.28472394784854 * AcceptedCmp50 + 0.06409321661831 * Complain0 + 0.17517854321941 *
HigherEducationBinary0 ;
2124483   +   H11  = H11  +     0.01296567207369 * Education2n_Cycle
2124484   +          +     -0.1384611563627 * EducationBasic  +    -0.07977602646684 *
2124485   +        EducationGraduation  +     0.24334570893333 * EducationMaster
2124486   +          +    -0.38882658584856 * Marital_StatusDivorced
2124487   +          +     0.65814014556907 * Marital_StatusMarried
2124488   +          +    -0.47946271812834 * Marital_StatusSingle
2124489   +          +     0.68266301555878 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.01296567207369 * Education2n_Cycle + -0.1384611563627 *
EducationBasic + -0.07977602646684 * EducationGraduation + 0.24334570893333 * EducationMaster
+ -0.38882658584856 * Marital_StatusDivorced + 0.65814014556907 * Marital_StatusMarried +
-0.47946271812834 * Marital_StatusSingle + 0.68266301555878 * Marital_StatusTogether ;
2124490   +   H12  = H12  +    -0.17120287038112 * Education2n_Cycle
2124491   +          +    -0.02706838966272 * EducationBasic  +     0.28296380151006 *
2124492   +        EducationGraduation  +     0.06350902674039 * EducationMaster
2124493   +          +     -0.3300387788221 * Marital_StatusDivorced
2124494   +          +     0.15584744966644 * Marital_StatusMarried
2124495   +          +     0.26617174676758 * Marital_StatusSingle
2124496   +          +    -0.29771537576014 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.17120287038112 * Education2n_Cycle + -0.02706838966272 *
EducationBasic + 0.28296380151006 * EducationGraduation + 0.06350902674039 * EducationMaster +
-0.3300387788221 * Marital_StatusDivorced + 0.15584744966644 * Marital_StatusMarried +
0.26617174676758 * Marital_StatusSingle + -0.29771537576014 * Marital_StatusTogether ;
2124497   +   H13  = H13  +     0.05524541069883 * Education2n_Cycle
2124498   +          +     0.18324866500855 * EducationBasic  +    -0.25557023117825 *
2124499   +        EducationGraduation  +    -0.16479543389993 * EducationMaster
2124500   +          +    -0.06758334778864 * Marital_StatusDivorced
2124501   +          +    -0.00076716594904 * Marital_StatusMarried
2124502   +          +    -0.04319541969046 * Marital_StatusSingle
2124503   +          +    -0.16936317180157 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.05524541069883 * Education2n_Cycle + 0.18324866500855 *
EducationBasic + -0.25557023117825 * EducationGraduation + -0.16479543389993 * EducationMaster
+ -0.06758334778864 * Marital_StatusDivorced + -0.00076716594904 * Marital_StatusMarried +
-0.04319541969046 * Marital_StatusSingle + -0.16936317180157 * Marital_StatusTogether ;
2124504   +   H14  = H14  +     0.04763927770842 * Education2n_Cycle
2124505   +          +     0.09740370469315 * EducationBasic  +      0.2355172519549 *
2124506   +        EducationGraduation  +    -0.17375916527677 * EducationMaster
2124507   +          +      0.2099776154173 * Marital_StatusDivorced
2124508   +          +    -0.53311901286241 * Marital_StatusMarried
2124509   +          +     0.48618352894253 * Marital_StatusSingle
2124510   +          +    -0.13406957503471 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.04763927770842 * Education2n_Cycle + 0.09740370469315 *
EducationBasic + 0.2355172519549 * EducationGraduation + -0.17375916527677 * EducationMaster +
0.2099776154173 * Marital_StatusDivorced + -0.53311901286241 * Marital_StatusMarried +
0.48618352894253 * Marital_StatusSingle + -0.13406957503471 * Marital_StatusTogether ;
2124511   +   H15  = H15  +     -0.1000300691329 * Education2n_Cycle
2124512   +          +      0.2070015782176 * EducationBasic  +    -0.02421180620986 *
2124513   +        EducationGraduation  +     -0.0194914340189 * EducationMaster
2124514   +          +     -0.1329378358285 * Marital_StatusDivorced
2124515   +          +     -0.1585939674118 * Marital_StatusMarried
2124516   +          +     0.12646246189261 * Marital_StatusSingle
2124517   +          +     0.02351898949739 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.1000300691329 * Education2n_Cycle + 0.2070015782176 *
EducationBasic + -0.02421180620986 * EducationGraduation + -0.0194914340189 * EducationMaster
+ -0.1329378358285 * Marital_StatusDivorced + -0.1585939674118 * Marital_StatusMarried +
0.12646246189261 * Marital_StatusSingle + 0.02351898949739 * Marital_StatusTogether ;
2124518   +   H11  =      0.4650755258615 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.4650755258615 + H11 ;
2124519   +   H12  =    -0.95637983233364 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.95637983233364 + H12 ;
2124520   +   H13  =    -0.46557260942286 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.46557260942286 + H13 ;
2124521   +   H14  =     0.54843208877211 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.54843208877211 + H14 ;
2124522   +   H15  =     0.84042548309301 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 0.84042548309301 + H15 ;
2124523   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
2124524   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
2124525   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
2124526   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
2124527   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
2124528   +END;
MPRINT(EM_DIAGRAM):   END;
2124529   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2124530   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
2124531   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
2124532   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
2124533   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
2124534   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
2124535   +END;
MPRINT(EM_DIAGRAM):   END;
2124536   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2124537   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2124538   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2124539   +
2124540   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2124541   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2124542   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2124543   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2124544   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2124545   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2124546   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2124547   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2124548   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2124549   +end;
MPRINT(EM_DIAGRAM):   end;
2124550   +else do;
MPRINT(EM_DIAGRAM):   else do;
2124551   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2124552   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2124553   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2124554   +   end;
MPRINT(EM_DIAGRAM):   end;
2124555   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2124556   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2124557   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2124558   +   end;
MPRINT(EM_DIAGRAM):   end;
2124559   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2124560   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2124561   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2124562   +   end;
MPRINT(EM_DIAGRAM):   end;
2124563   +end;
MPRINT(EM_DIAGRAM):   end;
2124564   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2124565   +   P_DepVar1  =    -3.09243100351612 * H11  +     0.88657133745413 * H12
2124566   +          +    -2.65301673073237 * H13  +     1.47093743452607 * H14
2124567   +          +    -1.93226639391443 * H15 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.09243100351612 * H11 + 0.88657133745413 * H12 +
-2.65301673073237 * H13 + 1.47093743452607 * H14 + -1.93226639391443 * H15 ;
2124568   +   P_DepVar1  =    -1.83325335768642 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.83325335768642 + P_DepVar1 ;
2124569   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2124570   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2124571   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2124572   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2124573   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2124574   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2124575   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2124576   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2124577   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2124578   +END;
MPRINT(EM_DIAGRAM):   END;
2124579   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2124580   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2124581   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2124582   +END;
MPRINT(EM_DIAGRAM):   END;
2124583   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2124584   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2124585   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2124586   +END;
MPRINT(EM_DIAGRAM):   END;
2124587   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2124588   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2124589   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2124590   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2124591   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2124592   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2124593   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2124594   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2124595   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2124596   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2124597   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2124598   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2124599   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2124600   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2124601   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2124602   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2124603   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2124604   +END;
MPRINT(EM_DIAGRAM):   END;
2124605   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2124606   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2124607   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2124608   +drop
2124609   +H11
2124610   +H12
2124611   +H13
2124612   +H14
2124613   +H15
2124614   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 ;
2124615   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2124616   +* Renaming variables for Neural40;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural40;
2124617   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2124618   +* Renaming Posterior variables for Neural40;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural40;
2124619   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2124620   +drop Neural40_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural40_P_DepVar1;
2124621   +Neural40_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural40_P_DepVar1 = P_DepVar1;
2124622   +drop Neural40_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural40_P_DepVar0;
2124623   +Neural40_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural40_P_DepVar0 = P_DepVar0;
2124624   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2124625   +* Renaming _WARN_ variable for Neural40;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural40;
2124626   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2124627   +length Neural40_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural40_WARN_ $4;
2124628   +drop Neural40_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural40_WARN_;
2124629   +Neural40_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural40_WARN_ = _WARN_;
2124630   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2124631   +* Ensmbl23: Scoring Code of model 3 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl23: Scoring Code of model 3 of 5;
2124632   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2124633   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2124634   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
2124635   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2124636   +* NODE: Neural39;
MPRINT(EM_DIAGRAM):   * NODE: Neural39;
2124637   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2124638   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2124639   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2124640   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2124641   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2124642   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2124643   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2124644   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2124645   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2124646   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2124647   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2124648   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2124649   +LENGTH _WARN_ $4
2124650   +      F_DepVar  $ 12
2124651   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2124652   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2124653   +
2124654   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2124655   +
2124656   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2124657   +
2124658   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2124659   +
2124660   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2124661   +
2124662   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2124663   +
2124664   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2124665   +
2124666   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2124667   +
2124668   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2124669   +
2124670   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2124671   +
2124672   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2124673   +
2124674   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2124675   +
2124676   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2124677   +
2124678   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2124679   +
2124680   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2124681   +
2124682   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2124683   +
2124684   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2124685   +
2124686   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2124687   +
2124688   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2124689   +
2124690   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2124691   +
2124692   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2124693   +
2124694   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2124695   +
2124696   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2124697   +
2124698   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2124699   +
2124700   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2124701   +
2124702   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2124703   +
2124704   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2124705   +
2124706   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2124707   +
2124708   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2124709   +
2124710   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2124711   +
2124712   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2124713   +
2124714   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
2124715   +
2124716   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
2124717   +
2124718   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
2124719   +
2124720   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
2124721   +
2124722   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2124723   +
2124724   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2124725   +
2124726   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2124727   +
2124728   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2124729   +
2124730   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2124731   +
2124732   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2124733   +
2124734   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2124735   +
2124736   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2124737   +
2124738   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2124739   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2124740   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2124741   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2124742   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2124743   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2124744   +end;
MPRINT(EM_DIAGRAM):   end;
2124745   +else do;
MPRINT(EM_DIAGRAM):   else do;
2124746   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2124747   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2124748   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2124749   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2124750   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2124751   +   end;
MPRINT(EM_DIAGRAM):   end;
2124752   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2124753   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2124754   +   end;
MPRINT(EM_DIAGRAM):   end;
2124755   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2124756   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2124757   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2124758   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2124759   +   end;
MPRINT(EM_DIAGRAM):   end;
2124760   +end;
MPRINT(EM_DIAGRAM):   end;
2124761   +
2124762   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2124763   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2124764   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2124765   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2124766   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2124767   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2124768   +end;
MPRINT(EM_DIAGRAM):   end;
2124769   +else do;
MPRINT(EM_DIAGRAM):   else do;
2124770   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2124771   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2124772   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2124773   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2124774   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2124775   +   end;
MPRINT(EM_DIAGRAM):   end;
2124776   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2124777   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2124778   +   end;
MPRINT(EM_DIAGRAM):   end;
2124779   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2124780   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2124781   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2124782   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2124783   +   end;
MPRINT(EM_DIAGRAM):   end;
2124784   +end;
MPRINT(EM_DIAGRAM):   end;
2124785   +
2124786   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2124787   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2124788   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2124789   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2124790   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2124791   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2124792   +end;
MPRINT(EM_DIAGRAM):   end;
2124793   +else do;
MPRINT(EM_DIAGRAM):   else do;
2124794   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2124795   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2124796   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2124797   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2124798   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2124799   +   end;
MPRINT(EM_DIAGRAM):   end;
2124800   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2124801   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2124802   +   end;
MPRINT(EM_DIAGRAM):   end;
2124803   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2124804   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2124805   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2124806   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2124807   +   end;
MPRINT(EM_DIAGRAM):   end;
2124808   +end;
MPRINT(EM_DIAGRAM):   end;
2124809   +
2124810   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2124811   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2124812   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2124813   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2124814   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2124815   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2124816   +end;
MPRINT(EM_DIAGRAM):   end;
2124817   +else do;
MPRINT(EM_DIAGRAM):   else do;
2124818   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2124819   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2124820   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2124821   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2124822   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2124823   +   end;
MPRINT(EM_DIAGRAM):   end;
2124824   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2124825   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2124826   +   end;
MPRINT(EM_DIAGRAM):   end;
2124827   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2124828   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2124829   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2124830   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2124831   +   end;
MPRINT(EM_DIAGRAM):   end;
2124832   +end;
MPRINT(EM_DIAGRAM):   end;
2124833   +
2124834   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2124835   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2124836   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2124837   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2124838   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2124839   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2124840   +end;
MPRINT(EM_DIAGRAM):   end;
2124841   +else do;
MPRINT(EM_DIAGRAM):   else do;
2124842   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2124843   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2124844   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2124845   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2124846   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2124847   +   end;
MPRINT(EM_DIAGRAM):   end;
2124848   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2124849   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2124850   +   end;
MPRINT(EM_DIAGRAM):   end;
2124851   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2124852   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2124853   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2124854   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2124855   +   end;
MPRINT(EM_DIAGRAM):   end;
2124856   +end;
MPRINT(EM_DIAGRAM):   end;
2124857   +
2124858   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2124859   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2124860   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2124861   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2124862   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2124863   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2124864   +end;
MPRINT(EM_DIAGRAM):   end;
2124865   +else do;
MPRINT(EM_DIAGRAM):   else do;
2124866   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2124867   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2124868   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2124869   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2124870   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2124871   +   end;
MPRINT(EM_DIAGRAM):   end;
2124872   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2124873   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2124874   +   end;
MPRINT(EM_DIAGRAM):   end;
2124875   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2124876   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2124877   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2124878   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2124879   +   end;
MPRINT(EM_DIAGRAM):   end;
2124880   +end;
MPRINT(EM_DIAGRAM):   end;
2124881   +
2124882   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2124883   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2124884   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2124885   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2124886   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2124887   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2124888   +end;
MPRINT(EM_DIAGRAM):   end;
2124889   +else do;
MPRINT(EM_DIAGRAM):   else do;
2124890   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2124891   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2124892   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2124893   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2124894   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2124895   +   end;
MPRINT(EM_DIAGRAM):   end;
2124896   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2124897   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2124898   +   end;
MPRINT(EM_DIAGRAM):   end;
2124899   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2124900   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2124901   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2124902   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2124903   +   end;
MPRINT(EM_DIAGRAM):   end;
2124904   +end;
MPRINT(EM_DIAGRAM):   end;
2124905   +
2124906   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2124907   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
2124908   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2124909   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2124910   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2124911   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2124912   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2124913   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2124914   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2124915   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2124916   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2124917   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2124918   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2124919   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2124920   +end;
MPRINT(EM_DIAGRAM):   end;
2124921   +else do;
MPRINT(EM_DIAGRAM):   else do;
2124922   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2124923   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2124924   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2124925   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2124926   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2124927   +   end;
MPRINT(EM_DIAGRAM):   end;
2124928   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2124929   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2124930   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2124931   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2124932   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2124933   +   end;
MPRINT(EM_DIAGRAM):   end;
2124934   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2124935   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2124936   +   end;
MPRINT(EM_DIAGRAM):   end;
2124937   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2124938   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2124939   +   end;
MPRINT(EM_DIAGRAM):   end;
2124940   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2124941   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2124942   +   end;
MPRINT(EM_DIAGRAM):   end;
2124943   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2124944   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2124945   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2124946   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2124947   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2124948   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2124949   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2124950   +   end;
MPRINT(EM_DIAGRAM):   end;
2124951   +end;
MPRINT(EM_DIAGRAM):   end;
2124952   +
2124953   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2124954   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2124955   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
2124956   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2124957   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2124958   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2124959   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2124960   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2124961   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2124962   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2124963   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2124964   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2124965   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2124966   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2124967   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2124968   +end;
MPRINT(EM_DIAGRAM):   end;
2124969   +else do;
MPRINT(EM_DIAGRAM):   else do;
2124970   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2124971   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2124972   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2124973   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2124974   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2124975   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2124976   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2124977   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2124978   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2124979   +         end;
MPRINT(EM_DIAGRAM):   end;
2124980   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2124981   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2124982   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2124983   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2124984   +            end;
MPRINT(EM_DIAGRAM):   end;
2124985   +         end;
MPRINT(EM_DIAGRAM):   end;
2124986   +      end;
MPRINT(EM_DIAGRAM):   end;
2124987   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2124988   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2124989   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2124990   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2124991   +         end;
MPRINT(EM_DIAGRAM):   end;
2124992   +      end;
MPRINT(EM_DIAGRAM):   end;
2124993   +   end;
MPRINT(EM_DIAGRAM):   end;
2124994   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2124995   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2124996   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2124997   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2124998   +      end;
MPRINT(EM_DIAGRAM):   end;
2124999   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2125000   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2125001   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2125002   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2125003   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2125004   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2125005   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2125006   +         end;
MPRINT(EM_DIAGRAM):   end;
2125007   +      end;
MPRINT(EM_DIAGRAM):   end;
2125008   +   end;
MPRINT(EM_DIAGRAM):   end;
2125009   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2125010   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2125011   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2125012   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2125013   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2125014   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2125015   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2125016   +   end;
MPRINT(EM_DIAGRAM):   end;
2125017   +end;
MPRINT(EM_DIAGRAM):   end;
2125018   +
2125019   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2125020   +*** Checking missing input Interval
2125021   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2125022   +
2125023   +IF NMISS(
2125024   +   AcceptedCmpTotal ,
2125025   +   Age ,
2125026   +   Frq ,
2125027   +   Income ,
2125028   +   Kidhome ,
2125029   +   MntFishProducts ,
2125030   +   MntFruits ,
2125031   +   MntGoldProds ,
2125032   +   MntSweetProducts ,
2125033   +   MonthsAsCustomer ,
2125034   +   NumDealsPurchases ,
2125035   +   NumWebVisitsMonth ,
2125036   +   RFMstat ,
2125037   +   RMntFrq ,
2125038   +   Recency ,
2125039   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome ,
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer ,
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
2125040   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2125041   +
2125042   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2125043   +END;
MPRINT(EM_DIAGRAM):   END;
2125044   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2125045   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
2125046   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2125047   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2125048   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2125049   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2125050   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2125051   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2125052   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2125053   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2125054   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2125055   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2125056   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2125057   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2125058   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2125059   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2125060   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2125061   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2125062   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 *
MonthsAsCustomer ;
2125063   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2125064   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2125065   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2125066   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2125067   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2125068   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2125069   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2125070   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2125071   +END;
MPRINT(EM_DIAGRAM):   END;
2125072   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2125073   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2125074   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2125075   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2125076   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2125077   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2125078   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2125079   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2125080   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2125081   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2125082   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2125083   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2125084   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2125085   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2125086   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2125087   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2125088   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2125089   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2125090   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2125091   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2125092   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
2125093   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2125094   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2125095   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2125096   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2125097   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2125098   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 *
MonthsAsCustomer ;
2125099   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2125100   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2125101   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2125102   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2125103   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2125104   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2125105   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2125106   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2125107   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2125108   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2125109   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2125110   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2125111   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2125112   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2125113   +END;
MPRINT(EM_DIAGRAM):   END;
2125114   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2125115   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
2125116   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2125117   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2125118   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
2125119   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2125120   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2125121   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
2125122   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2125123   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2125124   +   H11  =    -0.59512924851551 * S_AcceptedCmpTotal  +     -0.0822975295273 *
2125125   +        S_Age  +     0.34777744436504 * S_Frq  +     0.07942025641822 *
2125126   +        S_Income  +     0.23721647978534 * S_Kidhome
2125127   +          +    -0.02271798884661 * S_MntFishProducts
2125128   +          +     0.08807309980934 * S_MntFruits  +     0.19069006902766 *
2125129   +        S_MntGoldProds  +     0.10910458513653 * S_MntSweetProducts
2125130   +          +     -0.2712400716804 * S_MonthsAsCustomer
2125131   +          +    -0.53936896531209 * S_NumDealsPurchases
2125132   +          +    -0.35925915934577 * S_NumWebVisitsMonth
2125133   +          +    -0.08622629924361 * S_RFMstat  +     0.25394591780904 *
2125134   +        S_RMntFrq  +     0.69890372536214 * S_Recency
2125135   +          +     0.13643980298627 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.59512924851551 * S_AcceptedCmpTotal + -0.0822975295273 * S_Age
+ 0.34777744436504 * S_Frq + 0.07942025641822 * S_Income + 0.23721647978534 * S_Kidhome +
-0.02271798884661 * S_MntFishProducts + 0.08807309980934 * S_MntFruits + 0.19069006902766 *
S_MntGoldProds + 0.10910458513653 * S_MntSweetProducts + -0.2712400716804 * S_MonthsAsCustomer
+ -0.53936896531209 * S_NumDealsPurchases + -0.35925915934577 * S_NumWebVisitsMonth +
-0.08622629924361 * S_RFMstat + 0.25394591780904 * S_RMntFrq + 0.69890372536214 * S_Recency +
0.13643980298627 * S_Teenhome ;
2125136   +   H12  =     -0.1829764834163 * S_AcceptedCmpTotal  +      0.5150125387492 *
2125137   +        S_Age  +     0.98578880139347 * S_Frq  +     0.35785305967975 *
2125138   +        S_Income  +     0.08668934262602 * S_Kidhome
2125139   +          +     -0.1992601670046 * S_MntFishProducts
2125140   +          +     0.01629264862515 * S_MntFruits  +    -0.03025350824332 *
2125141   +        S_MntGoldProds  +    -0.38227262001553 * S_MntSweetProducts
2125142   +          +     0.30116770365349 * S_MonthsAsCustomer
2125143   +          +    -0.46000379214601 * S_NumDealsPurchases
2125144   +          +    -0.73085067864835 * S_NumWebVisitsMonth
2125145   +          +    -0.22923275570367 * S_RFMstat  +     -0.5046307291648 *
2125146   +        S_RMntFrq  +     1.05223220143096 * S_Recency
2125147   +          +    -0.17002078495363 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.1829764834163 * S_AcceptedCmpTotal + 0.5150125387492 * S_Age +
0.98578880139347 * S_Frq + 0.35785305967975 * S_Income + 0.08668934262602 * S_Kidhome +
-0.1992601670046 * S_MntFishProducts + 0.01629264862515 * S_MntFruits + -0.03025350824332 *
S_MntGoldProds + -0.38227262001553 * S_MntSweetProducts + 0.30116770365349 *
S_MonthsAsCustomer + -0.46000379214601 * S_NumDealsPurchases + -0.73085067864835 *
S_NumWebVisitsMonth + -0.22923275570367 * S_RFMstat + -0.5046307291648 * S_RMntFrq +
1.05223220143096 * S_Recency + -0.17002078495363 * S_Teenhome ;
2125148   +   H13  =    -0.46803354047925 * S_AcceptedCmpTotal  +    -0.20058439872619 *
2125149   +        S_Age  +    -0.01284299386993 * S_Frq  +    -0.75016251494757 *
2125150   +        S_Income  +    -0.63339804662862 * S_Kidhome
2125151   +          +     0.20120882029834 * S_MntFishProducts
2125152   +          +    -0.06230023881104 * S_MntFruits  +    -0.36454417225574 *
2125153   +        S_MntGoldProds  +     0.02047534293821 * S_MntSweetProducts
2125154   +          +    -0.08519313101441 * S_MonthsAsCustomer
2125155   +          +    -0.30576030134683 * S_NumDealsPurchases
2125156   +          +    -0.59860723545409 * S_NumWebVisitsMonth
2125157   +          +    -0.08355373822909 * S_RFMstat  +    -0.22326942617185 *
2125158   +        S_RMntFrq  +     0.80270168032456 * S_Recency
2125159   +          +     0.33480569534819 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.46803354047925 * S_AcceptedCmpTotal + -0.20058439872619 * S_Age
+ -0.01284299386993 * S_Frq + -0.75016251494757 * S_Income + -0.63339804662862 * S_Kidhome +
0.20120882029834 * S_MntFishProducts + -0.06230023881104 * S_MntFruits + -0.36454417225574 *
S_MntGoldProds + 0.02047534293821 * S_MntSweetProducts + -0.08519313101441 *
S_MonthsAsCustomer + -0.30576030134683 * S_NumDealsPurchases + -0.59860723545409 *
S_NumWebVisitsMonth + -0.08355373822909 * S_RFMstat + -0.22326942617185 * S_RMntFrq +
0.80270168032456 * S_Recency + 0.33480569534819 * S_Teenhome ;
2125160   +   H14  =    -0.11750811478204 * S_AcceptedCmpTotal  +     0.08897841506547 *
2125161   +        S_Age  +    -0.58608559771512 * S_Frq  +    -0.97381716235373 *
2125162   +        S_Income  +     0.66694972561255 * S_Kidhome
2125163   +          +     -0.0398036726055 * S_MntFishProducts
2125164   +          +     0.22002314897938 * S_MntFruits  +     0.04732712109048 *
2125165   +        S_MntGoldProds  +     0.26526839421345 * S_MntSweetProducts
2125166   +          +    -0.15403174187172 * S_MonthsAsCustomer
2125167   +          +     0.22820115917371 * S_NumDealsPurchases
2125168   +          +     0.18267832891328 * S_NumWebVisitsMonth
2125169   +          +     -0.0174907884104 * S_RFMstat  +    -0.31876274555503 *
2125170   +        S_RMntFrq  +     0.74433020674409 * S_Recency
2125171   +          +     0.47600648051538 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = -0.11750811478204 * S_AcceptedCmpTotal + 0.08897841506547 * S_Age
+ -0.58608559771512 * S_Frq + -0.97381716235373 * S_Income + 0.66694972561255 * S_Kidhome +
-0.0398036726055 * S_MntFishProducts + 0.22002314897938 * S_MntFruits + 0.04732712109048 *
S_MntGoldProds + 0.26526839421345 * S_MntSweetProducts + -0.15403174187172 *
S_MonthsAsCustomer + 0.22820115917371 * S_NumDealsPurchases + 0.18267832891328 *
S_NumWebVisitsMonth + -0.0174907884104 * S_RFMstat + -0.31876274555503 * S_RMntFrq +
0.74433020674409 * S_Recency + 0.47600648051538 * S_Teenhome ;
2125172   +   H11  = H11  +     0.21237941475599 * AcceptedCmp10
2125173   +          +     0.04472438427365 * AcceptedCmp20  +     0.17747949289397 *
2125174   +        AcceptedCmp30  +      0.0160283827284 * AcceptedCmp40
2125175   +          +     0.55925432320426 * AcceptedCmp50  +    -0.14142896526953 *
2125176   +        Complain0  +      0.0575110231505 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.21237941475599 * AcceptedCmp10 + 0.04472438427365 *
AcceptedCmp20 + 0.17747949289397 * AcceptedCmp30 + 0.0160283827284 * AcceptedCmp40 +
0.55925432320426 * AcceptedCmp50 + -0.14142896526953 * Complain0 + 0.0575110231505 *
HigherEducationBinary0 ;
2125177   +   H12  = H12  +     0.47907390571224 * AcceptedCmp10
2125178   +          +     0.27664153700074 * AcceptedCmp20  +     0.53987959298978 *
2125179   +        AcceptedCmp30  +     0.28087504743344 * AcceptedCmp40
2125180   +          +     0.10391254888041 * AcceptedCmp50  +      -0.141083453381 *
2125181   +        Complain0  +     0.11031418992388 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.47907390571224 * AcceptedCmp10 + 0.27664153700074 *
AcceptedCmp20 + 0.53987959298978 * AcceptedCmp30 + 0.28087504743344 * AcceptedCmp40 +
0.10391254888041 * AcceptedCmp50 + -0.141083453381 * Complain0 + 0.11031418992388 *
HigherEducationBinary0 ;
2125182   +   H13  = H13  +     0.09520651716106 * AcceptedCmp10
2125183   +          +      0.0343715287888 * AcceptedCmp20  +     0.48264670470765 *
2125184   +        AcceptedCmp30  +    -0.73356967665862 * AcceptedCmp40
2125185   +          +     0.43560801503541 * AcceptedCmp50  +     -0.2718667817564 *
2125186   +        Complain0  +     0.07653375459455 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.09520651716106 * AcceptedCmp10 + 0.0343715287888 *
AcceptedCmp20 + 0.48264670470765 * AcceptedCmp30 + -0.73356967665862 * AcceptedCmp40 +
0.43560801503541 * AcceptedCmp50 + -0.2718667817564 * Complain0 + 0.07653375459455 *
HigherEducationBinary0 ;
2125187   +   H14  = H14  +     0.18606771308408 * AcceptedCmp10
2125188   +          +     0.10545968088972 * AcceptedCmp20  +     0.28680843470023 *
2125189   +        AcceptedCmp30  +     0.48936354303031 * AcceptedCmp40
2125190   +          +    -0.14408643246427 * AcceptedCmp50  +     0.23450133527378 *
2125191   +        Complain0  +    -0.44927010710705 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.18606771308408 * AcceptedCmp10 + 0.10545968088972 *
AcceptedCmp20 + 0.28680843470023 * AcceptedCmp30 + 0.48936354303031 * AcceptedCmp40 +
-0.14408643246427 * AcceptedCmp50 + 0.23450133527378 * Complain0 + -0.44927010710705 *
HigherEducationBinary0 ;
2125192   +   H11  = H11  +    -0.14528524296804 * Education2n_Cycle
2125193   +          +     0.01673408592951 * EducationBasic  +    -0.06429601063979 *
2125194   +        EducationGraduation  +    -0.02622617788078 * EducationMaster
2125195   +          +     0.06024519291122 * Marital_StatusDivorced
2125196   +          +     -0.0819071841309 * Marital_StatusMarried
2125197   +          +     0.42870578507073 * Marital_StatusSingle
2125198   +          +      0.4051129562668 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.14528524296804 * Education2n_Cycle + 0.01673408592951 *
EducationBasic + -0.06429601063979 * EducationGraduation + -0.02622617788078 * EducationMaster
+ 0.06024519291122 * Marital_StatusDivorced + -0.0819071841309 * Marital_StatusMarried +
0.42870578507073 * Marital_StatusSingle + 0.4051129562668 * Marital_StatusTogether ;
2125199   +   H12  = H12  +     0.28210673900541 * Education2n_Cycle
2125200   +          +    -0.02393077028847 * EducationBasic  +    -0.10389902860327 *
2125201   +        EducationGraduation  +    -0.14877703838953 * EducationMaster
2125202   +          +    -0.13856018901636 * Marital_StatusDivorced
2125203   +          +     0.10012984585302 * Marital_StatusMarried
2125204   +          +     0.02921741368356 * Marital_StatusSingle
2125205   +          +     0.13848478656523 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.28210673900541 * Education2n_Cycle + -0.02393077028847 *
EducationBasic + -0.10389902860327 * EducationGraduation + -0.14877703838953 * EducationMaster
+ -0.13856018901636 * Marital_StatusDivorced + 0.10012984585302 * Marital_StatusMarried +
0.02921741368356 * Marital_StatusSingle + 0.13848478656523 * Marital_StatusTogether ;
2125206   +   H13  = H13  +      0.0183013852099 * Education2n_Cycle
2125207   +          +     0.43125570378811 * EducationBasic  +    -0.31392526432015 *
2125208   +        EducationGraduation  +      0.0753944289648 * EducationMaster
2125209   +          +    -0.23239586980133 * Marital_StatusDivorced
2125210   +          +      0.1253994554645 * Marital_StatusMarried
2125211   +          +    -0.33648409660062 * Marital_StatusSingle
2125212   +          +    -0.14353309021619 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.0183013852099 * Education2n_Cycle + 0.43125570378811 *
EducationBasic + -0.31392526432015 * EducationGraduation + 0.0753944289648 * EducationMaster +
-0.23239586980133 * Marital_StatusDivorced + 0.1253994554645 * Marital_StatusMarried +
-0.33648409660062 * Marital_StatusSingle + -0.14353309021619 * Marital_StatusTogether ;
2125213   +   H14  = H14  +    -0.13261661281439 * Education2n_Cycle
2125214   +          +     0.12513764082187 * EducationBasic  +    -0.21826807057488 *
2125215   +        EducationGraduation  +     0.25426016549852 * EducationMaster
2125216   +          +    -0.20018638821233 * Marital_StatusDivorced
2125217   +          +     1.07213214578803 * Marital_StatusMarried
2125218   +          +    -0.78089608097635 * Marital_StatusSingle
2125219   +          +      0.8652598562973 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.13261661281439 * Education2n_Cycle + 0.12513764082187 *
EducationBasic + -0.21826807057488 * EducationGraduation + 0.25426016549852 * EducationMaster
+ -0.20018638821233 * Marital_StatusDivorced + 1.07213214578803 * Marital_StatusMarried +
-0.78089608097635 * Marital_StatusSingle + 0.8652598562973 * Marital_StatusTogether ;
2125220   +   H11  =      0.6839700017137 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.6839700017137 + H11 ;
2125221   +   H12  =     0.88439108697567 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.88439108697567 + H12 ;
2125222   +   H13  =    -0.21745653885035 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.21745653885035 + H13 ;
2125223   +   H14  =     1.53290685706631 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 1.53290685706631 + H14 ;
2125224   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
2125225   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
2125226   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
2125227   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
2125228   +END;
MPRINT(EM_DIAGRAM):   END;
2125229   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2125230   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
2125231   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
2125232   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
2125233   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
2125234   +END;
MPRINT(EM_DIAGRAM):   END;
2125235   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2125236   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2125237   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2125238   +
2125239   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2125240   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2125241   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2125242   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2125243   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2125244   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2125245   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2125246   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2125247   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2125248   +end;
MPRINT(EM_DIAGRAM):   end;
2125249   +else do;
MPRINT(EM_DIAGRAM):   else do;
2125250   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2125251   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2125252   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2125253   +   end;
MPRINT(EM_DIAGRAM):   end;
2125254   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2125255   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2125256   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2125257   +   end;
MPRINT(EM_DIAGRAM):   end;
2125258   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2125259   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2125260   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2125261   +   end;
MPRINT(EM_DIAGRAM):   end;
2125262   +end;
MPRINT(EM_DIAGRAM):   end;
2125263   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2125264   +   P_DepVar1  =    -1.02007256907977 * H11  +    -1.79638089167371 * H12
2125265   +          +    -2.67778063761069 * H13  +    -2.40349387174856 * H14 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.02007256907977 * H11 + -1.79638089167371 * H12 +
-2.67778063761069 * H13 + -2.40349387174856 * H14 ;
2125266   +   P_DepVar1  =    -0.89818574956639 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.89818574956639 + P_DepVar1 ;
2125267   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2125268   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2125269   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2125270   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2125271   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2125272   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2125273   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2125274   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2125275   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2125276   +END;
MPRINT(EM_DIAGRAM):   END;
2125277   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2125278   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2125279   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2125280   +END;
MPRINT(EM_DIAGRAM):   END;
2125281   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2125282   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2125283   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2125284   +END;
MPRINT(EM_DIAGRAM):   END;
2125285   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2125286   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2125287   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2125288   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2125289   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2125290   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2125291   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2125292   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2125293   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2125294   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2125295   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2125296   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2125297   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2125298   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2125299   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2125300   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2125301   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2125302   +END;
MPRINT(EM_DIAGRAM):   END;
2125303   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2125304   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2125305   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2125306   +drop
2125307   +H11
2125308   +H12
2125309   +H13
2125310   +H14
2125311   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 ;
2125312   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2125313   +* Renaming variables for Neural39;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural39;
2125314   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2125315   +* Renaming Posterior variables for Neural39;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural39;
2125316   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2125317   +drop Neural39_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural39_P_DepVar1;
2125318   +Neural39_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural39_P_DepVar1 = P_DepVar1;
2125319   +drop Neural39_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural39_P_DepVar0;
2125320   +Neural39_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural39_P_DepVar0 = P_DepVar0;
2125321   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2125322   +* Renaming _WARN_ variable for Neural39;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural39;
2125323   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2125324   +length Neural39_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural39_WARN_ $4;
2125325   +drop Neural39_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural39_WARN_;
2125326   +Neural39_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural39_WARN_ = _WARN_;
2125327   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2125328   +* Ensmbl23: Scoring Code of model 4 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl23: Scoring Code of model 4 of 5;
2125329   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2125330   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2125331   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
2125332   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2125333   +* NODE: Neural38;
MPRINT(EM_DIAGRAM):   * NODE: Neural38;
2125334   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2125335   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2125336   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2125337   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2125338   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2125339   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2125340   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2125341   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2125342   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2125343   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2125344   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2125345   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2125346   +LENGTH _WARN_ $4
2125347   +      F_DepVar  $ 12
2125348   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2125349   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2125350   +
2125351   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2125352   +
2125353   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2125354   +
2125355   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2125356   +
2125357   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2125358   +
2125359   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2125360   +
2125361   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2125362   +
2125363   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2125364   +
2125365   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2125366   +
2125367   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2125368   +
2125369   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2125370   +
2125371   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2125372   +
2125373   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2125374   +
2125375   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2125376   +
2125377   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2125378   +
2125379   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2125380   +
2125381   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2125382   +
2125383   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2125384   +
2125385   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2125386   +
2125387   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2125388   +
2125389   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2125390   +
2125391   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2125392   +
2125393   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2125394   +
2125395   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2125396   +
2125397   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2125398   +
2125399   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2125400   +
2125401   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2125402   +
2125403   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2125404   +
2125405   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2125406   +
2125407   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2125408   +
2125409   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2125410   +
2125411   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
2125412   +
2125413   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
2125414   +
2125415   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
2125416   +
2125417   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2125418   +
2125419   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2125420   +
2125421   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2125422   +
2125423   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2125424   +
2125425   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2125426   +
2125427   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2125428   +
2125429   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2125430   +
2125431   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2125432   +
2125433   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2125434   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2125435   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2125436   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2125437   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2125438   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2125439   +end;
MPRINT(EM_DIAGRAM):   end;
2125440   +else do;
MPRINT(EM_DIAGRAM):   else do;
2125441   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2125442   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2125443   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2125444   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2125445   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2125446   +   end;
MPRINT(EM_DIAGRAM):   end;
2125447   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2125448   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2125449   +   end;
MPRINT(EM_DIAGRAM):   end;
2125450   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2125451   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2125452   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2125453   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2125454   +   end;
MPRINT(EM_DIAGRAM):   end;
2125455   +end;
MPRINT(EM_DIAGRAM):   end;
2125456   +
2125457   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2125458   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2125459   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2125460   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2125461   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2125462   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2125463   +end;
MPRINT(EM_DIAGRAM):   end;
2125464   +else do;
MPRINT(EM_DIAGRAM):   else do;
2125465   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2125466   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2125467   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2125468   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2125469   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2125470   +   end;
MPRINT(EM_DIAGRAM):   end;
2125471   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2125472   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2125473   +   end;
MPRINT(EM_DIAGRAM):   end;
2125474   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2125475   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2125476   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2125477   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2125478   +   end;
MPRINT(EM_DIAGRAM):   end;
2125479   +end;
MPRINT(EM_DIAGRAM):   end;
2125480   +
2125481   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2125482   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2125483   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2125484   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2125485   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2125486   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2125487   +end;
MPRINT(EM_DIAGRAM):   end;
2125488   +else do;
MPRINT(EM_DIAGRAM):   else do;
2125489   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2125490   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2125491   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2125492   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2125493   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2125494   +   end;
MPRINT(EM_DIAGRAM):   end;
2125495   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2125496   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2125497   +   end;
MPRINT(EM_DIAGRAM):   end;
2125498   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2125499   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2125500   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2125501   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2125502   +   end;
MPRINT(EM_DIAGRAM):   end;
2125503   +end;
MPRINT(EM_DIAGRAM):   end;
2125504   +
2125505   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2125506   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2125507   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2125508   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2125509   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2125510   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2125511   +end;
MPRINT(EM_DIAGRAM):   end;
2125512   +else do;
MPRINT(EM_DIAGRAM):   else do;
2125513   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2125514   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2125515   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2125516   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2125517   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2125518   +   end;
MPRINT(EM_DIAGRAM):   end;
2125519   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2125520   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2125521   +   end;
MPRINT(EM_DIAGRAM):   end;
2125522   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2125523   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2125524   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2125525   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2125526   +   end;
MPRINT(EM_DIAGRAM):   end;
2125527   +end;
MPRINT(EM_DIAGRAM):   end;
2125528   +
2125529   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2125530   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2125531   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2125532   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2125533   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2125534   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2125535   +end;
MPRINT(EM_DIAGRAM):   end;
2125536   +else do;
MPRINT(EM_DIAGRAM):   else do;
2125537   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2125538   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2125539   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2125540   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2125541   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2125542   +   end;
MPRINT(EM_DIAGRAM):   end;
2125543   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2125544   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2125545   +   end;
MPRINT(EM_DIAGRAM):   end;
2125546   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2125547   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2125548   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2125549   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2125550   +   end;
MPRINT(EM_DIAGRAM):   end;
2125551   +end;
MPRINT(EM_DIAGRAM):   end;
2125552   +
2125553   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2125554   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2125555   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2125556   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2125557   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2125558   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2125559   +end;
MPRINT(EM_DIAGRAM):   end;
2125560   +else do;
MPRINT(EM_DIAGRAM):   else do;
2125561   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2125562   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2125563   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2125564   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2125565   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2125566   +   end;
MPRINT(EM_DIAGRAM):   end;
2125567   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2125568   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2125569   +   end;
MPRINT(EM_DIAGRAM):   end;
2125570   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2125571   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2125572   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2125573   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2125574   +   end;
MPRINT(EM_DIAGRAM):   end;
2125575   +end;
MPRINT(EM_DIAGRAM):   end;
2125576   +
2125577   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2125578   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2125579   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2125580   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2125581   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2125582   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2125583   +end;
MPRINT(EM_DIAGRAM):   end;
2125584   +else do;
MPRINT(EM_DIAGRAM):   else do;
2125585   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2125586   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2125587   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2125588   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2125589   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2125590   +   end;
MPRINT(EM_DIAGRAM):   end;
2125591   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2125592   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2125593   +   end;
MPRINT(EM_DIAGRAM):   end;
2125594   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2125595   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2125596   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2125597   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2125598   +   end;
MPRINT(EM_DIAGRAM):   end;
2125599   +end;
MPRINT(EM_DIAGRAM):   end;
2125600   +
2125601   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2125602   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
2125603   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2125604   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2125605   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2125606   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2125607   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2125608   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2125609   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2125610   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2125611   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2125612   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2125613   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2125614   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2125615   +end;
MPRINT(EM_DIAGRAM):   end;
2125616   +else do;
MPRINT(EM_DIAGRAM):   else do;
2125617   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2125618   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2125619   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2125620   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2125621   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2125622   +   end;
MPRINT(EM_DIAGRAM):   end;
2125623   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2125624   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2125625   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2125626   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2125627   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2125628   +   end;
MPRINT(EM_DIAGRAM):   end;
2125629   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2125630   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2125631   +   end;
MPRINT(EM_DIAGRAM):   end;
2125632   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2125633   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2125634   +   end;
MPRINT(EM_DIAGRAM):   end;
2125635   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2125636   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2125637   +   end;
MPRINT(EM_DIAGRAM):   end;
2125638   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2125639   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2125640   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2125641   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2125642   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2125643   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2125644   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2125645   +   end;
MPRINT(EM_DIAGRAM):   end;
2125646   +end;
MPRINT(EM_DIAGRAM):   end;
2125647   +
2125648   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2125649   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2125650   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
2125651   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2125652   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2125653   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2125654   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2125655   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2125656   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2125657   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2125658   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2125659   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2125660   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2125661   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2125662   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2125663   +end;
MPRINT(EM_DIAGRAM):   end;
2125664   +else do;
MPRINT(EM_DIAGRAM):   else do;
2125665   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2125666   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2125667   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2125668   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2125669   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2125670   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2125671   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2125672   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2125673   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2125674   +         end;
MPRINT(EM_DIAGRAM):   end;
2125675   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2125676   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2125677   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2125678   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2125679   +            end;
MPRINT(EM_DIAGRAM):   end;
2125680   +         end;
MPRINT(EM_DIAGRAM):   end;
2125681   +      end;
MPRINT(EM_DIAGRAM):   end;
2125682   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2125683   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2125684   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2125685   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2125686   +         end;
MPRINT(EM_DIAGRAM):   end;
2125687   +      end;
MPRINT(EM_DIAGRAM):   end;
2125688   +   end;
MPRINT(EM_DIAGRAM):   end;
2125689   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2125690   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2125691   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2125692   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2125693   +      end;
MPRINT(EM_DIAGRAM):   end;
2125694   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2125695   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2125696   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2125697   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2125698   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2125699   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2125700   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2125701   +         end;
MPRINT(EM_DIAGRAM):   end;
2125702   +      end;
MPRINT(EM_DIAGRAM):   end;
2125703   +   end;
MPRINT(EM_DIAGRAM):   end;
2125704   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2125705   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2125706   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2125707   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2125708   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2125709   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2125710   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2125711   +   end;
MPRINT(EM_DIAGRAM):   end;
2125712   +end;
MPRINT(EM_DIAGRAM):   end;
2125713   +
2125714   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2125715   +*** Checking missing input Interval
2125716   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2125717   +
2125718   +IF NMISS(
2125719   +   AcceptedCmpTotal ,
2125720   +   Age ,
2125721   +   Frq ,
2125722   +   Income ,
2125723   +   Kidhome ,
2125724   +   MntFishProducts ,
2125725   +   MntFruits ,
2125726   +   MntGoldProds ,
2125727   +   MntSweetProducts ,
2125728   +   MonthsAsCustomer ,
2125729   +   NumDealsPurchases ,
2125730   +   NumWebVisitsMonth ,
2125731   +   RFMstat ,
2125732   +   RMntFrq ,
2125733   +   Recency ,
2125734   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome ,
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer ,
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
2125735   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2125736   +
2125737   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2125738   +END;
MPRINT(EM_DIAGRAM):   END;
2125739   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2125740   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
2125741   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2125742   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2125743   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2125744   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2125745   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2125746   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2125747   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2125748   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2125749   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2125750   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2125751   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2125752   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2125753   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2125754   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2125755   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2125756   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2125757   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 *
MonthsAsCustomer ;
2125758   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2125759   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2125760   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2125761   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2125762   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2125763   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2125764   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2125765   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2125766   +END;
MPRINT(EM_DIAGRAM):   END;
2125767   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2125768   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2125769   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2125770   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2125771   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2125772   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2125773   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2125774   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2125775   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2125776   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2125777   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2125778   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2125779   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2125780   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2125781   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2125782   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2125783   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2125784   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2125785   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2125786   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2125787   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
2125788   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2125789   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2125790   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2125791   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2125792   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2125793   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 *
MonthsAsCustomer ;
2125794   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2125795   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2125796   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2125797   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2125798   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2125799   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2125800   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2125801   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2125802   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2125803   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2125804   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2125805   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2125806   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2125807   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2125808   +END;
MPRINT(EM_DIAGRAM):   END;
2125809   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2125810   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
2125811   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2125812   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2125813   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
2125814   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2125815   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2125816   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
2125817   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2125818   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2125819   +   H11  =    -0.12735997892099 * S_AcceptedCmpTotal  +     0.05614113783048 *
2125820   +        S_Age  +     0.62712460637822 * S_Frq  +     0.12299131156999 *
2125821   +        S_Income  +    -0.48966666023107 * S_Kidhome
2125822   +          +    -0.02039894625139 * S_MntFishProducts
2125823   +          +    -0.46314393239988 * S_MntFruits  +    -0.08473184666241 *
2125824   +        S_MntGoldProds  +     0.08362335658545 * S_MntSweetProducts
2125825   +          +    -0.10405556335761 * S_MonthsAsCustomer
2125826   +          +    -0.51342273744068 * S_NumDealsPurchases
2125827   +          +    -0.03733960386951 * S_NumWebVisitsMonth
2125828   +          +    -0.17746951162034 * S_RFMstat  +     -0.4900258897048 *
2125829   +        S_RMntFrq  +     0.18043722262784 * S_Recency
2125830   +          +    -0.16370458409437 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.12735997892099 * S_AcceptedCmpTotal + 0.05614113783048 * S_Age
+ 0.62712460637822 * S_Frq + 0.12299131156999 * S_Income + -0.48966666023107 * S_Kidhome +
-0.02039894625139 * S_MntFishProducts + -0.46314393239988 * S_MntFruits + -0.08473184666241 *
S_MntGoldProds + 0.08362335658545 * S_MntSweetProducts + -0.10405556335761 *
S_MonthsAsCustomer + -0.51342273744068 * S_NumDealsPurchases + -0.03733960386951 *
S_NumWebVisitsMonth + -0.17746951162034 * S_RFMstat + -0.4900258897048 * S_RMntFrq +
0.18043722262784 * S_Recency + -0.16370458409437 * S_Teenhome ;
2125831   +   H12  =    -0.60633882410536 * S_AcceptedCmpTotal  +       0.224864344383 *
2125832   +        S_Age  +     1.39199458994411 * S_Frq  +     0.87162437846369 *
2125833   +        S_Income  +    -0.78349610624343 * S_Kidhome
2125834   +          +     0.11143790088856 * S_MntFishProducts
2125835   +          +    -0.55718313448059 * S_MntFruits  +    -0.21087085222526 *
2125836   +        S_MntGoldProds  +     0.02856888181428 * S_MntSweetProducts
2125837   +          +     0.32076375444952 * S_MonthsAsCustomer
2125838   +          +    -0.26990924990463 * S_NumDealsPurchases
2125839   +          +    -0.38394733388565 * S_NumWebVisitsMonth
2125840   +          +    -0.22782651153177 * S_RFMstat  +     0.22812202935498 *
2125841   +        S_RMntFrq  +    -0.19933331095407 * S_Recency
2125842   +          +    -0.70020220713535 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.60633882410536 * S_AcceptedCmpTotal + 0.224864344383 * S_Age +
1.39199458994411 * S_Frq + 0.87162437846369 * S_Income + -0.78349610624343 * S_Kidhome +
0.11143790088856 * S_MntFishProducts + -0.55718313448059 * S_MntFruits + -0.21087085222526 *
S_MntGoldProds + 0.02856888181428 * S_MntSweetProducts + 0.32076375444952 * S_MonthsAsCustomer
+ -0.26990924990463 * S_NumDealsPurchases + -0.38394733388565 * S_NumWebVisitsMonth +
-0.22782651153177 * S_RFMstat + 0.22812202935498 * S_RMntFrq + -0.19933331095407 * S_Recency +
-0.70020220713535 * S_Teenhome ;
2125843   +   H13  =    -0.13101581197148 * S_AcceptedCmpTotal  +     0.13628003311785 *
2125844   +        S_Age  +     0.36995757743109 * S_Frq  +    -0.29860018899791 *
2125845   +        S_Income  +     0.35747326688336 * S_Kidhome
2125846   +          +      0.0686999643098 * S_MntFishProducts
2125847   +          +     0.04887259723743 * S_MntFruits  +    -0.06102251488536 *
2125848   +        S_MntGoldProds  +     0.02326506142202 * S_MntSweetProducts
2125849   +          +     0.14271282712227 * S_MonthsAsCustomer
2125850   +          +    -0.13832369827798 * S_NumDealsPurchases
2125851   +          +    -0.47612163926952 * S_NumWebVisitsMonth
2125852   +          +    -0.06611946982584 * S_RFMstat  +     0.13861254443913 *
2125853   +        S_RMntFrq  +     0.58403001514589 * S_Recency
2125854   +          +     0.20007724178827 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.13101581197148 * S_AcceptedCmpTotal + 0.13628003311785 * S_Age
+ 0.36995757743109 * S_Frq + -0.29860018899791 * S_Income + 0.35747326688336 * S_Kidhome +
0.0686999643098 * S_MntFishProducts + 0.04887259723743 * S_MntFruits + -0.06102251488536 *
S_MntGoldProds + 0.02326506142202 * S_MntSweetProducts + 0.14271282712227 * S_MonthsAsCustomer
+ -0.13832369827798 * S_NumDealsPurchases + -0.47612163926952 * S_NumWebVisitsMonth +
-0.06611946982584 * S_RFMstat + 0.13861254443913 * S_RMntFrq + 0.58403001514589 * S_Recency +
0.20007724178827 * S_Teenhome ;
2125855   +   H11  = H11  +     0.84056686173766 * AcceptedCmp10
2125856   +          +    -0.24934706882838 * AcceptedCmp20  +     0.30196639473026 *
2125857   +        AcceptedCmp30  +     0.05258139446676 * AcceptedCmp40
2125858   +          +     0.67593676788479 * AcceptedCmp50  +     0.08683881940471 *
2125859   +        Complain0  +     0.18065485673242 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.84056686173766 * AcceptedCmp10 + -0.24934706882838 *
AcceptedCmp20 + 0.30196639473026 * AcceptedCmp30 + 0.05258139446676 * AcceptedCmp40 +
0.67593676788479 * AcceptedCmp50 + 0.08683881940471 * Complain0 + 0.18065485673242 *
HigherEducationBinary0 ;
2125860   +   H12  = H12  +    -0.04721322843232 * AcceptedCmp10
2125861   +          +    -0.86918240857339 * AcceptedCmp20  +    -0.72151645579567 *
2125862   +        AcceptedCmp30  +    -0.64210941414089 * AcceptedCmp40
2125863   +          +     0.33249469617845 * AcceptedCmp50  +    -0.47926491040481 *
2125864   +        Complain0  +     0.34126288384384 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.04721322843232 * AcceptedCmp10 + -0.86918240857339 *
AcceptedCmp20 + -0.72151645579567 * AcceptedCmp30 + -0.64210941414089 * AcceptedCmp40 +
0.33249469617845 * AcceptedCmp50 + -0.47926491040481 * Complain0 + 0.34126288384384 *
HigherEducationBinary0 ;
2125865   +   H13  = H13  +     0.00143925055481 * AcceptedCmp10
2125866   +          +     0.14964205194256 * AcceptedCmp20  +     0.11503898054899 *
2125867   +        AcceptedCmp30  +      0.0133572907593 * AcceptedCmp40
2125868   +          +     0.23211071198237 * AcceptedCmp50  +    -0.26237638274137 *
2125869   +        Complain0  +    -0.01756413200655 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.00143925055481 * AcceptedCmp10 + 0.14964205194256 *
AcceptedCmp20 + 0.11503898054899 * AcceptedCmp30 + 0.0133572907593 * AcceptedCmp40 +
0.23211071198237 * AcceptedCmp50 + -0.26237638274137 * Complain0 + -0.01756413200655 *
HigherEducationBinary0 ;
2125870   +   H11  = H11  +     0.29624759193414 * Education2n_Cycle
2125871   +          +    -0.40760427816833 * EducationBasic  +     0.00224467466349 *
2125872   +        EducationGraduation  +    -0.21511521624726 * EducationMaster
2125873   +          +     0.34831332012594 * Marital_StatusDivorced
2125874   +          +     0.03256682571475 * Marital_StatusMarried
2125875   +          +     0.14498541232514 * Marital_StatusSingle
2125876   +          +     0.30917752682842 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.29624759193414 * Education2n_Cycle + -0.40760427816833 *
EducationBasic + 0.00224467466349 * EducationGraduation + -0.21511521624726 * EducationMaster
+ 0.34831332012594 * Marital_StatusDivorced + 0.03256682571475 * Marital_StatusMarried +
0.14498541232514 * Marital_StatusSingle + 0.30917752682842 * Marital_StatusTogether ;
2125877   +   H12  = H12  +     0.04524701432166 * Education2n_Cycle
2125878   +          +     0.20523000800068 * EducationBasic  +     0.18270469986075 *
2125879   +        EducationGraduation  +    -0.26534207933216 * EducationMaster
2125880   +          +     0.05517800751028 * Marital_StatusDivorced
2125881   +          +    -0.70385428266578 * Marital_StatusMarried
2125882   +          +     0.85990109232942 * Marital_StatusSingle
2125883   +          +     -0.6453756400301 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.04524701432166 * Education2n_Cycle + 0.20523000800068 *
EducationBasic + 0.18270469986075 * EducationGraduation + -0.26534207933216 * EducationMaster
+ 0.05517800751028 * Marital_StatusDivorced + -0.70385428266578 * Marital_StatusMarried +
0.85990109232942 * Marital_StatusSingle + -0.6453756400301 * Marital_StatusTogether ;
2125884   +   H13  = H13  +    -0.36171919789219 * Education2n_Cycle
2125885   +          +      0.4064975673385 * EducationBasic  +    -0.07138108930929 *
2125886   +        EducationGraduation  +     0.21530846518532 * EducationMaster
2125887   +          +    -0.33904221640495 * Marital_StatusDivorced
2125888   +          +     0.10243956895845 * Marital_StatusMarried
2125889   +          +      -0.049421978948 * Marital_StatusSingle
2125890   +          +    -0.01189234912724 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.36171919789219 * Education2n_Cycle + 0.4064975673385 *
EducationBasic + -0.07138108930929 * EducationGraduation + 0.21530846518532 * EducationMaster
+ -0.33904221640495 * Marital_StatusDivorced + 0.10243956895845 * Marital_StatusMarried +
-0.049421978948 * Marital_StatusSingle + -0.01189234912724 * Marital_StatusTogether ;
2125891   +   H11  =    -1.19319602190903 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.19319602190903 + H11 ;
2125892   +   H12  =      -0.706001116518 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.706001116518 + H12 ;
2125893   +   H13  =    -0.05058509326004 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.05058509326004 + H13 ;
2125894   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
2125895   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
2125896   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
2125897   +END;
MPRINT(EM_DIAGRAM):   END;
2125898   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2125899   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
2125900   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
2125901   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
2125902   +END;
MPRINT(EM_DIAGRAM):   END;
2125903   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2125904   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2125905   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2125906   +
2125907   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2125908   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2125909   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2125910   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2125911   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2125912   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2125913   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2125914   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2125915   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2125916   +end;
MPRINT(EM_DIAGRAM):   end;
2125917   +else do;
MPRINT(EM_DIAGRAM):   else do;
2125918   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2125919   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2125920   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2125921   +   end;
MPRINT(EM_DIAGRAM):   end;
2125922   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2125923   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2125924   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2125925   +   end;
MPRINT(EM_DIAGRAM):   end;
2125926   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2125927   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2125928   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2125929   +   end;
MPRINT(EM_DIAGRAM):   end;
2125930   +end;
MPRINT(EM_DIAGRAM):   end;
2125931   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2125932   +   P_DepVar1  =    -3.42974915011649 * H11  +     4.01757681065312 * H12
2125933   +          +    -4.86050966020391 * H13 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.42974915011649 * H11 + 4.01757681065312 * H12 +
-4.86050966020391 * H13 ;
2125934   +   P_DepVar1  =    -0.68121736689971 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.68121736689971 + P_DepVar1 ;
2125935   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2125936   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2125937   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2125938   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2125939   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2125940   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2125941   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2125942   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2125943   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2125944   +END;
MPRINT(EM_DIAGRAM):   END;
2125945   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2125946   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2125947   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2125948   +END;
MPRINT(EM_DIAGRAM):   END;
2125949   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2125950   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2125951   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2125952   +END;
MPRINT(EM_DIAGRAM):   END;
2125953   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2125954   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2125955   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2125956   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2125957   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2125958   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2125959   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2125960   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2125961   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2125962   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2125963   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2125964   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2125965   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2125966   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2125967   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2125968   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2125969   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2125970   +END;
MPRINT(EM_DIAGRAM):   END;
2125971   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2125972   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2125973   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2125974   +drop
2125975   +H11
2125976   +H12
2125977   +H13
2125978   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 ;
2125979   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2125980   +* Renaming variables for Neural38;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural38;
2125981   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2125982   +* Renaming Posterior variables for Neural38;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural38;
2125983   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2125984   +drop Neural38_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural38_P_DepVar1;
2125985   +Neural38_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural38_P_DepVar1 = P_DepVar1;
2125986   +drop Neural38_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural38_P_DepVar0;
2125987   +Neural38_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural38_P_DepVar0 = P_DepVar0;
2125988   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2125989   +* Renaming _WARN_ variable for Neural38;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural38;
2125990   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2125991   +length Neural38_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural38_WARN_ $4;
2125992   +drop Neural38_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural38_WARN_;
2125993   +Neural38_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural38_WARN_ = _WARN_;
2125994   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2125995   +* Ensmbl23: Scoring Code of model 5 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl23: Scoring Code of model 5 of 5;
2125996   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2125997   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2125998   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
2125999   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2126000   +* NODE: Neural37;
MPRINT(EM_DIAGRAM):   * NODE: Neural37;
2126001   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2126002   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2126003   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2126004   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2126005   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2126006   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2126007   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2126008   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2126009   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2126010   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2126011   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2126012   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2126013   +LENGTH _WARN_ $4
2126014   +      F_DepVar  $ 12
2126015   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2126016   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2126017   +
2126018   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2126019   +
2126020   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2126021   +
2126022   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2126023   +
2126024   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2126025   +
2126026   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2126027   +
2126028   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2126029   +
2126030   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2126031   +
2126032   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2126033   +
2126034   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2126035   +
2126036   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2126037   +
2126038   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2126039   +
2126040   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2126041   +
2126042   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2126043   +
2126044   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2126045   +
2126046   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2126047   +
2126048   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2126049   +
2126050   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2126051   +
2126052   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2126053   +
2126054   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2126055   +
2126056   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2126057   +
2126058   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2126059   +
2126060   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2126061   +
2126062   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2126063   +
2126064   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2126065   +
2126066   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2126067   +
2126068   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2126069   +
2126070   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2126071   +
2126072   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2126073   +
2126074   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2126075   +
2126076   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2126077   +
2126078   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
2126079   +
2126080   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
2126081   +
2126082   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2126083   +
2126084   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2126085   +
2126086   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2126087   +
2126088   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2126089   +
2126090   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2126091   +
2126092   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2126093   +
2126094   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2126095   +
2126096   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2126097   +
2126098   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2126099   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2126100   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2126101   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2126102   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2126103   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2126104   +end;
MPRINT(EM_DIAGRAM):   end;
2126105   +else do;
MPRINT(EM_DIAGRAM):   else do;
2126106   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2126107   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2126108   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2126109   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2126110   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2126111   +   end;
MPRINT(EM_DIAGRAM):   end;
2126112   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2126113   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2126114   +   end;
MPRINT(EM_DIAGRAM):   end;
2126115   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2126116   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2126117   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2126118   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2126119   +   end;
MPRINT(EM_DIAGRAM):   end;
2126120   +end;
MPRINT(EM_DIAGRAM):   end;
2126121   +
2126122   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2126123   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2126124   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2126125   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2126126   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2126127   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2126128   +end;
MPRINT(EM_DIAGRAM):   end;
2126129   +else do;
MPRINT(EM_DIAGRAM):   else do;
2126130   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2126131   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2126132   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2126133   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2126134   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2126135   +   end;
MPRINT(EM_DIAGRAM):   end;
2126136   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2126137   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2126138   +   end;
MPRINT(EM_DIAGRAM):   end;
2126139   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2126140   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2126141   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2126142   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2126143   +   end;
MPRINT(EM_DIAGRAM):   end;
2126144   +end;
MPRINT(EM_DIAGRAM):   end;
2126145   +
2126146   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2126147   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2126148   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2126149   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2126150   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2126151   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2126152   +end;
MPRINT(EM_DIAGRAM):   end;
2126153   +else do;
MPRINT(EM_DIAGRAM):   else do;
2126154   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2126155   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2126156   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2126157   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2126158   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2126159   +   end;
MPRINT(EM_DIAGRAM):   end;
2126160   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2126161   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2126162   +   end;
MPRINT(EM_DIAGRAM):   end;
2126163   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2126164   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2126165   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2126166   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2126167   +   end;
MPRINT(EM_DIAGRAM):   end;
2126168   +end;
MPRINT(EM_DIAGRAM):   end;
2126169   +
2126170   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2126171   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2126172   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2126173   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2126174   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2126175   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2126176   +end;
MPRINT(EM_DIAGRAM):   end;
2126177   +else do;
MPRINT(EM_DIAGRAM):   else do;
2126178   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2126179   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2126180   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2126181   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2126182   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2126183   +   end;
MPRINT(EM_DIAGRAM):   end;
2126184   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2126185   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2126186   +   end;
MPRINT(EM_DIAGRAM):   end;
2126187   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2126188   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2126189   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2126190   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2126191   +   end;
MPRINT(EM_DIAGRAM):   end;
2126192   +end;
MPRINT(EM_DIAGRAM):   end;
2126193   +
2126194   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2126195   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2126196   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2126197   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2126198   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2126199   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2126200   +end;
MPRINT(EM_DIAGRAM):   end;
2126201   +else do;
MPRINT(EM_DIAGRAM):   else do;
2126202   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2126203   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2126204   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2126205   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2126206   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2126207   +   end;
MPRINT(EM_DIAGRAM):   end;
2126208   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2126209   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2126210   +   end;
MPRINT(EM_DIAGRAM):   end;
2126211   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2126212   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2126213   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2126214   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2126215   +   end;
MPRINT(EM_DIAGRAM):   end;
2126216   +end;
MPRINT(EM_DIAGRAM):   end;
2126217   +
2126218   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2126219   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2126220   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2126221   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2126222   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2126223   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2126224   +end;
MPRINT(EM_DIAGRAM):   end;
2126225   +else do;
MPRINT(EM_DIAGRAM):   else do;
2126226   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2126227   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2126228   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2126229   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2126230   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2126231   +   end;
MPRINT(EM_DIAGRAM):   end;
2126232   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2126233   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2126234   +   end;
MPRINT(EM_DIAGRAM):   end;
2126235   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2126236   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2126237   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2126238   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2126239   +   end;
MPRINT(EM_DIAGRAM):   end;
2126240   +end;
MPRINT(EM_DIAGRAM):   end;
2126241   +
2126242   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2126243   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2126244   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2126245   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2126246   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2126247   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2126248   +end;
MPRINT(EM_DIAGRAM):   end;
2126249   +else do;
MPRINT(EM_DIAGRAM):   else do;
2126250   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2126251   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2126252   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2126253   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2126254   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2126255   +   end;
MPRINT(EM_DIAGRAM):   end;
2126256   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2126257   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2126258   +   end;
MPRINT(EM_DIAGRAM):   end;
2126259   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2126260   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2126261   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2126262   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2126263   +   end;
MPRINT(EM_DIAGRAM):   end;
2126264   +end;
MPRINT(EM_DIAGRAM):   end;
2126265   +
2126266   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2126267   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
2126268   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2126269   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2126270   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2126271   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2126272   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2126273   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2126274   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2126275   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2126276   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2126277   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2126278   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2126279   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2126280   +end;
MPRINT(EM_DIAGRAM):   end;
2126281   +else do;
MPRINT(EM_DIAGRAM):   else do;
2126282   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2126283   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2126284   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2126285   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2126286   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2126287   +   end;
MPRINT(EM_DIAGRAM):   end;
2126288   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2126289   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2126290   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2126291   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2126292   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2126293   +   end;
MPRINT(EM_DIAGRAM):   end;
2126294   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2126295   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2126296   +   end;
MPRINT(EM_DIAGRAM):   end;
2126297   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2126298   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2126299   +   end;
MPRINT(EM_DIAGRAM):   end;
2126300   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2126301   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2126302   +   end;
MPRINT(EM_DIAGRAM):   end;
2126303   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2126304   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2126305   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2126306   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2126307   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2126308   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2126309   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2126310   +   end;
MPRINT(EM_DIAGRAM):   end;
2126311   +end;
MPRINT(EM_DIAGRAM):   end;
2126312   +
2126313   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2126314   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2126315   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
2126316   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2126317   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2126318   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2126319   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2126320   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2126321   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2126322   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2126323   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2126324   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2126325   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2126326   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2126327   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2126328   +end;
MPRINT(EM_DIAGRAM):   end;
2126329   +else do;
MPRINT(EM_DIAGRAM):   else do;
2126330   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2126331   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2126332   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2126333   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2126334   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2126335   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2126336   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2126337   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2126338   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2126339   +         end;
MPRINT(EM_DIAGRAM):   end;
2126340   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2126341   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2126342   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2126343   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2126344   +            end;
MPRINT(EM_DIAGRAM):   end;
2126345   +         end;
MPRINT(EM_DIAGRAM):   end;
2126346   +      end;
MPRINT(EM_DIAGRAM):   end;
2126347   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2126348   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2126349   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2126350   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2126351   +         end;
MPRINT(EM_DIAGRAM):   end;
2126352   +      end;
MPRINT(EM_DIAGRAM):   end;
2126353   +   end;
MPRINT(EM_DIAGRAM):   end;
2126354   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2126355   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2126356   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2126357   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2126358   +      end;
MPRINT(EM_DIAGRAM):   end;
2126359   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2126360   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2126361   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2126362   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2126363   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2126364   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2126365   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2126366   +         end;
MPRINT(EM_DIAGRAM):   end;
2126367   +      end;
MPRINT(EM_DIAGRAM):   end;
2126368   +   end;
MPRINT(EM_DIAGRAM):   end;
2126369   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2126370   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2126371   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2126372   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2126373   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2126374   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2126375   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2126376   +   end;
MPRINT(EM_DIAGRAM):   end;
2126377   +end;
MPRINT(EM_DIAGRAM):   end;
2126378   +
2126379   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2126380   +*** Checking missing input Interval
2126381   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2126382   +
2126383   +IF NMISS(
2126384   +   AcceptedCmpTotal ,
2126385   +   Age ,
2126386   +   Frq ,
2126387   +   Income ,
2126388   +   Kidhome ,
2126389   +   MntFishProducts ,
2126390   +   MntFruits ,
2126391   +   MntGoldProds ,
2126392   +   MntSweetProducts ,
2126393   +   MonthsAsCustomer ,
2126394   +   NumDealsPurchases ,
2126395   +   NumWebVisitsMonth ,
2126396   +   RFMstat ,
2126397   +   RMntFrq ,
2126398   +   Recency ,
2126399   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome ,
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer ,
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
2126400   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2126401   +
2126402   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2126403   +END;
MPRINT(EM_DIAGRAM):   END;
2126404   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2126405   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
2126406   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2126407   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2126408   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2126409   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2126410   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2126411   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2126412   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2126413   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2126414   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2126415   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2126416   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2126417   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2126418   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2126419   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2126420   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2126421   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2126422   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 *
MonthsAsCustomer ;
2126423   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2126424   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2126425   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2126426   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2126427   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2126428   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2126429   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2126430   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2126431   +END;
MPRINT(EM_DIAGRAM):   END;
2126432   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2126433   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2126434   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2126435   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2126436   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2126437   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2126438   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2126439   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2126440   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2126441   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2126442   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2126443   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2126444   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2126445   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2126446   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2126447   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2126448   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2126449   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2126450   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2126451   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2126452   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
2126453   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2126454   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2126455   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2126456   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2126457   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2126458   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 *
MonthsAsCustomer ;
2126459   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2126460   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2126461   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2126462   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2126463   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2126464   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2126465   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2126466   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2126467   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2126468   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2126469   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2126470   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2126471   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2126472   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2126473   +END;
MPRINT(EM_DIAGRAM):   END;
2126474   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2126475   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
2126476   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2126477   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2126478   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
2126479   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2126480   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2126481   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
2126482   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2126483   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2126484   +   H11  =     0.02350954951536 * S_AcceptedCmpTotal  +     0.03219603688042 *
2126485   +        S_Age  +    -0.05789460883987 * S_Frq  +    -0.44265601825308 *
2126486   +        S_Income  +     0.20165551633113 * S_Kidhome
2126487   +          +     0.00056309050317 * S_MntFishProducts
2126488   +          +     0.05001720173625 * S_MntFruits  +      0.0052212271793 *
2126489   +        S_MntGoldProds  +     0.05669192458513 * S_MntSweetProducts
2126490   +          +    -0.04270777222511 * S_MonthsAsCustomer
2126491   +          +    -0.09478064763989 * S_NumDealsPurchases
2126492   +          +    -0.14700428312188 * S_NumWebVisitsMonth
2126493   +          +    -0.01952994747701 * S_RFMstat  +    -0.07485496116647 *
2126494   +        S_RMntFrq  +     0.43424535825498 * S_Recency
2126495   +          +     0.31343234855137 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.02350954951536 * S_AcceptedCmpTotal + 0.03219603688042 * S_Age +
-0.05789460883987 * S_Frq + -0.44265601825308 * S_Income + 0.20165551633113 * S_Kidhome +
0.00056309050317 * S_MntFishProducts + 0.05001720173625 * S_MntFruits + 0.0052212271793 *
S_MntGoldProds + 0.05669192458513 * S_MntSweetProducts + -0.04270777222511 *
S_MonthsAsCustomer + -0.09478064763989 * S_NumDealsPurchases + -0.14700428312188 *
S_NumWebVisitsMonth + -0.01952994747701 * S_RFMstat + -0.07485496116647 * S_RMntFrq +
0.43424535825498 * S_Recency + 0.31343234855137 * S_Teenhome ;
2126496   +   H12  =    -0.19856399125523 * S_AcceptedCmpTotal  +     0.11288759015424 *
2126497   +        S_Age  +     1.42026893919787 * S_Frq  +       0.589558227778 *
2126498   +        S_Income  +    -0.30460976693199 * S_Kidhome
2126499   +          +    -0.24231306090193 * S_MntFishProducts
2126500   +          +     0.04807947910877 * S_MntFruits  +    -0.18714547156261 *
2126501   +        S_MntGoldProds  +    -0.11212664938439 * S_MntSweetProducts
2126502   +          +     0.10352770685507 * S_MonthsAsCustomer
2126503   +          +    -0.68489181638757 * S_NumDealsPurchases
2126504   +          +    -0.58100230229526 * S_NumWebVisitsMonth
2126505   +          +    -0.21690205060235 * S_RFMstat  +    -0.28659625619875 *
2126506   +        S_RMntFrq  +     0.66583235171642 * S_Recency
2126507   +          +    -0.26587787276778 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.19856399125523 * S_AcceptedCmpTotal + 0.11288759015424 * S_Age
+ 1.42026893919787 * S_Frq + 0.589558227778 * S_Income + -0.30460976693199 * S_Kidhome +
-0.24231306090193 * S_MntFishProducts + 0.04807947910877 * S_MntFruits + -0.18714547156261 *
S_MntGoldProds + -0.11212664938439 * S_MntSweetProducts + 0.10352770685507 *
S_MonthsAsCustomer + -0.68489181638757 * S_NumDealsPurchases + -0.58100230229526 *
S_NumWebVisitsMonth + -0.21690205060235 * S_RFMstat + -0.28659625619875 * S_RMntFrq +
0.66583235171642 * S_Recency + -0.26587787276778 * S_Teenhome ;
2126508   +   H11  = H11  +     0.19521386447058 * AcceptedCmp10
2126509   +          +     0.18607852296373 * AcceptedCmp20  +     0.24009670215096 *
2126510   +        AcceptedCmp30  +     0.16741973117307 * AcceptedCmp40
2126511   +          +     0.16327175443873 * AcceptedCmp50  +    -0.06966105959529 *
2126512   +        Complain0  +    -0.02379070405691 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.19521386447058 * AcceptedCmp10 + 0.18607852296373 *
AcceptedCmp20 + 0.24009670215096 * AcceptedCmp30 + 0.16741973117307 * AcceptedCmp40 +
0.16327175443873 * AcceptedCmp50 + -0.06966105959529 * Complain0 + -0.02379070405691 *
HigherEducationBinary0 ;
2126513   +   H12  = H12  +     0.48980882052858 * AcceptedCmp10
2126514   +          +     0.32550185290445 * AcceptedCmp20  +     0.53021728569974 *
2126515   +        AcceptedCmp30  +    -0.02665247681016 * AcceptedCmp40
2126516   +          +     0.16481850464637 * AcceptedCmp50  +    -0.24885732778394 *
2126517   +        Complain0  +      0.3756770500005 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.48980882052858 * AcceptedCmp10 + 0.32550185290445 *
AcceptedCmp20 + 0.53021728569974 * AcceptedCmp30 + -0.02665247681016 * AcceptedCmp40 +
0.16481850464637 * AcceptedCmp50 + -0.24885732778394 * Complain0 + 0.3756770500005 *
HigherEducationBinary0 ;
2126518   +   H11  = H11  +    -0.04910220307549 * Education2n_Cycle
2126519   +          +    -0.14822683093528 * EducationBasic  +    -0.01437827189793 *
2126520   +        EducationGraduation  +     0.16842374005205 * EducationMaster
2126521   +          +    -0.10287849585992 * Marital_StatusDivorced
2126522   +          +     0.29369580874074 * Marital_StatusMarried
2126523   +          +    -0.22665898953816 * Marital_StatusSingle
2126524   +          +     0.25111199473507 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.04910220307549 * Education2n_Cycle + -0.14822683093528 *
EducationBasic + -0.01437827189793 * EducationGraduation + 0.16842374005205 * EducationMaster
+ -0.10287849585992 * Marital_StatusDivorced + 0.29369580874074 * Marital_StatusMarried +
-0.22665898953816 * Marital_StatusSingle + 0.25111199473507 * Marital_StatusTogether ;
2126525   +   H12  = H12  +     -0.1595289487689 * Education2n_Cycle
2126526   +          +     0.10500818218587 * EducationBasic  +     0.01238201545994 *
2126527   +        EducationGraduation  +    -0.19432567398725 * EducationMaster
2126528   +          +    -0.15073478912147 * Marital_StatusDivorced
2126529   +          +    -0.32890578571742 * Marital_StatusMarried
2126530   +          +     0.41058038801034 * Marital_StatusSingle
2126531   +          +     -0.2663150742816 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.1595289487689 * Education2n_Cycle + 0.10500818218587 *
EducationBasic + 0.01238201545994 * EducationGraduation + -0.19432567398725 * EducationMaster
+ -0.15073478912147 * Marital_StatusDivorced + -0.32890578571742 * Marital_StatusMarried +
0.41058038801034 * Marital_StatusSingle + -0.2663150742816 * Marital_StatusTogether ;
2126532   +   H11  =       -0.01587726781 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.01587726781 + H11 ;
2126533   +   H12  =     1.48684792147138 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 1.48684792147138 + H12 ;
2126534   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
2126535   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
2126536   +END;
MPRINT(EM_DIAGRAM):   END;
2126537   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2126538   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
2126539   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
2126540   +END;
MPRINT(EM_DIAGRAM):   END;
2126541   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2126542   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2126543   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2126544   +
2126545   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2126546   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2126547   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2126548   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2126549   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2126550   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2126551   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2126552   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2126553   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2126554   +end;
MPRINT(EM_DIAGRAM):   end;
2126555   +else do;
MPRINT(EM_DIAGRAM):   else do;
2126556   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2126557   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2126558   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2126559   +   end;
MPRINT(EM_DIAGRAM):   end;
2126560   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2126561   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2126562   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2126563   +   end;
MPRINT(EM_DIAGRAM):   end;
2126564   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2126565   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2126566   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2126567   +   end;
MPRINT(EM_DIAGRAM):   end;
2126568   +end;
MPRINT(EM_DIAGRAM):   end;
2126569   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2126570   +   P_DepVar1  =    -5.32177256661679 * H11  +    -3.04921302676243 * H12 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -5.32177256661679 * H11 + -3.04921302676243 * H12 ;
2126571   +   P_DepVar1  =     1.07591247640807 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.07591247640807 + P_DepVar1 ;
2126572   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2126573   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2126574   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2126575   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2126576   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2126577   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2126578   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2126579   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2126580   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2126581   +END;
MPRINT(EM_DIAGRAM):   END;
2126582   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2126583   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2126584   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2126585   +END;
MPRINT(EM_DIAGRAM):   END;
2126586   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2126587   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2126588   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2126589   +END;
MPRINT(EM_DIAGRAM):   END;
2126590   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2126591   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2126592   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2126593   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2126594   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2126595   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2126596   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2126597   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2126598   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2126599   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2126600   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2126601   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2126602   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2126603   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2126604   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2126605   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2126606   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2126607   +END;
MPRINT(EM_DIAGRAM):   END;
2126608   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2126609   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2126610   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2126611   +drop
2126612   +H11
2126613   +H12
2126614   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 ;
2126615   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2126616   +* Renaming variables for Neural37;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural37;
2126617   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2126618   +* Renaming Posterior variables for Neural37;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural37;
2126619   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2126620   +drop Neural37_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural37_P_DepVar1;
2126621   +Neural37_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural37_P_DepVar1 = P_DepVar1;
2126622   +drop Neural37_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural37_P_DepVar0;
2126623   +Neural37_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural37_P_DepVar0 = P_DepVar0;
2126624   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2126625   +* Renaming _WARN_ variable for Neural37;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural37;
2126626   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2126627   +length Neural37_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural37_WARN_ $4;
2126628   +drop Neural37_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural37_WARN_;
2126629   +Neural37_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural37_WARN_ = _WARN_;
2126630   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2126631   +* Ensmbl23: Average Posteriors of 5 models;
MPRINT(EM_DIAGRAM):   * Ensmbl23: Average Posteriors of 5 models;
2126632   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2126633   +P_DepVar1 = (
2126634   +Neural41_P_DepVar1 +
2126635   +Neural40_P_DepVar1 +
2126636   +Neural39_P_DepVar1 +
2126637   +Neural38_P_DepVar1 +
2126638   +Neural37_P_DepVar1
2126639   +)/5;
MPRINT(EM_DIAGRAM):   P_DepVar1 = ( Neural41_P_DepVar1 + Neural40_P_DepVar1 +
Neural39_P_DepVar1 + Neural38_P_DepVar1 + Neural37_P_DepVar1 )/5;
2126640   +P_DepVar0 = (
2126641   +Neural41_P_DepVar0 +
2126642   +Neural40_P_DepVar0 +
2126643   +Neural39_P_DepVar0 +
2126644   +Neural38_P_DepVar0 +
2126645   +Neural37_P_DepVar0
2126646   +)/5;
MPRINT(EM_DIAGRAM):   P_DepVar0 = ( Neural41_P_DepVar0 + Neural40_P_DepVar0 +
Neural39_P_DepVar0 + Neural38_P_DepVar0 + Neural37_P_DepVar0 )/5;
2126647   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2126648   +* Ensmbl23: Computing Classification Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl23: Computing Classification Vars;
2126649   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2126650   +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set.
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the
         length of a character variable.
2126651   +label I_DepVar = 'Into: DepVar';
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar';
2126652   +length _format $200;
MPRINT(EM_DIAGRAM):   length _format $200;
2126653   +drop _format;
MPRINT(EM_DIAGRAM):   drop _format;
2126654   +_format= ' ';
MPRINT(EM_DIAGRAM):   _format= ' ';
2126655   +_p_= 0;
MPRINT(EM_DIAGRAM):   _p_= 0;
2126656   +drop _p_;
MPRINT(EM_DIAGRAM):   drop _p_;
2126657   +if P_DepVar1 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _p_ then do;
2126658   +_p_= P_DepVar1;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar1;
2126659   +_format= '1';
MPRINT(EM_DIAGRAM):   _format= '1';
2126660   +end;
MPRINT(EM_DIAGRAM):   end;
2126661   +if P_DepVar0 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _p_ then do;
2126662   +_p_= P_DepVar0;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar0;
2126663   +_format= '0';
MPRINT(EM_DIAGRAM):   _format= '0';
2126664   +end;
MPRINT(EM_DIAGRAM):   end;
2126665   +%DMNORMCP(_format,I_DepVar);
MPRINT(DMNORMCP):   I_DepVar=dmnorm(_format,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2126666   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2126667   +* Ensmbl23: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   * Ensmbl23: Producing Unformatted variable;
2126668   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2126669   +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
2126670   +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
2126671   +else
2126672   +if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
2126673   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2126674   +* Ensmbl23: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl23: Computing _WARN_ Variable;
2126675   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2126676   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
2126677   +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
2126678   +_WARN_ = '';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
2126679   +if index(NEURAL41_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
2126679  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL41_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
2126680   +if index(NEURAL41_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
2126680  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL41_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
2126681   +if index(NEURAL41_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
2126681  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL41_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
2126682   +if index(NEURAL41_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
2126682  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL41_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
2126683   +if index(NEURAL40_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
2126683  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL40_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
2126684   +if index(NEURAL40_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
2126684  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL40_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
2126685   +if index(NEURAL40_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
2126685  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL40_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
2126686   +if index(NEURAL40_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
2126686  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL40_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
2126687   +if index(NEURAL39_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
2126687  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL39_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
2126688   +if index(NEURAL39_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
2126688  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL39_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
2126689   +if index(NEURAL39_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
2126689  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL39_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
2126690   +if index(NEURAL39_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
2126690  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL39_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
2126691   +if index(NEURAL38_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
2126691  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL38_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
2126692   +if index(NEURAL38_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
2126692  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL38_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
2126693   +if index(NEURAL38_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
2126693  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL38_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
2126694   +if index(NEURAL38_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
2126694  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL38_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
2126695   +if index(NEURAL37_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
2126695  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL37_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
2126696   +if index(NEURAL37_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
2126696  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL37_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
2126697   +if index(NEURAL37_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
2126697  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL37_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
2126698   +if index(NEURAL37_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
2126698  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL37_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
2126699   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2126700   +* Ensmbl23: Computing Residual Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl23: Computing Residual Vars;
2126701   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2126702   +if
2126703   +F_DepVar NE '1'
2126704   +AND F_DepVar NE '0'
2126705   +then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE '1' AND F_DepVar NE '0' then do;
2126706   +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
2126707   +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
2126708   +end;
MPRINT(EM_DIAGRAM):   end;
2126709   +else do;
MPRINT(EM_DIAGRAM):   else do;
2126710   +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
2126711   +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
2126712   +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
2126713   +WHEN('1') R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN('1') R_DepVar1 = R_DepVar1 +1;
2126714   +WHEN('0') R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN('0') R_DepVar0 = R_DepVar0 +1;
2126715   +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
2126716   +END;
MPRINT(EM_DIAGRAM):   END;
2126717   +END;
MPRINT(EM_DIAGRAM):   END;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2126718    run;
 
NOTE: DATA STEP view saved on file EMWS8.ENSMBL23_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.NEURAL41_TRAIN.VIEW used (Total process time):
      real time           0.13 seconds
      cpu time            0.12 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.14 seconds
      cpu time            0.14 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2126719    quit;
2126720    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
2126721    filename emflow
2126721  ! "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl23\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl23\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl23: Scoring NEURAL41_VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2126722    *------------------------------------------------------------*;
2126723    * Ensmbl23: Scoring NEURAL41_VALIDATE data;
2126724    *------------------------------------------------------------*;
2126725    data EMWS8.Ensmbl23_VALIDATE
2126726    / view=EMWS8.Ensmbl23_VALIDATE
2126727    ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl23_VALIDATE / view=EMWS8.Ensmbl23_VALIDATE ;
2126728    set EMWS8.Neural41_VALIDATE
2126729    ;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural41_VALIDATE ;
2126730    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file
      C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl23\EMFLOWSCORE.sas.
2126731   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2126732   +* Ensmbl23: Combine model for DepVar;
MPRINT(EM_DIAGRAM):   * Ensmbl23: Combine model for DepVar;
2126733   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2126734   +* Ensmbl23: Scoring Code of model 1 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl23: Scoring Code of model 1 of 5;
2126735   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2126736   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2126737   +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
2126738   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
2126739   +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
2126740   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2126741   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2126742   +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
2126743   +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
2126744   +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
2126745   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2126746   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2126747   +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
2126748   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
2126749   +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
2126750   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2126751   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2126752   +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
2126753   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
2126754   +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
2126755   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2126756   +
2126757   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
2126758   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
2126758  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
2126759   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
2126760   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
2126761   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
2126762   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
2126763   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
2126764   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2126765   +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
2126766   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
2126767   +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
2126768   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2126769   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2126770   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
2126771   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2126772   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
2126773   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
2126774   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
2126775   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2126776   +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
2126777   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
2126778   +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
2126779   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2126780   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2126781   +* TOOL: Metadata Node;
MPRINT(EM_DIAGRAM):   * TOOL: Metadata Node;
2126782   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
2126783   +* NODE: Meta3;
MPRINT(EM_DIAGRAM):   * NODE: Meta3;
2126784   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2126785   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2126786   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
2126787   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2126788   +* NODE: Neural41;
MPRINT(EM_DIAGRAM):   * NODE: Neural41;
2126789   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2126790   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2126791   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2126792   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2126793   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2126794   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2126795   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2126796   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2126797   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2126798   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2126799   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2126800   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2126801   +LENGTH _WARN_ $4
2126802   +      F_DepVar  $ 12
2126803   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2126804   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2126805   +
2126806   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2126807   +
2126808   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2126809   +
2126810   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2126811   +
2126812   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2126813   +
2126814   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2126815   +
2126816   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2126817   +
2126818   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2126819   +
2126820   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2126821   +
2126822   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2126823   +
2126824   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2126825   +
2126826   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2126827   +
2126828   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2126829   +
2126830   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2126831   +
2126832   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2126833   +
2126834   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2126835   +
2126836   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2126837   +
2126838   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2126839   +
2126840   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2126841   +
2126842   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2126843   +
2126844   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2126845   +
2126846   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2126847   +
2126848   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2126849   +
2126850   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2126851   +
2126852   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2126853   +
2126854   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2126855   +
2126856   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2126857   +
2126858   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2126859   +
2126860   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2126861   +
2126862   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2126863   +
2126864   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2126865   +
2126866   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
2126867   +
2126868   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
2126869   +
2126870   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
2126871   +
2126872   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
2126873   +
2126874   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
2126875   +
2126876   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
2126877   +
2126878   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2126879   +
2126880   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2126881   +
2126882   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2126883   +
2126884   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2126885   +
2126886   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2126887   +
2126888   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2126889   +
2126890   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2126891   +
2126892   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2126893   +
2126894   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2126895   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2126896   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2126897   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2126898   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2126899   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2126900   +end;
MPRINT(EM_DIAGRAM):   end;
2126901   +else do;
MPRINT(EM_DIAGRAM):   else do;
2126902   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2126903   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2126904   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2126905   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2126906   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2126907   +   end;
MPRINT(EM_DIAGRAM):   end;
2126908   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2126909   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2126910   +   end;
MPRINT(EM_DIAGRAM):   end;
2126911   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2126912   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2126913   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2126914   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2126915   +   end;
MPRINT(EM_DIAGRAM):   end;
2126916   +end;
MPRINT(EM_DIAGRAM):   end;
2126917   +
2126918   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2126919   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2126920   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2126921   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2126922   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2126923   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2126924   +end;
MPRINT(EM_DIAGRAM):   end;
2126925   +else do;
MPRINT(EM_DIAGRAM):   else do;
2126926   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2126927   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2126928   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2126929   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2126930   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2126931   +   end;
MPRINT(EM_DIAGRAM):   end;
2126932   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2126933   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2126934   +   end;
MPRINT(EM_DIAGRAM):   end;
2126935   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2126936   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2126937   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2126938   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2126939   +   end;
MPRINT(EM_DIAGRAM):   end;
2126940   +end;
MPRINT(EM_DIAGRAM):   end;
2126941   +
2126942   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2126943   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2126944   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2126945   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2126946   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2126947   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2126948   +end;
MPRINT(EM_DIAGRAM):   end;
2126949   +else do;
MPRINT(EM_DIAGRAM):   else do;
2126950   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2126951   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2126952   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2126953   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2126954   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2126955   +   end;
MPRINT(EM_DIAGRAM):   end;
2126956   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2126957   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2126958   +   end;
MPRINT(EM_DIAGRAM):   end;
2126959   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2126960   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2126961   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2126962   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2126963   +   end;
MPRINT(EM_DIAGRAM):   end;
2126964   +end;
MPRINT(EM_DIAGRAM):   end;
2126965   +
2126966   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2126967   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2126968   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2126969   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2126970   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2126971   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2126972   +end;
MPRINT(EM_DIAGRAM):   end;
2126973   +else do;
MPRINT(EM_DIAGRAM):   else do;
2126974   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2126975   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2126976   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2126977   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2126978   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2126979   +   end;
MPRINT(EM_DIAGRAM):   end;
2126980   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2126981   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2126982   +   end;
MPRINT(EM_DIAGRAM):   end;
2126983   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2126984   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2126985   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2126986   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2126987   +   end;
MPRINT(EM_DIAGRAM):   end;
2126988   +end;
MPRINT(EM_DIAGRAM):   end;
2126989   +
2126990   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2126991   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2126992   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2126993   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2126994   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2126995   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2126996   +end;
MPRINT(EM_DIAGRAM):   end;
2126997   +else do;
MPRINT(EM_DIAGRAM):   else do;
2126998   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2126999   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2127000   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2127001   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2127002   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2127003   +   end;
MPRINT(EM_DIAGRAM):   end;
2127004   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2127005   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2127006   +   end;
MPRINT(EM_DIAGRAM):   end;
2127007   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2127008   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2127009   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2127010   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2127011   +   end;
MPRINT(EM_DIAGRAM):   end;
2127012   +end;
MPRINT(EM_DIAGRAM):   end;
2127013   +
2127014   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2127015   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2127016   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2127017   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2127018   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2127019   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2127020   +end;
MPRINT(EM_DIAGRAM):   end;
2127021   +else do;
MPRINT(EM_DIAGRAM):   else do;
2127022   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2127023   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2127024   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2127025   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2127026   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2127027   +   end;
MPRINT(EM_DIAGRAM):   end;
2127028   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2127029   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2127030   +   end;
MPRINT(EM_DIAGRAM):   end;
2127031   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2127032   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2127033   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2127034   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2127035   +   end;
MPRINT(EM_DIAGRAM):   end;
2127036   +end;
MPRINT(EM_DIAGRAM):   end;
2127037   +
2127038   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2127039   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2127040   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2127041   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2127042   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2127043   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2127044   +end;
MPRINT(EM_DIAGRAM):   end;
2127045   +else do;
MPRINT(EM_DIAGRAM):   else do;
2127046   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2127047   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2127048   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2127049   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2127050   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2127051   +   end;
MPRINT(EM_DIAGRAM):   end;
2127052   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2127053   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2127054   +   end;
MPRINT(EM_DIAGRAM):   end;
2127055   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2127056   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2127057   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2127058   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2127059   +   end;
MPRINT(EM_DIAGRAM):   end;
2127060   +end;
MPRINT(EM_DIAGRAM):   end;
2127061   +
2127062   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2127063   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
2127064   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2127065   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2127066   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2127067   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2127068   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2127069   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2127070   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2127071   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2127072   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2127073   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2127074   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2127075   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2127076   +end;
MPRINT(EM_DIAGRAM):   end;
2127077   +else do;
MPRINT(EM_DIAGRAM):   else do;
2127078   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2127079   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2127080   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2127081   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2127082   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2127083   +   end;
MPRINT(EM_DIAGRAM):   end;
2127084   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2127085   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2127086   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2127087   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2127088   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2127089   +   end;
MPRINT(EM_DIAGRAM):   end;
2127090   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2127091   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2127092   +   end;
MPRINT(EM_DIAGRAM):   end;
2127093   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2127094   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2127095   +   end;
MPRINT(EM_DIAGRAM):   end;
2127096   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2127097   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2127098   +   end;
MPRINT(EM_DIAGRAM):   end;
2127099   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2127100   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2127101   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2127102   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2127103   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2127104   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2127105   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2127106   +   end;
MPRINT(EM_DIAGRAM):   end;
2127107   +end;
MPRINT(EM_DIAGRAM):   end;
2127108   +
2127109   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2127110   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2127111   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
2127112   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2127113   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2127114   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2127115   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2127116   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2127117   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2127118   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2127119   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2127120   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2127121   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2127122   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2127123   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2127124   +end;
MPRINT(EM_DIAGRAM):   end;
2127125   +else do;
MPRINT(EM_DIAGRAM):   else do;
2127126   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2127127   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2127128   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2127129   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2127130   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2127131   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2127132   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2127133   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2127134   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2127135   +         end;
MPRINT(EM_DIAGRAM):   end;
2127136   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2127137   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2127138   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2127139   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2127140   +            end;
MPRINT(EM_DIAGRAM):   end;
2127141   +         end;
MPRINT(EM_DIAGRAM):   end;
2127142   +      end;
MPRINT(EM_DIAGRAM):   end;
2127143   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2127144   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2127145   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2127146   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2127147   +         end;
MPRINT(EM_DIAGRAM):   end;
2127148   +      end;
MPRINT(EM_DIAGRAM):   end;
2127149   +   end;
MPRINT(EM_DIAGRAM):   end;
2127150   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2127151   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2127152   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2127153   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2127154   +      end;
MPRINT(EM_DIAGRAM):   end;
2127155   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2127156   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2127157   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2127158   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2127159   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2127160   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2127161   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2127162   +         end;
MPRINT(EM_DIAGRAM):   end;
2127163   +      end;
MPRINT(EM_DIAGRAM):   end;
2127164   +   end;
MPRINT(EM_DIAGRAM):   end;
2127165   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2127166   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2127167   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2127168   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2127169   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2127170   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2127171   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2127172   +   end;
MPRINT(EM_DIAGRAM):   end;
2127173   +end;
MPRINT(EM_DIAGRAM):   end;
2127174   +
2127175   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2127176   +*** Checking missing input Interval
2127177   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2127178   +
2127179   +IF NMISS(
2127180   +   AcceptedCmpTotal ,
2127181   +   Age ,
2127182   +   Frq ,
2127183   +   Income ,
2127184   +   Kidhome ,
2127185   +   MntFishProducts ,
2127186   +   MntFruits ,
2127187   +   MntGoldProds ,
2127188   +   MntSweetProducts ,
2127189   +   MonthsAsCustomer ,
2127190   +   NumDealsPurchases ,
2127191   +   NumWebVisitsMonth ,
2127192   +   RFMstat ,
2127193   +   RMntFrq ,
2127194   +   Recency ,
2127195   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome ,
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer ,
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
2127196   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2127197   +
2127198   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2127199   +END;
MPRINT(EM_DIAGRAM):   END;
2127200   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2127201   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
2127202   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2127203   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2127204   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2127205   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2127206   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2127207   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2127208   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2127209   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2127210   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2127211   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2127212   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2127213   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2127214   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2127215   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2127216   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2127217   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2127218   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 *
MonthsAsCustomer ;
2127219   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2127220   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2127221   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2127222   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2127223   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2127224   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2127225   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2127226   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2127227   +END;
MPRINT(EM_DIAGRAM):   END;
2127228   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2127229   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2127230   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2127231   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2127232   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2127233   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2127234   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2127235   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2127236   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2127237   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2127238   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2127239   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2127240   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2127241   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2127242   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2127243   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2127244   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2127245   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2127246   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2127247   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2127248   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
2127249   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2127250   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2127251   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2127252   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2127253   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2127254   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 *
MonthsAsCustomer ;
2127255   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2127256   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2127257   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2127258   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2127259   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2127260   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2127261   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2127262   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2127263   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2127264   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2127265   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2127266   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2127267   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2127268   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2127269   +END;
MPRINT(EM_DIAGRAM):   END;
2127270   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2127271   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
2127272   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2127273   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2127274   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
2127275   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2127276   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2127277   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
2127278   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2127279   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2127280   +   H11  =     0.00111540513846 * S_AcceptedCmpTotal  +    -0.12971131901586 *
2127281   +        S_Age  +    -0.18520628994151 * S_Frq  +     0.00222884615859 *
2127282   +        S_Income  +    -0.52351504306035 * S_Kidhome
2127283   +          +     0.08140325105151 * S_MntFishProducts
2127284   +          +    -0.04386492140302 * S_MntFruits  +     0.05295232764925 *
2127285   +        S_MntGoldProds  +    -0.39891652227681 * S_MntSweetProducts
2127286   +          +    -0.43676985181672 * S_MonthsAsCustomer
2127287   +          +    -0.20260708598657 * S_NumDealsPurchases
2127288   +          +     0.06428019964102 * S_NumWebVisitsMonth
2127289   +          +     0.13467234938466 * S_RFMstat  +    -0.29483834428412 *
2127290   +        S_RMntFrq  +    -0.68447200324777 * S_Recency
2127291   +          +    -0.29437834033294 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.00111540513846 * S_AcceptedCmpTotal + -0.12971131901586 * S_Age
+ -0.18520628994151 * S_Frq + 0.00222884615859 * S_Income + -0.52351504306035 * S_Kidhome +
0.08140325105151 * S_MntFishProducts + -0.04386492140302 * S_MntFruits + 0.05295232764925 *
S_MntGoldProds + -0.39891652227681 * S_MntSweetProducts + -0.43676985181672 *
S_MonthsAsCustomer + -0.20260708598657 * S_NumDealsPurchases + 0.06428019964102 *
S_NumWebVisitsMonth + 0.13467234938466 * S_RFMstat + -0.29483834428412 * S_RMntFrq +
-0.68447200324777 * S_Recency + -0.29437834033294 * S_Teenhome ;
2127292   +   H12  =     0.39213879457216 * S_AcceptedCmpTotal  +    -0.01440353989436 *
2127293   +        S_Age  +     0.23865918577825 * S_Frq  +      0.6365049428914 *
2127294   +        S_Income  +     0.91112653634925 * S_Kidhome
2127295   +          +     0.26539332041133 * S_MntFishProducts
2127296   +          +    -0.31480262631724 * S_MntFruits  +     0.14786958565778 *
2127297   +        S_MntGoldProds  +      0.2400589361571 * S_MntSweetProducts
2127298   +          +    -0.12141919451173 * S_MonthsAsCustomer
2127299   +          +     0.66105669553858 * S_NumDealsPurchases
2127300   +          +     0.35126523805992 * S_NumWebVisitsMonth
2127301   +          +     0.15877473113544 * S_RFMstat  +     0.04256559397745 *
2127302   +        S_RMntFrq  +    -0.82322754979428 * S_Recency
2127303   +          +    -0.38093159094381 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.39213879457216 * S_AcceptedCmpTotal + -0.01440353989436 * S_Age
+ 0.23865918577825 * S_Frq + 0.6365049428914 * S_Income + 0.91112653634925 * S_Kidhome +
0.26539332041133 * S_MntFishProducts + -0.31480262631724 * S_MntFruits + 0.14786958565778 *
S_MntGoldProds + 0.2400589361571 * S_MntSweetProducts + -0.12141919451173 * S_MonthsAsCustomer
+ 0.66105669553858 * S_NumDealsPurchases + 0.35126523805992 * S_NumWebVisitsMonth +
0.15877473113544 * S_RFMstat + 0.04256559397745 * S_RMntFrq + -0.82322754979428 * S_Recency +
-0.38093159094381 * S_Teenhome ;
2127304   +   H13  =     0.01698497071572 * S_AcceptedCmpTotal  +    -0.18194797866377 *
2127305   +        S_Age  +    -0.38541123385894 * S_Frq  +    -0.85948176553863 *
2127306   +        S_Income  +     0.62421717479738 * S_Kidhome
2127307   +          +     0.15545639003856 * S_MntFishProducts
2127308   +          +    -0.04951281670167 * S_MntFruits  +    -0.02786799666153 *
2127309   +        S_MntGoldProds  +     0.25863651263316 * S_MntSweetProducts
2127310   +          +     -0.2202976559774 * S_MonthsAsCustomer
2127311   +          +      0.2989117555747 * S_NumDealsPurchases
2127312   +          +    -0.14751065039865 * S_NumWebVisitsMonth
2127313   +          +    -0.02597231393441 * S_RFMstat  +    -0.39431255412396 *
2127314   +        S_RMntFrq  +     0.37177599027897 * S_Recency
2127315   +          +     0.58385986175941 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 0.01698497071572 * S_AcceptedCmpTotal + -0.18194797866377 * S_Age
+ -0.38541123385894 * S_Frq + -0.85948176553863 * S_Income + 0.62421717479738 * S_Kidhome +
0.15545639003856 * S_MntFishProducts + -0.04951281670167 * S_MntFruits + -0.02786799666153 *
S_MntGoldProds + 0.25863651263316 * S_MntSweetProducts + -0.2202976559774 * S_MonthsAsCustomer
+ 0.2989117555747 * S_NumDealsPurchases + -0.14751065039865 * S_NumWebVisitsMonth +
-0.02597231393441 * S_RFMstat + -0.39431255412396 * S_RMntFrq + 0.37177599027897 * S_Recency +
0.58385986175941 * S_Teenhome ;
2127316   +   H14  =    -0.23472826464263 * S_AcceptedCmpTotal  +      0.2784288410174 *
2127317   +        S_Age  +     0.88464843816774 * S_Frq  +     0.17112519951794 *
2127318   +        S_Income  +    -0.00640590904736 * S_Kidhome
2127319   +          +    -0.26951923409269 * S_MntFishProducts
2127320   +          +     0.32894249282173 * S_MntFruits  +     0.07344906774263 *
2127321   +        S_MntGoldProds  +    -0.34990462553578 * S_MntSweetProducts
2127322   +          +    -0.03084445162862 * S_MonthsAsCustomer
2127323   +          +    -0.63431809432586 * S_NumDealsPurchases
2127324   +          +     -0.8623000996519 * S_NumWebVisitsMonth
2127325   +          +    -0.16320962913093 * S_RFMstat  +     -0.0912884569806 *
2127326   +        S_RMntFrq  +     0.62097299931152 * S_Recency
2127327   +          +    -0.21174542653958 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = -0.23472826464263 * S_AcceptedCmpTotal + 0.2784288410174 * S_Age +
0.88464843816774 * S_Frq + 0.17112519951794 * S_Income + -0.00640590904736 * S_Kidhome +
-0.26951923409269 * S_MntFishProducts + 0.32894249282173 * S_MntFruits + 0.07344906774263 *
S_MntGoldProds + -0.34990462553578 * S_MntSweetProducts + -0.03084445162862 *
S_MonthsAsCustomer + -0.63431809432586 * S_NumDealsPurchases + -0.8623000996519 *
S_NumWebVisitsMonth + -0.16320962913093 * S_RFMstat + -0.0912884569806 * S_RMntFrq +
0.62097299931152 * S_Recency + -0.21174542653958 * S_Teenhome ;
2127328   +   H15  =     0.08498061851068 * S_AcceptedCmpTotal  +    -0.03874599391049 *
2127329   +        S_Age  +     0.26071229941538 * S_Frq  +      0.3037475539849 *
2127330   +        S_Income  +    -0.24194113790018 * S_Kidhome
2127331   +          +    -0.19083222216875 * S_MntFishProducts
2127332   +          +     -0.2295473697124 * S_MntFruits  +    -0.34933034439567 *
2127333   +        S_MntGoldProds  +    -0.02693984703623 * S_MntSweetProducts
2127334   +          +     0.04053963129428 * S_MonthsAsCustomer
2127335   +          +    -0.43392648307969 * S_NumDealsPurchases
2127336   +          +    -0.27875696570809 * S_NumWebVisitsMonth
2127337   +          +     0.15140901901886 * S_RFMstat  +     0.24456818451854 *
2127338   +        S_RMntFrq  +     0.50440740103916 * S_Recency
2127339   +          +    -0.22578843225375 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = 0.08498061851068 * S_AcceptedCmpTotal + -0.03874599391049 * S_Age
+ 0.26071229941538 * S_Frq + 0.3037475539849 * S_Income + -0.24194113790018 * S_Kidhome +
-0.19083222216875 * S_MntFishProducts + -0.2295473697124 * S_MntFruits + -0.34933034439567 *
S_MntGoldProds + -0.02693984703623 * S_MntSweetProducts + 0.04053963129428 *
S_MonthsAsCustomer + -0.43392648307969 * S_NumDealsPurchases + -0.27875696570809 *
S_NumWebVisitsMonth + 0.15140901901886 * S_RFMstat + 0.24456818451854 * S_RMntFrq +
0.50440740103916 * S_Recency + -0.22578843225375 * S_Teenhome ;
2127340   +   H16  =     0.04456496773686 * S_AcceptedCmpTotal  +    -0.27559491111701 *
2127341   +        S_Age  +    -0.17508336034033 * S_Frq  +     0.53227247274911 *
2127342   +        S_Income  +    -0.25899044305101 * S_Kidhome
2127343   +          +    -0.04059351293128 * S_MntFishProducts
2127344   +          +     -0.0638851827999 * S_MntFruits  +    -0.00679153562123 *
2127345   +        S_MntGoldProds  +    -0.03056442128246 * S_MntSweetProducts
2127346   +          +    -0.00021820216919 * S_MonthsAsCustomer
2127347   +          +     0.26994179879371 * S_NumDealsPurchases
2127348   +          +     0.22503342875269 * S_NumWebVisitsMonth
2127349   +          +      0.0842978170878 * S_RFMstat  +     0.10196131382306 *
2127350   +        S_RMntFrq  +    -0.89639874371569 * S_Recency
2127351   +          +     -0.2664087147783 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = 0.04456496773686 * S_AcceptedCmpTotal + -0.27559491111701 * S_Age
+ -0.17508336034033 * S_Frq + 0.53227247274911 * S_Income + -0.25899044305101 * S_Kidhome +
-0.04059351293128 * S_MntFishProducts + -0.0638851827999 * S_MntFruits + -0.00679153562123 *
S_MntGoldProds + -0.03056442128246 * S_MntSweetProducts + -0.00021820216919 *
S_MonthsAsCustomer + 0.26994179879371 * S_NumDealsPurchases + 0.22503342875269 *
S_NumWebVisitsMonth + 0.0842978170878 * S_RFMstat + 0.10196131382306 * S_RMntFrq +
-0.89639874371569 * S_Recency + -0.2664087147783 * S_Teenhome ;
2127352   +   H11  = H11  +     0.24041745169534 * AcceptedCmp10
2127353   +          +     0.02544174782123 * AcceptedCmp20  +     0.05985429287388 *
2127354   +        AcceptedCmp30  +    -0.43610564100855 * AcceptedCmp40
2127355   +          +     -0.0033678658149 * AcceptedCmp50  +      0.4302437669653 *
2127356   +        Complain0  +     0.23399064979433 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.24041745169534 * AcceptedCmp10 + 0.02544174782123 *
AcceptedCmp20 + 0.05985429287388 * AcceptedCmp30 + -0.43610564100855 * AcceptedCmp40 +
-0.0033678658149 * AcceptedCmp50 + 0.4302437669653 * Complain0 + 0.23399064979433 *
HigherEducationBinary0 ;
2127357   +   H12  = H12  +     0.04113908603951 * AcceptedCmp10
2127358   +          +    -0.01093566327356 * AcceptedCmp20  +    -0.29048302676994 *
2127359   +        AcceptedCmp30  +     0.58809451838917 * AcceptedCmp40
2127360   +          +    -0.40651652706331 * AcceptedCmp50  +     0.59503559231942 *
2127361   +        Complain0  +    -0.31162206924656 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.04113908603951 * AcceptedCmp10 + -0.01093566327356 *
AcceptedCmp20 + -0.29048302676994 * AcceptedCmp30 + 0.58809451838917 * AcceptedCmp40 +
-0.40651652706331 * AcceptedCmp50 + 0.59503559231942 * Complain0 + -0.31162206924656 *
HigherEducationBinary0 ;
2127362   +   H13  = H13  +     0.49980132733088 * AcceptedCmp10
2127363   +          +     0.42591357833168 * AcceptedCmp20  +     0.29341561692077 *
2127364   +        AcceptedCmp30  +      0.5385511712513 * AcceptedCmp40
2127365   +          +     0.11385275317979 * AcceptedCmp50  +     0.11081932391124 *
2127366   +        Complain0  +    -0.44840720707687 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.49980132733088 * AcceptedCmp10 + 0.42591357833168 *
AcceptedCmp20 + 0.29341561692077 * AcceptedCmp30 + 0.5385511712513 * AcceptedCmp40 +
0.11385275317979 * AcceptedCmp50 + 0.11081932391124 * Complain0 + -0.44840720707687 *
HigherEducationBinary0 ;
2127367   +   H14  = H14  +     0.70002770930064 * AcceptedCmp10
2127368   +          +     0.03624451131553 * AcceptedCmp20  +     0.75509304132809 *
2127369   +        AcceptedCmp30  +     0.10669150880089 * AcceptedCmp40
2127370   +          +     0.40957450849357 * AcceptedCmp50  +     0.19133447423047 *
2127371   +        Complain0  +      0.0901288611482 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.70002770930064 * AcceptedCmp10 + 0.03624451131553 *
AcceptedCmp20 + 0.75509304132809 * AcceptedCmp30 + 0.10669150880089 * AcceptedCmp40 +
0.40957450849357 * AcceptedCmp50 + 0.19133447423047 * Complain0 + 0.0901288611482 *
HigherEducationBinary0 ;
2127372   +   H15  = H15  +     0.30472902210864 * AcceptedCmp10
2127373   +          +     -0.0160831175686 * AcceptedCmp20  +     0.09226996454789 *
2127374   +        AcceptedCmp30  +     0.03526648068533 * AcceptedCmp40
2127375   +          +      0.1969983492734 * AcceptedCmp50  +    -0.32330512066062 *
2127376   +        Complain0  +     -0.2085030313253 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.30472902210864 * AcceptedCmp10 + -0.0160831175686 *
AcceptedCmp20 + 0.09226996454789 * AcceptedCmp30 + 0.03526648068533 * AcceptedCmp40 +
0.1969983492734 * AcceptedCmp50 + -0.32330512066062 * Complain0 + -0.2085030313253 *
HigherEducationBinary0 ;
2127377   +   H16  = H16  +    -0.19560821735212 * AcceptedCmp10
2127378   +          +     0.01476856325219 * AcceptedCmp20  +    -0.28505549110679 *
2127379   +        AcceptedCmp30  +    -0.13003702218159 * AcceptedCmp40
2127380   +          +     -0.0444894569881 * AcceptedCmp50  +    -0.19927466163886 *
2127381   +        Complain0  +      0.1418696986192 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + -0.19560821735212 * AcceptedCmp10 + 0.01476856325219 *
AcceptedCmp20 + -0.28505549110679 * AcceptedCmp30 + -0.13003702218159 * AcceptedCmp40 +
-0.0444894569881 * AcceptedCmp50 + -0.19927466163886 * Complain0 + 0.1418696986192 *
HigherEducationBinary0 ;
2127382   +   H11  = H11  +     0.05142300573614 * Education2n_Cycle
2127383   +          +    -0.08044262556314 * EducationBasic  +    -0.01420547642374 *
2127384   +        EducationGraduation  +     0.01590498605031 * EducationMaster
2127385   +          +     0.12486109091842 * Marital_StatusDivorced
2127386   +          +    -0.02537427599041 * Marital_StatusMarried
2127387   +          +     0.04139233887566 * Marital_StatusSingle
2127388   +          +     0.01979901000533 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.05142300573614 * Education2n_Cycle + -0.08044262556314 *
EducationBasic + -0.01420547642374 * EducationGraduation + 0.01590498605031 * EducationMaster
+ 0.12486109091842 * Marital_StatusDivorced + -0.02537427599041 * Marital_StatusMarried +
0.04139233887566 * Marital_StatusSingle + 0.01979901000533 * Marital_StatusTogether ;
2127389   +   H12  = H12  +    -0.18925528201163 * Education2n_Cycle
2127390   +          +     0.13542558539857 * EducationBasic  +    -0.00318989932343 *
2127391   +        EducationGraduation  +     0.00556061144517 * EducationMaster
2127392   +          +      0.1922952868897 * Marital_StatusDivorced
2127393   +          +    -0.15043025991045 * Marital_StatusMarried
2127394   +          +     0.24380549252268 * Marital_StatusSingle
2127395   +          +      0.0914480494515 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.18925528201163 * Education2n_Cycle + 0.13542558539857 *
EducationBasic + -0.00318989932343 * EducationGraduation + 0.00556061144517 * EducationMaster
+ 0.1922952868897 * Marital_StatusDivorced + -0.15043025991045 * Marital_StatusMarried +
0.24380549252268 * Marital_StatusSingle + 0.0914480494515 * Marital_StatusTogether ;
2127396   +   H13  = H13  +     0.01984994959794 * Education2n_Cycle
2127397   +          +     0.05848951032368 * EducationBasic  +    -0.44607095594807 *
2127398   +        EducationGraduation  +     0.17433329582337 * EducationMaster
2127399   +          +    -0.19065058903153 * Marital_StatusDivorced
2127400   +          +     0.75653054479625 * Marital_StatusMarried
2127401   +          +    -0.66014855183925 * Marital_StatusSingle
2127402   +          +     0.57813394995752 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.01984994959794 * Education2n_Cycle + 0.05848951032368 *
EducationBasic + -0.44607095594807 * EducationGraduation + 0.17433329582337 * EducationMaster
+ -0.19065058903153 * Marital_StatusDivorced + 0.75653054479625 * Marital_StatusMarried +
-0.66014855183925 * Marital_StatusSingle + 0.57813394995752 * Marital_StatusTogether ;
2127403   +   H14  = H14  +     0.18480056670996 * Education2n_Cycle
2127404   +          +    -0.06350174929241 * EducationBasic  +    -0.27462372414402 *
2127405   +        EducationGraduation  +    -0.30561816795813 * EducationMaster
2127406   +          +    -0.18567969656169 * Marital_StatusDivorced
2127407   +          +    -0.14971561557485 * Marital_StatusMarried
2127408   +          +     0.15498901175156 * Marital_StatusSingle
2127409   +          +    -0.03455782443417 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.18480056670996 * Education2n_Cycle + -0.06350174929241 *
EducationBasic + -0.27462372414402 * EducationGraduation + -0.30561816795813 * EducationMaster
+ -0.18567969656169 * Marital_StatusDivorced + -0.14971561557485 * Marital_StatusMarried +
0.15498901175156 * Marital_StatusSingle + -0.03455782443417 * Marital_StatusTogether ;
2127410   +   H15  = H15  +    -0.12232381400482 * Education2n_Cycle
2127411   +          +     0.20473341276352 * EducationBasic  +      0.0491931637595 *
2127412   +        EducationGraduation  +    -0.21833425438085 * EducationMaster
2127413   +          +    -0.10111355311896 * Marital_StatusDivorced
2127414   +          +     0.14131454959607 * Marital_StatusMarried
2127415   +          +    -0.18391621678023 * Marital_StatusSingle
2127416   +          +     0.23175084120404 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.12232381400482 * Education2n_Cycle + 0.20473341276352 *
EducationBasic + 0.0491931637595 * EducationGraduation + -0.21833425438085 * EducationMaster +
-0.10111355311896 * Marital_StatusDivorced + 0.14131454959607 * Marital_StatusMarried +
-0.18391621678023 * Marital_StatusSingle + 0.23175084120404 * Marital_StatusTogether ;
2127417   +   H16  = H16  +     0.03069778538103 * Education2n_Cycle
2127418   +          +    -0.45911946295888 * EducationBasic  +    -0.07922750315693 *
2127419   +        EducationGraduation  +    -0.19964669060264 * EducationMaster
2127420   +          +     0.04572591415975 * Marital_StatusDivorced
2127421   +          +    -0.38535549815638 * Marital_StatusMarried
2127422   +          +     0.30341063880196 * Marital_StatusSingle
2127423   +          +    -0.28342984798633 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.03069778538103 * Education2n_Cycle + -0.45911946295888 *
EducationBasic + -0.07922750315693 * EducationGraduation + -0.19964669060264 * EducationMaster
+ 0.04572591415975 * Marital_StatusDivorced + -0.38535549815638 * Marital_StatusMarried +
0.30341063880196 * Marital_StatusSingle + -0.28342984798633 * Marital_StatusTogether ;
2127424   +   H11  =     1.39441509752238 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 1.39441509752238 + H11 ;
2127425   +   H12  =     0.19328666321992 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.19328666321992 + H12 ;
2127426   +   H13  =     0.55771988222719 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 0.55771988222719 + H13 ;
2127427   +   H14  =     0.27935543639097 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.27935543639097 + H14 ;
2127428   +   H15  =     1.08911808634908 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 1.08911808634908 + H15 ;
2127429   +   H16  =    -0.22580376250744 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -0.22580376250744 + H16 ;
2127430   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
2127431   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
2127432   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
2127433   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
2127434   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
2127435   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
2127436   +END;
MPRINT(EM_DIAGRAM):   END;
2127437   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2127438   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
2127439   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
2127440   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
2127441   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
2127442   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
2127443   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
2127444   +END;
MPRINT(EM_DIAGRAM):   END;
2127445   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2127446   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2127447   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2127448   +
2127449   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2127450   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2127451   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2127452   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2127453   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2127454   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2127455   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2127456   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2127457   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2127458   +end;
MPRINT(EM_DIAGRAM):   end;
2127459   +else do;
MPRINT(EM_DIAGRAM):   else do;
2127460   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2127461   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2127462   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2127463   +   end;
MPRINT(EM_DIAGRAM):   end;
2127464   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2127465   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2127466   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2127467   +   end;
MPRINT(EM_DIAGRAM):   end;
2127468   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2127469   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2127470   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2127471   +   end;
MPRINT(EM_DIAGRAM):   end;
2127472   +end;
MPRINT(EM_DIAGRAM):   end;
2127473   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2127474   +   P_DepVar1  =     1.18423178138253 * H11  +     2.38126931545785 * H12
2127475   +          +    -2.42139186007404 * H13  +      -2.187729844004 * H14
2127476   +          +    -0.38226616805204 * H15  +      1.1710139734699 * H16 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.18423178138253 * H11 + 2.38126931545785 * H12 +
-2.42139186007404 * H13 + -2.187729844004 * H14 + -0.38226616805204 * H15 + 1.1710139734699 *
H16 ;
2127477   +   P_DepVar1  =    -1.69958173763243 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.69958173763243 + P_DepVar1 ;
2127478   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2127479   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2127480   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2127481   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2127482   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2127483   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2127484   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2127485   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2127486   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2127487   +END;
MPRINT(EM_DIAGRAM):   END;
2127488   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2127489   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2127490   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2127491   +END;
MPRINT(EM_DIAGRAM):   END;
2127492   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2127493   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2127494   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2127495   +END;
MPRINT(EM_DIAGRAM):   END;
2127496   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2127497   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2127498   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2127499   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2127500   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2127501   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2127502   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2127503   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2127504   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2127505   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2127506   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2127507   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2127508   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2127509   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2127510   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2127511   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2127512   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2127513   +END;
MPRINT(EM_DIAGRAM):   END;
2127514   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2127515   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2127516   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2127517   +drop
2127518   +H11
2127519   +H12
2127520   +H13
2127521   +H14
2127522   +H15
2127523   +H16
2127524   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 ;
2127525   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2127526   +* Renaming variables for Neural41;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural41;
2127527   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2127528   +* Renaming Posterior variables for Neural41;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural41;
2127529   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2127530   +drop Neural41_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural41_P_DepVar1;
2127531   +Neural41_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural41_P_DepVar1 = P_DepVar1;
2127532   +drop Neural41_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural41_P_DepVar0;
2127533   +Neural41_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural41_P_DepVar0 = P_DepVar0;
2127534   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2127535   +* Renaming _WARN_ variable for Neural41;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural41;
2127536   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2127537   +length Neural41_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural41_WARN_ $4;
2127538   +drop Neural41_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural41_WARN_;
2127539   +Neural41_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural41_WARN_ = _WARN_;
2127540   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2127541   +* Ensmbl23: Scoring Code of model 2 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl23: Scoring Code of model 2 of 5;
2127542   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2127543   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2127544   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
2127545   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2127546   +* NODE: Neural40;
MPRINT(EM_DIAGRAM):   * NODE: Neural40;
2127547   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2127548   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2127549   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2127550   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2127551   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2127552   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2127553   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2127554   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2127555   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2127556   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2127557   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2127558   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2127559   +LENGTH _WARN_ $4
2127560   +      F_DepVar  $ 12
2127561   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2127562   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2127563   +
2127564   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2127565   +
2127566   +      label S_Frq = 'Standard: Frq' ;
The SAS System
 
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2127567   +
2127568   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2127569   +
2127570   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2127571   +
2127572   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2127573   +
2127574   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2127575   +
2127576   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2127577   +
2127578   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2127579   +
2127580   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2127581   +
2127582   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2127583   +
2127584   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2127585   +
2127586   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2127587   +
2127588   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2127589   +
2127590   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2127591   +
2127592   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2127593   +
2127594   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2127595   +
2127596   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2127597   +
2127598   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2127599   +
2127600   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2127601   +
2127602   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2127603   +
2127604   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2127605   +
2127606   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2127607   +
2127608   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2127609   +
2127610   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2127611   +
2127612   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2127613   +
2127614   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2127615   +
2127616   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2127617   +
2127618   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2127619   +
2127620   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2127621   +
2127622   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2127623   +
2127624   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
2127625   +
2127626   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
2127627   +
2127628   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
2127629   +
2127630   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
2127631   +
2127632   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
2127633   +
2127634   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2127635   +
2127636   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2127637   +
2127638   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2127639   +
2127640   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2127641   +
2127642   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2127643   +
2127644   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2127645   +
2127646   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2127647   +
2127648   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2127649   +
2127650   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2127651   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2127652   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2127653   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2127654   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2127655   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2127656   +end;
MPRINT(EM_DIAGRAM):   end;
2127657   +else do;
MPRINT(EM_DIAGRAM):   else do;
2127658   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2127659   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2127660   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2127661   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2127662   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2127663   +   end;
MPRINT(EM_DIAGRAM):   end;
2127664   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2127665   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2127666   +   end;
MPRINT(EM_DIAGRAM):   end;
2127667   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2127668   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2127669   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2127670   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2127671   +   end;
MPRINT(EM_DIAGRAM):   end;
2127672   +end;
MPRINT(EM_DIAGRAM):   end;
2127673   +
2127674   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2127675   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2127676   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2127677   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2127678   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2127679   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2127680   +end;
MPRINT(EM_DIAGRAM):   end;
2127681   +else do;
MPRINT(EM_DIAGRAM):   else do;
2127682   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2127683   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2127684   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2127685   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2127686   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2127687   +   end;
MPRINT(EM_DIAGRAM):   end;
2127688   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2127689   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2127690   +   end;
MPRINT(EM_DIAGRAM):   end;
2127691   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2127692   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2127693   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2127694   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2127695   +   end;
MPRINT(EM_DIAGRAM):   end;
2127696   +end;
MPRINT(EM_DIAGRAM):   end;
2127697   +
2127698   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2127699   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2127700   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2127701   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2127702   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2127703   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2127704   +end;
MPRINT(EM_DIAGRAM):   end;
2127705   +else do;
MPRINT(EM_DIAGRAM):   else do;
2127706   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2127707   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2127708   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2127709   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2127710   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2127711   +   end;
MPRINT(EM_DIAGRAM):   end;
2127712   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2127713   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2127714   +   end;
MPRINT(EM_DIAGRAM):   end;
2127715   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2127716   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2127717   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2127718   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2127719   +   end;
MPRINT(EM_DIAGRAM):   end;
2127720   +end;
MPRINT(EM_DIAGRAM):   end;
2127721   +
2127722   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2127723   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2127724   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2127725   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2127726   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2127727   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2127728   +end;
MPRINT(EM_DIAGRAM):   end;
2127729   +else do;
MPRINT(EM_DIAGRAM):   else do;
2127730   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2127731   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2127732   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2127733   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2127734   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2127735   +   end;
MPRINT(EM_DIAGRAM):   end;
2127736   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2127737   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2127738   +   end;
MPRINT(EM_DIAGRAM):   end;
2127739   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2127740   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2127741   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2127742   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2127743   +   end;
MPRINT(EM_DIAGRAM):   end;
2127744   +end;
MPRINT(EM_DIAGRAM):   end;
2127745   +
2127746   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2127747   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2127748   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2127749   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2127750   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2127751   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2127752   +end;
MPRINT(EM_DIAGRAM):   end;
2127753   +else do;
MPRINT(EM_DIAGRAM):   else do;
2127754   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2127755   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2127756   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2127757   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2127758   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2127759   +   end;
MPRINT(EM_DIAGRAM):   end;
2127760   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2127761   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2127762   +   end;
MPRINT(EM_DIAGRAM):   end;
2127763   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2127764   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2127765   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2127766   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2127767   +   end;
MPRINT(EM_DIAGRAM):   end;
2127768   +end;
MPRINT(EM_DIAGRAM):   end;
2127769   +
2127770   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2127771   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2127772   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2127773   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2127774   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2127775   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2127776   +end;
MPRINT(EM_DIAGRAM):   end;
2127777   +else do;
MPRINT(EM_DIAGRAM):   else do;
2127778   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2127779   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2127780   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2127781   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2127782   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2127783   +   end;
MPRINT(EM_DIAGRAM):   end;
2127784   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2127785   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2127786   +   end;
MPRINT(EM_DIAGRAM):   end;
2127787   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2127788   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2127789   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2127790   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2127791   +   end;
MPRINT(EM_DIAGRAM):   end;
2127792   +end;
MPRINT(EM_DIAGRAM):   end;
2127793   +
2127794   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2127795   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2127796   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2127797   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2127798   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2127799   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2127800   +end;
MPRINT(EM_DIAGRAM):   end;
2127801   +else do;
MPRINT(EM_DIAGRAM):   else do;
2127802   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2127803   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2127804   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2127805   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2127806   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2127807   +   end;
MPRINT(EM_DIAGRAM):   end;
2127808   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2127809   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2127810   +   end;
MPRINT(EM_DIAGRAM):   end;
2127811   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2127812   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2127813   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2127814   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2127815   +   end;
MPRINT(EM_DIAGRAM):   end;
2127816   +end;
MPRINT(EM_DIAGRAM):   end;
2127817   +
2127818   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2127819   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
2127820   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2127821   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2127822   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2127823   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2127824   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2127825   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2127826   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2127827   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2127828   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2127829   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2127830   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2127831   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2127832   +end;
MPRINT(EM_DIAGRAM):   end;
2127833   +else do;
MPRINT(EM_DIAGRAM):   else do;
2127834   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2127835   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2127836   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2127837   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2127838   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2127839   +   end;
MPRINT(EM_DIAGRAM):   end;
2127840   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2127841   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2127842   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2127843   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2127844   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2127845   +   end;
MPRINT(EM_DIAGRAM):   end;
2127846   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2127847   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2127848   +   end;
MPRINT(EM_DIAGRAM):   end;
2127849   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2127850   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2127851   +   end;
MPRINT(EM_DIAGRAM):   end;
2127852   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2127853   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2127854   +   end;
MPRINT(EM_DIAGRAM):   end;
2127855   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2127856   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2127857   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2127858   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2127859   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2127860   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2127861   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2127862   +   end;
MPRINT(EM_DIAGRAM):   end;
2127863   +end;
MPRINT(EM_DIAGRAM):   end;
2127864   +
2127865   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2127866   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2127867   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
2127868   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2127869   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2127870   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2127871   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2127872   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2127873   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2127874   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2127875   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2127876   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2127877   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2127878   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2127879   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2127880   +end;
MPRINT(EM_DIAGRAM):   end;
2127881   +else do;
MPRINT(EM_DIAGRAM):   else do;
2127882   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2127883   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2127884   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2127885   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2127886   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2127887   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2127888   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2127889   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2127890   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2127891   +         end;
MPRINT(EM_DIAGRAM):   end;
2127892   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2127893   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2127894   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2127895   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2127896   +            end;
MPRINT(EM_DIAGRAM):   end;
2127897   +         end;
MPRINT(EM_DIAGRAM):   end;
2127898   +      end;
MPRINT(EM_DIAGRAM):   end;
2127899   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2127900   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2127901   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2127902   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2127903   +         end;
MPRINT(EM_DIAGRAM):   end;
2127904   +      end;
MPRINT(EM_DIAGRAM):   end;
2127905   +   end;
MPRINT(EM_DIAGRAM):   end;
2127906   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2127907   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2127908   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2127909   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2127910   +      end;
MPRINT(EM_DIAGRAM):   end;
2127911   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2127912   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2127913   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2127914   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2127915   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2127916   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2127917   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2127918   +         end;
MPRINT(EM_DIAGRAM):   end;
2127919   +      end;
MPRINT(EM_DIAGRAM):   end;
2127920   +   end;
MPRINT(EM_DIAGRAM):   end;
2127921   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2127922   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2127923   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2127924   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2127925   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2127926   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2127927   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2127928   +   end;
MPRINT(EM_DIAGRAM):   end;
2127929   +end;
MPRINT(EM_DIAGRAM):   end;
2127930   +
2127931   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2127932   +*** Checking missing input Interval
2127933   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2127934   +
2127935   +IF NMISS(
2127936   +   AcceptedCmpTotal ,
2127937   +   Age ,
2127938   +   Frq ,
2127939   +   Income ,
2127940   +   Kidhome ,
2127941   +   MntFishProducts ,
2127942   +   MntFruits ,
2127943   +   MntGoldProds ,
2127944   +   MntSweetProducts ,
2127945   +   MonthsAsCustomer ,
2127946   +   NumDealsPurchases ,
2127947   +   NumWebVisitsMonth ,
2127948   +   RFMstat ,
2127949   +   RMntFrq ,
2127950   +   Recency ,
2127951   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome ,
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer ,
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
2127952   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2127953   +
2127954   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2127955   +END;
MPRINT(EM_DIAGRAM):   END;
2127956   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2127957   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
2127958   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2127959   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2127960   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2127961   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2127962   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2127963   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2127964   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2127965   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2127966   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2127967   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2127968   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2127969   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2127970   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2127971   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2127972   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2127973   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2127974   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 *
MonthsAsCustomer ;
2127975   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2127976   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2127977   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2127978   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2127979   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2127980   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2127981   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2127982   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2127983   +END;
MPRINT(EM_DIAGRAM):   END;
2127984   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2127985   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2127986   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2127987   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2127988   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2127989   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2127990   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2127991   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2127992   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2127993   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2127994   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2127995   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2127996   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2127997   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2127998   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2127999   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2128000   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2128001   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2128002   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2128003   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2128004   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
2128005   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2128006   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2128007   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2128008   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2128009   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2128010   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 *
MonthsAsCustomer ;
2128011   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2128012   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2128013   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2128014   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2128015   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2128016   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2128017   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2128018   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2128019   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2128020   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2128021   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2128022   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2128023   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2128024   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2128025   +END;
MPRINT(EM_DIAGRAM):   END;
2128026   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2128027   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
2128028   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2128029   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2128030   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
2128031   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2128032   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2128033   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
2128034   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2128035   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2128036   +   H11  =      0.0032927309355 * S_AcceptedCmpTotal  +     0.09101334306394 *
2128037   +        S_Age  +    -0.17737387030956 * S_Frq  +     -0.7980677567639 *
2128038   +        S_Income  +     0.43076147384738 * S_Kidhome
2128039   +          +    -0.03764687993601 * S_MntFishProducts
2128040   +          +     0.02729806956772 * S_MntFruits  +     0.08803652910758 *
2128041   +        S_MntGoldProds  +     0.17643871051763 * S_MntSweetProducts
2128042   +          +    -0.21857007362207 * S_MonthsAsCustomer
2128043   +          +    -0.01738553271488 * S_NumDealsPurchases
2128044   +          +    -0.05405784617097 * S_NumWebVisitsMonth
2128045   +          +    -0.02555104359687 * S_RFMstat  +    -0.22262932120098 *
2128046   +        S_RMntFrq  +     0.52463751421504 * S_Recency
2128047   +          +     0.54544496970995 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.0032927309355 * S_AcceptedCmpTotal + 0.09101334306394 * S_Age +
-0.17737387030956 * S_Frq + -0.7980677567639 * S_Income + 0.43076147384738 * S_Kidhome +
-0.03764687993601 * S_MntFishProducts + 0.02729806956772 * S_MntFruits + 0.08803652910758 *
S_MntGoldProds + 0.17643871051763 * S_MntSweetProducts + -0.21857007362207 *
S_MonthsAsCustomer + -0.01738553271488 * S_NumDealsPurchases + -0.05405784617097 *
S_NumWebVisitsMonth + -0.02555104359687 * S_RFMstat + -0.22262932120098 * S_RMntFrq +
0.52463751421504 * S_Recency + 0.54544496970995 * S_Teenhome ;
2128048   +   H12  =    -0.33803565764996 * S_AcceptedCmpTotal  +     -0.1574598864259 *
2128049   +        S_Age  +    -0.11819127145626 * S_Frq  +     -0.0410639104551 *
2128050   +        S_Income  +     0.30116999256128 * S_Kidhome
2128051   +          +    -0.05148754431395 * S_MntFishProducts
2128052   +          +     0.06976805639315 * S_MntFruits  +     0.21288156312487 *
2128053   +        S_MntGoldProds  +     0.38336457324703 * S_MntSweetProducts
2128054   +          +    -0.47049602184046 * S_MonthsAsCustomer
2128055   +          +     0.31766759211089 * S_NumDealsPurchases
2128056   +          +     0.23065914125267 * S_NumWebVisitsMonth
2128057   +          +     0.30304676466657 * S_RFMstat  +     0.02069006823415 *
2128058   +        S_RMntFrq  +    -0.50214492406349 * S_Recency
2128059   +          +    -0.31828314433486 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.33803565764996 * S_AcceptedCmpTotal + -0.1574598864259 * S_Age
+ -0.11819127145626 * S_Frq + -0.0410639104551 * S_Income + 0.30116999256128 * S_Kidhome +
-0.05148754431395 * S_MntFishProducts + 0.06976805639315 * S_MntFruits + 0.21288156312487 *
S_MntGoldProds + 0.38336457324703 * S_MntSweetProducts + -0.47049602184046 *
S_MonthsAsCustomer + 0.31766759211089 * S_NumDealsPurchases + 0.23065914125267 *
S_NumWebVisitsMonth + 0.30304676466657 * S_RFMstat + 0.02069006823415 * S_RMntFrq +
-0.50214492406349 * S_Recency + -0.31828314433486 * S_Teenhome ;
2128060   +   H13  =    -0.66950066433143 * S_AcceptedCmpTotal  +    -0.13180706544499 *
2128061   +        S_Age  +    -0.35768347811788 * S_Frq  +    -0.48081944747804 *
2128062   +        S_Income  +    -0.47031432651131 * S_Kidhome
2128063   +          +     0.14501559210465 * S_MntFishProducts
2128064   +          +     0.04696430031502 * S_MntFruits  +    -0.56155803643986 *
2128065   +        S_MntGoldProds  +    -0.03811468849817 * S_MntSweetProducts
2128066   +          +    -0.12263198714092 * S_MonthsAsCustomer
2128067   +          +    -0.44778701790462 * S_NumDealsPurchases
2128068   +          +    -0.48451328063306 * S_NumWebVisitsMonth
2128069   +          +    -0.30729532219651 * S_RFMstat  +    -0.53933327781572 *
2128070   +        S_RMntFrq  +     0.73816873319969 * S_Recency
2128071   +          +     0.02727962791734 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.66950066433143 * S_AcceptedCmpTotal + -0.13180706544499 * S_Age
+ -0.35768347811788 * S_Frq + -0.48081944747804 * S_Income + -0.47031432651131 * S_Kidhome +
0.14501559210465 * S_MntFishProducts + 0.04696430031502 * S_MntFruits + -0.56155803643986 *
S_MntGoldProds + -0.03811468849817 * S_MntSweetProducts + -0.12263198714092 *
S_MonthsAsCustomer + -0.44778701790462 * S_NumDealsPurchases + -0.48451328063306 *
S_NumWebVisitsMonth + -0.30729532219651 * S_RFMstat + -0.53933327781572 * S_RMntFrq +
0.73816873319969 * S_Recency + 0.02727962791734 * S_Teenhome ;
2128072   +   H14  =     0.31637384240651 * S_AcceptedCmpTotal  +     0.01318551698119 *
2128073   +        S_Age  +     0.05366305732147 * S_Frq  +     0.11980702632855 *
2128074   +        S_Income  +    -0.63361814765775 * S_Kidhome
2128075   +          +    -0.09824863224867 * S_MntFishProducts
2128076   +          +    -0.19022726480556 * S_MntFruits  +    -0.03622071498812 *
2128077   +        S_MntGoldProds  +    -0.33481056314568 * S_MntSweetProducts
2128078   +          +    -0.02935796970517 * S_MonthsAsCustomer
2128079   +          +     0.02015249143837 * S_NumDealsPurchases
2128080   +          +     0.60675564879689 * S_NumWebVisitsMonth
2128081   +          +     0.25432072256404 * S_RFMstat  +    -0.18855949493817 *
2128082   +        S_RMntFrq  +    -0.75663473950421 * S_Recency
2128083   +          +    -0.34865918998533 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 0.31637384240651 * S_AcceptedCmpTotal + 0.01318551698119 * S_Age +
0.05366305732147 * S_Frq + 0.11980702632855 * S_Income + -0.63361814765775 * S_Kidhome +
-0.09824863224867 * S_MntFishProducts + -0.19022726480556 * S_MntFruits + -0.03622071498812 *
S_MntGoldProds + -0.33481056314568 * S_MntSweetProducts + -0.02935796970517 *
S_MonthsAsCustomer + 0.02015249143837 * S_NumDealsPurchases + 0.60675564879689 *
S_NumWebVisitsMonth + 0.25432072256404 * S_RFMstat + -0.18855949493817 * S_RMntFrq +
-0.75663473950421 * S_Recency + -0.34865918998533 * S_Teenhome ;
2128084   +   H15  =    -0.32654270849386 * S_AcceptedCmpTotal  +     0.17707100422873 *
2128085   +        S_Age  +     0.93625207609464 * S_Frq  +     0.26987977696455 *
2128086   +        S_Income  +    -0.00728146808361 * S_Kidhome
2128087   +          +    -0.15850529937985 * S_MntFishProducts
2128088   +          +     0.06513447200778 * S_MntFruits  +      0.0398444679725 *
2128089   +        S_MntGoldProds  +    -0.12149497244296 * S_MntSweetProducts
2128090   +          +    -0.00539233520343 * S_MonthsAsCustomer
2128091   +          +    -0.54182368084643 * S_NumDealsPurchases
2128092   +          +    -0.60072233649965 * S_NumWebVisitsMonth
2128093   +          +    -0.09022759163793 * S_RFMstat  +    -0.16894620369906 *
2128094   +        S_RMntFrq  +     0.66307424769463 * S_Recency
2128095   +          +    -0.17356690404814 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = -0.32654270849386 * S_AcceptedCmpTotal + 0.17707100422873 * S_Age
+ 0.93625207609464 * S_Frq + 0.26987977696455 * S_Income + -0.00728146808361 * S_Kidhome +
-0.15850529937985 * S_MntFishProducts + 0.06513447200778 * S_MntFruits + 0.0398444679725 *
S_MntGoldProds + -0.12149497244296 * S_MntSweetProducts + -0.00539233520343 *
S_MonthsAsCustomer + -0.54182368084643 * S_NumDealsPurchases + -0.60072233649965 *
S_NumWebVisitsMonth + -0.09022759163793 * S_RFMstat + -0.16894620369906 * S_RMntFrq +
0.66307424769463 * S_Recency + -0.17356690404814 * S_Teenhome ;
2128096   +   H11  = H11  +     0.40379020589792 * AcceptedCmp10
2128097   +          +     0.41163608029184 * AcceptedCmp20  +     0.31824152457666 *
2128098   +        AcceptedCmp30  +     0.30059703252717 * AcceptedCmp40
2128099   +          +     0.21809621049566 * AcceptedCmp50  +     0.17161388784292 *
2128100   +        Complain0  +    -0.35356191864234 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.40379020589792 * AcceptedCmp10 + 0.41163608029184 *
AcceptedCmp20 + 0.31824152457666 * AcceptedCmp30 + 0.30059703252717 * AcceptedCmp40 +
0.21809621049566 * AcceptedCmp50 + 0.17161388784292 * Complain0 + -0.35356191864234 *
HigherEducationBinary0 ;
2128101   +   H12  = H12  +     0.14146453229372 * AcceptedCmp10
2128102   +          +    -0.01499648130434 * AcceptedCmp20  +    -0.15319425809948 *
2128103   +        AcceptedCmp30  +     0.10722126908794 * AcceptedCmp40
2128104   +          +     0.29524215734213 * AcceptedCmp50  +     0.21901777981386 *
2128105   +        Complain0  +     0.26589689583514 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.14146453229372 * AcceptedCmp10 + -0.01499648130434 *
AcceptedCmp20 + -0.15319425809948 * AcceptedCmp30 + 0.10722126908794 * AcceptedCmp40 +
0.29524215734213 * AcceptedCmp50 + 0.21901777981386 * Complain0 + 0.26589689583514 *
HigherEducationBinary0 ;
2128106   +   H13  = H13  +    -0.13089590705194 * AcceptedCmp10
2128107   +          +    -0.16147741287576 * AcceptedCmp20  +     0.13892066553636 *
2128108   +        AcceptedCmp30  +    -0.12220468306752 * AcceptedCmp40
2128109   +          +     0.18197624280085 * AcceptedCmp50  +    -0.31355578222066 *
2128110   +        Complain0  +     0.17409691060383 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.13089590705194 * AcceptedCmp10 + -0.16147741287576 *
AcceptedCmp20 + 0.13892066553636 * AcceptedCmp30 + -0.12220468306752 * AcceptedCmp40 +
0.18197624280085 * AcceptedCmp50 + -0.31355578222066 * Complain0 + 0.17409691060383 *
HigherEducationBinary0 ;
2128111   +   H14  = H14  +     0.24764542202116 * AcceptedCmp10
2128112   +          +     0.00575121729576 * AcceptedCmp20  +    -0.30692671431758 *
2128113   +        AcceptedCmp30  +     0.04820882787304 * AcceptedCmp40
2128114   +          +     0.05262951745934 * AcceptedCmp50  +     0.19424906323292 *
2128115   +        Complain0  +     0.02739699491892 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.24764542202116 * AcceptedCmp10 + 0.00575121729576 *
AcceptedCmp20 + -0.30692671431758 * AcceptedCmp30 + 0.04820882787304 * AcceptedCmp40 +
0.05262951745934 * AcceptedCmp50 + 0.19424906323292 * Complain0 + 0.02739699491892 *
HigherEducationBinary0 ;
2128116   +   H15  = H15  +     0.55249118257316 * AcceptedCmp10
2128117   +          +     0.03472783050924 * AcceptedCmp20  +     0.45051734949789 *
2128118   +        AcceptedCmp30  +    -0.03032221189323 * AcceptedCmp40
2128119   +          +     0.28472394784854 * AcceptedCmp50  +     0.06409321661831 *
2128120   +        Complain0  +     0.17517854321941 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.55249118257316 * AcceptedCmp10 + 0.03472783050924 *
AcceptedCmp20 + 0.45051734949789 * AcceptedCmp30 + -0.03032221189323 * AcceptedCmp40 +
0.28472394784854 * AcceptedCmp50 + 0.06409321661831 * Complain0 + 0.17517854321941 *
HigherEducationBinary0 ;
2128121   +   H11  = H11  +     0.01296567207369 * Education2n_Cycle
2128122   +          +     -0.1384611563627 * EducationBasic  +    -0.07977602646684 *
2128123   +        EducationGraduation  +     0.24334570893333 * EducationMaster
2128124   +          +    -0.38882658584856 * Marital_StatusDivorced
2128125   +          +     0.65814014556907 * Marital_StatusMarried
2128126   +          +    -0.47946271812834 * Marital_StatusSingle
2128127   +          +     0.68266301555878 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.01296567207369 * Education2n_Cycle + -0.1384611563627 *
EducationBasic + -0.07977602646684 * EducationGraduation + 0.24334570893333 * EducationMaster
+ -0.38882658584856 * Marital_StatusDivorced + 0.65814014556907 * Marital_StatusMarried +
-0.47946271812834 * Marital_StatusSingle + 0.68266301555878 * Marital_StatusTogether ;
2128128   +   H12  = H12  +    -0.17120287038112 * Education2n_Cycle
2128129   +          +    -0.02706838966272 * EducationBasic  +     0.28296380151006 *
2128130   +        EducationGraduation  +     0.06350902674039 * EducationMaster
2128131   +          +     -0.3300387788221 * Marital_StatusDivorced
2128132   +          +     0.15584744966644 * Marital_StatusMarried
2128133   +          +     0.26617174676758 * Marital_StatusSingle
2128134   +          +    -0.29771537576014 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.17120287038112 * Education2n_Cycle + -0.02706838966272 *
EducationBasic + 0.28296380151006 * EducationGraduation + 0.06350902674039 * EducationMaster +
-0.3300387788221 * Marital_StatusDivorced + 0.15584744966644 * Marital_StatusMarried +
0.26617174676758 * Marital_StatusSingle + -0.29771537576014 * Marital_StatusTogether ;
2128135   +   H13  = H13  +     0.05524541069883 * Education2n_Cycle
2128136   +          +     0.18324866500855 * EducationBasic  +    -0.25557023117825 *
2128137   +        EducationGraduation  +    -0.16479543389993 * EducationMaster
2128138   +          +    -0.06758334778864 * Marital_StatusDivorced
2128139   +          +    -0.00076716594904 * Marital_StatusMarried
2128140   +          +    -0.04319541969046 * Marital_StatusSingle
2128141   +          +    -0.16936317180157 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.05524541069883 * Education2n_Cycle + 0.18324866500855 *
EducationBasic + -0.25557023117825 * EducationGraduation + -0.16479543389993 * EducationMaster
+ -0.06758334778864 * Marital_StatusDivorced + -0.00076716594904 * Marital_StatusMarried +
-0.04319541969046 * Marital_StatusSingle + -0.16936317180157 * Marital_StatusTogether ;
2128142   +   H14  = H14  +     0.04763927770842 * Education2n_Cycle
2128143   +          +     0.09740370469315 * EducationBasic  +      0.2355172519549 *
2128144   +        EducationGraduation  +    -0.17375916527677 * EducationMaster
2128145   +          +      0.2099776154173 * Marital_StatusDivorced
2128146   +          +    -0.53311901286241 * Marital_StatusMarried
2128147   +          +     0.48618352894253 * Marital_StatusSingle
2128148   +          +    -0.13406957503471 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.04763927770842 * Education2n_Cycle + 0.09740370469315 *
EducationBasic + 0.2355172519549 * EducationGraduation + -0.17375916527677 * EducationMaster +
0.2099776154173 * Marital_StatusDivorced + -0.53311901286241 * Marital_StatusMarried +
0.48618352894253 * Marital_StatusSingle + -0.13406957503471 * Marital_StatusTogether ;
2128149   +   H15  = H15  +     -0.1000300691329 * Education2n_Cycle
2128150   +          +      0.2070015782176 * EducationBasic  +    -0.02421180620986 *
2128151   +        EducationGraduation  +     -0.0194914340189 * EducationMaster
2128152   +          +     -0.1329378358285 * Marital_StatusDivorced
2128153   +          +     -0.1585939674118 * Marital_StatusMarried
2128154   +          +     0.12646246189261 * Marital_StatusSingle
2128155   +          +     0.02351898949739 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.1000300691329 * Education2n_Cycle + 0.2070015782176 *
EducationBasic + -0.02421180620986 * EducationGraduation + -0.0194914340189 * EducationMaster
+ -0.1329378358285 * Marital_StatusDivorced + -0.1585939674118 * Marital_StatusMarried +
0.12646246189261 * Marital_StatusSingle + 0.02351898949739 * Marital_StatusTogether ;
2128156   +   H11  =      0.4650755258615 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.4650755258615 + H11 ;
2128157   +   H12  =    -0.95637983233364 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.95637983233364 + H12 ;
2128158   +   H13  =    -0.46557260942286 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.46557260942286 + H13 ;
2128159   +   H14  =     0.54843208877211 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.54843208877211 + H14 ;
2128160   +   H15  =     0.84042548309301 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 0.84042548309301 + H15 ;
2128161   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
2128162   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
2128163   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
2128164   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
2128165   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
2128166   +END;
MPRINT(EM_DIAGRAM):   END;
2128167   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2128168   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
2128169   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
2128170   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
2128171   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
2128172   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
2128173   +END;
MPRINT(EM_DIAGRAM):   END;
2128174   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2128175   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2128176   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2128177   +
2128178   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2128179   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2128180   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2128181   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2128182   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2128183   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2128184   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2128185   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2128186   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2128187   +end;
MPRINT(EM_DIAGRAM):   end;
2128188   +else do;
MPRINT(EM_DIAGRAM):   else do;
2128189   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2128190   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2128191   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2128192   +   end;
MPRINT(EM_DIAGRAM):   end;
2128193   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2128194   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2128195   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2128196   +   end;
MPRINT(EM_DIAGRAM):   end;
2128197   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2128198   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2128199   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2128200   +   end;
MPRINT(EM_DIAGRAM):   end;
2128201   +end;
MPRINT(EM_DIAGRAM):   end;
2128202   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2128203   +   P_DepVar1  =    -3.09243100351612 * H11  +     0.88657133745413 * H12
2128204   +          +    -2.65301673073237 * H13  +     1.47093743452607 * H14
2128205   +          +    -1.93226639391443 * H15 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.09243100351612 * H11 + 0.88657133745413 * H12 +
-2.65301673073237 * H13 + 1.47093743452607 * H14 + -1.93226639391443 * H15 ;
2128206   +   P_DepVar1  =    -1.83325335768642 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.83325335768642 + P_DepVar1 ;
2128207   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2128208   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2128209   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2128210   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2128211   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2128212   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2128213   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2128214   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2128215   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2128216   +END;
MPRINT(EM_DIAGRAM):   END;
2128217   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2128218   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2128219   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2128220   +END;
MPRINT(EM_DIAGRAM):   END;
2128221   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2128222   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2128223   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2128224   +END;
MPRINT(EM_DIAGRAM):   END;
2128225   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2128226   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2128227   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2128228   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2128229   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2128230   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2128231   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2128232   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2128233   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2128234   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2128235   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2128236   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2128237   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2128238   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2128239   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2128240   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2128241   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2128242   +END;
MPRINT(EM_DIAGRAM):   END;
2128243   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2128244   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2128245   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2128246   +drop
2128247   +H11
2128248   +H12
2128249   +H13
2128250   +H14
2128251   +H15
2128252   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 ;
2128253   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2128254   +* Renaming variables for Neural40;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural40;
2128255   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2128256   +* Renaming Posterior variables for Neural40;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural40;
2128257   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2128258   +drop Neural40_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural40_P_DepVar1;
2128259   +Neural40_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural40_P_DepVar1 = P_DepVar1;
2128260   +drop Neural40_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural40_P_DepVar0;
2128261   +Neural40_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural40_P_DepVar0 = P_DepVar0;
2128262   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2128263   +* Renaming _WARN_ variable for Neural40;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural40;
2128264   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2128265   +length Neural40_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural40_WARN_ $4;
2128266   +drop Neural40_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural40_WARN_;
2128267   +Neural40_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural40_WARN_ = _WARN_;
2128268   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2128269   +* Ensmbl23: Scoring Code of model 3 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl23: Scoring Code of model 3 of 5;
2128270   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2128271   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2128272   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
2128273   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2128274   +* NODE: Neural39;
MPRINT(EM_DIAGRAM):   * NODE: Neural39;
2128275   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2128276   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2128277   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2128278   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2128279   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2128280   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2128281   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2128282   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2128283   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2128284   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2128285   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2128286   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2128287   +LENGTH _WARN_ $4
2128288   +      F_DepVar  $ 12
2128289   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2128290   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2128291   +
2128292   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2128293   +
2128294   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2128295   +
2128296   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2128297   +
2128298   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2128299   +
2128300   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2128301   +
2128302   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2128303   +
2128304   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2128305   +
2128306   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2128307   +
2128308   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2128309   +
2128310   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2128311   +
2128312   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2128313   +
2128314   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2128315   +
2128316   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2128317   +
2128318   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2128319   +
2128320   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2128321   +
2128322   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2128323   +
2128324   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2128325   +
2128326   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2128327   +
2128328   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2128329   +
2128330   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2128331   +
2128332   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2128333   +
2128334   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2128335   +
2128336   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2128337   +
2128338   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2128339   +
2128340   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2128341   +
2128342   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2128343   +
2128344   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2128345   +
2128346   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2128347   +
2128348   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2128349   +
2128350   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2128351   +
2128352   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
2128353   +
2128354   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
2128355   +
2128356   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
2128357   +
2128358   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
2128359   +
2128360   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2128361   +
2128362   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2128363   +
2128364   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2128365   +
2128366   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2128367   +
2128368   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2128369   +
2128370   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2128371   +
2128372   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2128373   +
2128374   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2128375   +
2128376   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2128377   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2128378   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2128379   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2128380   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2128381   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2128382   +end;
MPRINT(EM_DIAGRAM):   end;
2128383   +else do;
MPRINT(EM_DIAGRAM):   else do;
2128384   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2128385   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2128386   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2128387   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2128388   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2128389   +   end;
MPRINT(EM_DIAGRAM):   end;
2128390   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2128391   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2128392   +   end;
MPRINT(EM_DIAGRAM):   end;
2128393   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2128394   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2128395   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2128396   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2128397   +   end;
MPRINT(EM_DIAGRAM):   end;
2128398   +end;
MPRINT(EM_DIAGRAM):   end;
2128399   +
2128400   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2128401   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2128402   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2128403   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2128404   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2128405   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2128406   +end;
MPRINT(EM_DIAGRAM):   end;
2128407   +else do;
MPRINT(EM_DIAGRAM):   else do;
2128408   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2128409   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2128410   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2128411   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2128412   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2128413   +   end;
MPRINT(EM_DIAGRAM):   end;
2128414   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2128415   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2128416   +   end;
MPRINT(EM_DIAGRAM):   end;
2128417   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2128418   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2128419   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2128420   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2128421   +   end;
MPRINT(EM_DIAGRAM):   end;
2128422   +end;
MPRINT(EM_DIAGRAM):   end;
2128423   +
2128424   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2128425   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2128426   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2128427   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2128428   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2128429   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2128430   +end;
MPRINT(EM_DIAGRAM):   end;
2128431   +else do;
MPRINT(EM_DIAGRAM):   else do;
2128432   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2128433   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2128434   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2128435   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2128436   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2128437   +   end;
MPRINT(EM_DIAGRAM):   end;
2128438   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2128439   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2128440   +   end;
MPRINT(EM_DIAGRAM):   end;
2128441   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2128442   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2128443   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2128444   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2128445   +   end;
MPRINT(EM_DIAGRAM):   end;
2128446   +end;
MPRINT(EM_DIAGRAM):   end;
2128447   +
2128448   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2128449   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2128450   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2128451   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2128452   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2128453   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2128454   +end;
MPRINT(EM_DIAGRAM):   end;
2128455   +else do;
MPRINT(EM_DIAGRAM):   else do;
2128456   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2128457   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2128458   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2128459   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2128460   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2128461   +   end;
MPRINT(EM_DIAGRAM):   end;
2128462   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2128463   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2128464   +   end;
MPRINT(EM_DIAGRAM):   end;
2128465   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2128466   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2128467   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2128468   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2128469   +   end;
MPRINT(EM_DIAGRAM):   end;
2128470   +end;
MPRINT(EM_DIAGRAM):   end;
2128471   +
2128472   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2128473   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2128474   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2128475   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2128476   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2128477   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2128478   +end;
MPRINT(EM_DIAGRAM):   end;
2128479   +else do;
MPRINT(EM_DIAGRAM):   else do;
2128480   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2128481   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2128482   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2128483   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2128484   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2128485   +   end;
MPRINT(EM_DIAGRAM):   end;
2128486   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2128487   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2128488   +   end;
MPRINT(EM_DIAGRAM):   end;
2128489   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2128490   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2128491   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2128492   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2128493   +   end;
MPRINT(EM_DIAGRAM):   end;
2128494   +end;
MPRINT(EM_DIAGRAM):   end;
2128495   +
2128496   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2128497   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2128498   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2128499   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2128500   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2128501   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2128502   +end;
MPRINT(EM_DIAGRAM):   end;
2128503   +else do;
MPRINT(EM_DIAGRAM):   else do;
2128504   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2128505   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2128506   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2128507   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2128508   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2128509   +   end;
MPRINT(EM_DIAGRAM):   end;
2128510   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2128511   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2128512   +   end;
MPRINT(EM_DIAGRAM):   end;
2128513   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2128514   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2128515   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2128516   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2128517   +   end;
MPRINT(EM_DIAGRAM):   end;
2128518   +end;
MPRINT(EM_DIAGRAM):   end;
2128519   +
2128520   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2128521   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2128522   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2128523   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2128524   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2128525   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2128526   +end;
MPRINT(EM_DIAGRAM):   end;
2128527   +else do;
MPRINT(EM_DIAGRAM):   else do;
2128528   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2128529   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2128530   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2128531   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2128532   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2128533   +   end;
MPRINT(EM_DIAGRAM):   end;
2128534   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2128535   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2128536   +   end;
MPRINT(EM_DIAGRAM):   end;
2128537   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2128538   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2128539   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2128540   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2128541   +   end;
MPRINT(EM_DIAGRAM):   end;
2128542   +end;
MPRINT(EM_DIAGRAM):   end;
2128543   +
2128544   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2128545   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
2128546   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2128547   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2128548   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2128549   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2128550   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2128551   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2128552   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2128553   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2128554   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2128555   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2128556   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2128557   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2128558   +end;
MPRINT(EM_DIAGRAM):   end;
2128559   +else do;
MPRINT(EM_DIAGRAM):   else do;
2128560   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2128561   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2128562   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2128563   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2128564   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2128565   +   end;
MPRINT(EM_DIAGRAM):   end;
2128566   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2128567   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2128568   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2128569   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2128570   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2128571   +   end;
MPRINT(EM_DIAGRAM):   end;
2128572   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2128573   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2128574   +   end;
MPRINT(EM_DIAGRAM):   end;
2128575   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2128576   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2128577   +   end;
MPRINT(EM_DIAGRAM):   end;
2128578   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2128579   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2128580   +   end;
MPRINT(EM_DIAGRAM):   end;
2128581   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2128582   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2128583   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2128584   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2128585   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2128586   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2128587   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2128588   +   end;
MPRINT(EM_DIAGRAM):   end;
2128589   +end;
MPRINT(EM_DIAGRAM):   end;
2128590   +
2128591   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2128592   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2128593   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
2128594   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2128595   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2128596   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2128597   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2128598   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2128599   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2128600   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2128601   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2128602   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2128603   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2128604   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2128605   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2128606   +end;
MPRINT(EM_DIAGRAM):   end;
2128607   +else do;
MPRINT(EM_DIAGRAM):   else do;
2128608   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2128609   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2128610   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2128611   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2128612   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2128613   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2128614   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2128615   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2128616   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2128617   +         end;
MPRINT(EM_DIAGRAM):   end;
2128618   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2128619   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2128620   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2128621   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2128622   +            end;
MPRINT(EM_DIAGRAM):   end;
2128623   +         end;
MPRINT(EM_DIAGRAM):   end;
2128624   +      end;
MPRINT(EM_DIAGRAM):   end;
2128625   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2128626   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2128627   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2128628   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2128629   +         end;
MPRINT(EM_DIAGRAM):   end;
2128630   +      end;
MPRINT(EM_DIAGRAM):   end;
2128631   +   end;
MPRINT(EM_DIAGRAM):   end;
2128632   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2128633   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2128634   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2128635   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2128636   +      end;
MPRINT(EM_DIAGRAM):   end;
2128637   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2128638   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2128639   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2128640   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2128641   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2128642   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2128643   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2128644   +         end;
MPRINT(EM_DIAGRAM):   end;
2128645   +      end;
MPRINT(EM_DIAGRAM):   end;
2128646   +   end;
MPRINT(EM_DIAGRAM):   end;
2128647   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2128648   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2128649   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2128650   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2128651   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2128652   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2128653   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2128654   +   end;
MPRINT(EM_DIAGRAM):   end;
2128655   +end;
MPRINT(EM_DIAGRAM):   end;
2128656   +
2128657   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2128658   +*** Checking missing input Interval
2128659   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2128660   +
2128661   +IF NMISS(
2128662   +   AcceptedCmpTotal ,
2128663   +   Age ,
2128664   +   Frq ,
2128665   +   Income ,
2128666   +   Kidhome ,
2128667   +   MntFishProducts ,
2128668   +   MntFruits ,
2128669   +   MntGoldProds ,
2128670   +   MntSweetProducts ,
2128671   +   MonthsAsCustomer ,
2128672   +   NumDealsPurchases ,
2128673   +   NumWebVisitsMonth ,
2128674   +   RFMstat ,
2128675   +   RMntFrq ,
2128676   +   Recency ,
2128677   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome ,
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer ,
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
2128678   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2128679   +
2128680   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2128681   +END;
MPRINT(EM_DIAGRAM):   END;
2128682   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2128683   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
2128684   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2128685   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2128686   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2128687   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2128688   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2128689   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2128690   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2128691   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2128692   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2128693   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2128694   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2128695   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2128696   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2128697   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2128698   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2128699   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2128700   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 *
MonthsAsCustomer ;
2128701   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2128702   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2128703   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2128704   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2128705   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2128706   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2128707   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2128708   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2128709   +END;
MPRINT(EM_DIAGRAM):   END;
2128710   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2128711   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2128712   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2128713   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2128714   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2128715   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2128716   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2128717   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2128718   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2128719   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2128720   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2128721   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2128722   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2128723   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2128724   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2128725   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2128726   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2128727   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2128728   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2128729   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2128730   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
2128731   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2128732   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2128733   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2128734   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2128735   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2128736   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 *
MonthsAsCustomer ;
2128737   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2128738   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2128739   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2128740   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2128741   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2128742   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2128743   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2128744   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2128745   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2128746   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2128747   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2128748   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2128749   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2128750   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2128751   +END;
MPRINT(EM_DIAGRAM):   END;
2128752   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2128753   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
2128754   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2128755   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2128756   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
2128757   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2128758   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2128759   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
2128760   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2128761   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2128762   +   H11  =    -0.59512924851551 * S_AcceptedCmpTotal  +     -0.0822975295273 *
2128763   +        S_Age  +     0.34777744436504 * S_Frq  +     0.07942025641822 *
2128764   +        S_Income  +     0.23721647978534 * S_Kidhome
2128765   +          +    -0.02271798884661 * S_MntFishProducts
2128766   +          +     0.08807309980934 * S_MntFruits  +     0.19069006902766 *
2128767   +        S_MntGoldProds  +     0.10910458513653 * S_MntSweetProducts
2128768   +          +     -0.2712400716804 * S_MonthsAsCustomer
2128769   +          +    -0.53936896531209 * S_NumDealsPurchases
2128770   +          +    -0.35925915934577 * S_NumWebVisitsMonth
2128771   +          +    -0.08622629924361 * S_RFMstat  +     0.25394591780904 *
2128772   +        S_RMntFrq  +     0.69890372536214 * S_Recency
2128773   +          +     0.13643980298627 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.59512924851551 * S_AcceptedCmpTotal + -0.0822975295273 * S_Age
+ 0.34777744436504 * S_Frq + 0.07942025641822 * S_Income + 0.23721647978534 * S_Kidhome +
-0.02271798884661 * S_MntFishProducts + 0.08807309980934 * S_MntFruits + 0.19069006902766 *
S_MntGoldProds + 0.10910458513653 * S_MntSweetProducts + -0.2712400716804 * S_MonthsAsCustomer
+ -0.53936896531209 * S_NumDealsPurchases + -0.35925915934577 * S_NumWebVisitsMonth +
-0.08622629924361 * S_RFMstat + 0.25394591780904 * S_RMntFrq + 0.69890372536214 * S_Recency +
0.13643980298627 * S_Teenhome ;
2128774   +   H12  =     -0.1829764834163 * S_AcceptedCmpTotal  +      0.5150125387492 *
2128775   +        S_Age  +     0.98578880139347 * S_Frq  +     0.35785305967975 *
2128776   +        S_Income  +     0.08668934262602 * S_Kidhome
2128777   +          +     -0.1992601670046 * S_MntFishProducts
2128778   +          +     0.01629264862515 * S_MntFruits  +    -0.03025350824332 *
2128779   +        S_MntGoldProds  +    -0.38227262001553 * S_MntSweetProducts
2128780   +          +     0.30116770365349 * S_MonthsAsCustomer
2128781   +          +    -0.46000379214601 * S_NumDealsPurchases
2128782   +          +    -0.73085067864835 * S_NumWebVisitsMonth
2128783   +          +    -0.22923275570367 * S_RFMstat  +     -0.5046307291648 *
2128784   +        S_RMntFrq  +     1.05223220143096 * S_Recency
2128785   +          +    -0.17002078495363 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.1829764834163 * S_AcceptedCmpTotal + 0.5150125387492 * S_Age +
0.98578880139347 * S_Frq + 0.35785305967975 * S_Income + 0.08668934262602 * S_Kidhome +
-0.1992601670046 * S_MntFishProducts + 0.01629264862515 * S_MntFruits + -0.03025350824332 *
S_MntGoldProds + -0.38227262001553 * S_MntSweetProducts + 0.30116770365349 *
S_MonthsAsCustomer + -0.46000379214601 * S_NumDealsPurchases + -0.73085067864835 *
S_NumWebVisitsMonth + -0.22923275570367 * S_RFMstat + -0.5046307291648 * S_RMntFrq +
1.05223220143096 * S_Recency + -0.17002078495363 * S_Teenhome ;
2128786   +   H13  =    -0.46803354047925 * S_AcceptedCmpTotal  +    -0.20058439872619 *
2128787   +        S_Age  +    -0.01284299386993 * S_Frq  +    -0.75016251494757 *
2128788   +        S_Income  +    -0.63339804662862 * S_Kidhome
2128789   +          +     0.20120882029834 * S_MntFishProducts
2128790   +          +    -0.06230023881104 * S_MntFruits  +    -0.36454417225574 *
2128791   +        S_MntGoldProds  +     0.02047534293821 * S_MntSweetProducts
2128792   +          +    -0.08519313101441 * S_MonthsAsCustomer
2128793   +          +    -0.30576030134683 * S_NumDealsPurchases
2128794   +          +    -0.59860723545409 * S_NumWebVisitsMonth
2128795   +          +    -0.08355373822909 * S_RFMstat  +    -0.22326942617185 *
2128796   +        S_RMntFrq  +     0.80270168032456 * S_Recency
2128797   +          +     0.33480569534819 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.46803354047925 * S_AcceptedCmpTotal + -0.20058439872619 * S_Age
+ -0.01284299386993 * S_Frq + -0.75016251494757 * S_Income + -0.63339804662862 * S_Kidhome +
0.20120882029834 * S_MntFishProducts + -0.06230023881104 * S_MntFruits + -0.36454417225574 *
S_MntGoldProds + 0.02047534293821 * S_MntSweetProducts + -0.08519313101441 *
S_MonthsAsCustomer + -0.30576030134683 * S_NumDealsPurchases + -0.59860723545409 *
S_NumWebVisitsMonth + -0.08355373822909 * S_RFMstat + -0.22326942617185 * S_RMntFrq +
0.80270168032456 * S_Recency + 0.33480569534819 * S_Teenhome ;
2128798   +   H14  =    -0.11750811478204 * S_AcceptedCmpTotal  +     0.08897841506547 *
2128799   +        S_Age  +    -0.58608559771512 * S_Frq  +    -0.97381716235373 *
2128800   +        S_Income  +     0.66694972561255 * S_Kidhome
2128801   +          +     -0.0398036726055 * S_MntFishProducts
2128802   +          +     0.22002314897938 * S_MntFruits  +     0.04732712109048 *
2128803   +        S_MntGoldProds  +     0.26526839421345 * S_MntSweetProducts
2128804   +          +    -0.15403174187172 * S_MonthsAsCustomer
2128805   +          +     0.22820115917371 * S_NumDealsPurchases
2128806   +          +     0.18267832891328 * S_NumWebVisitsMonth
2128807   +          +     -0.0174907884104 * S_RFMstat  +    -0.31876274555503 *
2128808   +        S_RMntFrq  +     0.74433020674409 * S_Recency
2128809   +          +     0.47600648051538 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = -0.11750811478204 * S_AcceptedCmpTotal + 0.08897841506547 * S_Age
+ -0.58608559771512 * S_Frq + -0.97381716235373 * S_Income + 0.66694972561255 * S_Kidhome +
-0.0398036726055 * S_MntFishProducts + 0.22002314897938 * S_MntFruits + 0.04732712109048 *
S_MntGoldProds + 0.26526839421345 * S_MntSweetProducts + -0.15403174187172 *
S_MonthsAsCustomer + 0.22820115917371 * S_NumDealsPurchases + 0.18267832891328 *
S_NumWebVisitsMonth + -0.0174907884104 * S_RFMstat + -0.31876274555503 * S_RMntFrq +
0.74433020674409 * S_Recency + 0.47600648051538 * S_Teenhome ;
2128810   +   H11  = H11  +     0.21237941475599 * AcceptedCmp10
2128811   +          +     0.04472438427365 * AcceptedCmp20  +     0.17747949289397 *
2128812   +        AcceptedCmp30  +      0.0160283827284 * AcceptedCmp40
2128813   +          +     0.55925432320426 * AcceptedCmp50  +    -0.14142896526953 *
2128814   +        Complain0  +      0.0575110231505 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.21237941475599 * AcceptedCmp10 + 0.04472438427365 *
AcceptedCmp20 + 0.17747949289397 * AcceptedCmp30 + 0.0160283827284 * AcceptedCmp40 +
0.55925432320426 * AcceptedCmp50 + -0.14142896526953 * Complain0 + 0.0575110231505 *
HigherEducationBinary0 ;
2128815   +   H12  = H12  +     0.47907390571224 * AcceptedCmp10
2128816   +          +     0.27664153700074 * AcceptedCmp20  +     0.53987959298978 *
2128817   +        AcceptedCmp30  +     0.28087504743344 * AcceptedCmp40
2128818   +          +     0.10391254888041 * AcceptedCmp50  +      -0.141083453381 *
2128819   +        Complain0  +     0.11031418992388 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.47907390571224 * AcceptedCmp10 + 0.27664153700074 *
AcceptedCmp20 + 0.53987959298978 * AcceptedCmp30 + 0.28087504743344 * AcceptedCmp40 +
0.10391254888041 * AcceptedCmp50 + -0.141083453381 * Complain0 + 0.11031418992388 *
HigherEducationBinary0 ;
2128820   +   H13  = H13  +     0.09520651716106 * AcceptedCmp10
2128821   +          +      0.0343715287888 * AcceptedCmp20  +     0.48264670470765 *
2128822   +        AcceptedCmp30  +    -0.73356967665862 * AcceptedCmp40
2128823   +          +     0.43560801503541 * AcceptedCmp50  +     -0.2718667817564 *
2128824   +        Complain0  +     0.07653375459455 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.09520651716106 * AcceptedCmp10 + 0.0343715287888 *
AcceptedCmp20 + 0.48264670470765 * AcceptedCmp30 + -0.73356967665862 * AcceptedCmp40 +
0.43560801503541 * AcceptedCmp50 + -0.2718667817564 * Complain0 + 0.07653375459455 *
HigherEducationBinary0 ;
2128825   +   H14  = H14  +     0.18606771308408 * AcceptedCmp10
2128826   +          +     0.10545968088972 * AcceptedCmp20  +     0.28680843470023 *
2128827   +        AcceptedCmp30  +     0.48936354303031 * AcceptedCmp40
2128828   +          +    -0.14408643246427 * AcceptedCmp50  +     0.23450133527378 *
2128829   +        Complain0  +    -0.44927010710705 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.18606771308408 * AcceptedCmp10 + 0.10545968088972 *
AcceptedCmp20 + 0.28680843470023 * AcceptedCmp30 + 0.48936354303031 * AcceptedCmp40 +
-0.14408643246427 * AcceptedCmp50 + 0.23450133527378 * Complain0 + -0.44927010710705 *
HigherEducationBinary0 ;
2128830   +   H11  = H11  +    -0.14528524296804 * Education2n_Cycle
2128831   +          +     0.01673408592951 * EducationBasic  +    -0.06429601063979 *
2128832   +        EducationGraduation  +    -0.02622617788078 * EducationMaster
2128833   +          +     0.06024519291122 * Marital_StatusDivorced
2128834   +          +     -0.0819071841309 * Marital_StatusMarried
2128835   +          +     0.42870578507073 * Marital_StatusSingle
2128836   +          +      0.4051129562668 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.14528524296804 * Education2n_Cycle + 0.01673408592951 *
EducationBasic + -0.06429601063979 * EducationGraduation + -0.02622617788078 * EducationMaster
+ 0.06024519291122 * Marital_StatusDivorced + -0.0819071841309 * Marital_StatusMarried +
0.42870578507073 * Marital_StatusSingle + 0.4051129562668 * Marital_StatusTogether ;
2128837   +   H12  = H12  +     0.28210673900541 * Education2n_Cycle
2128838   +          +    -0.02393077028847 * EducationBasic  +    -0.10389902860327 *
2128839   +        EducationGraduation  +    -0.14877703838953 * EducationMaster
2128840   +          +    -0.13856018901636 * Marital_StatusDivorced
2128841   +          +     0.10012984585302 * Marital_StatusMarried
2128842   +          +     0.02921741368356 * Marital_StatusSingle
2128843   +          +     0.13848478656523 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.28210673900541 * Education2n_Cycle + -0.02393077028847 *
EducationBasic + -0.10389902860327 * EducationGraduation + -0.14877703838953 * EducationMaster
+ -0.13856018901636 * Marital_StatusDivorced + 0.10012984585302 * Marital_StatusMarried +
0.02921741368356 * Marital_StatusSingle + 0.13848478656523 * Marital_StatusTogether ;
2128844   +   H13  = H13  +      0.0183013852099 * Education2n_Cycle
2128845   +          +     0.43125570378811 * EducationBasic  +    -0.31392526432015 *
2128846   +        EducationGraduation  +      0.0753944289648 * EducationMaster
2128847   +          +    -0.23239586980133 * Marital_StatusDivorced
2128848   +          +      0.1253994554645 * Marital_StatusMarried
2128849   +          +    -0.33648409660062 * Marital_StatusSingle
2128850   +          +    -0.14353309021619 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.0183013852099 * Education2n_Cycle + 0.43125570378811 *
EducationBasic + -0.31392526432015 * EducationGraduation + 0.0753944289648 * EducationMaster +
-0.23239586980133 * Marital_StatusDivorced + 0.1253994554645 * Marital_StatusMarried +
-0.33648409660062 * Marital_StatusSingle + -0.14353309021619 * Marital_StatusTogether ;
2128851   +   H14  = H14  +    -0.13261661281439 * Education2n_Cycle
2128852   +          +     0.12513764082187 * EducationBasic  +    -0.21826807057488 *
2128853   +        EducationGraduation  +     0.25426016549852 * EducationMaster
2128854   +          +    -0.20018638821233 * Marital_StatusDivorced
2128855   +          +     1.07213214578803 * Marital_StatusMarried
2128856   +          +    -0.78089608097635 * Marital_StatusSingle
2128857   +          +      0.8652598562973 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.13261661281439 * Education2n_Cycle + 0.12513764082187 *
EducationBasic + -0.21826807057488 * EducationGraduation + 0.25426016549852 * EducationMaster
+ -0.20018638821233 * Marital_StatusDivorced + 1.07213214578803 * Marital_StatusMarried +
-0.78089608097635 * Marital_StatusSingle + 0.8652598562973 * Marital_StatusTogether ;
2128858   +   H11  =      0.6839700017137 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.6839700017137 + H11 ;
2128859   +   H12  =     0.88439108697567 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.88439108697567 + H12 ;
2128860   +   H13  =    -0.21745653885035 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.21745653885035 + H13 ;
2128861   +   H14  =     1.53290685706631 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 1.53290685706631 + H14 ;
2128862   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
2128863   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
2128864   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
2128865   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
2128866   +END;
MPRINT(EM_DIAGRAM):   END;
2128867   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2128868   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
2128869   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
2128870   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
2128871   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
2128872   +END;
MPRINT(EM_DIAGRAM):   END;
2128873   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2128874   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2128875   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2128876   +
2128877   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2128878   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2128879   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2128880   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2128881   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2128882   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2128883   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2128884   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2128885   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2128886   +end;
MPRINT(EM_DIAGRAM):   end;
2128887   +else do;
MPRINT(EM_DIAGRAM):   else do;
2128888   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2128889   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2128890   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2128891   +   end;
MPRINT(EM_DIAGRAM):   end;
2128892   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2128893   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2128894   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2128895   +   end;
MPRINT(EM_DIAGRAM):   end;
2128896   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2128897   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2128898   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2128899   +   end;
MPRINT(EM_DIAGRAM):   end;
2128900   +end;
MPRINT(EM_DIAGRAM):   end;
2128901   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2128902   +   P_DepVar1  =    -1.02007256907977 * H11  +    -1.79638089167371 * H12
2128903   +          +    -2.67778063761069 * H13  +    -2.40349387174856 * H14 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.02007256907977 * H11 + -1.79638089167371 * H12 +
-2.67778063761069 * H13 + -2.40349387174856 * H14 ;
2128904   +   P_DepVar1  =    -0.89818574956639 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.89818574956639 + P_DepVar1 ;
2128905   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2128906   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2128907   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2128908   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2128909   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2128910   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2128911   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2128912   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2128913   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2128914   +END;
MPRINT(EM_DIAGRAM):   END;
2128915   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2128916   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2128917   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2128918   +END;
MPRINT(EM_DIAGRAM):   END;
2128919   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2128920   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2128921   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2128922   +END;
MPRINT(EM_DIAGRAM):   END;
2128923   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2128924   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2128925   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2128926   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2128927   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2128928   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2128929   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2128930   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2128931   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2128932   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2128933   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2128934   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2128935   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2128936   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2128937   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2128938   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2128939   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2128940   +END;
MPRINT(EM_DIAGRAM):   END;
2128941   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2128942   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2128943   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2128944   +drop
2128945   +H11
2128946   +H12
2128947   +H13
2128948   +H14
2128949   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 ;
2128950   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2128951   +* Renaming variables for Neural39;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural39;
2128952   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2128953   +* Renaming Posterior variables for Neural39;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural39;
2128954   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2128955   +drop Neural39_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural39_P_DepVar1;
2128956   +Neural39_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural39_P_DepVar1 = P_DepVar1;
2128957   +drop Neural39_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural39_P_DepVar0;
2128958   +Neural39_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural39_P_DepVar0 = P_DepVar0;
2128959   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2128960   +* Renaming _WARN_ variable for Neural39;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural39;
2128961   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2128962   +length Neural39_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural39_WARN_ $4;
2128963   +drop Neural39_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural39_WARN_;
2128964   +Neural39_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural39_WARN_ = _WARN_;
2128965   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2128966   +* Ensmbl23: Scoring Code of model 4 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl23: Scoring Code of model 4 of 5;
2128967   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2128968   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2128969   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
2128970   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2128971   +* NODE: Neural38;
MPRINT(EM_DIAGRAM):   * NODE: Neural38;
2128972   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2128973   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2128974   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2128975   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2128976   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2128977   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2128978   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2128979   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2128980   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2128981   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2128982   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2128983   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2128984   +LENGTH _WARN_ $4
2128985   +      F_DepVar  $ 12
2128986   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2128987   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2128988   +
2128989   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2128990   +
2128991   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2128992   +
2128993   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2128994   +
2128995   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2128996   +
2128997   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2128998   +
2128999   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2129000   +
2129001   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2129002   +
2129003   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2129004   +
2129005   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2129006   +
2129007   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2129008   +
2129009   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2129010   +
2129011   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2129012   +
2129013   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2129014   +
2129015   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2129016   +
2129017   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2129018   +
2129019   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2129020   +
2129021   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2129022   +
2129023   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2129024   +
2129025   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2129026   +
2129027   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2129028   +
2129029   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2129030   +
2129031   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2129032   +
2129033   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2129034   +
2129035   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2129036   +
2129037   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2129038   +
2129039   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2129040   +
2129041   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2129042   +
2129043   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2129044   +
2129045   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2129046   +
2129047   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2129048   +
2129049   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
2129050   +
2129051   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
2129052   +
2129053   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
2129054   +
2129055   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2129056   +
2129057   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2129058   +
2129059   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2129060   +
2129061   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2129062   +
2129063   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2129064   +
2129065   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2129066   +
2129067   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2129068   +
2129069   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2129070   +
2129071   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2129072   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2129073   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2129074   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2129075   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2129076   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2129077   +end;
MPRINT(EM_DIAGRAM):   end;
2129078   +else do;
MPRINT(EM_DIAGRAM):   else do;
2129079   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2129080   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2129081   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2129082   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2129083   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2129084   +   end;
MPRINT(EM_DIAGRAM):   end;
2129085   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2129086   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2129087   +   end;
MPRINT(EM_DIAGRAM):   end;
2129088   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2129089   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2129090   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2129091   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2129092   +   end;
MPRINT(EM_DIAGRAM):   end;
2129093   +end;
MPRINT(EM_DIAGRAM):   end;
2129094   +
2129095   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2129096   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2129097   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2129098   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2129099   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2129100   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2129101   +end;
MPRINT(EM_DIAGRAM):   end;
2129102   +else do;
MPRINT(EM_DIAGRAM):   else do;
2129103   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2129104   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2129105   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2129106   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2129107   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2129108   +   end;
MPRINT(EM_DIAGRAM):   end;
2129109   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2129110   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2129111   +   end;
MPRINT(EM_DIAGRAM):   end;
2129112   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2129113   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2129114   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2129115   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2129116   +   end;
MPRINT(EM_DIAGRAM):   end;
2129117   +end;
MPRINT(EM_DIAGRAM):   end;
2129118   +
2129119   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2129120   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2129121   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2129122   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2129123   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2129124   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2129125   +end;
MPRINT(EM_DIAGRAM):   end;
2129126   +else do;
MPRINT(EM_DIAGRAM):   else do;
2129127   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2129128   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2129129   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2129130   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2129131   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2129132   +   end;
MPRINT(EM_DIAGRAM):   end;
2129133   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2129134   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2129135   +   end;
MPRINT(EM_DIAGRAM):   end;
2129136   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2129137   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2129138   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2129139   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2129140   +   end;
MPRINT(EM_DIAGRAM):   end;
2129141   +end;
MPRINT(EM_DIAGRAM):   end;
2129142   +
2129143   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2129144   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2129145   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2129146   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2129147   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2129148   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2129149   +end;
MPRINT(EM_DIAGRAM):   end;
2129150   +else do;
MPRINT(EM_DIAGRAM):   else do;
2129151   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2129152   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2129153   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2129154   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2129155   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2129156   +   end;
MPRINT(EM_DIAGRAM):   end;
2129157   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2129158   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2129159   +   end;
MPRINT(EM_DIAGRAM):   end;
2129160   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2129161   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2129162   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2129163   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2129164   +   end;
MPRINT(EM_DIAGRAM):   end;
2129165   +end;
MPRINT(EM_DIAGRAM):   end;
2129166   +
2129167   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2129168   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2129169   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2129170   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2129171   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2129172   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2129173   +end;
MPRINT(EM_DIAGRAM):   end;
2129174   +else do;
MPRINT(EM_DIAGRAM):   else do;
2129175   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2129176   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2129177   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2129178   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2129179   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2129180   +   end;
MPRINT(EM_DIAGRAM):   end;
2129181   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2129182   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2129183   +   end;
MPRINT(EM_DIAGRAM):   end;
2129184   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2129185   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2129186   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2129187   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2129188   +   end;
MPRINT(EM_DIAGRAM):   end;
2129189   +end;
MPRINT(EM_DIAGRAM):   end;
2129190   +
2129191   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2129192   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2129193   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2129194   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2129195   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2129196   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2129197   +end;
MPRINT(EM_DIAGRAM):   end;
2129198   +else do;
MPRINT(EM_DIAGRAM):   else do;
2129199   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2129200   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2129201   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2129202   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2129203   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2129204   +   end;
MPRINT(EM_DIAGRAM):   end;
2129205   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2129206   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2129207   +   end;
MPRINT(EM_DIAGRAM):   end;
2129208   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2129209   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2129210   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2129211   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2129212   +   end;
MPRINT(EM_DIAGRAM):   end;
2129213   +end;
MPRINT(EM_DIAGRAM):   end;
2129214   +
2129215   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2129216   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2129217   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2129218   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2129219   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2129220   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2129221   +end;
MPRINT(EM_DIAGRAM):   end;
2129222   +else do;
MPRINT(EM_DIAGRAM):   else do;
2129223   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2129224   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2129225   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2129226   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2129227   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2129228   +   end;
MPRINT(EM_DIAGRAM):   end;
2129229   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2129230   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2129231   +   end;
MPRINT(EM_DIAGRAM):   end;
2129232   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2129233   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2129234   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2129235   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2129236   +   end;
MPRINT(EM_DIAGRAM):   end;
2129237   +end;
MPRINT(EM_DIAGRAM):   end;
2129238   +
2129239   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2129240   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
2129241   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2129242   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2129243   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2129244   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2129245   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2129246   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2129247   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2129248   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2129249   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2129250   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2129251   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2129252   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2129253   +end;
MPRINT(EM_DIAGRAM):   end;
2129254   +else do;
MPRINT(EM_DIAGRAM):   else do;
2129255   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2129256   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2129257   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2129258   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2129259   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2129260   +   end;
MPRINT(EM_DIAGRAM):   end;
2129261   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2129262   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2129263   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2129264   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2129265   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2129266   +   end;
MPRINT(EM_DIAGRAM):   end;
2129267   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2129268   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2129269   +   end;
MPRINT(EM_DIAGRAM):   end;
2129270   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2129271   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2129272   +   end;
MPRINT(EM_DIAGRAM):   end;
2129273   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2129274   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2129275   +   end;
MPRINT(EM_DIAGRAM):   end;
2129276   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2129277   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2129278   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2129279   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2129280   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2129281   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2129282   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2129283   +   end;
MPRINT(EM_DIAGRAM):   end;
2129284   +end;
MPRINT(EM_DIAGRAM):   end;
2129285   +
2129286   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2129287   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2129288   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
2129289   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2129290   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2129291   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2129292   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2129293   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2129294   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2129295   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2129296   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2129297   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2129298   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2129299   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2129300   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2129301   +end;
MPRINT(EM_DIAGRAM):   end;
2129302   +else do;
MPRINT(EM_DIAGRAM):   else do;
2129303   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2129304   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2129305   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2129306   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2129307   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2129308   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2129309   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2129310   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2129311   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2129312   +         end;
MPRINT(EM_DIAGRAM):   end;
2129313   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2129314   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2129315   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2129316   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2129317   +            end;
MPRINT(EM_DIAGRAM):   end;
2129318   +         end;
MPRINT(EM_DIAGRAM):   end;
2129319   +      end;
MPRINT(EM_DIAGRAM):   end;
2129320   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2129321   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2129322   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2129323   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2129324   +         end;
MPRINT(EM_DIAGRAM):   end;
2129325   +      end;
MPRINT(EM_DIAGRAM):   end;
2129326   +   end;
MPRINT(EM_DIAGRAM):   end;
2129327   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2129328   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2129329   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2129330   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2129331   +      end;
MPRINT(EM_DIAGRAM):   end;
2129332   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2129333   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2129334   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2129335   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2129336   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2129337   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2129338   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2129339   +         end;
MPRINT(EM_DIAGRAM):   end;
2129340   +      end;
MPRINT(EM_DIAGRAM):   end;
2129341   +   end;
MPRINT(EM_DIAGRAM):   end;
2129342   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2129343   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2129344   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2129345   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2129346   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2129347   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2129348   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2129349   +   end;
MPRINT(EM_DIAGRAM):   end;
2129350   +end;
MPRINT(EM_DIAGRAM):   end;
2129351   +
2129352   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2129353   +*** Checking missing input Interval
2129354   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2129355   +
2129356   +IF NMISS(
2129357   +   AcceptedCmpTotal ,
2129358   +   Age ,
2129359   +   Frq ,
2129360   +   Income ,
2129361   +   Kidhome ,
2129362   +   MntFishProducts ,
2129363   +   MntFruits ,
2129364   +   MntGoldProds ,
2129365   +   MntSweetProducts ,
2129366   +   MonthsAsCustomer ,
2129367   +   NumDealsPurchases ,
2129368   +   NumWebVisitsMonth ,
2129369   +   RFMstat ,
2129370   +   RMntFrq ,
2129371   +   Recency ,
2129372   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome ,
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer ,
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
2129373   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2129374   +
2129375   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2129376   +END;
MPRINT(EM_DIAGRAM):   END;
2129377   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2129378   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
2129379   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2129380   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2129381   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2129382   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2129383   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2129384   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2129385   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2129386   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2129387   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2129388   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2129389   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2129390   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2129391   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2129392   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2129393   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2129394   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2129395   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 *
MonthsAsCustomer ;
2129396   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2129397   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2129398   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2129399   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2129400   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2129401   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2129402   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2129403   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2129404   +END;
MPRINT(EM_DIAGRAM):   END;
2129405   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2129406   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2129407   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2129408   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2129409   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2129410   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2129411   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2129412   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2129413   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2129414   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2129415   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2129416   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2129417   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2129418   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2129419   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2129420   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2129421   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2129422   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2129423   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2129424   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2129425   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
2129426   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2129427   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2129428   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2129429   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2129430   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2129431   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 *
MonthsAsCustomer ;
2129432   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2129433   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2129434   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2129435   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2129436   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2129437   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2129438   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2129439   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2129440   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2129441   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2129442   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2129443   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2129444   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2129445   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2129446   +END;
MPRINT(EM_DIAGRAM):   END;
2129447   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2129448   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
2129449   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2129450   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2129451   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
2129452   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2129453   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2129454   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
2129455   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2129456   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2129457   +   H11  =    -0.12735997892099 * S_AcceptedCmpTotal  +     0.05614113783048 *
2129458   +        S_Age  +     0.62712460637822 * S_Frq  +     0.12299131156999 *
2129459   +        S_Income  +    -0.48966666023107 * S_Kidhome
2129460   +          +    -0.02039894625139 * S_MntFishProducts
2129461   +          +    -0.46314393239988 * S_MntFruits  +    -0.08473184666241 *
2129462   +        S_MntGoldProds  +     0.08362335658545 * S_MntSweetProducts
2129463   +          +    -0.10405556335761 * S_MonthsAsCustomer
2129464   +          +    -0.51342273744068 * S_NumDealsPurchases
2129465   +          +    -0.03733960386951 * S_NumWebVisitsMonth
2129466   +          +    -0.17746951162034 * S_RFMstat  +     -0.4900258897048 *
2129467   +        S_RMntFrq  +     0.18043722262784 * S_Recency
2129468   +          +    -0.16370458409437 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.12735997892099 * S_AcceptedCmpTotal + 0.05614113783048 * S_Age
+ 0.62712460637822 * S_Frq + 0.12299131156999 * S_Income + -0.48966666023107 * S_Kidhome +
-0.02039894625139 * S_MntFishProducts + -0.46314393239988 * S_MntFruits + -0.08473184666241 *
S_MntGoldProds + 0.08362335658545 * S_MntSweetProducts + -0.10405556335761 *
S_MonthsAsCustomer + -0.51342273744068 * S_NumDealsPurchases + -0.03733960386951 *
S_NumWebVisitsMonth + -0.17746951162034 * S_RFMstat + -0.4900258897048 * S_RMntFrq +
0.18043722262784 * S_Recency + -0.16370458409437 * S_Teenhome ;
2129469   +   H12  =    -0.60633882410536 * S_AcceptedCmpTotal  +       0.224864344383 *
2129470   +        S_Age  +     1.39199458994411 * S_Frq  +     0.87162437846369 *
2129471   +        S_Income  +    -0.78349610624343 * S_Kidhome
2129472   +          +     0.11143790088856 * S_MntFishProducts
2129473   +          +    -0.55718313448059 * S_MntFruits  +    -0.21087085222526 *
2129474   +        S_MntGoldProds  +     0.02856888181428 * S_MntSweetProducts
2129475   +          +     0.32076375444952 * S_MonthsAsCustomer
2129476   +          +    -0.26990924990463 * S_NumDealsPurchases
2129477   +          +    -0.38394733388565 * S_NumWebVisitsMonth
2129478   +          +    -0.22782651153177 * S_RFMstat  +     0.22812202935498 *
2129479   +        S_RMntFrq  +    -0.19933331095407 * S_Recency
2129480   +          +    -0.70020220713535 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.60633882410536 * S_AcceptedCmpTotal + 0.224864344383 * S_Age +
1.39199458994411 * S_Frq + 0.87162437846369 * S_Income + -0.78349610624343 * S_Kidhome +
0.11143790088856 * S_MntFishProducts + -0.55718313448059 * S_MntFruits + -0.21087085222526 *
S_MntGoldProds + 0.02856888181428 * S_MntSweetProducts + 0.32076375444952 * S_MonthsAsCustomer
+ -0.26990924990463 * S_NumDealsPurchases + -0.38394733388565 * S_NumWebVisitsMonth +
-0.22782651153177 * S_RFMstat + 0.22812202935498 * S_RMntFrq + -0.19933331095407 * S_Recency +
-0.70020220713535 * S_Teenhome ;
2129481   +   H13  =    -0.13101581197148 * S_AcceptedCmpTotal  +     0.13628003311785 *
2129482   +        S_Age  +     0.36995757743109 * S_Frq  +    -0.29860018899791 *
2129483   +        S_Income  +     0.35747326688336 * S_Kidhome
2129484   +          +      0.0686999643098 * S_MntFishProducts
2129485   +          +     0.04887259723743 * S_MntFruits  +    -0.06102251488536 *
2129486   +        S_MntGoldProds  +     0.02326506142202 * S_MntSweetProducts
2129487   +          +     0.14271282712227 * S_MonthsAsCustomer
2129488   +          +    -0.13832369827798 * S_NumDealsPurchases
2129489   +          +    -0.47612163926952 * S_NumWebVisitsMonth
2129490   +          +    -0.06611946982584 * S_RFMstat  +     0.13861254443913 *
2129491   +        S_RMntFrq  +     0.58403001514589 * S_Recency
2129492   +          +     0.20007724178827 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.13101581197148 * S_AcceptedCmpTotal + 0.13628003311785 * S_Age
+ 0.36995757743109 * S_Frq + -0.29860018899791 * S_Income + 0.35747326688336 * S_Kidhome +
0.0686999643098 * S_MntFishProducts + 0.04887259723743 * S_MntFruits + -0.06102251488536 *
S_MntGoldProds + 0.02326506142202 * S_MntSweetProducts + 0.14271282712227 * S_MonthsAsCustomer
+ -0.13832369827798 * S_NumDealsPurchases + -0.47612163926952 * S_NumWebVisitsMonth +
-0.06611946982584 * S_RFMstat + 0.13861254443913 * S_RMntFrq + 0.58403001514589 * S_Recency +
0.20007724178827 * S_Teenhome ;
2129493   +   H11  = H11  +     0.84056686173766 * AcceptedCmp10
2129494   +          +    -0.24934706882838 * AcceptedCmp20  +     0.30196639473026 *
2129495   +        AcceptedCmp30  +     0.05258139446676 * AcceptedCmp40
2129496   +          +     0.67593676788479 * AcceptedCmp50  +     0.08683881940471 *
2129497   +        Complain0  +     0.18065485673242 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.84056686173766 * AcceptedCmp10 + -0.24934706882838 *
AcceptedCmp20 + 0.30196639473026 * AcceptedCmp30 + 0.05258139446676 * AcceptedCmp40 +
0.67593676788479 * AcceptedCmp50 + 0.08683881940471 * Complain0 + 0.18065485673242 *
HigherEducationBinary0 ;
2129498   +   H12  = H12  +    -0.04721322843232 * AcceptedCmp10
2129499   +          +    -0.86918240857339 * AcceptedCmp20  +    -0.72151645579567 *
2129500   +        AcceptedCmp30  +    -0.64210941414089 * AcceptedCmp40
2129501   +          +     0.33249469617845 * AcceptedCmp50  +    -0.47926491040481 *
2129502   +        Complain0  +     0.34126288384384 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.04721322843232 * AcceptedCmp10 + -0.86918240857339 *
AcceptedCmp20 + -0.72151645579567 * AcceptedCmp30 + -0.64210941414089 * AcceptedCmp40 +
0.33249469617845 * AcceptedCmp50 + -0.47926491040481 * Complain0 + 0.34126288384384 *
HigherEducationBinary0 ;
2129503   +   H13  = H13  +     0.00143925055481 * AcceptedCmp10
2129504   +          +     0.14964205194256 * AcceptedCmp20  +     0.11503898054899 *
2129505   +        AcceptedCmp30  +      0.0133572907593 * AcceptedCmp40
2129506   +          +     0.23211071198237 * AcceptedCmp50  +    -0.26237638274137 *
2129507   +        Complain0  +    -0.01756413200655 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.00143925055481 * AcceptedCmp10 + 0.14964205194256 *
AcceptedCmp20 + 0.11503898054899 * AcceptedCmp30 + 0.0133572907593 * AcceptedCmp40 +
0.23211071198237 * AcceptedCmp50 + -0.26237638274137 * Complain0 + -0.01756413200655 *
HigherEducationBinary0 ;
2129508   +   H11  = H11  +     0.29624759193414 * Education2n_Cycle
2129509   +          +    -0.40760427816833 * EducationBasic  +     0.00224467466349 *
2129510   +        EducationGraduation  +    -0.21511521624726 * EducationMaster
2129511   +          +     0.34831332012594 * Marital_StatusDivorced
2129512   +          +     0.03256682571475 * Marital_StatusMarried
2129513   +          +     0.14498541232514 * Marital_StatusSingle
2129514   +          +     0.30917752682842 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.29624759193414 * Education2n_Cycle + -0.40760427816833 *
EducationBasic + 0.00224467466349 * EducationGraduation + -0.21511521624726 * EducationMaster
+ 0.34831332012594 * Marital_StatusDivorced + 0.03256682571475 * Marital_StatusMarried +
0.14498541232514 * Marital_StatusSingle + 0.30917752682842 * Marital_StatusTogether ;
2129515   +   H12  = H12  +     0.04524701432166 * Education2n_Cycle
2129516   +          +     0.20523000800068 * EducationBasic  +     0.18270469986075 *
2129517   +        EducationGraduation  +    -0.26534207933216 * EducationMaster
2129518   +          +     0.05517800751028 * Marital_StatusDivorced
2129519   +          +    -0.70385428266578 * Marital_StatusMarried
2129520   +          +     0.85990109232942 * Marital_StatusSingle
2129521   +          +     -0.6453756400301 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.04524701432166 * Education2n_Cycle + 0.20523000800068 *
EducationBasic + 0.18270469986075 * EducationGraduation + -0.26534207933216 * EducationMaster
+ 0.05517800751028 * Marital_StatusDivorced + -0.70385428266578 * Marital_StatusMarried +
0.85990109232942 * Marital_StatusSingle + -0.6453756400301 * Marital_StatusTogether ;
2129522   +   H13  = H13  +    -0.36171919789219 * Education2n_Cycle
2129523   +          +      0.4064975673385 * EducationBasic  +    -0.07138108930929 *
2129524   +        EducationGraduation  +     0.21530846518532 * EducationMaster
2129525   +          +    -0.33904221640495 * Marital_StatusDivorced
2129526   +          +     0.10243956895845 * Marital_StatusMarried
2129527   +          +      -0.049421978948 * Marital_StatusSingle
2129528   +          +    -0.01189234912724 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.36171919789219 * Education2n_Cycle + 0.4064975673385 *
EducationBasic + -0.07138108930929 * EducationGraduation + 0.21530846518532 * EducationMaster
+ -0.33904221640495 * Marital_StatusDivorced + 0.10243956895845 * Marital_StatusMarried +
-0.049421978948 * Marital_StatusSingle + -0.01189234912724 * Marital_StatusTogether ;
2129529   +   H11  =    -1.19319602190903 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.19319602190903 + H11 ;
2129530   +   H12  =      -0.706001116518 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.706001116518 + H12 ;
2129531   +   H13  =    -0.05058509326004 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.05058509326004 + H13 ;
2129532   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
2129533   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
2129534   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
2129535   +END;
MPRINT(EM_DIAGRAM):   END;
2129536   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2129537   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
2129538   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
2129539   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
2129540   +END;
MPRINT(EM_DIAGRAM):   END;
2129541   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2129542   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2129543   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2129544   +
2129545   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2129546   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2129547   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2129548   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2129549   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2129550   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2129551   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2129552   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2129553   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2129554   +end;
MPRINT(EM_DIAGRAM):   end;
2129555   +else do;
MPRINT(EM_DIAGRAM):   else do;
2129556   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2129557   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2129558   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2129559   +   end;
MPRINT(EM_DIAGRAM):   end;
2129560   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2129561   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2129562   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2129563   +   end;
MPRINT(EM_DIAGRAM):   end;
2129564   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2129565   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2129566   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2129567   +   end;
MPRINT(EM_DIAGRAM):   end;
2129568   +end;
MPRINT(EM_DIAGRAM):   end;
2129569   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2129570   +   P_DepVar1  =    -3.42974915011649 * H11  +     4.01757681065312 * H12
2129571   +          +    -4.86050966020391 * H13 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.42974915011649 * H11 + 4.01757681065312 * H12 +
-4.86050966020391 * H13 ;
2129572   +   P_DepVar1  =    -0.68121736689971 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.68121736689971 + P_DepVar1 ;
2129573   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2129574   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2129575   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2129576   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2129577   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2129578   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2129579   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2129580   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2129581   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2129582   +END;
MPRINT(EM_DIAGRAM):   END;
2129583   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2129584   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2129585   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2129586   +END;
MPRINT(EM_DIAGRAM):   END;
2129587   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2129588   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2129589   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2129590   +END;
MPRINT(EM_DIAGRAM):   END;
2129591   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2129592   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2129593   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2129594   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2129595   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2129596   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2129597   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2129598   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2129599   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2129600   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2129601   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2129602   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2129603   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2129604   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2129605   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2129606   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2129607   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2129608   +END;
MPRINT(EM_DIAGRAM):   END;
2129609   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2129610   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2129611   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2129612   +drop
2129613   +H11
2129614   +H12
2129615   +H13
2129616   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 ;
2129617   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2129618   +* Renaming variables for Neural38;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural38;
2129619   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2129620   +* Renaming Posterior variables for Neural38;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural38;
2129621   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2129622   +drop Neural38_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural38_P_DepVar1;
2129623   +Neural38_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural38_P_DepVar1 = P_DepVar1;
2129624   +drop Neural38_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural38_P_DepVar0;
2129625   +Neural38_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural38_P_DepVar0 = P_DepVar0;
2129626   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2129627   +* Renaming _WARN_ variable for Neural38;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural38;
2129628   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2129629   +length Neural38_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural38_WARN_ $4;
2129630   +drop Neural38_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural38_WARN_;
2129631   +Neural38_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural38_WARN_ = _WARN_;
2129632   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2129633   +* Ensmbl23: Scoring Code of model 5 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl23: Scoring Code of model 5 of 5;
2129634   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2129635   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2129636   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
2129637   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2129638   +* NODE: Neural37;
MPRINT(EM_DIAGRAM):   * NODE: Neural37;
2129639   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2129640   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2129641   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2129642   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2129643   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2129644   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2129645   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2129646   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2129647   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2129648   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2129649   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2129650   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2129651   +LENGTH _WARN_ $4
2129652   +      F_DepVar  $ 12
2129653   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2129654   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2129655   +
2129656   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2129657   +
2129658   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2129659   +
2129660   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2129661   +
2129662   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2129663   +
2129664   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2129665   +
2129666   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2129667   +
2129668   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2129669   +
2129670   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2129671   +
2129672   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2129673   +
2129674   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2129675   +
2129676   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2129677   +
2129678   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2129679   +
2129680   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2129681   +
2129682   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2129683   +
2129684   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2129685   +
2129686   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2129687   +
2129688   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2129689   +
2129690   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2129691   +
2129692   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2129693   +
2129694   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2129695   +
2129696   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2129697   +
2129698   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2129699   +
2129700   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2129701   +
2129702   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2129703   +
2129704   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2129705   +
2129706   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2129707   +
2129708   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2129709   +
2129710   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2129711   +
2129712   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2129713   +
2129714   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2129715   +
2129716   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
2129717   +
2129718   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
2129719   +
2129720   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2129721   +
2129722   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2129723   +
2129724   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2129725   +
2129726   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2129727   +
2129728   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2129729   +
2129730   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2129731   +
2129732   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2129733   +
2129734   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2129735   +
2129736   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2129737   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2129738   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2129739   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2129740   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2129741   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2129742   +end;
MPRINT(EM_DIAGRAM):   end;
2129743   +else do;
MPRINT(EM_DIAGRAM):   else do;
2129744   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2129745   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2129746   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2129747   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2129748   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2129749   +   end;
MPRINT(EM_DIAGRAM):   end;
2129750   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2129751   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2129752   +   end;
MPRINT(EM_DIAGRAM):   end;
2129753   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2129754   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2129755   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2129756   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2129757   +   end;
MPRINT(EM_DIAGRAM):   end;
2129758   +end;
MPRINT(EM_DIAGRAM):   end;
2129759   +
2129760   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2129761   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2129762   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2129763   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2129764   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2129765   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2129766   +end;
MPRINT(EM_DIAGRAM):   end;
2129767   +else do;
MPRINT(EM_DIAGRAM):   else do;
2129768   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2129769   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2129770   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2129771   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2129772   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2129773   +   end;
MPRINT(EM_DIAGRAM):   end;
2129774   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2129775   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2129776   +   end;
MPRINT(EM_DIAGRAM):   end;
2129777   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2129778   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2129779   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2129780   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2129781   +   end;
MPRINT(EM_DIAGRAM):   end;
2129782   +end;
MPRINT(EM_DIAGRAM):   end;
2129783   +
2129784   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2129785   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2129786   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2129787   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2129788   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2129789   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2129790   +end;
MPRINT(EM_DIAGRAM):   end;
2129791   +else do;
MPRINT(EM_DIAGRAM):   else do;
2129792   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2129793   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2129794   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2129795   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2129796   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2129797   +   end;
MPRINT(EM_DIAGRAM):   end;
2129798   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2129799   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2129800   +   end;
MPRINT(EM_DIAGRAM):   end;
2129801   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2129802   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2129803   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2129804   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2129805   +   end;
MPRINT(EM_DIAGRAM):   end;
2129806   +end;
MPRINT(EM_DIAGRAM):   end;
2129807   +
2129808   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2129809   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2129810   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2129811   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2129812   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2129813   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2129814   +end;
MPRINT(EM_DIAGRAM):   end;
2129815   +else do;
MPRINT(EM_DIAGRAM):   else do;
2129816   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2129817   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2129818   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2129819   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2129820   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2129821   +   end;
MPRINT(EM_DIAGRAM):   end;
2129822   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2129823   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2129824   +   end;
MPRINT(EM_DIAGRAM):   end;
2129825   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2129826   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2129827   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2129828   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2129829   +   end;
MPRINT(EM_DIAGRAM):   end;
2129830   +end;
MPRINT(EM_DIAGRAM):   end;
2129831   +
2129832   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2129833   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2129834   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2129835   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2129836   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2129837   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2129838   +end;
MPRINT(EM_DIAGRAM):   end;
2129839   +else do;
MPRINT(EM_DIAGRAM):   else do;
2129840   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2129841   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2129842   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2129843   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2129844   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2129845   +   end;
MPRINT(EM_DIAGRAM):   end;
2129846   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2129847   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2129848   +   end;
MPRINT(EM_DIAGRAM):   end;
2129849   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2129850   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2129851   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2129852   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2129853   +   end;
MPRINT(EM_DIAGRAM):   end;
2129854   +end;
MPRINT(EM_DIAGRAM):   end;
2129855   +
2129856   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2129857   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2129858   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2129859   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2129860   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2129861   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2129862   +end;
MPRINT(EM_DIAGRAM):   end;
2129863   +else do;
MPRINT(EM_DIAGRAM):   else do;
2129864   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2129865   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2129866   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2129867   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2129868   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2129869   +   end;
MPRINT(EM_DIAGRAM):   end;
2129870   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2129871   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2129872   +   end;
MPRINT(EM_DIAGRAM):   end;
2129873   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2129874   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2129875   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2129876   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2129877   +   end;
MPRINT(EM_DIAGRAM):   end;
2129878   +end;
MPRINT(EM_DIAGRAM):   end;
2129879   +
2129880   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2129881   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2129882   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2129883   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2129884   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2129885   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2129886   +end;
MPRINT(EM_DIAGRAM):   end;
2129887   +else do;
MPRINT(EM_DIAGRAM):   else do;
2129888   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2129889   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2129890   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2129891   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2129892   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2129893   +   end;
MPRINT(EM_DIAGRAM):   end;
2129894   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2129895   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2129896   +   end;
MPRINT(EM_DIAGRAM):   end;
2129897   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2129898   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2129899   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2129900   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2129901   +   end;
MPRINT(EM_DIAGRAM):   end;
2129902   +end;
MPRINT(EM_DIAGRAM):   end;
2129903   +
2129904   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2129905   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
2129906   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2129907   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2129908   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2129909   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2129910   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2129911   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2129912   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2129913   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2129914   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2129915   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2129916   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2129917   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2129918   +end;
MPRINT(EM_DIAGRAM):   end;
2129919   +else do;
MPRINT(EM_DIAGRAM):   else do;
2129920   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2129921   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2129922   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2129923   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2129924   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2129925   +   end;
MPRINT(EM_DIAGRAM):   end;
2129926   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2129927   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2129928   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2129929   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2129930   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2129931   +   end;
MPRINT(EM_DIAGRAM):   end;
2129932   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2129933   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2129934   +   end;
MPRINT(EM_DIAGRAM):   end;
2129935   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2129936   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2129937   +   end;
MPRINT(EM_DIAGRAM):   end;
2129938   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2129939   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2129940   +   end;
MPRINT(EM_DIAGRAM):   end;
2129941   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2129942   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2129943   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2129944   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2129945   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2129946   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2129947   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2129948   +   end;
MPRINT(EM_DIAGRAM):   end;
2129949   +end;
MPRINT(EM_DIAGRAM):   end;
2129950   +
2129951   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2129952   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2129953   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
2129954   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2129955   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2129956   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2129957   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2129958   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2129959   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2129960   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2129961   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2129962   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2129963   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2129964   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2129965   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2129966   +end;
MPRINT(EM_DIAGRAM):   end;
2129967   +else do;
MPRINT(EM_DIAGRAM):   else do;
2129968   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2129969   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2129970   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2129971   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2129972   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2129973   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2129974   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2129975   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2129976   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2129977   +         end;
MPRINT(EM_DIAGRAM):   end;
2129978   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2129979   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2129980   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2129981   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2129982   +            end;
MPRINT(EM_DIAGRAM):   end;
2129983   +         end;
MPRINT(EM_DIAGRAM):   end;
2129984   +      end;
MPRINT(EM_DIAGRAM):   end;
2129985   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2129986   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2129987   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2129988   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2129989   +         end;
MPRINT(EM_DIAGRAM):   end;
2129990   +      end;
MPRINT(EM_DIAGRAM):   end;
2129991   +   end;
MPRINT(EM_DIAGRAM):   end;
2129992   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2129993   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2129994   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2129995   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2129996   +      end;
MPRINT(EM_DIAGRAM):   end;
2129997   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2129998   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2129999   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2130000   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2130001   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2130002   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2130003   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2130004   +         end;
MPRINT(EM_DIAGRAM):   end;
2130005   +      end;
MPRINT(EM_DIAGRAM):   end;
2130006   +   end;
MPRINT(EM_DIAGRAM):   end;
2130007   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2130008   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2130009   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2130010   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2130011   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2130012   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2130013   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2130014   +   end;
MPRINT(EM_DIAGRAM):   end;
2130015   +end;
MPRINT(EM_DIAGRAM):   end;
2130016   +
2130017   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2130018   +*** Checking missing input Interval
2130019   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2130020   +
2130021   +IF NMISS(
2130022   +   AcceptedCmpTotal ,
2130023   +   Age ,
2130024   +   Frq ,
2130025   +   Income ,
2130026   +   Kidhome ,
2130027   +   MntFishProducts ,
2130028   +   MntFruits ,
2130029   +   MntGoldProds ,
2130030   +   MntSweetProducts ,
2130031   +   MonthsAsCustomer ,
2130032   +   NumDealsPurchases ,
2130033   +   NumWebVisitsMonth ,
2130034   +   RFMstat ,
2130035   +   RMntFrq ,
2130036   +   Recency ,
2130037   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome ,
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer ,
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
2130038   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2130039   +
2130040   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2130041   +END;
MPRINT(EM_DIAGRAM):   END;
2130042   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2130043   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
2130044   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2130045   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2130046   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2130047   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2130048   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2130049   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2130050   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2130051   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2130052   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2130053   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2130054   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2130055   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2130056   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2130057   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2130058   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2130059   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2130060   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 *
MonthsAsCustomer ;
2130061   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2130062   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2130063   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2130064   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2130065   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2130066   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2130067   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2130068   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2130069   +END;
MPRINT(EM_DIAGRAM):   END;
2130070   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2130071   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2130072   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2130073   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2130074   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2130075   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2130076   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2130077   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2130078   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2130079   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2130080   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2130081   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2130082   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2130083   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2130084   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2130085   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2130086   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2130087   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2130088   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2130089   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2130090   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
2130091   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2130092   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2130093   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2130094   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2130095   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2130096   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 *
MonthsAsCustomer ;
2130097   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2130098   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2130099   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2130100   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2130101   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2130102   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2130103   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2130104   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2130105   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2130106   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2130107   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2130108   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2130109   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2130110   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2130111   +END;
MPRINT(EM_DIAGRAM):   END;
2130112   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2130113   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
2130114   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2130115   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2130116   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
2130117   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2130118   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2130119   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
2130120   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2130121   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2130122   +   H11  =     0.02350954951536 * S_AcceptedCmpTotal  +     0.03219603688042 *
2130123   +        S_Age  +    -0.05789460883987 * S_Frq  +    -0.44265601825308 *
2130124   +        S_Income  +     0.20165551633113 * S_Kidhome
2130125   +          +     0.00056309050317 * S_MntFishProducts
2130126   +          +     0.05001720173625 * S_MntFruits  +      0.0052212271793 *
2130127   +        S_MntGoldProds  +     0.05669192458513 * S_MntSweetProducts
2130128   +          +    -0.04270777222511 * S_MonthsAsCustomer
2130129   +          +    -0.09478064763989 * S_NumDealsPurchases
2130130   +          +    -0.14700428312188 * S_NumWebVisitsMonth
2130131   +          +    -0.01952994747701 * S_RFMstat  +    -0.07485496116647 *
2130132   +        S_RMntFrq  +     0.43424535825498 * S_Recency
2130133   +          +     0.31343234855137 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.02350954951536 * S_AcceptedCmpTotal + 0.03219603688042 * S_Age +
-0.05789460883987 * S_Frq + -0.44265601825308 * S_Income + 0.20165551633113 * S_Kidhome +
0.00056309050317 * S_MntFishProducts + 0.05001720173625 * S_MntFruits + 0.0052212271793 *
S_MntGoldProds + 0.05669192458513 * S_MntSweetProducts + -0.04270777222511 *
S_MonthsAsCustomer + -0.09478064763989 * S_NumDealsPurchases + -0.14700428312188 *
S_NumWebVisitsMonth + -0.01952994747701 * S_RFMstat + -0.07485496116647 * S_RMntFrq +
0.43424535825498 * S_Recency + 0.31343234855137 * S_Teenhome ;
2130134   +   H12  =    -0.19856399125523 * S_AcceptedCmpTotal  +     0.11288759015424 *
2130135   +        S_Age  +     1.42026893919787 * S_Frq  +       0.589558227778 *
2130136   +        S_Income  +    -0.30460976693199 * S_Kidhome
2130137   +          +    -0.24231306090193 * S_MntFishProducts
2130138   +          +     0.04807947910877 * S_MntFruits  +    -0.18714547156261 *
2130139   +        S_MntGoldProds  +    -0.11212664938439 * S_MntSweetProducts
2130140   +          +     0.10352770685507 * S_MonthsAsCustomer
2130141   +          +    -0.68489181638757 * S_NumDealsPurchases
2130142   +          +    -0.58100230229526 * S_NumWebVisitsMonth
2130143   +          +    -0.21690205060235 * S_RFMstat  +    -0.28659625619875 *
2130144   +        S_RMntFrq  +     0.66583235171642 * S_Recency
2130145   +          +    -0.26587787276778 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.19856399125523 * S_AcceptedCmpTotal + 0.11288759015424 * S_Age
+ 1.42026893919787 * S_Frq + 0.589558227778 * S_Income + -0.30460976693199 * S_Kidhome +
-0.24231306090193 * S_MntFishProducts + 0.04807947910877 * S_MntFruits + -0.18714547156261 *
S_MntGoldProds + -0.11212664938439 * S_MntSweetProducts + 0.10352770685507 *
S_MonthsAsCustomer + -0.68489181638757 * S_NumDealsPurchases + -0.58100230229526 *
S_NumWebVisitsMonth + -0.21690205060235 * S_RFMstat + -0.28659625619875 * S_RMntFrq +
0.66583235171642 * S_Recency + -0.26587787276778 * S_Teenhome ;
2130146   +   H11  = H11  +     0.19521386447058 * AcceptedCmp10
2130147   +          +     0.18607852296373 * AcceptedCmp20  +     0.24009670215096 *
2130148   +        AcceptedCmp30  +     0.16741973117307 * AcceptedCmp40
2130149   +          +     0.16327175443873 * AcceptedCmp50  +    -0.06966105959529 *
2130150   +        Complain0  +    -0.02379070405691 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.19521386447058 * AcceptedCmp10 + 0.18607852296373 *
AcceptedCmp20 + 0.24009670215096 * AcceptedCmp30 + 0.16741973117307 * AcceptedCmp40 +
0.16327175443873 * AcceptedCmp50 + -0.06966105959529 * Complain0 + -0.02379070405691 *
HigherEducationBinary0 ;
2130151   +   H12  = H12  +     0.48980882052858 * AcceptedCmp10
2130152   +          +     0.32550185290445 * AcceptedCmp20  +     0.53021728569974 *
2130153   +        AcceptedCmp30  +    -0.02665247681016 * AcceptedCmp40
2130154   +          +     0.16481850464637 * AcceptedCmp50  +    -0.24885732778394 *
2130155   +        Complain0  +      0.3756770500005 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.48980882052858 * AcceptedCmp10 + 0.32550185290445 *
AcceptedCmp20 + 0.53021728569974 * AcceptedCmp30 + -0.02665247681016 * AcceptedCmp40 +
0.16481850464637 * AcceptedCmp50 + -0.24885732778394 * Complain0 + 0.3756770500005 *
HigherEducationBinary0 ;
2130156   +   H11  = H11  +    -0.04910220307549 * Education2n_Cycle
2130157   +          +    -0.14822683093528 * EducationBasic  +    -0.01437827189793 *
2130158   +        EducationGraduation  +     0.16842374005205 * EducationMaster
2130159   +          +    -0.10287849585992 * Marital_StatusDivorced
2130160   +          +     0.29369580874074 * Marital_StatusMarried
2130161   +          +    -0.22665898953816 * Marital_StatusSingle
2130162   +          +     0.25111199473507 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.04910220307549 * Education2n_Cycle + -0.14822683093528 *
EducationBasic + -0.01437827189793 * EducationGraduation + 0.16842374005205 * EducationMaster
+ -0.10287849585992 * Marital_StatusDivorced + 0.29369580874074 * Marital_StatusMarried +
-0.22665898953816 * Marital_StatusSingle + 0.25111199473507 * Marital_StatusTogether ;
2130163   +   H12  = H12  +     -0.1595289487689 * Education2n_Cycle
2130164   +          +     0.10500818218587 * EducationBasic  +     0.01238201545994 *
2130165   +        EducationGraduation  +    -0.19432567398725 * EducationMaster
2130166   +          +    -0.15073478912147 * Marital_StatusDivorced
2130167   +          +    -0.32890578571742 * Marital_StatusMarried
2130168   +          +     0.41058038801034 * Marital_StatusSingle
2130169   +          +     -0.2663150742816 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.1595289487689 * Education2n_Cycle + 0.10500818218587 *
EducationBasic + 0.01238201545994 * EducationGraduation + -0.19432567398725 * EducationMaster
+ -0.15073478912147 * Marital_StatusDivorced + -0.32890578571742 * Marital_StatusMarried +
0.41058038801034 * Marital_StatusSingle + -0.2663150742816 * Marital_StatusTogether ;
2130170   +   H11  =       -0.01587726781 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.01587726781 + H11 ;
2130171   +   H12  =     1.48684792147138 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 1.48684792147138 + H12 ;
2130172   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
2130173   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
2130174   +END;
MPRINT(EM_DIAGRAM):   END;
2130175   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2130176   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
2130177   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
2130178   +END;
MPRINT(EM_DIAGRAM):   END;
2130179   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2130180   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2130181   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2130182   +
2130183   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2130184   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2130185   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2130186   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2130187   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2130188   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2130189   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2130190   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2130191   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2130192   +end;
MPRINT(EM_DIAGRAM):   end;
2130193   +else do;
MPRINT(EM_DIAGRAM):   else do;
2130194   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2130195   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2130196   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2130197   +   end;
MPRINT(EM_DIAGRAM):   end;
2130198   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2130199   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2130200   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2130201   +   end;
MPRINT(EM_DIAGRAM):   end;
2130202   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2130203   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2130204   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2130205   +   end;
MPRINT(EM_DIAGRAM):   end;
2130206   +end;
MPRINT(EM_DIAGRAM):   end;
2130207   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2130208   +   P_DepVar1  =    -5.32177256661679 * H11  +    -3.04921302676243 * H12 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -5.32177256661679 * H11 + -3.04921302676243 * H12 ;
2130209   +   P_DepVar1  =     1.07591247640807 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.07591247640807 + P_DepVar1 ;
2130210   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2130211   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2130212   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2130213   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2130214   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2130215   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2130216   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2130217   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2130218   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2130219   +END;
MPRINT(EM_DIAGRAM):   END;
2130220   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2130221   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2130222   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2130223   +END;
MPRINT(EM_DIAGRAM):   END;
2130224   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2130225   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2130226   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2130227   +END;
MPRINT(EM_DIAGRAM):   END;
2130228   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2130229   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2130230   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2130231   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2130232   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2130233   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2130234   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2130235   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2130236   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2130237   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2130238   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2130239   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2130240   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2130241   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2130242   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2130243   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2130244   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2130245   +END;
MPRINT(EM_DIAGRAM):   END;
2130246   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2130247   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2130248   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2130249   +drop
2130250   +H11
2130251   +H12
2130252   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 ;
2130253   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2130254   +* Renaming variables for Neural37;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural37;
2130255   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2130256   +* Renaming Posterior variables for Neural37;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural37;
2130257   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2130258   +drop Neural37_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural37_P_DepVar1;
2130259   +Neural37_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural37_P_DepVar1 = P_DepVar1;
2130260   +drop Neural37_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural37_P_DepVar0;
2130261   +Neural37_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural37_P_DepVar0 = P_DepVar0;
2130262   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2130263   +* Renaming _WARN_ variable for Neural37;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural37;
2130264   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2130265   +length Neural37_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural37_WARN_ $4;
2130266   +drop Neural37_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural37_WARN_;
2130267   +Neural37_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural37_WARN_ = _WARN_;
2130268   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2130269   +* Ensmbl23: Average Posteriors of 5 models;
MPRINT(EM_DIAGRAM):   * Ensmbl23: Average Posteriors of 5 models;
2130270   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2130271   +P_DepVar1 = (
2130272   +Neural41_P_DepVar1 +
2130273   +Neural40_P_DepVar1 +
2130274   +Neural39_P_DepVar1 +
2130275   +Neural38_P_DepVar1 +
2130276   +Neural37_P_DepVar1
2130277   +)/5;
MPRINT(EM_DIAGRAM):   P_DepVar1 = ( Neural41_P_DepVar1 + Neural40_P_DepVar1 +
Neural39_P_DepVar1 + Neural38_P_DepVar1 + Neural37_P_DepVar1 )/5;
2130278   +P_DepVar0 = (
2130279   +Neural41_P_DepVar0 +
2130280   +Neural40_P_DepVar0 +
2130281   +Neural39_P_DepVar0 +
2130282   +Neural38_P_DepVar0 +
2130283   +Neural37_P_DepVar0
2130284   +)/5;
MPRINT(EM_DIAGRAM):   P_DepVar0 = ( Neural41_P_DepVar0 + Neural40_P_DepVar0 +
Neural39_P_DepVar0 + Neural38_P_DepVar0 + Neural37_P_DepVar0 )/5;
2130285   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2130286   +* Ensmbl23: Computing Classification Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl23: Computing Classification Vars;
2130287   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2130288   +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set.
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the
         length of a character variable.
2130289   +label I_DepVar = 'Into: DepVar';
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar';
2130290   +length _format $200;
MPRINT(EM_DIAGRAM):   length _format $200;
2130291   +drop _format;
MPRINT(EM_DIAGRAM):   drop _format;
2130292   +_format= ' ';
MPRINT(EM_DIAGRAM):   _format= ' ';
2130293   +_p_= 0;
MPRINT(EM_DIAGRAM):   _p_= 0;
2130294   +drop _p_;
MPRINT(EM_DIAGRAM):   drop _p_;
2130295   +if P_DepVar1 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _p_ then do;
2130296   +_p_= P_DepVar1;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar1;
2130297   +_format= '1';
MPRINT(EM_DIAGRAM):   _format= '1';
2130298   +end;
MPRINT(EM_DIAGRAM):   end;
2130299   +if P_DepVar0 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _p_ then do;
2130300   +_p_= P_DepVar0;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar0;
2130301   +_format= '0';
MPRINT(EM_DIAGRAM):   _format= '0';
2130302   +end;
MPRINT(EM_DIAGRAM):   end;
2130303   +%DMNORMCP(_format,I_DepVar);
MPRINT(DMNORMCP):   I_DepVar=dmnorm(_format,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2130304   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2130305   +* Ensmbl23: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   * Ensmbl23: Producing Unformatted variable;
2130306   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2130307   +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
2130308   +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
2130309   +else
2130310   +if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
2130311   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2130312   +* Ensmbl23: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl23: Computing _WARN_ Variable;
2130313   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2130314   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
2130315   +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
2130316   +_WARN_ = '';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
2130317   +if index(NEURAL41_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
2130317  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL41_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
2130318   +if index(NEURAL41_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
2130318  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL41_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
2130319   +if index(NEURAL41_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
2130319  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL41_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
2130320   +if index(NEURAL41_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
2130320  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL41_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
2130321   +if index(NEURAL40_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
2130321  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL40_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
2130322   +if index(NEURAL40_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
2130322  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL40_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
2130323   +if index(NEURAL40_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
2130323  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL40_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
2130324   +if index(NEURAL40_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
2130324  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL40_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
2130325   +if index(NEURAL39_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
2130325  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL39_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
2130326   +if index(NEURAL39_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
2130326  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL39_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
2130327   +if index(NEURAL39_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
2130327  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL39_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
2130328   +if index(NEURAL39_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
2130328  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL39_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
2130329   +if index(NEURAL38_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
2130329  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL38_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
2130330   +if index(NEURAL38_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
2130330  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL38_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
2130331   +if index(NEURAL38_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
2130331  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL38_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
2130332   +if index(NEURAL38_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
2130332  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL38_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
2130333   +if index(NEURAL37_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
2130333  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL37_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
2130334   +if index(NEURAL37_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
2130334  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL37_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
2130335   +if index(NEURAL37_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
2130335  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL37_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
2130336   +if index(NEURAL37_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
2130336  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL37_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
2130337   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2130338   +* Ensmbl23: Computing Residual Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl23: Computing Residual Vars;
2130339   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2130340   +if
2130341   +F_DepVar NE '1'
2130342   +AND F_DepVar NE '0'
2130343   +then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE '1' AND F_DepVar NE '0' then do;
2130344   +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
2130345   +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
2130346   +end;
MPRINT(EM_DIAGRAM):   end;
2130347   +else do;
MPRINT(EM_DIAGRAM):   else do;
2130348   +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
2130349   +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
2130350   +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
2130351   +WHEN('1') R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN('1') R_DepVar1 = R_DepVar1 +1;
2130352   +WHEN('0') R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN('0') R_DepVar0 = R_DepVar0 +1;
2130353   +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
2130354   +END;
MPRINT(EM_DIAGRAM):   END;
2130355   +END;
MPRINT(EM_DIAGRAM):   END;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2130356    run;
 
NOTE: DATA STEP view saved on file EMWS8.ENSMBL23_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.NEURAL41_VALIDATE.VIEW used (Total process time):
      real time           0.13 seconds
      cpu time            0.12 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.15 seconds
      cpu time            0.15 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2130357    quit;
2130358    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
MPRINT(EM_DIAGRAM):
MPRINT(CALFITSTATSNOMINAL):   data _tmpTrainFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.Ensmbl23_TRAIN end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Train: Target Variable" _NOBS_= "Train: Sum of
Frequencies" _SSE_= "Train: Sum of Squared Errors" _MAX_= "Train: Maximum Absolute Error"
_DIV_ = "Train: Divisor for ASE" _WRONG_= "Train: Number of Wrong Classifications" _DISF_=
"Train: Frequency of Classified Cases" _MISC_= "Train: Misclassification Rate" _ASE_ = "Train:
Average Squared Error" _RASE_ = "Train: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl23_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set _tmpTrainFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):
MPRINT(CALFITSTATSNOMINAL):   data _tmpValidFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.Ensmbl23_VALIDATE end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Valid: Target Variable" _NOBS_= "Valid: Sum of
Frequencies" _SSE_= "Valid: Sum of Squared Errors" _MAX_= "Valid: Maximum Absolute Error"
_DIV_ = "Valid: Divisor for ASE" _WRONG_= "Valid: Number of Wrong Classifications" _DISF_=
"Valid: Frequency of Classified Cases" _MISC_= "Valid: Misclassification Rate" _ASE_ = "Valid:
Average Squared Error" _RASE_ = "Valid: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _tmpdata_(DROP= TARGET);
MPRINT(EM_DIAGRAM):   set _tmpValidFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _tmpdata_;
MPRINT(EM_DIAGRAM):   set _tmpdata_;
MPRINT(EM_DIAGRAM):   rename _ASE_=_VASE_;
MPRINT(EM_DIAGRAM):   rename _DIV_=_VDIV_;
MPRINT(EM_DIAGRAM):   rename _MAX_=_VMAX_;
MPRINT(EM_DIAGRAM):   rename _NOBS_=_VNOBS_;
MPRINT(EM_DIAGRAM):   rename _RASE_=_VRASE_;
MPRINT(EM_DIAGRAM):   rename _SSE_=_VSSE_;
MPRINT(EM_DIAGRAM):   rename _DISF_=_VDISF_;
MPRINT(EM_DIAGRAM):   rename _MISC_=_VMISC_;
MPRINT(EM_DIAGRAM):   rename _WRONG_=_VWRONG_;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl23_EMOUTFIT;
MPRINT(EM_DIAGRAM):   merge EMWS8.Ensmbl23_EMOUTFIT _tmpdata_;
MPRINT(EM_DIAGRAM):   run;
2130418    filename _pref
2130418  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural41\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Neural41\EMPUBLISHSCORE.sas";
2130419    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2130420    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Neural41\EMPUBLISHSCORE.sas.
2130421   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2130422   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2130423   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2130424   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2130425   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2130426   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2130427   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2130428   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2130429   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2130430   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2130431   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2130432   +LENGTH _WARN_ $4
2130433   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
2130434   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2130435   +
2130436   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2130437   +
2130438   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2130439   +
2130440   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2130441   +
2130442   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2130443   +
2130444   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2130445   +
2130446   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2130447   +
2130448   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2130449   +
2130450   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2130451   +
2130452   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2130453   +
2130454   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2130455   +
2130456   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2130457   +
2130458   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2130459   +
2130460   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2130461   +
2130462   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2130463   +
2130464   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2130465   +
2130466   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2130467   +
2130468   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2130469   +
2130470   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2130471   +
2130472   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2130473   +
2130474   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2130475   +
2130476   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2130477   +
2130478   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2130479   +
2130480   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2130481   +
2130482   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2130483   +
2130484   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2130485   +
2130486   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2130487   +
2130488   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2130489   +
2130490   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2130491   +
2130492   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2130493   +
2130494   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2130495   +
2130496   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
2130497   +
2130498   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
2130499   +
2130500   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
2130501   +
2130502   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
2130503   +
2130504   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
2130505   +
2130506   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
2130507   +
2130508   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2130509   +
2130510   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2130511   +
2130512   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2130513   +
2130514   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2130515   +
2130516   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2130517   +
2130518   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2130519   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2130520   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2130521   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2130522   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2130523   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2130524   +end;
MPRINT(EM_DIAGRAM):   end;
2130525   +else do;
MPRINT(EM_DIAGRAM):   else do;
2130526   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2130527   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2130528   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2130529   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2130530   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2130531   +   end;
MPRINT(EM_DIAGRAM):   end;
2130532   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2130533   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2130534   +   end;
MPRINT(EM_DIAGRAM):   end;
2130535   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2130536   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2130537   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2130538   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2130539   +   end;
MPRINT(EM_DIAGRAM):   end;
2130540   +end;
MPRINT(EM_DIAGRAM):   end;
2130541   +
2130542   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2130543   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2130544   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2130545   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2130546   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2130547   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2130548   +end;
MPRINT(EM_DIAGRAM):   end;
2130549   +else do;
MPRINT(EM_DIAGRAM):   else do;
2130550   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2130551   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2130552   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2130553   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2130554   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2130555   +   end;
MPRINT(EM_DIAGRAM):   end;
2130556   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2130557   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2130558   +   end;
MPRINT(EM_DIAGRAM):   end;
2130559   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2130560   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2130561   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2130562   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2130563   +   end;
MPRINT(EM_DIAGRAM):   end;
2130564   +end;
MPRINT(EM_DIAGRAM):   end;
2130565   +
2130566   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2130567   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2130568   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2130569   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2130570   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2130571   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2130572   +end;
MPRINT(EM_DIAGRAM):   end;
2130573   +else do;
MPRINT(EM_DIAGRAM):   else do;
2130574   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2130575   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2130576   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2130577   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2130578   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2130579   +   end;
MPRINT(EM_DIAGRAM):   end;
2130580   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2130581   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2130582   +   end;
MPRINT(EM_DIAGRAM):   end;
2130583   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2130584   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2130585   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2130586   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2130587   +   end;
MPRINT(EM_DIAGRAM):   end;
2130588   +end;
MPRINT(EM_DIAGRAM):   end;
2130589   +
2130590   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2130591   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2130592   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2130593   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2130594   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2130595   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2130596   +end;
MPRINT(EM_DIAGRAM):   end;
2130597   +else do;
MPRINT(EM_DIAGRAM):   else do;
2130598   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2130599   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2130600   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2130601   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2130602   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2130603   +   end;
MPRINT(EM_DIAGRAM):   end;
2130604   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2130605   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2130606   +   end;
MPRINT(EM_DIAGRAM):   end;
2130607   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2130608   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2130609   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2130610   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2130611   +   end;
MPRINT(EM_DIAGRAM):   end;
2130612   +end;
MPRINT(EM_DIAGRAM):   end;
2130613   +
2130614   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2130615   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2130616   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2130617   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2130618   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2130619   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2130620   +end;
MPRINT(EM_DIAGRAM):   end;
2130621   +else do;
MPRINT(EM_DIAGRAM):   else do;
2130622   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2130623   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2130624   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2130625   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2130626   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2130627   +   end;
MPRINT(EM_DIAGRAM):   end;
2130628   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2130629   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2130630   +   end;
MPRINT(EM_DIAGRAM):   end;
2130631   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2130632   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2130633   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2130634   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2130635   +   end;
MPRINT(EM_DIAGRAM):   end;
2130636   +end;
MPRINT(EM_DIAGRAM):   end;
2130637   +
2130638   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2130639   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2130640   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2130641   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2130642   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2130643   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2130644   +end;
MPRINT(EM_DIAGRAM):   end;
2130645   +else do;
MPRINT(EM_DIAGRAM):   else do;
2130646   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2130647   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2130648   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2130649   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2130650   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2130651   +   end;
MPRINT(EM_DIAGRAM):   end;
2130652   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2130653   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2130654   +   end;
MPRINT(EM_DIAGRAM):   end;
2130655   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2130656   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2130657   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2130658   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2130659   +   end;
MPRINT(EM_DIAGRAM):   end;
2130660   +end;
MPRINT(EM_DIAGRAM):   end;
2130661   +
2130662   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2130663   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2130664   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2130665   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2130666   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2130667   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2130668   +end;
MPRINT(EM_DIAGRAM):   end;
2130669   +else do;
MPRINT(EM_DIAGRAM):   else do;
2130670   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2130671   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2130672   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2130673   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2130674   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2130675   +   end;
MPRINT(EM_DIAGRAM):   end;
2130676   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2130677   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2130678   +   end;
MPRINT(EM_DIAGRAM):   end;
2130679   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2130680   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2130681   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2130682   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2130683   +   end;
MPRINT(EM_DIAGRAM):   end;
2130684   +end;
MPRINT(EM_DIAGRAM):   end;
2130685   +
2130686   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2130687   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
2130688   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2130689   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2130690   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2130691   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2130692   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2130693   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2130694   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2130695   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2130696   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2130697   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2130698   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2130699   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2130700   +end;
MPRINT(EM_DIAGRAM):   end;
2130701   +else do;
MPRINT(EM_DIAGRAM):   else do;
2130702   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2130703   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2130704   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2130705   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2130706   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2130707   +   end;
MPRINT(EM_DIAGRAM):   end;
2130708   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2130709   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2130710   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2130711   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2130712   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2130713   +   end;
MPRINT(EM_DIAGRAM):   end;
2130714   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2130715   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2130716   +   end;
MPRINT(EM_DIAGRAM):   end;
2130717   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2130718   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2130719   +   end;
MPRINT(EM_DIAGRAM):   end;
2130720   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2130721   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2130722   +   end;
MPRINT(EM_DIAGRAM):   end;
2130723   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2130724   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2130725   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2130726   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2130727   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2130728   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2130729   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2130730   +   end;
MPRINT(EM_DIAGRAM):   end;
2130731   +end;
MPRINT(EM_DIAGRAM):   end;
2130732   +
2130733   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2130734   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2130735   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
2130736   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2130737   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2130738   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2130739   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2130740   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2130741   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2130742   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2130743   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2130744   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2130745   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2130746   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2130747   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2130748   +end;
MPRINT(EM_DIAGRAM):   end;
2130749   +else do;
MPRINT(EM_DIAGRAM):   else do;
2130750   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2130751   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2130752   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2130753   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2130754   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2130755   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2130756   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2130757   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2130758   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2130759   +         end;
MPRINT(EM_DIAGRAM):   end;
2130760   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2130761   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2130762   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2130763   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2130764   +            end;
MPRINT(EM_DIAGRAM):   end;
2130765   +         end;
MPRINT(EM_DIAGRAM):   end;
2130766   +      end;
MPRINT(EM_DIAGRAM):   end;
2130767   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2130768   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2130769   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2130770   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2130771   +         end;
MPRINT(EM_DIAGRAM):   end;
2130772   +      end;
MPRINT(EM_DIAGRAM):   end;
2130773   +   end;
MPRINT(EM_DIAGRAM):   end;
2130774   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2130775   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2130776   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2130777   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2130778   +      end;
MPRINT(EM_DIAGRAM):   end;
2130779   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2130780   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2130781   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2130782   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2130783   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2130784   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2130785   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2130786   +         end;
MPRINT(EM_DIAGRAM):   end;
2130787   +      end;
MPRINT(EM_DIAGRAM):   end;
2130788   +   end;
MPRINT(EM_DIAGRAM):   end;
2130789   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2130790   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2130791   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2130792   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2130793   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2130794   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2130795   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2130796   +   end;
MPRINT(EM_DIAGRAM):   end;
2130797   +end;
MPRINT(EM_DIAGRAM):   end;
2130798   +
2130799   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2130800   +*** Checking missing input Interval
2130801   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2130802   +
2130803   +IF NMISS(
2130804   +   AcceptedCmpTotal ,
2130805   +   Age ,
2130806   +   Frq ,
2130807   +   Income ,
2130808   +   Kidhome ,
2130809   +   MntFishProducts ,
2130810   +   MntFruits ,
2130811   +   MntGoldProds ,
2130812   +   MntSweetProducts ,
2130813   +   MonthsAsCustomer ,
2130814   +   NumDealsPurchases ,
2130815   +   NumWebVisitsMonth ,
2130816   +   RFMstat ,
2130817   +   RMntFrq ,
2130818   +   Recency ,
2130819   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome ,
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer ,
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
2130820   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2130821   +
2130822   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2130823   +END;
MPRINT(EM_DIAGRAM):   END;
2130824   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2130825   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
2130826   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2130827   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2130828   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2130829   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2130830   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2130831   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2130832   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2130833   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2130834   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2130835   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2130836   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2130837   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2130838   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2130839   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2130840   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2130841   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2130842   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 *
MonthsAsCustomer ;
2130843   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2130844   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2130845   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2130846   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2130847   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2130848   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2130849   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2130850   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2130851   +END;
MPRINT(EM_DIAGRAM):   END;
2130852   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2130853   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2130854   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2130855   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2130856   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2130857   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2130858   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2130859   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2130860   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2130861   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2130862   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2130863   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2130864   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2130865   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2130866   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2130867   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2130868   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2130869   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2130870   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2130871   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2130872   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
2130873   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2130874   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2130875   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2130876   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2130877   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2130878   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 *
MonthsAsCustomer ;
2130879   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2130880   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2130881   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2130882   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2130883   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2130884   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2130885   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2130886   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2130887   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2130888   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2130889   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2130890   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2130891   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2130892   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2130893   +END;
MPRINT(EM_DIAGRAM):   END;
2130894   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2130895   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
2130896   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2130897   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2130898   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
2130899   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2130900   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2130901   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
2130902   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2130903   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2130904   +   H11  =     0.00111540513846 * S_AcceptedCmpTotal  +    -0.12971131901586 *
2130905   +        S_Age  +    -0.18520628994151 * S_Frq  +     0.00222884615859 *
2130906   +        S_Income  +    -0.52351504306035 * S_Kidhome
2130907   +          +     0.08140325105151 * S_MntFishProducts
2130908   +          +    -0.04386492140302 * S_MntFruits  +     0.05295232764925 *
2130909   +        S_MntGoldProds  +    -0.39891652227681 * S_MntSweetProducts
2130910   +          +    -0.43676985181672 * S_MonthsAsCustomer
2130911   +          +    -0.20260708598657 * S_NumDealsPurchases
2130912   +          +     0.06428019964102 * S_NumWebVisitsMonth
2130913   +          +     0.13467234938466 * S_RFMstat  +    -0.29483834428412 *
2130914   +        S_RMntFrq  +    -0.68447200324777 * S_Recency
2130915   +          +    -0.29437834033294 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.00111540513846 * S_AcceptedCmpTotal + -0.12971131901586 * S_Age
+ -0.18520628994151 * S_Frq + 0.00222884615859 * S_Income + -0.52351504306035 * S_Kidhome +
0.08140325105151 * S_MntFishProducts + -0.04386492140302 * S_MntFruits + 0.05295232764925 *
S_MntGoldProds + -0.39891652227681 * S_MntSweetProducts + -0.43676985181672 *
S_MonthsAsCustomer + -0.20260708598657 * S_NumDealsPurchases + 0.06428019964102 *
S_NumWebVisitsMonth + 0.13467234938466 * S_RFMstat + -0.29483834428412 * S_RMntFrq +
-0.68447200324777 * S_Recency + -0.29437834033294 * S_Teenhome ;
2130916   +   H12  =     0.39213879457216 * S_AcceptedCmpTotal  +    -0.01440353989436 *
2130917   +        S_Age  +     0.23865918577825 * S_Frq  +      0.6365049428914 *
2130918   +        S_Income  +     0.91112653634925 * S_Kidhome
2130919   +          +     0.26539332041133 * S_MntFishProducts
2130920   +          +    -0.31480262631724 * S_MntFruits  +     0.14786958565778 *
2130921   +        S_MntGoldProds  +      0.2400589361571 * S_MntSweetProducts
2130922   +          +    -0.12141919451173 * S_MonthsAsCustomer
2130923   +          +     0.66105669553858 * S_NumDealsPurchases
2130924   +          +     0.35126523805992 * S_NumWebVisitsMonth
2130925   +          +     0.15877473113544 * S_RFMstat  +     0.04256559397745 *
2130926   +        S_RMntFrq  +    -0.82322754979428 * S_Recency
2130927   +          +    -0.38093159094381 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.39213879457216 * S_AcceptedCmpTotal + -0.01440353989436 * S_Age
+ 0.23865918577825 * S_Frq + 0.6365049428914 * S_Income + 0.91112653634925 * S_Kidhome +
0.26539332041133 * S_MntFishProducts + -0.31480262631724 * S_MntFruits + 0.14786958565778 *
S_MntGoldProds + 0.2400589361571 * S_MntSweetProducts + -0.12141919451173 * S_MonthsAsCustomer
+ 0.66105669553858 * S_NumDealsPurchases + 0.35126523805992 * S_NumWebVisitsMonth +
0.15877473113544 * S_RFMstat + 0.04256559397745 * S_RMntFrq + -0.82322754979428 * S_Recency +
-0.38093159094381 * S_Teenhome ;
2130928   +   H13  =     0.01698497071572 * S_AcceptedCmpTotal  +    -0.18194797866377 *
2130929   +        S_Age  +    -0.38541123385894 * S_Frq  +    -0.85948176553863 *
2130930   +        S_Income  +     0.62421717479738 * S_Kidhome
2130931   +          +     0.15545639003856 * S_MntFishProducts
2130932   +          +    -0.04951281670167 * S_MntFruits  +    -0.02786799666153 *
2130933   +        S_MntGoldProds  +     0.25863651263316 * S_MntSweetProducts
2130934   +          +     -0.2202976559774 * S_MonthsAsCustomer
2130935   +          +      0.2989117555747 * S_NumDealsPurchases
2130936   +          +    -0.14751065039865 * S_NumWebVisitsMonth
2130937   +          +    -0.02597231393441 * S_RFMstat  +    -0.39431255412396 *
2130938   +        S_RMntFrq  +     0.37177599027897 * S_Recency
2130939   +          +     0.58385986175941 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 0.01698497071572 * S_AcceptedCmpTotal + -0.18194797866377 * S_Age
+ -0.38541123385894 * S_Frq + -0.85948176553863 * S_Income + 0.62421717479738 * S_Kidhome +
0.15545639003856 * S_MntFishProducts + -0.04951281670167 * S_MntFruits + -0.02786799666153 *
S_MntGoldProds + 0.25863651263316 * S_MntSweetProducts + -0.2202976559774 * S_MonthsAsCustomer
+ 0.2989117555747 * S_NumDealsPurchases + -0.14751065039865 * S_NumWebVisitsMonth +
-0.02597231393441 * S_RFMstat + -0.39431255412396 * S_RMntFrq + 0.37177599027897 * S_Recency +
0.58385986175941 * S_Teenhome ;
2130940   +   H14  =    -0.23472826464263 * S_AcceptedCmpTotal  +      0.2784288410174 *
2130941   +        S_Age  +     0.88464843816774 * S_Frq  +     0.17112519951794 *
2130942   +        S_Income  +    -0.00640590904736 * S_Kidhome
2130943   +          +    -0.26951923409269 * S_MntFishProducts
2130944   +          +     0.32894249282173 * S_MntFruits  +     0.07344906774263 *
2130945   +        S_MntGoldProds  +    -0.34990462553578 * S_MntSweetProducts
2130946   +          +    -0.03084445162862 * S_MonthsAsCustomer
2130947   +          +    -0.63431809432586 * S_NumDealsPurchases
2130948   +          +     -0.8623000996519 * S_NumWebVisitsMonth
2130949   +          +    -0.16320962913093 * S_RFMstat  +     -0.0912884569806 *
2130950   +        S_RMntFrq  +     0.62097299931152 * S_Recency
2130951   +          +    -0.21174542653958 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = -0.23472826464263 * S_AcceptedCmpTotal + 0.2784288410174 * S_Age +
0.88464843816774 * S_Frq + 0.17112519951794 * S_Income + -0.00640590904736 * S_Kidhome +
-0.26951923409269 * S_MntFishProducts + 0.32894249282173 * S_MntFruits + 0.07344906774263 *
S_MntGoldProds + -0.34990462553578 * S_MntSweetProducts + -0.03084445162862 *
S_MonthsAsCustomer + -0.63431809432586 * S_NumDealsPurchases + -0.8623000996519 *
S_NumWebVisitsMonth + -0.16320962913093 * S_RFMstat + -0.0912884569806 * S_RMntFrq +
0.62097299931152 * S_Recency + -0.21174542653958 * S_Teenhome ;
2130952   +   H15  =     0.08498061851068 * S_AcceptedCmpTotal  +    -0.03874599391049 *
2130953   +        S_Age  +     0.26071229941538 * S_Frq  +      0.3037475539849 *
2130954   +        S_Income  +    -0.24194113790018 * S_Kidhome
2130955   +          +    -0.19083222216875 * S_MntFishProducts
2130956   +          +     -0.2295473697124 * S_MntFruits  +    -0.34933034439567 *
2130957   +        S_MntGoldProds  +    -0.02693984703623 * S_MntSweetProducts
2130958   +          +     0.04053963129428 * S_MonthsAsCustomer
2130959   +          +    -0.43392648307969 * S_NumDealsPurchases
2130960   +          +    -0.27875696570809 * S_NumWebVisitsMonth
2130961   +          +     0.15140901901886 * S_RFMstat  +     0.24456818451854 *
2130962   +        S_RMntFrq  +     0.50440740103916 * S_Recency
2130963   +          +    -0.22578843225375 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = 0.08498061851068 * S_AcceptedCmpTotal + -0.03874599391049 * S_Age
+ 0.26071229941538 * S_Frq + 0.3037475539849 * S_Income + -0.24194113790018 * S_Kidhome +
-0.19083222216875 * S_MntFishProducts + -0.2295473697124 * S_MntFruits + -0.34933034439567 *
S_MntGoldProds + -0.02693984703623 * S_MntSweetProducts + 0.04053963129428 *
S_MonthsAsCustomer + -0.43392648307969 * S_NumDealsPurchases + -0.27875696570809 *
S_NumWebVisitsMonth + 0.15140901901886 * S_RFMstat + 0.24456818451854 * S_RMntFrq +
0.50440740103916 * S_Recency + -0.22578843225375 * S_Teenhome ;
2130964   +   H16  =     0.04456496773686 * S_AcceptedCmpTotal  +    -0.27559491111701 *
2130965   +        S_Age  +    -0.17508336034033 * S_Frq  +     0.53227247274911 *
2130966   +        S_Income  +    -0.25899044305101 * S_Kidhome
2130967   +          +    -0.04059351293128 * S_MntFishProducts
2130968   +          +     -0.0638851827999 * S_MntFruits  +    -0.00679153562123 *
2130969   +        S_MntGoldProds  +    -0.03056442128246 * S_MntSweetProducts
2130970   +          +    -0.00021820216919 * S_MonthsAsCustomer
2130971   +          +     0.26994179879371 * S_NumDealsPurchases
2130972   +          +     0.22503342875269 * S_NumWebVisitsMonth
2130973   +          +      0.0842978170878 * S_RFMstat  +     0.10196131382306 *
2130974   +        S_RMntFrq  +    -0.89639874371569 * S_Recency
2130975   +          +     -0.2664087147783 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = 0.04456496773686 * S_AcceptedCmpTotal + -0.27559491111701 * S_Age
+ -0.17508336034033 * S_Frq + 0.53227247274911 * S_Income + -0.25899044305101 * S_Kidhome +
-0.04059351293128 * S_MntFishProducts + -0.0638851827999 * S_MntFruits + -0.00679153562123 *
S_MntGoldProds + -0.03056442128246 * S_MntSweetProducts + -0.00021820216919 *
S_MonthsAsCustomer + 0.26994179879371 * S_NumDealsPurchases + 0.22503342875269 *
S_NumWebVisitsMonth + 0.0842978170878 * S_RFMstat + 0.10196131382306 * S_RMntFrq +
-0.89639874371569 * S_Recency + -0.2664087147783 * S_Teenhome ;
2130976   +   H11  = H11  +     0.24041745169534 * AcceptedCmp10
2130977   +          +     0.02544174782123 * AcceptedCmp20  +     0.05985429287388 *
2130978   +        AcceptedCmp30  +    -0.43610564100855 * AcceptedCmp40
2130979   +          +     -0.0033678658149 * AcceptedCmp50  +      0.4302437669653 *
2130980   +        Complain0  +     0.23399064979433 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.24041745169534 * AcceptedCmp10 + 0.02544174782123 *
AcceptedCmp20 + 0.05985429287388 * AcceptedCmp30 + -0.43610564100855 * AcceptedCmp40 +
-0.0033678658149 * AcceptedCmp50 + 0.4302437669653 * Complain0 + 0.23399064979433 *
HigherEducationBinary0 ;
2130981   +   H12  = H12  +     0.04113908603951 * AcceptedCmp10
2130982   +          +    -0.01093566327356 * AcceptedCmp20  +    -0.29048302676994 *
2130983   +        AcceptedCmp30  +     0.58809451838917 * AcceptedCmp40
2130984   +          +    -0.40651652706331 * AcceptedCmp50  +     0.59503559231942 *
2130985   +        Complain0  +    -0.31162206924656 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.04113908603951 * AcceptedCmp10 + -0.01093566327356 *
AcceptedCmp20 + -0.29048302676994 * AcceptedCmp30 + 0.58809451838917 * AcceptedCmp40 +
-0.40651652706331 * AcceptedCmp50 + 0.59503559231942 * Complain0 + -0.31162206924656 *
HigherEducationBinary0 ;
2130986   +   H13  = H13  +     0.49980132733088 * AcceptedCmp10
2130987   +          +     0.42591357833168 * AcceptedCmp20  +     0.29341561692077 *
2130988   +        AcceptedCmp30  +      0.5385511712513 * AcceptedCmp40
2130989   +          +     0.11385275317979 * AcceptedCmp50  +     0.11081932391124 *
2130990   +        Complain0  +    -0.44840720707687 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.49980132733088 * AcceptedCmp10 + 0.42591357833168 *
AcceptedCmp20 + 0.29341561692077 * AcceptedCmp30 + 0.5385511712513 * AcceptedCmp40 +
0.11385275317979 * AcceptedCmp50 + 0.11081932391124 * Complain0 + -0.44840720707687 *
HigherEducationBinary0 ;
2130991   +   H14  = H14  +     0.70002770930064 * AcceptedCmp10
2130992   +          +     0.03624451131553 * AcceptedCmp20  +     0.75509304132809 *
2130993   +        AcceptedCmp30  +     0.10669150880089 * AcceptedCmp40
2130994   +          +     0.40957450849357 * AcceptedCmp50  +     0.19133447423047 *
2130995   +        Complain0  +      0.0901288611482 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.70002770930064 * AcceptedCmp10 + 0.03624451131553 *
AcceptedCmp20 + 0.75509304132809 * AcceptedCmp30 + 0.10669150880089 * AcceptedCmp40 +
0.40957450849357 * AcceptedCmp50 + 0.19133447423047 * Complain0 + 0.0901288611482 *
HigherEducationBinary0 ;
2130996   +   H15  = H15  +     0.30472902210864 * AcceptedCmp10
2130997   +          +     -0.0160831175686 * AcceptedCmp20  +     0.09226996454789 *
2130998   +        AcceptedCmp30  +     0.03526648068533 * AcceptedCmp40
2130999   +          +      0.1969983492734 * AcceptedCmp50  +    -0.32330512066062 *
2131000   +        Complain0  +     -0.2085030313253 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.30472902210864 * AcceptedCmp10 + -0.0160831175686 *
AcceptedCmp20 + 0.09226996454789 * AcceptedCmp30 + 0.03526648068533 * AcceptedCmp40 +
0.1969983492734 * AcceptedCmp50 + -0.32330512066062 * Complain0 + -0.2085030313253 *
HigherEducationBinary0 ;
2131001   +   H16  = H16  +    -0.19560821735212 * AcceptedCmp10
2131002   +          +     0.01476856325219 * AcceptedCmp20  +    -0.28505549110679 *
2131003   +        AcceptedCmp30  +    -0.13003702218159 * AcceptedCmp40
2131004   +          +     -0.0444894569881 * AcceptedCmp50  +    -0.19927466163886 *
2131005   +        Complain0  +      0.1418696986192 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + -0.19560821735212 * AcceptedCmp10 + 0.01476856325219 *
AcceptedCmp20 + -0.28505549110679 * AcceptedCmp30 + -0.13003702218159 * AcceptedCmp40 +
-0.0444894569881 * AcceptedCmp50 + -0.19927466163886 * Complain0 + 0.1418696986192 *
HigherEducationBinary0 ;
2131006   +   H11  = H11  +     0.05142300573614 * Education2n_Cycle
2131007   +          +    -0.08044262556314 * EducationBasic  +    -0.01420547642374 *
2131008   +        EducationGraduation  +     0.01590498605031 * EducationMaster
2131009   +          +     0.12486109091842 * Marital_StatusDivorced
2131010   +          +    -0.02537427599041 * Marital_StatusMarried
2131011   +          +     0.04139233887566 * Marital_StatusSingle
2131012   +          +     0.01979901000533 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.05142300573614 * Education2n_Cycle + -0.08044262556314 *
EducationBasic + -0.01420547642374 * EducationGraduation + 0.01590498605031 * EducationMaster
+ 0.12486109091842 * Marital_StatusDivorced + -0.02537427599041 * Marital_StatusMarried +
0.04139233887566 * Marital_StatusSingle + 0.01979901000533 * Marital_StatusTogether ;
2131013   +   H12  = H12  +    -0.18925528201163 * Education2n_Cycle
2131014   +          +     0.13542558539857 * EducationBasic  +    -0.00318989932343 *
2131015   +        EducationGraduation  +     0.00556061144517 * EducationMaster
2131016   +          +      0.1922952868897 * Marital_StatusDivorced
2131017   +          +    -0.15043025991045 * Marital_StatusMarried
2131018   +          +     0.24380549252268 * Marital_StatusSingle
2131019   +          +      0.0914480494515 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.18925528201163 * Education2n_Cycle + 0.13542558539857 *
EducationBasic + -0.00318989932343 * EducationGraduation + 0.00556061144517 * EducationMaster
+ 0.1922952868897 * Marital_StatusDivorced + -0.15043025991045 * Marital_StatusMarried +
0.24380549252268 * Marital_StatusSingle + 0.0914480494515 * Marital_StatusTogether ;
2131020   +   H13  = H13  +     0.01984994959794 * Education2n_Cycle
2131021   +          +     0.05848951032368 * EducationBasic  +    -0.44607095594807 *
2131022   +        EducationGraduation  +     0.17433329582337 * EducationMaster
2131023   +          +    -0.19065058903153 * Marital_StatusDivorced
2131024   +          +     0.75653054479625 * Marital_StatusMarried
2131025   +          +    -0.66014855183925 * Marital_StatusSingle
2131026   +          +     0.57813394995752 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.01984994959794 * Education2n_Cycle + 0.05848951032368 *
EducationBasic + -0.44607095594807 * EducationGraduation + 0.17433329582337 * EducationMaster
+ -0.19065058903153 * Marital_StatusDivorced + 0.75653054479625 * Marital_StatusMarried +
-0.66014855183925 * Marital_StatusSingle + 0.57813394995752 * Marital_StatusTogether ;
2131027   +   H14  = H14  +     0.18480056670996 * Education2n_Cycle
2131028   +          +    -0.06350174929241 * EducationBasic  +    -0.27462372414402 *
2131029   +        EducationGraduation  +    -0.30561816795813 * EducationMaster
2131030   +          +    -0.18567969656169 * Marital_StatusDivorced
2131031   +          +    -0.14971561557485 * Marital_StatusMarried
2131032   +          +     0.15498901175156 * Marital_StatusSingle
2131033   +          +    -0.03455782443417 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.18480056670996 * Education2n_Cycle + -0.06350174929241 *
EducationBasic + -0.27462372414402 * EducationGraduation + -0.30561816795813 * EducationMaster
+ -0.18567969656169 * Marital_StatusDivorced + -0.14971561557485 * Marital_StatusMarried +
0.15498901175156 * Marital_StatusSingle + -0.03455782443417 * Marital_StatusTogether ;
2131034   +   H15  = H15  +    -0.12232381400482 * Education2n_Cycle
2131035   +          +     0.20473341276352 * EducationBasic  +      0.0491931637595 *
2131036   +        EducationGraduation  +    -0.21833425438085 * EducationMaster
2131037   +          +    -0.10111355311896 * Marital_StatusDivorced
2131038   +          +     0.14131454959607 * Marital_StatusMarried
2131039   +          +    -0.18391621678023 * Marital_StatusSingle
2131040   +          +     0.23175084120404 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.12232381400482 * Education2n_Cycle + 0.20473341276352 *
EducationBasic + 0.0491931637595 * EducationGraduation + -0.21833425438085 * EducationMaster +
-0.10111355311896 * Marital_StatusDivorced + 0.14131454959607 * Marital_StatusMarried +
-0.18391621678023 * Marital_StatusSingle + 0.23175084120404 * Marital_StatusTogether ;
2131041   +   H16  = H16  +     0.03069778538103 * Education2n_Cycle
2131042   +          +    -0.45911946295888 * EducationBasic  +    -0.07922750315693 *
2131043   +        EducationGraduation  +    -0.19964669060264 * EducationMaster
2131044   +          +     0.04572591415975 * Marital_StatusDivorced
2131045   +          +    -0.38535549815638 * Marital_StatusMarried
2131046   +          +     0.30341063880196 * Marital_StatusSingle
2131047   +          +    -0.28342984798633 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.03069778538103 * Education2n_Cycle + -0.45911946295888 *
EducationBasic + -0.07922750315693 * EducationGraduation + -0.19964669060264 * EducationMaster
+ 0.04572591415975 * Marital_StatusDivorced + -0.38535549815638 * Marital_StatusMarried +
0.30341063880196 * Marital_StatusSingle + -0.28342984798633 * Marital_StatusTogether ;
2131048   +   H11  =     1.39441509752238 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 1.39441509752238 + H11 ;
2131049   +   H12  =     0.19328666321992 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.19328666321992 + H12 ;
2131050   +   H13  =     0.55771988222719 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 0.55771988222719 + H13 ;
2131051   +   H14  =     0.27935543639097 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.27935543639097 + H14 ;
2131052   +   H15  =     1.08911808634908 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 1.08911808634908 + H15 ;
2131053   +   H16  =    -0.22580376250744 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -0.22580376250744 + H16 ;
2131054   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
2131055   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
2131056   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
2131057   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
2131058   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
2131059   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
2131060   +END;
MPRINT(EM_DIAGRAM):   END;
2131061   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2131062   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
2131063   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
2131064   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
2131065   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
2131066   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
2131067   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
2131068   +END;
MPRINT(EM_DIAGRAM):   END;
2131069   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2131070   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2131071   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2131072   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2131073   +   P_DepVar1  =     1.18423178138253 * H11  +     2.38126931545785 * H12
2131074   +          +    -2.42139186007404 * H13  +      -2.187729844004 * H14
2131075   +          +    -0.38226616805204 * H15  +      1.1710139734699 * H16 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.18423178138253 * H11 + 2.38126931545785 * H12 +
-2.42139186007404 * H13 + -2.187729844004 * H14 + -0.38226616805204 * H15 + 1.1710139734699 *
H16 ;
2131076   +   P_DepVar1  =    -1.69958173763243 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.69958173763243 + P_DepVar1 ;
2131077   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2131078   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2131079   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2131080   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2131081   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2131082   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2131083   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2131084   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2131085   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2131086   +END;
MPRINT(EM_DIAGRAM):   END;
2131087   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2131088   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2131089   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2131090   +END;
MPRINT(EM_DIAGRAM):   END;
2131091   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2131092   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2131093   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2131094   +END;
MPRINT(EM_DIAGRAM):   END;
2131095   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2131096   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2131097   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2131098   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2131099   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2131100   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2131101   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2131102   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2131103   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2131104   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2131105   +END;
MPRINT(EM_DIAGRAM):   END;
2131106   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2131107   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2131108   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2131109   +drop
2131110   +H11
2131111   +H12
2131112   +H13
2131113   +H14
2131114   +H15
2131115   +H16
2131116   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 ;
2131117   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2131118    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2131119    quit;
2131120    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2131121    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2131122    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2131123    retain ID 2 Node "Neural41";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural41";
2131124    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2131125    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2183 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2183 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2131126    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2131127    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2131128    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2183 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2183 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2131129    proc sort data=EMWS8.Neural41_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural41_variableset out=_temp2(keep=NAME CREATOR);
2131130    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2131131    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.NEURAL41_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2131132    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2131133    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2131134    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2131135    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2131136    proc contents data=EMWS8.Neural41_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural41_train out=_meta(keep=NAME) noprint;
2131137    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
2131138    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2131139    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2131140    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2131141    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2131142    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2131143    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2131144    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2131145    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2131146    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2131146  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1087 rows and 5 columns.
 
2131147    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2131148    proc append base=EMWS8.Ensmbl23_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl23_FCMP data=_tempx;
2131149    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL23_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1087 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL23_FCMP has 1087 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2131150    filename _pref
2131150  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
2131151    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2131152    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
2131153   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2131154   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
2131155   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2131156   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
2131157   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
2131158   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2131159    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2131160    quit;
2131161    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2131162    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2131163    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2131164    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
2131165    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2131166    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2131167    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2131168    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2131169    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2131170    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
2131171    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2131172    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2131173    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2131174    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2131175    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2131176    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2131177    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
2131178    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
2131179    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2131180    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2131181    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2131182    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2131183    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2131184    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2131185    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2131186    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2131187    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2131187  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
2131188    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2131189    proc append base=EMWS8.Ensmbl23_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl23_FCMP data=_tempx;
2131190    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL23_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL23_FCMP has 1091 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2131191    filename _pref
2131191  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
2131192    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2131193    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
2131194   +
2131195   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
2131196   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
2131196  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
2131197   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
2131198   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
2131199   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
2131200   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
2131201   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2131202    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2131203    quit;
2131204    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2131205    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2131206    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2131207    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
2131208    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2131209    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2131210    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2131211    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2131212    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2131213    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
2131214    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2131215    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2131216    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2131217    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2131218    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2131219    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2131220    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
2131221    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2131222    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2131223    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2131224    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2131225    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2131226    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2131227    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2131228    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2131229    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2131230    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2131230  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
2131231    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2131232    proc append base=EMWS8.Ensmbl23_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl23_FCMP data=_tempx;
2131233    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL23_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL23_FCMP has 1130 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2131234    filename _pref
2131234  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
2131235    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2131236    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
2131237   +
2131238   +
2131239   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
2131240   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
2131241   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
2131242   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
2131243   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
2131244   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2131245   +
2131246   +
2131247   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
2131248   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
2131249   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
2131250   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
2131251   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
2131252   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2131253   +
2131254   +
2131255   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
2131256   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
2131257   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
2131258   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
2131259   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
2131260   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2131261   +
2131262   +
2131263   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
2131264   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
2131265   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
2131266   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
2131267   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
2131268   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2131269   +
2131270   +
2131271   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
2131272   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
2131273   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
2131274   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
2131275   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
2131276   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2131277   +
2131278   +
2131279   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
2131280   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
2131281   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
2131282   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
2131283   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
2131284   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2131285   +
2131286   +
2131287   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
2131288   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
2131289   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
2131290   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
2131291   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
2131292   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2131293   +
2131294   +
2131295   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
2131296   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
2131297   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
2131298   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
2131299   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
2131300   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2131301   +if
2131302   +_FILTERNORM1 not in ( '.')
2131303   + and
2131304   +_FILTERNORM2 not in ( '.')
2131305   + and
2131306   +_FILTERNORM3 not in ( '.')
2131307   + and
2131308   +_FILTERNORM4 not in ( '.')
2131309   + and
2131310   +_FILTERNORM5 not in ( '.')
2131311   + and
2131312   +_FILTERNORM6 not in ( '.')
2131313   + and
2131314   +_FILTERNORM7 not in ( ' ')
2131315   + and
2131316   +_FILTERNORM8 not in ( ' ')
2131317   +and
2131318   +( Dt_Customer ne .)
2131319   +and ( Income ne . and (Income<=107000))
2131320   +and ( Kidhome ne .)
2131321   +and ( MntFishProducts ne .)
2131322   +and ( MntFruits ne .)
2131323   +and ( MntGoldProds ne .)
2131324   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
2131325   +and ( MntSweetProducts ne .)
2131326   +and ( MntWines ne .)
2131327   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
2131328   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
2131329   +and ( NumStorePurchases ne .)
2131330   +and ( NumWebPurchases ne .)
2131331   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
2131332   +and ( Recency ne .)
2131333   +and ( Teenhome ne .)
2131334   +and ( Year_Birth ne .)
2131335   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
2131336   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
2131337   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
2131338   +end;
MPRINT(EM_DIAGRAM):   end;
2131339   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
2131340   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2131341    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2131342    quit;
2131343    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2131344    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2131345    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2131346    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
2131347    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2131348    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2131349    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2131350    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2131351    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2131352    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
2131353    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2131354    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2131355    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2131356    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2131357    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2131358    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2131359    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
2131360    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
2131361    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2131362    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2131363    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2131364    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2131365    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2131366    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2131367    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2131368    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2131369    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2131369  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
2131370    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2131371    proc append base=EMWS8.Ensmbl23_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl23_FCMP data=_tempx;
2131372    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL23_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL23_FCMP has 1196 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2131373    %macro varDept(fcmpdata=,id=);
2131374    %global nobs&id scoreFlag&id;
2131375    %let scoreFlag&id = 0;
2131376    %if &id=1 or ^&fcmpStart %then %do;
2131377    proc sort data=&fcmpdata out=_temp&id nodupkey;
2131378    by NAME;
2131379    where id=&id and LHS in( %let j=1;
2131380    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
2131381    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
2131382    "&var" %let j = %eval(&j+1);
2131383    %end;
2131384    );
2131385    run;
2131386    %let dsid = %sysfunc(open(_temp&id));
2131387    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2131388    %let dsid = %sysfunc(close(&dsid));
2131389    %if &&nobs&id %then %do;
2131390    %let scoreFlag&id = 1;
2131391    %let fcmpStart = 1;
2131392    %end;
2131393    %else %let fcmpStart = 0;
2131394    %end;
2131395    %else %do;
2131396    proc sort data=&fcmpdata out=_tempid;
2131397    where id=&id;
2131398    by LHS;
2131399    run;
2131400    %let dsid = %sysfunc(open(_tempid));
2131401    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2131402    %let dsid = %sysfunc(close(&dsid));
2131403    %if ^&&nobs&id %then %do;
2131404    proc datasets lib=work nolist;
2131405    delete _tempid;
2131406    run;
2131407    quit;
2131408    %end;
2131409    %else %do;
2131410    data _tempAll;
2131411    set %let j=%eval(&id-1);
2131412    %do x=1 %to &j;
2131413    %if &&nobs&x %then %do;
2131414    _temp&x %end;
2131415    %end;
2131416    ;
2131417    run;
2131418    proc sql;
2131419    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
2131419  ! work._tempid p2 where p.name=p2.lhs;
2131420    quit;
2131421    data _temp&id;
2131422    set _temp&id;
2131423    where LHS ne '' and NAME ne '' and Node ne '';
2131424    run;
2131425    proc datasets lib=work nolist;
2131426    delete _tempAll;
2131427    run;
2131428    %let dsid = %sysfunc(open(_temp&id));
2131429    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2131430    %let dsid = %sysfunc(close(&dsid));
2131431    %if ^&&nobs&id %then %do;
2131432    proc datasets lib=work nolist;
2131433    delete _temp&id;
2131434    run;
2131435    quit;
2131436    %end;
2131437    %else %do;
2131438    %let scoreFlag&id = 1;
2131439    data _temp&id;
2131440    set _temp&id;
2131441    where LHS ne NAME and node ne '';
2131442    run;
2131443    %let dsid = %sysfunc(open(_temp&id));
2131444    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2131445    %let dsid = %sysfunc(close(&dsid));
2131446    %if ^&&nobs&id %then %do;
2131447    proc datasets lib=work nolist;
2131448    delete _temp&id;
2131449    run;
2131450    quit;
2131451    %end;
2131452    %else %do;
2131453    proc sort data=_temp&id nodupkey;
2131454    by LHS NAME;
2131455    run;
2131456    %end;
2131457    %end;
2131458    %end;
2131459    %end;
2131460    %mend varDept;
2131461    %macro optCode(outdata=fcmpdata);
2131462    %global fcmpStart;
2131463    %let fcmpStart = 0;
2131464    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
2131465    %let NumNodes=9;
2131466    %do k=1 %to &NumNodes;
2131467    %vardept(fcmpdata=&outdata, id=&k);
2131468    %end;
2131469    %mend optCode;
2131470    %optcode(outData=EMWS8.Ensmbl23_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl23_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL23_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl23_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 106 observations read from the data set EMWS8.ENSMBL23_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 79 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 27 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl23_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL23_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl23_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL23_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl23_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL23_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 27 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 2 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl23_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL23_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 29 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 33 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl23_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL23_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: There were 33 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 62 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.06 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl23_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL23_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl23_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL23_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
2131471    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
2131472    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
2131473    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
2131474    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2131475    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
2131476    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
2131477    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
2131478    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2131479    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2131480    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
2131480  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 2 rows and 3 columns.
 
2131481    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
2131482    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
2131483    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
2131484    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 2 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 2 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2131485    filename _pref
2131485  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural40\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Neural40\EMPUBLISHSCORE.sas";
2131486    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2131487    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Neural40\EMPUBLISHSCORE.sas.
2131488   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2131489   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2131490   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2131491   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2131492   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2131493   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2131494   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2131495   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2131496   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2131497   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2131498   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2131499   +LENGTH _WARN_ $4
2131500   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
2131501   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2131502   +
2131503   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2131504   +
2131505   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2131506   +
2131507   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2131508   +
2131509   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2131510   +
2131511   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2131512   +
2131513   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2131514   +
2131515   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2131516   +
2131517   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2131518   +
2131519   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2131520   +
2131521   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2131522   +
2131523   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2131524   +
2131525   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2131526   +
2131527   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2131528   +
2131529   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2131530   +
2131531   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2131532   +
2131533   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2131534   +
2131535   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2131536   +
2131537   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2131538   +
2131539   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2131540   +
2131541   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2131542   +
2131543   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2131544   +
2131545   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2131546   +
2131547   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2131548   +
2131549   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2131550   +
2131551   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2131552   +
2131553   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2131554   +
2131555   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2131556   +
2131557   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2131558   +
2131559   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2131560   +
2131561   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2131562   +
2131563   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
2131564   +
2131565   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
2131566   +
2131567   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
2131568   +
2131569   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
2131570   +
2131571   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
2131572   +
2131573   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2131574   +
2131575   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2131576   +
2131577   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2131578   +
2131579   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2131580   +
2131581   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2131582   +
2131583   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2131584   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2131585   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2131586   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2131587   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2131588   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2131589   +end;
MPRINT(EM_DIAGRAM):   end;
2131590   +else do;
MPRINT(EM_DIAGRAM):   else do;
2131591   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2131592   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2131593   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2131594   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2131595   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2131596   +   end;
MPRINT(EM_DIAGRAM):   end;
2131597   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2131598   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2131599   +   end;
MPRINT(EM_DIAGRAM):   end;
2131600   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2131601   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2131602   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2131603   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2131604   +   end;
MPRINT(EM_DIAGRAM):   end;
2131605   +end;
MPRINT(EM_DIAGRAM):   end;
2131606   +
2131607   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2131608   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2131609   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2131610   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2131611   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2131612   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2131613   +end;
MPRINT(EM_DIAGRAM):   end;
2131614   +else do;
MPRINT(EM_DIAGRAM):   else do;
2131615   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2131616   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2131617   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2131618   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2131619   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2131620   +   end;
MPRINT(EM_DIAGRAM):   end;
2131621   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2131622   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2131623   +   end;
MPRINT(EM_DIAGRAM):   end;
2131624   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2131625   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2131626   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2131627   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2131628   +   end;
MPRINT(EM_DIAGRAM):   end;
2131629   +end;
MPRINT(EM_DIAGRAM):   end;
2131630   +
2131631   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2131632   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2131633   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2131634   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2131635   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2131636   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2131637   +end;
MPRINT(EM_DIAGRAM):   end;
2131638   +else do;
MPRINT(EM_DIAGRAM):   else do;
2131639   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2131640   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2131641   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2131642   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2131643   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2131644   +   end;
MPRINT(EM_DIAGRAM):   end;
2131645   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2131646   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2131647   +   end;
MPRINT(EM_DIAGRAM):   end;
2131648   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2131649   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2131650   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2131651   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2131652   +   end;
MPRINT(EM_DIAGRAM):   end;
2131653   +end;
MPRINT(EM_DIAGRAM):   end;
2131654   +
2131655   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2131656   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2131657   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2131658   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2131659   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2131660   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2131661   +end;
MPRINT(EM_DIAGRAM):   end;
2131662   +else do;
MPRINT(EM_DIAGRAM):   else do;
2131663   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2131664   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2131665   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2131666   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2131667   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2131668   +   end;
MPRINT(EM_DIAGRAM):   end;
2131669   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2131670   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2131671   +   end;
MPRINT(EM_DIAGRAM):   end;
2131672   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2131673   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2131674   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2131675   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2131676   +   end;
MPRINT(EM_DIAGRAM):   end;
2131677   +end;
MPRINT(EM_DIAGRAM):   end;
2131678   +
2131679   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2131680   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2131681   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2131682   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2131683   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2131684   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2131685   +end;
MPRINT(EM_DIAGRAM):   end;
2131686   +else do;
MPRINT(EM_DIAGRAM):   else do;
2131687   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2131688   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2131689   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2131690   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2131691   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2131692   +   end;
MPRINT(EM_DIAGRAM):   end;
2131693   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2131694   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2131695   +   end;
MPRINT(EM_DIAGRAM):   end;
2131696   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2131697   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2131698   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2131699   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2131700   +   end;
MPRINT(EM_DIAGRAM):   end;
2131701   +end;
MPRINT(EM_DIAGRAM):   end;
2131702   +
2131703   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2131704   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2131705   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2131706   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2131707   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2131708   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2131709   +end;
MPRINT(EM_DIAGRAM):   end;
2131710   +else do;
MPRINT(EM_DIAGRAM):   else do;
2131711   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2131712   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2131713   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2131714   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2131715   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2131716   +   end;
MPRINT(EM_DIAGRAM):   end;
2131717   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2131718   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2131719   +   end;
MPRINT(EM_DIAGRAM):   end;
2131720   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2131721   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2131722   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2131723   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2131724   +   end;
MPRINT(EM_DIAGRAM):   end;
2131725   +end;
MPRINT(EM_DIAGRAM):   end;
2131726   +
2131727   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2131728   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2131729   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2131730   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2131731   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2131732   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2131733   +end;
MPRINT(EM_DIAGRAM):   end;
2131734   +else do;
MPRINT(EM_DIAGRAM):   else do;
2131735   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2131736   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2131737   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2131738   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2131739   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2131740   +   end;
MPRINT(EM_DIAGRAM):   end;
2131741   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2131742   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2131743   +   end;
MPRINT(EM_DIAGRAM):   end;
2131744   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2131745   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2131746   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2131747   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2131748   +   end;
MPRINT(EM_DIAGRAM):   end;
2131749   +end;
MPRINT(EM_DIAGRAM):   end;
2131750   +
2131751   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2131752   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
2131753   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2131754   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2131755   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2131756   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2131757   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2131758   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2131759   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2131760   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2131761   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2131762   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2131763   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2131764   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2131765   +end;
MPRINT(EM_DIAGRAM):   end;
2131766   +else do;
MPRINT(EM_DIAGRAM):   else do;
2131767   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2131768   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2131769   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2131770   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2131771   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2131772   +   end;
MPRINT(EM_DIAGRAM):   end;
2131773   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2131774   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2131775   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2131776   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2131777   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2131778   +   end;
MPRINT(EM_DIAGRAM):   end;
2131779   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2131780   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2131781   +   end;
MPRINT(EM_DIAGRAM):   end;
2131782   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2131783   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2131784   +   end;
MPRINT(EM_DIAGRAM):   end;
2131785   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2131786   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2131787   +   end;
MPRINT(EM_DIAGRAM):   end;
2131788   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2131789   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2131790   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2131791   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2131792   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2131793   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2131794   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2131795   +   end;
MPRINT(EM_DIAGRAM):   end;
2131796   +end;
MPRINT(EM_DIAGRAM):   end;
2131797   +
2131798   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2131799   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2131800   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
2131801   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2131802   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2131803   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2131804   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2131805   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2131806   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2131807   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2131808   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2131809   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2131810   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2131811   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2131812   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2131813   +end;
MPRINT(EM_DIAGRAM):   end;
2131814   +else do;
MPRINT(EM_DIAGRAM):   else do;
2131815   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2131816   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2131817   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2131818   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2131819   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2131820   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2131821   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2131822   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2131823   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2131824   +         end;
MPRINT(EM_DIAGRAM):   end;
2131825   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2131826   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2131827   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2131828   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2131829   +            end;
MPRINT(EM_DIAGRAM):   end;
2131830   +         end;
MPRINT(EM_DIAGRAM):   end;
2131831   +      end;
MPRINT(EM_DIAGRAM):   end;
2131832   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2131833   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2131834   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2131835   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2131836   +         end;
MPRINT(EM_DIAGRAM):   end;
2131837   +      end;
MPRINT(EM_DIAGRAM):   end;
2131838   +   end;
MPRINT(EM_DIAGRAM):   end;
2131839   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2131840   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2131841   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2131842   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2131843   +      end;
MPRINT(EM_DIAGRAM):   end;
2131844   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2131845   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2131846   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2131847   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2131848   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2131849   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2131850   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2131851   +         end;
MPRINT(EM_DIAGRAM):   end;
2131852   +      end;
MPRINT(EM_DIAGRAM):   end;
2131853   +   end;
MPRINT(EM_DIAGRAM):   end;
2131854   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2131855   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2131856   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2131857   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2131858   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2131859   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2131860   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2131861   +   end;
MPRINT(EM_DIAGRAM):   end;
2131862   +end;
MPRINT(EM_DIAGRAM):   end;
2131863   +
2131864   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2131865   +*** Checking missing input Interval
2131866   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2131867   +
2131868   +IF NMISS(
2131869   +   AcceptedCmpTotal ,
2131870   +   Age ,
2131871   +   Frq ,
2131872   +   Income ,
2131873   +   Kidhome ,
2131874   +   MntFishProducts ,
2131875   +   MntFruits ,
2131876   +   MntGoldProds ,
2131877   +   MntSweetProducts ,
2131878   +   MonthsAsCustomer ,
2131879   +   NumDealsPurchases ,
2131880   +   NumWebVisitsMonth ,
2131881   +   RFMstat ,
2131882   +   RMntFrq ,
2131883   +   Recency ,
2131884   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome ,
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer ,
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
2131885   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2131886   +
2131887   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2131888   +END;
MPRINT(EM_DIAGRAM):   END;
2131889   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2131890   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
2131891   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2131892   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2131893   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2131894   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2131895   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2131896   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2131897   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2131898   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2131899   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2131900   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2131901   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2131902   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2131903   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2131904   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2131905   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2131906   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2131907   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 *
MonthsAsCustomer ;
2131908   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2131909   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2131910   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2131911   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2131912   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2131913   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2131914   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2131915   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2131916   +END;
MPRINT(EM_DIAGRAM):   END;
2131917   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2131918   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2131919   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2131920   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2131921   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2131922   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2131923   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2131924   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2131925   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2131926   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2131927   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2131928   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2131929   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2131930   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2131931   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2131932   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2131933   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2131934   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2131935   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2131936   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2131937   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
2131938   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2131939   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2131940   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2131941   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2131942   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2131943   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 *
MonthsAsCustomer ;
2131944   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2131945   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2131946   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2131947   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2131948   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2131949   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2131950   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2131951   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2131952   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2131953   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2131954   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2131955   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2131956   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2131957   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2131958   +END;
MPRINT(EM_DIAGRAM):   END;
2131959   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2131960   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
2131961   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2131962   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2131963   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
2131964   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2131965   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2131966   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
2131967   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2131968   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2131969   +   H11  =      0.0032927309355 * S_AcceptedCmpTotal  +     0.09101334306394 *
2131970   +        S_Age  +    -0.17737387030956 * S_Frq  +     -0.7980677567639 *
2131971   +        S_Income  +     0.43076147384738 * S_Kidhome
2131972   +          +    -0.03764687993601 * S_MntFishProducts
2131973   +          +     0.02729806956772 * S_MntFruits  +     0.08803652910758 *
2131974   +        S_MntGoldProds  +     0.17643871051763 * S_MntSweetProducts
2131975   +          +    -0.21857007362207 * S_MonthsAsCustomer
2131976   +          +    -0.01738553271488 * S_NumDealsPurchases
2131977   +          +    -0.05405784617097 * S_NumWebVisitsMonth
2131978   +          +    -0.02555104359687 * S_RFMstat  +    -0.22262932120098 *
2131979   +        S_RMntFrq  +     0.52463751421504 * S_Recency
2131980   +          +     0.54544496970995 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.0032927309355 * S_AcceptedCmpTotal + 0.09101334306394 * S_Age +
-0.17737387030956 * S_Frq + -0.7980677567639 * S_Income + 0.43076147384738 * S_Kidhome +
-0.03764687993601 * S_MntFishProducts + 0.02729806956772 * S_MntFruits + 0.08803652910758 *
S_MntGoldProds + 0.17643871051763 * S_MntSweetProducts + -0.21857007362207 *
S_MonthsAsCustomer + -0.01738553271488 * S_NumDealsPurchases + -0.05405784617097 *
S_NumWebVisitsMonth + -0.02555104359687 * S_RFMstat + -0.22262932120098 * S_RMntFrq +
0.52463751421504 * S_Recency + 0.54544496970995 * S_Teenhome ;
2131981   +   H12  =    -0.33803565764996 * S_AcceptedCmpTotal  +     -0.1574598864259 *
2131982   +        S_Age  +    -0.11819127145626 * S_Frq  +     -0.0410639104551 *
2131983   +        S_Income  +     0.30116999256128 * S_Kidhome
2131984   +          +    -0.05148754431395 * S_MntFishProducts
2131985   +          +     0.06976805639315 * S_MntFruits  +     0.21288156312487 *
2131986   +        S_MntGoldProds  +     0.38336457324703 * S_MntSweetProducts
2131987   +          +    -0.47049602184046 * S_MonthsAsCustomer
2131988   +          +     0.31766759211089 * S_NumDealsPurchases
2131989   +          +     0.23065914125267 * S_NumWebVisitsMonth
2131990   +          +     0.30304676466657 * S_RFMstat  +     0.02069006823415 *
2131991   +        S_RMntFrq  +    -0.50214492406349 * S_Recency
2131992   +          +    -0.31828314433486 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.33803565764996 * S_AcceptedCmpTotal + -0.1574598864259 * S_Age
+ -0.11819127145626 * S_Frq + -0.0410639104551 * S_Income + 0.30116999256128 * S_Kidhome +
-0.05148754431395 * S_MntFishProducts + 0.06976805639315 * S_MntFruits + 0.21288156312487 *
S_MntGoldProds + 0.38336457324703 * S_MntSweetProducts + -0.47049602184046 *
S_MonthsAsCustomer + 0.31766759211089 * S_NumDealsPurchases + 0.23065914125267 *
S_NumWebVisitsMonth + 0.30304676466657 * S_RFMstat + 0.02069006823415 * S_RMntFrq +
-0.50214492406349 * S_Recency + -0.31828314433486 * S_Teenhome ;
2131993   +   H13  =    -0.66950066433143 * S_AcceptedCmpTotal  +    -0.13180706544499 *
2131994   +        S_Age  +    -0.35768347811788 * S_Frq  +    -0.48081944747804 *
2131995   +        S_Income  +    -0.47031432651131 * S_Kidhome
2131996   +          +     0.14501559210465 * S_MntFishProducts
2131997   +          +     0.04696430031502 * S_MntFruits  +    -0.56155803643986 *
2131998   +        S_MntGoldProds  +    -0.03811468849817 * S_MntSweetProducts
2131999   +          +    -0.12263198714092 * S_MonthsAsCustomer
2132000   +          +    -0.44778701790462 * S_NumDealsPurchases
2132001   +          +    -0.48451328063306 * S_NumWebVisitsMonth
2132002   +          +    -0.30729532219651 * S_RFMstat  +    -0.53933327781572 *
2132003   +        S_RMntFrq  +     0.73816873319969 * S_Recency
2132004   +          +     0.02727962791734 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.66950066433143 * S_AcceptedCmpTotal + -0.13180706544499 * S_Age
+ -0.35768347811788 * S_Frq + -0.48081944747804 * S_Income + -0.47031432651131 * S_Kidhome +
0.14501559210465 * S_MntFishProducts + 0.04696430031502 * S_MntFruits + -0.56155803643986 *
S_MntGoldProds + -0.03811468849817 * S_MntSweetProducts + -0.12263198714092 *
S_MonthsAsCustomer + -0.44778701790462 * S_NumDealsPurchases + -0.48451328063306 *
S_NumWebVisitsMonth + -0.30729532219651 * S_RFMstat + -0.53933327781572 * S_RMntFrq +
0.73816873319969 * S_Recency + 0.02727962791734 * S_Teenhome ;
2132005   +   H14  =     0.31637384240651 * S_AcceptedCmpTotal  +     0.01318551698119 *
2132006   +        S_Age  +     0.05366305732147 * S_Frq  +     0.11980702632855 *
2132007   +        S_Income  +    -0.63361814765775 * S_Kidhome
2132008   +          +    -0.09824863224867 * S_MntFishProducts
2132009   +          +    -0.19022726480556 * S_MntFruits  +    -0.03622071498812 *
2132010   +        S_MntGoldProds  +    -0.33481056314568 * S_MntSweetProducts
2132011   +          +    -0.02935796970517 * S_MonthsAsCustomer
2132012   +          +     0.02015249143837 * S_NumDealsPurchases
2132013   +          +     0.60675564879689 * S_NumWebVisitsMonth
2132014   +          +     0.25432072256404 * S_RFMstat  +    -0.18855949493817 *
2132015   +        S_RMntFrq  +    -0.75663473950421 * S_Recency
2132016   +          +    -0.34865918998533 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 0.31637384240651 * S_AcceptedCmpTotal + 0.01318551698119 * S_Age +
0.05366305732147 * S_Frq + 0.11980702632855 * S_Income + -0.63361814765775 * S_Kidhome +
-0.09824863224867 * S_MntFishProducts + -0.19022726480556 * S_MntFruits + -0.03622071498812 *
S_MntGoldProds + -0.33481056314568 * S_MntSweetProducts + -0.02935796970517 *
S_MonthsAsCustomer + 0.02015249143837 * S_NumDealsPurchases + 0.60675564879689 *
S_NumWebVisitsMonth + 0.25432072256404 * S_RFMstat + -0.18855949493817 * S_RMntFrq +
-0.75663473950421 * S_Recency + -0.34865918998533 * S_Teenhome ;
2132017   +   H15  =    -0.32654270849386 * S_AcceptedCmpTotal  +     0.17707100422873 *
2132018   +        S_Age  +     0.93625207609464 * S_Frq  +     0.26987977696455 *
2132019   +        S_Income  +    -0.00728146808361 * S_Kidhome
2132020   +          +    -0.15850529937985 * S_MntFishProducts
2132021   +          +     0.06513447200778 * S_MntFruits  +      0.0398444679725 *
2132022   +        S_MntGoldProds  +    -0.12149497244296 * S_MntSweetProducts
2132023   +          +    -0.00539233520343 * S_MonthsAsCustomer
2132024   +          +    -0.54182368084643 * S_NumDealsPurchases
2132025   +          +    -0.60072233649965 * S_NumWebVisitsMonth
2132026   +          +    -0.09022759163793 * S_RFMstat  +    -0.16894620369906 *
2132027   +        S_RMntFrq  +     0.66307424769463 * S_Recency
2132028   +          +    -0.17356690404814 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = -0.32654270849386 * S_AcceptedCmpTotal + 0.17707100422873 * S_Age
+ 0.93625207609464 * S_Frq + 0.26987977696455 * S_Income + -0.00728146808361 * S_Kidhome +
-0.15850529937985 * S_MntFishProducts + 0.06513447200778 * S_MntFruits + 0.0398444679725 *
S_MntGoldProds + -0.12149497244296 * S_MntSweetProducts + -0.00539233520343 *
S_MonthsAsCustomer + -0.54182368084643 * S_NumDealsPurchases + -0.60072233649965 *
S_NumWebVisitsMonth + -0.09022759163793 * S_RFMstat + -0.16894620369906 * S_RMntFrq +
0.66307424769463 * S_Recency + -0.17356690404814 * S_Teenhome ;
2132029   +   H11  = H11  +     0.40379020589792 * AcceptedCmp10
2132030   +          +     0.41163608029184 * AcceptedCmp20  +     0.31824152457666 *
2132031   +        AcceptedCmp30  +     0.30059703252717 * AcceptedCmp40
2132032   +          +     0.21809621049566 * AcceptedCmp50  +     0.17161388784292 *
2132033   +        Complain0  +    -0.35356191864234 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.40379020589792 * AcceptedCmp10 + 0.41163608029184 *
AcceptedCmp20 + 0.31824152457666 * AcceptedCmp30 + 0.30059703252717 * AcceptedCmp40 +
0.21809621049566 * AcceptedCmp50 + 0.17161388784292 * Complain0 + -0.35356191864234 *
HigherEducationBinary0 ;
2132034   +   H12  = H12  +     0.14146453229372 * AcceptedCmp10
2132035   +          +    -0.01499648130434 * AcceptedCmp20  +    -0.15319425809948 *
2132036   +        AcceptedCmp30  +     0.10722126908794 * AcceptedCmp40
2132037   +          +     0.29524215734213 * AcceptedCmp50  +     0.21901777981386 *
2132038   +        Complain0  +     0.26589689583514 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.14146453229372 * AcceptedCmp10 + -0.01499648130434 *
AcceptedCmp20 + -0.15319425809948 * AcceptedCmp30 + 0.10722126908794 * AcceptedCmp40 +
0.29524215734213 * AcceptedCmp50 + 0.21901777981386 * Complain0 + 0.26589689583514 *
HigherEducationBinary0 ;
2132039   +   H13  = H13  +    -0.13089590705194 * AcceptedCmp10
2132040   +          +    -0.16147741287576 * AcceptedCmp20  +     0.13892066553636 *
2132041   +        AcceptedCmp30  +    -0.12220468306752 * AcceptedCmp40
2132042   +          +     0.18197624280085 * AcceptedCmp50  +    -0.31355578222066 *
2132043   +        Complain0  +     0.17409691060383 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.13089590705194 * AcceptedCmp10 + -0.16147741287576 *
AcceptedCmp20 + 0.13892066553636 * AcceptedCmp30 + -0.12220468306752 * AcceptedCmp40 +
0.18197624280085 * AcceptedCmp50 + -0.31355578222066 * Complain0 + 0.17409691060383 *
HigherEducationBinary0 ;
2132044   +   H14  = H14  +     0.24764542202116 * AcceptedCmp10
2132045   +          +     0.00575121729576 * AcceptedCmp20  +    -0.30692671431758 *
2132046   +        AcceptedCmp30  +     0.04820882787304 * AcceptedCmp40
2132047   +          +     0.05262951745934 * AcceptedCmp50  +     0.19424906323292 *
2132048   +        Complain0  +     0.02739699491892 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.24764542202116 * AcceptedCmp10 + 0.00575121729576 *
AcceptedCmp20 + -0.30692671431758 * AcceptedCmp30 + 0.04820882787304 * AcceptedCmp40 +
0.05262951745934 * AcceptedCmp50 + 0.19424906323292 * Complain0 + 0.02739699491892 *
HigherEducationBinary0 ;
2132049   +   H15  = H15  +     0.55249118257316 * AcceptedCmp10
2132050   +          +     0.03472783050924 * AcceptedCmp20  +     0.45051734949789 *
2132051   +        AcceptedCmp30  +    -0.03032221189323 * AcceptedCmp40
2132052   +          +     0.28472394784854 * AcceptedCmp50  +     0.06409321661831 *
2132053   +        Complain0  +     0.17517854321941 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.55249118257316 * AcceptedCmp10 + 0.03472783050924 *
AcceptedCmp20 + 0.45051734949789 * AcceptedCmp30 + -0.03032221189323 * AcceptedCmp40 +
0.28472394784854 * AcceptedCmp50 + 0.06409321661831 * Complain0 + 0.17517854321941 *
HigherEducationBinary0 ;
2132054   +   H11  = H11  +     0.01296567207369 * Education2n_Cycle
2132055   +          +     -0.1384611563627 * EducationBasic  +    -0.07977602646684 *
2132056   +        EducationGraduation  +     0.24334570893333 * EducationMaster
2132057   +          +    -0.38882658584856 * Marital_StatusDivorced
2132058   +          +     0.65814014556907 * Marital_StatusMarried
2132059   +          +    -0.47946271812834 * Marital_StatusSingle
2132060   +          +     0.68266301555878 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.01296567207369 * Education2n_Cycle + -0.1384611563627 *
EducationBasic + -0.07977602646684 * EducationGraduation + 0.24334570893333 * EducationMaster
+ -0.38882658584856 * Marital_StatusDivorced + 0.65814014556907 * Marital_StatusMarried +
-0.47946271812834 * Marital_StatusSingle + 0.68266301555878 * Marital_StatusTogether ;
2132061   +   H12  = H12  +    -0.17120287038112 * Education2n_Cycle
2132062   +          +    -0.02706838966272 * EducationBasic  +     0.28296380151006 *
2132063   +        EducationGraduation  +     0.06350902674039 * EducationMaster
2132064   +          +     -0.3300387788221 * Marital_StatusDivorced
2132065   +          +     0.15584744966644 * Marital_StatusMarried
2132066   +          +     0.26617174676758 * Marital_StatusSingle
2132067   +          +    -0.29771537576014 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.17120287038112 * Education2n_Cycle + -0.02706838966272 *
EducationBasic + 0.28296380151006 * EducationGraduation + 0.06350902674039 * EducationMaster +
-0.3300387788221 * Marital_StatusDivorced + 0.15584744966644 * Marital_StatusMarried +
0.26617174676758 * Marital_StatusSingle + -0.29771537576014 * Marital_StatusTogether ;
2132068   +   H13  = H13  +     0.05524541069883 * Education2n_Cycle
2132069   +          +     0.18324866500855 * EducationBasic  +    -0.25557023117825 *
2132070   +        EducationGraduation  +    -0.16479543389993 * EducationMaster
2132071   +          +    -0.06758334778864 * Marital_StatusDivorced
2132072   +          +    -0.00076716594904 * Marital_StatusMarried
2132073   +          +    -0.04319541969046 * Marital_StatusSingle
2132074   +          +    -0.16936317180157 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.05524541069883 * Education2n_Cycle + 0.18324866500855 *
EducationBasic + -0.25557023117825 * EducationGraduation + -0.16479543389993 * EducationMaster
+ -0.06758334778864 * Marital_StatusDivorced + -0.00076716594904 * Marital_StatusMarried +
-0.04319541969046 * Marital_StatusSingle + -0.16936317180157 * Marital_StatusTogether ;
2132075   +   H14  = H14  +     0.04763927770842 * Education2n_Cycle
2132076   +          +     0.09740370469315 * EducationBasic  +      0.2355172519549 *
2132077   +        EducationGraduation  +    -0.17375916527677 * EducationMaster
2132078   +          +      0.2099776154173 * Marital_StatusDivorced
2132079   +          +    -0.53311901286241 * Marital_StatusMarried
2132080   +          +     0.48618352894253 * Marital_StatusSingle
2132081   +          +    -0.13406957503471 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.04763927770842 * Education2n_Cycle + 0.09740370469315 *
EducationBasic + 0.2355172519549 * EducationGraduation + -0.17375916527677 * EducationMaster +
0.2099776154173 * Marital_StatusDivorced + -0.53311901286241 * Marital_StatusMarried +
0.48618352894253 * Marital_StatusSingle + -0.13406957503471 * Marital_StatusTogether ;
2132082   +   H15  = H15  +     -0.1000300691329 * Education2n_Cycle
2132083   +          +      0.2070015782176 * EducationBasic  +    -0.02421180620986 *
2132084   +        EducationGraduation  +     -0.0194914340189 * EducationMaster
2132085   +          +     -0.1329378358285 * Marital_StatusDivorced
2132086   +          +     -0.1585939674118 * Marital_StatusMarried
2132087   +          +     0.12646246189261 * Marital_StatusSingle
2132088   +          +     0.02351898949739 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.1000300691329 * Education2n_Cycle + 0.2070015782176 *
EducationBasic + -0.02421180620986 * EducationGraduation + -0.0194914340189 * EducationMaster
+ -0.1329378358285 * Marital_StatusDivorced + -0.1585939674118 * Marital_StatusMarried +
0.12646246189261 * Marital_StatusSingle + 0.02351898949739 * Marital_StatusTogether ;
2132089   +   H11  =      0.4650755258615 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.4650755258615 + H11 ;
2132090   +   H12  =    -0.95637983233364 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.95637983233364 + H12 ;
2132091   +   H13  =    -0.46557260942286 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.46557260942286 + H13 ;
2132092   +   H14  =     0.54843208877211 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.54843208877211 + H14 ;
2132093   +   H15  =     0.84042548309301 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 0.84042548309301 + H15 ;
2132094   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
2132095   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
2132096   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
2132097   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
2132098   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
2132099   +END;
MPRINT(EM_DIAGRAM):   END;
2132100   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2132101   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
2132102   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
2132103   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
2132104   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
2132105   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
2132106   +END;
MPRINT(EM_DIAGRAM):   END;
2132107   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2132108   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2132109   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2132110   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2132111   +   P_DepVar1  =    -3.09243100351612 * H11  +     0.88657133745413 * H12
2132112   +          +    -2.65301673073237 * H13  +     1.47093743452607 * H14
2132113   +          +    -1.93226639391443 * H15 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.09243100351612 * H11 + 0.88657133745413 * H12 +
-2.65301673073237 * H13 + 1.47093743452607 * H14 + -1.93226639391443 * H15 ;
2132114   +   P_DepVar1  =    -1.83325335768642 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.83325335768642 + P_DepVar1 ;
2132115   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2132116   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2132117   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2132118   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2132119   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2132120   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2132121   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2132122   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2132123   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2132124   +END;
MPRINT(EM_DIAGRAM):   END;
2132125   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2132126   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2132127   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2132128   +END;
MPRINT(EM_DIAGRAM):   END;
2132129   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2132130   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2132131   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2132132   +END;
MPRINT(EM_DIAGRAM):   END;
2132133   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2132134   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2132135   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2132136   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2132137   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2132138   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2132139   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2132140   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2132141   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2132142   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2132143   +END;
MPRINT(EM_DIAGRAM):   END;
2132144   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2132145   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2132146   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2132147   +drop
2132148   +H11
2132149   +H12
2132150   +H13
2132151   +H14
2132152   +H15
2132153   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 ;
2132154   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2132155    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2132156    quit;
2132157    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2132158    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2132159    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2132160    retain ID 2 Node "Neural40";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural40";
2132161    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2132162    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2037 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2037 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2132163    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2132164    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2132165    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2037 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2037 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2132166    proc sort data=EMWS8.Neural40_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural40_variableset out=_temp2(keep=NAME CREATOR);
2132167    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2132168    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.NEURAL40_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2132169    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2132170    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2132171    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2132172    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2132173    proc contents data=EMWS8.Neural40_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural40_train out=_meta(keep=NAME) noprint;
2132174    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
2132175    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2132176    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2132177    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2132178    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2132179    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2132180    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2132181    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2132182    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2132183    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2132183  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1037 rows and 5 columns.
 
2132184    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2132185    proc append base=EMWS8.Ensmbl23_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl23_FCMP data=_tempx;
2132186    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL23_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1037 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL23_FCMP has 1037 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2132187    filename _pref
2132187  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
2132188    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2132189    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
2132190   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2132191   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
2132192   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2132193   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
2132194   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
2132195   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2132196    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2132197    quit;
2132198    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2132199    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2132200    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2132201    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
2132202    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2132203    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2132204    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2132205    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2132206    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2132207    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
2132208    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2132209    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2132210    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2132211    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2132212    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2132213    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2132214    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
2132215    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
2132216    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2132217    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2132218    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2132219    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2132220    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2132221    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2132222    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2132223    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2132224    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2132224  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
2132225    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2132226    proc append base=EMWS8.Ensmbl23_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl23_FCMP data=_tempx;
2132227    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL23_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL23_FCMP has 1041 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2132228    filename _pref
2132228  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
2132229    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2132230    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
2132231   +
2132232   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
2132233   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
2132233  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
2132234   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
2132235   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
2132236   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
2132237   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
2132238   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2132239    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2132240    quit;
2132241    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2132242    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2132243    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2132244    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
2132245    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2132246    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2132247    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2132248    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2132249    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2132250    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
2132251    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2132252    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2132253    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2132254    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2132255    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2132256    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2132257    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
2132258    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2132259    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2132260    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2132261    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2132262    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2132263    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2132264    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2132265    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2132266    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2132267    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2132267  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
2132268    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2132269    proc append base=EMWS8.Ensmbl23_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl23_FCMP data=_tempx;
2132270    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL23_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL23_FCMP has 1080 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2132271    filename _pref
2132271  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
2132272    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2132273    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
2132274   +
2132275   +
2132276   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
2132277   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
2132278   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
2132279   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
2132280   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
2132281   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2132282   +
2132283   +
2132284   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
2132285   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
2132286   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
2132287   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
2132288   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
2132289   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2132290   +
2132291   +
2132292   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
2132293   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
2132294   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
2132295   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
2132296   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
2132297   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2132298   +
2132299   +
2132300   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
2132301   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
2132302   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
2132303   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
2132304   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
2132305   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2132306   +
2132307   +
2132308   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
2132309   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
2132310   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
2132311   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
2132312   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
2132313   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2132314   +
2132315   +
2132316   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
2132317   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
2132318   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
2132319   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
2132320   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
2132321   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2132322   +
2132323   +
2132324   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
2132325   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
2132326   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
2132327   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
2132328   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
2132329   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2132330   +
The SAS System
 
2132331   +
2132332   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
2132333   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
2132334   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
2132335   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
2132336   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
2132337   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2132338   +if
2132339   +_FILTERNORM1 not in ( '.')
2132340   + and
2132341   +_FILTERNORM2 not in ( '.')
2132342   + and
2132343   +_FILTERNORM3 not in ( '.')
2132344   + and
2132345   +_FILTERNORM4 not in ( '.')
2132346   + and
2132347   +_FILTERNORM5 not in ( '.')
2132348   + and
2132349   +_FILTERNORM6 not in ( '.')
2132350   + and
2132351   +_FILTERNORM7 not in ( ' ')
2132352   + and
2132353   +_FILTERNORM8 not in ( ' ')
2132354   +and
2132355   +( Dt_Customer ne .)
2132356   +and ( Income ne . and (Income<=107000))
2132357   +and ( Kidhome ne .)
2132358   +and ( MntFishProducts ne .)
2132359   +and ( MntFruits ne .)
2132360   +and ( MntGoldProds ne .)
2132361   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
2132362   +and ( MntSweetProducts ne .)
2132363   +and ( MntWines ne .)
2132364   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
2132365   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
2132366   +and ( NumStorePurchases ne .)
2132367   +and ( NumWebPurchases ne .)
2132368   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
2132369   +and ( Recency ne .)
2132370   +and ( Teenhome ne .)
2132371   +and ( Year_Birth ne .)
2132372   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
2132373   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
2132374   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
2132375   +end;
MPRINT(EM_DIAGRAM):   end;
2132376   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
2132377   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2132378    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2132379    quit;
2132380    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2132381    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2132382    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2132383    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
2132384    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2132385    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2132386    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2132387    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2132388    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2132389    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
2132390    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2132391    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2132392    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2132393    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2132394    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2132395    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2132396    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
2132397    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
2132398    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2132399    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2132400    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2132401    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2132402    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2132403    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2132404    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2132405    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2132406    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2132406  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
2132407    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2132408    proc append base=EMWS8.Ensmbl23_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl23_FCMP data=_tempx;
2132409    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL23_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL23_FCMP has 1146 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2132410    %macro varDept(fcmpdata=,id=);
2132411    %global nobs&id scoreFlag&id;
2132412    %let scoreFlag&id = 0;
2132413    %if &id=1 or ^&fcmpStart %then %do;
2132414    proc sort data=&fcmpdata out=_temp&id nodupkey;
2132415    by NAME;
2132416    where id=&id and LHS in( %let j=1;
2132417    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
2132418    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
2132419    "&var" %let j = %eval(&j+1);
2132420    %end;
2132421    );
2132422    run;
2132423    %let dsid = %sysfunc(open(_temp&id));
2132424    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2132425    %let dsid = %sysfunc(close(&dsid));
2132426    %if &&nobs&id %then %do;
2132427    %let scoreFlag&id = 1;
2132428    %let fcmpStart = 1;
2132429    %end;
2132430    %else %let fcmpStart = 0;
2132431    %end;
2132432    %else %do;
2132433    proc sort data=&fcmpdata out=_tempid;
2132434    where id=&id;
2132435    by LHS;
2132436    run;
2132437    %let dsid = %sysfunc(open(_tempid));
2132438    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2132439    %let dsid = %sysfunc(close(&dsid));
2132440    %if ^&&nobs&id %then %do;
2132441    proc datasets lib=work nolist;
2132442    delete _tempid;
2132443    run;
2132444    quit;
2132445    %end;
2132446    %else %do;
2132447    data _tempAll;
2132448    set %let j=%eval(&id-1);
2132449    %do x=1 %to &j;
2132450    %if &&nobs&x %then %do;
2132451    _temp&x %end;
2132452    %end;
2132453    ;
2132454    run;
2132455    proc sql;
2132456    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
2132456  ! work._tempid p2 where p.name=p2.lhs;
2132457    quit;
2132458    data _temp&id;
2132459    set _temp&id;
2132460    where LHS ne '' and NAME ne '' and Node ne '';
2132461    run;
2132462    proc datasets lib=work nolist;
2132463    delete _tempAll;
2132464    run;
2132465    %let dsid = %sysfunc(open(_temp&id));
2132466    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2132467    %let dsid = %sysfunc(close(&dsid));
2132468    %if ^&&nobs&id %then %do;
2132469    proc datasets lib=work nolist;
2132470    delete _temp&id;
2132471    run;
2132472    quit;
2132473    %end;
2132474    %else %do;
2132475    %let scoreFlag&id = 1;
2132476    data _temp&id;
2132477    set _temp&id;
2132478    where LHS ne NAME and node ne '';
2132479    run;
2132480    %let dsid = %sysfunc(open(_temp&id));
2132481    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2132482    %let dsid = %sysfunc(close(&dsid));
2132483    %if ^&&nobs&id %then %do;
2132484    proc datasets lib=work nolist;
2132485    delete _temp&id;
2132486    run;
2132487    quit;
2132488    %end;
2132489    %else %do;
2132490    proc sort data=_temp&id nodupkey;
2132491    by LHS NAME;
2132492    run;
2132493    %end;
2132494    %end;
2132495    %end;
2132496    %end;
2132497    %mend varDept;
2132498    %macro optCode(outdata=fcmpdata);
2132499    %global fcmpStart;
2132500    %let fcmpStart = 0;
2132501    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
2132502    %let NumNodes=9;
2132503    %do k=1 %to &NumNodes;
2132504    %vardept(fcmpdata=&outdata, id=&k);
2132505    %end;
2132506    %mend optCode;
2132507    %optcode(outData=EMWS8.Ensmbl23_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl23_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL23_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl23_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 106 observations read from the data set EMWS8.ENSMBL23_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 79 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 27 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl23_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL23_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl23_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL23_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl23_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL23_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 27 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 2 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.06 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl23_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL23_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 29 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 33 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl23_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL23_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: There were 33 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 62 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl23_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL23_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl23_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL23_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
2132508    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
2132509    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
2132510    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
2132511    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2132512    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
2132513    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
2132514    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
2132515    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2132516    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2132517    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
2132517  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 2 rows and 3 columns.
 
2132518    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
2132519    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
2132520    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
2132521    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 2 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 2 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2132522    filename _pref
2132522  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural39\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Neural39\EMPUBLISHSCORE.sas";
2132523    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2132524    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Neural39\EMPUBLISHSCORE.sas.
2132525   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2132526   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2132527   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2132528   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2132529   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2132530   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2132531   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2132532   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2132533   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2132534   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2132535   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2132536   +LENGTH _WARN_ $4
2132537   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
2132538   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2132539   +
2132540   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2132541   +
2132542   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2132543   +
2132544   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2132545   +
2132546   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2132547   +
2132548   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2132549   +
2132550   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2132551   +
2132552   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2132553   +
2132554   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2132555   +
2132556   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2132557   +
2132558   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2132559   +
2132560   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2132561   +
2132562   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2132563   +
2132564   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2132565   +
2132566   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2132567   +
2132568   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2132569   +
2132570   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2132571   +
2132572   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2132573   +
2132574   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2132575   +
2132576   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2132577   +
2132578   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2132579   +
2132580   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2132581   +
2132582   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2132583   +
2132584   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2132585   +
2132586   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2132587   +
2132588   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2132589   +
2132590   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2132591   +
2132592   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2132593   +
2132594   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2132595   +
2132596   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2132597   +
2132598   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2132599   +
2132600   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
2132601   +
2132602   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
2132603   +
2132604   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
2132605   +
2132606   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
2132607   +
2132608   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2132609   +
2132610   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2132611   +
2132612   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2132613   +
2132614   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2132615   +
2132616   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2132617   +
2132618   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2132619   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2132620   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2132621   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2132622   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2132623   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2132624   +end;
MPRINT(EM_DIAGRAM):   end;
2132625   +else do;
MPRINT(EM_DIAGRAM):   else do;
2132626   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2132627   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2132628   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2132629   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2132630   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2132631   +   end;
MPRINT(EM_DIAGRAM):   end;
2132632   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2132633   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2132634   +   end;
MPRINT(EM_DIAGRAM):   end;
2132635   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2132636   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2132637   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2132638   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2132639   +   end;
MPRINT(EM_DIAGRAM):   end;
2132640   +end;
MPRINT(EM_DIAGRAM):   end;
2132641   +
2132642   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2132643   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2132644   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2132645   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2132646   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2132647   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2132648   +end;
MPRINT(EM_DIAGRAM):   end;
2132649   +else do;
MPRINT(EM_DIAGRAM):   else do;
2132650   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2132651   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2132652   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2132653   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2132654   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2132655   +   end;
MPRINT(EM_DIAGRAM):   end;
2132656   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2132657   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2132658   +   end;
MPRINT(EM_DIAGRAM):   end;
2132659   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2132660   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2132661   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2132662   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2132663   +   end;
MPRINT(EM_DIAGRAM):   end;
2132664   +end;
MPRINT(EM_DIAGRAM):   end;
2132665   +
2132666   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2132667   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2132668   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2132669   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2132670   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2132671   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2132672   +end;
MPRINT(EM_DIAGRAM):   end;
2132673   +else do;
MPRINT(EM_DIAGRAM):   else do;
2132674   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2132675   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2132676   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2132677   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2132678   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2132679   +   end;
MPRINT(EM_DIAGRAM):   end;
2132680   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2132681   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2132682   +   end;
MPRINT(EM_DIAGRAM):   end;
2132683   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2132684   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2132685   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2132686   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2132687   +   end;
MPRINT(EM_DIAGRAM):   end;
2132688   +end;
MPRINT(EM_DIAGRAM):   end;
2132689   +
2132690   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2132691   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2132692   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2132693   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2132694   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2132695   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2132696   +end;
MPRINT(EM_DIAGRAM):   end;
2132697   +else do;
MPRINT(EM_DIAGRAM):   else do;
2132698   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2132699   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2132700   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2132701   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2132702   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2132703   +   end;
MPRINT(EM_DIAGRAM):   end;
2132704   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2132705   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2132706   +   end;
MPRINT(EM_DIAGRAM):   end;
2132707   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2132708   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2132709   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2132710   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2132711   +   end;
MPRINT(EM_DIAGRAM):   end;
2132712   +end;
MPRINT(EM_DIAGRAM):   end;
2132713   +
2132714   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2132715   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2132716   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2132717   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2132718   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2132719   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2132720   +end;
MPRINT(EM_DIAGRAM):   end;
2132721   +else do;
MPRINT(EM_DIAGRAM):   else do;
2132722   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2132723   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2132724   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2132725   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2132726   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2132727   +   end;
MPRINT(EM_DIAGRAM):   end;
2132728   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2132729   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2132730   +   end;
MPRINT(EM_DIAGRAM):   end;
2132731   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2132732   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2132733   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2132734   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2132735   +   end;
MPRINT(EM_DIAGRAM):   end;
2132736   +end;
MPRINT(EM_DIAGRAM):   end;
2132737   +
2132738   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2132739   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2132740   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2132741   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2132742   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2132743   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2132744   +end;
MPRINT(EM_DIAGRAM):   end;
2132745   +else do;
MPRINT(EM_DIAGRAM):   else do;
2132746   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2132747   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2132748   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2132749   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2132750   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2132751   +   end;
MPRINT(EM_DIAGRAM):   end;
2132752   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2132753   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2132754   +   end;
MPRINT(EM_DIAGRAM):   end;
2132755   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2132756   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2132757   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2132758   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2132759   +   end;
MPRINT(EM_DIAGRAM):   end;
2132760   +end;
MPRINT(EM_DIAGRAM):   end;
2132761   +
2132762   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2132763   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2132764   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2132765   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2132766   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2132767   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2132768   +end;
MPRINT(EM_DIAGRAM):   end;
2132769   +else do;
MPRINT(EM_DIAGRAM):   else do;
2132770   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2132771   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2132772   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2132773   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2132774   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2132775   +   end;
MPRINT(EM_DIAGRAM):   end;
2132776   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2132777   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2132778   +   end;
MPRINT(EM_DIAGRAM):   end;
2132779   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2132780   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2132781   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2132782   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2132783   +   end;
MPRINT(EM_DIAGRAM):   end;
2132784   +end;
MPRINT(EM_DIAGRAM):   end;
2132785   +
2132786   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2132787   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
2132788   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2132789   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2132790   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2132791   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2132792   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2132793   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2132794   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2132795   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2132796   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2132797   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2132798   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2132799   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2132800   +end;
MPRINT(EM_DIAGRAM):   end;
2132801   +else do;
MPRINT(EM_DIAGRAM):   else do;
2132802   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2132803   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2132804   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2132805   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2132806   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2132807   +   end;
MPRINT(EM_DIAGRAM):   end;
2132808   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2132809   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2132810   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2132811   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2132812   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2132813   +   end;
MPRINT(EM_DIAGRAM):   end;
2132814   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2132815   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2132816   +   end;
MPRINT(EM_DIAGRAM):   end;
2132817   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2132818   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2132819   +   end;
MPRINT(EM_DIAGRAM):   end;
2132820   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2132821   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2132822   +   end;
MPRINT(EM_DIAGRAM):   end;
2132823   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2132824   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2132825   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2132826   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2132827   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2132828   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2132829   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2132830   +   end;
MPRINT(EM_DIAGRAM):   end;
2132831   +end;
MPRINT(EM_DIAGRAM):   end;
2132832   +
2132833   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2132834   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2132835   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
2132836   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2132837   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2132838   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2132839   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2132840   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2132841   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2132842   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2132843   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2132844   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2132845   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2132846   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2132847   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2132848   +end;
MPRINT(EM_DIAGRAM):   end;
2132849   +else do;
MPRINT(EM_DIAGRAM):   else do;
2132850   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2132851   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2132852   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2132853   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2132854   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2132855   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2132856   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2132857   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2132858   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2132859   +         end;
MPRINT(EM_DIAGRAM):   end;
2132860   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2132861   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2132862   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2132863   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2132864   +            end;
MPRINT(EM_DIAGRAM):   end;
2132865   +         end;
MPRINT(EM_DIAGRAM):   end;
2132866   +      end;
MPRINT(EM_DIAGRAM):   end;
2132867   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2132868   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2132869   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2132870   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2132871   +         end;
MPRINT(EM_DIAGRAM):   end;
2132872   +      end;
MPRINT(EM_DIAGRAM):   end;
2132873   +   end;
MPRINT(EM_DIAGRAM):   end;
2132874   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2132875   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2132876   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2132877   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2132878   +      end;
MPRINT(EM_DIAGRAM):   end;
2132879   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2132880   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2132881   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2132882   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2132883   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2132884   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2132885   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2132886   +         end;
MPRINT(EM_DIAGRAM):   end;
2132887   +      end;
MPRINT(EM_DIAGRAM):   end;
2132888   +   end;
MPRINT(EM_DIAGRAM):   end;
2132889   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2132890   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2132891   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2132892   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2132893   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2132894   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2132895   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2132896   +   end;
MPRINT(EM_DIAGRAM):   end;
2132897   +end;
MPRINT(EM_DIAGRAM):   end;
2132898   +
2132899   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2132900   +*** Checking missing input Interval
2132901   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2132902   +
2132903   +IF NMISS(
2132904   +   AcceptedCmpTotal ,
2132905   +   Age ,
2132906   +   Frq ,
2132907   +   Income ,
2132908   +   Kidhome ,
2132909   +   MntFishProducts ,
2132910   +   MntFruits ,
2132911   +   MntGoldProds ,
2132912   +   MntSweetProducts ,
2132913   +   MonthsAsCustomer ,
2132914   +   NumDealsPurchases ,
2132915   +   NumWebVisitsMonth ,
2132916   +   RFMstat ,
2132917   +   RMntFrq ,
2132918   +   Recency ,
2132919   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome ,
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer ,
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
2132920   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2132921   +
2132922   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2132923   +END;
MPRINT(EM_DIAGRAM):   END;
2132924   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2132925   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
2132926   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2132927   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2132928   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2132929   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2132930   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2132931   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2132932   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2132933   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2132934   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2132935   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2132936   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2132937   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2132938   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2132939   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2132940   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2132941   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2132942   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 *
MonthsAsCustomer ;
2132943   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2132944   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2132945   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2132946   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2132947   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2132948   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2132949   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2132950   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2132951   +END;
MPRINT(EM_DIAGRAM):   END;
2132952   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2132953   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2132954   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2132955   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2132956   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2132957   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2132958   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2132959   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2132960   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2132961   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2132962   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2132963   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2132964   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2132965   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2132966   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2132967   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2132968   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2132969   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2132970   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2132971   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2132972   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
2132973   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2132974   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2132975   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2132976   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2132977   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2132978   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 *
MonthsAsCustomer ;
2132979   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2132980   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2132981   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2132982   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2132983   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2132984   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2132985   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2132986   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2132987   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2132988   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2132989   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2132990   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2132991   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2132992   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2132993   +END;
MPRINT(EM_DIAGRAM):   END;
2132994   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2132995   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
2132996   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2132997   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2132998   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
2132999   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2133000   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2133001   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
2133002   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2133003   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2133004   +   H11  =    -0.59512924851551 * S_AcceptedCmpTotal  +     -0.0822975295273 *
2133005   +        S_Age  +     0.34777744436504 * S_Frq  +     0.07942025641822 *
2133006   +        S_Income  +     0.23721647978534 * S_Kidhome
2133007   +          +    -0.02271798884661 * S_MntFishProducts
2133008   +          +     0.08807309980934 * S_MntFruits  +     0.19069006902766 *
2133009   +        S_MntGoldProds  +     0.10910458513653 * S_MntSweetProducts
2133010   +          +     -0.2712400716804 * S_MonthsAsCustomer
2133011   +          +    -0.53936896531209 * S_NumDealsPurchases
2133012   +          +    -0.35925915934577 * S_NumWebVisitsMonth
2133013   +          +    -0.08622629924361 * S_RFMstat  +     0.25394591780904 *
2133014   +        S_RMntFrq  +     0.69890372536214 * S_Recency
2133015   +          +     0.13643980298627 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.59512924851551 * S_AcceptedCmpTotal + -0.0822975295273 * S_Age
+ 0.34777744436504 * S_Frq + 0.07942025641822 * S_Income + 0.23721647978534 * S_Kidhome +
-0.02271798884661 * S_MntFishProducts + 0.08807309980934 * S_MntFruits + 0.19069006902766 *
S_MntGoldProds + 0.10910458513653 * S_MntSweetProducts + -0.2712400716804 * S_MonthsAsCustomer
+ -0.53936896531209 * S_NumDealsPurchases + -0.35925915934577 * S_NumWebVisitsMonth +
-0.08622629924361 * S_RFMstat + 0.25394591780904 * S_RMntFrq + 0.69890372536214 * S_Recency +
0.13643980298627 * S_Teenhome ;
2133016   +   H12  =     -0.1829764834163 * S_AcceptedCmpTotal  +      0.5150125387492 *
2133017   +        S_Age  +     0.98578880139347 * S_Frq  +     0.35785305967975 *
2133018   +        S_Income  +     0.08668934262602 * S_Kidhome
2133019   +          +     -0.1992601670046 * S_MntFishProducts
2133020   +          +     0.01629264862515 * S_MntFruits  +    -0.03025350824332 *
2133021   +        S_MntGoldProds  +    -0.38227262001553 * S_MntSweetProducts
2133022   +          +     0.30116770365349 * S_MonthsAsCustomer
2133023   +          +    -0.46000379214601 * S_NumDealsPurchases
2133024   +          +    -0.73085067864835 * S_NumWebVisitsMonth
2133025   +          +    -0.22923275570367 * S_RFMstat  +     -0.5046307291648 *
2133026   +        S_RMntFrq  +     1.05223220143096 * S_Recency
2133027   +          +    -0.17002078495363 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.1829764834163 * S_AcceptedCmpTotal + 0.5150125387492 * S_Age +
0.98578880139347 * S_Frq + 0.35785305967975 * S_Income + 0.08668934262602 * S_Kidhome +
-0.1992601670046 * S_MntFishProducts + 0.01629264862515 * S_MntFruits + -0.03025350824332 *
S_MntGoldProds + -0.38227262001553 * S_MntSweetProducts + 0.30116770365349 *
S_MonthsAsCustomer + -0.46000379214601 * S_NumDealsPurchases + -0.73085067864835 *
S_NumWebVisitsMonth + -0.22923275570367 * S_RFMstat + -0.5046307291648 * S_RMntFrq +
1.05223220143096 * S_Recency + -0.17002078495363 * S_Teenhome ;
2133028   +   H13  =    -0.46803354047925 * S_AcceptedCmpTotal  +    -0.20058439872619 *
2133029   +        S_Age  +    -0.01284299386993 * S_Frq  +    -0.75016251494757 *
2133030   +        S_Income  +    -0.63339804662862 * S_Kidhome
2133031   +          +     0.20120882029834 * S_MntFishProducts
2133032   +          +    -0.06230023881104 * S_MntFruits  +    -0.36454417225574 *
2133033   +        S_MntGoldProds  +     0.02047534293821 * S_MntSweetProducts
2133034   +          +    -0.08519313101441 * S_MonthsAsCustomer
2133035   +          +    -0.30576030134683 * S_NumDealsPurchases
2133036   +          +    -0.59860723545409 * S_NumWebVisitsMonth
2133037   +          +    -0.08355373822909 * S_RFMstat  +    -0.22326942617185 *
2133038   +        S_RMntFrq  +     0.80270168032456 * S_Recency
2133039   +          +     0.33480569534819 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.46803354047925 * S_AcceptedCmpTotal + -0.20058439872619 * S_Age
+ -0.01284299386993 * S_Frq + -0.75016251494757 * S_Income + -0.63339804662862 * S_Kidhome +
0.20120882029834 * S_MntFishProducts + -0.06230023881104 * S_MntFruits + -0.36454417225574 *
S_MntGoldProds + 0.02047534293821 * S_MntSweetProducts + -0.08519313101441 *
S_MonthsAsCustomer + -0.30576030134683 * S_NumDealsPurchases + -0.59860723545409 *
S_NumWebVisitsMonth + -0.08355373822909 * S_RFMstat + -0.22326942617185 * S_RMntFrq +
0.80270168032456 * S_Recency + 0.33480569534819 * S_Teenhome ;
2133040   +   H14  =    -0.11750811478204 * S_AcceptedCmpTotal  +     0.08897841506547 *
2133041   +        S_Age  +    -0.58608559771512 * S_Frq  +    -0.97381716235373 *
2133042   +        S_Income  +     0.66694972561255 * S_Kidhome
2133043   +          +     -0.0398036726055 * S_MntFishProducts
2133044   +          +     0.22002314897938 * S_MntFruits  +     0.04732712109048 *
2133045   +        S_MntGoldProds  +     0.26526839421345 * S_MntSweetProducts
2133046   +          +    -0.15403174187172 * S_MonthsAsCustomer
2133047   +          +     0.22820115917371 * S_NumDealsPurchases
2133048   +          +     0.18267832891328 * S_NumWebVisitsMonth
2133049   +          +     -0.0174907884104 * S_RFMstat  +    -0.31876274555503 *
2133050   +        S_RMntFrq  +     0.74433020674409 * S_Recency
2133051   +          +     0.47600648051538 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = -0.11750811478204 * S_AcceptedCmpTotal + 0.08897841506547 * S_Age
+ -0.58608559771512 * S_Frq + -0.97381716235373 * S_Income + 0.66694972561255 * S_Kidhome +
-0.0398036726055 * S_MntFishProducts + 0.22002314897938 * S_MntFruits + 0.04732712109048 *
S_MntGoldProds + 0.26526839421345 * S_MntSweetProducts + -0.15403174187172 *
S_MonthsAsCustomer + 0.22820115917371 * S_NumDealsPurchases + 0.18267832891328 *
S_NumWebVisitsMonth + -0.0174907884104 * S_RFMstat + -0.31876274555503 * S_RMntFrq +
0.74433020674409 * S_Recency + 0.47600648051538 * S_Teenhome ;
2133052   +   H11  = H11  +     0.21237941475599 * AcceptedCmp10
2133053   +          +     0.04472438427365 * AcceptedCmp20  +     0.17747949289397 *
2133054   +        AcceptedCmp30  +      0.0160283827284 * AcceptedCmp40
2133055   +          +     0.55925432320426 * AcceptedCmp50  +    -0.14142896526953 *
2133056   +        Complain0  +      0.0575110231505 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.21237941475599 * AcceptedCmp10 + 0.04472438427365 *
AcceptedCmp20 + 0.17747949289397 * AcceptedCmp30 + 0.0160283827284 * AcceptedCmp40 +
0.55925432320426 * AcceptedCmp50 + -0.14142896526953 * Complain0 + 0.0575110231505 *
HigherEducationBinary0 ;
2133057   +   H12  = H12  +     0.47907390571224 * AcceptedCmp10
2133058   +          +     0.27664153700074 * AcceptedCmp20  +     0.53987959298978 *
2133059   +        AcceptedCmp30  +     0.28087504743344 * AcceptedCmp40
2133060   +          +     0.10391254888041 * AcceptedCmp50  +      -0.141083453381 *
2133061   +        Complain0  +     0.11031418992388 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.47907390571224 * AcceptedCmp10 + 0.27664153700074 *
AcceptedCmp20 + 0.53987959298978 * AcceptedCmp30 + 0.28087504743344 * AcceptedCmp40 +
0.10391254888041 * AcceptedCmp50 + -0.141083453381 * Complain0 + 0.11031418992388 *
HigherEducationBinary0 ;
2133062   +   H13  = H13  +     0.09520651716106 * AcceptedCmp10
2133063   +          +      0.0343715287888 * AcceptedCmp20  +     0.48264670470765 *
2133064   +        AcceptedCmp30  +    -0.73356967665862 * AcceptedCmp40
2133065   +          +     0.43560801503541 * AcceptedCmp50  +     -0.2718667817564 *
2133066   +        Complain0  +     0.07653375459455 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.09520651716106 * AcceptedCmp10 + 0.0343715287888 *
AcceptedCmp20 + 0.48264670470765 * AcceptedCmp30 + -0.73356967665862 * AcceptedCmp40 +
0.43560801503541 * AcceptedCmp50 + -0.2718667817564 * Complain0 + 0.07653375459455 *
HigherEducationBinary0 ;
2133067   +   H14  = H14  +     0.18606771308408 * AcceptedCmp10
2133068   +          +     0.10545968088972 * AcceptedCmp20  +     0.28680843470023 *
2133069   +        AcceptedCmp30  +     0.48936354303031 * AcceptedCmp40
2133070   +          +    -0.14408643246427 * AcceptedCmp50  +     0.23450133527378 *
2133071   +        Complain0  +    -0.44927010710705 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.18606771308408 * AcceptedCmp10 + 0.10545968088972 *
AcceptedCmp20 + 0.28680843470023 * AcceptedCmp30 + 0.48936354303031 * AcceptedCmp40 +
-0.14408643246427 * AcceptedCmp50 + 0.23450133527378 * Complain0 + -0.44927010710705 *
HigherEducationBinary0 ;
2133072   +   H11  = H11  +    -0.14528524296804 * Education2n_Cycle
2133073   +          +     0.01673408592951 * EducationBasic  +    -0.06429601063979 *
2133074   +        EducationGraduation  +    -0.02622617788078 * EducationMaster
2133075   +          +     0.06024519291122 * Marital_StatusDivorced
2133076   +          +     -0.0819071841309 * Marital_StatusMarried
2133077   +          +     0.42870578507073 * Marital_StatusSingle
2133078   +          +      0.4051129562668 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.14528524296804 * Education2n_Cycle + 0.01673408592951 *
EducationBasic + -0.06429601063979 * EducationGraduation + -0.02622617788078 * EducationMaster
+ 0.06024519291122 * Marital_StatusDivorced + -0.0819071841309 * Marital_StatusMarried +
0.42870578507073 * Marital_StatusSingle + 0.4051129562668 * Marital_StatusTogether ;
2133079   +   H12  = H12  +     0.28210673900541 * Education2n_Cycle
2133080   +          +    -0.02393077028847 * EducationBasic  +    -0.10389902860327 *
2133081   +        EducationGraduation  +    -0.14877703838953 * EducationMaster
2133082   +          +    -0.13856018901636 * Marital_StatusDivorced
2133083   +          +     0.10012984585302 * Marital_StatusMarried
2133084   +          +     0.02921741368356 * Marital_StatusSingle
2133085   +          +     0.13848478656523 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.28210673900541 * Education2n_Cycle + -0.02393077028847 *
EducationBasic + -0.10389902860327 * EducationGraduation + -0.14877703838953 * EducationMaster
+ -0.13856018901636 * Marital_StatusDivorced + 0.10012984585302 * Marital_StatusMarried +
0.02921741368356 * Marital_StatusSingle + 0.13848478656523 * Marital_StatusTogether ;
2133086   +   H13  = H13  +      0.0183013852099 * Education2n_Cycle
2133087   +          +     0.43125570378811 * EducationBasic  +    -0.31392526432015 *
2133088   +        EducationGraduation  +      0.0753944289648 * EducationMaster
2133089   +          +    -0.23239586980133 * Marital_StatusDivorced
2133090   +          +      0.1253994554645 * Marital_StatusMarried
2133091   +          +    -0.33648409660062 * Marital_StatusSingle
2133092   +          +    -0.14353309021619 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.0183013852099 * Education2n_Cycle + 0.43125570378811 *
EducationBasic + -0.31392526432015 * EducationGraduation + 0.0753944289648 * EducationMaster +
-0.23239586980133 * Marital_StatusDivorced + 0.1253994554645 * Marital_StatusMarried +
-0.33648409660062 * Marital_StatusSingle + -0.14353309021619 * Marital_StatusTogether ;
2133093   +   H14  = H14  +    -0.13261661281439 * Education2n_Cycle
2133094   +          +     0.12513764082187 * EducationBasic  +    -0.21826807057488 *
2133095   +        EducationGraduation  +     0.25426016549852 * EducationMaster
2133096   +          +    -0.20018638821233 * Marital_StatusDivorced
2133097   +          +     1.07213214578803 * Marital_StatusMarried
2133098   +          +    -0.78089608097635 * Marital_StatusSingle
2133099   +          +      0.8652598562973 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.13261661281439 * Education2n_Cycle + 0.12513764082187 *
EducationBasic + -0.21826807057488 * EducationGraduation + 0.25426016549852 * EducationMaster
+ -0.20018638821233 * Marital_StatusDivorced + 1.07213214578803 * Marital_StatusMarried +
-0.78089608097635 * Marital_StatusSingle + 0.8652598562973 * Marital_StatusTogether ;
2133100   +   H11  =      0.6839700017137 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.6839700017137 + H11 ;
2133101   +   H12  =     0.88439108697567 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.88439108697567 + H12 ;
2133102   +   H13  =    -0.21745653885035 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.21745653885035 + H13 ;
2133103   +   H14  =     1.53290685706631 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 1.53290685706631 + H14 ;
2133104   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
2133105   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
2133106   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
2133107   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
2133108   +END;
MPRINT(EM_DIAGRAM):   END;
2133109   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2133110   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
2133111   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
2133112   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
2133113   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
2133114   +END;
MPRINT(EM_DIAGRAM):   END;
2133115   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2133116   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2133117   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2133118   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2133119   +   P_DepVar1  =    -1.02007256907977 * H11  +    -1.79638089167371 * H12
2133120   +          +    -2.67778063761069 * H13  +    -2.40349387174856 * H14 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.02007256907977 * H11 + -1.79638089167371 * H12 +
-2.67778063761069 * H13 + -2.40349387174856 * H14 ;
2133121   +   P_DepVar1  =    -0.89818574956639 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.89818574956639 + P_DepVar1 ;
2133122   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2133123   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2133124   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2133125   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2133126   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2133127   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2133128   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2133129   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2133130   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2133131   +END;
MPRINT(EM_DIAGRAM):   END;
2133132   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2133133   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2133134   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2133135   +END;
MPRINT(EM_DIAGRAM):   END;
2133136   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2133137   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2133138   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2133139   +END;
MPRINT(EM_DIAGRAM):   END;
2133140   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2133141   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2133142   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2133143   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2133144   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2133145   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2133146   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2133147   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2133148   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2133149   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2133150   +END;
MPRINT(EM_DIAGRAM):   END;
2133151   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2133152   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2133153   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2133154   +drop
2133155   +H11
2133156   +H12
2133157   +H13
2133158   +H14
2133159   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 ;
2133160   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2133161    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2133162    quit;
2133163    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2133164    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2133165    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2133166    retain ID 2 Node "Neural39";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural39";
2133167    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2133168    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1891 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1891 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2133169    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2133170    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2133171    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1891 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1891 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2133172    proc sort data=EMWS8.Neural39_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural39_variableset out=_temp2(keep=NAME CREATOR);
2133173    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2133174    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.NEURAL39_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2133175    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2133176    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2133177    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2133178    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2133179    proc contents data=EMWS8.Neural39_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural39_train out=_meta(keep=NAME) noprint;
2133180    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
2133181    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2133182    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2133183    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2133184    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2133185    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2133186    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2133187    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2133188    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2133189    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2133189  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 987 rows and 5 columns.
 
2133190    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2133191    proc append base=EMWS8.Ensmbl23_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl23_FCMP data=_tempx;
2133192    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL23_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 987 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL23_FCMP has 987 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2133193    filename _pref
2133193  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
2133194    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2133195    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
2133196   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2133197   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
2133198   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2133199   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
2133200   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
2133201   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2133202    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2133203    quit;
2133204    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2133205    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2133206    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2133207    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
2133208    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2133209    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2133210    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2133211    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2133212    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2133213    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
2133214    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2133215    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2133216    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2133217    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2133218    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2133219    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2133220    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
2133221    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
2133222    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2133223    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2133224    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2133225    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2133226    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2133227    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2133228    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2133229    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2133230    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2133230  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
2133231    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2133232    proc append base=EMWS8.Ensmbl23_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl23_FCMP data=_tempx;
2133233    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL23_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL23_FCMP has 991 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2133234    filename _pref
2133234  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
2133235    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2133236    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
2133237   +
2133238   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
2133239   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
2133239  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
2133240   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
2133241   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
2133242   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
2133243   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
2133244   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2133245    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2133246    quit;
2133247    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2133248    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2133249    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2133250    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
2133251    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2133252    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2133253    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2133254    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2133255    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2133256    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
2133257    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2133258    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2133259    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2133260    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2133261    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2133262    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2133263    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
2133264    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2133265    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2133266    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2133267    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2133268    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2133269    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2133270    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2133271    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2133272    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2133273    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2133273  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
2133274    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2133275    proc append base=EMWS8.Ensmbl23_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl23_FCMP data=_tempx;
2133276    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL23_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL23_FCMP has 1030 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2133277    filename _pref
2133277  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
2133278    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2133279    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
2133280   +
2133281   +
2133282   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
2133283   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
2133284   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
2133285   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
2133286   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
2133287   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2133288   +
2133289   +
2133290   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
2133291   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
2133292   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
2133293   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
2133294   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
2133295   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2133296   +
2133297   +
2133298   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
2133299   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
2133300   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
2133301   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
2133302   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
2133303   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2133304   +
2133305   +
2133306   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
2133307   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
2133308   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
2133309   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
2133310   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
2133311   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2133312   +
2133313   +
2133314   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
2133315   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
2133316   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
2133317   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
2133318   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
2133319   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2133320   +
2133321   +
2133322   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
2133323   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
2133324   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
2133325   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
2133326   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
2133327   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2133328   +
2133329   +
2133330   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
2133331   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
2133332   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
2133333   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
2133334   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
2133335   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2133336   +
2133337   +
2133338   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
2133339   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
2133340   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
2133341   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
2133342   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
2133343   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2133344   +if
2133345   +_FILTERNORM1 not in ( '.')
2133346   + and
2133347   +_FILTERNORM2 not in ( '.')
2133348   + and
2133349   +_FILTERNORM3 not in ( '.')
2133350   + and
2133351   +_FILTERNORM4 not in ( '.')
2133352   + and
2133353   +_FILTERNORM5 not in ( '.')
2133354   + and
2133355   +_FILTERNORM6 not in ( '.')
2133356   + and
2133357   +_FILTERNORM7 not in ( ' ')
2133358   + and
2133359   +_FILTERNORM8 not in ( ' ')
2133360   +and
2133361   +( Dt_Customer ne .)
2133362   +and ( Income ne . and (Income<=107000))
2133363   +and ( Kidhome ne .)
2133364   +and ( MntFishProducts ne .)
2133365   +and ( MntFruits ne .)
2133366   +and ( MntGoldProds ne .)
2133367   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
2133368   +and ( MntSweetProducts ne .)
2133369   +and ( MntWines ne .)
2133370   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
2133371   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
2133372   +and ( NumStorePurchases ne .)
2133373   +and ( NumWebPurchases ne .)
2133374   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
2133375   +and ( Recency ne .)
2133376   +and ( Teenhome ne .)
2133377   +and ( Year_Birth ne .)
2133378   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
2133379   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
2133380   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
2133381   +end;
MPRINT(EM_DIAGRAM):   end;
2133382   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
2133383   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2133384    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2133385    quit;
2133386    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2133387    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2133388    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2133389    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
2133390    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2133391    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2133392    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2133393    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2133394    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2133395    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
2133396    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2133397    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2133398    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2133399    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2133400    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2133401    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2133402    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
2133403    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
2133404    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2133405    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2133406    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2133407    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2133408    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2133409    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2133410    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2133411    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2133412    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2133412  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
2133413    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2133414    proc append base=EMWS8.Ensmbl23_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl23_FCMP data=_tempx;
2133415    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL23_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL23_FCMP has 1096 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2133416    %macro varDept(fcmpdata=,id=);
2133417    %global nobs&id scoreFlag&id;
2133418    %let scoreFlag&id = 0;
2133419    %if &id=1 or ^&fcmpStart %then %do;
2133420    proc sort data=&fcmpdata out=_temp&id nodupkey;
2133421    by NAME;
2133422    where id=&id and LHS in( %let j=1;
2133423    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
2133424    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
2133425    "&var" %let j = %eval(&j+1);
2133426    %end;
2133427    );
2133428    run;
2133429    %let dsid = %sysfunc(open(_temp&id));
2133430    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2133431    %let dsid = %sysfunc(close(&dsid));
2133432    %if &&nobs&id %then %do;
2133433    %let scoreFlag&id = 1;
2133434    %let fcmpStart = 1;
2133435    %end;
2133436    %else %let fcmpStart = 0;
2133437    %end;
2133438    %else %do;
2133439    proc sort data=&fcmpdata out=_tempid;
2133440    where id=&id;
2133441    by LHS;
2133442    run;
2133443    %let dsid = %sysfunc(open(_tempid));
2133444    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2133445    %let dsid = %sysfunc(close(&dsid));
2133446    %if ^&&nobs&id %then %do;
2133447    proc datasets lib=work nolist;
2133448    delete _tempid;
2133449    run;
2133450    quit;
2133451    %end;
2133452    %else %do;
2133453    data _tempAll;
2133454    set %let j=%eval(&id-1);
2133455    %do x=1 %to &j;
2133456    %if &&nobs&x %then %do;
2133457    _temp&x %end;
2133458    %end;
2133459    ;
2133460    run;
2133461    proc sql;
2133462    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
2133462  ! work._tempid p2 where p.name=p2.lhs;
2133463    quit;
2133464    data _temp&id;
2133465    set _temp&id;
2133466    where LHS ne '' and NAME ne '' and Node ne '';
2133467    run;
2133468    proc datasets lib=work nolist;
2133469    delete _tempAll;
2133470    run;
2133471    %let dsid = %sysfunc(open(_temp&id));
2133472    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2133473    %let dsid = %sysfunc(close(&dsid));
2133474    %if ^&&nobs&id %then %do;
2133475    proc datasets lib=work nolist;
2133476    delete _temp&id;
2133477    run;
2133478    quit;
2133479    %end;
2133480    %else %do;
2133481    %let scoreFlag&id = 1;
2133482    data _temp&id;
2133483    set _temp&id;
2133484    where LHS ne NAME and node ne '';
2133485    run;
2133486    %let dsid = %sysfunc(open(_temp&id));
2133487    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2133488    %let dsid = %sysfunc(close(&dsid));
2133489    %if ^&&nobs&id %then %do;
2133490    proc datasets lib=work nolist;
2133491    delete _temp&id;
2133492    run;
2133493    quit;
2133494    %end;
2133495    %else %do;
2133496    proc sort data=_temp&id nodupkey;
2133497    by LHS NAME;
2133498    run;
2133499    %end;
2133500    %end;
2133501    %end;
2133502    %end;
2133503    %mend varDept;
2133504    %macro optCode(outdata=fcmpdata);
2133505    %global fcmpStart;
2133506    %let fcmpStart = 0;
2133507    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
2133508    %let NumNodes=9;
2133509    %do k=1 %to &NumNodes;
2133510    %vardept(fcmpdata=&outdata, id=&k);
2133511    %end;
2133512    %mend optCode;
2133513    %optcode(outData=EMWS8.Ensmbl23_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl23_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL23_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl23_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 106 observations read from the data set EMWS8.ENSMBL23_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 79 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 27 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl23_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL23_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl23_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL23_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl23_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL23_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 27 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 2 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl23_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL23_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 29 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 33 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl23_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL23_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: There were 33 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 62 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.06 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl23_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL23_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.22 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl23_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL23_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
2133514    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
2133515    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
2133516    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
2133517    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2133518    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
2133519    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
2133520    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
2133521    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2133522    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2133523    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
2133523  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 2 rows and 3 columns.
 
2133524    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2133525    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
2133526    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
2133527    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 2 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 2 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2133528    filename _pref
2133528  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural38\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Neural38\EMPUBLISHSCORE.sas";
2133529    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2133530    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Neural38\EMPUBLISHSCORE.sas.
2133531   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2133532   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2133533   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2133534   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2133535   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2133536   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2133537   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2133538   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2133539   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2133540   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2133541   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2133542   +LENGTH _WARN_ $4
2133543   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
2133544   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2133545   +
2133546   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2133547   +
2133548   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2133549   +
2133550   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2133551   +
2133552   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2133553   +
2133554   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2133555   +
2133556   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2133557   +
2133558   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2133559   +
2133560   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2133561   +
2133562   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2133563   +
2133564   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2133565   +
2133566   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2133567   +
2133568   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2133569   +
2133570   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2133571   +
2133572   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2133573   +
2133574   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2133575   +
2133576   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2133577   +
2133578   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2133579   +
2133580   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2133581   +
2133582   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2133583   +
2133584   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2133585   +
2133586   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2133587   +
2133588   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2133589   +
2133590   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2133591   +
2133592   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2133593   +
2133594   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2133595   +
2133596   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2133597   +
2133598   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2133599   +
2133600   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2133601   +
2133602   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2133603   +
2133604   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2133605   +
2133606   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
2133607   +
2133608   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
2133609   +
2133610   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
2133611   +
2133612   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2133613   +
2133614   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2133615   +
2133616   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2133617   +
2133618   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2133619   +
2133620   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2133621   +
2133622   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2133623   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2133624   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2133625   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2133626   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2133627   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2133628   +end;
MPRINT(EM_DIAGRAM):   end;
2133629   +else do;
MPRINT(EM_DIAGRAM):   else do;
2133630   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2133631   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2133632   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2133633   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2133634   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2133635   +   end;
MPRINT(EM_DIAGRAM):   end;
2133636   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2133637   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2133638   +   end;
MPRINT(EM_DIAGRAM):   end;
2133639   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2133640   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2133641   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2133642   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2133643   +   end;
MPRINT(EM_DIAGRAM):   end;
2133644   +end;
MPRINT(EM_DIAGRAM):   end;
2133645   +
2133646   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2133647   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2133648   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2133649   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2133650   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2133651   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2133652   +end;
MPRINT(EM_DIAGRAM):   end;
2133653   +else do;
MPRINT(EM_DIAGRAM):   else do;
2133654   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2133655   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2133656   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2133657   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2133658   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2133659   +   end;
MPRINT(EM_DIAGRAM):   end;
2133660   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2133661   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2133662   +   end;
MPRINT(EM_DIAGRAM):   end;
2133663   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2133664   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2133665   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2133666   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2133667   +   end;
MPRINT(EM_DIAGRAM):   end;
2133668   +end;
MPRINT(EM_DIAGRAM):   end;
2133669   +
2133670   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2133671   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2133672   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2133673   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2133674   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2133675   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2133676   +end;
MPRINT(EM_DIAGRAM):   end;
2133677   +else do;
MPRINT(EM_DIAGRAM):   else do;
2133678   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2133679   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2133680   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2133681   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2133682   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2133683   +   end;
MPRINT(EM_DIAGRAM):   end;
2133684   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2133685   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2133686   +   end;
MPRINT(EM_DIAGRAM):   end;
2133687   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2133688   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2133689   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2133690   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2133691   +   end;
MPRINT(EM_DIAGRAM):   end;
2133692   +end;
MPRINT(EM_DIAGRAM):   end;
2133693   +
2133694   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2133695   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2133696   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2133697   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2133698   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2133699   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2133700   +end;
MPRINT(EM_DIAGRAM):   end;
2133701   +else do;
MPRINT(EM_DIAGRAM):   else do;
2133702   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2133703   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2133704   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2133705   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2133706   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2133707   +   end;
MPRINT(EM_DIAGRAM):   end;
2133708   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2133709   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2133710   +   end;
MPRINT(EM_DIAGRAM):   end;
2133711   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2133712   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2133713   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2133714   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2133715   +   end;
MPRINT(EM_DIAGRAM):   end;
2133716   +end;
MPRINT(EM_DIAGRAM):   end;
2133717   +
2133718   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2133719   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2133720   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2133721   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2133722   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2133723   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2133724   +end;
MPRINT(EM_DIAGRAM):   end;
2133725   +else do;
MPRINT(EM_DIAGRAM):   else do;
2133726   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2133727   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2133728   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2133729   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2133730   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2133731   +   end;
MPRINT(EM_DIAGRAM):   end;
2133732   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2133733   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2133734   +   end;
MPRINT(EM_DIAGRAM):   end;
2133735   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2133736   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2133737   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2133738   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2133739   +   end;
MPRINT(EM_DIAGRAM):   end;
2133740   +end;
MPRINT(EM_DIAGRAM):   end;
2133741   +
2133742   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2133743   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2133744   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2133745   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2133746   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2133747   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2133748   +end;
MPRINT(EM_DIAGRAM):   end;
2133749   +else do;
MPRINT(EM_DIAGRAM):   else do;
2133750   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2133751   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2133752   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2133753   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2133754   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2133755   +   end;
MPRINT(EM_DIAGRAM):   end;
2133756   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2133757   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2133758   +   end;
MPRINT(EM_DIAGRAM):   end;
2133759   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2133760   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2133761   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2133762   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2133763   +   end;
MPRINT(EM_DIAGRAM):   end;
2133764   +end;
MPRINT(EM_DIAGRAM):   end;
2133765   +
2133766   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2133767   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2133768   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2133769   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2133770   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2133771   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2133772   +end;
MPRINT(EM_DIAGRAM):   end;
2133773   +else do;
MPRINT(EM_DIAGRAM):   else do;
2133774   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2133775   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2133776   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2133777   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2133778   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2133779   +   end;
MPRINT(EM_DIAGRAM):   end;
2133780   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2133781   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2133782   +   end;
MPRINT(EM_DIAGRAM):   end;
2133783   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2133784   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2133785   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2133786   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2133787   +   end;
MPRINT(EM_DIAGRAM):   end;
2133788   +end;
MPRINT(EM_DIAGRAM):   end;
2133789   +
2133790   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2133791   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
2133792   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2133793   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2133794   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2133795   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2133796   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2133797   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2133798   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2133799   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2133800   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2133801   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2133802   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2133803   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2133804   +end;
MPRINT(EM_DIAGRAM):   end;
2133805   +else do;
MPRINT(EM_DIAGRAM):   else do;
2133806   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2133807   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2133808   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2133809   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2133810   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2133811   +   end;
MPRINT(EM_DIAGRAM):   end;
2133812   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2133813   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2133814   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2133815   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2133816   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2133817   +   end;
MPRINT(EM_DIAGRAM):   end;
2133818   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2133819   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2133820   +   end;
MPRINT(EM_DIAGRAM):   end;
2133821   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2133822   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2133823   +   end;
MPRINT(EM_DIAGRAM):   end;
2133824   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2133825   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2133826   +   end;
MPRINT(EM_DIAGRAM):   end;
2133827   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2133828   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2133829   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2133830   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2133831   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2133832   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2133833   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2133834   +   end;
MPRINT(EM_DIAGRAM):   end;
2133835   +end;
MPRINT(EM_DIAGRAM):   end;
2133836   +
2133837   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2133838   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2133839   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
2133840   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2133841   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2133842   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2133843   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2133844   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2133845   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2133846   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2133847   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2133848   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2133849   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2133850   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2133851   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2133852   +end;
MPRINT(EM_DIAGRAM):   end;
2133853   +else do;
MPRINT(EM_DIAGRAM):   else do;
2133854   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2133855   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2133856   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2133857   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2133858   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2133859   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2133860   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2133861   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2133862   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2133863   +         end;
MPRINT(EM_DIAGRAM):   end;
2133864   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2133865   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2133866   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2133867   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2133868   +            end;
MPRINT(EM_DIAGRAM):   end;
2133869   +         end;
MPRINT(EM_DIAGRAM):   end;
2133870   +      end;
MPRINT(EM_DIAGRAM):   end;
2133871   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2133872   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2133873   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2133874   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2133875   +         end;
MPRINT(EM_DIAGRAM):   end;
2133876   +      end;
MPRINT(EM_DIAGRAM):   end;
2133877   +   end;
MPRINT(EM_DIAGRAM):   end;
2133878   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2133879   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2133880   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2133881   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2133882   +      end;
MPRINT(EM_DIAGRAM):   end;
2133883   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2133884   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2133885   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2133886   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2133887   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2133888   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2133889   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2133890   +         end;
MPRINT(EM_DIAGRAM):   end;
2133891   +      end;
MPRINT(EM_DIAGRAM):   end;
2133892   +   end;
MPRINT(EM_DIAGRAM):   end;
2133893   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2133894   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2133895   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2133896   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2133897   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2133898   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2133899   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2133900   +   end;
MPRINT(EM_DIAGRAM):   end;
2133901   +end;
MPRINT(EM_DIAGRAM):   end;
2133902   +
2133903   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2133904   +*** Checking missing input Interval
2133905   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2133906   +
2133907   +IF NMISS(
2133908   +   AcceptedCmpTotal ,
2133909   +   Age ,
2133910   +   Frq ,
2133911   +   Income ,
2133912   +   Kidhome ,
2133913   +   MntFishProducts ,
2133914   +   MntFruits ,
2133915   +   MntGoldProds ,
2133916   +   MntSweetProducts ,
2133917   +   MonthsAsCustomer ,
2133918   +   NumDealsPurchases ,
2133919   +   NumWebVisitsMonth ,
2133920   +   RFMstat ,
2133921   +   RMntFrq ,
2133922   +   Recency ,
2133923   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome ,
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer ,
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
2133924   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2133925   +
2133926   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2133927   +END;
MPRINT(EM_DIAGRAM):   END;
2133928   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2133929   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
2133930   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2133931   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2133932   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2133933   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2133934   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2133935   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2133936   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2133937   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2133938   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2133939   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2133940   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2133941   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2133942   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2133943   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2133944   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2133945   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2133946   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 *
MonthsAsCustomer ;
2133947   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2133948   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2133949   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2133950   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2133951   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2133952   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2133953   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2133954   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2133955   +END;
MPRINT(EM_DIAGRAM):   END;
2133956   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2133957   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2133958   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2133959   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2133960   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2133961   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2133962   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2133963   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2133964   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2133965   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2133966   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2133967   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2133968   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2133969   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2133970   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2133971   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2133972   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2133973   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2133974   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2133975   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2133976   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
2133977   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2133978   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2133979   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2133980   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2133981   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2133982   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 *
MonthsAsCustomer ;
2133983   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2133984   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2133985   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2133986   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2133987   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2133988   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2133989   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2133990   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2133991   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2133992   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2133993   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2133994   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2133995   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2133996   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2133997   +END;
MPRINT(EM_DIAGRAM):   END;
2133998   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2133999   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
2134000   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2134001   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2134002   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
2134003   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2134004   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2134005   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
2134006   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2134007   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2134008   +   H11  =    -0.12735997892099 * S_AcceptedCmpTotal  +     0.05614113783048 *
2134009   +        S_Age  +     0.62712460637822 * S_Frq  +     0.12299131156999 *
2134010   +        S_Income  +    -0.48966666023107 * S_Kidhome
2134011   +          +    -0.02039894625139 * S_MntFishProducts
2134012   +          +    -0.46314393239988 * S_MntFruits  +    -0.08473184666241 *
2134013   +        S_MntGoldProds  +     0.08362335658545 * S_MntSweetProducts
2134014   +          +    -0.10405556335761 * S_MonthsAsCustomer
2134015   +          +    -0.51342273744068 * S_NumDealsPurchases
2134016   +          +    -0.03733960386951 * S_NumWebVisitsMonth
2134017   +          +    -0.17746951162034 * S_RFMstat  +     -0.4900258897048 *
2134018   +        S_RMntFrq  +     0.18043722262784 * S_Recency
2134019   +          +    -0.16370458409437 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.12735997892099 * S_AcceptedCmpTotal + 0.05614113783048 * S_Age
+ 0.62712460637822 * S_Frq + 0.12299131156999 * S_Income + -0.48966666023107 * S_Kidhome +
-0.02039894625139 * S_MntFishProducts + -0.46314393239988 * S_MntFruits + -0.08473184666241 *
S_MntGoldProds + 0.08362335658545 * S_MntSweetProducts + -0.10405556335761 *
S_MonthsAsCustomer + -0.51342273744068 * S_NumDealsPurchases + -0.03733960386951 *
S_NumWebVisitsMonth + -0.17746951162034 * S_RFMstat + -0.4900258897048 * S_RMntFrq +
0.18043722262784 * S_Recency + -0.16370458409437 * S_Teenhome ;
2134020   +   H12  =    -0.60633882410536 * S_AcceptedCmpTotal  +       0.224864344383 *
2134021   +        S_Age  +     1.39199458994411 * S_Frq  +     0.87162437846369 *
2134022   +        S_Income  +    -0.78349610624343 * S_Kidhome
2134023   +          +     0.11143790088856 * S_MntFishProducts
2134024   +          +    -0.55718313448059 * S_MntFruits  +    -0.21087085222526 *
2134025   +        S_MntGoldProds  +     0.02856888181428 * S_MntSweetProducts
2134026   +          +     0.32076375444952 * S_MonthsAsCustomer
2134027   +          +    -0.26990924990463 * S_NumDealsPurchases
2134028   +          +    -0.38394733388565 * S_NumWebVisitsMonth
2134029   +          +    -0.22782651153177 * S_RFMstat  +     0.22812202935498 *
2134030   +        S_RMntFrq  +    -0.19933331095407 * S_Recency
2134031   +          +    -0.70020220713535 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.60633882410536 * S_AcceptedCmpTotal + 0.224864344383 * S_Age +
1.39199458994411 * S_Frq + 0.87162437846369 * S_Income + -0.78349610624343 * S_Kidhome +
0.11143790088856 * S_MntFishProducts + -0.55718313448059 * S_MntFruits + -0.21087085222526 *
S_MntGoldProds + 0.02856888181428 * S_MntSweetProducts + 0.32076375444952 * S_MonthsAsCustomer
+ -0.26990924990463 * S_NumDealsPurchases + -0.38394733388565 * S_NumWebVisitsMonth +
-0.22782651153177 * S_RFMstat + 0.22812202935498 * S_RMntFrq + -0.19933331095407 * S_Recency +
-0.70020220713535 * S_Teenhome ;
2134032   +   H13  =    -0.13101581197148 * S_AcceptedCmpTotal  +     0.13628003311785 *
2134033   +        S_Age  +     0.36995757743109 * S_Frq  +    -0.29860018899791 *
2134034   +        S_Income  +     0.35747326688336 * S_Kidhome
2134035   +          +      0.0686999643098 * S_MntFishProducts
2134036   +          +     0.04887259723743 * S_MntFruits  +    -0.06102251488536 *
2134037   +        S_MntGoldProds  +     0.02326506142202 * S_MntSweetProducts
2134038   +          +     0.14271282712227 * S_MonthsAsCustomer
2134039   +          +    -0.13832369827798 * S_NumDealsPurchases
2134040   +          +    -0.47612163926952 * S_NumWebVisitsMonth
2134041   +          +    -0.06611946982584 * S_RFMstat  +     0.13861254443913 *
2134042   +        S_RMntFrq  +     0.58403001514589 * S_Recency
2134043   +          +     0.20007724178827 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.13101581197148 * S_AcceptedCmpTotal + 0.13628003311785 * S_Age
+ 0.36995757743109 * S_Frq + -0.29860018899791 * S_Income + 0.35747326688336 * S_Kidhome +
0.0686999643098 * S_MntFishProducts + 0.04887259723743 * S_MntFruits + -0.06102251488536 *
S_MntGoldProds + 0.02326506142202 * S_MntSweetProducts + 0.14271282712227 * S_MonthsAsCustomer
+ -0.13832369827798 * S_NumDealsPurchases + -0.47612163926952 * S_NumWebVisitsMonth +
-0.06611946982584 * S_RFMstat + 0.13861254443913 * S_RMntFrq + 0.58403001514589 * S_Recency +
0.20007724178827 * S_Teenhome ;
2134044   +   H11  = H11  +     0.84056686173766 * AcceptedCmp10
2134045   +          +    -0.24934706882838 * AcceptedCmp20  +     0.30196639473026 *
2134046   +        AcceptedCmp30  +     0.05258139446676 * AcceptedCmp40
2134047   +          +     0.67593676788479 * AcceptedCmp50  +     0.08683881940471 *
2134048   +        Complain0  +     0.18065485673242 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.84056686173766 * AcceptedCmp10 + -0.24934706882838 *
AcceptedCmp20 + 0.30196639473026 * AcceptedCmp30 + 0.05258139446676 * AcceptedCmp40 +
0.67593676788479 * AcceptedCmp50 + 0.08683881940471 * Complain0 + 0.18065485673242 *
HigherEducationBinary0 ;
2134049   +   H12  = H12  +    -0.04721322843232 * AcceptedCmp10
2134050   +          +    -0.86918240857339 * AcceptedCmp20  +    -0.72151645579567 *
2134051   +        AcceptedCmp30  +    -0.64210941414089 * AcceptedCmp40
2134052   +          +     0.33249469617845 * AcceptedCmp50  +    -0.47926491040481 *
2134053   +        Complain0  +     0.34126288384384 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.04721322843232 * AcceptedCmp10 + -0.86918240857339 *
AcceptedCmp20 + -0.72151645579567 * AcceptedCmp30 + -0.64210941414089 * AcceptedCmp40 +
0.33249469617845 * AcceptedCmp50 + -0.47926491040481 * Complain0 + 0.34126288384384 *
HigherEducationBinary0 ;
2134054   +   H13  = H13  +     0.00143925055481 * AcceptedCmp10
2134055   +          +     0.14964205194256 * AcceptedCmp20  +     0.11503898054899 *
2134056   +        AcceptedCmp30  +      0.0133572907593 * AcceptedCmp40
2134057   +          +     0.23211071198237 * AcceptedCmp50  +    -0.26237638274137 *
2134058   +        Complain0  +    -0.01756413200655 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.00143925055481 * AcceptedCmp10 + 0.14964205194256 *
AcceptedCmp20 + 0.11503898054899 * AcceptedCmp30 + 0.0133572907593 * AcceptedCmp40 +
0.23211071198237 * AcceptedCmp50 + -0.26237638274137 * Complain0 + -0.01756413200655 *
HigherEducationBinary0 ;
2134059   +   H11  = H11  +     0.29624759193414 * Education2n_Cycle
2134060   +          +    -0.40760427816833 * EducationBasic  +     0.00224467466349 *
2134061   +        EducationGraduation  +    -0.21511521624726 * EducationMaster
2134062   +          +     0.34831332012594 * Marital_StatusDivorced
2134063   +          +     0.03256682571475 * Marital_StatusMarried
2134064   +          +     0.14498541232514 * Marital_StatusSingle
2134065   +          +     0.30917752682842 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.29624759193414 * Education2n_Cycle + -0.40760427816833 *
EducationBasic + 0.00224467466349 * EducationGraduation + -0.21511521624726 * EducationMaster
+ 0.34831332012594 * Marital_StatusDivorced + 0.03256682571475 * Marital_StatusMarried +
0.14498541232514 * Marital_StatusSingle + 0.30917752682842 * Marital_StatusTogether ;
2134066   +   H12  = H12  +     0.04524701432166 * Education2n_Cycle
2134067   +          +     0.20523000800068 * EducationBasic  +     0.18270469986075 *
2134068   +        EducationGraduation  +    -0.26534207933216 * EducationMaster
2134069   +          +     0.05517800751028 * Marital_StatusDivorced
2134070   +          +    -0.70385428266578 * Marital_StatusMarried
2134071   +          +     0.85990109232942 * Marital_StatusSingle
2134072   +          +     -0.6453756400301 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.04524701432166 * Education2n_Cycle + 0.20523000800068 *
EducationBasic + 0.18270469986075 * EducationGraduation + -0.26534207933216 * EducationMaster
+ 0.05517800751028 * Marital_StatusDivorced + -0.70385428266578 * Marital_StatusMarried +
0.85990109232942 * Marital_StatusSingle + -0.6453756400301 * Marital_StatusTogether ;
2134073   +   H13  = H13  +    -0.36171919789219 * Education2n_Cycle
2134074   +          +      0.4064975673385 * EducationBasic  +    -0.07138108930929 *
2134075   +        EducationGraduation  +     0.21530846518532 * EducationMaster
2134076   +          +    -0.33904221640495 * Marital_StatusDivorced
2134077   +          +     0.10243956895845 * Marital_StatusMarried
2134078   +          +      -0.049421978948 * Marital_StatusSingle
2134079   +          +    -0.01189234912724 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.36171919789219 * Education2n_Cycle + 0.4064975673385 *
EducationBasic + -0.07138108930929 * EducationGraduation + 0.21530846518532 * EducationMaster
+ -0.33904221640495 * Marital_StatusDivorced + 0.10243956895845 * Marital_StatusMarried +
-0.049421978948 * Marital_StatusSingle + -0.01189234912724 * Marital_StatusTogether ;
2134080   +   H11  =    -1.19319602190903 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.19319602190903 + H11 ;
2134081   +   H12  =      -0.706001116518 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.706001116518 + H12 ;
2134082   +   H13  =    -0.05058509326004 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.05058509326004 + H13 ;
2134083   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
2134084   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
2134085   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
2134086   +END;
MPRINT(EM_DIAGRAM):   END;
2134087   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2134088   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
2134089   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
2134090   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
2134091   +END;
MPRINT(EM_DIAGRAM):   END;
2134092   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2134093   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2134094   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2134095   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2134096   +   P_DepVar1  =    -3.42974915011649 * H11  +     4.01757681065312 * H12
2134097   +          +    -4.86050966020391 * H13 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.42974915011649 * H11 + 4.01757681065312 * H12 +
-4.86050966020391 * H13 ;
2134098   +   P_DepVar1  =    -0.68121736689971 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.68121736689971 + P_DepVar1 ;
2134099   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2134100   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2134101   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2134102   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2134103   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2134104   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2134105   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2134106   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2134107   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2134108   +END;
MPRINT(EM_DIAGRAM):   END;
2134109   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2134110   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2134111   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2134112   +END;
MPRINT(EM_DIAGRAM):   END;
2134113   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2134114   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2134115   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2134116   +END;
MPRINT(EM_DIAGRAM):   END;
2134117   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2134118   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2134119   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2134120   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2134121   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2134122   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2134123   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2134124   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2134125   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2134126   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2134127   +END;
MPRINT(EM_DIAGRAM):   END;
2134128   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2134129   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2134130   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2134131   +drop
2134132   +H11
2134133   +H12
2134134   +H13
2134135   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 ;
2134136   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2134137    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2134138    quit;
2134139    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2134140    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2134141    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2134142    retain ID 2 Node "Neural38";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural38";
2134143    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2134144    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1745 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1745 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2134145    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2134146    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2134147    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1745 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1745 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2134148    proc sort data=EMWS8.Neural38_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural38_variableset out=_temp2(keep=NAME CREATOR);
2134149    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2134150    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.NEURAL38_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2134151    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2134152    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2134153    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2134154    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2134155    proc contents data=EMWS8.Neural38_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural38_train out=_meta(keep=NAME) noprint;
2134156    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
2134157    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2134158    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2134159    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2134160    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2134161    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2134162    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2134163    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2134164    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2134165    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2134165  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 937 rows and 5 columns.
 
2134166    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2134167    proc append base=EMWS8.Ensmbl23_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl23_FCMP data=_tempx;
2134168    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL23_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 937 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL23_FCMP has 937 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2134169    filename _pref
2134169  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
2134170    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2134171    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
2134172   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2134173   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
2134174   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2134175   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
2134176   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
2134177   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2134178    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2134179    quit;
2134180    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2134181    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2134182    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2134183    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
2134184    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2134185    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2134186    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2134187    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2134188    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2134189    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
2134190    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2134191    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2134192    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2134193    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2134194    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2134195    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2134196    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
2134197    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
2134198    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2134199    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2134200    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2134201    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2134202    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2134203    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2134204    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2134205    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2134206    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2134206  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
2134207    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2134208    proc append base=EMWS8.Ensmbl23_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl23_FCMP data=_tempx;
2134209    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL23_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL23_FCMP has 941 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2134210    filename _pref
2134210  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
2134211    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2134212    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
2134213   +
2134214   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
2134215   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
2134215  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
2134216   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
2134217   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
2134218   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
2134219   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
2134220   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2134221    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2134222    quit;
2134223    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2134224    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2134225    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2134226    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
2134227    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2134228    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2134229    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2134230    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2134231    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2134232    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
2134233    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2134234    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2134235    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2134236    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2134237    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2134238    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2134239    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
2134240    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2134241    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2134242    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2134243    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2134244    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2134245    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2134246    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2134247    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2134248    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2134249    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2134249  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
2134250    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2134251    proc append base=EMWS8.Ensmbl23_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl23_FCMP data=_tempx;
2134252    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL23_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL23_FCMP has 980 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2134253    filename _pref
2134253  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
2134254    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2134255    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
2134256   +
2134257   +
2134258   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
2134259   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
2134260   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
2134261   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
2134262   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
2134263   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2134264   +
2134265   +
2134266   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
2134267   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
2134268   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
2134269   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
2134270   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
2134271   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2134272   +
2134273   +
2134274   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
2134275   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
2134276   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
2134277   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
2134278   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
2134279   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2134280   +
2134281   +
2134282   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
2134283   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
2134284   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
2134285   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
2134286   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
2134287   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2134288   +
2134289   +
2134290   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
2134291   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
2134292   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
2134293   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
2134294   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
2134295   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2134296   +
2134297   +
2134298   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
2134299   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
2134300   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
2134301   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
2134302   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
2134303   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2134304   +
2134305   +
2134306   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
2134307   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
2134308   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
2134309   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
2134310   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
2134311   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2134312   +
2134313   +
2134314   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
2134315   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
2134316   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
2134317   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
2134318   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
2134319   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2134320   +if
2134321   +_FILTERNORM1 not in ( '.')
2134322   + and
2134323   +_FILTERNORM2 not in ( '.')
2134324   + and
2134325   +_FILTERNORM3 not in ( '.')
2134326   + and
2134327   +_FILTERNORM4 not in ( '.')
2134328   + and
2134329   +_FILTERNORM5 not in ( '.')
2134330   + and
2134331   +_FILTERNORM6 not in ( '.')
2134332   + and
2134333   +_FILTERNORM7 not in ( ' ')
2134334   + and
2134335   +_FILTERNORM8 not in ( ' ')
2134336   +and
2134337   +( Dt_Customer ne .)
2134338   +and ( Income ne . and (Income<=107000))
2134339   +and ( Kidhome ne .)
2134340   +and ( MntFishProducts ne .)
2134341   +and ( MntFruits ne .)
2134342   +and ( MntGoldProds ne .)
2134343   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
2134344   +and ( MntSweetProducts ne .)
2134345   +and ( MntWines ne .)
2134346   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
2134347   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
2134348   +and ( NumStorePurchases ne .)
2134349   +and ( NumWebPurchases ne .)
2134350   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
2134351   +and ( Recency ne .)
2134352   +and ( Teenhome ne .)
2134353   +and ( Year_Birth ne .)
2134354   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
2134355   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
2134356   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
2134357   +end;
MPRINT(EM_DIAGRAM):   end;
2134358   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
2134359   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2134360    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2134361    quit;
2134362    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2134363    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2134364    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2134365    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
2134366    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2134367    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2134368    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2134369    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2134370    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2134371    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
2134372    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2134373    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2134374    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2134375    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2134376    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2134377    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2134378    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
2134379    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
2134380    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2134381    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2134382    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2134383    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2134384    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2134385    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2134386    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2134387    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2134388    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2134388  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
2134389    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2134390    proc append base=EMWS8.Ensmbl23_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl23_FCMP data=_tempx;
2134391    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL23_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL23_FCMP has 1046 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2134392    %macro varDept(fcmpdata=,id=);
2134393    %global nobs&id scoreFlag&id;
2134394    %let scoreFlag&id = 0;
2134395    %if &id=1 or ^&fcmpStart %then %do;
2134396    proc sort data=&fcmpdata out=_temp&id nodupkey;
2134397    by NAME;
2134398    where id=&id and LHS in( %let j=1;
2134399    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
2134400    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
2134401    "&var" %let j = %eval(&j+1);
2134402    %end;
2134403    );
2134404    run;
2134405    %let dsid = %sysfunc(open(_temp&id));
2134406    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2134407    %let dsid = %sysfunc(close(&dsid));
2134408    %if &&nobs&id %then %do;
2134409    %let scoreFlag&id = 1;
2134410    %let fcmpStart = 1;
2134411    %end;
2134412    %else %let fcmpStart = 0;
2134413    %end;
2134414    %else %do;
2134415    proc sort data=&fcmpdata out=_tempid;
2134416    where id=&id;
2134417    by LHS;
2134418    run;
2134419    %let dsid = %sysfunc(open(_tempid));
2134420    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2134421    %let dsid = %sysfunc(close(&dsid));
2134422    %if ^&&nobs&id %then %do;
2134423    proc datasets lib=work nolist;
2134424    delete _tempid;
2134425    run;
2134426    quit;
2134427    %end;
2134428    %else %do;
2134429    data _tempAll;
2134430    set %let j=%eval(&id-1);
2134431    %do x=1 %to &j;
2134432    %if &&nobs&x %then %do;
2134433    _temp&x %end;
2134434    %end;
2134435    ;
2134436    run;
2134437    proc sql;
2134438    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
2134438  ! work._tempid p2 where p.name=p2.lhs;
2134439    quit;
2134440    data _temp&id;
2134441    set _temp&id;
2134442    where LHS ne '' and NAME ne '' and Node ne '';
2134443    run;
2134444    proc datasets lib=work nolist;
2134445    delete _tempAll;
2134446    run;
2134447    %let dsid = %sysfunc(open(_temp&id));
2134448    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2134449    %let dsid = %sysfunc(close(&dsid));
2134450    %if ^&&nobs&id %then %do;
2134451    proc datasets lib=work nolist;
2134452    delete _temp&id;
2134453    run;
2134454    quit;
2134455    %end;
2134456    %else %do;
2134457    %let scoreFlag&id = 1;
2134458    data _temp&id;
2134459    set _temp&id;
2134460    where LHS ne NAME and node ne '';
2134461    run;
2134462    %let dsid = %sysfunc(open(_temp&id));
2134463    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2134464    %let dsid = %sysfunc(close(&dsid));
2134465    %if ^&&nobs&id %then %do;
2134466    proc datasets lib=work nolist;
2134467    delete _temp&id;
2134468    run;
2134469    quit;
2134470    %end;
2134471    %else %do;
2134472    proc sort data=_temp&id nodupkey;
2134473    by LHS NAME;
2134474    run;
2134475    %end;
2134476    %end;
2134477    %end;
2134478    %end;
2134479    %mend varDept;
2134480    %macro optCode(outdata=fcmpdata);
2134481    %global fcmpStart;
2134482    %let fcmpStart = 0;
2134483    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
2134484    %let NumNodes=9;
2134485    %do k=1 %to &NumNodes;
2134486    %vardept(fcmpdata=&outdata, id=&k);
2134487    %end;
2134488    %mend optCode;
2134489    %optcode(outData=EMWS8.Ensmbl23_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl23_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL23_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl23_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 106 observations read from the data set EMWS8.ENSMBL23_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 79 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 27 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl23_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL23_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl23_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL23_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl23_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL23_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 27 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 2 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl23_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL23_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 29 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 33 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl23_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL23_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: There were 33 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 62 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl23_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL23_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl23_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL23_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
2134490    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
2134491    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
2134492    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
2134493    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2134494    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
2134495    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
2134496    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
2134497    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2134498    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2134499    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
2134499  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 2 rows and 3 columns.
 
2134500    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
2134501    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
2134502    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
2134503    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 2 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 2 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2134504    filename _pref
2134504  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural37\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Neural37\EMPUBLISHSCORE.sas";
2134505    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2134506    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Neural37\EMPUBLISHSCORE.sas.
2134507   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2134508   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2134509   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2134510   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2134511   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2134512   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2134513   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2134514   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2134515   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2134516   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2134517   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2134518   +LENGTH _WARN_ $4
2134519   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
2134520   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2134521   +
2134522   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2134523   +
2134524   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2134525   +
2134526   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2134527   +
2134528   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2134529   +
2134530   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2134531   +
2134532   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2134533   +
2134534   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2134535   +
2134536   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2134537   +
2134538   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2134539   +
2134540   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2134541   +
2134542   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2134543   +
2134544   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2134545   +
2134546   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2134547   +
2134548   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2134549   +
2134550   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2134551   +
2134552   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2134553   +
2134554   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2134555   +
2134556   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2134557   +
2134558   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2134559   +
2134560   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2134561   +
2134562   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2134563   +
2134564   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2134565   +
2134566   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2134567   +
2134568   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2134569   +
2134570   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2134571   +
2134572   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2134573   +
2134574   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2134575   +
2134576   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2134577   +
2134578   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2134579   +
2134580   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2134581   +
2134582   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
2134583   +
2134584   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
2134585   +
2134586   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2134587   +
2134588   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2134589   +
2134590   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2134591   +
2134592   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2134593   +
2134594   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2134595   +
2134596   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2134597   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2134598   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2134599   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2134600   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2134601   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2134602   +end;
MPRINT(EM_DIAGRAM):   end;
2134603   +else do;
MPRINT(EM_DIAGRAM):   else do;
2134604   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2134605   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2134606   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2134607   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2134608   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2134609   +   end;
MPRINT(EM_DIAGRAM):   end;
2134610   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2134611   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2134612   +   end;
MPRINT(EM_DIAGRAM):   end;
2134613   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2134614   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2134615   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2134616   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2134617   +   end;
MPRINT(EM_DIAGRAM):   end;
2134618   +end;
MPRINT(EM_DIAGRAM):   end;
2134619   +
2134620   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2134621   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2134622   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2134623   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2134624   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2134625   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2134626   +end;
MPRINT(EM_DIAGRAM):   end;
2134627   +else do;
MPRINT(EM_DIAGRAM):   else do;
2134628   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2134629   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2134630   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2134631   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2134632   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2134633   +   end;
MPRINT(EM_DIAGRAM):   end;
2134634   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2134635   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2134636   +   end;
MPRINT(EM_DIAGRAM):   end;
2134637   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2134638   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2134639   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2134640   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2134641   +   end;
MPRINT(EM_DIAGRAM):   end;
2134642   +end;
MPRINT(EM_DIAGRAM):   end;
2134643   +
2134644   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2134645   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2134646   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2134647   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2134648   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2134649   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2134650   +end;
MPRINT(EM_DIAGRAM):   end;
2134651   +else do;
MPRINT(EM_DIAGRAM):   else do;
2134652   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2134653   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2134654   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2134655   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2134656   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2134657   +   end;
MPRINT(EM_DIAGRAM):   end;
2134658   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2134659   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2134660   +   end;
MPRINT(EM_DIAGRAM):   end;
2134661   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2134662   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2134663   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2134664   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2134665   +   end;
MPRINT(EM_DIAGRAM):   end;
2134666   +end;
MPRINT(EM_DIAGRAM):   end;
2134667   +
2134668   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2134669   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2134670   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2134671   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2134672   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2134673   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2134674   +end;
MPRINT(EM_DIAGRAM):   end;
2134675   +else do;
MPRINT(EM_DIAGRAM):   else do;
2134676   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2134677   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2134678   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2134679   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2134680   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2134681   +   end;
MPRINT(EM_DIAGRAM):   end;
2134682   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2134683   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2134684   +   end;
MPRINT(EM_DIAGRAM):   end;
2134685   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2134686   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2134687   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2134688   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2134689   +   end;
MPRINT(EM_DIAGRAM):   end;
2134690   +end;
MPRINT(EM_DIAGRAM):   end;
2134691   +
2134692   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2134693   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2134694   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2134695   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2134696   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2134697   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2134698   +end;
MPRINT(EM_DIAGRAM):   end;
2134699   +else do;
MPRINT(EM_DIAGRAM):   else do;
2134700   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2134701   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2134702   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2134703   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2134704   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2134705   +   end;
MPRINT(EM_DIAGRAM):   end;
2134706   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2134707   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2134708   +   end;
MPRINT(EM_DIAGRAM):   end;
2134709   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2134710   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2134711   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2134712   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2134713   +   end;
MPRINT(EM_DIAGRAM):   end;
2134714   +end;
MPRINT(EM_DIAGRAM):   end;
2134715   +
2134716   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2134717   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2134718   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2134719   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2134720   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2134721   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2134722   +end;
MPRINT(EM_DIAGRAM):   end;
2134723   +else do;
MPRINT(EM_DIAGRAM):   else do;
2134724   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2134725   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2134726   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2134727   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2134728   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2134729   +   end;
MPRINT(EM_DIAGRAM):   end;
2134730   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2134731   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2134732   +   end;
MPRINT(EM_DIAGRAM):   end;
2134733   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2134734   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2134735   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2134736   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2134737   +   end;
MPRINT(EM_DIAGRAM):   end;
2134738   +end;
MPRINT(EM_DIAGRAM):   end;
2134739   +
2134740   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2134741   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2134742   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2134743   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2134744   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2134745   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2134746   +end;
MPRINT(EM_DIAGRAM):   end;
2134747   +else do;
MPRINT(EM_DIAGRAM):   else do;
2134748   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2134749   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2134750   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2134751   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2134752   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2134753   +   end;
MPRINT(EM_DIAGRAM):   end;
2134754   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2134755   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2134756   +   end;
MPRINT(EM_DIAGRAM):   end;
2134757   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2134758   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2134759   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2134760   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2134761   +   end;
MPRINT(EM_DIAGRAM):   end;
2134762   +end;
MPRINT(EM_DIAGRAM):   end;
2134763   +
2134764   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2134765   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
2134766   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2134767   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2134768   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2134769   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2134770   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2134771   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2134772   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2134773   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2134774   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2134775   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2134776   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2134777   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2134778   +end;
MPRINT(EM_DIAGRAM):   end;
2134779   +else do;
MPRINT(EM_DIAGRAM):   else do;
2134780   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2134781   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2134782   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2134783   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2134784   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2134785   +   end;
MPRINT(EM_DIAGRAM):   end;
2134786   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2134787   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2134788   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2134789   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2134790   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2134791   +   end;
MPRINT(EM_DIAGRAM):   end;
2134792   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2134793   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2134794   +   end;
MPRINT(EM_DIAGRAM):   end;
2134795   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2134796   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2134797   +   end;
MPRINT(EM_DIAGRAM):   end;
2134798   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2134799   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2134800   +   end;
MPRINT(EM_DIAGRAM):   end;
2134801   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2134802   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2134803   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2134804   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2134805   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2134806   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2134807   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2134808   +   end;
MPRINT(EM_DIAGRAM):   end;
2134809   +end;
MPRINT(EM_DIAGRAM):   end;
2134810   +
2134811   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2134812   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2134813   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
2134814   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2134815   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2134816   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2134817   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2134818   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2134819   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2134820   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2134821   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2134822   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2134823   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2134824   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2134825   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2134826   +end;
MPRINT(EM_DIAGRAM):   end;
2134827   +else do;
MPRINT(EM_DIAGRAM):   else do;
2134828   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2134829   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2134830   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2134831   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2134832   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2134833   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2134834   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2134835   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2134836   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2134837   +         end;
MPRINT(EM_DIAGRAM):   end;
2134838   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2134839   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2134840   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2134841   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2134842   +            end;
MPRINT(EM_DIAGRAM):   end;
2134843   +         end;
MPRINT(EM_DIAGRAM):   end;
2134844   +      end;
MPRINT(EM_DIAGRAM):   end;
2134845   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2134846   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2134847   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2134848   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2134849   +         end;
MPRINT(EM_DIAGRAM):   end;
2134850   +      end;
MPRINT(EM_DIAGRAM):   end;
2134851   +   end;
MPRINT(EM_DIAGRAM):   end;
2134852   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2134853   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2134854   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2134855   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2134856   +      end;
MPRINT(EM_DIAGRAM):   end;
2134857   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2134858   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2134859   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2134860   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2134861   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2134862   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2134863   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2134864   +         end;
MPRINT(EM_DIAGRAM):   end;
2134865   +      end;
MPRINT(EM_DIAGRAM):   end;
2134866   +   end;
MPRINT(EM_DIAGRAM):   end;
2134867   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2134868   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2134869   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2134870   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2134871   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2134872   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2134873   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2134874   +   end;
MPRINT(EM_DIAGRAM):   end;
2134875   +end;
MPRINT(EM_DIAGRAM):   end;
2134876   +
2134877   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2134878   +*** Checking missing input Interval
2134879   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2134880   +
2134881   +IF NMISS(
2134882   +   AcceptedCmpTotal ,
2134883   +   Age ,
2134884   +   Frq ,
2134885   +   Income ,
2134886   +   Kidhome ,
2134887   +   MntFishProducts ,
2134888   +   MntFruits ,
2134889   +   MntGoldProds ,
2134890   +   MntSweetProducts ,
2134891   +   MonthsAsCustomer ,
2134892   +   NumDealsPurchases ,
2134893   +   NumWebVisitsMonth ,
2134894   +   RFMstat ,
2134895   +   RMntFrq ,
2134896   +   Recency ,
2134897   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome ,
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer ,
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
2134898   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2134899   +
2134900   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2134901   +END;
MPRINT(EM_DIAGRAM):   END;
2134902   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2134903   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
2134904   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2134905   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2134906   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2134907   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2134908   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2134909   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2134910   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2134911   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2134912   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2134913   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2134914   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2134915   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2134916   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2134917   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2134918   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2134919   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2134920   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 *
MonthsAsCustomer ;
2134921   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2134922   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2134923   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2134924   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2134925   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2134926   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2134927   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2134928   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2134929   +END;
MPRINT(EM_DIAGRAM):   END;
2134930   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2134931   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2134932   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2134933   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2134934   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2134935   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2134936   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2134937   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2134938   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2134939   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2134940   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2134941   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2134942   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2134943   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2134944   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2134945   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2134946   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2134947   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2134948   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2134949   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2134950   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
2134951   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2134952   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2134953   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2134954   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2134955   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2134956   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 *
MonthsAsCustomer ;
2134957   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2134958   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2134959   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2134960   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2134961   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2134962   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2134963   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2134964   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2134965   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2134966   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2134967   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2134968   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2134969   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2134970   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2134971   +END;
MPRINT(EM_DIAGRAM):   END;
2134972   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2134973   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
2134974   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2134975   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2134976   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
2134977   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2134978   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2134979   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
2134980   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2134981   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2134982   +   H11  =     0.02350954951536 * S_AcceptedCmpTotal  +     0.03219603688042 *
2134983   +        S_Age  +    -0.05789460883987 * S_Frq  +    -0.44265601825308 *
2134984   +        S_Income  +     0.20165551633113 * S_Kidhome
2134985   +          +     0.00056309050317 * S_MntFishProducts
2134986   +          +     0.05001720173625 * S_MntFruits  +      0.0052212271793 *
2134987   +        S_MntGoldProds  +     0.05669192458513 * S_MntSweetProducts
2134988   +          +    -0.04270777222511 * S_MonthsAsCustomer
2134989   +          +    -0.09478064763989 * S_NumDealsPurchases
2134990   +          +    -0.14700428312188 * S_NumWebVisitsMonth
2134991   +          +    -0.01952994747701 * S_RFMstat  +    -0.07485496116647 *
2134992   +        S_RMntFrq  +     0.43424535825498 * S_Recency
2134993   +          +     0.31343234855137 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.02350954951536 * S_AcceptedCmpTotal + 0.03219603688042 * S_Age +
-0.05789460883987 * S_Frq + -0.44265601825308 * S_Income + 0.20165551633113 * S_Kidhome +
0.00056309050317 * S_MntFishProducts + 0.05001720173625 * S_MntFruits + 0.0052212271793 *
S_MntGoldProds + 0.05669192458513 * S_MntSweetProducts + -0.04270777222511 *
S_MonthsAsCustomer + -0.09478064763989 * S_NumDealsPurchases + -0.14700428312188 *
S_NumWebVisitsMonth + -0.01952994747701 * S_RFMstat + -0.07485496116647 * S_RMntFrq +
0.43424535825498 * S_Recency + 0.31343234855137 * S_Teenhome ;
2134994   +   H12  =    -0.19856399125523 * S_AcceptedCmpTotal  +     0.11288759015424 *
2134995   +        S_Age  +     1.42026893919787 * S_Frq  +       0.589558227778 *
2134996   +        S_Income  +    -0.30460976693199 * S_Kidhome
2134997   +          +    -0.24231306090193 * S_MntFishProducts
2134998   +          +     0.04807947910877 * S_MntFruits  +    -0.18714547156261 *
2134999   +        S_MntGoldProds  +    -0.11212664938439 * S_MntSweetProducts
2135000   +          +     0.10352770685507 * S_MonthsAsCustomer
2135001   +          +    -0.68489181638757 * S_NumDealsPurchases
2135002   +          +    -0.58100230229526 * S_NumWebVisitsMonth
2135003   +          +    -0.21690205060235 * S_RFMstat  +    -0.28659625619875 *
2135004   +        S_RMntFrq  +     0.66583235171642 * S_Recency
2135005   +          +    -0.26587787276778 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.19856399125523 * S_AcceptedCmpTotal + 0.11288759015424 * S_Age
+ 1.42026893919787 * S_Frq + 0.589558227778 * S_Income + -0.30460976693199 * S_Kidhome +
-0.24231306090193 * S_MntFishProducts + 0.04807947910877 * S_MntFruits + -0.18714547156261 *
S_MntGoldProds + -0.11212664938439 * S_MntSweetProducts + 0.10352770685507 *
S_MonthsAsCustomer + -0.68489181638757 * S_NumDealsPurchases + -0.58100230229526 *
S_NumWebVisitsMonth + -0.21690205060235 * S_RFMstat + -0.28659625619875 * S_RMntFrq +
0.66583235171642 * S_Recency + -0.26587787276778 * S_Teenhome ;
2135006   +   H11  = H11  +     0.19521386447058 * AcceptedCmp10
2135007   +          +     0.18607852296373 * AcceptedCmp20  +     0.24009670215096 *
2135008   +        AcceptedCmp30  +     0.16741973117307 * AcceptedCmp40
2135009   +          +     0.16327175443873 * AcceptedCmp50  +    -0.06966105959529 *
2135010   +        Complain0  +    -0.02379070405691 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.19521386447058 * AcceptedCmp10 + 0.18607852296373 *
AcceptedCmp20 + 0.24009670215096 * AcceptedCmp30 + 0.16741973117307 * AcceptedCmp40 +
0.16327175443873 * AcceptedCmp50 + -0.06966105959529 * Complain0 + -0.02379070405691 *
HigherEducationBinary0 ;
2135011   +   H12  = H12  +     0.48980882052858 * AcceptedCmp10
2135012   +          +     0.32550185290445 * AcceptedCmp20  +     0.53021728569974 *
2135013   +        AcceptedCmp30  +    -0.02665247681016 * AcceptedCmp40
2135014   +          +     0.16481850464637 * AcceptedCmp50  +    -0.24885732778394 *
2135015   +        Complain0  +      0.3756770500005 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.48980882052858 * AcceptedCmp10 + 0.32550185290445 *
AcceptedCmp20 + 0.53021728569974 * AcceptedCmp30 + -0.02665247681016 * AcceptedCmp40 +
0.16481850464637 * AcceptedCmp50 + -0.24885732778394 * Complain0 + 0.3756770500005 *
HigherEducationBinary0 ;
2135016   +   H11  = H11  +    -0.04910220307549 * Education2n_Cycle
2135017   +          +    -0.14822683093528 * EducationBasic  +    -0.01437827189793 *
2135018   +        EducationGraduation  +     0.16842374005205 * EducationMaster
2135019   +          +    -0.10287849585992 * Marital_StatusDivorced
2135020   +          +     0.29369580874074 * Marital_StatusMarried
2135021   +          +    -0.22665898953816 * Marital_StatusSingle
2135022   +          +     0.25111199473507 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.04910220307549 * Education2n_Cycle + -0.14822683093528 *
EducationBasic + -0.01437827189793 * EducationGraduation + 0.16842374005205 * EducationMaster
+ -0.10287849585992 * Marital_StatusDivorced + 0.29369580874074 * Marital_StatusMarried +
-0.22665898953816 * Marital_StatusSingle + 0.25111199473507 * Marital_StatusTogether ;
2135023   +   H12  = H12  +     -0.1595289487689 * Education2n_Cycle
2135024   +          +     0.10500818218587 * EducationBasic  +     0.01238201545994 *
2135025   +        EducationGraduation  +    -0.19432567398725 * EducationMaster
2135026   +          +    -0.15073478912147 * Marital_StatusDivorced
2135027   +          +    -0.32890578571742 * Marital_StatusMarried
2135028   +          +     0.41058038801034 * Marital_StatusSingle
2135029   +          +     -0.2663150742816 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.1595289487689 * Education2n_Cycle + 0.10500818218587 *
EducationBasic + 0.01238201545994 * EducationGraduation + -0.19432567398725 * EducationMaster
+ -0.15073478912147 * Marital_StatusDivorced + -0.32890578571742 * Marital_StatusMarried +
0.41058038801034 * Marital_StatusSingle + -0.2663150742816 * Marital_StatusTogether ;
2135030   +   H11  =       -0.01587726781 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.01587726781 + H11 ;
2135031   +   H12  =     1.48684792147138 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 1.48684792147138 + H12 ;
2135032   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
2135033   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
2135034   +END;
MPRINT(EM_DIAGRAM):   END;
2135035   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2135036   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
2135037   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
2135038   +END;
MPRINT(EM_DIAGRAM):   END;
2135039   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2135040   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2135041   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2135042   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2135043   +   P_DepVar1  =    -5.32177256661679 * H11  +    -3.04921302676243 * H12 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -5.32177256661679 * H11 + -3.04921302676243 * H12 ;
2135044   +   P_DepVar1  =     1.07591247640807 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.07591247640807 + P_DepVar1 ;
2135045   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2135046   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2135047   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2135048   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2135049   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2135050   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2135051   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2135052   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2135053   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2135054   +END;
MPRINT(EM_DIAGRAM):   END;
2135055   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2135056   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2135057   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2135058   +END;
MPRINT(EM_DIAGRAM):   END;
2135059   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2135060   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2135061   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2135062   +END;
MPRINT(EM_DIAGRAM):   END;
2135063   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2135064   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2135065   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2135066   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2135067   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2135068   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2135069   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2135070   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2135071   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2135072   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2135073   +END;
MPRINT(EM_DIAGRAM):   END;
2135074   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2135075   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2135076   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2135077   +drop
2135078   +H11
2135079   +H12
2135080   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 ;
2135081   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2135082    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2135083    quit;
2135084    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2135085    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2135086    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2135087    retain ID 2 Node "Neural37";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural37";
2135088    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2135089    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1599 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1599 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2135090    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2135091    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2135092    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1599 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1599 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2135093    proc sort data=EMWS8.Neural37_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural37_variableset out=_temp2(keep=NAME CREATOR);
2135094    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2135095    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.NEURAL37_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2135096    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2135097    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2135098    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2135099    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2135100    proc contents data=EMWS8.Neural37_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural37_train out=_meta(keep=NAME) noprint;
2135101    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
2135102    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2135103    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2135104    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2135105    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2135106    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2135107    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2135108    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2135109    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2135110    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2135110  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 887 rows and 5 columns.
 
2135111    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2135112    proc append base=EMWS8.Ensmbl23_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl23_FCMP data=_tempx;
2135113    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL23_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 887 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL23_FCMP has 887 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2135114    filename _pref
2135114  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
2135115    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2135116    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
2135117   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2135118   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
2135119   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2135120   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
2135121   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
2135122   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2135123    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2135124    quit;
2135125    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2135126    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2135127    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2135128    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
2135129    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2135130    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2135131    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2135132    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2135133    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2135134    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
2135135    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2135136    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2135137    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2135138    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2135139    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2135140    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2135141    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
2135142    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
2135143    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2135144    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2135145    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2135146    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2135147    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2135148    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2135149    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2135150    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2135151    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2135151  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
2135152    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2135153    proc append base=EMWS8.Ensmbl23_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl23_FCMP data=_tempx;
2135154    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL23_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL23_FCMP has 891 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2135155    filename _pref
2135155  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
2135156    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2135157    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
2135158   +
2135159   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
2135160   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
2135160  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
2135161   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
2135162   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
2135163   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
2135164   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
2135165   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2135166    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2135167    quit;
2135168    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2135169    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2135170    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2135171    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
2135172    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2135173    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2135174    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2135175    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2135176    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2135177    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
2135178    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2135179    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2135180    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2135181    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2135182    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2135183    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2135184    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
2135185    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2135186    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2135187    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2135188    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2135189    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2135190    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2135191    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2135192    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2135193    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2135194    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2135194  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
2135195    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2135196    proc append base=EMWS8.Ensmbl23_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl23_FCMP data=_tempx;
2135197    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL23_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL23_FCMP has 930 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2135198    filename _pref
2135198  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
2135199    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2135200    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
2135201   +
2135202   +
2135203   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
2135204   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
2135205   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
2135206   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
2135207   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
2135208   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2135209   +
2135210   +
2135211   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
2135212   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
2135213   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
2135214   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
2135215   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
2135216   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2135217   +
2135218   +
2135219   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
2135220   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
2135221   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
2135222   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
2135223   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
2135224   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2135225   +
2135226   +
2135227   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
2135228   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
2135229   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
2135230   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
2135231   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
2135232   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2135233   +
2135234   +
2135235   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
2135236   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
2135237   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
2135238   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
2135239   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
2135240   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2135241   +
2135242   +
2135243   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
2135244   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
2135245   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
2135246   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
2135247   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
2135248   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2135249   +
2135250   +
2135251   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
2135252   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
2135253   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
2135254   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
2135255   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
2135256   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2135257   +
2135258   +
2135259   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
2135260   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
2135261   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
2135262   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
2135263   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
2135264   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2135265   +if
2135266   +_FILTERNORM1 not in ( '.')
2135267   + and
2135268   +_FILTERNORM2 not in ( '.')
2135269   + and
2135270   +_FILTERNORM3 not in ( '.')
2135271   + and
2135272   +_FILTERNORM4 not in ( '.')
2135273   + and
2135274   +_FILTERNORM5 not in ( '.')
2135275   + and
2135276   +_FILTERNORM6 not in ( '.')
2135277   + and
2135278   +_FILTERNORM7 not in ( ' ')
2135279   + and
2135280   +_FILTERNORM8 not in ( ' ')
2135281   +and
2135282   +( Dt_Customer ne .)
2135283   +and ( Income ne . and (Income<=107000))
2135284   +and ( Kidhome ne .)
2135285   +and ( MntFishProducts ne .)
2135286   +and ( MntFruits ne .)
2135287   +and ( MntGoldProds ne .)
2135288   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
2135289   +and ( MntSweetProducts ne .)
2135290   +and ( MntWines ne .)
2135291   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
2135292   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
2135293   +and ( NumStorePurchases ne .)
2135294   +and ( NumWebPurchases ne .)
2135295   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
2135296   +and ( Recency ne .)
2135297   +and ( Teenhome ne .)
2135298   +and ( Year_Birth ne .)
2135299   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
2135300   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
2135301   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
2135302   +end;
MPRINT(EM_DIAGRAM):   end;
2135303   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
2135304   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2135305    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2135306    quit;
2135307    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2135308    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2135309    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2135310    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
2135311    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2135312    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2135313    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2135314    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2135315    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2135316    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
2135317    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2135318    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2135319    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2135320    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2135321    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2135322    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2135323    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
2135324    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
2135325    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2135326    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2135327    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2135328    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2135329    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2135330    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2135331    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2135332    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2135333    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2135333  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
2135334    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2135335    proc append base=EMWS8.Ensmbl23_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl23_FCMP data=_tempx;
2135336    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL23_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL23_FCMP has 996 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2135337    %macro varDept(fcmpdata=,id=);
2135338    %global nobs&id scoreFlag&id;
2135339    %let scoreFlag&id = 0;
2135340    %if &id=1 or ^&fcmpStart %then %do;
2135341    proc sort data=&fcmpdata out=_temp&id nodupkey;
2135342    by NAME;
2135343    where id=&id and LHS in( %let j=1;
2135344    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
2135345    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
2135346    "&var" %let j = %eval(&j+1);
2135347    %end;
2135348    );
2135349    run;
2135350    %let dsid = %sysfunc(open(_temp&id));
2135351    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2135352    %let dsid = %sysfunc(close(&dsid));
2135353    %if &&nobs&id %then %do;
2135354    %let scoreFlag&id = 1;
2135355    %let fcmpStart = 1;
2135356    %end;
2135357    %else %let fcmpStart = 0;
2135358    %end;
2135359    %else %do;
2135360    proc sort data=&fcmpdata out=_tempid;
2135361    where id=&id;
2135362    by LHS;
2135363    run;
2135364    %let dsid = %sysfunc(open(_tempid));
2135365    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2135366    %let dsid = %sysfunc(close(&dsid));
2135367    %if ^&&nobs&id %then %do;
2135368    proc datasets lib=work nolist;
2135369    delete _tempid;
2135370    run;
2135371    quit;
2135372    %end;
2135373    %else %do;
2135374    data _tempAll;
2135375    set %let j=%eval(&id-1);
2135376    %do x=1 %to &j;
2135377    %if &&nobs&x %then %do;
2135378    _temp&x %end;
2135379    %end;
2135380    ;
2135381    run;
2135382    proc sql;
2135383    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
2135383  ! work._tempid p2 where p.name=p2.lhs;
2135384    quit;
2135385    data _temp&id;
2135386    set _temp&id;
2135387    where LHS ne '' and NAME ne '' and Node ne '';
2135388    run;
2135389    proc datasets lib=work nolist;
2135390    delete _tempAll;
2135391    run;
2135392    %let dsid = %sysfunc(open(_temp&id));
2135393    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2135394    %let dsid = %sysfunc(close(&dsid));
2135395    %if ^&&nobs&id %then %do;
2135396    proc datasets lib=work nolist;
2135397    delete _temp&id;
2135398    run;
2135399    quit;
2135400    %end;
2135401    %else %do;
2135402    %let scoreFlag&id = 1;
2135403    data _temp&id;
2135404    set _temp&id;
2135405    where LHS ne NAME and node ne '';
2135406    run;
2135407    %let dsid = %sysfunc(open(_temp&id));
2135408    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2135409    %let dsid = %sysfunc(close(&dsid));
2135410    %if ^&&nobs&id %then %do;
2135411    proc datasets lib=work nolist;
2135412    delete _temp&id;
2135413    run;
2135414    quit;
2135415    %end;
2135416    %else %do;
2135417    proc sort data=_temp&id nodupkey;
2135418    by LHS NAME;
2135419    run;
2135420    %end;
2135421    %end;
2135422    %end;
2135423    %end;
2135424    %mend varDept;
2135425    %macro optCode(outdata=fcmpdata);
2135426    %global fcmpStart;
2135427    %let fcmpStart = 0;
2135428    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
2135429    %let NumNodes=9;
2135430    %do k=1 %to &NumNodes;
2135431    %vardept(fcmpdata=&outdata, id=&k);
2135432    %end;
2135433    %mend optCode;
2135434    %optcode(outData=EMWS8.Ensmbl23_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl23_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL23_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl23_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 106 observations read from the data set EMWS8.ENSMBL23_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 79 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 27 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl23_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL23_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl23_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL23_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl23_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL23_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 27 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 2 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl23_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL23_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 29 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 33 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl23_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL23_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: There were 33 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 62 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl23_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL23_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl23_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL23_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
2135435    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
2135436    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
2135437    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
2135438    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2135439    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
2135440    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
2135441    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
2135442    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2135443    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2135444    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
2135444  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 2 rows and 3 columns.
 
2135445    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2135446    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
2135447    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
2135448    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 2 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 2 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2135449    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
2135450    * Ensmbl23: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Ensmbl23: Computing metadata for TRAIN data;
2135451    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
NOTE: View EMWS8.ENSMBL23_TRAIN.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl23\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.Ensmbl23_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.Ensmbl23_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.Ensmbl23_TRAIN out=WORK.M22216_Y noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M22216_Y;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M22216_Y(keep=name type length label format formatl
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl,
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd,
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat =
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl,
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M22216_Y;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M22216_Y;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M3M_EW9K NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3M_EW9K;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M3M_EW9K;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3C66FA2(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M3M_EW9K;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3M_EW9K;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M3M_EW9K;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN"
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO"
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON"
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD"
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" ))
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype =
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" ))
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT"
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB"
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType =
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA',
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W',
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL',
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT',
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3M_EW9K;
MPRINT(EMADVISECOLUMNS):   set WORK.M3M_EW9K;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL=
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY=
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT=
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL=
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural41_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural41_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl23_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Ensmbl23";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "Ensmbl23";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "Ensmbl23";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "Ensmbl23";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "Ensmbl23";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "Ensmbl23";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "Ensmbl23";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "Ensmbl23";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Ensmbl23";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "Ensmbl23";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl23: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   if NAME in( "I_DepVar" "F_DepVar" "U_DepVar" "_WARN_" "P_DepVar1"
"P_DepVar0" "R_DepVar1" "R_DepVar0" ) then CREATOR="Ensmbl23";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
2135771    data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
2135772    set EMWS8.Ensmbl23_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl23_EMINFO;
2135773    where DATA='Ensmbl23' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Ensmbl23' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE',
'MODEL');
2135774    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL23_EMINFO.
      WHERE (DATA='Ensmbl23') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2135775    data EMWS8.Ensmbl23_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl23_EMINFO;
2135776    length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
2135777    input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
2135778    cards;
MPRINT(EM_DIAGRAM):   cards;
 
NOTE: The data set EMWS8.ENSMBL23_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   run;
2135782    run;
2135783    data EMWS8.Ensmbl23_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl23_EMINFO;
2135784    set EMWS8.Ensmbl23_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl23_EMINFO WORK.MODELTEMP_INFO;
2135785    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS8.ENSMBL23_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.ENSMBL23_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2135786    proc sort data = EMWS8.Ensmbl23_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Ensmbl23_EMINFO NOTHREADS;
2135787    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
2135788    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS8.ENSMBL23_EMINFO.
NOTE: The data set EMWS8.ENSMBL23_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2135789    proc sort data = EMWS8.Neural41_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Neural41_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
2135790    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
2135791    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.NEURAL41_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2135792    proc sort data = EMWS8.Ensmbl23_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Ensmbl23_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
2135793    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
2135794    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.ENSMBL23_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2135795    data EMWS8.Ensmbl23_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl23_EMINFO;
2135796    merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
2135797    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
2135798    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.ENSMBL23_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2135799    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
2135800    delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
2135801    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
2135802    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
NOTE: View EMWS8.ENSMBL23_TRAIN.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
 
NOTE: View EMWS8.ENSMBL23_VALIDATE.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.04 seconds
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "21. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "19.03 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Report Log
Date:                21. April 2016
Time:                19.03 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O23MFORY
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl23\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O23MFORY new;
MPRINT(EM_DIAGRAM):   run;
2135826    data EMWS8.Ensmbl23_EMOUTFIT;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl23_EMOUTFIT;
2135827    set EMWS8.Ensmbl23_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl23_EMOUTFIT;
2135828    length TargetLabel $200;
MPRINT(EM_DIAGRAM):   length TargetLabel $200;
2135829    label targetLabel = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel,
2135829  ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   label targetLabel = "Target Label";
2135830    if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
2135831    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.ENSMBL23_EMOUTFIT.
NOTE: The data set EMWS8.ENSMBL23_EMOUTFIT has 1 observations and 20 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2135832    proc sort data=EMWS8.Ensmbl23_EMREPORTFIT nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.Ensmbl23_EMREPORTFIT nothreads;
2135833    by TARGET;
MPRINT(EM_DIAGRAM):   by TARGET;
2135834    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 9 observations read from the data set EMWS8.ENSMBL23_EMREPORTFIT.
NOTE: The data set EMWS8.ENSMBL23_EMREPORTFIT has 9 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2135835    %let _EMwarndup = 0;
2135836    %let _EMtargetdup =;
2135837    %let _EMASEtargetdup =;
2135838    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
2135839    set EMWS8.Ensmbl23_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl23_EMOUTFIT;
2135840    if .<_ASE_<0.000001 then do;
MPRINT(EM_DIAGRAM):   if .<_ASE_<0.000001 then do;
2135841    call symput('_EMwarndup', '1');
MPRINT(EM_DIAGRAM):   call symput('_EMwarndup', '1');
2135842    call symput('_EMtargetdup', target);
MPRINT(EM_DIAGRAM):   call symput('_EMtargetdup', target);
2135843    call symput('_EMASEtargetdup', put(_ASE_, best.));
MPRINT(EM_DIAGRAM):   call symput('_EMASEtargetdup', put(_ASE_, best.));
2135844    end;
MPRINT(EM_DIAGRAM):   end;
2135845    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.ENSMBL23_EMOUTFIT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2135846    proc sort data=EMWS8.Neural37_CMeta_TRAIN out=WORK.SUBSETINMETA;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.Neural37_CMeta_TRAIN out=WORK.SUBSETINMETA;
2135847    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2135848    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set EMWS8.NEURAL37_CMETA_TRAIN.
NOTE: The data set WORK.SUBSETINMETA has 44 observations and 21 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2135849    proc sort data=EMWS8.Ensmbl23_VariableSet out=WORK.SUBSETVARSET(keep=NAME REPORT);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Ensmbl23_VariableSet
out=WORK.SUBSETVARSET(keep=NAME REPORT);
2135850    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2135851    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.ENSMBL23_VARIABLESET.
NOTE: The data set WORK.SUBSETVARSET has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2135852    data WORK.ASSESS_META;
MPRINT(EM_DIAGRAM):   data WORK.ASSESS_META;
2135853    merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
MPRINT(EM_DIAGRAM):   merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
2135854    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2135855    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK.SUBSETINMETA.
NOTE: There were 34 observations read from the data set WORK.SUBSETVARSET.
NOTE: The data set WORK.ASSESS_META has 44 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2135856    data EM_temp_assessMeta;
MPRINT(EM_DIAGRAM):    data EM_temp_assessMeta;
2135857    set EMWS8.Ensmbl23_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl23_CMeta_TRAIN;
2135858    where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST')
2135858  ! ;
MPRINT(EM_DIAGRAM):   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION',
'ASSESS', 'COST');
2135859    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS8.ENSMBL23_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 8 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2135860    data EM_temp_assessdata;
MPRINT(EM_DIAGRAM):    data EM_temp_assessdata;
2135861    set EMWS8.Ensmbl23_TRAIN(keep=
2135862    F_DepVar
2135863    I_DepVar
2135864    P_DepVar0
2135865    P_DepVar1
2135866    R_DepVar0
2135867    R_DepVar1
2135868    U_DepVar
2135869    _WARN_
2135870    DepVar
2135871    );
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl23_TRAIN(keep= F_DepVar I_DepVar P_DepVar0 P_DepVar1
R_DepVar0 R_DepVar1 U_DepVar _WARN_ DepVar );
2135872    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2374 observations read from the data set EMWS8.PART_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.META3_TRAIN.
NOTE: View EMWS8.ENSMBL23_TRAIN.VIEW used (Total process time):
      real time           0.14 seconds
      cpu time            0.14 seconds
 
NOTE: There were 2374 observations read from the data set EMWS8.NEURAL41_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.ENSMBL23_TRAIN.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 2374 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.15 seconds
      cpu time            0.15 seconds
 
 
MPRINT(EM_DIAGRAM):    proc freq data=EM_temp_assessdata noprint;
MPRINT(EM_DIAGRAM):   table I_DepVar*F_DepVar / out = WORK.Ensmbl23_3A48DQV nocol norow outpct;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.Ensmbl23_3A48DQV;
MPRINT(EM_DIAGRAM):   length _TYPE_ $10 DATAROLE TARGET $32 TARGETLABEL $200 FROM INTO $32
CORRECTTEXT $40 ;
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Outcome Type";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role";
MPRINT(EM_DIAGRAM):   label TARGET = "Target Variable";
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
MPRINT(EM_DIAGRAM):   label CORRECTTEXT = "Correct Text";
MPRINT(EM_DIAGRAM):   label CORRECT = "Correct";
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl23_3A48DQV(rename=(F_DepVar=FROM I_DepVar=INTO));
MPRINT(EM_DIAGRAM):   retain _TYPE_ 'PREDICTION' DATAROLE "TRAIN" TARGET "DepVar";
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   if FROM eq INTO then do;
MPRINT(EM_DIAGRAM):   CORRECT = 0;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Correct";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   CORRECT = 1;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Incorrect";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl23_EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl23_3A48DQV;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl23_3A48DQV;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT(drop=INTO FROM _TYPE_);
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   length MISC $12;
MPRINT(EM_DIAGRAM):   if FROM='1' and INTO='1' then MISC='TRUEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM='1' and INTO ne '1' then MISC='FALSENEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne '1' and INTO='1' then MISC='FALSEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne'1' and INTO ne '1' then MISC='TRUENEVENT';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.MISCREPORT nothreads;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc summary data=WORK.MISCREPORT NWAY;
MPRINT(EM_DIAGRAM):   output out=WORK.MISCCOUNT(drop=_FREQ_ _TYPE_) SUM=COUNT;
MPRINT(EM_DIAGRAM):   CLASS MISC;
MPRINT(EM_DIAGRAM):   VAR COUNT;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK.MISCCOUNT out=WORK.MISCREPORT(drop=_NAME_
_LABEL_);
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   ID MISC;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl23_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl23_VariableSet;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emassmt.em_assess.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural37_DepVar_DM;
MPRINT(EM_DIAGRAM):   where _TYPE_="TARGET";
MPRINT(EM_DIAGRAM):   call symput('ASSMT_EVENT', strip(event));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):
MPRINT(EM_ASSESS):   data _ea_tmpdata;
MPRINT(EM_ASSESS):   set EM_temp_assessdata;
MPRINT(EM_ASSESS):   _tmpfreqvar_=1;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_CHECKEMSETINIT):   DATA _NULL_;
MPRINT(EM_CHECKEMSETINIT):   EM_SETINIT = 'N';
MPRINT(EM_CHECKEMSETINIT):   IF SYSPROD('PRODNUM50') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM448') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM102') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM103') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   CALL SYMPUT('EM_SETINIT', EM_SETINIT);
MPRINT(EM_CHECKEMSETINIT):   RUN;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Reading in reporting data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET ASSESS_REPORTMETA END = EOF;
MPRINT(EM_ASSESS):   IF TYPE = "C" OR UPCASE (LEVEL) IN ("NOMINAL", "BINARY" , "ORDINAL") THEN
DO;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMCTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTC" || LEFT (PUT (NUMCTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "C");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMNTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTN" || LEFT (PUT (NUMNTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMNTOREPORT", NUMNTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMCTOREPORT", NUMCTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMTOREPORT", SUM (NUMNTOREPORT, NUMCTOREPORT));
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   PROC DMDB DATA = _ea_tmpdata VAROUT = VAROUT DMDBCAT = _D CLASSOUT =
_ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   CLASS F_DepVar ;
 
MPRINT(EM_ASSESS):   VAR P_DepVar1 _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_;
MPRINT(EM_ASSESS):   RUN ;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   PROC SORT DATA = _ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _auxeventname (keep = __event__) ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ...FLAG0_1 = ..... TARGET IS 0, 1 & EVENT = 1;
 
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   length __event__ $ 32;
MPRINT(EM_ASSESS):   RETAIN FLAG0_1 1 NUM1 . NUM0 . __event__ "_missing_" ;
 
MPRINT(EM_ASSESS):   SET _ASSMT_CLASSOUT END = EOF;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ....... LEVEL = BINARY OR NOMINAL OR ORDINAL;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   IF UPCASE(NAME) = UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   CUMFREQ + FREQUENCY;
MPRINT(EM_ASSESS):   IF LEVEL NE "." THEN DO;
MPRINT(EM_ASSESS):   N1 + 1;
MPRINT(EM_ASSESS):   IF (NRAW NE 0 AND NRAW NE 1) OR TYPE NE "N" OR "" > " " THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ......................... IF EVENT NE BLANK;
MPRINT(EM_ASSESS):   * ....................LEVEL IS CHAR VAR ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   IF UPCASE("1") = UPCASE(LEVEL) THEN DO;
MPRINT(EM_ASSESS):   NUM1 = FREQUENCY;
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", CRAW );
MPRINT(EM_ASSESS):   __event__ = craw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   ELSE do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", NRAW );
MPRINT(EM_ASSESS):   __event__ = nraw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF LAST.NAME THEN DO;
 
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * .............. IN NOMINAL CASE, NEED TO GROUP ALL '0' ;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   NUM0 = SUM (CUMFREQ, - NUM1);
MPRINT(EM_ASSESS):   IF NUM0 < 0 THEN NUM0 = 0;
MPRINT(EM_ASSESS):   IF NUM1 = . THEN NUM1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM0", NUM0 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM1", NUM1);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM1", NUM1 / CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM0", (CUMFREQ - NUM1) / CUMFREQ);
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN DO;
MPRINT(EM_ASSESS):   FLAG0_1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "C" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF "" = " " THEN DO;
MPRINT(EM_ASSESS):   IF "1" NE "1" THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "N" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ................... IF TYPE = N;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("FLAG0_1", FLAG0_1 );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................IF LAST.NAME ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ...............IF LEVEL NE '.' ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * .............. IF NAME = TARGET;
MPRINT(EM_ASSESS):   ELSE IF "" > " " AND UPCASE(NAME) = UPCASE("") THEN DO;
MPRINT(EM_ASSESS):   NUMDECISIONS + 1;
MPRINT(EM_ASSESS):   LEVEL = TRANSLATE (LEVEL, "_", "'", "_", '"');
MPRINT(EM_ASSESS):   CALL SYMPUTX ("D_LABEL" || LEFT (PUT (NUMDECISIONS, 3.)), LEVEL );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................... ELSE IF UPCASE;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   output _auxeventname;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMOBS", CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMDECISIONS", NUMDECISIONS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET VAROUT END = EOF;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) = UPCASE ("P_DepVar1") THEN DO;
MPRINT(EM_ASSESS):   IF N = 0 THEN DO;
MPRINT(EM_ASSESS):   PUT //// "          Warning: All posterior probabilities are missing
values ";
MPRINT(EM_ASSESS):   PUT ///;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("ALLMISS", 1);
MPRINT(EM_ASSESS):   STOP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("ALLMISS", 0);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB", MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB", MAX);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("DIFF", MAX - MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NMISSPROB", NMISS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF UPCASE (NAME) = UPCASE ("_tmpfreqvar_") THEN DO;
MPRINT(EM_ASSESS):   AUXMIN = MIN - INT (MIN);
MPRINT(EM_ASSESS):   AUXMAX = MAX - INT (MAX);
MPRINT(EM_ASSESS):   IF AUXMIN > 0 OR AUXMAX > 0 THEN CALL SYMPUTX ("USEWEIGHT", "Y");
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("USEWEIGHT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _ANY0;
MPRINT(EM_ASSESS):   SET _ea_tmpdata (KEEP = F_DepVar P_DepVar1 _tmpfreqvar_ );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................... No Formats;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF LEFT ( F_DepVar ) = "1" THEN NTARGET = 1;
MPRINT(EM_ASSESS):   ELSE NTARGET = 0;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Before proc summary of binary case;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC SUMMARY DATA = _ANY0 (KEEP = P_DepVar1 NTARGET _tmpfreqvar_ WHERE =
(NTARGET > . )) NWAY MISSING;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   CLASS P_DepVar1 ;
MPRINT(EM_ASSESS):   VAR NTARGET ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   OUTPUT OUT = ANYSUM (DROP = _TYPE_) MEAN = _MEANTARGET _MEANFREQVAR ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... Main Data Set Processing, Binary case;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK (KEEP = BASECAPC BASECAP __EVENT__ BASEEVENTS
BASEGAIN BASELIFT BASERESP BASERESPC BESTCAP BESTCAPC BESTGAIN BESTLIFT BESTLIFTC
BESTNUMEVENTS BESTRESP BESTRESPC BIN CBASELIFT C_LIFT C_P_CAPT_RESP C_P_RESP GAIN LIFT MAXPROB
MINPROB MNPROB NUMNONRESP NUMOBS NUMRESP PERCENTILE P_CAPT_RESP P_RESP ) WORK._TEMPSCOREDIST
(KEEP = BIN LOWERPROB UPPERPROB EVENTVALUE SCR_NUMEVENTS MODELSCORE SCR_NUMNONEVENTS RANGE
NUMOBSINGROUP PERCOBSINGROUP C_PERCOBSINGROUP SCR_P_EVENTS SCR_CP_EVENTS SCR_P_NONEVENTS
SCR_CP_NONEVENTS SCR_MNPROB SCR_MINPROB SCR_MAXPROB ) ;
 
MPRINT(EM_ASSESS):   SET ANYSUM END = EOF;
 
MPRINT(EM_ASSESS):   IF _N_ = 1 THEN SET _AUXEVENTNAME;
 
MPRINT(EM_ASSESS):   RETAIN MINPROB1 - MINPROB20 1 MAXPROB1 - MAXPROB20 0 MNPROB1 - MNPROB20 0
NUMOBS1 - NUMOBS20 0 NUMRESP1 - NUMRESP20 0 TRUEPOS1 - TRUEPOS100 0 TRUENEG1 - TRUENEG100 0
FALSEPOS1 - FALSEPOS100 0 FALSENEG1 - FALSENEG100 0 EVENTS1 - EVENTS100 NONEVENTS1 -
NONEVENTS100 0 FIRSTIN1 - FIRSTIN100 . LASTIN1 - LASTIN100 . RESPRATE 0.151221567 _NEVENTS 359
_NNONEVENTS 2015 TARGET "NTARGET" ;
MPRINT(EM_ASSESS):   ARRAY MINPROBS (20) MINPROB1 - MINPROB20;
MPRINT(EM_ASSESS):   ARRAY MAXPROBS (20) MAXPROB1 - MAXPROB20;
MPRINT(EM_ASSESS):   ARRAY MNPROBS (20) MNPROB1 - MNPROB20;
MPRINT(EM_ASSESS):   ARRAY NUMOBSS (20) NUMOBS1 - NUMOBS20;
MPRINT(EM_ASSESS):   ARRAY NUMRESPS (20) NUMRESP1 - NUMRESP20;
MPRINT(EM_ASSESS):   ARRAY TRUEPOSX (100) TRUEPOS1 - TRUEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSEPOSX (100) FALSEPOS1 - FALSEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSENEGX (100) FALSENEG1 - FALSENEG100;
MPRINT(EM_ASSESS):   ARRAY TRUENEGX (100) TRUENEG1 - TRUENEG100;
MPRINT(EM_ASSESS):   ARRAY _EVENTS (100) EVENTS1 - EVENTS100;
MPRINT(EM_ASSESS):   ARRAY NONEVENTS (100) NONEVENTS1 - NONEVENTS100;
MPRINT(EM_ASSESS):   ARRAY FIRSTIN (100) FIRSTIN1 - FIRSTIN100;
MPRINT(EM_ASSESS):   ARRAY LASTIN (100) LASTIN1 - LASTIN100;
MPRINT(EM_ASSESS):   RETAIN SCR_MNPROB1 - SCR_MNPROB100 0 SCR_MINPROB1 - SCR_MINPROB100 1
SCR_MAXPROB1 - SCR_MAXPROB100 0;
MPRINT(EM_ASSESS):   ARRAY SCR_MNPROBS (100) SCR_MNPROB1 - SCR_MNPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MINPROBS (100) SCR_MINPROB1 - SCR_MINPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MAXPROBS (100) SCR_MAXPROB1 - SCR_MAXPROB100;
MPRINT(EM_ASSESS):   DROP SCR_MINPROB1 - SCR_MINPROB100 SCR_MAXPROB1 - SCR_MAXPROB100
SCR_MNPROB1 - SCR_MNPROB100 ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...... Area For 8 Financials ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF _MEANTARGET = . THEN _MEANTARGET = RESPRATE;
MPRINT(EM_ASSESS):   DROP N1 _K SUMWEIGHTS ;
MPRINT(EM_ASSESS):   SUMWEIGHTS = 1;
 
MPRINT(EM_ASSESS):   DO _K = 1 TO CEIL (_FREQ_);
MPRINT(EM_ASSESS):   IF _K = CEIL (_FREQ_) THEN DO;
MPRINT(EM_ASSESS):   IF _FREQ_ < CEIL (_FREQ_) THEN _WEIGHT = _FREQ_ - FLOOR (_FREQ_);
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   N1 + _WEIGHT;
MPRINT(EM_ASSESS):   NTARGET = _MEANTARGET ;
MPRINT(EM_ASSESS):   DECILE = MIN (20, CEIL (N1 * 20 / 2374));
MPRINT(EM_ASSESS):   MINPROBS ( DECILE) = MIN (MINPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MAXPROBS ( DECILE) = MAX (MAXPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MNPROBS ( DECILE) = SUM (MNPROBS ( DECILE), P_DepVar1 * _WEIGHT);
MPRINT(EM_ASSESS):   NUMOBSS ( DECILE) = NUMOBSS ( DECILE) + _WEIGHT;
MPRINT(EM_ASSESS):   NUMRESPS ( DECILE) = NUMRESPS ( DECILE) + _MEANTARGET * _WEIGHT;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ outside of do loop, Area for final ROC;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   RANKDELTA = (ROUND ( _FREQ_ ) + 1) / 2;
MPRINT(EM_ASSESS):   RANK = UNTIEDRANK + RANKDELTA;
MPRINT(EM_ASSESS):   DROP RANK ;
MPRINT(EM_ASSESS):   SUMRANK1 + RANK * ROUND (_MEANTARGET * _FREQ_, .0000001);
MPRINT(EM_ASSESS):   UNTIEDRANK + ROUND (_FREQ_, .00000001);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Area For ROC Curve;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DO _K = 1 TO 100;
MPRINT(EM_ASSESS):   IF P_DepVar1 * 100 >= _K THEN DO;
MPRINT(EM_ASSESS):   TRUEPOSX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   FALSEPOSX ( _K ) + _FREQ_ * (1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   TRUENEGX ( _K ) + _FREQ_ * ( 1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   FALSENEGX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   SLOT = MIN (MAX (CEIL (P_DepVar1 * 100), 1), 100) ;
MPRINT(EM_ASSESS):   DROP SLOT;
MPRINT(EM_ASSESS):   FIRSTIN ( SLOT ) = MIN ( FIRSTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   LASTIN ( SLOT ) = MAX ( LASTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   _EVENTS ( SLOT) = _EVENTS ( SLOT) + _FREQ_ * _MEANTARGET;
MPRINT(EM_ASSESS):   NONEVENTS ( SLOT) = NONEVENTS ( SLOT) + _FREQ_ * (1 - _MEANTARGET);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ START OF OUTDIST IN BINARY CASE MAIN DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   SCR_MNPROBS ( SLOT ) = SUM (SCR_MNPROBS (SLOT), P_DepVar1 * _FREQ_ );
MPRINT(EM_ASSESS):   SCR_MINPROBS ( SLOT ) = MIN (SCR_MINPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   SCR_MAXPROBS ( SLOT ) = MAX (SCR_MAXPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ End of Outdist in Binary case main DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   PUT //;
MPRINT(EM_ASSESS):   DO K = 1 TO 20;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LENGTH EVENTVALUE $ 32;
MPRINT(EM_ASSESS):   RETAIN EVENTVALUE "1" ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ......... Start of EOF area of BINARY processing of main data set ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SUMRANK1", SUMRANK1);
MPRINT(EM_ASSESS):   LENGTH DATAROLE $ 10;
MPRINT(EM_ASSESS):   RETAIN DATAROLE "TRAIN" ;
MPRINT(EM_ASSESS):   RETAIN OVLMIN 0.0001881773 OVLMAX 0.9970177295 ;
MPRINT(EM_ASSESS):   DROP OVLMIN OVLMAX ;
MPRINT(EM_ASSESS):   C_NUMOBS = 0;
MPRINT(EM_ASSESS):   C_NUM_RESP = 0;
MPRINT(EM_ASSESS):   C_NUM_NONRESP = 0;
MPRINT(EM_ASSESS):   C_P_RESP = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   PREVIOUSPROFIT = 0;
MPRINT(EM_ASSESS):   MAXPROFIT = 0;
MPRINT(EM_ASSESS):   _KS_BIN_ = 0;
MPRINT(EM_ASSESS):   DROP _KS_BIN_;
MPRINT(EM_ASSESS):   AVGNUMRESP = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASERESP = 100 * RESPRATE;
MPRINT(EM_ASSESS):   BASERESPC = BASERESP;
MPRINT(EM_ASSESS):   BASECAP = 100 / 20;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................Start OF Gainschart = Outranks Area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = 0;
MPRINT(EM_ASSESS):   DO GROUP = 20 TO 1 BY -1;
 
MPRINT(EM_ASSESS):   BASECAPC + BASECAP;
MPRINT(EM_ASSESS):   PERCENTILE = GROUP * (100 / 20);
MPRINT(EM_ASSESS):   MINPROB = MINPROBS ( GROUP);
MPRINT(EM_ASSESS):   MAXPROB = MAXPROBS ( GROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB" || LEFT ( PUT (GROUP, 3.)), MINPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB" || LEFT ( PUT (GROUP, 3.)), MAXPROB);
MPRINT(EM_ASSESS):   NUMOBS = NUMOBSS ( GROUP);
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN MNPROB = MNPROBS ( GROUP) / NUMOBS;
MPRINT(EM_ASSESS):   ELSE MNPROB = .;
MPRINT(EM_ASSESS):   C_NUMOBS = SUM (NUMOBS, C_NUMOBS);
MPRINT(EM_ASSESS):   NUMRESP = NUMRESPS ( GROUP);
MPRINT(EM_ASSESS):   NUMNONRESP = NUMOBS - NUMRESP;
MPRINT(EM_ASSESS):   C_AVGNUM_RESP + AVGNUMRESP;
MPRINT(EM_ASSESS):   IF C_NUMOBS <= _NEVENTS THEN DO;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   BESTCAPC = C_NUMOBS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BASEEVENTS = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASENONEVENTS = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   FLAG + 1;
MPRINT(EM_ASSESS):   DROP FLAG;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = _NEVENTS - C_NUMOBS + NUMOBS;
MPRINT(EM_ASSESS):   IF FLAG > 1 THEN BESTNUMEVENTS = 0;
MPRINT(EM_ASSESS):   BESTCAPC = 100;
MPRINT(EM_ASSESS):   IF C_NUMOBS - _NEVENTS <= NUMOBS THEN DO;
MPRINT(EM_ASSESS):   BASEEVENTS = C_NUMOBS - _NEVENTS;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS - C_NUMOBS + _NEVENTS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BASEEVENTS = 0;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   BESTCAP = BESTNUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BESTLIFT = BESTNUMEVENTS / AVGNUMRESP;
MPRINT(EM_ASSESS):   C_BESTNUMEVENTS + BESTNUMEVENTS;
MPRINT(EM_ASSESS):   DROP C_BESTNUMEVENTS;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN BESTLIFTC = C_BESTNUMEVENTS / (_NEVENTS / 2374 *
C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE BESTLIFTC = .;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESP = BESTNUMEVENTS * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_RESP = NUMRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_NONRESP = NUMNONRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESP = .;
MPRINT(EM_ASSESS):   P_RESP = .;
MPRINT(EM_ASSESS):   P_NONRESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESPC = C_BESTNUMEVENTS * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   BESTGAIN = MAX (0, ((C_BESTNUMEVENTS / C_NUMOBS ) / ( AVGNUMRESP /
NUMOBS) - 1) * 100);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESPC = .;
MPRINT(EM_ASSESS):   BESTGAIN = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMNONRESP > 0 THEN ODDS = NUMRESP / NUMNONRESP;
MPRINT(EM_ASSESS):   ELSE ODDS = .;
MPRINT(EM_ASSESS):   C_NUM_RESP = SUM (C_NUM_RESP , NUMRESP );
MPRINT(EM_ASSESS):   C_NUM_NONRESP = SUM (C_NUM_NONRESP, NUMNONRESP );
MPRINT(EM_ASSESS):   IF C_NUM_NONRESP > 0 THEN C_ODDS = C_NUM_RESP / C_NUM_NONRESP;
MPRINT(EM_ASSESS):   ELSE C_ODDS = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   C_P_RESP = C_NUM_RESP * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   GAIN = ABS(100 * (((C_NUM_RESP / C_NUMOBS ) / (_NEVENTS / 2374)) - 1));
MPRINT(EM_ASSESS):   BASEGAIN = 100 * (( (C_AVGNUM_RESP / C_NUMOBS) / ( AVGNUMRESP / NUMOBS))
- 1);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   GAIN = .;
MPRINT(EM_ASSESS):   BASEGAIN = .;
MPRINT(EM_ASSESS):   C_P_RESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF BASEGAIN <= 0 THEN BASEGAIN = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = NUMRESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   P_CAPT_NONRESP = NUMNONRESP * 100 / ( 2374 - _NEVENTS);
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = C_NUM_RESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   C_P_CAPT_NONRESP = C_NUM_NONRESP * 100 / ( 2374 - _NEVENTS);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Area For Binned KS in Outranks area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _DIFFERENCE = C_P_CAPT_RESP - C_P_CAPT_NONRESP ;
MPRINT(EM_ASSESS):   IF _KS_BIN_ < _DIFFERENCE THEN DO;
MPRINT(EM_ASSESS):   _KS_BIN_ = _DIFFERENCE;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = MINPROB + (MAXPROB - MINPROB) / 2 ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LIFT = P_RESP * .01 / RESPRATE ;
MPRINT(EM_ASSESS):   C_LIFT = C_P_RESP * .01 / RESPRATE;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BASELIFT = AVGNUMRESP / ( RESPRATE * NUMOBS );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE BASELIFT = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN CBASELIFT = C_AVGNUM_RESP / (RESPRATE * C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE CBASELIFT = .;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ WITHIN DO LOOP FOR OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 + 1 - GROUP;
MPRINT(EM_ASSESS):   PERCENTILE = BIN * (100 / 20);
MPRINT(EM_ASSESS):   B_C_P_RESP = PERCENTILE;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPRANK ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................ END OF GAINSCHART = OUTRANKS AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFITGROUP" , MAXPROFITGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFIT" , MAXPROFIT );
MPRINT(EM_ASSESS):   KS_ABSDIFF = 0 ;
MPRINT(EM_ASSESS):   MINPRECTPR = 9999;
MPRINT(EM_ASSESS):   Y0 = 1 - RESPRATE;
MPRINT(EM_ASSESS):   Y1 = RESPRATE;
MPRINT(EM_ASSESS):   MAXMUTUAL = 0;
MPRINT(EM_ASSESS):   DROP MAXMUTUAL KSPROB Y0 Y1 KS_ABSDIFF MINPRECTPR;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .....................About to start Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................... Finished Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Outdist ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS96 - EVENTS100 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS96 - NONEVENTS100);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB96 -
SCR_MNPROB100) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB96 - SCR_MINPROB100) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB96 - SCR_MAXPROB100) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 20;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 19 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS91 - EVENTS95 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS91 - NONEVENTS95);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB91 -
SCR_MNPROB95) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB91 - SCR_MINPROB95) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB91 - SCR_MAXPROB95) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 19;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 18 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS86 - EVENTS90 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS86 - NONEVENTS90);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB86 -
SCR_MNPROB90) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB86 - SCR_MINPROB90) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB86 - SCR_MAXPROB90) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 18;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 17 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS81 - EVENTS85 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS81 - NONEVENTS85);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB81 -
SCR_MNPROB85) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB81 - SCR_MINPROB85) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB81 - SCR_MAXPROB85) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 17;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 16 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS76 - EVENTS80 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS76 - NONEVENTS80);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB76 -
SCR_MNPROB80) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB76 - SCR_MINPROB80) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB76 - SCR_MAXPROB80) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 16;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 15 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS71 - EVENTS75 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS71 - NONEVENTS75);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB71 -
SCR_MNPROB75) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB71 - SCR_MINPROB75) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB71 - SCR_MAXPROB75) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 15;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 14 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS66 - EVENTS70 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS66 - NONEVENTS70);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB66 -
SCR_MNPROB70) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB66 - SCR_MINPROB70) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB66 - SCR_MAXPROB70) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 14;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 13 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS61 - EVENTS65 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS61 - NONEVENTS65);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB61 -
SCR_MNPROB65) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB61 - SCR_MINPROB65) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB61 - SCR_MAXPROB65) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 13;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 12 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS56 - EVENTS60 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS56 - NONEVENTS60);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB56 -
SCR_MNPROB60) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB56 - SCR_MINPROB60) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB56 - SCR_MAXPROB60) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 12;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 11 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS51 - EVENTS55 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS51 - NONEVENTS55);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB51 -
SCR_MNPROB55) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB51 - SCR_MINPROB55) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB51 - SCR_MAXPROB55) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 11;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 10 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS46 - EVENTS50 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS46 - NONEVENTS50);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB46 -
SCR_MNPROB50) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB46 - SCR_MINPROB50) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB46 - SCR_MAXPROB50) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 10;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 9 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS41 - EVENTS45 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS41 - NONEVENTS45);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB41 -
SCR_MNPROB45) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB41 - SCR_MINPROB45) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB41 - SCR_MAXPROB45) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 9;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 8 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS36 - EVENTS40 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS36 - NONEVENTS40);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB36 -
SCR_MNPROB40) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB36 - SCR_MINPROB40) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB36 - SCR_MAXPROB40) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 8;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 7 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS31 - EVENTS35 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS31 - NONEVENTS35);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB31 -
SCR_MNPROB35) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB31 - SCR_MINPROB35) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB31 - SCR_MAXPROB35) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 7;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 6 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS26 - EVENTS30 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS26 - NONEVENTS30);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB26 -
SCR_MNPROB30) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB26 - SCR_MINPROB30) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB26 - SCR_MAXPROB30) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 6;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 5 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS21 - EVENTS25 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS21 - NONEVENTS25);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB21 -
SCR_MNPROB25) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB21 - SCR_MINPROB25) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB21 - SCR_MAXPROB25) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 5;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 4 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS16 - EVENTS20 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS16 - NONEVENTS20);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB16 -
SCR_MNPROB20) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB16 - SCR_MINPROB20) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB16 - SCR_MAXPROB20) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 4;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
The SAS System
 
MPRINT(EM_ASSESS):   BIN = 3 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS11 - EVENTS15 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS11 - NONEVENTS15);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB11 -
SCR_MNPROB15) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB11 - SCR_MINPROB15) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB11 - SCR_MAXPROB15) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 3;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 2 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS6 - EVENTS10 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS6 - NONEVENTS10);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB6 -
SCR_MNPROB10) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB6 - SCR_MINPROB10) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB6 - SCR_MAXPROB10) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 2;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 1 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS1 - EVENTS5 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS1 - NONEVENTS5);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB1 - SCR_MNPROB5)
/ NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB1 - SCR_MINPROB5) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB1 - SCR_MAXPROB5) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 1;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSPROB" , PUT (KSPROB, 5.3 ) );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_PROB" , _KS_BIN_PROB );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_" , _KS_BIN_ / 100 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSDIFF" , KS_ABSDIFF );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PRECTPR" , PRECTPR );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXMUTUALPROB" , MAXMUTUALPROB);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LABEL __EVENT__ = "Event" DECILE = "Depth" BIN = "Bin" NUMOBS = "Number
of Observations" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * RUN for large data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST;
MPRINT(EM_ASSESS):   DELETE _AUXEVENTNAME;
MPRINT(EM_ASSESS):   QUIT;
 
MPRINT(EM_ASSESS):   OPTION NOCENTER LS = 95;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Report Vars Area.;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start OF Outdist Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPSCOREDIST;
MPRINT(EM_ASSESS):   RENAME MODELSCORE = SCORE UPPERPROB = UPPOSTERIOR SCR_CP_EVENTS =
CUMULATIVEPERCENTAGEOFEVENTS SCR_CP_NONEVENTS = CUMULATIVEPERCENTAGEOFNONEVENTS EVENTVALUE =
EVENT LOWERPROB = LOWPOSTERIOR NUMOBSINGROUP = N PERCOBSINGROUP = PERCENTAGE SCR_MINPROB =
_MINP_ SCR_MAXPROB = _MAXP_ SCR_MNPROB = _MEANP_ RANGE = P_LABEL C_PERCOBSINGROUP =
CUMULATIVEPERCENTAGE SCR_NUMEVENTS = NUMBEROFEVENTS SCR_NUMNONEVENTS = NUMBEROFNONEVENTS
SCR_P_EVENTS = PERCENTAGEOFEVENTS SCR_P_NONEVENTS = PERCENTAGEOFNONEVENTS ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... OUTDIST MODIFICATION LABEL AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL BIN = "Bin" N = "Number of Observations" P_LABEL = "Posterior
Probability Range" EVENT = "Event" LOWPOSTERIOR = "Lower Bound Posterior Probability"
PERCENTAGEOFEVENTS = "Percentage of Events" CUMULATIVEPERCENTAGEOFNONEVENTS = "Cumulative
Percentage of Nonevents" CUMULATIVEPERCENTAGE = "Cumulative Percentage" PERCENTAGEOFEVENTS =
"Percentage of Events" PERCENTAGEOFNONEVENTS = "Percentage of Nonevents"
CUMULATIVEPERCENTAGEOFEVENTS = "Cumulative Percentage of Events" UPPOSTERIOR = "Upper Bound
Posterior Probability" NUMBEROFEVENTS = "Number of Events" PERCENTAGE = "Percentage"
NUMBEROFNONEVENTS = "Number of Nonevents" _MEANP_ = "Mean Posterior Probability" _MINP_ = "Min
Posterior Probability" _MAXP_ = "Max Posterior Probability" SCORE = "Model Score" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   SET WORK._TEMPSCOREDIST (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........... END OF OUTDIST MODIFICATION;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start of OUTRANKS Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPRANK;
MPRINT(EM_ASSESS):   RENAME __EVENT__ = EVENT P_RESP = RESP C_P_CAPT_RESP = CAPC P_CAPT_RESP =
CAP NUMNONRESP = NUMNEVENT NUMRESP = NUMEVENT BASEEVENTS = BASENUMBEROFEVENTS BESTNUMEVENTS =
BESTNUMBEROFEVENTS MAXPROB = _MAXP_ MINPROB = _MINP_ CBASELIFT = BASELIFTC C_LIFT = LIFTC
MNPROB = _MEANP_ PERCENTILE = DECILE NUMOBS = N NUMEVENT = NUMBEROFEVENTS C_P_RESP = RESPC ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................. OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL _MAXP_ = "Max Posterior Probability" _MINP_ = "Min Posterior
Probability" _MEANP_ = "Mean Posterior Probability" BASECAP = "Baseline % Captured Response"
BASECAPC = "Baseline Cumulative % Captured Response" BASENUMBEROFEVENTS = "Baseline Number of
Events" BASEGAIN = "Baseline Gain" BASELIFT = "Baseline Lift" BASELIFTC = "Baseline Cumulative
Lift" BASERESP = "Baseline % Response" BASERESPC = "Baseline Cumulative % Response" BASELIFTC
= "Baseline Cumulative Lift" BESTCAP = "Best % Captured Response" BESTCAPC = "Best Cumulative
% Captured Response" BESTGAIN = "Best Gain" BESTRESP = "Best % Response" BESTRESPC = "Best
Cumulative % Response" BESTLIFT = "Best Lift" BESTLIFTC = "Best Cumulative Lift"
BESTNUMBEROFEVENTS = "Best Number of Events" CAP = "% Captured Response" CAPC = "Cumulative %
Captured Response" DECILE = "Depth" GAIN = "Gain" LIFT = "Lift" LIFTC = "Cumulative Lift"
NUMNEVENT = "Number of Nonevents" N = "Number of Observations" EVENT = "Event" RESPC =
"Cumulative % Response" NUMBEROFEVENTS = "Number of Events" RESP = "% Response" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK;
MPRINT(EM_ASSESS):   SET WORK._TEMPRANK (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   proc datasets lib=work nolist;
MPRINT(EM_ASSESS):   delete _ea_tmpdata;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_ASSESS):   quit;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   OPTION ERRORS = 20;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):    data WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "TRAIN";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl23_EMRANK;
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "TRAIN";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl23_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   run;
2140138    data EM_temp_assessMeta;
MPRINT(EM_DIAGRAM):    data EM_temp_assessMeta;
2140139    set EMWS8.Ensmbl23_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl23_CMeta_TRAIN;
2140140    where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST')
2140140  ! ;
MPRINT(EM_DIAGRAM):   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION',
'ASSESS', 'COST');
2140141    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS8.ENSMBL23_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 8 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2140142    data EM_temp_assessdata;
MPRINT(EM_DIAGRAM):    data EM_temp_assessdata;
2140143    set EMWS8.Ensmbl23_VALIDATE(keep=
2140144    F_DepVar
2140145    I_DepVar
2140146    P_DepVar0
2140147    P_DepVar1
2140148    R_DepVar0
2140149    R_DepVar1
2140150    U_DepVar
2140151    _WARN_
2140152    DepVar
2140153    );
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl23_VALIDATE(keep= F_DepVar I_DepVar P_DepVar0 P_DepVar1
R_DepVar0 R_DepVar1 U_DepVar _WARN_ DepVar );
2140154    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: There were 1018 observations read from the data set EMWS8.META3_VALIDATE.
NOTE: View EMWS8.ENSMBL23_VALIDATE.VIEW used (Total process time):
      real time           0.10 seconds
      cpu time            0.10 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.NEURAL41_VALIDATE.
NOTE: There were 1018 observations read from the data set EMWS8.ENSMBL23_VALIDATE.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 1018 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.12 seconds
      cpu time            0.12 seconds
 
 
MPRINT(EM_DIAGRAM):    proc freq data=EM_temp_assessdata noprint;
MPRINT(EM_DIAGRAM):   table I_DepVar*F_DepVar / out = WORK.Ensmbl23_2LVME1C nocol norow outpct;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.Ensmbl23_2LVME1C;
MPRINT(EM_DIAGRAM):   length _TYPE_ $10 DATAROLE TARGET $32 TARGETLABEL $200 FROM INTO $32
CORRECTTEXT $40 ;
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Outcome Type";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role";
MPRINT(EM_DIAGRAM):   label TARGET = "Target Variable";
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
MPRINT(EM_DIAGRAM):   label CORRECTTEXT = "Correct Text";
MPRINT(EM_DIAGRAM):   label CORRECT = "Correct";
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl23_2LVME1C(rename=(F_DepVar=FROM I_DepVar=INTO));
MPRINT(EM_DIAGRAM):   retain _TYPE_ 'PREDICTION' DATAROLE "VALIDATE" TARGET "DepVar";
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   if FROM eq INTO then do;
MPRINT(EM_DIAGRAM):   CORRECT = 0;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Correct";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   CORRECT = 1;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Incorrect";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl23_EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl23_EMCLASSIFICATION WORK.Ensmbl23_2LVME1C;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl23_2LVME1C;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT(drop=INTO FROM _TYPE_);
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   length MISC $12;
MPRINT(EM_DIAGRAM):   if FROM='1' and INTO='1' then MISC='TRUEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM='1' and INTO ne '1' then MISC='FALSENEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne '1' and INTO='1' then MISC='FALSEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne'1' and INTO ne '1' then MISC='TRUENEVENT';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.MISCREPORT nothreads;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc summary data=WORK.MISCREPORT NWAY;
MPRINT(EM_DIAGRAM):   output out=WORK.MISCCOUNT(drop=_FREQ_ _TYPE_) SUM=COUNT;
MPRINT(EM_DIAGRAM):   CLASS MISC;
MPRINT(EM_DIAGRAM):   VAR COUNT;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK.MISCCOUNT out=WORK.MISCREPORT(drop=_NAME_
_LABEL_);
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   ID MISC;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl23_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl23_EMEVENTREPORT WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl23_VariableSet;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emassmt.em_assess.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural37_DepVar_DM;
MPRINT(EM_DIAGRAM):   where _TYPE_="TARGET";
MPRINT(EM_DIAGRAM):   call symput('ASSMT_EVENT', strip(event));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):
MPRINT(EM_ASSESS):   data _ea_tmpdata;
MPRINT(EM_ASSESS):   set EM_temp_assessdata;
MPRINT(EM_ASSESS):   _tmpfreqvar_=1;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_CHECKEMSETINIT):   DATA _NULL_;
MPRINT(EM_CHECKEMSETINIT):   EM_SETINIT = 'N';
MPRINT(EM_CHECKEMSETINIT):   IF SYSPROD('PRODNUM50') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM448') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM102') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM103') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   CALL SYMPUT('EM_SETINIT', EM_SETINIT);
MPRINT(EM_CHECKEMSETINIT):   RUN;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Reading in reporting data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET ASSESS_REPORTMETA END = EOF;
MPRINT(EM_ASSESS):   IF TYPE = "C" OR UPCASE (LEVEL) IN ("NOMINAL", "BINARY" , "ORDINAL") THEN
DO;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMCTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTC" || LEFT (PUT (NUMCTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "C");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMNTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTN" || LEFT (PUT (NUMNTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMNTOREPORT", NUMNTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMCTOREPORT", NUMCTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMTOREPORT", SUM (NUMNTOREPORT, NUMCTOREPORT));
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   PROC DMDB DATA = _ea_tmpdata VAROUT = VAROUT DMDBCAT = _D CLASSOUT =
_ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   CLASS F_DepVar ;
 
MPRINT(EM_ASSESS):   VAR P_DepVar1 _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_;
MPRINT(EM_ASSESS):   RUN ;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   PROC SORT DATA = _ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _auxeventname (keep = __event__) ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ...FLAG0_1 = ..... TARGET IS 0, 1 & EVENT = 1;
 
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   length __event__ $ 32;
MPRINT(EM_ASSESS):   RETAIN FLAG0_1 1 NUM1 . NUM0 . __event__ "_missing_" ;
 
MPRINT(EM_ASSESS):   SET _ASSMT_CLASSOUT END = EOF;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ....... LEVEL = BINARY OR NOMINAL OR ORDINAL;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   IF UPCASE(NAME) = UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   CUMFREQ + FREQUENCY;
MPRINT(EM_ASSESS):   IF LEVEL NE "." THEN DO;
MPRINT(EM_ASSESS):   N1 + 1;
MPRINT(EM_ASSESS):   IF (NRAW NE 0 AND NRAW NE 1) OR TYPE NE "N" OR "" > " " THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ......................... IF EVENT NE BLANK;
MPRINT(EM_ASSESS):   * ....................LEVEL IS CHAR VAR ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   IF UPCASE("1") = UPCASE(LEVEL) THEN DO;
MPRINT(EM_ASSESS):   NUM1 = FREQUENCY;
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", CRAW );
MPRINT(EM_ASSESS):   __event__ = craw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   ELSE do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", NRAW );
MPRINT(EM_ASSESS):   __event__ = nraw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF LAST.NAME THEN DO;
 
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * .............. IN NOMINAL CASE, NEED TO GROUP ALL '0' ;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   NUM0 = SUM (CUMFREQ, - NUM1);
MPRINT(EM_ASSESS):   IF NUM0 < 0 THEN NUM0 = 0;
MPRINT(EM_ASSESS):   IF NUM1 = . THEN NUM1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM0", NUM0 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM1", NUM1);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM1", NUM1 / CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM0", (CUMFREQ - NUM1) / CUMFREQ);
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN DO;
MPRINT(EM_ASSESS):   FLAG0_1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "C" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF "" = " " THEN DO;
MPRINT(EM_ASSESS):   IF "1" NE "1" THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "N" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ................... IF TYPE = N;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("FLAG0_1", FLAG0_1 );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................IF LAST.NAME ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ...............IF LEVEL NE '.' ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * .............. IF NAME = TARGET;
MPRINT(EM_ASSESS):   ELSE IF "" > " " AND UPCASE(NAME) = UPCASE("") THEN DO;
MPRINT(EM_ASSESS):   NUMDECISIONS + 1;
MPRINT(EM_ASSESS):   LEVEL = TRANSLATE (LEVEL, "_", "'", "_", '"');
MPRINT(EM_ASSESS):   CALL SYMPUTX ("D_LABEL" || LEFT (PUT (NUMDECISIONS, 3.)), LEVEL );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................... ELSE IF UPCASE;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   output _auxeventname;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMOBS", CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMDECISIONS", NUMDECISIONS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET VAROUT END = EOF;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) = UPCASE ("P_DepVar1") THEN DO;
MPRINT(EM_ASSESS):   IF N = 0 THEN DO;
MPRINT(EM_ASSESS):   PUT //// "          Warning: All posterior probabilities are missing
values ";
MPRINT(EM_ASSESS):   PUT ///;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("ALLMISS", 1);
MPRINT(EM_ASSESS):   STOP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("ALLMISS", 0);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB", MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB", MAX);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("DIFF", MAX - MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NMISSPROB", NMISS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF UPCASE (NAME) = UPCASE ("_tmpfreqvar_") THEN DO;
MPRINT(EM_ASSESS):   AUXMIN = MIN - INT (MIN);
MPRINT(EM_ASSESS):   AUXMAX = MAX - INT (MAX);
MPRINT(EM_ASSESS):   IF AUXMIN > 0 OR AUXMAX > 0 THEN CALL SYMPUTX ("USEWEIGHT", "Y");
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("USEWEIGHT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _ANY0;
MPRINT(EM_ASSESS):   SET _ea_tmpdata (KEEP = F_DepVar P_DepVar1 _tmpfreqvar_ );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................... No Formats;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF LEFT ( F_DepVar ) = "1" THEN NTARGET = 1;
MPRINT(EM_ASSESS):   ELSE NTARGET = 0;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Before proc summary of binary case;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC SUMMARY DATA = _ANY0 (KEEP = P_DepVar1 NTARGET _tmpfreqvar_ WHERE =
(NTARGET > . )) NWAY MISSING;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   CLASS P_DepVar1 ;
MPRINT(EM_ASSESS):   VAR NTARGET ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   OUTPUT OUT = ANYSUM (DROP = _TYPE_) MEAN = _MEANTARGET _MEANFREQVAR ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... Main Data Set Processing, Binary case;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK (KEEP = BASECAPC BASECAP __EVENT__ BASEEVENTS
BASEGAIN BASELIFT BASERESP BASERESPC BESTCAP BESTCAPC BESTGAIN BESTLIFT BESTLIFTC
BESTNUMEVENTS BESTRESP BESTRESPC BIN CBASELIFT C_LIFT C_P_CAPT_RESP C_P_RESP GAIN LIFT MAXPROB
MINPROB MNPROB NUMNONRESP NUMOBS NUMRESP PERCENTILE P_CAPT_RESP P_RESP ) WORK._TEMPSCOREDIST
(KEEP = BIN LOWERPROB UPPERPROB EVENTVALUE SCR_NUMEVENTS MODELSCORE SCR_NUMNONEVENTS RANGE
NUMOBSINGROUP PERCOBSINGROUP C_PERCOBSINGROUP SCR_P_EVENTS SCR_CP_EVENTS SCR_P_NONEVENTS
SCR_CP_NONEVENTS SCR_MNPROB SCR_MINPROB SCR_MAXPROB ) ;
 
MPRINT(EM_ASSESS):   SET ANYSUM END = EOF;
 
MPRINT(EM_ASSESS):   IF _N_ = 1 THEN SET _AUXEVENTNAME;
 
MPRINT(EM_ASSESS):   RETAIN MINPROB1 - MINPROB20 1 MAXPROB1 - MAXPROB20 0 MNPROB1 - MNPROB20 0
NUMOBS1 - NUMOBS20 0 NUMRESP1 - NUMRESP20 0 TRUEPOS1 - TRUEPOS100 0 TRUENEG1 - TRUENEG100 0
FALSEPOS1 - FALSEPOS100 0 FALSENEG1 - FALSENEG100 0 EVENTS1 - EVENTS100 NONEVENTS1 -
NONEVENTS100 0 FIRSTIN1 - FIRSTIN100 . LASTIN1 - LASTIN100 . RESPRATE 0.152259332 _NEVENTS 155
_NNONEVENTS 863 TARGET "NTARGET" ;
MPRINT(EM_ASSESS):   ARRAY MINPROBS (20) MINPROB1 - MINPROB20;
MPRINT(EM_ASSESS):   ARRAY MAXPROBS (20) MAXPROB1 - MAXPROB20;
MPRINT(EM_ASSESS):   ARRAY MNPROBS (20) MNPROB1 - MNPROB20;
MPRINT(EM_ASSESS):   ARRAY NUMOBSS (20) NUMOBS1 - NUMOBS20;
MPRINT(EM_ASSESS):   ARRAY NUMRESPS (20) NUMRESP1 - NUMRESP20;
MPRINT(EM_ASSESS):   ARRAY TRUEPOSX (100) TRUEPOS1 - TRUEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSEPOSX (100) FALSEPOS1 - FALSEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSENEGX (100) FALSENEG1 - FALSENEG100;
MPRINT(EM_ASSESS):   ARRAY TRUENEGX (100) TRUENEG1 - TRUENEG100;
MPRINT(EM_ASSESS):   ARRAY _EVENTS (100) EVENTS1 - EVENTS100;
MPRINT(EM_ASSESS):   ARRAY NONEVENTS (100) NONEVENTS1 - NONEVENTS100;
MPRINT(EM_ASSESS):   ARRAY FIRSTIN (100) FIRSTIN1 - FIRSTIN100;
MPRINT(EM_ASSESS):   ARRAY LASTIN (100) LASTIN1 - LASTIN100;
MPRINT(EM_ASSESS):   RETAIN SCR_MNPROB1 - SCR_MNPROB100 0 SCR_MINPROB1 - SCR_MINPROB100 1
SCR_MAXPROB1 - SCR_MAXPROB100 0;
MPRINT(EM_ASSESS):   ARRAY SCR_MNPROBS (100) SCR_MNPROB1 - SCR_MNPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MINPROBS (100) SCR_MINPROB1 - SCR_MINPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MAXPROBS (100) SCR_MAXPROB1 - SCR_MAXPROB100;
MPRINT(EM_ASSESS):   DROP SCR_MINPROB1 - SCR_MINPROB100 SCR_MAXPROB1 - SCR_MAXPROB100
SCR_MNPROB1 - SCR_MNPROB100 ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...... Area For 8 Financials ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF _MEANTARGET = . THEN _MEANTARGET = RESPRATE;
MPRINT(EM_ASSESS):   DROP N1 _K SUMWEIGHTS ;
MPRINT(EM_ASSESS):   SUMWEIGHTS = 1;
 
MPRINT(EM_ASSESS):   DO _K = 1 TO CEIL (_FREQ_);
MPRINT(EM_ASSESS):   IF _K = CEIL (_FREQ_) THEN DO;
MPRINT(EM_ASSESS):   IF _FREQ_ < CEIL (_FREQ_) THEN _WEIGHT = _FREQ_ - FLOOR (_FREQ_);
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   N1 + _WEIGHT;
MPRINT(EM_ASSESS):   NTARGET = _MEANTARGET ;
MPRINT(EM_ASSESS):   DECILE = MIN (20, CEIL (N1 * 20 / 1018));
MPRINT(EM_ASSESS):   MINPROBS ( DECILE) = MIN (MINPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MAXPROBS ( DECILE) = MAX (MAXPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MNPROBS ( DECILE) = SUM (MNPROBS ( DECILE), P_DepVar1 * _WEIGHT);
MPRINT(EM_ASSESS):   NUMOBSS ( DECILE) = NUMOBSS ( DECILE) + _WEIGHT;
MPRINT(EM_ASSESS):   NUMRESPS ( DECILE) = NUMRESPS ( DECILE) + _MEANTARGET * _WEIGHT;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ outside of do loop, Area for final ROC;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   RANKDELTA = (ROUND ( _FREQ_ ) + 1) / 2;
MPRINT(EM_ASSESS):   RANK = UNTIEDRANK + RANKDELTA;
MPRINT(EM_ASSESS):   DROP RANK ;
MPRINT(EM_ASSESS):   SUMRANK1 + RANK * ROUND (_MEANTARGET * _FREQ_, .0000001);
MPRINT(EM_ASSESS):   UNTIEDRANK + ROUND (_FREQ_, .00000001);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Area For ROC Curve;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DO _K = 1 TO 100;
MPRINT(EM_ASSESS):   IF P_DepVar1 * 100 >= _K THEN DO;
MPRINT(EM_ASSESS):   TRUEPOSX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   FALSEPOSX ( _K ) + _FREQ_ * (1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   TRUENEGX ( _K ) + _FREQ_ * ( 1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   FALSENEGX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   SLOT = MIN (MAX (CEIL (P_DepVar1 * 100), 1), 100) ;
MPRINT(EM_ASSESS):   DROP SLOT;
MPRINT(EM_ASSESS):   FIRSTIN ( SLOT ) = MIN ( FIRSTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   LASTIN ( SLOT ) = MAX ( LASTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   _EVENTS ( SLOT) = _EVENTS ( SLOT) + _FREQ_ * _MEANTARGET;
MPRINT(EM_ASSESS):   NONEVENTS ( SLOT) = NONEVENTS ( SLOT) + _FREQ_ * (1 - _MEANTARGET);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ START OF OUTDIST IN BINARY CASE MAIN DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   SCR_MNPROBS ( SLOT ) = SUM (SCR_MNPROBS (SLOT), P_DepVar1 * _FREQ_ );
MPRINT(EM_ASSESS):   SCR_MINPROBS ( SLOT ) = MIN (SCR_MINPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   SCR_MAXPROBS ( SLOT ) = MAX (SCR_MAXPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ End of Outdist in Binary case main DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   PUT //;
MPRINT(EM_ASSESS):   DO K = 1 TO 20;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LENGTH EVENTVALUE $ 32;
MPRINT(EM_ASSESS):   RETAIN EVENTVALUE "1" ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ......... Start of EOF area of BINARY processing of main data set ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SUMRANK1", SUMRANK1);
MPRINT(EM_ASSESS):   LENGTH DATAROLE $ 10;
MPRINT(EM_ASSESS):   RETAIN DATAROLE "VALIDATE" ;
MPRINT(EM_ASSESS):   RETAIN OVLMIN 0.0001972339 OVLMAX 0.9939187186 ;
MPRINT(EM_ASSESS):   DROP OVLMIN OVLMAX ;
MPRINT(EM_ASSESS):   C_NUMOBS = 0;
MPRINT(EM_ASSESS):   C_NUM_RESP = 0;
MPRINT(EM_ASSESS):   C_NUM_NONRESP = 0;
MPRINT(EM_ASSESS):   C_P_RESP = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   PREVIOUSPROFIT = 0;
MPRINT(EM_ASSESS):   MAXPROFIT = 0;
MPRINT(EM_ASSESS):   _KS_BIN_ = 0;
MPRINT(EM_ASSESS):   DROP _KS_BIN_;
MPRINT(EM_ASSESS):   AVGNUMRESP = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASERESP = 100 * RESPRATE;
MPRINT(EM_ASSESS):   BASERESPC = BASERESP;
MPRINT(EM_ASSESS):   BASECAP = 100 / 20;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................Start OF Gainschart = Outranks Area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = 0;
MPRINT(EM_ASSESS):   DO GROUP = 20 TO 1 BY -1;
 
MPRINT(EM_ASSESS):   BASECAPC + BASECAP;
MPRINT(EM_ASSESS):   PERCENTILE = GROUP * (100 / 20);
MPRINT(EM_ASSESS):   MINPROB = MINPROBS ( GROUP);
MPRINT(EM_ASSESS):   MAXPROB = MAXPROBS ( GROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB" || LEFT ( PUT (GROUP, 3.)), MINPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB" || LEFT ( PUT (GROUP, 3.)), MAXPROB);
MPRINT(EM_ASSESS):   NUMOBS = NUMOBSS ( GROUP);
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN MNPROB = MNPROBS ( GROUP) / NUMOBS;
MPRINT(EM_ASSESS):   ELSE MNPROB = .;
MPRINT(EM_ASSESS):   C_NUMOBS = SUM (NUMOBS, C_NUMOBS);
MPRINT(EM_ASSESS):   NUMRESP = NUMRESPS ( GROUP);
MPRINT(EM_ASSESS):   NUMNONRESP = NUMOBS - NUMRESP;
MPRINT(EM_ASSESS):   C_AVGNUM_RESP + AVGNUMRESP;
MPRINT(EM_ASSESS):   IF C_NUMOBS <= _NEVENTS THEN DO;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   BESTCAPC = C_NUMOBS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BASEEVENTS = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASENONEVENTS = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   FLAG + 1;
MPRINT(EM_ASSESS):   DROP FLAG;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = _NEVENTS - C_NUMOBS + NUMOBS;
MPRINT(EM_ASSESS):   IF FLAG > 1 THEN BESTNUMEVENTS = 0;
MPRINT(EM_ASSESS):   BESTCAPC = 100;
MPRINT(EM_ASSESS):   IF C_NUMOBS - _NEVENTS <= NUMOBS THEN DO;
MPRINT(EM_ASSESS):   BASEEVENTS = C_NUMOBS - _NEVENTS;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS - C_NUMOBS + _NEVENTS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BASEEVENTS = 0;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   BESTCAP = BESTNUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BESTLIFT = BESTNUMEVENTS / AVGNUMRESP;
MPRINT(EM_ASSESS):   C_BESTNUMEVENTS + BESTNUMEVENTS;
MPRINT(EM_ASSESS):   DROP C_BESTNUMEVENTS;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN BESTLIFTC = C_BESTNUMEVENTS / (_NEVENTS / 1018 *
C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE BESTLIFTC = .;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESP = BESTNUMEVENTS * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_RESP = NUMRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_NONRESP = NUMNONRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESP = .;
MPRINT(EM_ASSESS):   P_RESP = .;
MPRINT(EM_ASSESS):   P_NONRESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESPC = C_BESTNUMEVENTS * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   BESTGAIN = MAX (0, ((C_BESTNUMEVENTS / C_NUMOBS ) / ( AVGNUMRESP /
NUMOBS) - 1) * 100);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESPC = .;
MPRINT(EM_ASSESS):   BESTGAIN = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMNONRESP > 0 THEN ODDS = NUMRESP / NUMNONRESP;
MPRINT(EM_ASSESS):   ELSE ODDS = .;
MPRINT(EM_ASSESS):   C_NUM_RESP = SUM (C_NUM_RESP , NUMRESP );
MPRINT(EM_ASSESS):   C_NUM_NONRESP = SUM (C_NUM_NONRESP, NUMNONRESP );
MPRINT(EM_ASSESS):   IF C_NUM_NONRESP > 0 THEN C_ODDS = C_NUM_RESP / C_NUM_NONRESP;
MPRINT(EM_ASSESS):   ELSE C_ODDS = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   C_P_RESP = C_NUM_RESP * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   GAIN = ABS(100 * (((C_NUM_RESP / C_NUMOBS ) / (_NEVENTS / 1018)) - 1));
MPRINT(EM_ASSESS):   BASEGAIN = 100 * (( (C_AVGNUM_RESP / C_NUMOBS) / ( AVGNUMRESP / NUMOBS))
- 1);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   GAIN = .;
MPRINT(EM_ASSESS):   BASEGAIN = .;
MPRINT(EM_ASSESS):   C_P_RESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF BASEGAIN <= 0 THEN BASEGAIN = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = NUMRESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   P_CAPT_NONRESP = NUMNONRESP * 100 / ( 1018 - _NEVENTS);
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = C_NUM_RESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   C_P_CAPT_NONRESP = C_NUM_NONRESP * 100 / ( 1018 - _NEVENTS);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Area For Binned KS in Outranks area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _DIFFERENCE = C_P_CAPT_RESP - C_P_CAPT_NONRESP ;
MPRINT(EM_ASSESS):   IF _KS_BIN_ < _DIFFERENCE THEN DO;
MPRINT(EM_ASSESS):   _KS_BIN_ = _DIFFERENCE;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = MINPROB + (MAXPROB - MINPROB) / 2 ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LIFT = P_RESP * .01 / RESPRATE ;
MPRINT(EM_ASSESS):   C_LIFT = C_P_RESP * .01 / RESPRATE;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BASELIFT = AVGNUMRESP / ( RESPRATE * NUMOBS );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE BASELIFT = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN CBASELIFT = C_AVGNUM_RESP / (RESPRATE * C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE CBASELIFT = .;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ WITHIN DO LOOP FOR OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 + 1 - GROUP;
MPRINT(EM_ASSESS):   PERCENTILE = BIN * (100 / 20);
MPRINT(EM_ASSESS):   B_C_P_RESP = PERCENTILE;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPRANK ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................ END OF GAINSCHART = OUTRANKS AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFITGROUP" , MAXPROFITGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFIT" , MAXPROFIT );
MPRINT(EM_ASSESS):   KS_ABSDIFF = 0 ;
MPRINT(EM_ASSESS):   MINPRECTPR = 9999;
MPRINT(EM_ASSESS):   Y0 = 1 - RESPRATE;
MPRINT(EM_ASSESS):   Y1 = RESPRATE;
MPRINT(EM_ASSESS):   MAXMUTUAL = 0;
MPRINT(EM_ASSESS):   DROP MAXMUTUAL KSPROB Y0 Y1 KS_ABSDIFF MINPRECTPR;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .....................About to start Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................... Finished Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Outdist ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS96 - EVENTS100 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS96 - NONEVENTS100);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB96 -
SCR_MNPROB100) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB96 - SCR_MINPROB100) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB96 - SCR_MAXPROB100) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 20;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 19 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS91 - EVENTS95 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS91 - NONEVENTS95);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB91 -
SCR_MNPROB95) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB91 - SCR_MINPROB95) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB91 - SCR_MAXPROB95) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 19;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 18 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS86 - EVENTS90 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS86 - NONEVENTS90);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB86 -
SCR_MNPROB90) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB86 - SCR_MINPROB90) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB86 - SCR_MAXPROB90) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 18;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 17 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS81 - EVENTS85 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS81 - NONEVENTS85);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB81 -
SCR_MNPROB85) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB81 - SCR_MINPROB85) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB81 - SCR_MAXPROB85) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 17;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 16 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS76 - EVENTS80 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS76 - NONEVENTS80);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB76 -
SCR_MNPROB80) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB76 - SCR_MINPROB80) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB76 - SCR_MAXPROB80) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 16;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 15 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS71 - EVENTS75 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS71 - NONEVENTS75);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB71 -
SCR_MNPROB75) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB71 - SCR_MINPROB75) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB71 - SCR_MAXPROB75) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 15;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 14 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS66 - EVENTS70 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS66 - NONEVENTS70);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB66 -
SCR_MNPROB70) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB66 - SCR_MINPROB70) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB66 - SCR_MAXPROB70) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 14;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 13 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS61 - EVENTS65 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS61 - NONEVENTS65);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB61 -
SCR_MNPROB65) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB61 - SCR_MINPROB65) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB61 - SCR_MAXPROB65) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 13;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 12 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS56 - EVENTS60 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS56 - NONEVENTS60);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB56 -
SCR_MNPROB60) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB56 - SCR_MINPROB60) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB56 - SCR_MAXPROB60) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 12;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 11 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS51 - EVENTS55 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS51 - NONEVENTS55);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB51 -
SCR_MNPROB55) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB51 - SCR_MINPROB55) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB51 - SCR_MAXPROB55) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 11;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 10 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS46 - EVENTS50 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS46 - NONEVENTS50);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB46 -
SCR_MNPROB50) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB46 - SCR_MINPROB50) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB46 - SCR_MAXPROB50) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 10;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 9 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS41 - EVENTS45 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS41 - NONEVENTS45);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB41 -
SCR_MNPROB45) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB41 - SCR_MINPROB45) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB41 - SCR_MAXPROB45) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 9;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 8 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS36 - EVENTS40 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS36 - NONEVENTS40);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB36 -
SCR_MNPROB40) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB36 - SCR_MINPROB40) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB36 - SCR_MAXPROB40) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 8;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 7 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS31 - EVENTS35 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS31 - NONEVENTS35);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB31 -
SCR_MNPROB35) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB31 - SCR_MINPROB35) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB31 - SCR_MAXPROB35) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 7;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 6 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS26 - EVENTS30 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS26 - NONEVENTS30);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB26 -
SCR_MNPROB30) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB26 - SCR_MINPROB30) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB26 - SCR_MAXPROB30) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 6;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 5 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS21 - EVENTS25 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS21 - NONEVENTS25);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB21 -
SCR_MNPROB25) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB21 - SCR_MINPROB25) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB21 - SCR_MAXPROB25) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 5;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 4 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS16 - EVENTS20 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS16 - NONEVENTS20);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB16 -
SCR_MNPROB20) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB16 - SCR_MINPROB20) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB16 - SCR_MAXPROB20) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 4;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 3 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS11 - EVENTS15 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS11 - NONEVENTS15);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB11 -
SCR_MNPROB15) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB11 - SCR_MINPROB15) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB11 - SCR_MAXPROB15) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 3;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 2 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS6 - EVENTS10 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS6 - NONEVENTS10);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB6 -
SCR_MNPROB10) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB6 - SCR_MINPROB10) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB6 - SCR_MAXPROB10) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 2;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 1 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS1 - EVENTS5 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS1 - NONEVENTS5);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB1 - SCR_MNPROB5)
/ NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB1 - SCR_MINPROB5) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB1 - SCR_MAXPROB5) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 1;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSPROB" , PUT (KSPROB, 5.3 ) );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_PROB" , _KS_BIN_PROB );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_" , _KS_BIN_ / 100 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSDIFF" , KS_ABSDIFF );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PRECTPR" , PRECTPR );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXMUTUALPROB" , MAXMUTUALPROB);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LABEL __EVENT__ = "Event" DECILE = "Depth" BIN = "Bin" NUMOBS = "Number
of Observations" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * RUN for large data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST;
MPRINT(EM_ASSESS):   DELETE _AUXEVENTNAME;
MPRINT(EM_ASSESS):   QUIT;
 
MPRINT(EM_ASSESS):   OPTION NOCENTER LS = 95;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Report Vars Area.;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start OF Outdist Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPSCOREDIST;
MPRINT(EM_ASSESS):   RENAME MODELSCORE = SCORE UPPERPROB = UPPOSTERIOR SCR_CP_EVENTS =
CUMULATIVEPERCENTAGEOFEVENTS SCR_CP_NONEVENTS = CUMULATIVEPERCENTAGEOFNONEVENTS EVENTVALUE =
EVENT LOWERPROB = LOWPOSTERIOR NUMOBSINGROUP = N PERCOBSINGROUP = PERCENTAGE SCR_MINPROB =
_MINP_ SCR_MAXPROB = _MAXP_ SCR_MNPROB = _MEANP_ RANGE = P_LABEL C_PERCOBSINGROUP =
CUMULATIVEPERCENTAGE SCR_NUMEVENTS = NUMBEROFEVENTS SCR_NUMNONEVENTS = NUMBEROFNONEVENTS
SCR_P_EVENTS = PERCENTAGEOFEVENTS SCR_P_NONEVENTS = PERCENTAGEOFNONEVENTS ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... OUTDIST MODIFICATION LABEL AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL BIN = "Bin" N = "Number of Observations" P_LABEL = "Posterior
Probability Range" EVENT = "Event" LOWPOSTERIOR = "Lower Bound Posterior Probability"
PERCENTAGEOFEVENTS = "Percentage of Events" CUMULATIVEPERCENTAGEOFNONEVENTS = "Cumulative
Percentage of Nonevents" CUMULATIVEPERCENTAGE = "Cumulative Percentage" PERCENTAGEOFEVENTS =
"Percentage of Events" PERCENTAGEOFNONEVENTS = "Percentage of Nonevents"
CUMULATIVEPERCENTAGEOFEVENTS = "Cumulative Percentage of Events" UPPOSTERIOR = "Upper Bound
Posterior Probability" NUMBEROFEVENTS = "Number of Events" PERCENTAGE = "Percentage"
NUMBEROFNONEVENTS = "Number of Nonevents" _MEANP_ = "Mean Posterior Probability" _MINP_ = "Min
Posterior Probability" _MAXP_ = "Max Posterior Probability" SCORE = "Model Score" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   SET WORK._TEMPSCOREDIST (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........... END OF OUTDIST MODIFICATION;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start of OUTRANKS Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPRANK;
MPRINT(EM_ASSESS):   RENAME __EVENT__ = EVENT P_RESP = RESP C_P_CAPT_RESP = CAPC P_CAPT_RESP =
CAP NUMNONRESP = NUMNEVENT NUMRESP = NUMEVENT BASEEVENTS = BASENUMBEROFEVENTS BESTNUMEVENTS =
BESTNUMBEROFEVENTS MAXPROB = _MAXP_ MINPROB = _MINP_ CBASELIFT = BASELIFTC C_LIFT = LIFTC
MNPROB = _MEANP_ PERCENTILE = DECILE NUMOBS = N NUMEVENT = NUMBEROFEVENTS C_P_RESP = RESPC ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................. OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL _MAXP_ = "Max Posterior Probability" _MINP_ = "Min Posterior
Probability" _MEANP_ = "Mean Posterior Probability" BASECAP = "Baseline % Captured Response"
BASECAPC = "Baseline Cumulative % Captured Response" BASENUMBEROFEVENTS = "Baseline Number of
Events" BASEGAIN = "Baseline Gain" BASELIFT = "Baseline Lift" BASELIFTC = "Baseline Cumulative
Lift" BASERESP = "Baseline % Response" BASERESPC = "Baseline Cumulative % Response" BASELIFTC
= "Baseline Cumulative Lift" BESTCAP = "Best % Captured Response" BESTCAPC = "Best Cumulative
% Captured Response" BESTGAIN = "Best Gain" BESTRESP = "Best % Response" BESTRESPC = "Best
Cumulative % Response" BESTLIFT = "Best Lift" BESTLIFTC = "Best Cumulative Lift"
BESTNUMBEROFEVENTS = "Best Number of Events" CAP = "% Captured Response" CAPC = "Cumulative %
Captured Response" DECILE = "Depth" GAIN = "Gain" LIFT = "Lift" LIFTC = "Cumulative Lift"
NUMNEVENT = "Number of Nonevents" N = "Number of Observations" EVENT = "Event" RESPC =
"Cumulative % Response" NUMBEROFEVENTS = "Number of Events" RESP = "% Response" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK;
MPRINT(EM_ASSESS):   SET WORK._TEMPRANK (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   proc datasets lib=work nolist;
MPRINT(EM_ASSESS):   delete _ea_tmpdata;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_ASSESS):   quit;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   OPTION ERRORS = 20;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):    data WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "VALIDATE";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl23_EMRANK;
MPRINT(EM_DIAGRAM):   length target $32;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   length dataRole $20;
MPRINT(EM_DIAGRAM):   length EVENT $32;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl23_EMRANK WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "VALIDATE";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl23_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   length dataRole $20;
MPRINT(EM_DIAGRAM):   length EVENT $32;
MPRINT(EM_DIAGRAM):   length P_LABEL $9;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl23_EMSCOREDIST WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   run;
2144429    %let _cn = %sysfunc(getoption(CENTER));
2144430    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
2144431    proc print data=EMWS8.Ensmbl23_EMREPORTFIT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl23_EMREPORTFIT noobs label;
2144432    var STAT LABEL TRAIN
2144433    VALIDATE
2144434    ;
MPRINT(EM_DIAGRAM):   var STAT LABEL TRAIN VALIDATE ;
2144435    by TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by TARGET TARGETLABEL;
2144436    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
2144437    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Fit Statistics";
MPRINT(EM_DIAGRAM):   run;
2144438    run;
 
NOTE: There were 9 observations read from the data set EMWS8.ENSMBL23_EMREPORTFIT.
NOTE: The PROCEDURE PRINT printed page 1531.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2144439    title10;
MPRINT(EM_DIAGRAM):   title10;
2144440    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
2144441    proc sort data=EMWS8.Ensmbl23_EMCLASSIFICATION nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.Ensmbl23_EMCLASSIFICATION nothreads;
2144442    by DATAROLE TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET TARGETLABEL;
2144443    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS8.ENSMBL23_EMCLASSIFICATION.
NOTE: The data set EMWS8.ENSMBL23_EMCLASSIFICATION has 8 observations and 12 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2144444    %let _cn = %sysfunc(getoption(CENTER));
2144445    options nocenter;
MPRINT(EM_DIAGRAM):   options nocenter;
2144446    proc print data=EMWS8.Ensmbl23_EMCLASSIFICATION noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl23_EMCLASSIFICATION noobs label;
2144447    var from into pct_row pct_col count percent
2144448    ;
MPRINT(EM_DIAGRAM):   var from into pct_row pct_col count percent ;
2144449    by DATAROLE TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET TARGETLABEL;
2144450    label FROM = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,     NOQUOTE))";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
2144451    label INTO = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcome_vlabel ,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
2144452    label PCT_ROW = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetpct_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
2144453    label PCT_COL = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcomepct_vlabel , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
2144454    label COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel ,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
2144455    label PERCENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_totalpct_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
2144456    where _TYPE_='PREDICTION';
MPRINT(EM_DIAGRAM):   where _TYPE_='PREDICTION';
2144457    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
2144458    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_classification_title    , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Classification Table";
MPRINT(EM_DIAGRAM):   run;
2144459    run;
 
NOTE: There were 8 observations read from the data set EMWS8.ENSMBL23_EMCLASSIFICATION.
      WHERE _TYPE_='PREDICTION';
NOTE: The PROCEDURE PRINT printed page 1532.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2144460    title9;
MPRINT(EM_DIAGRAM):   title9;
2144461    title10;
MPRINT(EM_DIAGRAM):   title10;
2144462    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
2144463    %let _cn = %sysfunc(getoption(CENTER));
2144464    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
2144465    data EMWS8.Ensmbl23_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl23_EMEVENTREPORT;
2144466    length DATAROLE TARGET $32 TARGETLABEL $200 FALSENEVENT TRUENEVENT FALSEEVENT
2144466  ! TRUEEVENT 8;
MPRINT(EM_DIAGRAM):   length DATAROLE TARGET $32 TARGETLABEL $200 FALSENEVENT TRUENEVENT
FALSEEVENT TRUEEVENT 8;
2144467    label DATAROLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
2144467  !  TARGET = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,      NOQUOTE))"
2144467  ! TARGETLABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel, NOQUOTE))"
2144467  ! FALSEEVENT
2144468    = "%sysfunc(sasmsg(sashelp.dmine, rpt_falseevent_vlabel ,  NOQUOTE))" FALSENEVENT =
2144468  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_falsenevent_vlabel , NOQUOTE))" TRUEEVENT =
2144468  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_trueevent_vlabel ,   NOQUOTE))" TRUENEVENT =
2144469       "%sysfunc(sasmsg(sashelp.dmine, rpt_truenevent_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role" TARGET = "Target" TARGETLABEL = "Target
Label" FALSEEVENT = "False Positive" FALSENEVENT = "False Negative" TRUEEVENT = "True
Positive" TRUENEVENT = "True Negative";
2144470    FALSEEVENT=0;
MPRINT(EM_DIAGRAM):   FALSEEVENT=0;
2144471    FALSENEVENT=0;
MPRINT(EM_DIAGRAM):   FALSENEVENT=0;
2144472    TRUEEVENT=0;
MPRINT(EM_DIAGRAM):   TRUEEVENT=0;
2144473    TRUENEVENT=0;
MPRINT(EM_DIAGRAM):   TRUENEVENT=0;
2144474    set EMWS8.Ensmbl23_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl23_EMEVENTREPORT;
2144475    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set EMWS8.ENSMBL23_EMEVENTREPORT.
NOTE: The data set EMWS8.ENSMBL23_EMEVENTREPORT has 2 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2144476    proc print data=EMWS8.Ensmbl23_EMEVENTREPORT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl23_EMEVENTREPORT noobs label;
2144477    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
2144478    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_eventtable_title    , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Event Classification Table";
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL;
MPRINT(EM_DIAGRAM):   run;
2144479    by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL;
2144480    run;
 
NOTE: There were 2 observations read from the data set EMWS8.ENSMBL23_EMEVENTREPORT.
NOTE: The PROCEDURE PRINT printed page 1533.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2144481    title10;
MPRINT(EM_DIAGRAM):   title10;
2144482    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
2144483    proc datasets library=EMWS8 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS8 nolist;
2144484    modify Ensmbl23_EMRANK;
MPRINT(EM_DIAGRAM):   modify Ensmbl23_EMRANK;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
2144485    label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
2144486    label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
2144486  ! ;
MPRINT(EM_DIAGRAM):   run;
2144487    run;
 
NOTE: MODIFY was successful for EMWS8.ENSMBL23_EMRANK.DATA.
2144488    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.10 seconds
      cpu time            0.11 seconds
 
 
2144489    %let _cn = %sysfunc(getoption(CENTER));
2144490    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
2144491    proc print data=EMWS8.Ensmbl23_EMRANK label noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl23_EMRANK label noobs;
2144492    var
2144493    decile gain lift liftc resp respc N _meanP_;
MPRINT(EM_DIAGRAM):   var decile gain lift liftc resp respc N _meanP_;
2144494    by
2144495    notsorted DATAROLE
2144496    notsorted TARGET
2144497    notsorted TARGETLABEL
2144498    ;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL ;
2144499    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
2144500    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_scoreranking_title , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Rankings";
MPRINT(EM_DIAGRAM):   run;
2144501    run;
 
NOTE: There were 40 observations read from the data set EMWS8.ENSMBL23_EMRANK.
NOTE: The PROCEDURE PRINT printed page 1534.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2144502    title10;
MPRINT(EM_DIAGRAM):   title10;
2144503    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
2144504    proc datasets library=EMWS8 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS8 nolist;
2144505    modify Ensmbl23_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   modify Ensmbl23_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
2144506    label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,
2144506  ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
2144507    label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
2144507  ! ;
MPRINT(EM_DIAGRAM):   run;
2144508    run;
 
NOTE: MODIFY was successful for EMWS8.ENSMBL23_EMSCOREDIST.DATA.
2144509    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.09 seconds
      cpu time            0.10 seconds
 
 
MPRINT(EM_DIAGRAM):    options nocenter;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl23_EMSCOREDIST label noobs;
MPRINT(EM_DIAGRAM):   var p_label numberOfEvents numberOfNonEvents _meanp_ percentage;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL ;
MPRINT(EM_DIAGRAM):   where TARGET in( "DepVar" );
MPRINT(EM_DIAGRAM):   title9 ' ';
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Distribution";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   title10;
MPRINT(EM_DIAGRAM):   options NOCENTER;
MPRINT(EM_DIAGRAM):   proc printto;
MPRINT(EM_DIAGRAM):   run;
