MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "13.33 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                28. April 2016
Time:                13.33 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O3WJELX5 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl23\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O3WJELX5 new;
MPRINT(EM_DIAGRAM):   run;
92957      filename emflow
92957    ! "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl23\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl23\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl23: Scoring NEURAL40_TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
92958      *------------------------------------------------------------*;
92959      * Ensmbl23: Scoring NEURAL40_TRAIN data;
92960      *------------------------------------------------------------*;
92961      data EMWS8.Ensmbl23_TRAIN
92962      / view=EMWS8.Ensmbl23_TRAIN
92963      ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl23_TRAIN / view=EMWS8.Ensmbl23_TRAIN ;
92964      set EMWS8.Neural40_TRAIN
92965      ;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural40_TRAIN ;
92966      %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl23\EMFLOWSCORE.sas.
92967     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
92968     +* Ensmbl23: Combine model for DepVar;
MPRINT(EM_DIAGRAM):   * Ensmbl23: Combine model for DepVar;
92969     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
92970     +* Ensmbl23: Scoring Code of model 1 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl23: Scoring Code of model 1 of 5;
92971     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
92972     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
92973     +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
92974     +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
92975     +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
92976     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
92977     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
92978     +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
92979     +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
92980     +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
92981     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
92982     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
92983     +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
92984     +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
92985     +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
92986     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
92987     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
92988     +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
92989     +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
92990     +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
92991     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
92992     +
92993     +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
92994     +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
92994    !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
92995     +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
92996     +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
92997     +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
92998     +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
92999     +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
93000     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
93001     +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
93002     +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
93003     +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
93004     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
93005     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
93006     +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
93007     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
93008     +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
93009     +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
93010     +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
93011     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
93012     +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
93013     +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
93014     +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
93015     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
93016     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
93017     +* TOOL: Metadata Node;
MPRINT(EM_DIAGRAM):   * TOOL: Metadata Node;
93018     +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
93019     +* NODE: Meta3;
MPRINT(EM_DIAGRAM):   * NODE: Meta3;
93020     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
93021     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
93022     +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
93023     +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
93024     +* NODE: Neural40;
MPRINT(EM_DIAGRAM):   * NODE: Neural40;
93025     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
93026     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
93027     +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
93028     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
93029     +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
93030     + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
93031     + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
93032     + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
93033     + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
93034     + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
93035     + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
93036     + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
93037     +LENGTH _WARN_ $4
93038     +      F_DepVar  $ 12
93039     +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
93040     +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
93041     +
93042     +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
93043     +
93044     +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
93045     +
93046     +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
93047     +
93048     +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
93049     +
93050     +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
93051     +
93052     +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
93053     +
93054     +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
93055     +
93056     +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
93057     +
93058     +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
93059     +
93060     +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
93061     +
93062     +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
93063     +
93064     +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
93065     +
93066     +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
93067     +
93068     +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
93069     +
93070     +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
93071     +
93072     +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
93073     +
93074     +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
93075     +
93076     +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
93077     +
93078     +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
93079     +
93080     +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
93081     +
93082     +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
93083     +
93084     +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
93085     +
93086     +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
93087     +
93088     +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
93089     +
93090     +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
93091     +
93092     +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
93093     +
93094     +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
93095     +
93096     +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
93097     +
93098     +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
93099     +
93100     +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
93101     +
93102     +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
93103     +
93104     +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
93105     +
93106     +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
93107     +
93108     +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
93109     +
93110     +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
93111     +
93112     +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
93113     +
93114     +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
93115     +
93116     +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
93117     +
93118     +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
93119     +
93120     +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
93121     +
93122     +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
93123     +
93124     +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
93125     +
93126     +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
93127     +
93128     +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
93129     +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
93130     +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
93131     +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
93132     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
93133     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
93134     +end;
MPRINT(EM_DIAGRAM):   end;
93135     +else do;
MPRINT(EM_DIAGRAM):   else do;
93136     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
93137     +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
93138     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
93139     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
93140     +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
93141     +   end;
MPRINT(EM_DIAGRAM):   end;
93142     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
93143     +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
93144     +   end;
MPRINT(EM_DIAGRAM):   end;
93145     +   else do;
MPRINT(EM_DIAGRAM):   else do;
93146     +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
93147     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
93148     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
93149     +   end;
MPRINT(EM_DIAGRAM):   end;
93150     +end;
MPRINT(EM_DIAGRAM):   end;
93151     +
93152     +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
93153     +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
93154     +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
93155     +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
93156     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
93157     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
93158     +end;
MPRINT(EM_DIAGRAM):   end;
93159     +else do;
MPRINT(EM_DIAGRAM):   else do;
93160     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
93161     +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
93162     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
93163     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
93164     +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
93165     +   end;
MPRINT(EM_DIAGRAM):   end;
93166     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
93167     +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
93168     +   end;
MPRINT(EM_DIAGRAM):   end;
93169     +   else do;
MPRINT(EM_DIAGRAM):   else do;
93170     +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
93171     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
93172     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
93173     +   end;
MPRINT(EM_DIAGRAM):   end;
93174     +end;
MPRINT(EM_DIAGRAM):   end;
93175     +
93176     +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
93177     +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
93178     +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
93179     +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
93180     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
93181     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
93182     +end;
MPRINT(EM_DIAGRAM):   end;
93183     +else do;
MPRINT(EM_DIAGRAM):   else do;
93184     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
93185     +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
93186     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
93187     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
93188     +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
93189     +   end;
MPRINT(EM_DIAGRAM):   end;
93190     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
93191     +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
93192     +   end;
MPRINT(EM_DIAGRAM):   end;
93193     +   else do;
MPRINT(EM_DIAGRAM):   else do;
93194     +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
93195     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
93196     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
93197     +   end;
MPRINT(EM_DIAGRAM):   end;
93198     +end;
MPRINT(EM_DIAGRAM):   end;
93199     +
93200     +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
93201     +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
93202     +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
93203     +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
93204     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
93205     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
93206     +end;
MPRINT(EM_DIAGRAM):   end;
93207     +else do;
MPRINT(EM_DIAGRAM):   else do;
93208     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
93209     +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
93210     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
93211     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
93212     +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
93213     +   end;
MPRINT(EM_DIAGRAM):   end;
93214     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
93215     +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
93216     +   end;
MPRINT(EM_DIAGRAM):   end;
93217     +   else do;
MPRINT(EM_DIAGRAM):   else do;
93218     +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
93219     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
93220     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
93221     +   end;
MPRINT(EM_DIAGRAM):   end;
93222     +end;
MPRINT(EM_DIAGRAM):   end;
93223     +
93224     +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
93225     +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
93226     +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
93227     +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
93228     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
93229     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
93230     +end;
MPRINT(EM_DIAGRAM):   end;
93231     +else do;
MPRINT(EM_DIAGRAM):   else do;
93232     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
93233     +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
93234     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
93235     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
93236     +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
93237     +   end;
MPRINT(EM_DIAGRAM):   end;
93238     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
93239     +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
93240     +   end;
MPRINT(EM_DIAGRAM):   end;
93241     +   else do;
MPRINT(EM_DIAGRAM):   else do;
93242     +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
93243     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
93244     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
93245     +   end;
MPRINT(EM_DIAGRAM):   end;
93246     +end;
MPRINT(EM_DIAGRAM):   end;
93247     +
93248     +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
93249     +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
93250     +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
93251     +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
93252     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
93253     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
93254     +end;
MPRINT(EM_DIAGRAM):   end;
93255     +else do;
MPRINT(EM_DIAGRAM):   else do;
93256     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
93257     +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
93258     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
93259     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
93260     +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
93261     +   end;
MPRINT(EM_DIAGRAM):   end;
93262     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
93263     +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
93264     +   end;
MPRINT(EM_DIAGRAM):   end;
93265     +   else do;
MPRINT(EM_DIAGRAM):   else do;
93266     +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
93267     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
93268     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
93269     +   end;
MPRINT(EM_DIAGRAM):   end;
93270     +end;
MPRINT(EM_DIAGRAM):   end;
93271     +
93272     +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
93273     +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
93274     +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
93275     +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
93276     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
93277     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
93278     +end;
MPRINT(EM_DIAGRAM):   end;
93279     +else do;
MPRINT(EM_DIAGRAM):   else do;
93280     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
93281     +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
93282     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
93283     +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
93284     +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
93285     +   end;
MPRINT(EM_DIAGRAM):   end;
93286     +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
93287     +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
93288     +   end;
MPRINT(EM_DIAGRAM):   end;
93289     +   else do;
MPRINT(EM_DIAGRAM):   else do;
93290     +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
93291     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
93292     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
93293     +   end;
MPRINT(EM_DIAGRAM):   end;
93294     +end;
MPRINT(EM_DIAGRAM):   end;
93295     +
93296     +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
93297     +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
93298     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
93299     +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
93300     +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
93301     +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
93302     +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
93303     +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
93304     +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
93305     +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
93306     +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
93307     +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
93308     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
93309     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
93310     +end;
MPRINT(EM_DIAGRAM):   end;
93311     +else do;
MPRINT(EM_DIAGRAM):   else do;
93312     +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
93313     +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
93314     +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
93315     +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
93316     +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
93317     +   end;
MPRINT(EM_DIAGRAM):   end;
93318     +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
93319     +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
93320     +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
93321     +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
93322     +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
93323     +   end;
MPRINT(EM_DIAGRAM):   end;
93324     +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
93325     +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
93326     +   end;
MPRINT(EM_DIAGRAM):   end;
93327     +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
93328     +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
93329     +   end;
MPRINT(EM_DIAGRAM):   end;
93330     +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
93331     +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
93332     +   end;
MPRINT(EM_DIAGRAM):   end;
93333     +   else do;
MPRINT(EM_DIAGRAM):   else do;
93334     +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
93335     +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
93336     +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
93337     +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
93338     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
93339     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
93340     +   end;
MPRINT(EM_DIAGRAM):   end;
93341     +end;
MPRINT(EM_DIAGRAM):   end;
93342     +
93343     +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
93344     +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
93345     +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
93346     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
93347     +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
93348     +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
93349     +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
93350     +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
93351     +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
93352     +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
93353     +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
93354     +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
93355     +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
93356     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
93357     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
93358     +end;
MPRINT(EM_DIAGRAM):   end;
93359     +else do;
MPRINT(EM_DIAGRAM):   else do;
93360     +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
93361     +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
93362     +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
93363     +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
93364     +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
93365     +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
93366     +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
93367     +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
93368     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
93369     +         end;
MPRINT(EM_DIAGRAM):   end;
93370     +         else do;
MPRINT(EM_DIAGRAM):   else do;
93371     +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
93372     +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
93373     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
93374     +            end;
MPRINT(EM_DIAGRAM):   end;
93375     +         end;
MPRINT(EM_DIAGRAM):   end;
93376     +      end;
MPRINT(EM_DIAGRAM):   end;
93377     +      else do;
MPRINT(EM_DIAGRAM):   else do;
93378     +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
93379     +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
93380     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
93381     +         end;
MPRINT(EM_DIAGRAM):   end;
93382     +      end;
MPRINT(EM_DIAGRAM):   end;
93383     +   end;
MPRINT(EM_DIAGRAM):   end;
93384     +   else do;
MPRINT(EM_DIAGRAM):   else do;
93385     +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
93386     +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
93387     +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
93388     +      end;
MPRINT(EM_DIAGRAM):   end;
93389     +      else do;
MPRINT(EM_DIAGRAM):   else do;
93390     +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
93391     +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
93392     +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
93393     +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
93394     +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
93395     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
93396     +         end;
MPRINT(EM_DIAGRAM):   end;
93397     +      end;
MPRINT(EM_DIAGRAM):   end;
93398     +   end;
MPRINT(EM_DIAGRAM):   end;
93399     +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
93400     +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
93401     +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
93402     +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
93403     +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
93404     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
93405     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
93406     +   end;
MPRINT(EM_DIAGRAM):   end;
93407     +end;
MPRINT(EM_DIAGRAM):   end;
93408     +
93409     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
93410     +*** Checking missing input Interval
93411     +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
93412     +
93413     +IF NMISS(
93414     +   AcceptedCmpTotal ,
93415     +   Age ,
93416     +   Frq ,
93417     +   Income ,
93418     +   Kidhome ,
93419     +   MntFishProducts ,
93420     +   MntFruits ,
93421     +   MntGoldProds ,
93422     +   MntSweetProducts ,
93423     +   MonthsAsCustomer ,
93424     +   NumDealsPurchases ,
93425     +   NumWebVisitsMonth ,
93426     +   RFMstat ,
93427     +   RMntFrq ,
93428     +   Recency ,
93429     +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
93430     +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
93431     +
93432     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
93433     +END;
MPRINT(EM_DIAGRAM):   END;
93434     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
93435     +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
93436     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
93437     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
93438     +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
93439     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
93440     +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
93441     +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
93442     +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
93443     +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
93444     +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
93445     +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
93446     +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
93447     +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
93448     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
93449     +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
93450     +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
93451     +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
93452     +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
93453     +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
93454     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
93455     +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
93456     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
93457     +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
93458     +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
93459     +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
93460     +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
93461     +END;
MPRINT(EM_DIAGRAM):   END;
93462     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
93463     +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
93464     +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
93465     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
93466     +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
93467     +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
93468     +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
93469     +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
93470     +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
93471     +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
93472     +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
93473     +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
93474     +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
93475     +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
93476     +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
93477     +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
93478     +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
93479     +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
93480     +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
93481     +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
93482     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
93483     +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
93484     +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
93485     +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
93486     +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
93487     +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
93488     +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
93489     +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
93490     +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
93491     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
93492     +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
93493     +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
93494     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
93495     +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
93496     +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
93497     +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
93498     +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
93499     +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
93500     +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
93501     +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
93502     +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
93503     +END;
MPRINT(EM_DIAGRAM):   END;
93504     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
93505     +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
93506     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
93507     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
93508     +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
93509     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
93510     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
93511     +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
93512     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
93513     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
93514     +   H11  =     0.00871038651131 * S_AcceptedCmpTotal  +     0.04885111887799 *
93515     +        S_Age  +    -0.16081720955101 * S_Frq  +    -0.81673231415398 *
93516     +        S_Income  +     0.39760289149752 * S_Kidhome
93517     +          +     -0.0376693415484 * S_MntFishProducts
93518     +          +     0.01707556953741 * S_MntFruits  +     0.03640992016126 *
93519     +        S_MntGoldProds  +     0.18721014378487 * S_MntSweetProducts
93520     +          +    -0.13043754404228 * S_MonthsAsCustomer
93521     +          +     -0.0139146653349 * S_NumDealsPurchases
93522     +          +    -0.01539820220757 * S_NumWebVisitsMonth
93523     +          +     0.00494819481975 * S_RFMstat  +    -0.22517942530642 *
93524     +        S_RMntFrq  +     0.55149605442396 * S_Recency
93525     +          +     0.54614592562743 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.00871038651131 * S_AcceptedCmpTotal + 0.04885111887799 * S_Age + 
-0.16081720955101 * S_Frq + -0.81673231415398 * S_Income + 0.39760289149752 * S_Kidhome + 
-0.0376693415484 * S_MntFishProducts + 0.01707556953741 * S_MntFruits + 0.03640992016126 * 
S_MntGoldProds + 0.18721014378487 * S_MntSweetProducts + -0.13043754404228 * 
S_MonthsAsCustomer + -0.0139146653349 * S_NumDealsPurchases + -0.01539820220757 * 
S_NumWebVisitsMonth + 0.00494819481975 * S_RFMstat + -0.22517942530642 * S_RMntFrq + 
0.55149605442396 * S_Recency + 0.54614592562743 * S_Teenhome ;
93526     +   H12  =    -0.31218916782956 * S_AcceptedCmpTotal  +    -0.13577174745207 *
93527     +        S_Age  +     -0.1133596721701 * S_Frq  +    -0.03250630326063 *
93528     +        S_Income  +     0.31208673256073 * S_Kidhome
93529     +          +    -0.04911763008195 * S_MntFishProducts
93530     +          +     0.04440357574827 * S_MntFruits  +     0.18064625439163 *
93531     +        S_MntGoldProds  +     0.34124097901137 * S_MntSweetProducts
93532     +          +    -0.48577934340503 * S_MonthsAsCustomer
93533     +          +     0.31218334237091 * S_NumDealsPurchases
93534     +          +     0.24212805498377 * S_NumWebVisitsMonth
93535     +          +     0.30439494800184 * S_RFMstat  +    -0.01845944589462 *
93536     +        S_RMntFrq  +    -0.48513476805321 * S_Recency
93537     +          +    -0.32721006241811 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.31218916782956 * S_AcceptedCmpTotal + -0.13577174745207 * S_Age 
+ -0.1133596721701 * S_Frq + -0.03250630326063 * S_Income + 0.31208673256073 * S_Kidhome + 
-0.04911763008195 * S_MntFishProducts + 0.04440357574827 * S_MntFruits + 0.18064625439163 * 
S_MntGoldProds + 0.34124097901137 * S_MntSweetProducts + -0.48577934340503 * 
S_MonthsAsCustomer + 0.31218334237091 * S_NumDealsPurchases + 0.24212805498377 * 
S_NumWebVisitsMonth + 0.30439494800184 * S_RFMstat + -0.01845944589462 * S_RMntFrq + 
-0.48513476805321 * S_Recency + -0.32721006241811 * S_Teenhome ;
93538     +   H13  =    -0.68076549765273 * S_AcceptedCmpTotal  +    -0.14510411148941 *
93539     +        S_Age  +     -0.3233004374436 * S_Frq  +    -0.42499945066724 *
93540     +        S_Income  +    -0.48748003518551 * S_Kidhome
93541     +          +     0.15434683428908 * S_MntFishProducts
93542     +          +     0.06482294164983 * S_MntFruits  +    -0.54308686262134 *
93543     +        S_MntGoldProds  +    -0.03954494482452 * S_MntSweetProducts
93544     +          +    -0.07405705160744 * S_MonthsAsCustomer
93545     +          +    -0.44979778263337 * S_NumDealsPurchases
93546     +          +    -0.51422673599958 * S_NumWebVisitsMonth
93547     +          +    -0.31727878849334 * S_RFMstat  +    -0.49659927360573 *
93548     +        S_RMntFrq  +     0.79850779605341 * S_Recency
93549     +          +    -0.01021777395977 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.68076549765273 * S_AcceptedCmpTotal + -0.14510411148941 * S_Age 
+ -0.3233004374436 * S_Frq + -0.42499945066724 * S_Income + -0.48748003518551 * S_Kidhome + 
0.15434683428908 * S_MntFishProducts + 0.06482294164983 * S_MntFruits + -0.54308686262134 * 
S_MntGoldProds + -0.03954494482452 * S_MntSweetProducts + -0.07405705160744 * 
S_MonthsAsCustomer + -0.44979778263337 * S_NumDealsPurchases + -0.51422673599958 * 
S_NumWebVisitsMonth + -0.31727878849334 * S_RFMstat + -0.49659927360573 * S_RMntFrq + 
0.79850779605341 * S_Recency + -0.01021777395977 * S_Teenhome ;
93550     +   H14  =     0.38365136681667 * S_AcceptedCmpTotal  +     0.07084748712672 *
93551     +        S_Age  +     0.07185932608666 * S_Frq  +     0.14505870102604 *
93552     +        S_Income  +    -0.62401744170985 * S_Kidhome
93553     +          +    -0.08499883212951 * S_MntFishProducts
93554     +          +     -0.1648853454448 * S_MntFruits  +    -0.00355780886042 *
93555     +        S_MntGoldProds  +    -0.29925551636086 * S_MntSweetProducts
93556     +          +    -0.04051431518694 * S_MonthsAsCustomer
93557     +          +     0.00788125797776 * S_NumDealsPurchases
93558     +          +     0.59495434076477 * S_NumWebVisitsMonth
93559     +          +     0.24302483463729 * S_RFMstat  +    -0.16358266655642 *
93560     +        S_RMntFrq  +    -0.73053231334164 * S_Recency
93561     +          +    -0.33321827557738 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 0.38365136681667 * S_AcceptedCmpTotal + 0.07084748712672 * S_Age + 
0.07185932608666 * S_Frq + 0.14505870102604 * S_Income + -0.62401744170985 * S_Kidhome + 
-0.08499883212951 * S_MntFishProducts + -0.1648853454448 * S_MntFruits + -0.00355780886042 * 
S_MntGoldProds + -0.29925551636086 * S_MntSweetProducts + -0.04051431518694 * 
S_MonthsAsCustomer + 0.00788125797776 * S_NumDealsPurchases + 0.59495434076477 * 
S_NumWebVisitsMonth + 0.24302483463729 * S_RFMstat + -0.16358266655642 * S_RMntFrq + 
-0.73053231334164 * S_Recency + -0.33321827557738 * S_Teenhome ;
93562     +   H15  =    -0.33763603932626 * S_AcceptedCmpTotal  +     0.16015390350682 *
93563     +        S_Age  +     0.93534536415494 * S_Frq  +     0.26932392970726 *
93564     +        S_Income  +     -0.0256051183156 * S_Kidhome
93565     +          +    -0.15661247042419 * S_MntFishProducts
93566     +          +     0.05583315238736 * S_MntFruits  +     0.02103897411055 *
93567     +        S_MntGoldProds  +     -0.1231125389085 * S_MntSweetProducts
93568     +          +     0.03994503424293 * S_MonthsAsCustomer
93569     +          +    -0.53734193208154 * S_NumDealsPurchases
93570     +          +    -0.58547802324835 * S_NumWebVisitsMonth
93571     +          +    -0.06088682875304 * S_RFMstat  +    -0.16953747051887 *
93572     +        S_RMntFrq  +     0.66048924026365 * S_Recency
93573     +          +    -0.18125808371879 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = -0.33763603932626 * S_AcceptedCmpTotal + 0.16015390350682 * S_Age 
+ 0.93534536415494 * S_Frq + 0.26932392970726 * S_Income + -0.0256051183156 * S_Kidhome + 
-0.15661247042419 * S_MntFishProducts + 0.05583315238736 * S_MntFruits + 0.02103897411055 * 
S_MntGoldProds + -0.1231125389085 * S_MntSweetProducts + 0.03994503424293 * S_MonthsAsCustomer 
+ -0.53734193208154 * S_NumDealsPurchases + -0.58547802324835 * S_NumWebVisitsMonth + 
-0.06088682875304 * S_RFMstat + -0.16953747051887 * S_RMntFrq + 0.66048924026365 * S_Recency + 
-0.18125808371879 * S_Teenhome ;
93574     +   H11  = H11  +     0.32214548124302 * AcceptedCmp10
93575     +          +     0.39647739988372 * AcceptedCmp20  +     0.31108042021128 *
93576     +        AcceptedCmp30  +     0.29806974935147 * AcceptedCmp40
93577     +          +     0.22776887209675 * AcceptedCmp50  +     0.15240663199135 *
93578     +        Complain0  +    -0.29371842867452 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.32214548124302 * AcceptedCmp10 + 0.39647739988372 * 
AcceptedCmp20 + 0.31108042021128 * AcceptedCmp30 + 0.29806974935147 * AcceptedCmp40 + 
0.22776887209675 * AcceptedCmp50 + 0.15240663199135 * Complain0 + -0.29371842867452 * 
HigherEducationBinary0 ;
93579     +   H12  = H12  +     0.16508910764131 * AcceptedCmp10
93580     +          +    -0.01591698903562 * AcceptedCmp20  +    -0.18749319390831 *
93581     +        AcceptedCmp30  +     0.10267845517937 * AcceptedCmp40
93582     +          +     0.26889478167941 * AcceptedCmp50  +     0.21127321497252 *
93583     +        Complain0  +     0.26244151632714 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.16508910764131 * AcceptedCmp10 + -0.01591698903562 * 
AcceptedCmp20 + -0.18749319390831 * AcceptedCmp30 + 0.10267845517937 * AcceptedCmp40 + 
0.26889478167941 * AcceptedCmp50 + 0.21127321497252 * Complain0 + 0.26244151632714 * 
HigherEducationBinary0 ;
93584     +   H13  = H13  +     -0.1188260559539 * AcceptedCmp10
93585     +          +    -0.14527518577208 * AcceptedCmp20  +     0.15234135364477 *
93586     +        AcceptedCmp30  +    -0.09444923232962 * AcceptedCmp40
93587     +          +     0.19708535923248 * AcceptedCmp50  +    -0.29618019247654 *
93588     +        Complain0  +     0.12575052691333 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.1188260559539 * AcceptedCmp10 + -0.14527518577208 * 
AcceptedCmp20 + 0.15234135364477 * AcceptedCmp30 + -0.09444923232962 * AcceptedCmp40 + 
0.19708535923248 * AcceptedCmp50 + -0.29618019247654 * Complain0 + 0.12575052691333 * 
HigherEducationBinary0 ;
93589     +   H14  = H14  +     0.22744978434743 * AcceptedCmp10
93590     +          +    -0.01189686575388 * AcceptedCmp20  +    -0.32196819611195 *
93591     +        AcceptedCmp30  +     0.01600068421368 * AcceptedCmp40
93592     +          +     0.00556822856215 * AcceptedCmp50  +     0.18009079154413 *
93593     +        Complain0  +     0.03016266549641 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.22744978434743 * AcceptedCmp10 + -0.01189686575388 * 
AcceptedCmp20 + -0.32196819611195 * AcceptedCmp30 + 0.01600068421368 * AcceptedCmp40 + 
0.00556822856215 * AcceptedCmp50 + 0.18009079154413 * Complain0 + 0.03016266549641 * 
HigherEducationBinary0 ;
93594     +   H15  = H15  +     0.52725777941338 * AcceptedCmp10
93595     +          +     0.01843467049946 * AcceptedCmp20  +     0.47168025621809 *
93596     +        AcceptedCmp30  +    -0.05224480469429 * AcceptedCmp40
93597     +          +     0.29146234318613 * AcceptedCmp50  +     0.05946217105031 *
93598     +        Complain0  +     0.16683238673979 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.52725777941338 * AcceptedCmp10 + 0.01843467049946 * 
AcceptedCmp20 + 0.47168025621809 * AcceptedCmp30 + -0.05224480469429 * AcceptedCmp40 + 
0.29146234318613 * AcceptedCmp50 + 0.05946217105031 * Complain0 + 0.16683238673979 * 
HigherEducationBinary0 ;
93599     +   H11  = H11  +     0.02840049264257 * Education2n_Cycle
93600     +          +    -0.12984345243569 * EducationBasic  +    -0.10299098163695 *
93601     +        EducationGraduation  +     0.23295390047952 * EducationMaster
93602     +          +    -0.41529808115031 * Marital_StatusDivorced
93603     +          +     0.65264978817749 * Marital_StatusMarried
93604     +          +    -0.52150453945732 * Marital_StatusSingle
93605     +          +     0.69963607397544 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.02840049264257 * Education2n_Cycle + -0.12984345243569 * 
EducationBasic + -0.10299098163695 * EducationGraduation + 0.23295390047952 * EducationMaster 
+ -0.41529808115031 * Marital_StatusDivorced + 0.65264978817749 * Marital_StatusMarried + 
-0.52150453945732 * Marital_StatusSingle + 0.69963607397544 * Marital_StatusTogether ;
93606     +   H12  = H12  +    -0.18683184010407 * Education2n_Cycle
93607     +          +    -0.04325754530797 * EducationBasic  +     0.25926294135162 *
93608     +        EducationGraduation  +     0.04425534246646 * EducationMaster
93609     +          +    -0.32207382402099 * Marital_StatusDivorced
93610     +          +     0.16112567537413 * Marital_StatusMarried
93611     +          +     0.28859198712458 * Marital_StatusSingle
93612     +          +    -0.31707896724726 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.18683184010407 * Education2n_Cycle + -0.04325754530797 * 
EducationBasic + 0.25926294135162 * EducationGraduation + 0.04425534246646 * EducationMaster + 
-0.32207382402099 * Marital_StatusDivorced + 0.16112567537413 * Marital_StatusMarried + 
0.28859198712458 * Marital_StatusSingle + -0.31707896724726 * Marital_StatusTogether ;
93613     +   H13  = H13  +     0.03402340531236 * Education2n_Cycle
93614     +          +     0.17313991053917 * EducationBasic  +    -0.24806694961277 *
93615     +        EducationGraduation  +    -0.16283334360744 * EducationMaster
93616     +          +    -0.06823118087629 * Marital_StatusDivorced
93617     +          +    -0.01696675344176 * Marital_StatusMarried
93618     +          +    -0.04922830766868 * Marital_StatusSingle
93619     +          +    -0.15449558545998 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.03402340531236 * Education2n_Cycle + 0.17313991053917 * 
EducationBasic + -0.24806694961277 * EducationGraduation + -0.16283334360744 * EducationMaster 
+ -0.06823118087629 * Marital_StatusDivorced + -0.01696675344176 * Marital_StatusMarried + 
-0.04922830766868 * Marital_StatusSingle + -0.15449558545998 * Marital_StatusTogether ;
93620     +   H14  = H14  +     0.04419529419265 * Education2n_Cycle
93621     +          +     0.10023190362026 * EducationBasic  +     0.23777777952905 *
93622     +        EducationGraduation  +     -0.1779877655909 * EducationMaster
93623     +          +     0.20346888384065 * Marital_StatusDivorced
93624     +          +     -0.5246097720646 * Marital_StatusMarried
93625     +          +     0.50991923175058 * Marital_StatusSingle
93626     +          +    -0.15346924309445 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.04419529419265 * Education2n_Cycle + 0.10023190362026 * 
EducationBasic + 0.23777777952905 * EducationGraduation + -0.1779877655909 * EducationMaster + 
0.20346888384065 * Marital_StatusDivorced + -0.5246097720646 * Marital_StatusMarried + 
0.50991923175058 * Marital_StatusSingle + -0.15346924309445 * Marital_StatusTogether ;
93627     +   H15  = H15  +     -0.0859109352002 * Education2n_Cycle
93628     +          +     0.23688872874499 * EducationBasic  +      0.0044459307881 *
93629     +        EducationGraduation  +     0.03117170136897 * EducationMaster
93630     +          +    -0.14128509643843 * Marital_StatusDivorced
93631     +          +    -0.17344467864829 * Marital_StatusMarried
93632     +          +     0.09201105049634 * Marital_StatusSingle
93633     +          +     0.03562553790735 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.0859109352002 * Education2n_Cycle + 0.23688872874499 * 
EducationBasic + 0.0044459307881 * EducationGraduation + 0.03117170136897 * EducationMaster + 
-0.14128509643843 * Marital_StatusDivorced + -0.17344467864829 * Marital_StatusMarried + 
0.09201105049634 * Marital_StatusSingle + 0.03562553790735 * Marital_StatusTogether ;
93634     +   H11  =     0.44460027749342 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.44460027749342 + H11 ;
93635     +   H12  =    -0.95819350927335 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.95819350927335 + H12 ;
93636     +   H13  =    -0.44968673753742 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.44968673753742 + H13 ;
93637     +   H14  =     0.53878131931255 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.53878131931255 + H14 ;
93638     +   H15  =     0.82891048270823 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 0.82891048270823 + H15 ;
93639     +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
93640     +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
93641     +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
93642     +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
93643     +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
93644     +END;
MPRINT(EM_DIAGRAM):   END;
93645     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
93646     +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
93647     +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
93648     +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
93649     +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
93650     +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
93651     +END;
MPRINT(EM_DIAGRAM):   END;
93652     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
93653     +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
93654     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
93655     +
93656     +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
93657     +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
93658     +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
93659     +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
93660     +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
93661     +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
93662     +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
93663     +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
93664     +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
93665     +end;
MPRINT(EM_DIAGRAM):   end;
93666     +else do;
MPRINT(EM_DIAGRAM):   else do;
93667     +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
93668     +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
93669     +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
93670     +   end;
MPRINT(EM_DIAGRAM):   end;
93671     +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
93672     +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
93673     +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
93674     +   end;
MPRINT(EM_DIAGRAM):   end;
93675     +   else do;
MPRINT(EM_DIAGRAM):   else do;
93676     +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
93677     +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
93678     +   end;
MPRINT(EM_DIAGRAM):   end;
93679     +end;
MPRINT(EM_DIAGRAM):   end;
93680     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
93681     +   P_DepVar1  =    -3.09211467027119 * H11  +      0.8780551921753 * H12
93682     +          +    -2.64280779387115 * H13  +     1.47258844960489 * H14
93683     +          +     -1.9161512747512 * H15 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.09211467027119 * H11 + 0.8780551921753 * H12 + 
-2.64280779387115 * H13 + 1.47258844960489 * H14 + -1.9161512747512 * H15 ;
93684     +   P_DepVar1  =    -1.84694532241195 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.84694532241195 + P_DepVar1 ;
93685     +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
93686     +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
93687     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
93688     +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
93689     +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
93690     +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
93691     +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
93692     +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
93693     +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
93694     +END;
MPRINT(EM_DIAGRAM):   END;
93695     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
93696     +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
93697     +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
93698     +END;
MPRINT(EM_DIAGRAM):   END;
93699     +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
93700     +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
93701     +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
93702     +END;
MPRINT(EM_DIAGRAM):   END;
93703     +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
93704     +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
93705     +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
93706     +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
93707     +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
93708     +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
93709     +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
93710     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
93711     +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
93712     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
93713     +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
93714     +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
93715     +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
93716     +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
93717     +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
93718     +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
93719     +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
93720     +END;
MPRINT(EM_DIAGRAM):   END;
93721     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
93722     +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
93723     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
93724     +drop
93725     +H11
93726     +H12
93727     +H13
93728     +H14
93729     +H15
93730     +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 ;
93731     +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
93732     +* Renaming variables for Neural40;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural40;
93733     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
93734     +* Renaming Posterior variables for Neural40;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural40;
93735     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
93736     +drop Neural40_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural40_P_DepVar1;
93737     +Neural40_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural40_P_DepVar1 = P_DepVar1;
93738     +drop Neural40_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural40_P_DepVar0;
93739     +Neural40_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural40_P_DepVar0 = P_DepVar0;
93740     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
93741     +* Renaming _WARN_ variable for Neural40;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural40;
93742     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
93743     +length Neural40_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural40_WARN_ $4;
93744     +drop Neural40_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural40_WARN_;
93745     +Neural40_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural40_WARN_ = _WARN_;
93746     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
93747     +* Ensmbl23: Scoring Code of model 2 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl23: Scoring Code of model 2 of 5;
93748     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
93749     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
93750     +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
93751     +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
93752     +* NODE: AutoNeural39;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural39;
93753     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
93754     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
93755     +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
93756     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
93757     +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
93758     + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
93759     + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
93760     + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
93761     + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
93762     + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
93763     + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
93764     + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
93765     +LENGTH _WARN_ $4
93766     +      F_DepVar  $ 12
93767     +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
93768     +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
93769     +
93770     +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
93771     +
93772     +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
93773     +
93774     +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
93775     +
93776     +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
93777     +
93778     +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
93779     +
93780     +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
93781     +
93782     +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
93783     +
93784     +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
93785     +
93786     +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
93787     +
93788     +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
93789     +
93790     +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
93791     +
93792     +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
93793     +
93794     +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
93795     +
93796     +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
93797     +
93798     +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
93799     +
93800     +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
93801     +
93802     +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
93803     +
93804     +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
93805     +
93806     +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
93807     +
93808     +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
93809     +
93810     +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
93811     +
93812     +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
93813     +
93814     +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
93815     +
93816     +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
93817     +
93818     +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
93819     +
93820     +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
93821     +
93822     +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
93823     +
93824     +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
93825     +
93826     +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
93827     +
93828     +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
93829     +
93830     +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
93831     +
93832     +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
93833     +
93834     +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
93835     +
93836     +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
93837     +
93838     +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
93839     +
93840     +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
93841     +
93842     +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
93843     +
93844     +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
93845     +
93846     +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
93847     +
93848     +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
93849     +
93850     +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
93851     +
93852     +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
93853     +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
93854     +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
93855     +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
93856     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
93857     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
93858     +end;
MPRINT(EM_DIAGRAM):   end;
93859     +else do;
MPRINT(EM_DIAGRAM):   else do;
93860     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
93861     +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
93862     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
93863     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
93864     +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
93865     +   end;
MPRINT(EM_DIAGRAM):   end;
93866     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
93867     +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
93868     +   end;
MPRINT(EM_DIAGRAM):   end;
93869     +   else do;
MPRINT(EM_DIAGRAM):   else do;
93870     +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
93871     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
93872     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
93873     +   end;
MPRINT(EM_DIAGRAM):   end;
93874     +end;
MPRINT(EM_DIAGRAM):   end;
93875     +
93876     +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
93877     +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
93878     +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
93879     +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
93880     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
93881     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
93882     +end;
MPRINT(EM_DIAGRAM):   end;
93883     +else do;
MPRINT(EM_DIAGRAM):   else do;
93884     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
93885     +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
93886     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
93887     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
93888     +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
93889     +   end;
MPRINT(EM_DIAGRAM):   end;
93890     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
93891     +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
93892     +   end;
MPRINT(EM_DIAGRAM):   end;
93893     +   else do;
MPRINT(EM_DIAGRAM):   else do;
93894     +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
93895     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
93896     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
93897     +   end;
MPRINT(EM_DIAGRAM):   end;
93898     +end;
MPRINT(EM_DIAGRAM):   end;
93899     +
93900     +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
93901     +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
93902     +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
93903     +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
93904     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
93905     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
93906     +end;
MPRINT(EM_DIAGRAM):   end;
93907     +else do;
MPRINT(EM_DIAGRAM):   else do;
93908     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
93909     +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
93910     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
93911     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
93912     +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
93913     +   end;
MPRINT(EM_DIAGRAM):   end;
93914     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
93915     +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
93916     +   end;
MPRINT(EM_DIAGRAM):   end;
93917     +   else do;
MPRINT(EM_DIAGRAM):   else do;
93918     +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
93919     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
93920     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
93921     +   end;
MPRINT(EM_DIAGRAM):   end;
93922     +end;
MPRINT(EM_DIAGRAM):   end;
93923     +
93924     +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
93925     +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
93926     +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
93927     +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
93928     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
93929     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
93930     +end;
MPRINT(EM_DIAGRAM):   end;
93931     +else do;
MPRINT(EM_DIAGRAM):   else do;
93932     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
93933     +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
93934     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
93935     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
93936     +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
93937     +   end;
MPRINT(EM_DIAGRAM):   end;
93938     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
93939     +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
93940     +   end;
MPRINT(EM_DIAGRAM):   end;
93941     +   else do;
MPRINT(EM_DIAGRAM):   else do;
93942     +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
93943     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
93944     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
93945     +   end;
MPRINT(EM_DIAGRAM):   end;
93946     +end;
MPRINT(EM_DIAGRAM):   end;
93947     +
93948     +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
93949     +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
93950     +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
93951     +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
93952     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
93953     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
93954     +end;
MPRINT(EM_DIAGRAM):   end;
93955     +else do;
MPRINT(EM_DIAGRAM):   else do;
93956     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
93957     +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
93958     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
93959     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
93960     +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
93961     +   end;
MPRINT(EM_DIAGRAM):   end;
93962     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
93963     +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
93964     +   end;
MPRINT(EM_DIAGRAM):   end;
93965     +   else do;
MPRINT(EM_DIAGRAM):   else do;
93966     +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
93967     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
93968     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
93969     +   end;
MPRINT(EM_DIAGRAM):   end;
93970     +end;
MPRINT(EM_DIAGRAM):   end;
93971     +
93972     +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
93973     +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
93974     +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
93975     +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
93976     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
93977     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
93978     +end;
MPRINT(EM_DIAGRAM):   end;
93979     +else do;
MPRINT(EM_DIAGRAM):   else do;
93980     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
93981     +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
93982     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
93983     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
93984     +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
93985     +   end;
MPRINT(EM_DIAGRAM):   end;
93986     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
93987     +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
93988     +   end;
MPRINT(EM_DIAGRAM):   end;
93989     +   else do;
MPRINT(EM_DIAGRAM):   else do;
93990     +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
93991     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
93992     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
93993     +   end;
MPRINT(EM_DIAGRAM):   end;
93994     +end;
MPRINT(EM_DIAGRAM):   end;
93995     +
93996     +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
93997     +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
93998     +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
93999     +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
94000     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
94001     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
94002     +end;
MPRINT(EM_DIAGRAM):   end;
94003     +else do;
MPRINT(EM_DIAGRAM):   else do;
94004     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
94005     +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
94006     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
94007     +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
94008     +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
94009     +   end;
MPRINT(EM_DIAGRAM):   end;
94010     +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
94011     +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
94012     +   end;
MPRINT(EM_DIAGRAM):   end;
94013     +   else do;
MPRINT(EM_DIAGRAM):   else do;
94014     +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
94015     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
94016     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
94017     +   end;
MPRINT(EM_DIAGRAM):   end;
94018     +end;
MPRINT(EM_DIAGRAM):   end;
94019     +
94020     +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
94021     +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
94022     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
94023     +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
94024     +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
94025     +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
94026     +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
94027     +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
94028     +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
94029     +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
94030     +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
94031     +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
94032     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
94033     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
94034     +end;
MPRINT(EM_DIAGRAM):   end;
94035     +else do;
MPRINT(EM_DIAGRAM):   else do;
94036     +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
94037     +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
94038     +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
94039     +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
94040     +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
94041     +   end;
MPRINT(EM_DIAGRAM):   end;
94042     +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
94043     +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
94044     +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
94045     +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
94046     +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
94047     +   end;
MPRINT(EM_DIAGRAM):   end;
94048     +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
94049     +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
94050     +   end;
MPRINT(EM_DIAGRAM):   end;
94051     +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
94052     +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
94053     +   end;
MPRINT(EM_DIAGRAM):   end;
94054     +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
94055     +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
94056     +   end;
MPRINT(EM_DIAGRAM):   end;
94057     +   else do;
MPRINT(EM_DIAGRAM):   else do;
94058     +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
94059     +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
94060     +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
94061     +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
94062     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
94063     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
94064     +   end;
MPRINT(EM_DIAGRAM):   end;
94065     +end;
MPRINT(EM_DIAGRAM):   end;
94066     +
94067     +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
94068     +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
94069     +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
94070     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
94071     +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
94072     +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
94073     +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
94074     +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
94075     +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
94076     +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
94077     +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
94078     +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
94079     +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
94080     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
94081     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
94082     +end;
MPRINT(EM_DIAGRAM):   end;
94083     +else do;
MPRINT(EM_DIAGRAM):   else do;
94084     +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
94085     +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
94086     +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
94087     +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
94088     +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
94089     +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
94090     +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
94091     +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
94092     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
94093     +         end;
MPRINT(EM_DIAGRAM):   end;
94094     +         else do;
MPRINT(EM_DIAGRAM):   else do;
94095     +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
94096     +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
94097     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
94098     +            end;
MPRINT(EM_DIAGRAM):   end;
94099     +         end;
MPRINT(EM_DIAGRAM):   end;
94100     +      end;
MPRINT(EM_DIAGRAM):   end;
94101     +      else do;
MPRINT(EM_DIAGRAM):   else do;
94102     +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
94103     +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
94104     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
94105     +         end;
MPRINT(EM_DIAGRAM):   end;
94106     +      end;
MPRINT(EM_DIAGRAM):   end;
94107     +   end;
MPRINT(EM_DIAGRAM):   end;
94108     +   else do;
MPRINT(EM_DIAGRAM):   else do;
94109     +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
94110     +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
94111     +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
94112     +      end;
MPRINT(EM_DIAGRAM):   end;
94113     +      else do;
MPRINT(EM_DIAGRAM):   else do;
94114     +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
94115     +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
94116     +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
94117     +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
94118     +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
94119     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
94120     +         end;
MPRINT(EM_DIAGRAM):   end;
94121     +      end;
MPRINT(EM_DIAGRAM):   end;
94122     +   end;
MPRINT(EM_DIAGRAM):   end;
94123     +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
94124     +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
94125     +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
94126     +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
94127     +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
94128     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
94129     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
94130     +   end;
MPRINT(EM_DIAGRAM):   end;
94131     +end;
MPRINT(EM_DIAGRAM):   end;
94132     +
94133     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
94134     +*** Checking missing input Interval
94135     +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
94136     +
94137     +IF NMISS(
94138     +   AcceptedCmpTotal ,
94139     +   Age ,
94140     +   Frq ,
94141     +   Income ,
94142     +   Kidhome ,
94143     +   MntFishProducts ,
94144     +   MntFruits ,
94145     +   MntGoldProds ,
94146     +   MntSweetProducts ,
94147     +   MonthsAsCustomer ,
94148     +   NumDealsPurchases ,
94149     +   NumWebVisitsMonth ,
94150     +   RFMstat ,
94151     +   RMntFrq ,
94152     +   Recency ,
94153     +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
94154     +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
94155     +
94156     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
94157     +END;
MPRINT(EM_DIAGRAM):   END;
94158     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
94159     +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
94160     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
94161     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
94162     +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
94163     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
94164     +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
94165     +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
94166     +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
94167     +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
94168     +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
94169     +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
94170     +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
94171     +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
94172     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
94173     +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
94174     +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
94175     +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
94176     +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
94177     +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
94178     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
94179     +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
94180     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
94181     +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
94182     +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
94183     +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
94184     +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
94185     +END;
MPRINT(EM_DIAGRAM):   END;
94186     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
94187     +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
94188     +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
94189     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
94190     +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
94191     +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
94192     +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
94193     +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
94194     +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
94195     +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
94196     +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
94197     +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
94198     +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
94199     +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
94200     +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
94201     +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
94202     +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
94203     +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
94204     +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
94205     +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
94206     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
94207     +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
94208     +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
94209     +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
94210     +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
94211     +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
94212     +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
94213     +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
94214     +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
94215     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
94216     +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
94217     +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
94218     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
94219     +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
94220     +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
94221     +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
94222     +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
94223     +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
94224     +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
94225     +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
94226     +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
94227     +END;
MPRINT(EM_DIAGRAM):   END;
94228     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
94229     +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
94230     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
94231     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
94232     +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
94233     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
94234     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
94235     +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
94236     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
94237     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
94238     +   H1x1_1  =    -0.59619526510279 * S_AcceptedCmpTotal
94239     +          +    -0.19567367757209 * S_Age  +    -1.87154193856682 * S_Frq
94240     +          +    -0.61220463973763 * S_Income  +     0.39435632091859 *
94241     +        S_Kidhome  +     0.27115687172661 * S_MntFishProducts
94242     +          +    -0.11978715045932 * S_MntFruits  +     0.29519469099756 *
94243     +        S_MntGoldProds  +     0.10278416295834 * S_MntSweetProducts
94244     +          +     -0.1740957673716 * S_MonthsAsCustomer
94245     +          +     0.66565026405117 * S_NumDealsPurchases
94246     +          +     0.43247206282836 * S_NumWebVisitsMonth
94247     +          +     0.36972451068821 * S_RFMstat  +     0.26260869862277 *
94248     +        S_RMntFrq  +    -0.28002323732518 * S_Recency
94249     +          +     0.44490818869588 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.59619526510279 * S_AcceptedCmpTotal + -0.19567367757209 * 
S_Age + -1.87154193856682 * S_Frq + -0.61220463973763 * S_Income + 0.39435632091859 * 
S_Kidhome + 0.27115687172661 * S_MntFishProducts + -0.11978715045932 * S_MntFruits + 
0.29519469099756 * S_MntGoldProds + 0.10278416295834 * S_MntSweetProducts + -0.1740957673716 * 
S_MonthsAsCustomer + 0.66565026405117 * S_NumDealsPurchases + 0.43247206282836 * 
S_NumWebVisitsMonth + 0.36972451068821 * S_RFMstat + 0.26260869862277 * S_RMntFrq + 
-0.28002323732518 * S_Recency + 0.44490818869588 * S_Teenhome ;
94250     +   H1x1_2  =    -0.18817303555602 * S_AcceptedCmpTotal
94251     +          +     0.02563068671435 * S_Age  +    -0.19671119906022 * S_Frq
94252     +          +    -0.57601068946749 * S_Income  +     0.32494160304894 *
94253     +        S_Kidhome  +     0.01652017751959 * S_MntFishProducts
94254     +          +     0.05773921061355 * S_MntFruits  +     0.02592530362424 *
94255     +        S_MntGoldProds  +     0.08946665597916 * S_MntSweetProducts
94256     +          +    -0.06176784990963 * S_MonthsAsCustomer
94257     +          +    -0.11740415005833 * S_NumDealsPurchases
94258     +          +    -0.17084845478672 * S_NumWebVisitsMonth
94259     +          +     0.00178400194387 * S_RFMstat  +    -0.13250191926905 *
94260     +        S_RMntFrq  +     0.54983271222574 * S_Recency
94261     +          +     0.42609230297633 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.18817303555602 * S_AcceptedCmpTotal + 0.02563068671435 * 
S_Age + -0.19671119906022 * S_Frq + -0.57601068946749 * S_Income + 0.32494160304894 * 
S_Kidhome + 0.01652017751959 * S_MntFishProducts + 0.05773921061355 * S_MntFruits + 
0.02592530362424 * S_MntGoldProds + 0.08946665597916 * S_MntSweetProducts + -0.06176784990963 
* S_MonthsAsCustomer + -0.11740415005833 * S_NumDealsPurchases + -0.17084845478672 * 
S_NumWebVisitsMonth + 0.00178400194387 * S_RFMstat + -0.13250191926905 * S_RMntFrq + 
0.54983271222574 * S_Recency + 0.42609230297633 * S_Teenhome ;
94262     +   H1x1_1  = H1x1_1  +    -0.73533354476059 * AcceptedCmp10
94263     +          +    -0.96410698969351 * AcceptedCmp20  +    -0.68713486641274 *
94264     +        AcceptedCmp30  +    -0.36566057748639 * AcceptedCmp40
94265     +          +     0.30630246801131 * AcceptedCmp50  +     0.35120823961025 *
94266     +        Complain0  +     -0.4767771812126 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.73533354476059 * AcceptedCmp10 + -0.96410698969351 
* AcceptedCmp20 + -0.68713486641274 * AcceptedCmp30 + -0.36566057748639 * AcceptedCmp40 + 
0.30630246801131 * AcceptedCmp50 + 0.35120823961025 * Complain0 + -0.4767771812126 * 
HigherEducationBinary0 ;
94267     +   H1x1_2  = H1x1_2  +     0.09341963945817 * AcceptedCmp10
94268     +          +     0.08648218396156 * AcceptedCmp20  +     0.20807620140826 *
94269     +        AcceptedCmp30  +     0.07826062169244 * AcceptedCmp40
94270     +          +     0.02564266279554 * AcceptedCmp50  +     0.04261102080378 *
94271     +        Complain0  +    -0.27229992860702 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.09341963945817 * AcceptedCmp10 + 0.08648218396156 * 
AcceptedCmp20 + 0.20807620140826 * AcceptedCmp30 + 0.07826062169244 * AcceptedCmp40 + 
0.02564266279554 * AcceptedCmp50 + 0.04261102080378 * Complain0 + -0.27229992860702 * 
HigherEducationBinary0 ;
94272     +   H1x1_1  = H1x1_1  +     0.21712849768666 * Education2n_Cycle
94273     +          +    -0.14027907370038 * EducationBasic  +    -0.11959455460972 *
94274     +        EducationGraduation  +     0.22632282500966 * EducationMaster
94275     +          +     -0.0800438380883 * Marital_StatusDivorced
94276     +          +     0.44505766937623 * Marital_StatusMarried
94277     +          +    -0.57546515626468 * Marital_StatusSingle
94278     +          +     0.38638180853046 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.21712849768666 * Education2n_Cycle + 
-0.14027907370038 * EducationBasic + -0.11959455460972 * EducationGraduation + 
0.22632282500966 * EducationMaster + -0.0800438380883 * Marital_StatusDivorced + 
0.44505766937623 * Marital_StatusMarried + -0.57546515626468 * Marital_StatusSingle + 
0.38638180853046 * Marital_StatusTogether ;
94279     +   H1x1_2  = H1x1_2  +     0.20241854612702 * Education2n_Cycle
94280     +          +    -0.02204834045555 * EducationBasic  +    -0.17229363591628 *
94281     +        EducationGraduation  +      0.0794165981215 * EducationMaster
94282     +          +    -0.20291653465543 * Marital_StatusDivorced
94283     +          +     0.39547414450617 * Marital_StatusMarried
94284     +          +    -0.37001331184001 * Marital_StatusSingle
94285     +          +     0.37889668606101 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.20241854612702 * Education2n_Cycle + 
-0.02204834045555 * EducationBasic + -0.17229363591628 * EducationGraduation + 0.0794165981215 
* EducationMaster + -0.20291653465543 * Marital_StatusDivorced + 0.39547414450617 * 
Marital_StatusMarried + -0.37001331184001 * Marital_StatusSingle + 0.37889668606101 * 
Marital_StatusTogether ;
94286     +   H1x1_1  =     0.85218451823494 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.85218451823494 + H1x1_1 ;
94287     +   H1x1_2  =     1.25904481865206 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.25904481865206 + H1x1_2 ;
94288     +   H1x1_3  = 0;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0;
94289     +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 );
94290     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
94291     +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
94292     +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
94293     +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
94294     +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
94295     +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
94296     +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
94297     +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
94298     +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
94299     +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
94300     +END;
MPRINT(EM_DIAGRAM):   END;
94301     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
94302     +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
94303     +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
94304     +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
94305     +END;
MPRINT(EM_DIAGRAM):   END;
94306     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
94307     +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
94308     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
94309     +
94310     +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
94311     +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
94312     +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
94313     +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
94314     +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
94315     +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
94316     +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
94317     +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
94318     +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
94319     +end;
MPRINT(EM_DIAGRAM):   end;
94320     +else do;
MPRINT(EM_DIAGRAM):   else do;
94321     +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
94322     +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
94323     +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
94324     +   end;
MPRINT(EM_DIAGRAM):   end;
94325     +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
94326     +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
94327     +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
94328     +   end;
MPRINT(EM_DIAGRAM):   end;
94329     +   else do;
MPRINT(EM_DIAGRAM):   else do;
94330     +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
94331     +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
94332     +   end;
MPRINT(EM_DIAGRAM):   end;
94333     +end;
MPRINT(EM_DIAGRAM):   end;
94334     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
94335     +   P_DepVar1  =     4.98178607983008 * H1x1_1  +    -8.34979505969025 * H1x1_2
94336     +          +     10.3301873876241 * H1x1_3 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 4.98178607983008 * H1x1_1 + -8.34979505969025 * H1x1_2 + 
10.3301873876241 * H1x1_3 ;
94337     +   P_DepVar1  =    -0.46201067268314 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.46201067268314 + P_DepVar1 ;
94338     +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
94339     +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
94340     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
94341     +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
94342     +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
94343     +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
94344     +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
94345     +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
94346     +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
94347     +END;
MPRINT(EM_DIAGRAM):   END;
94348     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
94349     +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
94350     +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
94351     +END;
MPRINT(EM_DIAGRAM):   END;
94352     +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
94353     +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
94354     +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
94355     +END;
MPRINT(EM_DIAGRAM):   END;
94356     +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
94357     +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
94358     +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
94359     +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
94360     +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
94361     +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
94362     +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
94363     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
94364     +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
94365     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
94366     +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
94367     +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
94368     +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
94369     +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
94370     +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
94371     +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
94372     +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
94373     +END;
MPRINT(EM_DIAGRAM):   END;
94374     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
94375     +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
94376     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
94377     +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
94378     +* Renaming variables for AutoNeural39;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural39;
94379     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
94380     +* Renaming Posterior variables for AutoNeural39;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural39;
94381     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
94382     +drop AutoNeural39_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural39_P_DepVar1;
94383     +AutoNeural39_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural39_P_DepVar1 = P_DepVar1;
94384     +drop AutoNeural39_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural39_P_DepVar0;
94385     +AutoNeural39_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural39_P_DepVar0 = P_DepVar0;
94386     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
94387     +* Renaming _WARN_ variable for AutoNeural39;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural39;
94388     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
94389     +length AutoNeural39_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural39_WARN_ $4;
94390     +drop AutoNeural39_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural39_WARN_;
94391     +AutoNeural39_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural39_WARN_ = _WARN_;
94392     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
94393     +* Ensmbl23: Scoring Code of model 3 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl23: Scoring Code of model 3 of 5;
94394     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
94395     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
94396     +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
94397     +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
94398     +* NODE: AutoNeural38;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural38;
94399     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
94400     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
94401     +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
94402     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
94403     +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
94404     + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
94405     + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
94406     + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
94407     + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
94408     + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
94409     + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
94410     + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
94411     +LENGTH _WARN_ $4
94412     +      F_DepVar  $ 12
94413     +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
94414     +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
94415     +
94416     +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
94417     +
94418     +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
94419     +
94420     +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
94421     +
94422     +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
94423     +
94424     +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
94425     +
94426     +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
94427     +
94428     +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
94429     +
94430     +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
94431     +
94432     +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
94433     +
94434     +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
94435     +
94436     +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
94437     +
94438     +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
94439     +
94440     +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
94441     +
94442     +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
94443     +
94444     +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
94445     +
94446     +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
94447     +
94448     +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
94449     +
94450     +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
94451     +
94452     +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
94453     +
94454     +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
94455     +
94456     +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
94457     +
94458     +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
94459     +
94460     +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
94461     +
94462     +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
94463     +
94464     +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
94465     +
94466     +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
94467     +
94468     +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
94469     +
94470     +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
94471     +
94472     +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
94473     +
94474     +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
94475     +
94476     +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
94477     +
94478     +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
94479     +
94480     +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
94481     +
94482     +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
94483     +
94484     +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
94485     +
94486     +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
94487     +
94488     +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
94489     +
94490     +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
94491     +
94492     +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
94493     +
94494     +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
94495     +
94496     +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
94497     +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
94498     +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
94499     +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
94500     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
94501     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
94502     +end;
MPRINT(EM_DIAGRAM):   end;
94503     +else do;
MPRINT(EM_DIAGRAM):   else do;
94504     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
94505     +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
94506     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
94507     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
94508     +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
94509     +   end;
MPRINT(EM_DIAGRAM):   end;
94510     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
94511     +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
94512     +   end;
MPRINT(EM_DIAGRAM):   end;
94513     +   else do;
MPRINT(EM_DIAGRAM):   else do;
94514     +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
94515     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
94516     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
94517     +   end;
MPRINT(EM_DIAGRAM):   end;
94518     +end;
MPRINT(EM_DIAGRAM):   end;
94519     +
94520     +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
94521     +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
94522     +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
94523     +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
94524     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
94525     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
94526     +end;
MPRINT(EM_DIAGRAM):   end;
94527     +else do;
MPRINT(EM_DIAGRAM):   else do;
94528     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
94529     +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
94530     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
94531     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
94532     +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
94533     +   end;
MPRINT(EM_DIAGRAM):   end;
94534     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
94535     +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
94536     +   end;
MPRINT(EM_DIAGRAM):   end;
94537     +   else do;
MPRINT(EM_DIAGRAM):   else do;
94538     +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
94539     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
94540     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
94541     +   end;
MPRINT(EM_DIAGRAM):   end;
94542     +end;
MPRINT(EM_DIAGRAM):   end;
94543     +
94544     +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
94545     +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
94546     +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
94547     +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
94548     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
94549     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
94550     +end;
MPRINT(EM_DIAGRAM):   end;
94551     +else do;
MPRINT(EM_DIAGRAM):   else do;
94552     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
94553     +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
94554     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
94555     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
94556     +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
94557     +   end;
MPRINT(EM_DIAGRAM):   end;
94558     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
94559     +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
94560     +   end;
MPRINT(EM_DIAGRAM):   end;
94561     +   else do;
MPRINT(EM_DIAGRAM):   else do;
94562     +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
94563     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
94564     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
94565     +   end;
MPRINT(EM_DIAGRAM):   end;
94566     +end;
MPRINT(EM_DIAGRAM):   end;
94567     +
94568     +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
94569     +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
94570     +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
94571     +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
94572     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
94573     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
94574     +end;
MPRINT(EM_DIAGRAM):   end;
94575     +else do;
MPRINT(EM_DIAGRAM):   else do;
94576     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
94577     +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
94578     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
94579     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
94580     +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
94581     +   end;
MPRINT(EM_DIAGRAM):   end;
94582     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
94583     +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
94584     +   end;
MPRINT(EM_DIAGRAM):   end;
94585     +   else do;
MPRINT(EM_DIAGRAM):   else do;
94586     +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
94587     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
94588     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
94589     +   end;
MPRINT(EM_DIAGRAM):   end;
94590     +end;
MPRINT(EM_DIAGRAM):   end;
94591     +
94592     +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
94593     +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
94594     +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
94595     +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
94596     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
94597     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
94598     +end;
MPRINT(EM_DIAGRAM):   end;
94599     +else do;
MPRINT(EM_DIAGRAM):   else do;
94600     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
94601     +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
94602     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
94603     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
94604     +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
94605     +   end;
MPRINT(EM_DIAGRAM):   end;
94606     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
94607     +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
94608     +   end;
MPRINT(EM_DIAGRAM):   end;
94609     +   else do;
MPRINT(EM_DIAGRAM):   else do;
94610     +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
94611     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
94612     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
94613     +   end;
MPRINT(EM_DIAGRAM):   end;
94614     +end;
MPRINT(EM_DIAGRAM):   end;
94615     +
94616     +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
94617     +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
94618     +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
94619     +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
94620     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
94621     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
94622     +end;
MPRINT(EM_DIAGRAM):   end;
94623     +else do;
MPRINT(EM_DIAGRAM):   else do;
94624     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
94625     +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
94626     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
94627     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
94628     +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
94629     +   end;
MPRINT(EM_DIAGRAM):   end;
94630     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
94631     +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
94632     +   end;
MPRINT(EM_DIAGRAM):   end;
94633     +   else do;
MPRINT(EM_DIAGRAM):   else do;
94634     +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
94635     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
94636     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
94637     +   end;
MPRINT(EM_DIAGRAM):   end;
94638     +end;
MPRINT(EM_DIAGRAM):   end;
94639     +
94640     +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
94641     +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
94642     +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
94643     +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
94644     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
94645     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
94646     +end;
MPRINT(EM_DIAGRAM):   end;
94647     +else do;
MPRINT(EM_DIAGRAM):   else do;
94648     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
94649     +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
94650     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
94651     +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
94652     +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
94653     +   end;
MPRINT(EM_DIAGRAM):   end;
94654     +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
94655     +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
94656     +   end;
MPRINT(EM_DIAGRAM):   end;
94657     +   else do;
MPRINT(EM_DIAGRAM):   else do;
94658     +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
94659     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
94660     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
94661     +   end;
MPRINT(EM_DIAGRAM):   end;
94662     +end;
MPRINT(EM_DIAGRAM):   end;
94663     +
94664     +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
94665     +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
94666     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
94667     +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
94668     +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
94669     +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
94670     +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
94671     +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
94672     +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
94673     +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
94674     +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
94675     +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
94676     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
94677     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
94678     +end;
MPRINT(EM_DIAGRAM):   end;
94679     +else do;
MPRINT(EM_DIAGRAM):   else do;
94680     +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
94681     +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
94682     +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
94683     +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
94684     +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
94685     +   end;
MPRINT(EM_DIAGRAM):   end;
94686     +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
94687     +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
94688     +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
94689     +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
94690     +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
94691     +   end;
MPRINT(EM_DIAGRAM):   end;
94692     +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
94693     +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
94694     +   end;
MPRINT(EM_DIAGRAM):   end;
94695     +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
94696     +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
94697     +   end;
MPRINT(EM_DIAGRAM):   end;
94698     +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
94699     +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
94700     +   end;
MPRINT(EM_DIAGRAM):   end;
94701     +   else do;
MPRINT(EM_DIAGRAM):   else do;
94702     +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
94703     +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
94704     +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
94705     +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
94706     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
94707     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
94708     +   end;
MPRINT(EM_DIAGRAM):   end;
94709     +end;
MPRINT(EM_DIAGRAM):   end;
94710     +
94711     +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
94712     +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
94713     +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
94714     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
94715     +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
94716     +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
94717     +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
94718     +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
94719     +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
94720     +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
94721     +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
94722     +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
94723     +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
94724     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
94725     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
94726     +end;
MPRINT(EM_DIAGRAM):   end;
94727     +else do;
MPRINT(EM_DIAGRAM):   else do;
94728     +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
94729     +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
94730     +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
94731     +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
94732     +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
94733     +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
94734     +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
94735     +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
94736     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
94737     +         end;
MPRINT(EM_DIAGRAM):   end;
94738     +         else do;
MPRINT(EM_DIAGRAM):   else do;
94739     +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
94740     +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
94741     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
94742     +            end;
MPRINT(EM_DIAGRAM):   end;
94743     +         end;
MPRINT(EM_DIAGRAM):   end;
94744     +      end;
MPRINT(EM_DIAGRAM):   end;
94745     +      else do;
MPRINT(EM_DIAGRAM):   else do;
94746     +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
94747     +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
94748     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
94749     +         end;
MPRINT(EM_DIAGRAM):   end;
94750     +      end;
MPRINT(EM_DIAGRAM):   end;
94751     +   end;
MPRINT(EM_DIAGRAM):   end;
94752     +   else do;
MPRINT(EM_DIAGRAM):   else do;
94753     +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
94754     +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
94755     +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
94756     +      end;
MPRINT(EM_DIAGRAM):   end;
94757     +      else do;
MPRINT(EM_DIAGRAM):   else do;
94758     +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
94759     +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
94760     +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
94761     +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
94762     +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
94763     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
94764     +         end;
MPRINT(EM_DIAGRAM):   end;
94765     +      end;
MPRINT(EM_DIAGRAM):   end;
94766     +   end;
MPRINT(EM_DIAGRAM):   end;
94767     +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
94768     +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
94769     +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
94770     +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
94771     +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
94772     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
94773     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
94774     +   end;
MPRINT(EM_DIAGRAM):   end;
94775     +end;
MPRINT(EM_DIAGRAM):   end;
94776     +
94777     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
94778     +*** Checking missing input Interval
94779     +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
94780     +
94781     +IF NMISS(
94782     +   AcceptedCmpTotal ,
94783     +   Age ,
94784     +   Frq ,
94785     +   Income ,
94786     +   Kidhome ,
94787     +   MntFishProducts ,
94788     +   MntFruits ,
94789     +   MntGoldProds ,
94790     +   MntSweetProducts ,
94791     +   MonthsAsCustomer ,
94792     +   NumDealsPurchases ,
94793     +   NumWebVisitsMonth ,
94794     +   RFMstat ,
94795     +   RMntFrq ,
94796     +   Recency ,
94797     +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
94798     +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
94799     +
94800     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
94801     +END;
MPRINT(EM_DIAGRAM):   END;
94802     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
94803     +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
94804     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
94805     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
94806     +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
94807     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
94808     +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
94809     +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
94810     +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
94811     +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
94812     +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
94813     +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
94814     +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
94815     +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
94816     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
94817     +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
94818     +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
94819     +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
94820     +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
94821     +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
94822     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
94823     +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
94824     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
94825     +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
94826     +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
94827     +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
94828     +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
94829     +END;
MPRINT(EM_DIAGRAM):   END;
94830     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
94831     +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
94832     +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
94833     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
94834     +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
94835     +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
94836     +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
94837     +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
94838     +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
94839     +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
94840     +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
94841     +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
94842     +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
94843     +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
94844     +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
94845     +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
94846     +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
94847     +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
94848     +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
94849     +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
94850     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
94851     +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
94852     +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
94853     +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
94854     +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
94855     +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
94856     +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
94857     +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
94858     +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
94859     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
94860     +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
94861     +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
94862     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
94863     +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
94864     +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
94865     +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
94866     +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
94867     +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
94868     +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
94869     +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
94870     +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
94871     +END;
MPRINT(EM_DIAGRAM):   END;
94872     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
94873     +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
94874     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
94875     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
94876     +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
94877     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
94878     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
94879     +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
94880     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
94881     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
94882     +   H1x1_1  =     0.14799095926144 * S_AcceptedCmpTotal
94883     +          +    -0.04647384466642 * S_Age  +     0.24999790039572 * S_Frq
94884     +          +     0.67193946760329 * S_Income  +    -0.42077272097029 *
94885     +        S_Kidhome  +    -0.02139676364759 * S_MntFishProducts
94886     +          +    -0.06309036790386 * S_MntFruits  +    -0.02579098391162 *
94887     +        S_MntGoldProds  +    -0.10360214785919 * S_MntSweetProducts
94888     +          +     0.07696704519183 * S_MonthsAsCustomer
94889     +          +     0.06885982009617 * S_NumDealsPurchases
94890     +          +     0.18284147478918 * S_NumWebVisitsMonth
94891     +          +    -0.00475791839806 * S_RFMstat  +     0.16731511643557 *
94892     +        S_RMntFrq  +    -0.65651411558717 * S_Recency
94893     +          +    -0.45659275487674 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.14799095926144 * S_AcceptedCmpTotal + -0.04647384466642 * 
S_Age + 0.24999790039572 * S_Frq + 0.67193946760329 * S_Income + -0.42077272097029 * S_Kidhome 
+ -0.02139676364759 * S_MntFishProducts + -0.06309036790386 * S_MntFruits + -0.02579098391162 
* S_MntGoldProds + -0.10360214785919 * S_MntSweetProducts + 0.07696704519183 * 
S_MonthsAsCustomer + 0.06885982009617 * S_NumDealsPurchases + 0.18284147478918 * 
S_NumWebVisitsMonth + -0.00475791839806 * S_RFMstat + 0.16731511643557 * S_RMntFrq + 
-0.65651411558717 * S_Recency + -0.45659275487674 * S_Teenhome ;
94894     +   H1x1_2  =      0.4505629421372 * S_AcceptedCmpTotal
94895     +          +     0.25939118491361 * S_Age  +     2.77688249418832 * S_Frq
94896     +          +     0.32697030303845 * S_Income  +    -0.37246867163551 *
94897     +        S_Kidhome  +    -0.61585865165341 * S_MntFishProducts
94898     +          +     0.48583904586511 * S_MntFruits  +    -0.38353134378746 *
94899     +        S_MntGoldProds  +     0.00655094628315 * S_MntSweetProducts
94900     +          +     0.19400730773464 * S_MonthsAsCustomer
94901     +          +    -1.36455521037197 * S_NumDealsPurchases
94902     +          +    -1.07068059346196 * S_NumWebVisitsMonth
94903     +          +     -0.4953702697801 * S_RFMstat  +    -0.73989265677449 *
94904     +        S_RMntFrq  +     1.36066079800227 * S_Recency
94905     +          +    -0.04271320094349 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.4505629421372 * S_AcceptedCmpTotal + 0.25939118491361 * S_Age 
+ 2.77688249418832 * S_Frq + 0.32697030303845 * S_Income + -0.37246867163551 * S_Kidhome + 
-0.61585865165341 * S_MntFishProducts + 0.48583904586511 * S_MntFruits + -0.38353134378746 * 
S_MntGoldProds + 0.00655094628315 * S_MntSweetProducts + 0.19400730773464 * S_MonthsAsCustomer 
+ -1.36455521037197 * S_NumDealsPurchases + -1.07068059346196 * S_NumWebVisitsMonth + 
-0.4953702697801 * S_RFMstat + -0.73989265677449 * S_RMntFrq + 1.36066079800227 * S_Recency + 
-0.04271320094349 * S_Teenhome ;
94906     +   H1x1_1  = H1x1_1  +    -0.15625358687394 * AcceptedCmp10
94907     +          +    -0.16004536933275 * AcceptedCmp20  +    -0.25016784155495 *
94908     +        AcceptedCmp30  +    -0.15585105085453 * AcceptedCmp40
94909     +          +    -0.06982247699471 * AcceptedCmp50  +    -0.11568047349098 *
94910     +        Complain0  +     0.36349047632504 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.15625358687394 * AcceptedCmp10 + -0.16004536933275 
* AcceptedCmp20 + -0.25016784155495 * AcceptedCmp30 + -0.15585105085453 * AcceptedCmp40 + 
-0.06982247699471 * AcceptedCmp50 + -0.11568047349098 * Complain0 + 0.36349047632504 * 
HigherEducationBinary0 ;
94911     +   H1x1_2  = H1x1_2  +     1.51765243597714 * AcceptedCmp10
94912     +          +     1.47001519525633 * AcceptedCmp20  +      1.4613337402064 *
94913     +        AcceptedCmp30  +     0.39175009738324 * AcceptedCmp40
94914     +          +    -0.35396325940732 * AcceptedCmp50  +     -0.8151538493653 *
94915     +        Complain0  +     0.47014175146609 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 1.51765243597714 * AcceptedCmp10 + 1.47001519525633 * 
AcceptedCmp20 + 1.4613337402064 * AcceptedCmp30 + 0.39175009738324 * AcceptedCmp40 + 
-0.35396325940732 * AcceptedCmp50 + -0.8151538493653 * Complain0 + 0.47014175146609 * 
HigherEducationBinary0 ;
94916     +   H1x1_1  = H1x1_1  +    -0.41546031612995 * Education2n_Cycle
94917     +          +     0.33474673936754 * EducationBasic  +     0.15788973153313 *
94918     +        EducationGraduation  +    -0.13796568916415 * EducationMaster
94919     +          +     0.23432241402098 * Marital_StatusDivorced
94920     +          +    -0.46302700269027 * Marital_StatusMarried
94921     +          +      0.4032168653504 * Marital_StatusSingle
94922     +          +    -0.44795341835702 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.41546031612995 * Education2n_Cycle + 
0.33474673936754 * EducationBasic + 0.15788973153313 * EducationGraduation + -0.13796568916415 
* EducationMaster + 0.23432241402098 * Marital_StatusDivorced + -0.46302700269027 * 
Marital_StatusMarried + 0.4032168653504 * Marital_StatusSingle + -0.44795341835702 * 
Marital_StatusTogether ;
94923     +   H1x1_2  = H1x1_2  +    -0.18958861902397 * Education2n_Cycle
94924     +          +     0.56593307913524 * EducationBasic  +    -0.16639049776163 *
94925     +        EducationGraduation  +     -0.3917553423088 * EducationMaster
94926     +          +    -0.31347503340603 * Marital_StatusDivorced
94927     +          +    -0.20319530959178 * Marital_StatusMarried
94928     +          +     0.48298350411196 * Marital_StatusSingle
94929     +          +      -0.252969507874 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.18958861902397 * Education2n_Cycle + 
0.56593307913524 * EducationBasic + -0.16639049776163 * EducationGraduation + -0.3917553423088 
* EducationMaster + -0.31347503340603 * Marital_StatusDivorced + -0.20319530959178 * 
Marital_StatusMarried + 0.48298350411196 * Marital_StatusSingle + -0.252969507874 * 
Marital_StatusTogether ;
94930     +   H1x1_1  =    -1.25768416618497 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.25768416618497 + H1x1_1 ;
94931     +   H1x1_2  =      1.4658519648796 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.4658519648796 + H1x1_2 ;
94932     +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
94933     +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
94934     +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
94935     +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
94936     +END;
MPRINT(EM_DIAGRAM):   END;
94937     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
94938     +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
94939     +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
94940     +END;
MPRINT(EM_DIAGRAM):   END;
94941     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
94942     +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
94943     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
94944     +
94945     +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
94946     +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
94947     +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
94948     +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
94949     +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
94950     +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
94951     +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
94952     +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
94953     +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
94954     +end;
MPRINT(EM_DIAGRAM):   end;
94955     +else do;
MPRINT(EM_DIAGRAM):   else do;
94956     +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
94957     +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
94958     +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
94959     +   end;
MPRINT(EM_DIAGRAM):   end;
94960     +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
94961     +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
94962     +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
94963     +   end;
MPRINT(EM_DIAGRAM):   end;
94964     +   else do;
MPRINT(EM_DIAGRAM):   else do;
94965     +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
94966     +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
94967     +   end;
MPRINT(EM_DIAGRAM):   end;
94968     +end;
MPRINT(EM_DIAGRAM):   end;
94969     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
94970     +   P_DepVar1  =     15.2788764824385 * H1x1_1  +    -7.37711503177617 * H1x1_2
94971     +         ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 15.2788764824385 * H1x1_1 + -7.37711503177617 * H1x1_2 ;
94972     +   P_DepVar1  =     0.37159160751318 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.37159160751318 + P_DepVar1 ;
94973     +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
94974     +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
94975     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
94976     +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
94977     +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
94978     +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
94979     +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
94980     +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
94981     +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
94982     +END;
MPRINT(EM_DIAGRAM):   END;
94983     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
94984     +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
94985     +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
94986     +END;
MPRINT(EM_DIAGRAM):   END;
94987     +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
94988     +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
94989     +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
94990     +END;
MPRINT(EM_DIAGRAM):   END;
94991     +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
94992     +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
94993     +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
94994     +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
94995     +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
94996     +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
94997     +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
94998     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
94999     +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
95000     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
95001     +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
95002     +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
95003     +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
95004     +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
95005     +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
95006     +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
95007     +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
95008     +END;
MPRINT(EM_DIAGRAM):   END;
95009     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
95010     +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
95011     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
95012     +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
95013     +* Renaming variables for AutoNeural38;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural38;
95014     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
95015     +* Renaming Posterior variables for AutoNeural38;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural38;
95016     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
95017     +drop AutoNeural38_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural38_P_DepVar1;
95018     +AutoNeural38_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural38_P_DepVar1 = P_DepVar1;
95019     +drop AutoNeural38_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural38_P_DepVar0;
95020     +AutoNeural38_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural38_P_DepVar0 = P_DepVar0;
95021     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
95022     +* Renaming _WARN_ variable for AutoNeural38;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural38;
95023     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
95024     +length AutoNeural38_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural38_WARN_ $4;
95025     +drop AutoNeural38_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural38_WARN_;
95026     +AutoNeural38_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural38_WARN_ = _WARN_;
95027     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
95028     +* Ensmbl23: Scoring Code of model 4 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl23: Scoring Code of model 4 of 5;
95029     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
95030     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
95031     +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
95032     +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
95033     +* NODE: Neural39;
MPRINT(EM_DIAGRAM):   * NODE: Neural39;
95034     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
95035     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
95036     +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
95037     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
95038     +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
95039     + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
95040     + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
95041     + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
95042     + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
95043     + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
95044     + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
95045     + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
95046     +LENGTH _WARN_ $4
95047     +      F_DepVar  $ 12
95048     +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
95049     +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
95050     +
95051     +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
95052     +
95053     +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
95054     +
95055     +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
95056     +
95057     +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
95058     +
95059     +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
95060     +
95061     +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
95062     +
95063     +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
95064     +
95065     +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
95066     +
95067     +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
95068     +
95069     +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
95070     +
95071     +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
95072     +
95073     +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
95074     +
95075     +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
95076     +
95077     +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
95078     +
95079     +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
95080     +
95081     +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
95082     +
95083     +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
95084     +
95085     +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
95086     +
95087     +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
95088     +
95089     +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
95090     +
95091     +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
95092     +
95093     +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
95094     +
95095     +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
95096     +
95097     +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
95098     +
95099     +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
95100     +
95101     +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
95102     +
95103     +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
95104     +
95105     +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
95106     +
95107     +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
95108     +
95109     +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
95110     +
95111     +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
95112     +
95113     +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
95114     +
95115     +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
95116     +
95117     +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
95118     +
95119     +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
95120     +
95121     +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
95122     +
95123     +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
95124     +
95125     +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
95126     +
95127     +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
95128     +
95129     +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
95130     +
95131     +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
95132     +
95133     +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
95134     +
95135     +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
95136     +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
95137     +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
95138     +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
95139     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
95140     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
95141     +end;
MPRINT(EM_DIAGRAM):   end;
95142     +else do;
MPRINT(EM_DIAGRAM):   else do;
95143     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
95144     +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
95145     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
95146     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
95147     +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
95148     +   end;
MPRINT(EM_DIAGRAM):   end;
95149     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
95150     +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
95151     +   end;
MPRINT(EM_DIAGRAM):   end;
95152     +   else do;
MPRINT(EM_DIAGRAM):   else do;
95153     +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
95154     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
95155     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
95156     +   end;
MPRINT(EM_DIAGRAM):   end;
95157     +end;
MPRINT(EM_DIAGRAM):   end;
95158     +
95159     +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
95160     +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
95161     +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
95162     +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
95163     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
95164     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
95165     +end;
MPRINT(EM_DIAGRAM):   end;
95166     +else do;
MPRINT(EM_DIAGRAM):   else do;
95167     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
95168     +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
95169     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
95170     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
95171     +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
95172     +   end;
MPRINT(EM_DIAGRAM):   end;
95173     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
95174     +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
95175     +   end;
MPRINT(EM_DIAGRAM):   end;
95176     +   else do;
MPRINT(EM_DIAGRAM):   else do;
95177     +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
95178     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
95179     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
95180     +   end;
MPRINT(EM_DIAGRAM):   end;
95181     +end;
MPRINT(EM_DIAGRAM):   end;
95182     +
95183     +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
95184     +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
95185     +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
95186     +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
95187     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
95188     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
95189     +end;
MPRINT(EM_DIAGRAM):   end;
95190     +else do;
MPRINT(EM_DIAGRAM):   else do;
95191     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
95192     +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
95193     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
95194     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
95195     +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
95196     +   end;
MPRINT(EM_DIAGRAM):   end;
95197     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
95198     +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
95199     +   end;
MPRINT(EM_DIAGRAM):   end;
95200     +   else do;
MPRINT(EM_DIAGRAM):   else do;
95201     +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
95202     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
95203     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
95204     +   end;
MPRINT(EM_DIAGRAM):   end;
95205     +end;
MPRINT(EM_DIAGRAM):   end;
95206     +
95207     +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
95208     +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
95209     +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
95210     +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
95211     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
95212     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
95213     +end;
MPRINT(EM_DIAGRAM):   end;
95214     +else do;
MPRINT(EM_DIAGRAM):   else do;
95215     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
95216     +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
95217     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
95218     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
95219     +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
95220     +   end;
MPRINT(EM_DIAGRAM):   end;
95221     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
95222     +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
95223     +   end;
MPRINT(EM_DIAGRAM):   end;
95224     +   else do;
MPRINT(EM_DIAGRAM):   else do;
95225     +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
95226     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
95227     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
95228     +   end;
MPRINT(EM_DIAGRAM):   end;
95229     +end;
MPRINT(EM_DIAGRAM):   end;
95230     +
95231     +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
95232     +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
95233     +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
95234     +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
95235     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
95236     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
95237     +end;
MPRINT(EM_DIAGRAM):   end;
95238     +else do;
MPRINT(EM_DIAGRAM):   else do;
95239     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
95240     +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
95241     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
95242     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
95243     +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
95244     +   end;
MPRINT(EM_DIAGRAM):   end;
95245     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
95246     +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
95247     +   end;
MPRINT(EM_DIAGRAM):   end;
95248     +   else do;
MPRINT(EM_DIAGRAM):   else do;
95249     +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
95250     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
95251     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
95252     +   end;
MPRINT(EM_DIAGRAM):   end;
95253     +end;
MPRINT(EM_DIAGRAM):   end;
95254     +
95255     +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
95256     +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
95257     +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
95258     +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
95259     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
95260     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
95261     +end;
MPRINT(EM_DIAGRAM):   end;
95262     +else do;
MPRINT(EM_DIAGRAM):   else do;
95263     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
95264     +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
95265     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
95266     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
95267     +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
95268     +   end;
MPRINT(EM_DIAGRAM):   end;
95269     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
95270     +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
95271     +   end;
MPRINT(EM_DIAGRAM):   end;
95272     +   else do;
MPRINT(EM_DIAGRAM):   else do;
95273     +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
95274     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
95275     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
95276     +   end;
MPRINT(EM_DIAGRAM):   end;
95277     +end;
MPRINT(EM_DIAGRAM):   end;
95278     +
95279     +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
95280     +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
95281     +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
95282     +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
95283     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
95284     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
95285     +end;
MPRINT(EM_DIAGRAM):   end;
95286     +else do;
MPRINT(EM_DIAGRAM):   else do;
95287     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
95288     +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
95289     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
95290     +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
95291     +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
95292     +   end;
MPRINT(EM_DIAGRAM):   end;
95293     +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
95294     +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
95295     +   end;
MPRINT(EM_DIAGRAM):   end;
95296     +   else do;
MPRINT(EM_DIAGRAM):   else do;
95297     +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
95298     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
95299     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
95300     +   end;
MPRINT(EM_DIAGRAM):   end;
95301     +end;
MPRINT(EM_DIAGRAM):   end;
95302     +
95303     +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
95304     +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
95305     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
95306     +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
95307     +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
95308     +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
95309     +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
95310     +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
95311     +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
95312     +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
95313     +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
95314     +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
95315     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
95316     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
95317     +end;
MPRINT(EM_DIAGRAM):   end;
95318     +else do;
MPRINT(EM_DIAGRAM):   else do;
95319     +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
95320     +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
95321     +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
95322     +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
95323     +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
95324     +   end;
MPRINT(EM_DIAGRAM):   end;
95325     +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
95326     +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
95327     +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
95328     +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
95329     +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
95330     +   end;
MPRINT(EM_DIAGRAM):   end;
95331     +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
95332     +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
95333     +   end;
MPRINT(EM_DIAGRAM):   end;
95334     +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
95335     +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
95336     +   end;
MPRINT(EM_DIAGRAM):   end;
95337     +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
95338     +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
95339     +   end;
MPRINT(EM_DIAGRAM):   end;
95340     +   else do;
MPRINT(EM_DIAGRAM):   else do;
95341     +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
95342     +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
95343     +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
95344     +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
95345     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
95346     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
95347     +   end;
MPRINT(EM_DIAGRAM):   end;
95348     +end;
MPRINT(EM_DIAGRAM):   end;
95349     +
95350     +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
95351     +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
95352     +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
95353     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
95354     +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
95355     +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
95356     +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
95357     +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
95358     +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
95359     +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
95360     +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
95361     +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
95362     +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
95363     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
95364     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
95365     +end;
MPRINT(EM_DIAGRAM):   end;
95366     +else do;
MPRINT(EM_DIAGRAM):   else do;
95367     +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
95368     +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
95369     +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
95370     +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
95371     +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
95372     +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
95373     +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
95374     +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
95375     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
95376     +         end;
MPRINT(EM_DIAGRAM):   end;
95377     +         else do;
MPRINT(EM_DIAGRAM):   else do;
95378     +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
95379     +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
95380     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
95381     +            end;
MPRINT(EM_DIAGRAM):   end;
95382     +         end;
MPRINT(EM_DIAGRAM):   end;
95383     +      end;
MPRINT(EM_DIAGRAM):   end;
95384     +      else do;
MPRINT(EM_DIAGRAM):   else do;
95385     +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
95386     +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
95387     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
95388     +         end;
MPRINT(EM_DIAGRAM):   end;
95389     +      end;
MPRINT(EM_DIAGRAM):   end;
95390     +   end;
MPRINT(EM_DIAGRAM):   end;
95391     +   else do;
MPRINT(EM_DIAGRAM):   else do;
95392     +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
95393     +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
95394     +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
95395     +      end;
MPRINT(EM_DIAGRAM):   end;
95396     +      else do;
MPRINT(EM_DIAGRAM):   else do;
95397     +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
95398     +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
95399     +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
95400     +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
95401     +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
95402     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
95403     +         end;
MPRINT(EM_DIAGRAM):   end;
95404     +      end;
MPRINT(EM_DIAGRAM):   end;
95405     +   end;
MPRINT(EM_DIAGRAM):   end;
95406     +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
95407     +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
95408     +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
95409     +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
95410     +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
95411     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
95412     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
95413     +   end;
MPRINT(EM_DIAGRAM):   end;
95414     +end;
MPRINT(EM_DIAGRAM):   end;
95415     +
95416     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
95417     +*** Checking missing input Interval
95418     +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
95419     +
95420     +IF NMISS(
95421     +   AcceptedCmpTotal ,
95422     +   Age ,
95423     +   Frq ,
95424     +   Income ,
95425     +   Kidhome ,
95426     +   MntFishProducts ,
95427     +   MntFruits ,
95428     +   MntGoldProds ,
95429     +   MntSweetProducts ,
95430     +   MonthsAsCustomer ,
95431     +   NumDealsPurchases ,
95432     +   NumWebVisitsMonth ,
95433     +   RFMstat ,
95434     +   RMntFrq ,
95435     +   Recency ,
95436     +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
95437     +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
95438     +
95439     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
95440     +END;
MPRINT(EM_DIAGRAM):   END;
95441     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
95442     +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
95443     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
95444     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
95445     +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
95446     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
95447     +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
95448     +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
95449     +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
95450     +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
95451     +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
95452     +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
95453     +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
95454     +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
95455     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
95456     +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
95457     +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
95458     +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
95459     +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
95460     +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
95461     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
95462     +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
95463     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
95464     +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
95465     +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
95466     +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
95467     +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
95468     +END;
MPRINT(EM_DIAGRAM):   END;
95469     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
95470     +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
95471     +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
95472     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
95473     +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
95474     +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
95475     +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
95476     +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
95477     +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
95478     +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
95479     +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
95480     +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
95481     +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
95482     +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
95483     +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
95484     +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
95485     +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
95486     +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
95487     +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
95488     +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
95489     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
95490     +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
95491     +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
95492     +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
95493     +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
95494     +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
95495     +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
95496     +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
95497     +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
95498     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
95499     +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
95500     +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
95501     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
95502     +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
95503     +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
95504     +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
95505     +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
95506     +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
95507     +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
95508     +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
95509     +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
95510     +END;
MPRINT(EM_DIAGRAM):   END;
95511     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
95512     +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
95513     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
95514     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
95515     +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
95516     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
95517     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
95518     +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
95519     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
95520     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
95521     +   H11  =    -0.64096829905108 * S_AcceptedCmpTotal  +    -0.11209535704145 *
95522     +        S_Age  +     0.38442347653056 * S_Frq  +     0.10191582051286 *
95523     +        S_Income  +     0.27663215475285 * S_Kidhome
95524     +          +    -0.02861873561507 * S_MntFishProducts
95525     +          +     0.20598948908915 * S_MntFruits  +     0.20804179479079 *
95526     +        S_MntGoldProds  +     0.19160035179466 * S_MntSweetProducts
95527     +          +    -0.30820227749029 * S_MonthsAsCustomer
95528     +          +    -0.64335583461867 * S_NumDealsPurchases
95529     +          +    -0.40339200335235 * S_NumWebVisitsMonth
95530     +          +    -0.05053414482512 * S_RFMstat  +     0.32736870225964 *
95531     +        S_RMntFrq  +     0.73297917115427 * S_Recency
95532     +          +     0.11670126537146 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.64096829905108 * S_AcceptedCmpTotal + -0.11209535704145 * S_Age 
+ 0.38442347653056 * S_Frq + 0.10191582051286 * S_Income + 0.27663215475285 * S_Kidhome + 
-0.02861873561507 * S_MntFishProducts + 0.20598948908915 * S_MntFruits + 0.20804179479079 * 
S_MntGoldProds + 0.19160035179466 * S_MntSweetProducts + -0.30820227749029 * 
S_MonthsAsCustomer + -0.64335583461867 * S_NumDealsPurchases + -0.40339200335235 * 
S_NumWebVisitsMonth + -0.05053414482512 * S_RFMstat + 0.32736870225964 * S_RMntFrq + 
0.73297917115427 * S_Recency + 0.11670126537146 * S_Teenhome ;
95533     +   H12  =     -0.1657091472212 * S_AcceptedCmpTotal  +     0.51956326282264 *
95534     +        S_Age  +     1.09230379920111 * S_Frq  +     0.41850245998114 *
95535     +        S_Income  +     0.04677082637593 * S_Kidhome
95536     +          +    -0.26310923797495 * S_MntFishProducts
95537     +          +     0.07068396793785 * S_MntFruits  +    -0.13614297077165 *
95538     +        S_MntGoldProds  +    -0.41288432261418 * S_MntSweetProducts
95539     +          +     0.31464974024806 * S_MonthsAsCustomer
95540     +          +    -0.51422897206707 * S_NumDealsPurchases
95541     +          +    -0.70210448968741 * S_NumWebVisitsMonth
95542     +          +    -0.20168285475248 * S_RFMstat  +    -0.52597031961785 *
95543     +        S_RMntFrq  +     1.12297422526954 * S_Recency
95544     +          +    -0.19583787100677 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.1657091472212 * S_AcceptedCmpTotal + 0.51956326282264 * S_Age + 
1.09230379920111 * S_Frq + 0.41850245998114 * S_Income + 0.04677082637593 * S_Kidhome + 
-0.26310923797495 * S_MntFishProducts + 0.07068396793785 * S_MntFruits + -0.13614297077165 * 
S_MntGoldProds + -0.41288432261418 * S_MntSweetProducts + 0.31464974024806 * 
S_MonthsAsCustomer + -0.51422897206707 * S_NumDealsPurchases + -0.70210448968741 * 
S_NumWebVisitsMonth + -0.20168285475248 * S_RFMstat + -0.52597031961785 * S_RMntFrq + 
1.12297422526954 * S_Recency + -0.19583787100677 * S_Teenhome ;
95545     +   H13  =    -0.52948883352014 * S_AcceptedCmpTotal  +    -0.12557829758966 *
95546     +        S_Age  +     -0.0390229319101 * S_Frq  +    -0.82750091245735 *
95547     +        S_Income  +    -0.76074905594112 * S_Kidhome
95548     +          +     0.28012200156756 * S_MntFishProducts
95549     +          +    -0.11859027002733 * S_MntFruits  +    -0.41772270940459 *
95550     +        S_MntGoldProds  +     0.02732432410202 * S_MntSweetProducts
95551     +          +    -0.02209353426555 * S_MonthsAsCustomer
95552     +          +    -0.30351716506195 * S_NumDealsPurchases
95553     +          +    -0.54961975756206 * S_NumWebVisitsMonth
95554     +          +    -0.10801362755152 * S_RFMstat  +    -0.18473836604054 *
95555     +        S_RMntFrq  +     0.84276565192556 * S_Recency
95556     +          +     0.30860891080893 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.52948883352014 * S_AcceptedCmpTotal + -0.12557829758966 * S_Age 
+ -0.0390229319101 * S_Frq + -0.82750091245735 * S_Income + -0.76074905594112 * S_Kidhome + 
0.28012200156756 * S_MntFishProducts + -0.11859027002733 * S_MntFruits + -0.41772270940459 * 
S_MntGoldProds + 0.02732432410202 * S_MntSweetProducts + -0.02209353426555 * 
S_MonthsAsCustomer + -0.30351716506195 * S_NumDealsPurchases + -0.54961975756206 * 
S_NumWebVisitsMonth + -0.10801362755152 * S_RFMstat + -0.18473836604054 * S_RMntFrq + 
0.84276565192556 * S_Recency + 0.30860891080893 * S_Teenhome ;
95557     +   H14  =    -0.07567218864184 * S_AcceptedCmpTotal  +     0.02462117827216 *
95558     +        S_Age  +    -0.64320970361048 * S_Frq  +     -1.0659518778449 *
95559     +        S_Income  +     0.68593841144377 * S_Kidhome
95560     +          +     -0.0587169446037 * S_MntFishProducts
95561     +          +     0.24365125001776 * S_MntFruits  +     0.04647719507405 *
95562     +        S_MntGoldProds  +     0.25871718590254 * S_MntSweetProducts
95563     +          +    -0.17220981900732 * S_MonthsAsCustomer
95564     +          +     0.27940162953795 * S_NumDealsPurchases
95565     +          +    -0.04761461934562 * S_NumWebVisitsMonth
95566     +          +    -0.11656397034939 * S_RFMstat  +    -0.30754235450488 *
95567     +        S_RMntFrq  +     0.68962447302378 * S_Recency
95568     +          +     0.73159731135815 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = -0.07567218864184 * S_AcceptedCmpTotal + 0.02462117827216 * S_Age 
+ -0.64320970361048 * S_Frq + -1.0659518778449 * S_Income + 0.68593841144377 * S_Kidhome + 
-0.0587169446037 * S_MntFishProducts + 0.24365125001776 * S_MntFruits + 0.04647719507405 * 
S_MntGoldProds + 0.25871718590254 * S_MntSweetProducts + -0.17220981900732 * 
S_MonthsAsCustomer + 0.27940162953795 * S_NumDealsPurchases + -0.04761461934562 * 
S_NumWebVisitsMonth + -0.11656397034939 * S_RFMstat + -0.30754235450488 * S_RMntFrq + 
0.68962447302378 * S_Recency + 0.73159731135815 * S_Teenhome ;
95569     +   H11  = H11  +     0.25038776257796 * AcceptedCmp10
95570     +          +     0.04282733069599 * AcceptedCmp20  +     0.16936079906612 *
95571     +        AcceptedCmp30  +     0.05079498344461 * AcceptedCmp40
95572     +          +      0.6690889070972 * AcceptedCmp50  +    -0.11756177189054 *
95573     +        Complain0  +     0.00601034671987 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.25038776257796 * AcceptedCmp10 + 0.04282733069599 * 
AcceptedCmp20 + 0.16936079906612 * AcceptedCmp30 + 0.05079498344461 * AcceptedCmp40 + 
0.6690889070972 * AcceptedCmp50 + -0.11756177189054 * Complain0 + 0.00601034671987 * 
HigherEducationBinary0 ;
95574     +   H12  = H12  +     0.63638345806433 * AcceptedCmp10
95575     +          +      0.3453598097393 * AcceptedCmp20  +     0.49359811223374 *
95576     +        AcceptedCmp30  +     0.27581207611627 * AcceptedCmp40
95577     +          +     0.05866095623494 * AcceptedCmp50  +    -0.13005408285069 *
95578     +        Complain0  +      0.2160948352192 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.63638345806433 * AcceptedCmp10 + 0.3453598097393 * 
AcceptedCmp20 + 0.49359811223374 * AcceptedCmp30 + 0.27581207611627 * AcceptedCmp40 + 
0.05866095623494 * AcceptedCmp50 + -0.13005408285069 * Complain0 + 0.2160948352192 * 
HigherEducationBinary0 ;
95579     +   H13  = H13  +     0.09956549586905 * AcceptedCmp10
95580     +          +     0.03691883338772 * AcceptedCmp20  +     0.47736653446815 *
95581     +        AcceptedCmp30  +    -0.91581599271765 * AcceptedCmp40
95582     +          +     0.50560814473618 * AcceptedCmp50  +    -0.33308229467468 *
95583     +        Complain0  +     0.14672770960028 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.09956549586905 * AcceptedCmp10 + 0.03691883338772 * 
AcceptedCmp20 + 0.47736653446815 * AcceptedCmp30 + -0.91581599271765 * AcceptedCmp40 + 
0.50560814473618 * AcceptedCmp50 + -0.33308229467468 * Complain0 + 0.14672770960028 * 
HigherEducationBinary0 ;
95584     +   H14  = H14  +     0.22255149692461 * AcceptedCmp10
95585     +          +     0.13590153487525 * AcceptedCmp20  +     0.33124716818779 *
95586     +        AcceptedCmp30  +     0.53538971216451 * AcceptedCmp40
95587     +          +    -0.15288643860698 * AcceptedCmp50  +     0.30766742713062 *
95588     +        Complain0  +    -0.54379124310959 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.22255149692461 * AcceptedCmp10 + 0.13590153487525 * 
AcceptedCmp20 + 0.33124716818779 * AcceptedCmp30 + 0.53538971216451 * AcceptedCmp40 + 
-0.15288643860698 * AcceptedCmp50 + 0.30766742713062 * Complain0 + -0.54379124310959 * 
HigherEducationBinary0 ;
95589     +   H11  = H11  +    -0.16246752897554 * Education2n_Cycle
95590     +          +    -0.02018324007765 * EducationBasic  +    -0.01853488592136 *
95591     +        EducationGraduation  +    -0.09512206973791 * EducationMaster
95592     +          +     0.04284251520428 * Marital_StatusDivorced
95593     +          +    -0.08591343257218 * Marital_StatusMarried
95594     +          +     0.43667281622253 * Marital_StatusSingle
95595     +          +     0.35264409549804 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.16246752897554 * Education2n_Cycle + -0.02018324007765 * 
EducationBasic + -0.01853488592136 * EducationGraduation + -0.09512206973791 * EducationMaster 
+ 0.04284251520428 * Marital_StatusDivorced + -0.08591343257218 * Marital_StatusMarried + 
0.43667281622253 * Marital_StatusSingle + 0.35264409549804 * Marital_StatusTogether ;
95596     +   H12  = H12  +     0.33728620033583 * Education2n_Cycle
95597     +          +    -0.00479023403414 * EducationBasic  +    -0.10257966569549 *
95598     +        EducationGraduation  +    -0.17955750532548 * EducationMaster
95599     +          +    -0.10823631131846 * Marital_StatusDivorced
95600     +          +     0.15344450170599 * Marital_StatusMarried
95601     +          +    -0.00222187507332 * Marital_StatusSingle
95602     +          +     0.12886702838116 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.33728620033583 * Education2n_Cycle + -0.00479023403414 * 
EducationBasic + -0.10257966569549 * EducationGraduation + -0.17955750532548 * EducationMaster 
+ -0.10823631131846 * Marital_StatusDivorced + 0.15344450170599 * Marital_StatusMarried + 
-0.00222187507332 * Marital_StatusSingle + 0.12886702838116 * Marital_StatusTogether ;
95603     +   H13  = H13  +     0.04434288585425 * Education2n_Cycle
95604     +          +     0.45393732517503 * EducationBasic  +    -0.30230166822748 *
95605     +        EducationGraduation  +     0.06012880669469 * EducationMaster
95606     +          +    -0.20523044713629 * Marital_StatusDivorced
95607     +          +     0.15779331320414 * Marital_StatusMarried
95608     +          +    -0.33273914160638 * Marital_StatusSingle
95609     +          +    -0.25472406769802 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.04434288585425 * Education2n_Cycle + 0.45393732517503 * 
EducationBasic + -0.30230166822748 * EducationGraduation + 0.06012880669469 * EducationMaster 
+ -0.20523044713629 * Marital_StatusDivorced + 0.15779331320414 * Marital_StatusMarried + 
-0.33273914160638 * Marital_StatusSingle + -0.25472406769802 * Marital_StatusTogether ;
95610     +   H14  = H14  +    -0.16441299564379 * Education2n_Cycle
95611     +          +     0.10809494068924 * EducationBasic  +    -0.23265316836427 *
95612     +        EducationGraduation  +      0.3018512119562 * EducationMaster
95613     +          +    -0.24973986133996 * Marital_StatusDivorced
95614     +          +     1.15862092191103 * Marital_StatusMarried
95615     +          +    -0.91451543179937 * Marital_StatusSingle
95616     +          +     0.98391013262071 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.16441299564379 * Education2n_Cycle + 0.10809494068924 * 
EducationBasic + -0.23265316836427 * EducationGraduation + 0.3018512119562 * EducationMaster + 
-0.24973986133996 * Marital_StatusDivorced + 1.15862092191103 * Marital_StatusMarried + 
-0.91451543179937 * Marital_StatusSingle + 0.98391013262071 * Marital_StatusTogether ;
95617     +   H11  =     0.70941478033358 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.70941478033358 + H11 ;
95618     +   H12  =     0.91925226212025 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.91925226212025 + H12 ;
95619     +   H13  =    -0.26151947698166 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.26151947698166 + H13 ;
95620     +   H14  =     1.57965424463368 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 1.57965424463368 + H14 ;
95621     +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
95622     +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
95623     +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
95624     +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
95625     +END;
MPRINT(EM_DIAGRAM):   END;
95626     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
95627     +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
95628     +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
95629     +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
95630     +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
95631     +END;
MPRINT(EM_DIAGRAM):   END;
95632     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
95633     +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
95634     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
95635     +
95636     +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
95637     +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
95638     +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
95639     +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
95640     +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
95641     +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
95642     +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
95643     +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
95644     +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
95645     +end;
MPRINT(EM_DIAGRAM):   end;
95646     +else do;
MPRINT(EM_DIAGRAM):   else do;
95647     +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
95648     +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
95649     +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
95650     +   end;
MPRINT(EM_DIAGRAM):   end;
95651     +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
95652     +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
95653     +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
95654     +   end;
MPRINT(EM_DIAGRAM):   end;
95655     +   else do;
MPRINT(EM_DIAGRAM):   else do;
95656     +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
95657     +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
95658     +   end;
MPRINT(EM_DIAGRAM):   end;
95659     +end;
MPRINT(EM_DIAGRAM):   end;
95660     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
95661     +   P_DepVar1  =    -1.20356257603969 * H11  +    -1.94296236893655 * H12
95662     +          +    -2.81737663487689 * H13  +    -2.69363833398263 * H14 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.20356257603969 * H11 + -1.94296236893655 * H12 + 
-2.81737663487689 * H13 + -2.69363833398263 * H14 ;
95663     +   P_DepVar1  =    -0.80241057184596 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.80241057184596 + P_DepVar1 ;
95664     +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
95665     +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
95666     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
95667     +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
95668     +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
95669     +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
95670     +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
95671     +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
95672     +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
95673     +END;
MPRINT(EM_DIAGRAM):   END;
95674     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
95675     +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
95676     +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
95677     +END;
MPRINT(EM_DIAGRAM):   END;
95678     +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
95679     +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
95680     +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
95681     +END;
MPRINT(EM_DIAGRAM):   END;
95682     +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
95683     +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
95684     +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
95685     +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
95686     +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
95687     +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
95688     +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
95689     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
95690     +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
95691     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
95692     +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
95693     +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
95694     +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
95695     +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
95696     +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
95697     +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
95698     +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
95699     +END;
MPRINT(EM_DIAGRAM):   END;
95700     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
95701     +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
95702     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
95703     +drop
95704     +H11
95705     +H12
95706     +H13
95707     +H14
95708     +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 ;
95709     +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
95710     +* Renaming variables for Neural39;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural39;
95711     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
95712     +* Renaming Posterior variables for Neural39;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural39;
95713     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
95714     +drop Neural39_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural39_P_DepVar1;
95715     +Neural39_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural39_P_DepVar1 = P_DepVar1;
95716     +drop Neural39_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural39_P_DepVar0;
95717     +Neural39_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural39_P_DepVar0 = P_DepVar0;
95718     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
95719     +* Renaming _WARN_ variable for Neural39;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural39;
95720     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
95721     +length Neural39_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural39_WARN_ $4;
95722     +drop Neural39_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural39_WARN_;
95723     +Neural39_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural39_WARN_ = _WARN_;
95724     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
95725     +* Ensmbl23: Scoring Code of model 5 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl23: Scoring Code of model 5 of 5;
95726     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
95727     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
95728     +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
95729     +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
95730     +* NODE: Neural41;
MPRINT(EM_DIAGRAM):   * NODE: Neural41;
95731     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
95732     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
95733     +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
95734     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
95735     +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
95736     + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
95737     + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
95738     + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
95739     + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
95740     + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
95741     + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
95742     + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
95743     +LENGTH _WARN_ $4
95744     +      F_DepVar  $ 12
95745     +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
95746     +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
95747     +
95748     +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
95749     +
95750     +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
95751     +
95752     +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
95753     +
95754     +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
95755     +
95756     +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
95757     +
95758     +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
95759     +
95760     +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
95761     +
95762     +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
95763     +
95764     +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
95765     +
95766     +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
95767     +
95768     +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
95769     +
95770     +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
95771     +
95772     +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
95773     +
95774     +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
95775     +
95776     +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
95777     +
95778     +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
95779     +
95780     +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
95781     +
95782     +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
95783     +
95784     +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
95785     +
95786     +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
95787     +
95788     +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
95789     +
95790     +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
95791     +
95792     +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
95793     +
95794     +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
95795     +
95796     +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
95797     +
95798     +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
95799     +
95800     +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
95801     +
95802     +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
95803     +
95804     +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
95805     +
95806     +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
95807     +
95808     +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
95809     +
95810     +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
95811     +
95812     +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
95813     +
95814     +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
95815     +
95816     +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
95817     +
95818     +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
95819     +
95820     +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
95821     +
95822     +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
95823     +
95824     +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
95825     +
95826     +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
95827     +
95828     +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
95829     +
95830     +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
95831     +
95832     +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
95833     +
95834     +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
95835     +
95836     +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
95837     +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
95838     +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
95839     +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
95840     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
95841     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
95842     +end;
MPRINT(EM_DIAGRAM):   end;
95843     +else do;
MPRINT(EM_DIAGRAM):   else do;
95844     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
95845     +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
95846     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
95847     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
95848     +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
95849     +   end;
MPRINT(EM_DIAGRAM):   end;
95850     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
95851     +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
95852     +   end;
MPRINT(EM_DIAGRAM):   end;
95853     +   else do;
MPRINT(EM_DIAGRAM):   else do;
95854     +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
95855     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
95856     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
95857     +   end;
MPRINT(EM_DIAGRAM):   end;
95858     +end;
MPRINT(EM_DIAGRAM):   end;
95859     +
95860     +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
95861     +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
95862     +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
95863     +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
95864     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
95865     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
95866     +end;
MPRINT(EM_DIAGRAM):   end;
95867     +else do;
MPRINT(EM_DIAGRAM):   else do;
95868     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
95869     +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
95870     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
95871     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
95872     +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
95873     +   end;
MPRINT(EM_DIAGRAM):   end;
95874     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
95875     +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
95876     +   end;
MPRINT(EM_DIAGRAM):   end;
95877     +   else do;
MPRINT(EM_DIAGRAM):   else do;
95878     +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
95879     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
95880     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
95881     +   end;
MPRINT(EM_DIAGRAM):   end;
95882     +end;
MPRINT(EM_DIAGRAM):   end;
95883     +
95884     +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
95885     +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
95886     +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
95887     +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
95888     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
95889     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
95890     +end;
MPRINT(EM_DIAGRAM):   end;
95891     +else do;
MPRINT(EM_DIAGRAM):   else do;
95892     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
95893     +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
95894     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
95895     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
95896     +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
95897     +   end;
MPRINT(EM_DIAGRAM):   end;
95898     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
95899     +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
95900     +   end;
MPRINT(EM_DIAGRAM):   end;
95901     +   else do;
MPRINT(EM_DIAGRAM):   else do;
95902     +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
95903     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
95904     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
95905     +   end;
MPRINT(EM_DIAGRAM):   end;
95906     +end;
MPRINT(EM_DIAGRAM):   end;
95907     +
95908     +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
95909     +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
95910     +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
95911     +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
95912     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
95913     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
95914     +end;
MPRINT(EM_DIAGRAM):   end;
95915     +else do;
MPRINT(EM_DIAGRAM):   else do;
95916     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
95917     +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
95918     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
95919     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
95920     +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
95921     +   end;
MPRINT(EM_DIAGRAM):   end;
95922     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
95923     +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
95924     +   end;
MPRINT(EM_DIAGRAM):   end;
95925     +   else do;
MPRINT(EM_DIAGRAM):   else do;
95926     +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
95927     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
95928     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
95929     +   end;
MPRINT(EM_DIAGRAM):   end;
95930     +end;
MPRINT(EM_DIAGRAM):   end;
95931     +
95932     +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
95933     +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
95934     +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
95935     +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
95936     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
95937     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
95938     +end;
MPRINT(EM_DIAGRAM):   end;
95939     +else do;
MPRINT(EM_DIAGRAM):   else do;
95940     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
95941     +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
95942     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
95943     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
95944     +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
95945     +   end;
MPRINT(EM_DIAGRAM):   end;
95946     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
95947     +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
95948     +   end;
MPRINT(EM_DIAGRAM):   end;
95949     +   else do;
MPRINT(EM_DIAGRAM):   else do;
95950     +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
95951     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
95952     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
95953     +   end;
MPRINT(EM_DIAGRAM):   end;
95954     +end;
MPRINT(EM_DIAGRAM):   end;
95955     +
95956     +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
95957     +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
95958     +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
95959     +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
95960     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
95961     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
95962     +end;
MPRINT(EM_DIAGRAM):   end;
95963     +else do;
MPRINT(EM_DIAGRAM):   else do;
95964     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
95965     +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
95966     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
95967     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
95968     +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
95969     +   end;
MPRINT(EM_DIAGRAM):   end;
95970     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
95971     +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
95972     +   end;
MPRINT(EM_DIAGRAM):   end;
95973     +   else do;
MPRINT(EM_DIAGRAM):   else do;
95974     +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
95975     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
95976     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
95977     +   end;
MPRINT(EM_DIAGRAM):   end;
95978     +end;
MPRINT(EM_DIAGRAM):   end;
95979     +
95980     +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
95981     +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
95982     +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
95983     +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
95984     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
95985     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
95986     +end;
MPRINT(EM_DIAGRAM):   end;
95987     +else do;
MPRINT(EM_DIAGRAM):   else do;
95988     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
95989     +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
95990     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
95991     +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
95992     +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
95993     +   end;
MPRINT(EM_DIAGRAM):   end;
95994     +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
95995     +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
95996     +   end;
MPRINT(EM_DIAGRAM):   end;
95997     +   else do;
MPRINT(EM_DIAGRAM):   else do;
95998     +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
95999     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
96000     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
96001     +   end;
MPRINT(EM_DIAGRAM):   end;
96002     +end;
MPRINT(EM_DIAGRAM):   end;
96003     +
96004     +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
96005     +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
96006     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
96007     +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
96008     +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
96009     +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
96010     +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
96011     +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
96012     +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
96013     +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
96014     +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
96015     +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
96016     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
96017     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
96018     +end;
MPRINT(EM_DIAGRAM):   end;
96019     +else do;
MPRINT(EM_DIAGRAM):   else do;
96020     +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
96021     +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
96022     +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
96023     +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
96024     +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
96025     +   end;
MPRINT(EM_DIAGRAM):   end;
96026     +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
96027     +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
96028     +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
96029     +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
96030     +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
96031     +   end;
MPRINT(EM_DIAGRAM):   end;
96032     +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
96033     +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
96034     +   end;
MPRINT(EM_DIAGRAM):   end;
96035     +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
96036     +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
96037     +   end;
MPRINT(EM_DIAGRAM):   end;
96038     +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
96039     +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
96040     +   end;
MPRINT(EM_DIAGRAM):   end;
96041     +   else do;
MPRINT(EM_DIAGRAM):   else do;
96042     +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
96043     +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
96044     +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
96045     +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
96046     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
96047     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
96048     +   end;
MPRINT(EM_DIAGRAM):   end;
96049     +end;
MPRINT(EM_DIAGRAM):   end;
96050     +
96051     +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
96052     +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
96053     +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
96054     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
96055     +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
96056     +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
96057     +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
96058     +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
96059     +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
96060     +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
96061     +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
96062     +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
96063     +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
96064     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
96065     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
96066     +end;
MPRINT(EM_DIAGRAM):   end;
96067     +else do;
MPRINT(EM_DIAGRAM):   else do;
96068     +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
96069     +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
96070     +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
96071     +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
96072     +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
96073     +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
96074     +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
96075     +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
96076     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
96077     +         end;
MPRINT(EM_DIAGRAM):   end;
96078     +         else do;
MPRINT(EM_DIAGRAM):   else do;
96079     +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
96080     +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
96081     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
96082     +            end;
MPRINT(EM_DIAGRAM):   end;
96083     +         end;
MPRINT(EM_DIAGRAM):   end;
96084     +      end;
MPRINT(EM_DIAGRAM):   end;
96085     +      else do;
MPRINT(EM_DIAGRAM):   else do;
96086     +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
96087     +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
96088     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
96089     +         end;
MPRINT(EM_DIAGRAM):   end;
96090     +      end;
MPRINT(EM_DIAGRAM):   end;
96091     +   end;
MPRINT(EM_DIAGRAM):   end;
96092     +   else do;
MPRINT(EM_DIAGRAM):   else do;
96093     +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
96094     +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
96095     +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
96096     +      end;
MPRINT(EM_DIAGRAM):   end;
96097     +      else do;
MPRINT(EM_DIAGRAM):   else do;
96098     +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
96099     +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
96100     +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
96101     +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
96102     +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
96103     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
96104     +         end;
MPRINT(EM_DIAGRAM):   end;
96105     +      end;
MPRINT(EM_DIAGRAM):   end;
96106     +   end;
MPRINT(EM_DIAGRAM):   end;
96107     +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
96108     +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
96109     +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
96110     +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
96111     +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
96112     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
96113     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
96114     +   end;
MPRINT(EM_DIAGRAM):   end;
96115     +end;
MPRINT(EM_DIAGRAM):   end;
96116     +
96117     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
96118     +*** Checking missing input Interval
96119     +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
96120     +
96121     +IF NMISS(
96122     +   AcceptedCmpTotal ,
96123     +   Age ,
96124     +   Frq ,
96125     +   Income ,
96126     +   Kidhome ,
96127     +   MntFishProducts ,
96128     +   MntFruits ,
96129     +   MntGoldProds ,
96130     +   MntSweetProducts ,
96131     +   MonthsAsCustomer ,
96132     +   NumDealsPurchases ,
96133     +   NumWebVisitsMonth ,
96134     +   RFMstat ,
96135     +   RMntFrq ,
96136     +   Recency ,
96137     +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
96138     +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
96139     +
96140     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
96141     +END;
MPRINT(EM_DIAGRAM):   END;
96142     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
96143     +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
96144     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
96145     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
96146     +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
96147     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
96148     +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
96149     +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
96150     +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
96151     +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
96152     +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
96153     +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
96154     +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
96155     +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
96156     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
96157     +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
96158     +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
96159     +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
96160     +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
96161     +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
96162     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
96163     +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
96164     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
96165     +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
96166     +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
96167     +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
96168     +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
96169     +END;
MPRINT(EM_DIAGRAM):   END;
96170     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
96171     +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
96172     +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
96173     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
96174     +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
96175     +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
96176     +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
96177     +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
96178     +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
96179     +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
96180     +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
96181     +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
96182     +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
96183     +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
96184     +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
96185     +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
96186     +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
96187     +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
96188     +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
96189     +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
96190     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
96191     +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
96192     +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
96193     +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
96194     +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
96195     +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
96196     +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
96197     +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
96198     +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
96199     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
96200     +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
96201     +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
96202     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
96203     +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
96204     +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
96205     +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
96206     +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
96207     +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
96208     +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
96209     +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
96210     +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
96211     +END;
MPRINT(EM_DIAGRAM):   END;
96212     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
96213     +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
96214     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
96215     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
96216     +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
96217     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
96218     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
96219     +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
96220     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
96221     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
96222     +   H11  =    -0.50311574684963 * S_AcceptedCmpTotal  +    -0.18985055644549 *
96223     +        S_Age  +     0.44828804873659 * S_Frq  +    -0.51280008296346 *
96224     +        S_Income  +    -0.07468461691846 * S_Kidhome
96225     +          +    -0.02817334981603 * S_MntFishProducts
96226     +          +    -0.23674836972041 * S_MntFruits  +     0.09571592531833 *
96227     +        S_MntGoldProds  +    -0.09676918994417 * S_MntSweetProducts
96228     +          +     0.11832246824115 * S_MonthsAsCustomer
96229     +          +    -0.06605281991661 * S_NumDealsPurchases
96230     +          +    -0.48924564446119 * S_NumWebVisitsMonth
96231     +          +    -0.46878579854964 * S_RFMstat  +    -0.08286830724047 *
96232     +        S_RMntFrq  +     0.72493722489034 * S_Recency
96233     +          +     0.54759769648457 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.50311574684963 * S_AcceptedCmpTotal + -0.18985055644549 * S_Age 
+ 0.44828804873659 * S_Frq + -0.51280008296346 * S_Income + -0.07468461691846 * S_Kidhome + 
-0.02817334981603 * S_MntFishProducts + -0.23674836972041 * S_MntFruits + 0.09571592531833 * 
S_MntGoldProds + -0.09676918994417 * S_MntSweetProducts + 0.11832246824115 * 
S_MonthsAsCustomer + -0.06605281991661 * S_NumDealsPurchases + -0.48924564446119 * 
S_NumWebVisitsMonth + -0.46878579854964 * S_RFMstat + -0.08286830724047 * S_RMntFrq + 
0.72493722489034 * S_Recency + 0.54759769648457 * S_Teenhome ;
96234     +   H12  =     0.27433541795855 * S_AcceptedCmpTotal  +    -0.13239293741829 *
96235     +        S_Age  +       0.297440346075 * S_Frq  +     0.60301641350325 *
96236     +        S_Income  +    -0.52629295860426 * S_Kidhome
96237     +          +    -0.09281934074994 * S_MntFishProducts
96238     +          +    -0.01139552037387 * S_MntFruits  +    -0.01724648803464 *
96239     +        S_MntGoldProds  +    -0.11213003865462 * S_MntSweetProducts
96240     +          +     0.01420877288416 * S_MonthsAsCustomer
96241     +          +     0.15753030263585 * S_NumDealsPurchases
96242     +          +     0.12839062787468 * S_NumWebVisitsMonth
96243     +          +     0.09918681531437 * S_RFMstat  +     0.28128581499392 *
96244     +        S_RMntFrq  +    -0.77555854798433 * S_Recency
96245     +          +    -0.39696436898966 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.27433541795855 * S_AcceptedCmpTotal + -0.13239293741829 * S_Age 
+ 0.297440346075 * S_Frq + 0.60301641350325 * S_Income + -0.52629295860426 * S_Kidhome + 
-0.09281934074994 * S_MntFishProducts + -0.01139552037387 * S_MntFruits + -0.01724648803464 * 
S_MntGoldProds + -0.11213003865462 * S_MntSweetProducts + 0.01420877288416 * 
S_MonthsAsCustomer + 0.15753030263585 * S_NumDealsPurchases + 0.12839062787468 * 
S_NumWebVisitsMonth + 0.09918681531437 * S_RFMstat + 0.28128581499392 * S_RMntFrq + 
-0.77555854798433 * S_Recency + -0.39696436898966 * S_Teenhome ;
96246     +   H13  =     0.03123358805476 * S_AcceptedCmpTotal  +    -0.11998608363847 *
96247     +        S_Age  +     0.08338729365626 * S_Frq  +     0.36926635699098 *
96248     +        S_Income  +     0.00460024601501 * S_Kidhome
96249     +          +    -0.02200799678674 * S_MntFishProducts
96250     +          +     0.17038795346592 * S_MntFruits  +    -0.01191054270128 *
96251     +        S_MntGoldProds  +     0.09461198228745 * S_MntSweetProducts
96252     +          +     0.11175639451728 * S_MonthsAsCustomer
96253     +          +    -0.14915044300238 * S_NumDealsPurchases
96254     +          +     -0.0217132622877 * S_NumWebVisitsMonth
96255     +          +     0.19209945631632 * S_RFMstat  +     0.27685327218371 *
96256     +        S_RMntFrq  +     -0.1114202547513 * S_Recency
96257     +          +    -0.07677627375613 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 0.03123358805476 * S_AcceptedCmpTotal + -0.11998608363847 * S_Age 
+ 0.08338729365626 * S_Frq + 0.36926635699098 * S_Income + 0.00460024601501 * S_Kidhome + 
-0.02200799678674 * S_MntFishProducts + 0.17038795346592 * S_MntFruits + -0.01191054270128 * 
S_MntGoldProds + 0.09461198228745 * S_MntSweetProducts + 0.11175639451728 * S_MonthsAsCustomer 
+ -0.14915044300238 * S_NumDealsPurchases + -0.0217132622877 * S_NumWebVisitsMonth + 
0.19209945631632 * S_RFMstat + 0.27685327218371 * S_RMntFrq + -0.1114202547513 * S_Recency + 
-0.07677627375613 * S_Teenhome ;
96258     +   H14  =      -0.510052563552 * S_AcceptedCmpTotal  +    -0.12652051241051 *
96259     +        S_Age  +    -0.42250950524778 * S_Frq  +    -0.66291360306733 *
96260     +        S_Income  +    -0.50120074528145 * S_Kidhome
96261     +          +     0.44715945861433 * S_MntFishProducts
96262     +          +     0.23552533999892 * S_MntFruits  +    -0.60812570135419 *
96263     +        S_MntGoldProds  +    -0.29436997886251 * S_MntSweetProducts
96264     +          +    -0.16226459240838 * S_MonthsAsCustomer
96265     +          +    -0.66300674579813 * S_NumDealsPurchases
96266     +          +    -0.46113723081205 * S_NumWebVisitsMonth
96267     +          +    -0.28741955047351 * S_RFMstat  +    -0.51342973736897 *
96268     +        S_RMntFrq  +     0.32948062104596 * S_Recency
96269     +          +     0.04630647814801 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = -0.510052563552 * S_AcceptedCmpTotal + -0.12652051241051 * S_Age + 
-0.42250950524778 * S_Frq + -0.66291360306733 * S_Income + -0.50120074528145 * S_Kidhome + 
0.44715945861433 * S_MntFishProducts + 0.23552533999892 * S_MntFruits + -0.60812570135419 * 
S_MntGoldProds + -0.29436997886251 * S_MntSweetProducts + -0.16226459240838 * 
S_MonthsAsCustomer + -0.66300674579813 * S_NumDealsPurchases + -0.46113723081205 * 
S_NumWebVisitsMonth + -0.28741955047351 * S_RFMstat + -0.51342973736897 * S_RMntFrq + 
0.32948062104596 * S_Recency + 0.04630647814801 * S_Teenhome ;
96270     +   H15  =    -0.05552489181258 * S_AcceptedCmpTotal  +      0.3358097664399 *
96271     +        S_Age  +     0.99860330572057 * S_Frq  +     0.33672529961967 *
96272     +        S_Income  +     0.16969714205994 * S_Kidhome
96273     +          +     0.04976308170854 * S_MntFishProducts
96274     +          +     0.17074705999537 * S_MntFruits  +    -0.14669916972196 *
96275     +        S_MntGoldProds  +    -0.09562051744533 * S_MntSweetProducts
96276     +          +     0.17484703075203 * S_MonthsAsCustomer
96277     +          +    -0.55173591551358 * S_NumDealsPurchases
96278     +          +    -0.43823357997032 * S_NumWebVisitsMonth
96279     +          +     0.35315919586696 * S_RFMstat  +    -0.19785503093343 *
96280     +        S_RMntFrq  +     0.71670167585868 * S_Recency
96281     +          +    -0.28983189748238 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = -0.05552489181258 * S_AcceptedCmpTotal + 0.3358097664399 * S_Age + 
0.99860330572057 * S_Frq + 0.33672529961967 * S_Income + 0.16969714205994 * S_Kidhome + 
0.04976308170854 * S_MntFishProducts + 0.17074705999537 * S_MntFruits + -0.14669916972196 * 
S_MntGoldProds + -0.09562051744533 * S_MntSweetProducts + 0.17484703075203 * 
S_MonthsAsCustomer + -0.55173591551358 * S_NumDealsPurchases + -0.43823357997032 * 
S_NumWebVisitsMonth + 0.35315919586696 * S_RFMstat + -0.19785503093343 * S_RMntFrq + 
0.71670167585868 * S_Recency + -0.28983189748238 * S_Teenhome ;
96282     +   H16  =     0.13586107601616 * S_AcceptedCmpTotal  +    -0.03004972131524 *
96283     +        S_Age  +     0.34607777972893 * S_Frq  +     0.04594045147698 *
96284     +        S_Income  +    -0.02355089102951 * S_Kidhome
96285     +          +     0.17666646340328 * S_MntFishProducts
96286     +          +    -0.42460885844972 * S_MntFruits  +      0.1419729562767 *
96287     +        S_MntGoldProds  +    -0.37586377717812 * S_MntSweetProducts
96288     +          +     0.13355805650034 * S_MonthsAsCustomer
96289     +          +     0.14924024487443 * S_NumDealsPurchases
96290     +          +     0.34848278731511 * S_NumWebVisitsMonth
96291     +          +     0.19641659129802 * S_RFMstat  +    -0.04454828782133 *
96292     +        S_RMntFrq  +    -0.80210797166772 * S_Recency
96293     +          +    -0.42106674037771 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = 0.13586107601616 * S_AcceptedCmpTotal + -0.03004972131524 * S_Age 
+ 0.34607777972893 * S_Frq + 0.04594045147698 * S_Income + -0.02355089102951 * S_Kidhome + 
0.17666646340328 * S_MntFishProducts + -0.42460885844972 * S_MntFruits + 0.1419729562767 * 
S_MntGoldProds + -0.37586377717812 * S_MntSweetProducts + 0.13355805650034 * 
S_MonthsAsCustomer + 0.14924024487443 * S_NumDealsPurchases + 0.34848278731511 * 
S_NumWebVisitsMonth + 0.19641659129802 * S_RFMstat + -0.04454828782133 * S_RMntFrq + 
-0.80210797166772 * S_Recency + -0.42106674037771 * S_Teenhome ;
96294     +   H11  = H11  +     0.23614129020735 * AcceptedCmp10
96295     +          +    -0.02084878775169 * AcceptedCmp20  +     0.37466381839371 *
96296     +        AcceptedCmp30  +    -0.73407018983175 * AcceptedCmp40
96297     +          +     0.56003163460043 * AcceptedCmp50  +      0.2232704545414 *
96298     +        Complain0  +    -0.47480864689786 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.23614129020735 * AcceptedCmp10 + -0.02084878775169 * 
AcceptedCmp20 + 0.37466381839371 * AcceptedCmp30 + -0.73407018983175 * AcceptedCmp40 + 
0.56003163460043 * AcceptedCmp50 + 0.2232704545414 * Complain0 + -0.47480864689786 * 
HigherEducationBinary0 ;
96299     +   H12  = H12  +    -0.27353744753102 * AcceptedCmp10
96300     +          +    -0.28444143977421 * AcceptedCmp20  +    -0.31024205224044 *
96301     +        AcceptedCmp30  +     -0.3066557522304 * AcceptedCmp40
96302     +          +      0.0549579852636 * AcceptedCmp50  +    -0.14741752806404 *
96303     +        Complain0  +     0.28934485954948 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.27353744753102 * AcceptedCmp10 + -0.28444143977421 * 
AcceptedCmp20 + -0.31024205224044 * AcceptedCmp30 + -0.3066557522304 * AcceptedCmp40 + 
0.0549579852636 * AcceptedCmp50 + -0.14741752806404 * Complain0 + 0.28934485954948 * 
HigherEducationBinary0 ;
96304     +   H13  = H13  +    -0.04693289193242 * AcceptedCmp10
96305     +          +     0.14083843787444 * AcceptedCmp20  +     0.35339306333755 *
96306     +        AcceptedCmp30  +     0.18353806616447 * AcceptedCmp40
96307     +          +      0.1789056537211 * AcceptedCmp50  +     -0.0778376167893 *
96308     +        Complain0  +    -0.42804187853556 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.04693289193242 * AcceptedCmp10 + 0.14083843787444 * 
AcceptedCmp20 + 0.35339306333755 * AcceptedCmp30 + 0.18353806616447 * AcceptedCmp40 + 
0.1789056537211 * AcceptedCmp50 + -0.0778376167893 * Complain0 + -0.42804187853556 * 
HigherEducationBinary0 ;
96309     +   H14  = H14  +     -0.1827583424217 * AcceptedCmp10
96310     +          +     -0.1489832073407 * AcceptedCmp20  +     0.19258598777521 *
96311     +        AcceptedCmp30  +    -0.09050532815681 * AcceptedCmp40
96312     +          +     0.31883627486144 * AcceptedCmp50  +    -0.45377259681397 *
96313     +        Complain0  +     0.15391344192243 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.1827583424217 * AcceptedCmp10 + -0.1489832073407 * 
AcceptedCmp20 + 0.19258598777521 * AcceptedCmp30 + -0.09050532815681 * AcceptedCmp40 + 
0.31883627486144 * AcceptedCmp50 + -0.45377259681397 * Complain0 + 0.15391344192243 * 
HigherEducationBinary0 ;
96314     +   H15  = H15  +     0.27865852917942 * AcceptedCmp10
96315     +          +       0.138287927284 * AcceptedCmp20  +     0.16317472998408 *
96316     +        AcceptedCmp30  +    -0.05372991123771 * AcceptedCmp40
96317     +          +     0.10581002090735 * AcceptedCmp50  +     -0.1352393114395 *
96318     +        Complain0  +    -0.01276168923951 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.27865852917942 * AcceptedCmp10 + 0.138287927284 * 
AcceptedCmp20 + 0.16317472998408 * AcceptedCmp30 + -0.05372991123771 * AcceptedCmp40 + 
0.10581002090735 * AcceptedCmp50 + -0.1352393114395 * Complain0 + -0.01276168923951 * 
HigherEducationBinary0 ;
96319     +   H16  = H16  +     0.54923092188785 * AcceptedCmp10
96320     +          +     0.06197589967314 * AcceptedCmp20  +    -0.16384237649268 *
96321     +        AcceptedCmp30  +     0.19164251659143 * AcceptedCmp40
96322     +          +     -0.0276972319359 * AcceptedCmp50  +     0.24239824406043 *
96323     +        Complain0  +    -0.10846507318888 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.54923092188785 * AcceptedCmp10 + 0.06197589967314 * 
AcceptedCmp20 + -0.16384237649268 * AcceptedCmp30 + 0.19164251659143 * AcceptedCmp40 + 
-0.0276972319359 * AcceptedCmp50 + 0.24239824406043 * Complain0 + -0.10846507318888 * 
HigherEducationBinary0 ;
96324     +   H11  = H11  +     0.04065157802519 * Education2n_Cycle
96325     +          +     0.07405354529938 * EducationBasic  +    -0.27041205259916 *
96326     +        EducationGraduation  +     0.19305680604676 * EducationMaster
96327     +          +    -0.26816495704747 * Marital_StatusDivorced
96328     +          +     0.29673114151649 * Marital_StatusMarried
96329     +          +    -0.41626876543099 * Marital_StatusSingle
96330     +          +     0.09243411924301 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.04065157802519 * Education2n_Cycle + 0.07405354529938 * 
EducationBasic + -0.27041205259916 * EducationGraduation + 0.19305680604676 * EducationMaster 
+ -0.26816495704747 * Marital_StatusDivorced + 0.29673114151649 * Marital_StatusMarried + 
-0.41626876543099 * Marital_StatusSingle + 0.09243411924301 * Marital_StatusTogether ;
96331     +   H12  = H12  +     0.01524024349677 * Education2n_Cycle
96332     +          +     0.15070908916981 * EducationBasic  +     0.08422316601088 *
96333     +        EducationGraduation  +     -0.1896291301388 * EducationMaster
96334     +          +     0.11744127787391 * Marital_StatusDivorced
96335     +          +    -0.63703361207291 * Marital_StatusMarried
96336     +          +     0.57071735977739 * Marital_StatusSingle
96337     +          +    -0.68611342778218 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.01524024349677 * Education2n_Cycle + 0.15070908916981 * 
EducationBasic + 0.08422316601088 * EducationGraduation + -0.1896291301388 * EducationMaster + 
0.11744127787391 * Marital_StatusDivorced + -0.63703361207291 * Marital_StatusMarried + 
0.57071735977739 * Marital_StatusSingle + -0.68611342778218 * Marital_StatusTogether ;
96338     +   H13  = H13  +     0.09605604995794 * Education2n_Cycle
96339     +          +    -0.04349642322783 * EducationBasic  +    -0.11196808839685 *
96340     +        EducationGraduation  +    -0.01261925630364 * EducationMaster
96341     +          +     -0.1701911327485 * Marital_StatusDivorced
96342     +          +     0.22770672854155 * Marital_StatusMarried
96343     +          +    -0.00691671702288 * Marital_StatusSingle
96344     +          +       0.236686912143 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.09605604995794 * Education2n_Cycle + -0.04349642322783 * 
EducationBasic + -0.11196808839685 * EducationGraduation + -0.01261925630364 * EducationMaster 
+ -0.1701911327485 * Marital_StatusDivorced + 0.22770672854155 * Marital_StatusMarried + 
-0.00691671702288 * Marital_StatusSingle + 0.236686912143 * Marital_StatusTogether ;
96345     +   H14  = H14  +     0.10857873061564 * Education2n_Cycle
96346     +          +     0.16814453951395 * EducationBasic  +    -0.34874327957426 *
96347     +        EducationGraduation  +    -0.25193270521624 * EducationMaster
96348     +          +    -0.15403542879027 * Marital_StatusDivorced
96349     +          +     0.02652360752468 * Marital_StatusMarried
96350     +          +    -0.10723298292119 * Marital_StatusSingle
96351     +          +     0.11548543150405 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.10857873061564 * Education2n_Cycle + 0.16814453951395 * 
EducationBasic + -0.34874327957426 * EducationGraduation + -0.25193270521624 * EducationMaster 
+ -0.15403542879027 * Marital_StatusDivorced + 0.02652360752468 * Marital_StatusMarried + 
-0.10723298292119 * Marital_StatusSingle + 0.11548543150405 * Marital_StatusTogether ;
96352     +   H15  = H15  +     0.15880112810083 * Education2n_Cycle
96353     +          +     0.24466813535709 * EducationBasic  +    -0.03905452635368 *
96354     +        EducationGraduation  +    -0.24152136481937 * EducationMaster
96355     +          +    -0.00204417192532 * Marital_StatusDivorced
96356     +          +    -0.16973417192262 * Marital_StatusMarried
96357     +          +     0.23027366297507 * Marital_StatusSingle
96358     +          +     0.08101453661219 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.15880112810083 * Education2n_Cycle + 0.24466813535709 * 
EducationBasic + -0.03905452635368 * EducationGraduation + -0.24152136481937 * EducationMaster 
+ -0.00204417192532 * Marital_StatusDivorced + -0.16973417192262 * Marital_StatusMarried + 
0.23027366297507 * Marital_StatusSingle + 0.08101453661219 * Marital_StatusTogether ;
96359     +   H16  = H16  +     0.06080074855433 * Education2n_Cycle
96360     +          +     0.05712541606796 * EducationBasic  +     0.08565135130429 *
96361     +        EducationGraduation  +    -0.35693831321015 * EducationMaster
96362     +          +     0.23360275712164 * Marital_StatusDivorced
96363     +          +    -0.12276379115508 * Marital_StatusMarried
96364     +          +     0.25482197877469 * Marital_StatusSingle
96365     +          +    -0.38122499701658 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.06080074855433 * Education2n_Cycle + 0.05712541606796 * 
EducationBasic + 0.08565135130429 * EducationGraduation + -0.35693831321015 * EducationMaster 
+ 0.23360275712164 * Marital_StatusDivorced + -0.12276379115508 * Marital_StatusMarried + 
0.25482197877469 * Marital_StatusSingle + -0.38122499701658 * Marital_StatusTogether ;
96366     +   H11  =    -1.45785613717334 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.45785613717334 + H11 ;
96367     +   H12  =    -1.39199534011753 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -1.39199534011753 + H12 ;
96368     +   H13  =     2.43348807391253 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 2.43348807391253 + H13 ;
96369     +   H14  =    -0.82674437249292 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -0.82674437249292 + H14 ;
96370     +   H15  =     1.84262829639962 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 1.84262829639962 + H15 ;
96371     +   H16  =     1.40892711992493 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = 1.40892711992493 + H16 ;
96372     +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
96373     +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
96374     +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
96375     +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
96376     +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
96377     +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
96378     +END;
MPRINT(EM_DIAGRAM):   END;
96379     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
96380     +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
96381     +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
96382     +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
96383     +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
96384     +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
96385     +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
96386     +END;
MPRINT(EM_DIAGRAM):   END;
96387     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
96388     +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
96389     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
96390     +
96391     +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
96392     +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
96393     +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
96394     +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
96395     +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
96396     +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
96397     +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
96398     +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
96399     +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
96400     +end;
MPRINT(EM_DIAGRAM):   end;
96401     +else do;
MPRINT(EM_DIAGRAM):   else do;
96402     +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
96403     +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
96404     +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
96405     +   end;
MPRINT(EM_DIAGRAM):   end;
96406     +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
96407     +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
96408     +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
96409     +   end;
MPRINT(EM_DIAGRAM):   end;
96410     +   else do;
MPRINT(EM_DIAGRAM):   else do;
96411     +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
96412     +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
96413     +   end;
MPRINT(EM_DIAGRAM):   end;
96414     +end;
MPRINT(EM_DIAGRAM):   end;
96415     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
96416     +   P_DepVar1  =    -2.98548396417337 * H11  +     3.55440982243177 * H12
96417     +          +    -1.98442501061115 * H13  +    -2.67879549563082 * H14
96418     +          +    -2.68634609959794 * H15  +     3.13238014605319 * H16 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.98548396417337 * H11 + 3.55440982243177 * H12 + 
-1.98442501061115 * H13 + -2.67879549563082 * H14 + -2.68634609959794 * H15 + 3.13238014605319 
* H16 ;
96419     +   P_DepVar1  =    -2.49443575387204 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.49443575387204 + P_DepVar1 ;
96420     +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
96421     +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
96422     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
96423     +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
96424     +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
96425     +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
96426     +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
96427     +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
96428     +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
96429     +END;
MPRINT(EM_DIAGRAM):   END;
96430     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
96431     +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
96432     +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
96433     +END;
MPRINT(EM_DIAGRAM):   END;
96434     +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
96435     +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
96436     +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
96437     +END;
MPRINT(EM_DIAGRAM):   END;
96438     +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
96439     +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
96440     +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
96441     +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
96442     +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
96443     +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
96444     +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
96445     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
96446     +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
96447     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
96448     +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
96449     +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
96450     +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
96451     +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
96452     +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
96453     +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
96454     +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
96455     +END;
MPRINT(EM_DIAGRAM):   END;
96456     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
96457     +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
96458     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
96459     +drop
96460     +H11
96461     +H12
96462     +H13
96463     +H14
96464     +H15
96465     +H16
96466     +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 ;
96467     +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
96468     +* Renaming variables for Neural41;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural41;
96469     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
96470     +* Renaming Posterior variables for Neural41;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural41;
96471     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
96472     +drop Neural41_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural41_P_DepVar1;
96473     +Neural41_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural41_P_DepVar1 = P_DepVar1;
96474     +drop Neural41_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural41_P_DepVar0;
96475     +Neural41_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural41_P_DepVar0 = P_DepVar0;
96476     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
96477     +* Renaming _WARN_ variable for Neural41;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural41;
96478     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
96479     +length Neural41_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural41_WARN_ $4;
96480     +drop Neural41_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural41_WARN_;
96481     +Neural41_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural41_WARN_ = _WARN_;
96482     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
96483     +* Ensmbl23: Average Posteriors of 5 models;
MPRINT(EM_DIAGRAM):   * Ensmbl23: Average Posteriors of 5 models;
96484     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
96485     +P_DepVar1 = (
96486     +Neural40_P_DepVar1 +
96487     +AutoNeural39_P_DepVar1 +
96488     +AutoNeural38_P_DepVar1 +
96489     +Neural39_P_DepVar1 +
96490     +Neural41_P_DepVar1
96491     +)/5;
MPRINT(EM_DIAGRAM):   P_DepVar1 = ( Neural40_P_DepVar1 + AutoNeural39_P_DepVar1 + 
AutoNeural38_P_DepVar1 + Neural39_P_DepVar1 + Neural41_P_DepVar1 )/5;
96492     +P_DepVar0 = (
96493     +Neural40_P_DepVar0 +
96494     +AutoNeural39_P_DepVar0 +
96495     +AutoNeural38_P_DepVar0 +
96496     +Neural39_P_DepVar0 +
96497     +Neural41_P_DepVar0
96498     +)/5;
MPRINT(EM_DIAGRAM):   P_DepVar0 = ( Neural40_P_DepVar0 + AutoNeural39_P_DepVar0 + 
AutoNeural38_P_DepVar0 + Neural39_P_DepVar0 + Neural41_P_DepVar0 )/5;
96499     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
96500     +* Ensmbl23: Computing Classification Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl23: Computing Classification Vars;
96501     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
96502     +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set. 
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the 
         length of a character variable.
96503     +label I_DepVar = 'Into: DepVar';
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar';
96504     +length _format $200;
MPRINT(EM_DIAGRAM):   length _format $200;
96505     +drop _format;
MPRINT(EM_DIAGRAM):   drop _format;
96506     +_format= ' ';
MPRINT(EM_DIAGRAM):   _format= ' ';
96507     +_p_= 0;
MPRINT(EM_DIAGRAM):   _p_= 0;
96508     +drop _p_;
MPRINT(EM_DIAGRAM):   drop _p_;
96509     +if P_DepVar1 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _p_ then do;
96510     +_p_= P_DepVar1;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar1;
96511     +_format= '1';
MPRINT(EM_DIAGRAM):   _format= '1';
96512     +end;
MPRINT(EM_DIAGRAM):   end;
96513     +if P_DepVar0 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _p_ then do;
96514     +_p_= P_DepVar0;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar0;
96515     +_format= '0';
MPRINT(EM_DIAGRAM):   _format= '0';
96516     +end;
MPRINT(EM_DIAGRAM):   end;
96517     +%DMNORMCP(_format,I_DepVar);
MPRINT(DMNORMCP):   I_DepVar=dmnorm(_format,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
96518     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
96519     +* Ensmbl23: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   * Ensmbl23: Producing Unformatted variable;
96520     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
96521     +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
96522     +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
96523     +else
96524     +if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
96525     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
96526     +* Ensmbl23: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl23: Computing _WARN_ Variable;
96527     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
96528     +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
96529     +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
96530     +_WARN_ = '';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
96531     +if index(NEURAL40_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
96531    !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL40_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
96532     +if index(NEURAL40_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
96532    !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL40_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
96533     +if index(NEURAL40_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
96533    !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL40_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
96534     +if index(NEURAL40_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
96534    !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL40_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
96535     +if index(AUTONEURAL39_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
96535    !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL39_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
96536     +if index(AUTONEURAL39_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
96536    !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL39_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
96537     +if index(AUTONEURAL39_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
96537    !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL39_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
96538     +if index(AUTONEURAL39_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
96538    !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL39_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
96539     +if index(AUTONEURAL38_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
96539    !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL38_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
96540     +if index(AUTONEURAL38_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
96540    !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL38_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
96541     +if index(AUTONEURAL38_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
96541    !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL38_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
96542     +if index(AUTONEURAL38_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
96542    !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL38_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
96543     +if index(NEURAL39_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
96543    !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL39_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
96544     +if index(NEURAL39_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
96544    !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL39_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
96545     +if index(NEURAL39_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
96545    !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL39_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
96546     +if index(NEURAL39_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
96546    !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL39_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
96547     +if index(NEURAL41_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
96547    !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL41_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
96548     +if index(NEURAL41_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
96548    !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL41_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
96549     +if index(NEURAL41_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
96549    !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL41_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
96550     +if index(NEURAL41_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
96550    !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL41_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
96551     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
96552     +* Ensmbl23: Computing Residual Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl23: Computing Residual Vars;
96553     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
96554     +if
96555     +F_DepVar NE '1'
96556     +AND F_DepVar NE '0'
96557     +then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE '1' AND F_DepVar NE '0' then do;
96558     +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
96559     +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
96560     +end;
MPRINT(EM_DIAGRAM):   end;
96561     +else do;
MPRINT(EM_DIAGRAM):   else do;
96562     +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
96563     +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
96564     +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
96565     +WHEN('1') R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN('1') R_DepVar1 = R_DepVar1 +1;
96566     +WHEN('0') R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN('0') R_DepVar0 = R_DepVar0 +1;
96567     +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
96568     +END;
MPRINT(EM_DIAGRAM):   END;
96569     +END;
MPRINT(EM_DIAGRAM):   END;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
96570      run;

NOTE: DATA STEP view saved on file EMWS8.ENSMBL23_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.NEURAL40_TRAIN.VIEW used (Total process time):
      real time           0.19 seconds
      cpu time            0.18 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.20 seconds
      cpu time            0.20 seconds
      

MPRINT(EM_DIAGRAM):   quit;
96571      quit;
96572      filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
96573      filename emflow
96573    ! "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl23\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl23\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl23: Scoring NEURAL40_VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
96574      *------------------------------------------------------------*;
96575      * Ensmbl23: Scoring NEURAL40_VALIDATE data;
96576      *------------------------------------------------------------*;
96577      data EMWS8.Ensmbl23_VALIDATE
96578      / view=EMWS8.Ensmbl23_VALIDATE
96579      ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl23_VALIDATE / view=EMWS8.Ensmbl23_VALIDATE ;
96580      set EMWS8.Neural40_VALIDATE
96581      ;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural40_VALIDATE ;
96582      %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl23\EMFLOWSCORE.sas.
96583     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
96584     +* Ensmbl23: Combine model for DepVar;
MPRINT(EM_DIAGRAM):   * Ensmbl23: Combine model for DepVar;
96585     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
96586     +* Ensmbl23: Scoring Code of model 1 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl23: Scoring Code of model 1 of 5;
96587     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
96588     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
96589     +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
96590     +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
96591     +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
96592     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
96593     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
96594     +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
96595     +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
96596     +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
96597     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
96598     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
96599     +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
96600     +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
96601     +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
96602     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
96603     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
96604     +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
96605     +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
96606     +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
96607     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
96608     +
96609     +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
96610     +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
96610    !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
96611     +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
96612     +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
96613     +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
96614     +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
96615     +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
96616     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
96617     +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
96618     +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
96619     +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
96620     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
96621     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
96622     +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
96623     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
96624     +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
96625     +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
96626     +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
96627     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
96628     +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
96629     +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
96630     +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
96631     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
96632     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
96633     +* TOOL: Metadata Node;
MPRINT(EM_DIAGRAM):   * TOOL: Metadata Node;
96634     +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
96635     +* NODE: Meta3;
MPRINT(EM_DIAGRAM):   * NODE: Meta3;
96636     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
96637     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
96638     +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
96639     +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
96640     +* NODE: Neural40;
MPRINT(EM_DIAGRAM):   * NODE: Neural40;
96641     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
96642     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
96643     +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
96644     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
96645     +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
96646     + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
96647     + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
96648     + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
96649     + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
96650     + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
96651     + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
96652     + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
96653     +LENGTH _WARN_ $4
96654     +      F_DepVar  $ 12
96655     +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
96656     +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
96657     +
96658     +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
96659     +
96660     +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
96661     +
96662     +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
96663     +
96664     +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
96665     +
96666     +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
96667     +
96668     +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
96669     +
96670     +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
96671     +
96672     +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
96673     +
96674     +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
96675     +
96676     +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
96677     +
96678     +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
96679     +
96680     +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
96681     +
96682     +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
96683     +
96684     +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
96685     +
96686     +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
96687     +
96688     +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
96689     +
96690     +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
96691     +
96692     +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
96693     +
96694     +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
96695     +
96696     +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
96697     +
96698     +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
96699     +
96700     +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
96701     +
96702     +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
96703     +
96704     +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
96705     +
96706     +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
96707     +
96708     +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
96709     +
96710     +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
96711     +
96712     +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
96713     +
96714     +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
96715     +
96716     +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
96717     +
96718     +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
96719     +
96720     +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
96721     +
96722     +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
96723     +
96724     +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
96725     +
96726     +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
96727     +
96728     +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
96729     +
96730     +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
96731     +
96732     +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
96733     +
96734     +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
96735     +
96736     +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
96737     +
96738     +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
96739     +
96740     +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
96741     +
96742     +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
96743     +
96744     +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
96745     +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
96746     +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
96747     +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
96748     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
96749     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
96750     +end;
MPRINT(EM_DIAGRAM):   end;
96751     +else do;
MPRINT(EM_DIAGRAM):   else do;
96752     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
96753     +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
96754     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
96755     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
96756     +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
96757     +   end;
MPRINT(EM_DIAGRAM):   end;
96758     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
96759     +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
96760     +   end;
MPRINT(EM_DIAGRAM):   end;
96761     +   else do;
MPRINT(EM_DIAGRAM):   else do;
96762     +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
96763     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
96764     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
96765     +   end;
MPRINT(EM_DIAGRAM):   end;
96766     +end;
MPRINT(EM_DIAGRAM):   end;
96767     +
96768     +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
96769     +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
96770     +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
96771     +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
96772     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
96773     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
96774     +end;
MPRINT(EM_DIAGRAM):   end;
96775     +else do;
MPRINT(EM_DIAGRAM):   else do;
96776     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
96777     +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
96778     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
96779     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
96780     +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
96781     +   end;
MPRINT(EM_DIAGRAM):   end;
96782     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
96783     +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
96784     +   end;
MPRINT(EM_DIAGRAM):   end;
96785     +   else do;
MPRINT(EM_DIAGRAM):   else do;
96786     +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
96787     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
96788     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
96789     +   end;
MPRINT(EM_DIAGRAM):   end;
96790     +end;
MPRINT(EM_DIAGRAM):   end;
96791     +
96792     +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
96793     +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
96794     +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
96795     +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
96796     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
96797     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
96798     +end;
MPRINT(EM_DIAGRAM):   end;
96799     +else do;
MPRINT(EM_DIAGRAM):   else do;
96800     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
96801     +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
96802     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
96803     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
96804     +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
96805     +   end;
MPRINT(EM_DIAGRAM):   end;
96806     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
96807     +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
96808     +   end;
MPRINT(EM_DIAGRAM):   end;
96809     +   else do;
MPRINT(EM_DIAGRAM):   else do;
96810     +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
96811     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
96812     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
96813     +   end;
MPRINT(EM_DIAGRAM):   end;
96814     +end;
MPRINT(EM_DIAGRAM):   end;
96815     +
96816     +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
96817     +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
96818     +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
96819     +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
96820     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
96821     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
96822     +end;
MPRINT(EM_DIAGRAM):   end;
96823     +else do;
MPRINT(EM_DIAGRAM):   else do;
96824     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
96825     +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
96826     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
96827     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
96828     +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
96829     +   end;
MPRINT(EM_DIAGRAM):   end;
96830     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
96831     +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
96832     +   end;
MPRINT(EM_DIAGRAM):   end;
96833     +   else do;
MPRINT(EM_DIAGRAM):   else do;
96834     +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
96835     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
96836     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
96837     +   end;
MPRINT(EM_DIAGRAM):   end;
96838     +end;
MPRINT(EM_DIAGRAM):   end;
96839     +
96840     +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
96841     +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
96842     +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
96843     +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
96844     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
96845     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
96846     +end;
MPRINT(EM_DIAGRAM):   end;
96847     +else do;
MPRINT(EM_DIAGRAM):   else do;
96848     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
96849     +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
96850     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
96851     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
96852     +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
96853     +   end;
MPRINT(EM_DIAGRAM):   end;
96854     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
96855     +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
96856     +   end;
MPRINT(EM_DIAGRAM):   end;
96857     +   else do;
MPRINT(EM_DIAGRAM):   else do;
96858     +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
96859     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
96860     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
96861     +   end;
MPRINT(EM_DIAGRAM):   end;
96862     +end;
MPRINT(EM_DIAGRAM):   end;
96863     +
96864     +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
96865     +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
96866     +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
96867     +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
96868     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
96869     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
96870     +end;
MPRINT(EM_DIAGRAM):   end;
96871     +else do;
MPRINT(EM_DIAGRAM):   else do;
96872     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
96873     +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
96874     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
96875     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
96876     +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
96877     +   end;
MPRINT(EM_DIAGRAM):   end;
96878     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
96879     +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
96880     +   end;
MPRINT(EM_DIAGRAM):   end;
96881     +   else do;
MPRINT(EM_DIAGRAM):   else do;
96882     +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
96883     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
96884     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
96885     +   end;
MPRINT(EM_DIAGRAM):   end;
96886     +end;
MPRINT(EM_DIAGRAM):   end;
96887     +
96888     +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
96889     +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
96890     +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
96891     +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
96892     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
96893     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
96894     +end;
MPRINT(EM_DIAGRAM):   end;
96895     +else do;
MPRINT(EM_DIAGRAM):   else do;
96896     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
96897     +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
96898     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
96899     +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
96900     +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
96901     +   end;
MPRINT(EM_DIAGRAM):   end;
96902     +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
96903     +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
96904     +   end;
MPRINT(EM_DIAGRAM):   end;
96905     +   else do;
MPRINT(EM_DIAGRAM):   else do;
96906     +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
96907     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
96908     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
96909     +   end;
MPRINT(EM_DIAGRAM):   end;
96910     +end;
MPRINT(EM_DIAGRAM):   end;
96911     +
96912     +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
96913     +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
96914     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
96915     +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
96916     +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
96917     +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
96918     +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
96919     +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
96920     +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
96921     +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
96922     +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
96923     +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
96924     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
96925     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
96926     +end;
MPRINT(EM_DIAGRAM):   end;
96927     +else do;
MPRINT(EM_DIAGRAM):   else do;
96928     +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
96929     +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
96930     +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
96931     +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
96932     +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
96933     +   end;
MPRINT(EM_DIAGRAM):   end;
96934     +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
96935     +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
96936     +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
96937     +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
96938     +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
96939     +   end;
MPRINT(EM_DIAGRAM):   end;
96940     +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
96941     +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
96942     +   end;
MPRINT(EM_DIAGRAM):   end;
96943     +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
96944     +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
96945     +   end;
MPRINT(EM_DIAGRAM):   end;
96946     +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
96947     +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
96948     +   end;
MPRINT(EM_DIAGRAM):   end;
96949     +   else do;
MPRINT(EM_DIAGRAM):   else do;
96950     +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
96951     +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
96952     +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
96953     +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
96954     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
96955     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
96956     +   end;
MPRINT(EM_DIAGRAM):   end;
96957     +end;
MPRINT(EM_DIAGRAM):   end;
96958     +
96959     +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
96960     +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
96961     +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
96962     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
96963     +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
96964     +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
96965     +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
96966     +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
96967     +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
96968     +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
96969     +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
96970     +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
96971     +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
96972     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
96973     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
96974     +end;
MPRINT(EM_DIAGRAM):   end;
96975     +else do;
MPRINT(EM_DIAGRAM):   else do;
96976     +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
96977     +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
96978     +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
96979     +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
96980     +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
96981     +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
96982     +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
96983     +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
96984     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
96985     +         end;
MPRINT(EM_DIAGRAM):   end;
96986     +         else do;
MPRINT(EM_DIAGRAM):   else do;
96987     +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
96988     +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
96989     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
96990     +            end;
MPRINT(EM_DIAGRAM):   end;
96991     +         end;
MPRINT(EM_DIAGRAM):   end;
96992     +      end;
MPRINT(EM_DIAGRAM):   end;
96993     +      else do;
MPRINT(EM_DIAGRAM):   else do;
96994     +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
96995     +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
96996     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
96997     +         end;
MPRINT(EM_DIAGRAM):   end;
96998     +      end;
MPRINT(EM_DIAGRAM):   end;
96999     +   end;
MPRINT(EM_DIAGRAM):   end;
97000     +   else do;
MPRINT(EM_DIAGRAM):   else do;
97001     +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
97002     +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
97003     +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
97004     +      end;
MPRINT(EM_DIAGRAM):   end;
97005     +      else do;
MPRINT(EM_DIAGRAM):   else do;
97006     +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
97007     +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
97008     +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
97009     +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
97010     +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
97011     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
97012     +         end;
MPRINT(EM_DIAGRAM):   end;
97013     +      end;
MPRINT(EM_DIAGRAM):   end;
97014     +   end;
MPRINT(EM_DIAGRAM):   end;
97015     +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
97016     +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
97017     +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
97018     +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
97019     +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
97020     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
97021     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
97022     +   end;
MPRINT(EM_DIAGRAM):   end;
97023     +end;
MPRINT(EM_DIAGRAM):   end;
97024     +
97025     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
97026     +*** Checking missing input Interval
97027     +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
97028     +
97029     +IF NMISS(
97030     +   AcceptedCmpTotal ,
97031     +   Age ,
97032     +   Frq ,
97033     +   Income ,
97034     +   Kidhome ,
97035     +   MntFishProducts ,
97036     +   MntFruits ,
97037     +   MntGoldProds ,
97038     +   MntSweetProducts ,
97039     +   MonthsAsCustomer ,
97040     +   NumDealsPurchases ,
97041     +   NumWebVisitsMonth ,
97042     +   RFMstat ,
97043     +   RMntFrq ,
97044     +   Recency ,
97045     +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
97046     +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
97047     +
97048     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
97049     +END;
MPRINT(EM_DIAGRAM):   END;
97050     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
97051     +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
97052     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
97053     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
97054     +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
97055     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
97056     +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
97057     +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
97058     +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
97059     +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
97060     +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
97061     +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
97062     +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
97063     +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
97064     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
97065     +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
97066     +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
97067     +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
97068     +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
97069     +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
97070     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
97071     +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
97072     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
97073     +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
97074     +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
97075     +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
97076     +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
97077     +END;
MPRINT(EM_DIAGRAM):   END;
97078     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
97079     +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
97080     +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
97081     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
97082     +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
97083     +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
97084     +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
97085     +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
97086     +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
97087     +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
97088     +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
97089     +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
97090     +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
97091     +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
97092     +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
97093     +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
97094     +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
97095     +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
97096     +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
97097     +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
97098     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
97099     +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
97100     +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
97101     +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
97102     +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
97103     +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
97104     +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
97105     +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
97106     +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
97107     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
97108     +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
97109     +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
97110     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
97111     +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
97112     +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
97113     +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
97114     +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
97115     +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
97116     +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
97117     +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
97118     +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
97119     +END;
MPRINT(EM_DIAGRAM):   END;
97120     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
97121     +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
97122     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
97123     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
97124     +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
97125     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
97126     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
97127     +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
97128     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
97129     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
97130     +   H11  =     0.00871038651131 * S_AcceptedCmpTotal  +     0.04885111887799 *
97131     +        S_Age  +    -0.16081720955101 * S_Frq  +    -0.81673231415398 *
97132     +        S_Income  +     0.39760289149752 * S_Kidhome
97133     +          +     -0.0376693415484 * S_MntFishProducts
97134     +          +     0.01707556953741 * S_MntFruits  +     0.03640992016126 *
97135     +        S_MntGoldProds  +     0.18721014378487 * S_MntSweetProducts
97136     +          +    -0.13043754404228 * S_MonthsAsCustomer
97137     +          +     -0.0139146653349 * S_NumDealsPurchases
97138     +          +    -0.01539820220757 * S_NumWebVisitsMonth
97139     +          +     0.00494819481975 * S_RFMstat  +    -0.22517942530642 *
97140     +        S_RMntFrq  +     0.55149605442396 * S_Recency
97141     +          +     0.54614592562743 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.00871038651131 * S_AcceptedCmpTotal + 0.04885111887799 * S_Age + 
-0.16081720955101 * S_Frq + -0.81673231415398 * S_Income + 0.39760289149752 * S_Kidhome + 
-0.0376693415484 * S_MntFishProducts + 0.01707556953741 * S_MntFruits + 0.03640992016126 * 
S_MntGoldProds + 0.18721014378487 * S_MntSweetProducts + -0.13043754404228 * 
S_MonthsAsCustomer + -0.0139146653349 * S_NumDealsPurchases + -0.01539820220757 * 
S_NumWebVisitsMonth + 0.00494819481975 * S_RFMstat + -0.22517942530642 * S_RMntFrq + 
0.55149605442396 * S_Recency + 0.54614592562743 * S_Teenhome ;
97142     +   H12  =    -0.31218916782956 * S_AcceptedCmpTotal  +    -0.13577174745207 *
97143     +        S_Age  +     -0.1133596721701 * S_Frq  +    -0.03250630326063 *
97144     +        S_Income  +     0.31208673256073 * S_Kidhome
97145     +          +    -0.04911763008195 * S_MntFishProducts
97146     +          +     0.04440357574827 * S_MntFruits  +     0.18064625439163 *
97147     +        S_MntGoldProds  +     0.34124097901137 * S_MntSweetProducts
97148     +          +    -0.48577934340503 * S_MonthsAsCustomer
97149     +          +     0.31218334237091 * S_NumDealsPurchases
97150     +          +     0.24212805498377 * S_NumWebVisitsMonth
97151     +          +     0.30439494800184 * S_RFMstat  +    -0.01845944589462 *
97152     +        S_RMntFrq  +    -0.48513476805321 * S_Recency
97153     +          +    -0.32721006241811 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.31218916782956 * S_AcceptedCmpTotal + -0.13577174745207 * S_Age 
+ -0.1133596721701 * S_Frq + -0.03250630326063 * S_Income + 0.31208673256073 * S_Kidhome + 
-0.04911763008195 * S_MntFishProducts + 0.04440357574827 * S_MntFruits + 0.18064625439163 * 
S_MntGoldProds + 0.34124097901137 * S_MntSweetProducts + -0.48577934340503 * 
S_MonthsAsCustomer + 0.31218334237091 * S_NumDealsPurchases + 0.24212805498377 * 
S_NumWebVisitsMonth + 0.30439494800184 * S_RFMstat + -0.01845944589462 * S_RMntFrq + 
-0.48513476805321 * S_Recency + -0.32721006241811 * S_Teenhome ;
97154     +   H13  =    -0.68076549765273 * S_AcceptedCmpTotal  +    -0.14510411148941 *
97155     +        S_Age  +     -0.3233004374436 * S_Frq  +    -0.42499945066724 *
97156     +        S_Income  +    -0.48748003518551 * S_Kidhome
97157     +          +     0.15434683428908 * S_MntFishProducts
97158     +          +     0.06482294164983 * S_MntFruits  +    -0.54308686262134 *
97159     +        S_MntGoldProds  +    -0.03954494482452 * S_MntSweetProducts
97160     +          +    -0.07405705160744 * S_MonthsAsCustomer
97161     +          +    -0.44979778263337 * S_NumDealsPurchases
97162     +          +    -0.51422673599958 * S_NumWebVisitsMonth
97163     +          +    -0.31727878849334 * S_RFMstat  +    -0.49659927360573 *
97164     +        S_RMntFrq  +     0.79850779605341 * S_Recency
97165     +          +    -0.01021777395977 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.68076549765273 * S_AcceptedCmpTotal + -0.14510411148941 * S_Age 
+ -0.3233004374436 * S_Frq + -0.42499945066724 * S_Income + -0.48748003518551 * S_Kidhome + 
0.15434683428908 * S_MntFishProducts + 0.06482294164983 * S_MntFruits + -0.54308686262134 * 
S_MntGoldProds + -0.03954494482452 * S_MntSweetProducts + -0.07405705160744 * 
S_MonthsAsCustomer + -0.44979778263337 * S_NumDealsPurchases + -0.51422673599958 * 
S_NumWebVisitsMonth + -0.31727878849334 * S_RFMstat + -0.49659927360573 * S_RMntFrq + 
0.79850779605341 * S_Recency + -0.01021777395977 * S_Teenhome ;
97166     +   H14  =     0.38365136681667 * S_AcceptedCmpTotal  +     0.07084748712672 *
97167     +        S_Age  +     0.07185932608666 * S_Frq  +     0.14505870102604 *
97168     +        S_Income  +    -0.62401744170985 * S_Kidhome
97169     +          +    -0.08499883212951 * S_MntFishProducts
97170     +          +     -0.1648853454448 * S_MntFruits  +    -0.00355780886042 *
97171     +        S_MntGoldProds  +    -0.29925551636086 * S_MntSweetProducts
97172     +          +    -0.04051431518694 * S_MonthsAsCustomer
97173     +          +     0.00788125797776 * S_NumDealsPurchases
97174     +          +     0.59495434076477 * S_NumWebVisitsMonth
97175     +          +     0.24302483463729 * S_RFMstat  +    -0.16358266655642 *
97176     +        S_RMntFrq  +    -0.73053231334164 * S_Recency
97177     +          +    -0.33321827557738 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 0.38365136681667 * S_AcceptedCmpTotal + 0.07084748712672 * S_Age + 
0.07185932608666 * S_Frq + 0.14505870102604 * S_Income + -0.62401744170985 * S_Kidhome + 
-0.08499883212951 * S_MntFishProducts + -0.1648853454448 * S_MntFruits + -0.00355780886042 * 
S_MntGoldProds + -0.29925551636086 * S_MntSweetProducts + -0.04051431518694 * 
S_MonthsAsCustomer + 0.00788125797776 * S_NumDealsPurchases + 0.59495434076477 * 
S_NumWebVisitsMonth + 0.24302483463729 * S_RFMstat + -0.16358266655642 * S_RMntFrq + 
-0.73053231334164 * S_Recency + -0.33321827557738 * S_Teenhome ;
97178     +   H15  =    -0.33763603932626 * S_AcceptedCmpTotal  +     0.16015390350682 *
97179     +        S_Age  +     0.93534536415494 * S_Frq  +     0.26932392970726 *
97180     +        S_Income  +     -0.0256051183156 * S_Kidhome
97181     +          +    -0.15661247042419 * S_MntFishProducts
97182     +          +     0.05583315238736 * S_MntFruits  +     0.02103897411055 *
97183     +        S_MntGoldProds  +     -0.1231125389085 * S_MntSweetProducts
97184     +          +     0.03994503424293 * S_MonthsAsCustomer
97185     +          +    -0.53734193208154 * S_NumDealsPurchases
97186     +          +    -0.58547802324835 * S_NumWebVisitsMonth
97187     +          +    -0.06088682875304 * S_RFMstat  +    -0.16953747051887 *
97188     +        S_RMntFrq  +     0.66048924026365 * S_Recency
97189     +          +    -0.18125808371879 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = -0.33763603932626 * S_AcceptedCmpTotal + 0.16015390350682 * S_Age 
+ 0.93534536415494 * S_Frq + 0.26932392970726 * S_Income + -0.0256051183156 * S_Kidhome + 
-0.15661247042419 * S_MntFishProducts + 0.05583315238736 * S_MntFruits + 0.02103897411055 * 
S_MntGoldProds + -0.1231125389085 * S_MntSweetProducts + 0.03994503424293 * S_MonthsAsCustomer 
+ -0.53734193208154 * S_NumDealsPurchases + -0.58547802324835 * S_NumWebVisitsMonth + 
-0.06088682875304 * S_RFMstat + -0.16953747051887 * S_RMntFrq + 0.66048924026365 * S_Recency + 
-0.18125808371879 * S_Teenhome ;
97190     +   H11  = H11  +     0.32214548124302 * AcceptedCmp10
97191     +          +     0.39647739988372 * AcceptedCmp20  +     0.31108042021128 *
97192     +        AcceptedCmp30  +     0.29806974935147 * AcceptedCmp40
97193     +          +     0.22776887209675 * AcceptedCmp50  +     0.15240663199135 *
97194     +        Complain0  +    -0.29371842867452 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.32214548124302 * AcceptedCmp10 + 0.39647739988372 * 
AcceptedCmp20 + 0.31108042021128 * AcceptedCmp30 + 0.29806974935147 * AcceptedCmp40 + 
0.22776887209675 * AcceptedCmp50 + 0.15240663199135 * Complain0 + -0.29371842867452 * 
HigherEducationBinary0 ;
97195     +   H12  = H12  +     0.16508910764131 * AcceptedCmp10
97196     +          +    -0.01591698903562 * AcceptedCmp20  +    -0.18749319390831 *
97197     +        AcceptedCmp30  +     0.10267845517937 * AcceptedCmp40
97198     +          +     0.26889478167941 * AcceptedCmp50  +     0.21127321497252 *
97199     +        Complain0  +     0.26244151632714 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.16508910764131 * AcceptedCmp10 + -0.01591698903562 * 
AcceptedCmp20 + -0.18749319390831 * AcceptedCmp30 + 0.10267845517937 * AcceptedCmp40 + 
0.26889478167941 * AcceptedCmp50 + 0.21127321497252 * Complain0 + 0.26244151632714 * 
HigherEducationBinary0 ;
97200     +   H13  = H13  +     -0.1188260559539 * AcceptedCmp10
97201     +          +    -0.14527518577208 * AcceptedCmp20  +     0.15234135364477 *
97202     +        AcceptedCmp30  +    -0.09444923232962 * AcceptedCmp40
97203     +          +     0.19708535923248 * AcceptedCmp50  +    -0.29618019247654 *
97204     +        Complain0  +     0.12575052691333 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.1188260559539 * AcceptedCmp10 + -0.14527518577208 * 
AcceptedCmp20 + 0.15234135364477 * AcceptedCmp30 + -0.09444923232962 * AcceptedCmp40 + 
0.19708535923248 * AcceptedCmp50 + -0.29618019247654 * Complain0 + 0.12575052691333 * 
HigherEducationBinary0 ;
97205     +   H14  = H14  +     0.22744978434743 * AcceptedCmp10
97206     +          +    -0.01189686575388 * AcceptedCmp20  +    -0.32196819611195 *
97207     +        AcceptedCmp30  +     0.01600068421368 * AcceptedCmp40
97208     +          +     0.00556822856215 * AcceptedCmp50  +     0.18009079154413 *
97209     +        Complain0  +     0.03016266549641 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.22744978434743 * AcceptedCmp10 + -0.01189686575388 * 
AcceptedCmp20 + -0.32196819611195 * AcceptedCmp30 + 0.01600068421368 * AcceptedCmp40 + 
0.00556822856215 * AcceptedCmp50 + 0.18009079154413 * Complain0 + 0.03016266549641 * 
HigherEducationBinary0 ;
97210     +   H15  = H15  +     0.52725777941338 * AcceptedCmp10
97211     +          +     0.01843467049946 * AcceptedCmp20  +     0.47168025621809 *
97212     +        AcceptedCmp30  +    -0.05224480469429 * AcceptedCmp40
97213     +          +     0.29146234318613 * AcceptedCmp50  +     0.05946217105031 *
97214     +        Complain0  +     0.16683238673979 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.52725777941338 * AcceptedCmp10 + 0.01843467049946 * 
AcceptedCmp20 + 0.47168025621809 * AcceptedCmp30 + -0.05224480469429 * AcceptedCmp40 + 
0.29146234318613 * AcceptedCmp50 + 0.05946217105031 * Complain0 + 0.16683238673979 * 
HigherEducationBinary0 ;
97215     +   H11  = H11  +     0.02840049264257 * Education2n_Cycle
97216     +          +    -0.12984345243569 * EducationBasic  +    -0.10299098163695 *
97217     +        EducationGraduation  +     0.23295390047952 * EducationMaster
97218     +          +    -0.41529808115031 * Marital_StatusDivorced
97219     +          +     0.65264978817749 * Marital_StatusMarried
97220     +          +    -0.52150453945732 * Marital_StatusSingle
97221     +          +     0.69963607397544 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.02840049264257 * Education2n_Cycle + -0.12984345243569 * 
EducationBasic + -0.10299098163695 * EducationGraduation + 0.23295390047952 * EducationMaster 
+ -0.41529808115031 * Marital_StatusDivorced + 0.65264978817749 * Marital_StatusMarried + 
-0.52150453945732 * Marital_StatusSingle + 0.69963607397544 * Marital_StatusTogether ;
97222     +   H12  = H12  +    -0.18683184010407 * Education2n_Cycle
97223     +          +    -0.04325754530797 * EducationBasic  +     0.25926294135162 *
97224     +        EducationGraduation  +     0.04425534246646 * EducationMaster
97225     +          +    -0.32207382402099 * Marital_StatusDivorced
97226     +          +     0.16112567537413 * Marital_StatusMarried
97227     +          +     0.28859198712458 * Marital_StatusSingle
97228     +          +    -0.31707896724726 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.18683184010407 * Education2n_Cycle + -0.04325754530797 * 
EducationBasic + 0.25926294135162 * EducationGraduation + 0.04425534246646 * EducationMaster + 
-0.32207382402099 * Marital_StatusDivorced + 0.16112567537413 * Marital_StatusMarried + 
0.28859198712458 * Marital_StatusSingle + -0.31707896724726 * Marital_StatusTogether ;
97229     +   H13  = H13  +     0.03402340531236 * Education2n_Cycle
97230     +          +     0.17313991053917 * EducationBasic  +    -0.24806694961277 *
97231     +        EducationGraduation  +    -0.16283334360744 * EducationMaster
97232     +          +    -0.06823118087629 * Marital_StatusDivorced
97233     +          +    -0.01696675344176 * Marital_StatusMarried
97234     +          +    -0.04922830766868 * Marital_StatusSingle
97235     +          +    -0.15449558545998 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.03402340531236 * Education2n_Cycle + 0.17313991053917 * 
EducationBasic + -0.24806694961277 * EducationGraduation + -0.16283334360744 * EducationMaster 
+ -0.06823118087629 * Marital_StatusDivorced + -0.01696675344176 * Marital_StatusMarried + 
-0.04922830766868 * Marital_StatusSingle + -0.15449558545998 * Marital_StatusTogether ;
97236     +   H14  = H14  +     0.04419529419265 * Education2n_Cycle
97237     +          +     0.10023190362026 * EducationBasic  +     0.23777777952905 *
97238     +        EducationGraduation  +     -0.1779877655909 * EducationMaster
97239     +          +     0.20346888384065 * Marital_StatusDivorced
97240     +          +     -0.5246097720646 * Marital_StatusMarried
97241     +          +     0.50991923175058 * Marital_StatusSingle
97242     +          +    -0.15346924309445 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.04419529419265 * Education2n_Cycle + 0.10023190362026 * 
EducationBasic + 0.23777777952905 * EducationGraduation + -0.1779877655909 * EducationMaster + 
0.20346888384065 * Marital_StatusDivorced + -0.5246097720646 * Marital_StatusMarried + 
0.50991923175058 * Marital_StatusSingle + -0.15346924309445 * Marital_StatusTogether ;
97243     +   H15  = H15  +     -0.0859109352002 * Education2n_Cycle
97244     +          +     0.23688872874499 * EducationBasic  +      0.0044459307881 *
97245     +        EducationGraduation  +     0.03117170136897 * EducationMaster
97246     +          +    -0.14128509643843 * Marital_StatusDivorced
97247     +          +    -0.17344467864829 * Marital_StatusMarried
97248     +          +     0.09201105049634 * Marital_StatusSingle
97249     +          +     0.03562553790735 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.0859109352002 * Education2n_Cycle + 0.23688872874499 * 
EducationBasic + 0.0044459307881 * EducationGraduation + 0.03117170136897 * EducationMaster + 
-0.14128509643843 * Marital_StatusDivorced + -0.17344467864829 * Marital_StatusMarried + 
0.09201105049634 * Marital_StatusSingle + 0.03562553790735 * Marital_StatusTogether ;
97250     +   H11  =     0.44460027749342 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.44460027749342 + H11 ;
97251     +   H12  =    -0.95819350927335 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.95819350927335 + H12 ;
97252     +   H13  =    -0.44968673753742 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.44968673753742 + H13 ;
97253     +   H14  =     0.53878131931255 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.53878131931255 + H14 ;
97254     +   H15  =     0.82891048270823 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 0.82891048270823 + H15 ;
97255     +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
97256     +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
97257     +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
97258     +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
97259     +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
97260     +END;
MPRINT(EM_DIAGRAM):   END;
97261     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
97262     +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
97263     +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
97264     +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
97265     +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
97266     +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
97267     +END;
MPRINT(EM_DIAGRAM):   END;
97268     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
97269     +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
97270     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
97271     +
97272     +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
97273     +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
97274     +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
97275     +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
97276     +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
97277     +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
97278     +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
97279     +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
97280     +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
97281     +end;
MPRINT(EM_DIAGRAM):   end;
97282     +else do;
MPRINT(EM_DIAGRAM):   else do;
97283     +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
97284     +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
97285     +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
97286     +   end;
MPRINT(EM_DIAGRAM):   end;
97287     +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
97288     +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
97289     +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
97290     +   end;
MPRINT(EM_DIAGRAM):   end;
97291     +   else do;
MPRINT(EM_DIAGRAM):   else do;
97292     +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
97293     +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
97294     +   end;
MPRINT(EM_DIAGRAM):   end;
97295     +end;
MPRINT(EM_DIAGRAM):   end;
97296     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
97297     +   P_DepVar1  =    -3.09211467027119 * H11  +      0.8780551921753 * H12
97298     +          +    -2.64280779387115 * H13  +     1.47258844960489 * H14
97299     +          +     -1.9161512747512 * H15 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.09211467027119 * H11 + 0.8780551921753 * H12 + 
-2.64280779387115 * H13 + 1.47258844960489 * H14 + -1.9161512747512 * H15 ;
97300     +   P_DepVar1  =    -1.84694532241195 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.84694532241195 + P_DepVar1 ;
97301     +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
97302     +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
97303     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
97304     +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
97305     +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
97306     +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
97307     +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
97308     +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
97309     +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
97310     +END;
MPRINT(EM_DIAGRAM):   END;
97311     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
97312     +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
97313     +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
97314     +END;
MPRINT(EM_DIAGRAM):   END;
97315     +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
97316     +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
97317     +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
97318     +END;
MPRINT(EM_DIAGRAM):   END;
97319     +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
97320     +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
97321     +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
97322     +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
97323     +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
97324     +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
97325     +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
97326     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
97327     +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
97328     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
97329     +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
97330     +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
97331     +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
97332     +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
97333     +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
97334     +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
97335     +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
97336     +END;
MPRINT(EM_DIAGRAM):   END;
97337     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
97338     +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
97339     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
97340     +drop
97341     +H11
97342     +H12
97343     +H13
97344     +H14
97345     +H15
97346     +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 ;
97347     +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
97348     +* Renaming variables for Neural40;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural40;
97349     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
97350     +* Renaming Posterior variables for Neural40;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural40;
97351     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
97352     +drop Neural40_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural40_P_DepVar1;
97353     +Neural40_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural40_P_DepVar1 = P_DepVar1;
97354     +drop Neural40_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural40_P_DepVar0;
97355     +Neural40_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural40_P_DepVar0 = P_DepVar0;
97356     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
97357     +* Renaming _WARN_ variable for Neural40;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural40;
97358     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
97359     +length Neural40_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural40_WARN_ $4;
97360     +drop Neural40_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural40_WARN_;
97361     +Neural40_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural40_WARN_ = _WARN_;
97362     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
97363     +* Ensmbl23: Scoring Code of model 2 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl23: Scoring Code of model 2 of 5;
97364     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
97365     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
97366     +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
97367     +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
97368     +* NODE: AutoNeural39;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural39;
97369     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
97370     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
97371     +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
97372     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
97373     +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
97374     + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
97375     + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
97376     + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
97377     + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
97378     + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
97379     + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
97380     + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
97381     +LENGTH _WARN_ $4
97382     +      F_DepVar  $ 12
97383     +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
97384     +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
97385     +
97386     +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
97387     +
97388     +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
97389     +
97390     +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
97391     +
97392     +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
97393     +
97394     +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
97395     +
97396     +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
97397     +
97398     +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
97399     +
97400     +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
97401     +
97402     +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
97403     +
97404     +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
97405     +
97406     +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
97407     +
97408     +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
97409     +
97410     +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
97411     +
97412     +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
97413     +
97414     +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
97415     +
97416     +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
97417     +
97418     +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
97419     +
97420     +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
97421     +
97422     +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
97423     +
97424     +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
97425     +
97426     +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
97427     +
97428     +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
97429     +
97430     +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
97431     +
97432     +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
97433     +
97434     +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
97435     +
97436     +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
97437     +
97438     +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
97439     +
97440     +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
97441     +
97442     +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
97443     +
97444     +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
97445     +
97446     +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
97447     +
97448     +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
97449     +
97450     +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
97451     +
97452     +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
97453     +
97454     +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
97455     +
97456     +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
97457     +
97458     +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
97459     +
97460     +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
97461     +
97462     +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
97463     +
97464     +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
97465     +
97466     +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
97467     +
97468     +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
97469     +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
97470     +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
97471     +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
97472     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
97473     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
97474     +end;
MPRINT(EM_DIAGRAM):   end;
97475     +else do;
MPRINT(EM_DIAGRAM):   else do;
97476     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
97477     +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
97478     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
97479     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
97480     +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
97481     +   end;
MPRINT(EM_DIAGRAM):   end;
97482     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
97483     +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
97484     +   end;
MPRINT(EM_DIAGRAM):   end;
97485     +   else do;
MPRINT(EM_DIAGRAM):   else do;
97486     +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
97487     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
97488     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
97489     +   end;
MPRINT(EM_DIAGRAM):   end;
97490     +end;
MPRINT(EM_DIAGRAM):   end;
97491     +
97492     +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
97493     +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
97494     +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
97495     +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
97496     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
97497     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
97498     +end;
MPRINT(EM_DIAGRAM):   end;
97499     +else do;
MPRINT(EM_DIAGRAM):   else do;
97500     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
97501     +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
97502     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
97503     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
97504     +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
97505     +   end;
MPRINT(EM_DIAGRAM):   end;
97506     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
97507     +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
97508     +   end;
MPRINT(EM_DIAGRAM):   end;
97509     +   else do;
MPRINT(EM_DIAGRAM):   else do;
97510     +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
97511     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
97512     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
97513     +   end;
MPRINT(EM_DIAGRAM):   end;
97514     +end;
MPRINT(EM_DIAGRAM):   end;
97515     +
97516     +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
97517     +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
97518     +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
97519     +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
97520     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
97521     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
97522     +end;
MPRINT(EM_DIAGRAM):   end;
97523     +else do;
MPRINT(EM_DIAGRAM):   else do;
97524     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
97525     +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
97526     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
97527     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
97528     +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
97529     +   end;
MPRINT(EM_DIAGRAM):   end;
97530     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
97531     +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
97532     +   end;
MPRINT(EM_DIAGRAM):   end;
97533     +   else do;
MPRINT(EM_DIAGRAM):   else do;
97534     +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
97535     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
97536     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
97537     +   end;
MPRINT(EM_DIAGRAM):   end;
97538     +end;
MPRINT(EM_DIAGRAM):   end;
97539     +
97540     +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
97541     +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
97542     +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
97543     +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
97544     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
97545     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
97546     +end;
MPRINT(EM_DIAGRAM):   end;
97547     +else do;
MPRINT(EM_DIAGRAM):   else do;
97548     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
97549     +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
97550     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
97551     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
97552     +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
97553     +   end;
MPRINT(EM_DIAGRAM):   end;
97554     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
97555     +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
97556     +   end;
MPRINT(EM_DIAGRAM):   end;
97557     +   else do;
MPRINT(EM_DIAGRAM):   else do;
97558     +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
97559     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
97560     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
97561     +   end;
MPRINT(EM_DIAGRAM):   end;
97562     +end;
MPRINT(EM_DIAGRAM):   end;
97563     +
97564     +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
97565     +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
97566     +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
97567     +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
97568     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
97569     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
97570     +end;
MPRINT(EM_DIAGRAM):   end;
97571     +else do;
MPRINT(EM_DIAGRAM):   else do;
97572     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
97573     +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
97574     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
97575     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
97576     +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
97577     +   end;
MPRINT(EM_DIAGRAM):   end;
97578     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
97579     +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
97580     +   end;
MPRINT(EM_DIAGRAM):   end;
97581     +   else do;
MPRINT(EM_DIAGRAM):   else do;
97582     +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
97583     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
97584     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
97585     +   end;
MPRINT(EM_DIAGRAM):   end;
97586     +end;
MPRINT(EM_DIAGRAM):   end;
97587     +
97588     +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
97589     +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
97590     +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
97591     +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
97592     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
97593     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
97594     +end;
MPRINT(EM_DIAGRAM):   end;
97595     +else do;
MPRINT(EM_DIAGRAM):   else do;
97596     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
97597     +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
97598     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
97599     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
97600     +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
97601     +   end;
MPRINT(EM_DIAGRAM):   end;
97602     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
97603     +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
97604     +   end;
MPRINT(EM_DIAGRAM):   end;
97605     +   else do;
MPRINT(EM_DIAGRAM):   else do;
97606     +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
97607     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
97608     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
97609     +   end;
MPRINT(EM_DIAGRAM):   end;
97610     +end;
MPRINT(EM_DIAGRAM):   end;
97611     +
97612     +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
97613     +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
97614     +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
97615     +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
97616     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
97617     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
97618     +end;
MPRINT(EM_DIAGRAM):   end;
97619     +else do;
MPRINT(EM_DIAGRAM):   else do;
97620     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
97621     +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
97622     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
97623     +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
97624     +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
97625     +   end;
MPRINT(EM_DIAGRAM):   end;
97626     +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
97627     +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
97628     +   end;
MPRINT(EM_DIAGRAM):   end;
97629     +   else do;
MPRINT(EM_DIAGRAM):   else do;
97630     +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
97631     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
97632     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
97633     +   end;
MPRINT(EM_DIAGRAM):   end;
97634     +end;
MPRINT(EM_DIAGRAM):   end;
97635     +
97636     +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
97637     +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
97638     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
97639     +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
97640     +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
97641     +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
97642     +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
97643     +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
97644     +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
97645     +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
97646     +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
97647     +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
97648     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
97649     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
97650     +end;
MPRINT(EM_DIAGRAM):   end;
97651     +else do;
MPRINT(EM_DIAGRAM):   else do;
97652     +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
97653     +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
97654     +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
97655     +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
97656     +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
97657     +   end;
MPRINT(EM_DIAGRAM):   end;
97658     +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
97659     +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
97660     +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
97661     +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
97662     +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
97663     +   end;
MPRINT(EM_DIAGRAM):   end;
97664     +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
97665     +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
97666     +   end;
MPRINT(EM_DIAGRAM):   end;
97667     +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
97668     +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
97669     +   end;
MPRINT(EM_DIAGRAM):   end;
97670     +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
97671     +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
97672     +   end;
MPRINT(EM_DIAGRAM):   end;
97673     +   else do;
MPRINT(EM_DIAGRAM):   else do;
97674     +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
97675     +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
97676     +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
97677     +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
97678     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
97679     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
97680     +   end;
MPRINT(EM_DIAGRAM):   end;
97681     +end;
MPRINT(EM_DIAGRAM):   end;
97682     +
97683     +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
97684     +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
97685     +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
97686     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
97687     +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
97688     +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
97689     +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
97690     +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
97691     +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
97692     +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
97693     +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
97694     +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
97695     +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
97696     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
97697     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
97698     +end;
MPRINT(EM_DIAGRAM):   end;
97699     +else do;
MPRINT(EM_DIAGRAM):   else do;
97700     +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
97701     +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
97702     +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
97703     +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
97704     +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
97705     +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
97706     +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
97707     +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
97708     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
97709     +         end;
MPRINT(EM_DIAGRAM):   end;
97710     +         else do;
MPRINT(EM_DIAGRAM):   else do;
97711     +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
97712     +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
97713     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
97714     +            end;
MPRINT(EM_DIAGRAM):   end;
97715     +         end;
MPRINT(EM_DIAGRAM):   end;
97716     +      end;
MPRINT(EM_DIAGRAM):   end;
97717     +      else do;
MPRINT(EM_DIAGRAM):   else do;
97718     +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
97719     +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
97720     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
97721     +         end;
MPRINT(EM_DIAGRAM):   end;
97722     +      end;
MPRINT(EM_DIAGRAM):   end;
97723     +   end;
MPRINT(EM_DIAGRAM):   end;
97724     +   else do;
MPRINT(EM_DIAGRAM):   else do;
97725     +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
97726     +         Marital_StatusTogether = 1;
The SAS System

MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
97727     +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
97728     +      end;
MPRINT(EM_DIAGRAM):   end;
97729     +      else do;
MPRINT(EM_DIAGRAM):   else do;
97730     +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
97731     +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
97732     +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
97733     +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
97734     +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
97735     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
97736     +         end;
MPRINT(EM_DIAGRAM):   end;
97737     +      end;
MPRINT(EM_DIAGRAM):   end;
97738     +   end;
MPRINT(EM_DIAGRAM):   end;
97739     +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
97740     +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
97741     +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
97742     +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
97743     +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
97744     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
97745     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
97746     +   end;
MPRINT(EM_DIAGRAM):   end;
97747     +end;
MPRINT(EM_DIAGRAM):   end;
97748     +
97749     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
97750     +*** Checking missing input Interval
97751     +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
97752     +
97753     +IF NMISS(
97754     +   AcceptedCmpTotal ,
97755     +   Age ,
97756     +   Frq ,
97757     +   Income ,
97758     +   Kidhome ,
97759     +   MntFishProducts ,
97760     +   MntFruits ,
97761     +   MntGoldProds ,
97762     +   MntSweetProducts ,
97763     +   MonthsAsCustomer ,
97764     +   NumDealsPurchases ,
97765     +   NumWebVisitsMonth ,
97766     +   RFMstat ,
97767     +   RMntFrq ,
97768     +   Recency ,
97769     +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
97770     +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
97771     +
97772     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
97773     +END;
MPRINT(EM_DIAGRAM):   END;
97774     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
97775     +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
97776     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
97777     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
97778     +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
97779     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
97780     +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
97781     +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
97782     +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
97783     +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
97784     +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
97785     +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
97786     +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
97787     +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
97788     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
97789     +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
97790     +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
97791     +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
97792     +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
97793     +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
97794     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
97795     +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
97796     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
97797     +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
97798     +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
97799     +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
97800     +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
97801     +END;
MPRINT(EM_DIAGRAM):   END;
97802     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
97803     +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
97804     +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
97805     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
97806     +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
97807     +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
97808     +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
97809     +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
97810     +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
97811     +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
97812     +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
97813     +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
97814     +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
97815     +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
97816     +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
97817     +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
97818     +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
97819     +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
97820     +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
97821     +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
97822     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
97823     +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
97824     +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
97825     +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
97826     +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
97827     +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
97828     +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
97829     +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
97830     +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
97831     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
97832     +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
97833     +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
97834     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
97835     +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
97836     +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
97837     +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
97838     +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
97839     +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
97840     +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
97841     +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
97842     +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
97843     +END;
MPRINT(EM_DIAGRAM):   END;
97844     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
97845     +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
97846     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
97847     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
97848     +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
97849     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
97850     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
97851     +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
97852     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
97853     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
97854     +   H1x1_1  =    -0.59619526510279 * S_AcceptedCmpTotal
97855     +          +    -0.19567367757209 * S_Age  +    -1.87154193856682 * S_Frq
97856     +          +    -0.61220463973763 * S_Income  +     0.39435632091859 *
97857     +        S_Kidhome  +     0.27115687172661 * S_MntFishProducts
97858     +          +    -0.11978715045932 * S_MntFruits  +     0.29519469099756 *
97859     +        S_MntGoldProds  +     0.10278416295834 * S_MntSweetProducts
97860     +          +     -0.1740957673716 * S_MonthsAsCustomer
97861     +          +     0.66565026405117 * S_NumDealsPurchases
97862     +          +     0.43247206282836 * S_NumWebVisitsMonth
97863     +          +     0.36972451068821 * S_RFMstat  +     0.26260869862277 *
97864     +        S_RMntFrq  +    -0.28002323732518 * S_Recency
97865     +          +     0.44490818869588 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.59619526510279 * S_AcceptedCmpTotal + -0.19567367757209 * 
S_Age + -1.87154193856682 * S_Frq + -0.61220463973763 * S_Income + 0.39435632091859 * 
S_Kidhome + 0.27115687172661 * S_MntFishProducts + -0.11978715045932 * S_MntFruits + 
0.29519469099756 * S_MntGoldProds + 0.10278416295834 * S_MntSweetProducts + -0.1740957673716 * 
S_MonthsAsCustomer + 0.66565026405117 * S_NumDealsPurchases + 0.43247206282836 * 
S_NumWebVisitsMonth + 0.36972451068821 * S_RFMstat + 0.26260869862277 * S_RMntFrq + 
-0.28002323732518 * S_Recency + 0.44490818869588 * S_Teenhome ;
97866     +   H1x1_2  =    -0.18817303555602 * S_AcceptedCmpTotal
97867     +          +     0.02563068671435 * S_Age  +    -0.19671119906022 * S_Frq
97868     +          +    -0.57601068946749 * S_Income  +     0.32494160304894 *
97869     +        S_Kidhome  +     0.01652017751959 * S_MntFishProducts
97870     +          +     0.05773921061355 * S_MntFruits  +     0.02592530362424 *
97871     +        S_MntGoldProds  +     0.08946665597916 * S_MntSweetProducts
97872     +          +    -0.06176784990963 * S_MonthsAsCustomer
97873     +          +    -0.11740415005833 * S_NumDealsPurchases
97874     +          +    -0.17084845478672 * S_NumWebVisitsMonth
97875     +          +     0.00178400194387 * S_RFMstat  +    -0.13250191926905 *
97876     +        S_RMntFrq  +     0.54983271222574 * S_Recency
97877     +          +     0.42609230297633 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.18817303555602 * S_AcceptedCmpTotal + 0.02563068671435 * 
S_Age + -0.19671119906022 * S_Frq + -0.57601068946749 * S_Income + 0.32494160304894 * 
S_Kidhome + 0.01652017751959 * S_MntFishProducts + 0.05773921061355 * S_MntFruits + 
0.02592530362424 * S_MntGoldProds + 0.08946665597916 * S_MntSweetProducts + -0.06176784990963 
* S_MonthsAsCustomer + -0.11740415005833 * S_NumDealsPurchases + -0.17084845478672 * 
S_NumWebVisitsMonth + 0.00178400194387 * S_RFMstat + -0.13250191926905 * S_RMntFrq + 
0.54983271222574 * S_Recency + 0.42609230297633 * S_Teenhome ;
97878     +   H1x1_1  = H1x1_1  +    -0.73533354476059 * AcceptedCmp10
97879     +          +    -0.96410698969351 * AcceptedCmp20  +    -0.68713486641274 *
97880     +        AcceptedCmp30  +    -0.36566057748639 * AcceptedCmp40
97881     +          +     0.30630246801131 * AcceptedCmp50  +     0.35120823961025 *
97882     +        Complain0  +     -0.4767771812126 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.73533354476059 * AcceptedCmp10 + -0.96410698969351 
* AcceptedCmp20 + -0.68713486641274 * AcceptedCmp30 + -0.36566057748639 * AcceptedCmp40 + 
0.30630246801131 * AcceptedCmp50 + 0.35120823961025 * Complain0 + -0.4767771812126 * 
HigherEducationBinary0 ;
97883     +   H1x1_2  = H1x1_2  +     0.09341963945817 * AcceptedCmp10
97884     +          +     0.08648218396156 * AcceptedCmp20  +     0.20807620140826 *
97885     +        AcceptedCmp30  +     0.07826062169244 * AcceptedCmp40
97886     +          +     0.02564266279554 * AcceptedCmp50  +     0.04261102080378 *
97887     +        Complain0  +    -0.27229992860702 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.09341963945817 * AcceptedCmp10 + 0.08648218396156 * 
AcceptedCmp20 + 0.20807620140826 * AcceptedCmp30 + 0.07826062169244 * AcceptedCmp40 + 
0.02564266279554 * AcceptedCmp50 + 0.04261102080378 * Complain0 + -0.27229992860702 * 
HigherEducationBinary0 ;
97888     +   H1x1_1  = H1x1_1  +     0.21712849768666 * Education2n_Cycle
97889     +          +    -0.14027907370038 * EducationBasic  +    -0.11959455460972 *
97890     +        EducationGraduation  +     0.22632282500966 * EducationMaster
97891     +          +     -0.0800438380883 * Marital_StatusDivorced
97892     +          +     0.44505766937623 * Marital_StatusMarried
97893     +          +    -0.57546515626468 * Marital_StatusSingle
97894     +          +     0.38638180853046 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.21712849768666 * Education2n_Cycle + 
-0.14027907370038 * EducationBasic + -0.11959455460972 * EducationGraduation + 
0.22632282500966 * EducationMaster + -0.0800438380883 * Marital_StatusDivorced + 
0.44505766937623 * Marital_StatusMarried + -0.57546515626468 * Marital_StatusSingle + 
0.38638180853046 * Marital_StatusTogether ;
97895     +   H1x1_2  = H1x1_2  +     0.20241854612702 * Education2n_Cycle
97896     +          +    -0.02204834045555 * EducationBasic  +    -0.17229363591628 *
97897     +        EducationGraduation  +      0.0794165981215 * EducationMaster
97898     +          +    -0.20291653465543 * Marital_StatusDivorced
97899     +          +     0.39547414450617 * Marital_StatusMarried
97900     +          +    -0.37001331184001 * Marital_StatusSingle
97901     +          +     0.37889668606101 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.20241854612702 * Education2n_Cycle + 
-0.02204834045555 * EducationBasic + -0.17229363591628 * EducationGraduation + 0.0794165981215 
* EducationMaster + -0.20291653465543 * Marital_StatusDivorced + 0.39547414450617 * 
Marital_StatusMarried + -0.37001331184001 * Marital_StatusSingle + 0.37889668606101 * 
Marital_StatusTogether ;
97902     +   H1x1_1  =     0.85218451823494 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.85218451823494 + H1x1_1 ;
97903     +   H1x1_2  =     1.25904481865206 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.25904481865206 + H1x1_2 ;
97904     +   H1x1_3  = 0;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0;
97905     +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 );
97906     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
97907     +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
97908     +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
97909     +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
97910     +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
97911     +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
97912     +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
97913     +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
97914     +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
97915     +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
97916     +END;
MPRINT(EM_DIAGRAM):   END;
97917     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
97918     +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
97919     +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
97920     +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
97921     +END;
MPRINT(EM_DIAGRAM):   END;
97922     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
97923     +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
97924     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
97925     +
97926     +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
97927     +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
97928     +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
97929     +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
97930     +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
97931     +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
97932     +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
97933     +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
97934     +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
97935     +end;
MPRINT(EM_DIAGRAM):   end;
97936     +else do;
MPRINT(EM_DIAGRAM):   else do;
97937     +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
97938     +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
97939     +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
97940     +   end;
MPRINT(EM_DIAGRAM):   end;
97941     +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
97942     +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
97943     +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
97944     +   end;
MPRINT(EM_DIAGRAM):   end;
97945     +   else do;
MPRINT(EM_DIAGRAM):   else do;
97946     +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
97947     +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
97948     +   end;
MPRINT(EM_DIAGRAM):   end;
97949     +end;
MPRINT(EM_DIAGRAM):   end;
97950     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
97951     +   P_DepVar1  =     4.98178607983008 * H1x1_1  +    -8.34979505969025 * H1x1_2
97952     +          +     10.3301873876241 * H1x1_3 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 4.98178607983008 * H1x1_1 + -8.34979505969025 * H1x1_2 + 
10.3301873876241 * H1x1_3 ;
97953     +   P_DepVar1  =    -0.46201067268314 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.46201067268314 + P_DepVar1 ;
97954     +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
97955     +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
97956     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
97957     +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
97958     +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
97959     +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
97960     +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
97961     +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
97962     +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
97963     +END;
MPRINT(EM_DIAGRAM):   END;
97964     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
97965     +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
97966     +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
97967     +END;
MPRINT(EM_DIAGRAM):   END;
97968     +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
97969     +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
97970     +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
97971     +END;
MPRINT(EM_DIAGRAM):   END;
97972     +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
97973     +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
97974     +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
97975     +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
97976     +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
97977     +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
97978     +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
97979     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
97980     +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
97981     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
97982     +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
97983     +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
97984     +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
97985     +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
97986     +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
97987     +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
97988     +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
97989     +END;
MPRINT(EM_DIAGRAM):   END;
97990     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
97991     +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
97992     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
97993     +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
97994     +* Renaming variables for AutoNeural39;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural39;
97995     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
97996     +* Renaming Posterior variables for AutoNeural39;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural39;
97997     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
97998     +drop AutoNeural39_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural39_P_DepVar1;
97999     +AutoNeural39_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural39_P_DepVar1 = P_DepVar1;
98000     +drop AutoNeural39_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural39_P_DepVar0;
98001     +AutoNeural39_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural39_P_DepVar0 = P_DepVar0;
98002     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
98003     +* Renaming _WARN_ variable for AutoNeural39;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural39;
98004     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
98005     +length AutoNeural39_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural39_WARN_ $4;
98006     +drop AutoNeural39_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural39_WARN_;
98007     +AutoNeural39_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural39_WARN_ = _WARN_;
98008     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
98009     +* Ensmbl23: Scoring Code of model 3 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl23: Scoring Code of model 3 of 5;
98010     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
98011     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
98012     +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
98013     +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
98014     +* NODE: AutoNeural38;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural38;
98015     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
98016     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
98017     +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
98018     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
98019     +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
98020     + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
98021     + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
98022     + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
98023     + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
98024     + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
98025     + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
98026     + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
98027     +LENGTH _WARN_ $4
98028     +      F_DepVar  $ 12
98029     +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
98030     +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
98031     +
98032     +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
98033     +
98034     +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
98035     +
98036     +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
98037     +
98038     +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
98039     +
98040     +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
98041     +
98042     +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
98043     +
98044     +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
98045     +
98046     +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
98047     +
98048     +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
98049     +
98050     +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
98051     +
98052     +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
98053     +
98054     +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
98055     +
98056     +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
98057     +
98058     +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
98059     +
98060     +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
98061     +
98062     +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
98063     +
98064     +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
98065     +
98066     +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
98067     +
98068     +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
98069     +
98070     +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
98071     +
98072     +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
98073     +
98074     +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
98075     +
98076     +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
98077     +
98078     +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
98079     +
98080     +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
98081     +
98082     +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
98083     +
98084     +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
98085     +
98086     +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
98087     +
98088     +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
98089     +
98090     +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
98091     +
98092     +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
98093     +
98094     +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
98095     +
98096     +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
98097     +
98098     +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
98099     +
98100     +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
98101     +
98102     +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
98103     +
98104     +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
98105     +
98106     +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
98107     +
98108     +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
98109     +
98110     +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
98111     +
98112     +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
98113     +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
98114     +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
98115     +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
98116     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
98117     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
98118     +end;
MPRINT(EM_DIAGRAM):   end;
98119     +else do;
MPRINT(EM_DIAGRAM):   else do;
98120     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
98121     +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
98122     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
98123     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
98124     +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
98125     +   end;
MPRINT(EM_DIAGRAM):   end;
98126     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
98127     +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
98128     +   end;
MPRINT(EM_DIAGRAM):   end;
98129     +   else do;
MPRINT(EM_DIAGRAM):   else do;
98130     +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
98131     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
98132     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
98133     +   end;
MPRINT(EM_DIAGRAM):   end;
98134     +end;
MPRINT(EM_DIAGRAM):   end;
98135     +
98136     +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
98137     +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
98138     +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
98139     +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
98140     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
98141     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
98142     +end;
MPRINT(EM_DIAGRAM):   end;
98143     +else do;
MPRINT(EM_DIAGRAM):   else do;
98144     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
98145     +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
98146     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
98147     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
98148     +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
98149     +   end;
MPRINT(EM_DIAGRAM):   end;
98150     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
98151     +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
98152     +   end;
MPRINT(EM_DIAGRAM):   end;
98153     +   else do;
MPRINT(EM_DIAGRAM):   else do;
98154     +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
98155     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
98156     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
98157     +   end;
MPRINT(EM_DIAGRAM):   end;
98158     +end;
MPRINT(EM_DIAGRAM):   end;
98159     +
98160     +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
98161     +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
98162     +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
98163     +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
98164     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
98165     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
98166     +end;
MPRINT(EM_DIAGRAM):   end;
98167     +else do;
MPRINT(EM_DIAGRAM):   else do;
98168     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
98169     +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
98170     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
98171     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
98172     +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
98173     +   end;
MPRINT(EM_DIAGRAM):   end;
98174     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
98175     +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
98176     +   end;
MPRINT(EM_DIAGRAM):   end;
98177     +   else do;
MPRINT(EM_DIAGRAM):   else do;
98178     +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
98179     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
98180     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
98181     +   end;
MPRINT(EM_DIAGRAM):   end;
98182     +end;
MPRINT(EM_DIAGRAM):   end;
98183     +
98184     +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
98185     +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
98186     +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
98187     +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
98188     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
98189     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
98190     +end;
MPRINT(EM_DIAGRAM):   end;
98191     +else do;
MPRINT(EM_DIAGRAM):   else do;
98192     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
98193     +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
98194     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
98195     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
98196     +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
98197     +   end;
MPRINT(EM_DIAGRAM):   end;
98198     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
98199     +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
98200     +   end;
MPRINT(EM_DIAGRAM):   end;
98201     +   else do;
MPRINT(EM_DIAGRAM):   else do;
98202     +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
98203     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
98204     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
98205     +   end;
MPRINT(EM_DIAGRAM):   end;
98206     +end;
MPRINT(EM_DIAGRAM):   end;
98207     +
98208     +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
98209     +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
98210     +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
98211     +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
98212     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
98213     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
98214     +end;
MPRINT(EM_DIAGRAM):   end;
98215     +else do;
MPRINT(EM_DIAGRAM):   else do;
98216     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
98217     +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
98218     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
98219     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
98220     +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
98221     +   end;
MPRINT(EM_DIAGRAM):   end;
98222     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
98223     +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
98224     +   end;
MPRINT(EM_DIAGRAM):   end;
98225     +   else do;
MPRINT(EM_DIAGRAM):   else do;
98226     +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
98227     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
98228     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
98229     +   end;
MPRINT(EM_DIAGRAM):   end;
98230     +end;
MPRINT(EM_DIAGRAM):   end;
98231     +
98232     +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
98233     +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
98234     +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
98235     +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
98236     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
98237     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
98238     +end;
MPRINT(EM_DIAGRAM):   end;
98239     +else do;
MPRINT(EM_DIAGRAM):   else do;
98240     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
98241     +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
98242     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
98243     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
98244     +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
98245     +   end;
MPRINT(EM_DIAGRAM):   end;
98246     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
98247     +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
98248     +   end;
MPRINT(EM_DIAGRAM):   end;
98249     +   else do;
MPRINT(EM_DIAGRAM):   else do;
98250     +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
98251     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
98252     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
98253     +   end;
MPRINT(EM_DIAGRAM):   end;
98254     +end;
MPRINT(EM_DIAGRAM):   end;
98255     +
98256     +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
98257     +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
98258     +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
98259     +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
98260     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
98261     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
98262     +end;
MPRINT(EM_DIAGRAM):   end;
98263     +else do;
MPRINT(EM_DIAGRAM):   else do;
98264     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
98265     +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
98266     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
98267     +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
98268     +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
98269     +   end;
MPRINT(EM_DIAGRAM):   end;
98270     +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
98271     +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
98272     +   end;
MPRINT(EM_DIAGRAM):   end;
98273     +   else do;
MPRINT(EM_DIAGRAM):   else do;
98274     +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
98275     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
98276     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
98277     +   end;
MPRINT(EM_DIAGRAM):   end;
98278     +end;
MPRINT(EM_DIAGRAM):   end;
98279     +
98280     +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
98281     +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
98282     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
98283     +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
98284     +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
98285     +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
98286     +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
98287     +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
98288     +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
98289     +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
98290     +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
98291     +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
98292     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
98293     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
98294     +end;
MPRINT(EM_DIAGRAM):   end;
98295     +else do;
MPRINT(EM_DIAGRAM):   else do;
98296     +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
98297     +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
98298     +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
98299     +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
98300     +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
98301     +   end;
MPRINT(EM_DIAGRAM):   end;
98302     +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
98303     +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
98304     +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
98305     +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
98306     +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
98307     +   end;
MPRINT(EM_DIAGRAM):   end;
98308     +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
98309     +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
98310     +   end;
MPRINT(EM_DIAGRAM):   end;
98311     +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
98312     +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
98313     +   end;
MPRINT(EM_DIAGRAM):   end;
98314     +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
98315     +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
98316     +   end;
MPRINT(EM_DIAGRAM):   end;
98317     +   else do;
MPRINT(EM_DIAGRAM):   else do;
98318     +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
98319     +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
98320     +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
98321     +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
98322     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
98323     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
98324     +   end;
MPRINT(EM_DIAGRAM):   end;
98325     +end;
MPRINT(EM_DIAGRAM):   end;
98326     +
98327     +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
98328     +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
98329     +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
98330     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
98331     +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
98332     +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
98333     +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
98334     +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
98335     +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
98336     +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
98337     +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
98338     +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
98339     +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
98340     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
98341     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
98342     +end;
MPRINT(EM_DIAGRAM):   end;
98343     +else do;
MPRINT(EM_DIAGRAM):   else do;
98344     +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
98345     +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
98346     +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
98347     +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
98348     +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
98349     +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
98350     +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
98351     +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
98352     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
98353     +         end;
MPRINT(EM_DIAGRAM):   end;
98354     +         else do;
MPRINT(EM_DIAGRAM):   else do;
98355     +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
98356     +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
98357     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
98358     +            end;
MPRINT(EM_DIAGRAM):   end;
98359     +         end;
MPRINT(EM_DIAGRAM):   end;
98360     +      end;
MPRINT(EM_DIAGRAM):   end;
98361     +      else do;
MPRINT(EM_DIAGRAM):   else do;
98362     +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
98363     +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
98364     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
98365     +         end;
MPRINT(EM_DIAGRAM):   end;
98366     +      end;
MPRINT(EM_DIAGRAM):   end;
98367     +   end;
MPRINT(EM_DIAGRAM):   end;
98368     +   else do;
MPRINT(EM_DIAGRAM):   else do;
98369     +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
98370     +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
98371     +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
98372     +      end;
MPRINT(EM_DIAGRAM):   end;
98373     +      else do;
MPRINT(EM_DIAGRAM):   else do;
98374     +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
98375     +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
98376     +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
98377     +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
98378     +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
98379     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
98380     +         end;
MPRINT(EM_DIAGRAM):   end;
98381     +      end;
MPRINT(EM_DIAGRAM):   end;
98382     +   end;
MPRINT(EM_DIAGRAM):   end;
98383     +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
98384     +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
98385     +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
98386     +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
98387     +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
98388     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
98389     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
98390     +   end;
MPRINT(EM_DIAGRAM):   end;
98391     +end;
MPRINT(EM_DIAGRAM):   end;
98392     +
98393     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
98394     +*** Checking missing input Interval
98395     +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
98396     +
98397     +IF NMISS(
98398     +   AcceptedCmpTotal ,
98399     +   Age ,
98400     +   Frq ,
98401     +   Income ,
98402     +   Kidhome ,
98403     +   MntFishProducts ,
98404     +   MntFruits ,
98405     +   MntGoldProds ,
98406     +   MntSweetProducts ,
98407     +   MonthsAsCustomer ,
98408     +   NumDealsPurchases ,
98409     +   NumWebVisitsMonth ,
98410     +   RFMstat ,
98411     +   RMntFrq ,
98412     +   Recency ,
98413     +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
98414     +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
98415     +
98416     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
98417     +END;
MPRINT(EM_DIAGRAM):   END;
98418     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
98419     +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
98420     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
98421     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
98422     +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
98423     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
98424     +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
98425     +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
98426     +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
98427     +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
98428     +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
98429     +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
98430     +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
98431     +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
98432     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
98433     +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
98434     +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
98435     +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
98436     +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
98437     +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
98438     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
98439     +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
98440     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
98441     +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
98442     +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
98443     +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
98444     +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
98445     +END;
MPRINT(EM_DIAGRAM):   END;
98446     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
98447     +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
98448     +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
98449     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
98450     +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
98451     +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
98452     +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
98453     +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
98454     +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
98455     +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
98456     +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
98457     +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
98458     +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
98459     +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
98460     +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
98461     +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
98462     +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
98463     +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
98464     +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
98465     +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
98466     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
98467     +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
98468     +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
98469     +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
98470     +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
98471     +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
98472     +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
98473     +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
98474     +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
98475     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
98476     +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
98477     +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
98478     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
98479     +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
98480     +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
98481     +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
98482     +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
98483     +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
98484     +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
98485     +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
98486     +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
98487     +END;
MPRINT(EM_DIAGRAM):   END;
98488     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
98489     +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
98490     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
98491     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
98492     +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
98493     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
98494     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
98495     +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
98496     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
98497     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
98498     +   H1x1_1  =     0.14799095926144 * S_AcceptedCmpTotal
98499     +          +    -0.04647384466642 * S_Age  +     0.24999790039572 * S_Frq
98500     +          +     0.67193946760329 * S_Income  +    -0.42077272097029 *
98501     +        S_Kidhome  +    -0.02139676364759 * S_MntFishProducts
98502     +          +    -0.06309036790386 * S_MntFruits  +    -0.02579098391162 *
98503     +        S_MntGoldProds  +    -0.10360214785919 * S_MntSweetProducts
98504     +          +     0.07696704519183 * S_MonthsAsCustomer
98505     +          +     0.06885982009617 * S_NumDealsPurchases
98506     +          +     0.18284147478918 * S_NumWebVisitsMonth
98507     +          +    -0.00475791839806 * S_RFMstat  +     0.16731511643557 *
98508     +        S_RMntFrq  +    -0.65651411558717 * S_Recency
98509     +          +    -0.45659275487674 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.14799095926144 * S_AcceptedCmpTotal + -0.04647384466642 * 
S_Age + 0.24999790039572 * S_Frq + 0.67193946760329 * S_Income + -0.42077272097029 * S_Kidhome 
+ -0.02139676364759 * S_MntFishProducts + -0.06309036790386 * S_MntFruits + -0.02579098391162 
* S_MntGoldProds + -0.10360214785919 * S_MntSweetProducts + 0.07696704519183 * 
S_MonthsAsCustomer + 0.06885982009617 * S_NumDealsPurchases + 0.18284147478918 * 
S_NumWebVisitsMonth + -0.00475791839806 * S_RFMstat + 0.16731511643557 * S_RMntFrq + 
-0.65651411558717 * S_Recency + -0.45659275487674 * S_Teenhome ;
98510     +   H1x1_2  =      0.4505629421372 * S_AcceptedCmpTotal
98511     +          +     0.25939118491361 * S_Age  +     2.77688249418832 * S_Frq
98512     +          +     0.32697030303845 * S_Income  +    -0.37246867163551 *
98513     +        S_Kidhome  +    -0.61585865165341 * S_MntFishProducts
98514     +          +     0.48583904586511 * S_MntFruits  +    -0.38353134378746 *
98515     +        S_MntGoldProds  +     0.00655094628315 * S_MntSweetProducts
98516     +          +     0.19400730773464 * S_MonthsAsCustomer
98517     +          +    -1.36455521037197 * S_NumDealsPurchases
98518     +          +    -1.07068059346196 * S_NumWebVisitsMonth
98519     +          +     -0.4953702697801 * S_RFMstat  +    -0.73989265677449 *
98520     +        S_RMntFrq  +     1.36066079800227 * S_Recency
98521     +          +    -0.04271320094349 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.4505629421372 * S_AcceptedCmpTotal + 0.25939118491361 * S_Age 
+ 2.77688249418832 * S_Frq + 0.32697030303845 * S_Income + -0.37246867163551 * S_Kidhome + 
-0.61585865165341 * S_MntFishProducts + 0.48583904586511 * S_MntFruits + -0.38353134378746 * 
S_MntGoldProds + 0.00655094628315 * S_MntSweetProducts + 0.19400730773464 * S_MonthsAsCustomer 
+ -1.36455521037197 * S_NumDealsPurchases + -1.07068059346196 * S_NumWebVisitsMonth + 
-0.4953702697801 * S_RFMstat + -0.73989265677449 * S_RMntFrq + 1.36066079800227 * S_Recency + 
-0.04271320094349 * S_Teenhome ;
98522     +   H1x1_1  = H1x1_1  +    -0.15625358687394 * AcceptedCmp10
98523     +          +    -0.16004536933275 * AcceptedCmp20  +    -0.25016784155495 *
98524     +        AcceptedCmp30  +    -0.15585105085453 * AcceptedCmp40
98525     +          +    -0.06982247699471 * AcceptedCmp50  +    -0.11568047349098 *
98526     +        Complain0  +     0.36349047632504 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.15625358687394 * AcceptedCmp10 + -0.16004536933275 
* AcceptedCmp20 + -0.25016784155495 * AcceptedCmp30 + -0.15585105085453 * AcceptedCmp40 + 
-0.06982247699471 * AcceptedCmp50 + -0.11568047349098 * Complain0 + 0.36349047632504 * 
HigherEducationBinary0 ;
98527     +   H1x1_2  = H1x1_2  +     1.51765243597714 * AcceptedCmp10
98528     +          +     1.47001519525633 * AcceptedCmp20  +      1.4613337402064 *
98529     +        AcceptedCmp30  +     0.39175009738324 * AcceptedCmp40
98530     +          +    -0.35396325940732 * AcceptedCmp50  +     -0.8151538493653 *
98531     +        Complain0  +     0.47014175146609 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 1.51765243597714 * AcceptedCmp10 + 1.47001519525633 * 
AcceptedCmp20 + 1.4613337402064 * AcceptedCmp30 + 0.39175009738324 * AcceptedCmp40 + 
-0.35396325940732 * AcceptedCmp50 + -0.8151538493653 * Complain0 + 0.47014175146609 * 
HigherEducationBinary0 ;
98532     +   H1x1_1  = H1x1_1  +    -0.41546031612995 * Education2n_Cycle
98533     +          +     0.33474673936754 * EducationBasic  +     0.15788973153313 *
98534     +        EducationGraduation  +    -0.13796568916415 * EducationMaster
98535     +          +     0.23432241402098 * Marital_StatusDivorced
98536     +          +    -0.46302700269027 * Marital_StatusMarried
98537     +          +      0.4032168653504 * Marital_StatusSingle
98538     +          +    -0.44795341835702 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.41546031612995 * Education2n_Cycle + 
0.33474673936754 * EducationBasic + 0.15788973153313 * EducationGraduation + -0.13796568916415 
* EducationMaster + 0.23432241402098 * Marital_StatusDivorced + -0.46302700269027 * 
Marital_StatusMarried + 0.4032168653504 * Marital_StatusSingle + -0.44795341835702 * 
Marital_StatusTogether ;
98539     +   H1x1_2  = H1x1_2  +    -0.18958861902397 * Education2n_Cycle
98540     +          +     0.56593307913524 * EducationBasic  +    -0.16639049776163 *
98541     +        EducationGraduation  +     -0.3917553423088 * EducationMaster
98542     +          +    -0.31347503340603 * Marital_StatusDivorced
98543     +          +    -0.20319530959178 * Marital_StatusMarried
98544     +          +     0.48298350411196 * Marital_StatusSingle
98545     +          +      -0.252969507874 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.18958861902397 * Education2n_Cycle + 
0.56593307913524 * EducationBasic + -0.16639049776163 * EducationGraduation + -0.3917553423088 
* EducationMaster + -0.31347503340603 * Marital_StatusDivorced + -0.20319530959178 * 
Marital_StatusMarried + 0.48298350411196 * Marital_StatusSingle + -0.252969507874 * 
Marital_StatusTogether ;
98546     +   H1x1_1  =    -1.25768416618497 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.25768416618497 + H1x1_1 ;
98547     +   H1x1_2  =      1.4658519648796 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.4658519648796 + H1x1_2 ;
98548     +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
98549     +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
98550     +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
98551     +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
98552     +END;
MPRINT(EM_DIAGRAM):   END;
98553     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
98554     +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
98555     +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
98556     +END;
MPRINT(EM_DIAGRAM):   END;
98557     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
98558     +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
98559     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
98560     +
98561     +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
98562     +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
98563     +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
98564     +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
98565     +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
98566     +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
98567     +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
98568     +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
98569     +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
98570     +end;
MPRINT(EM_DIAGRAM):   end;
98571     +else do;
MPRINT(EM_DIAGRAM):   else do;
98572     +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
98573     +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
98574     +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
98575     +   end;
MPRINT(EM_DIAGRAM):   end;
98576     +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
98577     +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
98578     +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
98579     +   end;
MPRINT(EM_DIAGRAM):   end;
98580     +   else do;
MPRINT(EM_DIAGRAM):   else do;
98581     +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
98582     +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
98583     +   end;
MPRINT(EM_DIAGRAM):   end;
98584     +end;
MPRINT(EM_DIAGRAM):   end;
98585     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
98586     +   P_DepVar1  =     15.2788764824385 * H1x1_1  +    -7.37711503177617 * H1x1_2
98587     +         ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 15.2788764824385 * H1x1_1 + -7.37711503177617 * H1x1_2 ;
98588     +   P_DepVar1  =     0.37159160751318 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.37159160751318 + P_DepVar1 ;
98589     +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
98590     +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
98591     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
98592     +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
98593     +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
98594     +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
98595     +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
98596     +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
98597     +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
98598     +END;
MPRINT(EM_DIAGRAM):   END;
98599     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
98600     +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
98601     +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
98602     +END;
MPRINT(EM_DIAGRAM):   END;
98603     +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
98604     +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
98605     +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
98606     +END;
MPRINT(EM_DIAGRAM):   END;
98607     +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
98608     +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
98609     +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
98610     +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
98611     +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
98612     +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
98613     +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
98614     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
98615     +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
98616     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
98617     +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
98618     +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
98619     +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
98620     +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
98621     +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
98622     +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
98623     +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
98624     +END;
MPRINT(EM_DIAGRAM):   END;
98625     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
98626     +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
98627     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
98628     +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
98629     +* Renaming variables for AutoNeural38;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural38;
98630     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
98631     +* Renaming Posterior variables for AutoNeural38;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural38;
98632     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
98633     +drop AutoNeural38_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural38_P_DepVar1;
98634     +AutoNeural38_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural38_P_DepVar1 = P_DepVar1;
98635     +drop AutoNeural38_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural38_P_DepVar0;
98636     +AutoNeural38_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural38_P_DepVar0 = P_DepVar0;
98637     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
98638     +* Renaming _WARN_ variable for AutoNeural38;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural38;
98639     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
98640     +length AutoNeural38_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural38_WARN_ $4;
98641     +drop AutoNeural38_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural38_WARN_;
98642     +AutoNeural38_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural38_WARN_ = _WARN_;
98643     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
98644     +* Ensmbl23: Scoring Code of model 4 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl23: Scoring Code of model 4 of 5;
98645     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
98646     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
98647     +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
98648     +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
98649     +* NODE: Neural39;
MPRINT(EM_DIAGRAM):   * NODE: Neural39;
98650     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
98651     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
98652     +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
98653     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
98654     +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
98655     + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
98656     + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
98657     + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
98658     + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
98659     + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
98660     + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
98661     + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
98662     +LENGTH _WARN_ $4
98663     +      F_DepVar  $ 12
98664     +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
98665     +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
98666     +
98667     +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
98668     +
98669     +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
98670     +
98671     +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
98672     +
98673     +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
98674     +
98675     +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
98676     +
98677     +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
98678     +
98679     +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
98680     +
98681     +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
98682     +
98683     +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
98684     +
98685     +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
98686     +
98687     +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
98688     +
98689     +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
98690     +
98691     +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
98692     +
98693     +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
98694     +
98695     +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
98696     +
98697     +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
98698     +
98699     +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
98700     +
98701     +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
98702     +
98703     +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
98704     +
98705     +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
98706     +
98707     +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
98708     +
98709     +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
98710     +
98711     +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
98712     +
98713     +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
98714     +
98715     +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
98716     +
98717     +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
98718     +
98719     +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
98720     +
98721     +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
98722     +
98723     +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
98724     +
98725     +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
98726     +
98727     +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
98728     +
98729     +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
98730     +
98731     +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
98732     +
98733     +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
98734     +
98735     +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
98736     +
98737     +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
98738     +
98739     +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
98740     +
98741     +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
98742     +
98743     +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
98744     +
98745     +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
98746     +
98747     +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
98748     +
98749     +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
98750     +
98751     +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
98752     +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
98753     +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
98754     +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
98755     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
98756     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
98757     +end;
MPRINT(EM_DIAGRAM):   end;
98758     +else do;
MPRINT(EM_DIAGRAM):   else do;
98759     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
98760     +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
98761     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
98762     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
98763     +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
98764     +   end;
MPRINT(EM_DIAGRAM):   end;
98765     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
98766     +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
98767     +   end;
MPRINT(EM_DIAGRAM):   end;
98768     +   else do;
MPRINT(EM_DIAGRAM):   else do;
98769     +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
98770     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
98771     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
98772     +   end;
MPRINT(EM_DIAGRAM):   end;
98773     +end;
MPRINT(EM_DIAGRAM):   end;
98774     +
98775     +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
98776     +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
98777     +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
98778     +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
98779     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
98780     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
98781     +end;
MPRINT(EM_DIAGRAM):   end;
98782     +else do;
MPRINT(EM_DIAGRAM):   else do;
98783     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
98784     +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
98785     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
98786     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
98787     +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
98788     +   end;
MPRINT(EM_DIAGRAM):   end;
98789     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
98790     +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
98791     +   end;
MPRINT(EM_DIAGRAM):   end;
98792     +   else do;
MPRINT(EM_DIAGRAM):   else do;
98793     +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
98794     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
98795     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
98796     +   end;
MPRINT(EM_DIAGRAM):   end;
98797     +end;
MPRINT(EM_DIAGRAM):   end;
98798     +
98799     +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
98800     +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
98801     +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
98802     +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
98803     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
98804     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
98805     +end;
MPRINT(EM_DIAGRAM):   end;
98806     +else do;
MPRINT(EM_DIAGRAM):   else do;
98807     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
98808     +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
98809     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
98810     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
98811     +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
98812     +   end;
MPRINT(EM_DIAGRAM):   end;
98813     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
98814     +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
98815     +   end;
MPRINT(EM_DIAGRAM):   end;
98816     +   else do;
MPRINT(EM_DIAGRAM):   else do;
98817     +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
98818     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
98819     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
98820     +   end;
MPRINT(EM_DIAGRAM):   end;
98821     +end;
MPRINT(EM_DIAGRAM):   end;
98822     +
98823     +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
98824     +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
98825     +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
98826     +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
98827     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
98828     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
98829     +end;
MPRINT(EM_DIAGRAM):   end;
98830     +else do;
MPRINT(EM_DIAGRAM):   else do;
98831     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
98832     +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
98833     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
98834     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
98835     +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
98836     +   end;
MPRINT(EM_DIAGRAM):   end;
98837     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
98838     +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
98839     +   end;
MPRINT(EM_DIAGRAM):   end;
98840     +   else do;
MPRINT(EM_DIAGRAM):   else do;
98841     +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
98842     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
98843     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
98844     +   end;
MPRINT(EM_DIAGRAM):   end;
98845     +end;
MPRINT(EM_DIAGRAM):   end;
98846     +
98847     +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
98848     +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
98849     +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
98850     +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
98851     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
98852     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
98853     +end;
MPRINT(EM_DIAGRAM):   end;
98854     +else do;
MPRINT(EM_DIAGRAM):   else do;
98855     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
98856     +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
98857     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
98858     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
98859     +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
98860     +   end;
MPRINT(EM_DIAGRAM):   end;
98861     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
98862     +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
98863     +   end;
MPRINT(EM_DIAGRAM):   end;
98864     +   else do;
MPRINT(EM_DIAGRAM):   else do;
98865     +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
98866     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
98867     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
98868     +   end;
MPRINT(EM_DIAGRAM):   end;
98869     +end;
MPRINT(EM_DIAGRAM):   end;
98870     +
98871     +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
98872     +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
98873     +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
98874     +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
98875     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
98876     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
98877     +end;
MPRINT(EM_DIAGRAM):   end;
98878     +else do;
MPRINT(EM_DIAGRAM):   else do;
98879     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
98880     +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
98881     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
98882     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
98883     +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
98884     +   end;
MPRINT(EM_DIAGRAM):   end;
98885     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
98886     +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
98887     +   end;
MPRINT(EM_DIAGRAM):   end;
98888     +   else do;
MPRINT(EM_DIAGRAM):   else do;
98889     +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
98890     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
98891     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
98892     +   end;
MPRINT(EM_DIAGRAM):   end;
98893     +end;
MPRINT(EM_DIAGRAM):   end;
98894     +
98895     +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
98896     +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
98897     +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
98898     +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
98899     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
98900     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
98901     +end;
MPRINT(EM_DIAGRAM):   end;
98902     +else do;
MPRINT(EM_DIAGRAM):   else do;
98903     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
98904     +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
98905     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
98906     +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
98907     +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
98908     +   end;
MPRINT(EM_DIAGRAM):   end;
98909     +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
98910     +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
98911     +   end;
MPRINT(EM_DIAGRAM):   end;
98912     +   else do;
MPRINT(EM_DIAGRAM):   else do;
98913     +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
98914     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
98915     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
98916     +   end;
MPRINT(EM_DIAGRAM):   end;
98917     +end;
MPRINT(EM_DIAGRAM):   end;
98918     +
98919     +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
98920     +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
98921     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
98922     +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
98923     +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
98924     +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
98925     +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
98926     +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
98927     +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
98928     +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
98929     +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
98930     +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
98931     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
98932     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
98933     +end;
MPRINT(EM_DIAGRAM):   end;
98934     +else do;
MPRINT(EM_DIAGRAM):   else do;
98935     +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
98936     +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
98937     +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
98938     +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
98939     +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
98940     +   end;
MPRINT(EM_DIAGRAM):   end;
98941     +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
98942     +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
98943     +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
98944     +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
98945     +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
98946     +   end;
MPRINT(EM_DIAGRAM):   end;
98947     +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
98948     +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
98949     +   end;
MPRINT(EM_DIAGRAM):   end;
98950     +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
98951     +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
98952     +   end;
MPRINT(EM_DIAGRAM):   end;
98953     +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
98954     +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
98955     +   end;
MPRINT(EM_DIAGRAM):   end;
98956     +   else do;
MPRINT(EM_DIAGRAM):   else do;
98957     +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
98958     +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
98959     +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
98960     +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
98961     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
98962     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
98963     +   end;
MPRINT(EM_DIAGRAM):   end;
98964     +end;
MPRINT(EM_DIAGRAM):   end;
98965     +
98966     +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
98967     +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
98968     +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
98969     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
98970     +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
98971     +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
98972     +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
98973     +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
98974     +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
98975     +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
98976     +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
98977     +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
98978     +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
98979     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
98980     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
98981     +end;
MPRINT(EM_DIAGRAM):   end;
98982     +else do;
MPRINT(EM_DIAGRAM):   else do;
98983     +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
98984     +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
98985     +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
98986     +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
98987     +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
98988     +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
98989     +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
98990     +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
98991     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
98992     +         end;
MPRINT(EM_DIAGRAM):   end;
98993     +         else do;
MPRINT(EM_DIAGRAM):   else do;
98994     +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
98995     +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
98996     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
98997     +            end;
MPRINT(EM_DIAGRAM):   end;
98998     +         end;
MPRINT(EM_DIAGRAM):   end;
98999     +      end;
MPRINT(EM_DIAGRAM):   end;
99000     +      else do;
MPRINT(EM_DIAGRAM):   else do;
99001     +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
99002     +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
99003     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
99004     +         end;
MPRINT(EM_DIAGRAM):   end;
99005     +      end;
MPRINT(EM_DIAGRAM):   end;
99006     +   end;
MPRINT(EM_DIAGRAM):   end;
99007     +   else do;
MPRINT(EM_DIAGRAM):   else do;
99008     +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
99009     +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
99010     +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
99011     +      end;
MPRINT(EM_DIAGRAM):   end;
99012     +      else do;
MPRINT(EM_DIAGRAM):   else do;
99013     +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
99014     +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
99015     +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
99016     +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
99017     +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
99018     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
99019     +         end;
MPRINT(EM_DIAGRAM):   end;
99020     +      end;
MPRINT(EM_DIAGRAM):   end;
99021     +   end;
MPRINT(EM_DIAGRAM):   end;
99022     +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
99023     +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
99024     +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
99025     +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
99026     +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
99027     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
99028     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
99029     +   end;
MPRINT(EM_DIAGRAM):   end;
99030     +end;
MPRINT(EM_DIAGRAM):   end;
99031     +
99032     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
99033     +*** Checking missing input Interval
99034     +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
99035     +
99036     +IF NMISS(
99037     +   AcceptedCmpTotal ,
99038     +   Age ,
99039     +   Frq ,
99040     +   Income ,
99041     +   Kidhome ,
99042     +   MntFishProducts ,
99043     +   MntFruits ,
99044     +   MntGoldProds ,
99045     +   MntSweetProducts ,
99046     +   MonthsAsCustomer ,
99047     +   NumDealsPurchases ,
99048     +   NumWebVisitsMonth ,
99049     +   RFMstat ,
99050     +   RMntFrq ,
99051     +   Recency ,
99052     +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
99053     +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
99054     +
99055     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
99056     +END;
MPRINT(EM_DIAGRAM):   END;
99057     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
99058     +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
99059     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
99060     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
99061     +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
99062     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
99063     +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
99064     +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
99065     +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
99066     +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
99067     +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
99068     +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
99069     +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
99070     +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
99071     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
99072     +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
99073     +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
99074     +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
99075     +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
99076     +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
99077     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
99078     +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
99079     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
99080     +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
99081     +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
99082     +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
99083     +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
99084     +END;
MPRINT(EM_DIAGRAM):   END;
99085     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
99086     +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
99087     +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
99088     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
99089     +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
99090     +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
99091     +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
99092     +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
99093     +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
99094     +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
99095     +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
99096     +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
99097     +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
99098     +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
99099     +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
99100     +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
99101     +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
99102     +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
99103     +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
99104     +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
99105     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
99106     +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
99107     +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
99108     +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
99109     +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
99110     +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
99111     +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
99112     +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
99113     +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
99114     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
99115     +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
99116     +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
99117     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
99118     +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
99119     +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
99120     +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
99121     +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
99122     +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
99123     +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
99124     +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
99125     +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
99126     +END;
MPRINT(EM_DIAGRAM):   END;
99127     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
99128     +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
99129     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
99130     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
99131     +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
99132     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
99133     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
99134     +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
99135     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
99136     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
99137     +   H11  =    -0.64096829905108 * S_AcceptedCmpTotal  +    -0.11209535704145 *
99138     +        S_Age  +     0.38442347653056 * S_Frq  +     0.10191582051286 *
99139     +        S_Income  +     0.27663215475285 * S_Kidhome
99140     +          +    -0.02861873561507 * S_MntFishProducts
99141     +          +     0.20598948908915 * S_MntFruits  +     0.20804179479079 *
99142     +        S_MntGoldProds  +     0.19160035179466 * S_MntSweetProducts
99143     +          +    -0.30820227749029 * S_MonthsAsCustomer
99144     +          +    -0.64335583461867 * S_NumDealsPurchases
99145     +          +    -0.40339200335235 * S_NumWebVisitsMonth
99146     +          +    -0.05053414482512 * S_RFMstat  +     0.32736870225964 *
99147     +        S_RMntFrq  +     0.73297917115427 * S_Recency
99148     +          +     0.11670126537146 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.64096829905108 * S_AcceptedCmpTotal + -0.11209535704145 * S_Age 
+ 0.38442347653056 * S_Frq + 0.10191582051286 * S_Income + 0.27663215475285 * S_Kidhome + 
-0.02861873561507 * S_MntFishProducts + 0.20598948908915 * S_MntFruits + 0.20804179479079 * 
S_MntGoldProds + 0.19160035179466 * S_MntSweetProducts + -0.30820227749029 * 
S_MonthsAsCustomer + -0.64335583461867 * S_NumDealsPurchases + -0.40339200335235 * 
S_NumWebVisitsMonth + -0.05053414482512 * S_RFMstat + 0.32736870225964 * S_RMntFrq + 
0.73297917115427 * S_Recency + 0.11670126537146 * S_Teenhome ;
99149     +   H12  =     -0.1657091472212 * S_AcceptedCmpTotal  +     0.51956326282264 *
99150     +        S_Age  +     1.09230379920111 * S_Frq  +     0.41850245998114 *
99151     +        S_Income  +     0.04677082637593 * S_Kidhome
99152     +          +    -0.26310923797495 * S_MntFishProducts
99153     +          +     0.07068396793785 * S_MntFruits  +    -0.13614297077165 *
99154     +        S_MntGoldProds  +    -0.41288432261418 * S_MntSweetProducts
99155     +          +     0.31464974024806 * S_MonthsAsCustomer
99156     +          +    -0.51422897206707 * S_NumDealsPurchases
99157     +          +    -0.70210448968741 * S_NumWebVisitsMonth
99158     +          +    -0.20168285475248 * S_RFMstat  +    -0.52597031961785 *
99159     +        S_RMntFrq  +     1.12297422526954 * S_Recency
99160     +          +    -0.19583787100677 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.1657091472212 * S_AcceptedCmpTotal + 0.51956326282264 * S_Age + 
1.09230379920111 * S_Frq + 0.41850245998114 * S_Income + 0.04677082637593 * S_Kidhome + 
-0.26310923797495 * S_MntFishProducts + 0.07068396793785 * S_MntFruits + -0.13614297077165 * 
S_MntGoldProds + -0.41288432261418 * S_MntSweetProducts + 0.31464974024806 * 
S_MonthsAsCustomer + -0.51422897206707 * S_NumDealsPurchases + -0.70210448968741 * 
S_NumWebVisitsMonth + -0.20168285475248 * S_RFMstat + -0.52597031961785 * S_RMntFrq + 
1.12297422526954 * S_Recency + -0.19583787100677 * S_Teenhome ;
99161     +   H13  =    -0.52948883352014 * S_AcceptedCmpTotal  +    -0.12557829758966 *
99162     +        S_Age  +     -0.0390229319101 * S_Frq  +    -0.82750091245735 *
99163     +        S_Income  +    -0.76074905594112 * S_Kidhome
99164     +          +     0.28012200156756 * S_MntFishProducts
99165     +          +    -0.11859027002733 * S_MntFruits  +    -0.41772270940459 *
99166     +        S_MntGoldProds  +     0.02732432410202 * S_MntSweetProducts
99167     +          +    -0.02209353426555 * S_MonthsAsCustomer
99168     +          +    -0.30351716506195 * S_NumDealsPurchases
99169     +          +    -0.54961975756206 * S_NumWebVisitsMonth
99170     +          +    -0.10801362755152 * S_RFMstat  +    -0.18473836604054 *
99171     +        S_RMntFrq  +     0.84276565192556 * S_Recency
99172     +          +     0.30860891080893 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.52948883352014 * S_AcceptedCmpTotal + -0.12557829758966 * S_Age 
+ -0.0390229319101 * S_Frq + -0.82750091245735 * S_Income + -0.76074905594112 * S_Kidhome + 
0.28012200156756 * S_MntFishProducts + -0.11859027002733 * S_MntFruits + -0.41772270940459 * 
S_MntGoldProds + 0.02732432410202 * S_MntSweetProducts + -0.02209353426555 * 
S_MonthsAsCustomer + -0.30351716506195 * S_NumDealsPurchases + -0.54961975756206 * 
S_NumWebVisitsMonth + -0.10801362755152 * S_RFMstat + -0.18473836604054 * S_RMntFrq + 
0.84276565192556 * S_Recency + 0.30860891080893 * S_Teenhome ;
99173     +   H14  =    -0.07567218864184 * S_AcceptedCmpTotal  +     0.02462117827216 *
99174     +        S_Age  +    -0.64320970361048 * S_Frq  +     -1.0659518778449 *
99175     +        S_Income  +     0.68593841144377 * S_Kidhome
99176     +          +     -0.0587169446037 * S_MntFishProducts
99177     +          +     0.24365125001776 * S_MntFruits  +     0.04647719507405 *
99178     +        S_MntGoldProds  +     0.25871718590254 * S_MntSweetProducts
99179     +          +    -0.17220981900732 * S_MonthsAsCustomer
99180     +          +     0.27940162953795 * S_NumDealsPurchases
99181     +          +    -0.04761461934562 * S_NumWebVisitsMonth
99182     +          +    -0.11656397034939 * S_RFMstat  +    -0.30754235450488 *
99183     +        S_RMntFrq  +     0.68962447302378 * S_Recency
99184     +          +     0.73159731135815 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = -0.07567218864184 * S_AcceptedCmpTotal + 0.02462117827216 * S_Age 
+ -0.64320970361048 * S_Frq + -1.0659518778449 * S_Income + 0.68593841144377 * S_Kidhome + 
-0.0587169446037 * S_MntFishProducts + 0.24365125001776 * S_MntFruits + 0.04647719507405 * 
S_MntGoldProds + 0.25871718590254 * S_MntSweetProducts + -0.17220981900732 * 
S_MonthsAsCustomer + 0.27940162953795 * S_NumDealsPurchases + -0.04761461934562 * 
S_NumWebVisitsMonth + -0.11656397034939 * S_RFMstat + -0.30754235450488 * S_RMntFrq + 
0.68962447302378 * S_Recency + 0.73159731135815 * S_Teenhome ;
99185     +   H11  = H11  +     0.25038776257796 * AcceptedCmp10
99186     +          +     0.04282733069599 * AcceptedCmp20  +     0.16936079906612 *
99187     +        AcceptedCmp30  +     0.05079498344461 * AcceptedCmp40
99188     +          +      0.6690889070972 * AcceptedCmp50  +    -0.11756177189054 *
99189     +        Complain0  +     0.00601034671987 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.25038776257796 * AcceptedCmp10 + 0.04282733069599 * 
AcceptedCmp20 + 0.16936079906612 * AcceptedCmp30 + 0.05079498344461 * AcceptedCmp40 + 
0.6690889070972 * AcceptedCmp50 + -0.11756177189054 * Complain0 + 0.00601034671987 * 
HigherEducationBinary0 ;
99190     +   H12  = H12  +     0.63638345806433 * AcceptedCmp10
99191     +          +      0.3453598097393 * AcceptedCmp20  +     0.49359811223374 *
99192     +        AcceptedCmp30  +     0.27581207611627 * AcceptedCmp40
99193     +          +     0.05866095623494 * AcceptedCmp50  +    -0.13005408285069 *
99194     +        Complain0  +      0.2160948352192 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.63638345806433 * AcceptedCmp10 + 0.3453598097393 * 
AcceptedCmp20 + 0.49359811223374 * AcceptedCmp30 + 0.27581207611627 * AcceptedCmp40 + 
0.05866095623494 * AcceptedCmp50 + -0.13005408285069 * Complain0 + 0.2160948352192 * 
HigherEducationBinary0 ;
99195     +   H13  = H13  +     0.09956549586905 * AcceptedCmp10
99196     +          +     0.03691883338772 * AcceptedCmp20  +     0.47736653446815 *
99197     +        AcceptedCmp30  +    -0.91581599271765 * AcceptedCmp40
99198     +          +     0.50560814473618 * AcceptedCmp50  +    -0.33308229467468 *
99199     +        Complain0  +     0.14672770960028 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.09956549586905 * AcceptedCmp10 + 0.03691883338772 * 
AcceptedCmp20 + 0.47736653446815 * AcceptedCmp30 + -0.91581599271765 * AcceptedCmp40 + 
0.50560814473618 * AcceptedCmp50 + -0.33308229467468 * Complain0 + 0.14672770960028 * 
HigherEducationBinary0 ;
99200     +   H14  = H14  +     0.22255149692461 * AcceptedCmp10
99201     +          +     0.13590153487525 * AcceptedCmp20  +     0.33124716818779 *
99202     +        AcceptedCmp30  +     0.53538971216451 * AcceptedCmp40
99203     +          +    -0.15288643860698 * AcceptedCmp50  +     0.30766742713062 *
99204     +        Complain0  +    -0.54379124310959 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.22255149692461 * AcceptedCmp10 + 0.13590153487525 * 
AcceptedCmp20 + 0.33124716818779 * AcceptedCmp30 + 0.53538971216451 * AcceptedCmp40 + 
-0.15288643860698 * AcceptedCmp50 + 0.30766742713062 * Complain0 + -0.54379124310959 * 
HigherEducationBinary0 ;
99205     +   H11  = H11  +    -0.16246752897554 * Education2n_Cycle
99206     +          +    -0.02018324007765 * EducationBasic  +    -0.01853488592136 *
99207     +        EducationGraduation  +    -0.09512206973791 * EducationMaster
99208     +          +     0.04284251520428 * Marital_StatusDivorced
99209     +          +    -0.08591343257218 * Marital_StatusMarried
99210     +          +     0.43667281622253 * Marital_StatusSingle
99211     +          +     0.35264409549804 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.16246752897554 * Education2n_Cycle + -0.02018324007765 * 
EducationBasic + -0.01853488592136 * EducationGraduation + -0.09512206973791 * EducationMaster 
+ 0.04284251520428 * Marital_StatusDivorced + -0.08591343257218 * Marital_StatusMarried + 
0.43667281622253 * Marital_StatusSingle + 0.35264409549804 * Marital_StatusTogether ;
99212     +   H12  = H12  +     0.33728620033583 * Education2n_Cycle
99213     +          +    -0.00479023403414 * EducationBasic  +    -0.10257966569549 *
99214     +        EducationGraduation  +    -0.17955750532548 * EducationMaster
99215     +          +    -0.10823631131846 * Marital_StatusDivorced
99216     +          +     0.15344450170599 * Marital_StatusMarried
99217     +          +    -0.00222187507332 * Marital_StatusSingle
99218     +          +     0.12886702838116 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.33728620033583 * Education2n_Cycle + -0.00479023403414 * 
EducationBasic + -0.10257966569549 * EducationGraduation + -0.17955750532548 * EducationMaster 
+ -0.10823631131846 * Marital_StatusDivorced + 0.15344450170599 * Marital_StatusMarried + 
-0.00222187507332 * Marital_StatusSingle + 0.12886702838116 * Marital_StatusTogether ;
99219     +   H13  = H13  +     0.04434288585425 * Education2n_Cycle
99220     +          +     0.45393732517503 * EducationBasic  +    -0.30230166822748 *
99221     +        EducationGraduation  +     0.06012880669469 * EducationMaster
99222     +          +    -0.20523044713629 * Marital_StatusDivorced
99223     +          +     0.15779331320414 * Marital_StatusMarried
99224     +          +    -0.33273914160638 * Marital_StatusSingle
99225     +          +    -0.25472406769802 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.04434288585425 * Education2n_Cycle + 0.45393732517503 * 
EducationBasic + -0.30230166822748 * EducationGraduation + 0.06012880669469 * EducationMaster 
+ -0.20523044713629 * Marital_StatusDivorced + 0.15779331320414 * Marital_StatusMarried + 
-0.33273914160638 * Marital_StatusSingle + -0.25472406769802 * Marital_StatusTogether ;
99226     +   H14  = H14  +    -0.16441299564379 * Education2n_Cycle
99227     +          +     0.10809494068924 * EducationBasic  +    -0.23265316836427 *
99228     +        EducationGraduation  +      0.3018512119562 * EducationMaster
99229     +          +    -0.24973986133996 * Marital_StatusDivorced
99230     +          +     1.15862092191103 * Marital_StatusMarried
99231     +          +    -0.91451543179937 * Marital_StatusSingle
99232     +          +     0.98391013262071 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.16441299564379 * Education2n_Cycle + 0.10809494068924 * 
EducationBasic + -0.23265316836427 * EducationGraduation + 0.3018512119562 * EducationMaster + 
-0.24973986133996 * Marital_StatusDivorced + 1.15862092191103 * Marital_StatusMarried + 
-0.91451543179937 * Marital_StatusSingle + 0.98391013262071 * Marital_StatusTogether ;
99233     +   H11  =     0.70941478033358 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.70941478033358 + H11 ;
99234     +   H12  =     0.91925226212025 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.91925226212025 + H12 ;
99235     +   H13  =    -0.26151947698166 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.26151947698166 + H13 ;
99236     +   H14  =     1.57965424463368 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 1.57965424463368 + H14 ;
99237     +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
99238     +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
99239     +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
99240     +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
99241     +END;
MPRINT(EM_DIAGRAM):   END;
99242     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
99243     +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
99244     +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
99245     +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
99246     +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
99247     +END;
MPRINT(EM_DIAGRAM):   END;
99248     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
99249     +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
99250     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
99251     +
99252     +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
99253     +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
99254     +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
99255     +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
99256     +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
99257     +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
99258     +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
99259     +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
99260     +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
99261     +end;
MPRINT(EM_DIAGRAM):   end;
99262     +else do;
MPRINT(EM_DIAGRAM):   else do;
99263     +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
99264     +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
99265     +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
99266     +   end;
MPRINT(EM_DIAGRAM):   end;
99267     +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
99268     +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
99269     +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
99270     +   end;
MPRINT(EM_DIAGRAM):   end;
99271     +   else do;
MPRINT(EM_DIAGRAM):   else do;
99272     +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
99273     +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
99274     +   end;
MPRINT(EM_DIAGRAM):   end;
99275     +end;
MPRINT(EM_DIAGRAM):   end;
99276     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
99277     +   P_DepVar1  =    -1.20356257603969 * H11  +    -1.94296236893655 * H12
99278     +          +    -2.81737663487689 * H13  +    -2.69363833398263 * H14 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.20356257603969 * H11 + -1.94296236893655 * H12 + 
-2.81737663487689 * H13 + -2.69363833398263 * H14 ;
99279     +   P_DepVar1  =    -0.80241057184596 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.80241057184596 + P_DepVar1 ;
99280     +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
99281     +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
99282     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
99283     +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
99284     +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
99285     +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
99286     +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
99287     +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
99288     +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
99289     +END;
MPRINT(EM_DIAGRAM):   END;
99290     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
99291     +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
99292     +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
99293     +END;
MPRINT(EM_DIAGRAM):   END;
99294     +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
99295     +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
99296     +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
99297     +END;
MPRINT(EM_DIAGRAM):   END;
99298     +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
99299     +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
99300     +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
99301     +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
99302     +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
99303     +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
99304     +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
99305     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
99306     +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
99307     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
99308     +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
99309     +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
99310     +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
99311     +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
99312     +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
99313     +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
99314     +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
99315     +END;
MPRINT(EM_DIAGRAM):   END;
99316     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
99317     +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
99318     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
99319     +drop
99320     +H11
99321     +H12
99322     +H13
99323     +H14
99324     +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 ;
99325     +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
99326     +* Renaming variables for Neural39;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural39;
99327     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
99328     +* Renaming Posterior variables for Neural39;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural39;
99329     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
99330     +drop Neural39_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural39_P_DepVar1;
99331     +Neural39_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural39_P_DepVar1 = P_DepVar1;
99332     +drop Neural39_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural39_P_DepVar0;
99333     +Neural39_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural39_P_DepVar0 = P_DepVar0;
99334     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
99335     +* Renaming _WARN_ variable for Neural39;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural39;
99336     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
99337     +length Neural39_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural39_WARN_ $4;
99338     +drop Neural39_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural39_WARN_;
99339     +Neural39_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural39_WARN_ = _WARN_;
99340     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
99341     +* Ensmbl23: Scoring Code of model 5 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl23: Scoring Code of model 5 of 5;
99342     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
99343     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
99344     +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
99345     +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
99346     +* NODE: Neural41;
MPRINT(EM_DIAGRAM):   * NODE: Neural41;
99347     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
99348     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
99349     +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
99350     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
99351     +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
99352     + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
99353     + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
99354     + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
99355     + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
99356     + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
99357     + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
99358     + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
99359     +LENGTH _WARN_ $4
99360     +      F_DepVar  $ 12
99361     +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
99362     +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
99363     +
99364     +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
99365     +
99366     +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
99367     +
99368     +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
99369     +
99370     +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
99371     +
99372     +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
99373     +
99374     +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
99375     +
99376     +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
99377     +
99378     +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
99379     +
99380     +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
99381     +
99382     +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
99383     +
99384     +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
99385     +
99386     +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
99387     +
99388     +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
99389     +
99390     +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
99391     +
99392     +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
99393     +
99394     +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
99395     +
99396     +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
99397     +
99398     +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
99399     +
99400     +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
99401     +
99402     +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
99403     +
99404     +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
99405     +
99406     +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
99407     +
99408     +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
99409     +
99410     +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
99411     +
99412     +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
99413     +
99414     +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
99415     +
99416     +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
99417     +
99418     +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
99419     +
99420     +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
99421     +
99422     +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
99423     +
99424     +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
99425     +
99426     +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
99427     +
99428     +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
99429     +
99430     +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
99431     +
99432     +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
99433     +
99434     +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
99435     +
99436     +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
99437     +
99438     +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
99439     +
99440     +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
99441     +
99442     +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
99443     +
99444     +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
99445     +
99446     +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
99447     +
99448     +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
99449     +
99450     +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
99451     +
99452     +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
99453     +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
99454     +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
99455     +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
99456     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
99457     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
99458     +end;
MPRINT(EM_DIAGRAM):   end;
99459     +else do;
MPRINT(EM_DIAGRAM):   else do;
99460     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
99461     +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
99462     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
99463     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
99464     +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
99465     +   end;
MPRINT(EM_DIAGRAM):   end;
99466     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
99467     +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
99468     +   end;
MPRINT(EM_DIAGRAM):   end;
99469     +   else do;
MPRINT(EM_DIAGRAM):   else do;
99470     +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
99471     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
99472     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
99473     +   end;
MPRINT(EM_DIAGRAM):   end;
99474     +end;
MPRINT(EM_DIAGRAM):   end;
99475     +
99476     +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
99477     +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
99478     +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
99479     +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
99480     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
99481     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
99482     +end;
MPRINT(EM_DIAGRAM):   end;
99483     +else do;
MPRINT(EM_DIAGRAM):   else do;
99484     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
99485     +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
99486     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
99487     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
99488     +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
99489     +   end;
MPRINT(EM_DIAGRAM):   end;
99490     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
99491     +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
99492     +   end;
MPRINT(EM_DIAGRAM):   end;
99493     +   else do;
MPRINT(EM_DIAGRAM):   else do;
99494     +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
99495     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
99496     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
99497     +   end;
MPRINT(EM_DIAGRAM):   end;
99498     +end;
MPRINT(EM_DIAGRAM):   end;
99499     +
99500     +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
99501     +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
99502     +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
99503     +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
99504     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
99505     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
99506     +end;
MPRINT(EM_DIAGRAM):   end;
99507     +else do;
MPRINT(EM_DIAGRAM):   else do;
99508     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
99509     +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
99510     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
99511     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
99512     +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
99513     +   end;
MPRINT(EM_DIAGRAM):   end;
99514     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
99515     +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
99516     +   end;
MPRINT(EM_DIAGRAM):   end;
99517     +   else do;
MPRINT(EM_DIAGRAM):   else do;
99518     +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
99519     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
99520     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
99521     +   end;
MPRINT(EM_DIAGRAM):   end;
99522     +end;
MPRINT(EM_DIAGRAM):   end;
99523     +
99524     +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
99525     +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
99526     +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
99527     +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
99528     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
99529     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
99530     +end;
MPRINT(EM_DIAGRAM):   end;
99531     +else do;
MPRINT(EM_DIAGRAM):   else do;
99532     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
99533     +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
99534     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
99535     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
99536     +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
99537     +   end;
MPRINT(EM_DIAGRAM):   end;
99538     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
99539     +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
99540     +   end;
MPRINT(EM_DIAGRAM):   end;
99541     +   else do;
MPRINT(EM_DIAGRAM):   else do;
99542     +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
99543     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
99544     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
99545     +   end;
MPRINT(EM_DIAGRAM):   end;
99546     +end;
MPRINT(EM_DIAGRAM):   end;
99547     +
99548     +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
99549     +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
99550     +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
99551     +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
99552     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
99553     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
99554     +end;
MPRINT(EM_DIAGRAM):   end;
99555     +else do;
MPRINT(EM_DIAGRAM):   else do;
99556     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
99557     +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
99558     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
99559     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
99560     +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
99561     +   end;
MPRINT(EM_DIAGRAM):   end;
99562     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
99563     +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
99564     +   end;
MPRINT(EM_DIAGRAM):   end;
99565     +   else do;
MPRINT(EM_DIAGRAM):   else do;
99566     +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
99567     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
99568     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
99569     +   end;
MPRINT(EM_DIAGRAM):   end;
99570     +end;
MPRINT(EM_DIAGRAM):   end;
99571     +
99572     +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
99573     +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
99574     +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
99575     +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
99576     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
99577     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
99578     +end;
MPRINT(EM_DIAGRAM):   end;
99579     +else do;
MPRINT(EM_DIAGRAM):   else do;
99580     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
99581     +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
99582     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
99583     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
99584     +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
99585     +   end;
MPRINT(EM_DIAGRAM):   end;
99586     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
99587     +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
99588     +   end;
MPRINT(EM_DIAGRAM):   end;
99589     +   else do;
MPRINT(EM_DIAGRAM):   else do;
99590     +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
99591     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
99592     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
99593     +   end;
MPRINT(EM_DIAGRAM):   end;
99594     +end;
MPRINT(EM_DIAGRAM):   end;
99595     +
99596     +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
99597     +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
99598     +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
99599     +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
99600     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
99601     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
99602     +end;
MPRINT(EM_DIAGRAM):   end;
99603     +else do;
MPRINT(EM_DIAGRAM):   else do;
99604     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
99605     +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
99606     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
99607     +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
99608     +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
99609     +   end;
MPRINT(EM_DIAGRAM):   end;
99610     +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
99611     +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
99612     +   end;
MPRINT(EM_DIAGRAM):   end;
99613     +   else do;
MPRINT(EM_DIAGRAM):   else do;
99614     +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
99615     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
99616     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
99617     +   end;
MPRINT(EM_DIAGRAM):   end;
99618     +end;
MPRINT(EM_DIAGRAM):   end;
99619     +
99620     +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
99621     +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
99622     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
99623     +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
99624     +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
99625     +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
99626     +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
99627     +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
99628     +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
99629     +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
99630     +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
99631     +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
99632     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
99633     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
99634     +end;
MPRINT(EM_DIAGRAM):   end;
99635     +else do;
MPRINT(EM_DIAGRAM):   else do;
99636     +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
99637     +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
99638     +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
99639     +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
99640     +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
99641     +   end;
MPRINT(EM_DIAGRAM):   end;
99642     +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
99643     +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
99644     +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
99645     +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
99646     +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
99647     +   end;
MPRINT(EM_DIAGRAM):   end;
99648     +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
99649     +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
99650     +   end;
MPRINT(EM_DIAGRAM):   end;
99651     +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
99652     +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
99653     +   end;
MPRINT(EM_DIAGRAM):   end;
99654     +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
99655     +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
99656     +   end;
MPRINT(EM_DIAGRAM):   end;
99657     +   else do;
MPRINT(EM_DIAGRAM):   else do;
99658     +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
99659     +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
99660     +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
99661     +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
99662     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
99663     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
99664     +   end;
MPRINT(EM_DIAGRAM):   end;
99665     +end;
MPRINT(EM_DIAGRAM):   end;
99666     +
99667     +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
99668     +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
99669     +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
99670     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
99671     +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
99672     +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
99673     +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
99674     +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
99675     +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
99676     +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
99677     +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
99678     +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
99679     +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
99680     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
99681     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
99682     +end;
MPRINT(EM_DIAGRAM):   end;
99683     +else do;
MPRINT(EM_DIAGRAM):   else do;
99684     +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
99685     +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
99686     +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
99687     +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
99688     +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
99689     +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
99690     +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
99691     +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
99692     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
99693     +         end;
MPRINT(EM_DIAGRAM):   end;
99694     +         else do;
MPRINT(EM_DIAGRAM):   else do;
99695     +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
99696     +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
99697     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
99698     +            end;
MPRINT(EM_DIAGRAM):   end;
99699     +         end;
MPRINT(EM_DIAGRAM):   end;
99700     +      end;
MPRINT(EM_DIAGRAM):   end;
99701     +      else do;
MPRINT(EM_DIAGRAM):   else do;
99702     +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
99703     +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
99704     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
99705     +         end;
MPRINT(EM_DIAGRAM):   end;
99706     +      end;
MPRINT(EM_DIAGRAM):   end;
99707     +   end;
MPRINT(EM_DIAGRAM):   end;
99708     +   else do;
MPRINT(EM_DIAGRAM):   else do;
99709     +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
99710     +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
99711     +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
99712     +      end;
MPRINT(EM_DIAGRAM):   end;
99713     +      else do;
MPRINT(EM_DIAGRAM):   else do;
99714     +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
99715     +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
99716     +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
99717     +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
99718     +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
99719     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
99720     +         end;
MPRINT(EM_DIAGRAM):   end;
99721     +      end;
MPRINT(EM_DIAGRAM):   end;
99722     +   end;
MPRINT(EM_DIAGRAM):   end;
99723     +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
99724     +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
99725     +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
99726     +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
99727     +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
99728     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
99729     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
99730     +   end;
MPRINT(EM_DIAGRAM):   end;
99731     +end;
MPRINT(EM_DIAGRAM):   end;
99732     +
99733     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
99734     +*** Checking missing input Interval
99735     +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
99736     +
99737     +IF NMISS(
99738     +   AcceptedCmpTotal ,
99739     +   Age ,
99740     +   Frq ,
99741     +   Income ,
99742     +   Kidhome ,
99743     +   MntFishProducts ,
99744     +   MntFruits ,
99745     +   MntGoldProds ,
99746     +   MntSweetProducts ,
99747     +   MonthsAsCustomer ,
99748     +   NumDealsPurchases ,
99749     +   NumWebVisitsMonth ,
99750     +   RFMstat ,
99751     +   RMntFrq ,
99752     +   Recency ,
99753     +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
99754     +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
99755     +
99756     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
99757     +END;
MPRINT(EM_DIAGRAM):   END;
99758     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
99759     +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
99760     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
99761     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
99762     +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
99763     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
99764     +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
99765     +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
99766     +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
99767     +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
99768     +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
99769     +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
99770     +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
99771     +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
99772     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
99773     +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
99774     +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
99775     +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
99776     +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
99777     +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
99778     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
99779     +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
99780     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
99781     +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
99782     +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
99783     +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
99784     +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
99785     +END;
MPRINT(EM_DIAGRAM):   END;
99786     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
99787     +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
99788     +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
99789     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
99790     +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
99791     +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
99792     +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
99793     +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
99794     +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
99795     +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
99796     +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
99797     +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
99798     +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
99799     +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
99800     +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
99801     +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
99802     +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
99803     +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
99804     +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
99805     +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
99806     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
99807     +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
99808     +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
99809     +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
99810     +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
99811     +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
99812     +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
99813     +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
99814     +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
99815     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
99816     +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
99817     +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
99818     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
99819     +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
99820     +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
99821     +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
99822     +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
99823     +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
99824     +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
99825     +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
99826     +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
99827     +END;
MPRINT(EM_DIAGRAM):   END;
99828     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
99829     +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
99830     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
99831     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
99832     +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
99833     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
99834     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
99835     +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
99836     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
99837     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
99838     +   H11  =    -0.50311574684963 * S_AcceptedCmpTotal  +    -0.18985055644549 *
99839     +        S_Age  +     0.44828804873659 * S_Frq  +    -0.51280008296346 *
99840     +        S_Income  +    -0.07468461691846 * S_Kidhome
99841     +          +    -0.02817334981603 * S_MntFishProducts
99842     +          +    -0.23674836972041 * S_MntFruits  +     0.09571592531833 *
99843     +        S_MntGoldProds  +    -0.09676918994417 * S_MntSweetProducts
99844     +          +     0.11832246824115 * S_MonthsAsCustomer
99845     +          +    -0.06605281991661 * S_NumDealsPurchases
99846     +          +    -0.48924564446119 * S_NumWebVisitsMonth
99847     +          +    -0.46878579854964 * S_RFMstat  +    -0.08286830724047 *
99848     +        S_RMntFrq  +     0.72493722489034 * S_Recency
99849     +          +     0.54759769648457 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.50311574684963 * S_AcceptedCmpTotal + -0.18985055644549 * S_Age 
+ 0.44828804873659 * S_Frq + -0.51280008296346 * S_Income + -0.07468461691846 * S_Kidhome + 
-0.02817334981603 * S_MntFishProducts + -0.23674836972041 * S_MntFruits + 0.09571592531833 * 
S_MntGoldProds + -0.09676918994417 * S_MntSweetProducts + 0.11832246824115 * 
S_MonthsAsCustomer + -0.06605281991661 * S_NumDealsPurchases + -0.48924564446119 * 
S_NumWebVisitsMonth + -0.46878579854964 * S_RFMstat + -0.08286830724047 * S_RMntFrq + 
0.72493722489034 * S_Recency + 0.54759769648457 * S_Teenhome ;
99850     +   H12  =     0.27433541795855 * S_AcceptedCmpTotal  +    -0.13239293741829 *
99851     +        S_Age  +       0.297440346075 * S_Frq  +     0.60301641350325 *
99852     +        S_Income  +    -0.52629295860426 * S_Kidhome
99853     +          +    -0.09281934074994 * S_MntFishProducts
99854     +          +    -0.01139552037387 * S_MntFruits  +    -0.01724648803464 *
99855     +        S_MntGoldProds  +    -0.11213003865462 * S_MntSweetProducts
99856     +          +     0.01420877288416 * S_MonthsAsCustomer
99857     +          +     0.15753030263585 * S_NumDealsPurchases
99858     +          +     0.12839062787468 * S_NumWebVisitsMonth
99859     +          +     0.09918681531437 * S_RFMstat  +     0.28128581499392 *
99860     +        S_RMntFrq  +    -0.77555854798433 * S_Recency
99861     +          +    -0.39696436898966 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.27433541795855 * S_AcceptedCmpTotal + -0.13239293741829 * S_Age 
+ 0.297440346075 * S_Frq + 0.60301641350325 * S_Income + -0.52629295860426 * S_Kidhome + 
-0.09281934074994 * S_MntFishProducts + -0.01139552037387 * S_MntFruits + -0.01724648803464 * 
S_MntGoldProds + -0.11213003865462 * S_MntSweetProducts + 0.01420877288416 * 
S_MonthsAsCustomer + 0.15753030263585 * S_NumDealsPurchases + 0.12839062787468 * 
S_NumWebVisitsMonth + 0.09918681531437 * S_RFMstat + 0.28128581499392 * S_RMntFrq + 
-0.77555854798433 * S_Recency + -0.39696436898966 * S_Teenhome ;
99862     +   H13  =     0.03123358805476 * S_AcceptedCmpTotal  +    -0.11998608363847 *
99863     +        S_Age  +     0.08338729365626 * S_Frq  +     0.36926635699098 *
99864     +        S_Income  +     0.00460024601501 * S_Kidhome
99865     +          +    -0.02200799678674 * S_MntFishProducts
99866     +          +     0.17038795346592 * S_MntFruits  +    -0.01191054270128 *
99867     +        S_MntGoldProds  +     0.09461198228745 * S_MntSweetProducts
99868     +          +     0.11175639451728 * S_MonthsAsCustomer
99869     +          +    -0.14915044300238 * S_NumDealsPurchases
99870     +          +     -0.0217132622877 * S_NumWebVisitsMonth
99871     +          +     0.19209945631632 * S_RFMstat  +     0.27685327218371 *
99872     +        S_RMntFrq  +     -0.1114202547513 * S_Recency
99873     +          +    -0.07677627375613 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 0.03123358805476 * S_AcceptedCmpTotal + -0.11998608363847 * S_Age 
+ 0.08338729365626 * S_Frq + 0.36926635699098 * S_Income + 0.00460024601501 * S_Kidhome + 
-0.02200799678674 * S_MntFishProducts + 0.17038795346592 * S_MntFruits + -0.01191054270128 * 
S_MntGoldProds + 0.09461198228745 * S_MntSweetProducts + 0.11175639451728 * S_MonthsAsCustomer 
+ -0.14915044300238 * S_NumDealsPurchases + -0.0217132622877 * S_NumWebVisitsMonth + 
0.19209945631632 * S_RFMstat + 0.27685327218371 * S_RMntFrq + -0.1114202547513 * S_Recency + 
-0.07677627375613 * S_Teenhome ;
99874     +   H14  =      -0.510052563552 * S_AcceptedCmpTotal  +    -0.12652051241051 *
99875     +        S_Age  +    -0.42250950524778 * S_Frq  +    -0.66291360306733 *
99876     +        S_Income  +    -0.50120074528145 * S_Kidhome
99877     +          +     0.44715945861433 * S_MntFishProducts
99878     +          +     0.23552533999892 * S_MntFruits  +    -0.60812570135419 *
99879     +        S_MntGoldProds  +    -0.29436997886251 * S_MntSweetProducts
99880     +          +    -0.16226459240838 * S_MonthsAsCustomer
99881     +          +    -0.66300674579813 * S_NumDealsPurchases
99882     +          +    -0.46113723081205 * S_NumWebVisitsMonth
99883     +          +    -0.28741955047351 * S_RFMstat  +    -0.51342973736897 *
99884     +        S_RMntFrq  +     0.32948062104596 * S_Recency
99885     +          +     0.04630647814801 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = -0.510052563552 * S_AcceptedCmpTotal + -0.12652051241051 * S_Age + 
-0.42250950524778 * S_Frq + -0.66291360306733 * S_Income + -0.50120074528145 * S_Kidhome + 
0.44715945861433 * S_MntFishProducts + 0.23552533999892 * S_MntFruits + -0.60812570135419 * 
S_MntGoldProds + -0.29436997886251 * S_MntSweetProducts + -0.16226459240838 * 
S_MonthsAsCustomer + -0.66300674579813 * S_NumDealsPurchases + -0.46113723081205 * 
S_NumWebVisitsMonth + -0.28741955047351 * S_RFMstat + -0.51342973736897 * S_RMntFrq + 
0.32948062104596 * S_Recency + 0.04630647814801 * S_Teenhome ;
99886     +   H15  =    -0.05552489181258 * S_AcceptedCmpTotal  +      0.3358097664399 *
99887     +        S_Age  +     0.99860330572057 * S_Frq  +     0.33672529961967 *
99888     +        S_Income  +     0.16969714205994 * S_Kidhome
99889     +          +     0.04976308170854 * S_MntFishProducts
99890     +          +     0.17074705999537 * S_MntFruits  +    -0.14669916972196 *
99891     +        S_MntGoldProds  +    -0.09562051744533 * S_MntSweetProducts
99892     +          +     0.17484703075203 * S_MonthsAsCustomer
99893     +          +    -0.55173591551358 * S_NumDealsPurchases
99894     +          +    -0.43823357997032 * S_NumWebVisitsMonth
99895     +          +     0.35315919586696 * S_RFMstat  +    -0.19785503093343 *
99896     +        S_RMntFrq  +     0.71670167585868 * S_Recency
99897     +          +    -0.28983189748238 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = -0.05552489181258 * S_AcceptedCmpTotal + 0.3358097664399 * S_Age + 
0.99860330572057 * S_Frq + 0.33672529961967 * S_Income + 0.16969714205994 * S_Kidhome + 
0.04976308170854 * S_MntFishProducts + 0.17074705999537 * S_MntFruits + -0.14669916972196 * 
S_MntGoldProds + -0.09562051744533 * S_MntSweetProducts + 0.17484703075203 * 
S_MonthsAsCustomer + -0.55173591551358 * S_NumDealsPurchases + -0.43823357997032 * 
S_NumWebVisitsMonth + 0.35315919586696 * S_RFMstat + -0.19785503093343 * S_RMntFrq + 
0.71670167585868 * S_Recency + -0.28983189748238 * S_Teenhome ;
99898     +   H16  =     0.13586107601616 * S_AcceptedCmpTotal  +    -0.03004972131524 *
99899     +        S_Age  +     0.34607777972893 * S_Frq  +     0.04594045147698 *
99900     +        S_Income  +    -0.02355089102951 * S_Kidhome
99901     +          +     0.17666646340328 * S_MntFishProducts
99902     +          +    -0.42460885844972 * S_MntFruits  +      0.1419729562767 *
99903     +        S_MntGoldProds  +    -0.37586377717812 * S_MntSweetProducts
99904     +          +     0.13355805650034 * S_MonthsAsCustomer
99905     +          +     0.14924024487443 * S_NumDealsPurchases
99906     +          +     0.34848278731511 * S_NumWebVisitsMonth
99907     +          +     0.19641659129802 * S_RFMstat  +    -0.04454828782133 *
99908     +        S_RMntFrq  +    -0.80210797166772 * S_Recency
99909     +          +    -0.42106674037771 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = 0.13586107601616 * S_AcceptedCmpTotal + -0.03004972131524 * S_Age 
+ 0.34607777972893 * S_Frq + 0.04594045147698 * S_Income + -0.02355089102951 * S_Kidhome + 
0.17666646340328 * S_MntFishProducts + -0.42460885844972 * S_MntFruits + 0.1419729562767 * 
S_MntGoldProds + -0.37586377717812 * S_MntSweetProducts + 0.13355805650034 * 
S_MonthsAsCustomer + 0.14924024487443 * S_NumDealsPurchases + 0.34848278731511 * 
S_NumWebVisitsMonth + 0.19641659129802 * S_RFMstat + -0.04454828782133 * S_RMntFrq + 
-0.80210797166772 * S_Recency + -0.42106674037771 * S_Teenhome ;
99910     +   H11  = H11  +     0.23614129020735 * AcceptedCmp10
99911     +          +    -0.02084878775169 * AcceptedCmp20  +     0.37466381839371 *
99912     +        AcceptedCmp30  +    -0.73407018983175 * AcceptedCmp40
99913     +          +     0.56003163460043 * AcceptedCmp50  +      0.2232704545414 *
99914     +        Complain0  +    -0.47480864689786 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.23614129020735 * AcceptedCmp10 + -0.02084878775169 * 
AcceptedCmp20 + 0.37466381839371 * AcceptedCmp30 + -0.73407018983175 * AcceptedCmp40 + 
0.56003163460043 * AcceptedCmp50 + 0.2232704545414 * Complain0 + -0.47480864689786 * 
HigherEducationBinary0 ;
99915     +   H12  = H12  +    -0.27353744753102 * AcceptedCmp10
99916     +          +    -0.28444143977421 * AcceptedCmp20  +    -0.31024205224044 *
99917     +        AcceptedCmp30  +     -0.3066557522304 * AcceptedCmp40
99918     +          +      0.0549579852636 * AcceptedCmp50  +    -0.14741752806404 *
99919     +        Complain0  +     0.28934485954948 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.27353744753102 * AcceptedCmp10 + -0.28444143977421 * 
AcceptedCmp20 + -0.31024205224044 * AcceptedCmp30 + -0.3066557522304 * AcceptedCmp40 + 
0.0549579852636 * AcceptedCmp50 + -0.14741752806404 * Complain0 + 0.28934485954948 * 
HigherEducationBinary0 ;
99920     +   H13  = H13  +    -0.04693289193242 * AcceptedCmp10
99921     +          +     0.14083843787444 * AcceptedCmp20  +     0.35339306333755 *
99922     +        AcceptedCmp30  +     0.18353806616447 * AcceptedCmp40
99923     +          +      0.1789056537211 * AcceptedCmp50  +     -0.0778376167893 *
99924     +        Complain0  +    -0.42804187853556 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.04693289193242 * AcceptedCmp10 + 0.14083843787444 * 
AcceptedCmp20 + 0.35339306333755 * AcceptedCmp30 + 0.18353806616447 * AcceptedCmp40 + 
0.1789056537211 * AcceptedCmp50 + -0.0778376167893 * Complain0 + -0.42804187853556 * 
HigherEducationBinary0 ;
99925     +   H14  = H14  +     -0.1827583424217 * AcceptedCmp10
99926     +          +     -0.1489832073407 * AcceptedCmp20  +     0.19258598777521 *
99927     +        AcceptedCmp30  +    -0.09050532815681 * AcceptedCmp40
99928     +          +     0.31883627486144 * AcceptedCmp50  +    -0.45377259681397 *
99929     +        Complain0  +     0.15391344192243 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.1827583424217 * AcceptedCmp10 + -0.1489832073407 * 
AcceptedCmp20 + 0.19258598777521 * AcceptedCmp30 + -0.09050532815681 * AcceptedCmp40 + 
0.31883627486144 * AcceptedCmp50 + -0.45377259681397 * Complain0 + 0.15391344192243 * 
HigherEducationBinary0 ;
99930     +   H15  = H15  +     0.27865852917942 * AcceptedCmp10
99931     +          +       0.138287927284 * AcceptedCmp20  +     0.16317472998408 *
99932     +        AcceptedCmp30  +    -0.05372991123771 * AcceptedCmp40
99933     +          +     0.10581002090735 * AcceptedCmp50  +     -0.1352393114395 *
99934     +        Complain0  +    -0.01276168923951 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.27865852917942 * AcceptedCmp10 + 0.138287927284 * 
AcceptedCmp20 + 0.16317472998408 * AcceptedCmp30 + -0.05372991123771 * AcceptedCmp40 + 
0.10581002090735 * AcceptedCmp50 + -0.1352393114395 * Complain0 + -0.01276168923951 * 
HigherEducationBinary0 ;
99935     +   H16  = H16  +     0.54923092188785 * AcceptedCmp10
99936     +          +     0.06197589967314 * AcceptedCmp20  +    -0.16384237649268 *
99937     +        AcceptedCmp30  +     0.19164251659143 * AcceptedCmp40
99938     +          +     -0.0276972319359 * AcceptedCmp50  +     0.24239824406043 *
99939     +        Complain0  +    -0.10846507318888 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.54923092188785 * AcceptedCmp10 + 0.06197589967314 * 
AcceptedCmp20 + -0.16384237649268 * AcceptedCmp30 + 0.19164251659143 * AcceptedCmp40 + 
-0.0276972319359 * AcceptedCmp50 + 0.24239824406043 * Complain0 + -0.10846507318888 * 
HigherEducationBinary0 ;
99940     +   H11  = H11  +     0.04065157802519 * Education2n_Cycle
99941     +          +     0.07405354529938 * EducationBasic  +    -0.27041205259916 *
99942     +        EducationGraduation  +     0.19305680604676 * EducationMaster
99943     +          +    -0.26816495704747 * Marital_StatusDivorced
99944     +          +     0.29673114151649 * Marital_StatusMarried
99945     +          +    -0.41626876543099 * Marital_StatusSingle
99946     +          +     0.09243411924301 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.04065157802519 * Education2n_Cycle + 0.07405354529938 * 
EducationBasic + -0.27041205259916 * EducationGraduation + 0.19305680604676 * EducationMaster 
+ -0.26816495704747 * Marital_StatusDivorced + 0.29673114151649 * Marital_StatusMarried + 
-0.41626876543099 * Marital_StatusSingle + 0.09243411924301 * Marital_StatusTogether ;
99947     +   H12  = H12  +     0.01524024349677 * Education2n_Cycle
99948     +          +     0.15070908916981 * EducationBasic  +     0.08422316601088 *
99949     +        EducationGraduation  +     -0.1896291301388 * EducationMaster
99950     +          +     0.11744127787391 * Marital_StatusDivorced
99951     +          +    -0.63703361207291 * Marital_StatusMarried
99952     +          +     0.57071735977739 * Marital_StatusSingle
99953     +          +    -0.68611342778218 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.01524024349677 * Education2n_Cycle + 0.15070908916981 * 
EducationBasic + 0.08422316601088 * EducationGraduation + -0.1896291301388 * EducationMaster + 
0.11744127787391 * Marital_StatusDivorced + -0.63703361207291 * Marital_StatusMarried + 
0.57071735977739 * Marital_StatusSingle + -0.68611342778218 * Marital_StatusTogether ;
99954     +   H13  = H13  +     0.09605604995794 * Education2n_Cycle
99955     +          +    -0.04349642322783 * EducationBasic  +    -0.11196808839685 *
99956     +        EducationGraduation  +    -0.01261925630364 * EducationMaster
99957     +          +     -0.1701911327485 * Marital_StatusDivorced
99958     +          +     0.22770672854155 * Marital_StatusMarried
99959     +          +    -0.00691671702288 * Marital_StatusSingle
99960     +          +       0.236686912143 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.09605604995794 * Education2n_Cycle + -0.04349642322783 * 
EducationBasic + -0.11196808839685 * EducationGraduation + -0.01261925630364 * EducationMaster 
+ -0.1701911327485 * Marital_StatusDivorced + 0.22770672854155 * Marital_StatusMarried + 
-0.00691671702288 * Marital_StatusSingle + 0.236686912143 * Marital_StatusTogether ;
99961     +   H14  = H14  +     0.10857873061564 * Education2n_Cycle
99962     +          +     0.16814453951395 * EducationBasic  +    -0.34874327957426 *
99963     +        EducationGraduation  +    -0.25193270521624 * EducationMaster
99964     +          +    -0.15403542879027 * Marital_StatusDivorced
99965     +          +     0.02652360752468 * Marital_StatusMarried
99966     +          +    -0.10723298292119 * Marital_StatusSingle
99967     +          +     0.11548543150405 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.10857873061564 * Education2n_Cycle + 0.16814453951395 * 
EducationBasic + -0.34874327957426 * EducationGraduation + -0.25193270521624 * EducationMaster 
+ -0.15403542879027 * Marital_StatusDivorced + 0.02652360752468 * Marital_StatusMarried + 
-0.10723298292119 * Marital_StatusSingle + 0.11548543150405 * Marital_StatusTogether ;
99968     +   H15  = H15  +     0.15880112810083 * Education2n_Cycle
99969     +          +     0.24466813535709 * EducationBasic  +    -0.03905452635368 *
99970     +        EducationGraduation  +    -0.24152136481937 * EducationMaster
99971     +          +    -0.00204417192532 * Marital_StatusDivorced
99972     +          +    -0.16973417192262 * Marital_StatusMarried
99973     +          +     0.23027366297507 * Marital_StatusSingle
99974     +          +     0.08101453661219 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.15880112810083 * Education2n_Cycle + 0.24466813535709 * 
EducationBasic + -0.03905452635368 * EducationGraduation + -0.24152136481937 * EducationMaster 
+ -0.00204417192532 * Marital_StatusDivorced + -0.16973417192262 * Marital_StatusMarried + 
0.23027366297507 * Marital_StatusSingle + 0.08101453661219 * Marital_StatusTogether ;
99975     +   H16  = H16  +     0.06080074855433 * Education2n_Cycle
99976     +          +     0.05712541606796 * EducationBasic  +     0.08565135130429 *
99977     +        EducationGraduation  +    -0.35693831321015 * EducationMaster
99978     +          +     0.23360275712164 * Marital_StatusDivorced
99979     +          +    -0.12276379115508 * Marital_StatusMarried
99980     +          +     0.25482197877469 * Marital_StatusSingle
99981     +          +    -0.38122499701658 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.06080074855433 * Education2n_Cycle + 0.05712541606796 * 
EducationBasic + 0.08565135130429 * EducationGraduation + -0.35693831321015 * EducationMaster 
+ 0.23360275712164 * Marital_StatusDivorced + -0.12276379115508 * Marital_StatusMarried + 
0.25482197877469 * Marital_StatusSingle + -0.38122499701658 * Marital_StatusTogether ;
99982     +   H11  =    -1.45785613717334 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.45785613717334 + H11 ;
99983     +   H12  =    -1.39199534011753 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -1.39199534011753 + H12 ;
99984     +   H13  =     2.43348807391253 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 2.43348807391253 + H13 ;
99985     +   H14  =    -0.82674437249292 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -0.82674437249292 + H14 ;
99986     +   H15  =     1.84262829639962 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 1.84262829639962 + H15 ;
99987     +   H16  =     1.40892711992493 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = 1.40892711992493 + H16 ;
99988     +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
99989     +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
99990     +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
99991     +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
99992     +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
99993     +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
99994     +END;
MPRINT(EM_DIAGRAM):   END;
99995     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
99996     +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
99997     +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
99998     +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
99999     +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
100000    +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
100001    +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
100002    +END;
MPRINT(EM_DIAGRAM):   END;
100003    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
100004    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
100005    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
100006    +
100007    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
100008    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
100009    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
100010    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
100011    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
100012    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
100013    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
100014    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
100015    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
100016    +end;
MPRINT(EM_DIAGRAM):   end;
100017    +else do;
MPRINT(EM_DIAGRAM):   else do;
100018    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
100019    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
100020    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
100021    +   end;
MPRINT(EM_DIAGRAM):   end;
100022    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
100023    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
100024    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
100025    +   end;
MPRINT(EM_DIAGRAM):   end;
100026    +   else do;
MPRINT(EM_DIAGRAM):   else do;
100027    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
100028    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
100029    +   end;
MPRINT(EM_DIAGRAM):   end;
100030    +end;
MPRINT(EM_DIAGRAM):   end;
100031    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
100032    +   P_DepVar1  =    -2.98548396417337 * H11  +     3.55440982243177 * H12
100033    +          +    -1.98442501061115 * H13  +    -2.67879549563082 * H14
100034    +          +    -2.68634609959794 * H15  +     3.13238014605319 * H16 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.98548396417337 * H11 + 3.55440982243177 * H12 + 
-1.98442501061115 * H13 + -2.67879549563082 * H14 + -2.68634609959794 * H15 + 3.13238014605319 
* H16 ;
100035    +   P_DepVar1  =    -2.49443575387204 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.49443575387204 + P_DepVar1 ;
100036    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
100037    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
100038    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
100039    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
100040    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
100041    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
100042    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
100043    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
100044    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
100045    +END;
MPRINT(EM_DIAGRAM):   END;
100046    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
100047    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
100048    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
100049    +END;
MPRINT(EM_DIAGRAM):   END;
100050    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
100051    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
100052    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
100053    +END;
MPRINT(EM_DIAGRAM):   END;
100054    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
100055    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
100056    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
100057    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
100058    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
100059    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
100060    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
100061    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
100062    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
100063    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
100064    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
100065    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
100066    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
100067    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
100068    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
100069    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
100070    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
100071    +END;
MPRINT(EM_DIAGRAM):   END;
100072    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
100073    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
100074    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
100075    +drop
100076    +H11
100077    +H12
100078    +H13
100079    +H14
100080    +H15
100081    +H16
100082    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 ;
100083    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
100084    +* Renaming variables for Neural41;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural41;
100085    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
100086    +* Renaming Posterior variables for Neural41;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural41;
100087    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
100088    +drop Neural41_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural41_P_DepVar1;
100089    +Neural41_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural41_P_DepVar1 = P_DepVar1;
100090    +drop Neural41_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural41_P_DepVar0;
100091    +Neural41_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural41_P_DepVar0 = P_DepVar0;
100092    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
100093    +* Renaming _WARN_ variable for Neural41;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural41;
100094    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
100095    +length Neural41_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural41_WARN_ $4;
100096    +drop Neural41_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural41_WARN_;
100097    +Neural41_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural41_WARN_ = _WARN_;
100098    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
100099    +* Ensmbl23: Average Posteriors of 5 models;
MPRINT(EM_DIAGRAM):   * Ensmbl23: Average Posteriors of 5 models;
100100    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
100101    +P_DepVar1 = (
100102    +Neural40_P_DepVar1 +
100103    +AutoNeural39_P_DepVar1 +
100104    +AutoNeural38_P_DepVar1 +
100105    +Neural39_P_DepVar1 +
100106    +Neural41_P_DepVar1
100107    +)/5;
MPRINT(EM_DIAGRAM):   P_DepVar1 = ( Neural40_P_DepVar1 + AutoNeural39_P_DepVar1 + 
AutoNeural38_P_DepVar1 + Neural39_P_DepVar1 + Neural41_P_DepVar1 )/5;
100108    +P_DepVar0 = (
100109    +Neural40_P_DepVar0 +
100110    +AutoNeural39_P_DepVar0 +
100111    +AutoNeural38_P_DepVar0 +
100112    +Neural39_P_DepVar0 +
100113    +Neural41_P_DepVar0
100114    +)/5;
MPRINT(EM_DIAGRAM):   P_DepVar0 = ( Neural40_P_DepVar0 + AutoNeural39_P_DepVar0 + 
AutoNeural38_P_DepVar0 + Neural39_P_DepVar0 + Neural41_P_DepVar0 )/5;
100115    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
100116    +* Ensmbl23: Computing Classification Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl23: Computing Classification Vars;
100117    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
100118    +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set. 
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the 
         length of a character variable.
100119    +label I_DepVar = 'Into: DepVar';
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar';
100120    +length _format $200;
MPRINT(EM_DIAGRAM):   length _format $200;
100121    +drop _format;
MPRINT(EM_DIAGRAM):   drop _format;
100122    +_format= ' ';
MPRINT(EM_DIAGRAM):   _format= ' ';
100123    +_p_= 0;
MPRINT(EM_DIAGRAM):   _p_= 0;
100124    +drop _p_;
MPRINT(EM_DIAGRAM):   drop _p_;
100125    +if P_DepVar1 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _p_ then do;
100126    +_p_= P_DepVar1;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar1;
100127    +_format= '1';
MPRINT(EM_DIAGRAM):   _format= '1';
100128    +end;
MPRINT(EM_DIAGRAM):   end;
100129    +if P_DepVar0 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _p_ then do;
100130    +_p_= P_DepVar0;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar0;
100131    +_format= '0';
MPRINT(EM_DIAGRAM):   _format= '0';
100132    +end;
MPRINT(EM_DIAGRAM):   end;
100133    +%DMNORMCP(_format,I_DepVar);
MPRINT(DMNORMCP):   I_DepVar=dmnorm(_format,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
100134    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
100135    +* Ensmbl23: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   * Ensmbl23: Producing Unformatted variable;
100136    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
100137    +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
100138    +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
100139    +else
100140    +if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
100141    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
100142    +* Ensmbl23: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl23: Computing _WARN_ Variable;
100143    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
100144    +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
100145    +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
100146    +_WARN_ = '';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
100147    +if index(NEURAL40_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
100147   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL40_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
100148    +if index(NEURAL40_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
100148   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL40_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
100149    +if index(NEURAL40_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
100149   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL40_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
100150    +if index(NEURAL40_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
100150   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL40_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
100151    +if index(AUTONEURAL39_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
100151   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL39_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
100152    +if index(AUTONEURAL39_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
100152   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL39_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
100153    +if index(AUTONEURAL39_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
100153   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL39_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
100154    +if index(AUTONEURAL39_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
100154   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL39_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
100155    +if index(AUTONEURAL38_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
100155   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL38_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
100156    +if index(AUTONEURAL38_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
100156   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL38_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
100157    +if index(AUTONEURAL38_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
100157   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL38_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
100158    +if index(AUTONEURAL38_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
100158   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL38_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
100159    +if index(NEURAL39_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
100159   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL39_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
100160    +if index(NEURAL39_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
100160   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL39_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
100161    +if index(NEURAL39_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
100161   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL39_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
100162    +if index(NEURAL39_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
100162   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL39_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
100163    +if index(NEURAL41_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
100163   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL41_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
100164    +if index(NEURAL41_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
100164   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL41_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
100165    +if index(NEURAL41_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
100165   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL41_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
100166    +if index(NEURAL41_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
100166   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL41_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
100167    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
100168    +* Ensmbl23: Computing Residual Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl23: Computing Residual Vars;
100169    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
100170    +if
100171    +F_DepVar NE '1'
100172    +AND F_DepVar NE '0'
100173    +then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE '1' AND F_DepVar NE '0' then do;
100174    +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
100175    +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
100176    +end;
MPRINT(EM_DIAGRAM):   end;
100177    +else do;
MPRINT(EM_DIAGRAM):   else do;
100178    +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
100179    +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
100180    +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
100181    +WHEN('1') R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN('1') R_DepVar1 = R_DepVar1 +1;
100182    +WHEN('0') R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN('0') R_DepVar0 = R_DepVar0 +1;
100183    +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
100184    +END;
MPRINT(EM_DIAGRAM):   END;
100185    +END;
MPRINT(EM_DIAGRAM):   END;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
100186     run;

NOTE: DATA STEP view saved on file EMWS8.ENSMBL23_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.NEURAL40_VALIDATE.VIEW used (Total process time):
      real time           0.11 seconds
      cpu time            0.12 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.13 seconds
      cpu time            0.14 seconds
      

MPRINT(EM_DIAGRAM):   quit;
100187     quit;
100188     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
MPRINT(EM_DIAGRAM):   
MPRINT(CALFITSTATSNOMINAL):   data _tmpTrainFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_ 
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.Ensmbl23_TRAIN end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_ 
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Train: Target Variable" _NOBS_= "Train: Sum of 
Frequencies" _SSE_= "Train: Sum of Squared Errors" _MAX_= "Train: Maximum Absolute Error" 
_DIV_ = "Train: Divisor for ASE" _WRONG_= "Train: Number of Wrong Classifications" _DISF_= 
"Train: Frequency of Classified Cases" _MISC_= "Train: Misclassification Rate" _ASE_ = "Train: 
Average Squared Error" _RASE_ = "Train: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_ 
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl23_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set _tmpTrainFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   
MPRINT(CALFITSTATSNOMINAL):   data _tmpValidFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_ 
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.Ensmbl23_VALIDATE end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_ 
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Valid: Target Variable" _NOBS_= "Valid: Sum of 
Frequencies" _SSE_= "Valid: Sum of Squared Errors" _MAX_= "Valid: Maximum Absolute Error" 
_DIV_ = "Valid: Divisor for ASE" _WRONG_= "Valid: Number of Wrong Classifications" _DISF_= 
"Valid: Frequency of Classified Cases" _MISC_= "Valid: Misclassification Rate" _ASE_ = "Valid: 
Average Squared Error" _RASE_ = "Valid: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_ 
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _tmpdata_(DROP= TARGET);
MPRINT(EM_DIAGRAM):   set _tmpValidFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _tmpdata_;
MPRINT(EM_DIAGRAM):   set _tmpdata_;
MPRINT(EM_DIAGRAM):   rename _ASE_=_VASE_;
MPRINT(EM_DIAGRAM):   rename _DIV_=_VDIV_;
MPRINT(EM_DIAGRAM):   rename _MAX_=_VMAX_;
MPRINT(EM_DIAGRAM):   rename _NOBS_=_VNOBS_;
MPRINT(EM_DIAGRAM):   rename _RASE_=_VRASE_;
MPRINT(EM_DIAGRAM):   rename _SSE_=_VSSE_;
MPRINT(EM_DIAGRAM):   rename _DISF_=_VDISF_;
MPRINT(EM_DIAGRAM):   rename _MISC_=_VMISC_;
MPRINT(EM_DIAGRAM):   rename _WRONG_=_VWRONG_;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl23_EMOUTFIT;
MPRINT(EM_DIAGRAM):   merge EMWS8.Ensmbl23_EMOUTFIT _tmpdata_;
MPRINT(EM_DIAGRAM):   run;
100248     filename _pref
100248   ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural40\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural40\EMPUBLISHSCORE.sas";
100249     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
100250     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural40\EMPUBLISHSCORE.sas.
100251    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
100252    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
100253    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
100254    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
100255    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
100256    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
100257    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
100258    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
100259    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
100260    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
100261    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
100262    +LENGTH _WARN_ $4
100263    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
100264    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
100265    +
100266    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
100267    +
100268    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
100269    +
100270    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
100271    +
100272    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
100273    +
100274    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
100275    +
100276    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
100277    +
100278    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
100279    +
100280    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
100281    +
100282    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
100283    +
100284    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
100285    +
100286    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
100287    +
100288    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
100289    +
100290    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
100291    +
100292    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
100293    +
100294    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
100295    +
100296    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
100297    +
100298    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
100299    +
100300    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
100301    +
100302    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
100303    +
100304    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
100305    +
100306    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
100307    +
100308    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
100309    +
100310    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
100311    +
100312    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
100313    +
100314    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
100315    +
100316    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
100317    +
100318    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
100319    +
100320    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
100321    +
100322    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
100323    +
100324    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
100325    +
100326    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
100327    +
100328    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
100329    +
100330    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
100331    +
100332    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
100333    +
100334    +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
100335    +
100336    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
100337    +
100338    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
100339    +
100340    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
100341    +
100342    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
100343    +
100344    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
100345    +
100346    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
100347    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
100348    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
100349    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
100350    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
100351    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
100352    +end;
MPRINT(EM_DIAGRAM):   end;
100353    +else do;
MPRINT(EM_DIAGRAM):   else do;
100354    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
100355    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
100356    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
100357    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
100358    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
100359    +   end;
MPRINT(EM_DIAGRAM):   end;
100360    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
100361    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
100362    +   end;
MPRINT(EM_DIAGRAM):   end;
100363    +   else do;
MPRINT(EM_DIAGRAM):   else do;
100364    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
100365    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
100366    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
100367    +   end;
MPRINT(EM_DIAGRAM):   end;
100368    +end;
MPRINT(EM_DIAGRAM):   end;
100369    +
100370    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
100371    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
100372    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
100373    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
100374    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
100375    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
100376    +end;
MPRINT(EM_DIAGRAM):   end;
100377    +else do;
MPRINT(EM_DIAGRAM):   else do;
100378    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
100379    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
100380    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
100381    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
100382    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
100383    +   end;
MPRINT(EM_DIAGRAM):   end;
100384    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
100385    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
100386    +   end;
MPRINT(EM_DIAGRAM):   end;
100387    +   else do;
MPRINT(EM_DIAGRAM):   else do;
100388    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
100389    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
100390    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
100391    +   end;
MPRINT(EM_DIAGRAM):   end;
100392    +end;
MPRINT(EM_DIAGRAM):   end;
100393    +
100394    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
100395    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
100396    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
100397    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
100398    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
100399    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
100400    +end;
MPRINT(EM_DIAGRAM):   end;
100401    +else do;
MPRINT(EM_DIAGRAM):   else do;
100402    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
100403    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
100404    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
100405    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
100406    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
100407    +   end;
MPRINT(EM_DIAGRAM):   end;
100408    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
100409    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
100410    +   end;
MPRINT(EM_DIAGRAM):   end;
100411    +   else do;
MPRINT(EM_DIAGRAM):   else do;
100412    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
100413    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
100414    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
100415    +   end;
MPRINT(EM_DIAGRAM):   end;
100416    +end;
MPRINT(EM_DIAGRAM):   end;
100417    +
100418    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
100419    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
100420    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
100421    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
100422    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
100423    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
100424    +end;
MPRINT(EM_DIAGRAM):   end;
100425    +else do;
MPRINT(EM_DIAGRAM):   else do;
100426    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
100427    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
100428    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
100429    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
100430    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
100431    +   end;
MPRINT(EM_DIAGRAM):   end;
100432    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
100433    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
100434    +   end;
MPRINT(EM_DIAGRAM):   end;
100435    +   else do;
MPRINT(EM_DIAGRAM):   else do;
100436    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
100437    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
100438    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
100439    +   end;
MPRINT(EM_DIAGRAM):   end;
100440    +end;
MPRINT(EM_DIAGRAM):   end;
100441    +
100442    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
100443    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
100444    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
100445    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
100446    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
100447    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
100448    +end;
MPRINT(EM_DIAGRAM):   end;
100449    +else do;
MPRINT(EM_DIAGRAM):   else do;
100450    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
100451    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
100452    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
100453    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
100454    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
100455    +   end;
MPRINT(EM_DIAGRAM):   end;
100456    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
100457    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
100458    +   end;
MPRINT(EM_DIAGRAM):   end;
100459    +   else do;
MPRINT(EM_DIAGRAM):   else do;
100460    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
100461    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
100462    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
100463    +   end;
MPRINT(EM_DIAGRAM):   end;
100464    +end;
MPRINT(EM_DIAGRAM):   end;
100465    +
100466    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
100467    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
100468    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
100469    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
100470    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
100471    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
100472    +end;
MPRINT(EM_DIAGRAM):   end;
100473    +else do;
MPRINT(EM_DIAGRAM):   else do;
100474    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
100475    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
100476    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
100477    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
100478    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
100479    +   end;
MPRINT(EM_DIAGRAM):   end;
100480    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
100481    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
100482    +   end;
MPRINT(EM_DIAGRAM):   end;
100483    +   else do;
MPRINT(EM_DIAGRAM):   else do;
100484    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
100485    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
100486    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
100487    +   end;
MPRINT(EM_DIAGRAM):   end;
100488    +end;
MPRINT(EM_DIAGRAM):   end;
100489    +
100490    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
100491    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
100492    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
100493    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
100494    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
100495    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
100496    +end;
MPRINT(EM_DIAGRAM):   end;
100497    +else do;
MPRINT(EM_DIAGRAM):   else do;
100498    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
100499    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
100500    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
100501    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
100502    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
100503    +   end;
MPRINT(EM_DIAGRAM):   end;
100504    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
100505    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
100506    +   end;
MPRINT(EM_DIAGRAM):   end;
100507    +   else do;
MPRINT(EM_DIAGRAM):   else do;
100508    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
100509    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
100510    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
100511    +   end;
MPRINT(EM_DIAGRAM):   end;
100512    +end;
MPRINT(EM_DIAGRAM):   end;
100513    +
100514    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
100515    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
100516    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
100517    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
100518    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
100519    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
100520    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
100521    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
100522    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
100523    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
100524    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
100525    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
100526    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
100527    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
100528    +end;
MPRINT(EM_DIAGRAM):   end;
100529    +else do;
MPRINT(EM_DIAGRAM):   else do;
100530    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
100531    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
100532    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
100533    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
100534    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
100535    +   end;
MPRINT(EM_DIAGRAM):   end;
100536    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
100537    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
100538    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
100539    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
100540    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
100541    +   end;
MPRINT(EM_DIAGRAM):   end;
100542    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
100543    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
100544    +   end;
MPRINT(EM_DIAGRAM):   end;
100545    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
100546    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
100547    +   end;
MPRINT(EM_DIAGRAM):   end;
100548    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
100549    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
100550    +   end;
MPRINT(EM_DIAGRAM):   end;
100551    +   else do;
MPRINT(EM_DIAGRAM):   else do;
100552    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
100553    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
100554    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
100555    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
100556    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
100557    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
100558    +   end;
MPRINT(EM_DIAGRAM):   end;
100559    +end;
MPRINT(EM_DIAGRAM):   end;
100560    +
100561    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
100562    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
100563    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
100564    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
100565    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
100566    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
100567    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
100568    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
100569    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
100570    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
100571    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
100572    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
100573    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
100574    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
100575    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
100576    +end;
MPRINT(EM_DIAGRAM):   end;
100577    +else do;
MPRINT(EM_DIAGRAM):   else do;
100578    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
100579    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
100580    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
100581    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
100582    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
100583    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
100584    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
100585    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
100586    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
100587    +         end;
MPRINT(EM_DIAGRAM):   end;
100588    +         else do;
MPRINT(EM_DIAGRAM):   else do;
100589    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
100590    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
100591    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
100592    +            end;
MPRINT(EM_DIAGRAM):   end;
100593    +         end;
MPRINT(EM_DIAGRAM):   end;
100594    +      end;
MPRINT(EM_DIAGRAM):   end;
100595    +      else do;
MPRINT(EM_DIAGRAM):   else do;
100596    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
100597    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
100598    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
100599    +         end;
MPRINT(EM_DIAGRAM):   end;
100600    +      end;
MPRINT(EM_DIAGRAM):   end;
100601    +   end;
MPRINT(EM_DIAGRAM):   end;
100602    +   else do;
MPRINT(EM_DIAGRAM):   else do;
100603    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
100604    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
100605    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
100606    +      end;
MPRINT(EM_DIAGRAM):   end;
100607    +      else do;
MPRINT(EM_DIAGRAM):   else do;
100608    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
100609    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
100610    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
100611    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
100612    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
100613    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
100614    +         end;
MPRINT(EM_DIAGRAM):   end;
100615    +      end;
MPRINT(EM_DIAGRAM):   end;
100616    +   end;
MPRINT(EM_DIAGRAM):   end;
100617    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
100618    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
100619    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
100620    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
100621    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
100622    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
100623    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
100624    +   end;
MPRINT(EM_DIAGRAM):   end;
100625    +end;
MPRINT(EM_DIAGRAM):   end;
100626    +
100627    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
100628    +*** Checking missing input Interval
100629    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
100630    +
100631    +IF NMISS(
100632    +   AcceptedCmpTotal ,
100633    +   Age ,
100634    +   Frq ,
100635    +   Income ,
100636    +   Kidhome ,
100637    +   MntFishProducts ,
100638    +   MntFruits ,
100639    +   MntGoldProds ,
100640    +   MntSweetProducts ,
100641    +   MonthsAsCustomer ,
100642    +   NumDealsPurchases ,
100643    +   NumWebVisitsMonth ,
100644    +   RFMstat ,
100645    +   RMntFrq ,
100646    +   Recency ,
100647    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
100648    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
100649    +
100650    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
100651    +END;
MPRINT(EM_DIAGRAM):   END;
100652    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
100653    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
100654    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
100655    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
100656    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
100657    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
100658    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
100659    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
100660    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
100661    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
100662    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
100663    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
100664    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
100665    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
100666    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
100667    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
100668    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
100669    +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
100670    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
100671    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
100672    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
100673    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
100674    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
100675    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
100676    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
100677    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
100678    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
100679    +END;
MPRINT(EM_DIAGRAM):   END;
100680    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
100681    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
100682    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
100683    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
100684    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
100685    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
100686    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
100687    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
100688    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
100689    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
100690    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
100691    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
100692    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
100693    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
100694    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
100695    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
100696    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
100697    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
100698    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
100699    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
100700    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
100701    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
100702    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
100703    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
100704    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
100705    +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
100706    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
100707    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
100708    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
100709    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
100710    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
100711    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
100712    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
100713    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
100714    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
100715    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
100716    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
100717    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
100718    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
100719    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
100720    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
100721    +END;
MPRINT(EM_DIAGRAM):   END;
100722    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
100723    +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
100724    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
100725    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
100726    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
100727    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
100728    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
100729    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
100730    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
100731    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
100732    +   H11  =     0.00871038651131 * S_AcceptedCmpTotal  +     0.04885111887799 *
100733    +        S_Age  +    -0.16081720955101 * S_Frq  +    -0.81673231415398 *
100734    +        S_Income  +     0.39760289149752 * S_Kidhome
100735    +          +     -0.0376693415484 * S_MntFishProducts
100736    +          +     0.01707556953741 * S_MntFruits  +     0.03640992016126 *
100737    +        S_MntGoldProds  +     0.18721014378487 * S_MntSweetProducts
100738    +          +    -0.13043754404228 * S_MonthsAsCustomer
100739    +          +     -0.0139146653349 * S_NumDealsPurchases
100740    +          +    -0.01539820220757 * S_NumWebVisitsMonth
100741    +          +     0.00494819481975 * S_RFMstat  +    -0.22517942530642 *
100742    +        S_RMntFrq  +     0.55149605442396 * S_Recency
100743    +          +     0.54614592562743 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.00871038651131 * S_AcceptedCmpTotal + 0.04885111887799 * S_Age + 
-0.16081720955101 * S_Frq + -0.81673231415398 * S_Income + 0.39760289149752 * S_Kidhome + 
-0.0376693415484 * S_MntFishProducts + 0.01707556953741 * S_MntFruits + 0.03640992016126 * 
S_MntGoldProds + 0.18721014378487 * S_MntSweetProducts + -0.13043754404228 * 
S_MonthsAsCustomer + -0.0139146653349 * S_NumDealsPurchases + -0.01539820220757 * 
S_NumWebVisitsMonth + 0.00494819481975 * S_RFMstat + -0.22517942530642 * S_RMntFrq + 
0.55149605442396 * S_Recency + 0.54614592562743 * S_Teenhome ;
100744    +   H12  =    -0.31218916782956 * S_AcceptedCmpTotal  +    -0.13577174745207 *
100745    +        S_Age  +     -0.1133596721701 * S_Frq  +    -0.03250630326063 *
100746    +        S_Income  +     0.31208673256073 * S_Kidhome
100747    +          +    -0.04911763008195 * S_MntFishProducts
100748    +          +     0.04440357574827 * S_MntFruits  +     0.18064625439163 *
100749    +        S_MntGoldProds  +     0.34124097901137 * S_MntSweetProducts
100750    +          +    -0.48577934340503 * S_MonthsAsCustomer
100751    +          +     0.31218334237091 * S_NumDealsPurchases
100752    +          +     0.24212805498377 * S_NumWebVisitsMonth
100753    +          +     0.30439494800184 * S_RFMstat  +    -0.01845944589462 *
100754    +        S_RMntFrq  +    -0.48513476805321 * S_Recency
100755    +          +    -0.32721006241811 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.31218916782956 * S_AcceptedCmpTotal + -0.13577174745207 * S_Age 
+ -0.1133596721701 * S_Frq + -0.03250630326063 * S_Income + 0.31208673256073 * S_Kidhome + 
-0.04911763008195 * S_MntFishProducts + 0.04440357574827 * S_MntFruits + 0.18064625439163 * 
S_MntGoldProds + 0.34124097901137 * S_MntSweetProducts + -0.48577934340503 * 
S_MonthsAsCustomer + 0.31218334237091 * S_NumDealsPurchases + 0.24212805498377 * 
S_NumWebVisitsMonth + 0.30439494800184 * S_RFMstat + -0.01845944589462 * S_RMntFrq + 
-0.48513476805321 * S_Recency + -0.32721006241811 * S_Teenhome ;
100756    +   H13  =    -0.68076549765273 * S_AcceptedCmpTotal  +    -0.14510411148941 *
100757    +        S_Age  +     -0.3233004374436 * S_Frq  +    -0.42499945066724 *
100758    +        S_Income  +    -0.48748003518551 * S_Kidhome
100759    +          +     0.15434683428908 * S_MntFishProducts
100760    +          +     0.06482294164983 * S_MntFruits  +    -0.54308686262134 *
100761    +        S_MntGoldProds  +    -0.03954494482452 * S_MntSweetProducts
100762    +          +    -0.07405705160744 * S_MonthsAsCustomer
100763    +          +    -0.44979778263337 * S_NumDealsPurchases
100764    +          +    -0.51422673599958 * S_NumWebVisitsMonth
100765    +          +    -0.31727878849334 * S_RFMstat  +    -0.49659927360573 *
100766    +        S_RMntFrq  +     0.79850779605341 * S_Recency
100767    +          +    -0.01021777395977 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.68076549765273 * S_AcceptedCmpTotal + -0.14510411148941 * S_Age 
+ -0.3233004374436 * S_Frq + -0.42499945066724 * S_Income + -0.48748003518551 * S_Kidhome + 
0.15434683428908 * S_MntFishProducts + 0.06482294164983 * S_MntFruits + -0.54308686262134 * 
S_MntGoldProds + -0.03954494482452 * S_MntSweetProducts + -0.07405705160744 * 
S_MonthsAsCustomer + -0.44979778263337 * S_NumDealsPurchases + -0.51422673599958 * 
S_NumWebVisitsMonth + -0.31727878849334 * S_RFMstat + -0.49659927360573 * S_RMntFrq + 
0.79850779605341 * S_Recency + -0.01021777395977 * S_Teenhome ;
100768    +   H14  =     0.38365136681667 * S_AcceptedCmpTotal  +     0.07084748712672 *
100769    +        S_Age  +     0.07185932608666 * S_Frq  +     0.14505870102604 *
100770    +        S_Income  +    -0.62401744170985 * S_Kidhome
100771    +          +    -0.08499883212951 * S_MntFishProducts
100772    +          +     -0.1648853454448 * S_MntFruits  +    -0.00355780886042 *
100773    +        S_MntGoldProds  +    -0.29925551636086 * S_MntSweetProducts
100774    +          +    -0.04051431518694 * S_MonthsAsCustomer
100775    +          +     0.00788125797776 * S_NumDealsPurchases
100776    +          +     0.59495434076477 * S_NumWebVisitsMonth
100777    +          +     0.24302483463729 * S_RFMstat  +    -0.16358266655642 *
100778    +        S_RMntFrq  +    -0.73053231334164 * S_Recency
100779    +          +    -0.33321827557738 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 0.38365136681667 * S_AcceptedCmpTotal + 0.07084748712672 * S_Age + 
0.07185932608666 * S_Frq + 0.14505870102604 * S_Income + -0.62401744170985 * S_Kidhome + 
-0.08499883212951 * S_MntFishProducts + -0.1648853454448 * S_MntFruits + -0.00355780886042 * 
S_MntGoldProds + -0.29925551636086 * S_MntSweetProducts + -0.04051431518694 * 
S_MonthsAsCustomer + 0.00788125797776 * S_NumDealsPurchases + 0.59495434076477 * 
S_NumWebVisitsMonth + 0.24302483463729 * S_RFMstat + -0.16358266655642 * S_RMntFrq + 
-0.73053231334164 * S_Recency + -0.33321827557738 * S_Teenhome ;
100780    +   H15  =    -0.33763603932626 * S_AcceptedCmpTotal  +     0.16015390350682 *
100781    +        S_Age  +     0.93534536415494 * S_Frq  +     0.26932392970726 *
100782    +        S_Income  +     -0.0256051183156 * S_Kidhome
100783    +          +    -0.15661247042419 * S_MntFishProducts
100784    +          +     0.05583315238736 * S_MntFruits  +     0.02103897411055 *
100785    +        S_MntGoldProds  +     -0.1231125389085 * S_MntSweetProducts
100786    +          +     0.03994503424293 * S_MonthsAsCustomer
100787    +          +    -0.53734193208154 * S_NumDealsPurchases
100788    +          +    -0.58547802324835 * S_NumWebVisitsMonth
100789    +          +    -0.06088682875304 * S_RFMstat  +    -0.16953747051887 *
100790    +        S_RMntFrq  +     0.66048924026365 * S_Recency
100791    +          +    -0.18125808371879 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = -0.33763603932626 * S_AcceptedCmpTotal + 0.16015390350682 * S_Age 
+ 0.93534536415494 * S_Frq + 0.26932392970726 * S_Income + -0.0256051183156 * S_Kidhome + 
-0.15661247042419 * S_MntFishProducts + 0.05583315238736 * S_MntFruits + 0.02103897411055 * 
S_MntGoldProds + -0.1231125389085 * S_MntSweetProducts + 0.03994503424293 * S_MonthsAsCustomer 
+ -0.53734193208154 * S_NumDealsPurchases + -0.58547802324835 * S_NumWebVisitsMonth + 
-0.06088682875304 * S_RFMstat + -0.16953747051887 * S_RMntFrq + 0.66048924026365 * S_Recency + 
-0.18125808371879 * S_Teenhome ;
100792    +   H11  = H11  +     0.32214548124302 * AcceptedCmp10
100793    +          +     0.39647739988372 * AcceptedCmp20  +     0.31108042021128 *
100794    +        AcceptedCmp30  +     0.29806974935147 * AcceptedCmp40
100795    +          +     0.22776887209675 * AcceptedCmp50  +     0.15240663199135 *
100796    +        Complain0  +    -0.29371842867452 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.32214548124302 * AcceptedCmp10 + 0.39647739988372 * 
AcceptedCmp20 + 0.31108042021128 * AcceptedCmp30 + 0.29806974935147 * AcceptedCmp40 + 
0.22776887209675 * AcceptedCmp50 + 0.15240663199135 * Complain0 + -0.29371842867452 * 
HigherEducationBinary0 ;
100797    +   H12  = H12  +     0.16508910764131 * AcceptedCmp10
100798    +          +    -0.01591698903562 * AcceptedCmp20  +    -0.18749319390831 *
100799    +        AcceptedCmp30  +     0.10267845517937 * AcceptedCmp40
100800    +          +     0.26889478167941 * AcceptedCmp50  +     0.21127321497252 *
100801    +        Complain0  +     0.26244151632714 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.16508910764131 * AcceptedCmp10 + -0.01591698903562 * 
AcceptedCmp20 + -0.18749319390831 * AcceptedCmp30 + 0.10267845517937 * AcceptedCmp40 + 
0.26889478167941 * AcceptedCmp50 + 0.21127321497252 * Complain0 + 0.26244151632714 * 
HigherEducationBinary0 ;
100802    +   H13  = H13  +     -0.1188260559539 * AcceptedCmp10
100803    +          +    -0.14527518577208 * AcceptedCmp20  +     0.15234135364477 *
100804    +        AcceptedCmp30  +    -0.09444923232962 * AcceptedCmp40
100805    +          +     0.19708535923248 * AcceptedCmp50  +    -0.29618019247654 *
100806    +        Complain0  +     0.12575052691333 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.1188260559539 * AcceptedCmp10 + -0.14527518577208 * 
AcceptedCmp20 + 0.15234135364477 * AcceptedCmp30 + -0.09444923232962 * AcceptedCmp40 + 
0.19708535923248 * AcceptedCmp50 + -0.29618019247654 * Complain0 + 0.12575052691333 * 
HigherEducationBinary0 ;
100807    +   H14  = H14  +     0.22744978434743 * AcceptedCmp10
100808    +          +    -0.01189686575388 * AcceptedCmp20  +    -0.32196819611195 *
100809    +        AcceptedCmp30  +     0.01600068421368 * AcceptedCmp40
100810    +          +     0.00556822856215 * AcceptedCmp50  +     0.18009079154413 *
100811    +        Complain0  +     0.03016266549641 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.22744978434743 * AcceptedCmp10 + -0.01189686575388 * 
AcceptedCmp20 + -0.32196819611195 * AcceptedCmp30 + 0.01600068421368 * AcceptedCmp40 + 
0.00556822856215 * AcceptedCmp50 + 0.18009079154413 * Complain0 + 0.03016266549641 * 
HigherEducationBinary0 ;
100812    +   H15  = H15  +     0.52725777941338 * AcceptedCmp10
100813    +          +     0.01843467049946 * AcceptedCmp20  +     0.47168025621809 *
100814    +        AcceptedCmp30  +    -0.05224480469429 * AcceptedCmp40
100815    +          +     0.29146234318613 * AcceptedCmp50  +     0.05946217105031 *
100816    +        Complain0  +     0.16683238673979 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.52725777941338 * AcceptedCmp10 + 0.01843467049946 * 
AcceptedCmp20 + 0.47168025621809 * AcceptedCmp30 + -0.05224480469429 * AcceptedCmp40 + 
0.29146234318613 * AcceptedCmp50 + 0.05946217105031 * Complain0 + 0.16683238673979 * 
HigherEducationBinary0 ;
100817    +   H11  = H11  +     0.02840049264257 * Education2n_Cycle
100818    +          +    -0.12984345243569 * EducationBasic  +    -0.10299098163695 *
100819    +        EducationGraduation  +     0.23295390047952 * EducationMaster
100820    +          +    -0.41529808115031 * Marital_StatusDivorced
100821    +          +     0.65264978817749 * Marital_StatusMarried
100822    +          +    -0.52150453945732 * Marital_StatusSingle
100823    +          +     0.69963607397544 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.02840049264257 * Education2n_Cycle + -0.12984345243569 * 
EducationBasic + -0.10299098163695 * EducationGraduation + 0.23295390047952 * EducationMaster 
+ -0.41529808115031 * Marital_StatusDivorced + 0.65264978817749 * Marital_StatusMarried + 
-0.52150453945732 * Marital_StatusSingle + 0.69963607397544 * Marital_StatusTogether ;
100824    +   H12  = H12  +    -0.18683184010407 * Education2n_Cycle
100825    +          +    -0.04325754530797 * EducationBasic  +     0.25926294135162 *
100826    +        EducationGraduation  +     0.04425534246646 * EducationMaster
100827    +          +    -0.32207382402099 * Marital_StatusDivorced
100828    +          +     0.16112567537413 * Marital_StatusMarried
100829    +          +     0.28859198712458 * Marital_StatusSingle
100830    +          +    -0.31707896724726 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.18683184010407 * Education2n_Cycle + -0.04325754530797 * 
EducationBasic + 0.25926294135162 * EducationGraduation + 0.04425534246646 * EducationMaster + 
-0.32207382402099 * Marital_StatusDivorced + 0.16112567537413 * Marital_StatusMarried + 
0.28859198712458 * Marital_StatusSingle + -0.31707896724726 * Marital_StatusTogether ;
100831    +   H13  = H13  +     0.03402340531236 * Education2n_Cycle
100832    +          +     0.17313991053917 * EducationBasic  +    -0.24806694961277 *
100833    +        EducationGraduation  +    -0.16283334360744 * EducationMaster
100834    +          +    -0.06823118087629 * Marital_StatusDivorced
100835    +          +    -0.01696675344176 * Marital_StatusMarried
100836    +          +    -0.04922830766868 * Marital_StatusSingle
100837    +          +    -0.15449558545998 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.03402340531236 * Education2n_Cycle + 0.17313991053917 * 
EducationBasic + -0.24806694961277 * EducationGraduation + -0.16283334360744 * EducationMaster 
+ -0.06823118087629 * Marital_StatusDivorced + -0.01696675344176 * Marital_StatusMarried + 
-0.04922830766868 * Marital_StatusSingle + -0.15449558545998 * Marital_StatusTogether ;
100838    +   H14  = H14  +     0.04419529419265 * Education2n_Cycle
100839    +          +     0.10023190362026 * EducationBasic  +     0.23777777952905 *
100840    +        EducationGraduation  +     -0.1779877655909 * EducationMaster
100841    +          +     0.20346888384065 * Marital_StatusDivorced
100842    +          +     -0.5246097720646 * Marital_StatusMarried
100843    +          +     0.50991923175058 * Marital_StatusSingle
100844    +          +    -0.15346924309445 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.04419529419265 * Education2n_Cycle + 0.10023190362026 * 
EducationBasic + 0.23777777952905 * EducationGraduation + -0.1779877655909 * EducationMaster + 
0.20346888384065 * Marital_StatusDivorced + -0.5246097720646 * Marital_StatusMarried + 
0.50991923175058 * Marital_StatusSingle + -0.15346924309445 * Marital_StatusTogether ;
100845    +   H15  = H15  +     -0.0859109352002 * Education2n_Cycle
100846    +          +     0.23688872874499 * EducationBasic  +      0.0044459307881 *
100847    +        EducationGraduation  +     0.03117170136897 * EducationMaster
100848    +          +    -0.14128509643843 * Marital_StatusDivorced
100849    +          +    -0.17344467864829 * Marital_StatusMarried
100850    +          +     0.09201105049634 * Marital_StatusSingle
100851    +          +     0.03562553790735 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.0859109352002 * Education2n_Cycle + 0.23688872874499 * 
EducationBasic + 0.0044459307881 * EducationGraduation + 0.03117170136897 * EducationMaster + 
-0.14128509643843 * Marital_StatusDivorced + -0.17344467864829 * Marital_StatusMarried + 
0.09201105049634 * Marital_StatusSingle + 0.03562553790735 * Marital_StatusTogether ;
100852    +   H11  =     0.44460027749342 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.44460027749342 + H11 ;
100853    +   H12  =    -0.95819350927335 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.95819350927335 + H12 ;
100854    +   H13  =    -0.44968673753742 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.44968673753742 + H13 ;
100855    +   H14  =     0.53878131931255 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.53878131931255 + H14 ;
100856    +   H15  =     0.82891048270823 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 0.82891048270823 + H15 ;
100857    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
100858    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
100859    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
100860    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
100861    +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
100862    +END;
MPRINT(EM_DIAGRAM):   END;
100863    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
100864    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
100865    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
100866    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
100867    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
100868    +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
100869    +END;
MPRINT(EM_DIAGRAM):   END;
100870    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
100871    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
100872    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
100873    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
100874    +   P_DepVar1  =    -3.09211467027119 * H11  +      0.8780551921753 * H12
100875    +          +    -2.64280779387115 * H13  +     1.47258844960489 * H14
100876    +          +     -1.9161512747512 * H15 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.09211467027119 * H11 + 0.8780551921753 * H12 + 
-2.64280779387115 * H13 + 1.47258844960489 * H14 + -1.9161512747512 * H15 ;
100877    +   P_DepVar1  =    -1.84694532241195 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.84694532241195 + P_DepVar1 ;
100878    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
100879    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
100880    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
100881    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
100882    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
100883    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
100884    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
100885    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
100886    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
100887    +END;
MPRINT(EM_DIAGRAM):   END;
100888    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
100889    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
100890    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
100891    +END;
MPRINT(EM_DIAGRAM):   END;
100892    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
100893    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
100894    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
100895    +END;
MPRINT(EM_DIAGRAM):   END;
100896    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
100897    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
100898    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
100899    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
100900    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
100901    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
100902    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
100903    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
100904    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
100905    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
100906    +END;
MPRINT(EM_DIAGRAM):   END;
100907    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
100908    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
100909    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
100910    +drop
100911    +H11
100912    +H12
100913    +H13
100914    +H14
100915    +H15
100916    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 ;
100917    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
100918     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
100919     quit;
100920     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
100921     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
100922     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
100923     retain ID 2 Node "Neural40";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural40";
100924     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
100925     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2037 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2037 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

100926     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
100927     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
100928     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2037 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2037 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

100929     proc sort data=EMWS8.Neural40_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural40_variableset out=_temp2(keep=NAME CREATOR);
100930     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
100931     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.NEURAL40_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

100932     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
100933     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
100934     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
100935     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

100936     proc contents data=EMWS8.Neural40_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural40_train out=_meta(keep=NAME) noprint;
100937     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

100938     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
100939     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
100940     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

100941     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
100942     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
100943     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
100944     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

100945     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
100946     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
100946   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1037 rows and 5 columns.

100947     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

100948     proc append base=EMWS8.Ensmbl23_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl23_FCMP data=_tempx;
100949     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL23_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1037 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL23_FCMP has 1037 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

100950     filename _pref
100950   ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
100951     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
100952     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
100953    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
100954    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
100955    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
100956    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
100957    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
100958    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
100959     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
100960     quit;
100961     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
100962     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
100963     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
100964     retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
100965     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
100966     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

100967     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
100968     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
100969     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

100970     proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
100971     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
100972     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

100973     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
100974     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
100975     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
100976     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

100977     proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
100978     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

100979     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
100980     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
100981     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

100982     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
100983     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
100984     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
100985     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

100986     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
100987     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
100987   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

100988     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

100989     proc append base=EMWS8.Ensmbl23_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl23_FCMP data=_tempx;
100990     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL23_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL23_FCMP has 1041 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

100991     filename _pref
100991   ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
100992     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
100993     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
100994    +
100995    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
100996    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
100996   !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
100997    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
100998    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
100999    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
101000    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
101001    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
101002     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
101003     quit;
101004     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
101005     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
101006     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
101007     retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
101008     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
101009     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

101010     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
101011     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
101012     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

101013     proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
101014     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
101015     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

101016     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
101017     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
101018     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
101019     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

101020     proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
101021     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

101022     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
101023     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
101024     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

101025     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
101026     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
101027     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
101028     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

101029     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
101030     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
101030   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

101031     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

101032     proc append base=EMWS8.Ensmbl23_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl23_FCMP data=_tempx;
101033     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL23_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL23_FCMP has 1080 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

101034     filename _pref
101034   ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
101035     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
101036     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
101037    +
101038    +
101039    +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
101040    +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
101041    +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
101042    +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
101043    +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
101044    +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
101045    +
101046    +
101047    +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
101048    +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
101049    +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
101050    +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
101051    +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
101052    +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
101053    +
101054    +
101055    +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
101056    +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
101057    +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
101058    +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
101059    +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
101060    +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
101061    +
101062    +
101063    +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
101064    +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
101065    +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
101066    +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
101067    +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
101068    +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
101069    +
101070    +
101071    +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
101072    +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
101073    +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
101074    +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
101075    +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
101076    +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
101077    +
101078    +
101079    +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
101080    +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
101081    +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
101082    +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
101083    +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
101084    +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
101085    +
101086    +
101087    +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
101088    +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
101089    +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
101090    +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
101091    +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
101092    +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
101093    +
101094    +
101095    +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
101096    +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
101097    +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
101098    +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
101099    +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
101100    +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
101101    +if
101102    +_FILTERNORM1 not in ( '.')
101103    + and
101104    +_FILTERNORM2 not in ( '.')
101105    + and
101106    +_FILTERNORM3 not in ( '.')
101107    + and
101108    +_FILTERNORM4 not in ( '.')
101109    + and
101110    +_FILTERNORM5 not in ( '.')
101111    + and
101112    +_FILTERNORM6 not in ( '.')
101113    + and
101114    +_FILTERNORM7 not in ( ' ')
101115    + and
101116    +_FILTERNORM8 not in ( ' ')
101117    +and
101118    +( Dt_Customer ne .)
101119    +and ( Income ne . and (Income<=107000))
101120    +and ( Kidhome ne .)
101121    +and ( MntFishProducts ne .)
101122    +and ( MntFruits ne .)
101123    +and ( MntGoldProds ne .)
101124    +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
101125    +and ( MntSweetProducts ne .)
101126    +and ( MntWines ne .)
101127    +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
101128    +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
101129    +and ( NumStorePurchases ne .)
101130    +and ( NumWebPurchases ne .)
101131    +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
101132    +and ( Recency ne .)
101133    +and ( Teenhome ne .)
101134    +and ( Year_Birth ne .)
101135    +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
101136    +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
101137    +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
101138    +end;
MPRINT(EM_DIAGRAM):   end;
101139    +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
101140    +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
101141     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
101142     quit;
101143     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
101144     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
101145     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
101146     retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
101147     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
101148     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

101149     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
101150     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
101151     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

101152     proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
101153     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
101154     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

101155     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
101156     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
101157     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
101158     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

101159     proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
101160     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

101161     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
101162     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
101163     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

101164     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
101165     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
101166     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
101167     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

101168     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
101169     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
101169   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

101170     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

101171     proc append base=EMWS8.Ensmbl23_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl23_FCMP data=_tempx;
101172     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL23_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL23_FCMP has 1146 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

101173     %macro varDept(fcmpdata=,id=);
101174     %global nobs&id scoreFlag&id;
101175     %let scoreFlag&id = 0;
101176     %if &id=1 or ^&fcmpStart %then %do;
101177     proc sort data=&fcmpdata out=_temp&id nodupkey;
101178     by NAME;
101179     where id=&id and LHS in( %let j=1;
101180     %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
101181     %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
101182     "&var" %let j = %eval(&j+1);
101183     %end;
101184     );
101185     run;
101186     %let dsid = %sysfunc(open(_temp&id));
101187     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
101188     %let dsid = %sysfunc(close(&dsid));
101189     %if &&nobs&id %then %do;
101190     %let scoreFlag&id = 1;
101191     %let fcmpStart = 1;
101192     %end;
101193     %else %let fcmpStart = 0;
101194     %end;
101195     %else %do;
101196     proc sort data=&fcmpdata out=_tempid;
101197     where id=&id;
101198     by LHS;
101199     run;
101200     %let dsid = %sysfunc(open(_tempid));
101201     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
101202     %let dsid = %sysfunc(close(&dsid));
101203     %if ^&&nobs&id %then %do;
101204     proc datasets lib=work nolist;
101205     delete _tempid;
101206     run;
101207     quit;
101208     %end;
101209     %else %do;
101210     data _tempAll;
101211     set %let j=%eval(&id-1);
101212     %do x=1 %to &j;
101213     %if &&nobs&x %then %do;
101214     _temp&x %end;
101215     %end;
101216     ;
101217     run;
101218     proc sql;
101219     create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
101219   ! work._tempid p2 where p.name=p2.lhs;
101220     quit;
101221     data _temp&id;
101222     set _temp&id;
101223     where LHS ne '' and NAME ne '' and Node ne '';
101224     run;
101225     proc datasets lib=work nolist;
101226     delete _tempAll;
101227     run;
101228     %let dsid = %sysfunc(open(_temp&id));
101229     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
101230     %let dsid = %sysfunc(close(&dsid));
101231     %if ^&&nobs&id %then %do;
101232     proc datasets lib=work nolist;
101233     delete _temp&id;
101234     run;
101235     quit;
101236     %end;
101237     %else %do;
101238     %let scoreFlag&id = 1;
101239     data _temp&id;
101240     set _temp&id;
101241     where LHS ne NAME and node ne '';
101242     run;
101243     %let dsid = %sysfunc(open(_temp&id));
101244     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
101245     %let dsid = %sysfunc(close(&dsid));
101246     %if ^&&nobs&id %then %do;
101247     proc datasets lib=work nolist;
101248     delete _temp&id;
101249     run;
101250     quit;
101251     %end;
101252     %else %do;
101253     proc sort data=_temp&id nodupkey;
101254     by LHS NAME;
101255     run;
101256     %end;
101257     %end;
101258     %end;
101259     %end;
101260     %mend varDept;
101261     %macro optCode(outdata=fcmpdata);
101262     %global fcmpStart;
101263     %let fcmpStart = 0;
101264     %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
101265     %let NumNodes=9;
101266     %do k=1 %to &NumNodes;
101267     %vardept(fcmpdata=&outdata, id=&k);
101268     %end;
101269     %mend optCode;
101270     %optcode(outData=EMWS8.Ensmbl23_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl23_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL23_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl23_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 106 observations read from the data set EMWS8.ENSMBL23_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 79 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 27 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl23_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL23_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl23_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL23_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl23_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL23_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 27 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 2 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl23_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL23_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 29 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 33 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl23_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL23_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: There were 33 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 62 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl23_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL23_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl23_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL23_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

101271     data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
101272     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
101273     where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
101274     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

101275     data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
101276     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
101277     where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
101278     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

101279     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
101280     create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
101280   ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 2 rows and 3 columns.

101281     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.03 seconds
      

101282     data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
101283     set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
101284     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 2 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 2 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

101285     filename _pref
101285   ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural39\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural39\EMPUBLISHSCORE.sas";
101286     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
101287     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural39\EMPUBLISHSCORE.sas.
101288    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
101289    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
101290    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
101291    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
101292    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
101293    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
101294    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
101295    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
101296    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
101297    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
101298    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
101299    +LENGTH _WARN_ $4
101300    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
101301    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
101302    +
101303    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
101304    +
101305    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
101306    +
101307    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
101308    +
101309    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
101310    +
101311    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
101312    +
101313    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
101314    +
101315    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
101316    +
101317    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
101318    +
101319    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
101320    +
101321    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
101322    +
101323    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
101324    +
101325    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
101326    +
101327    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
101328    +
101329    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
101330    +
101331    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
101332    +
101333    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
101334    +
101335    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
101336    +
101337    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
101338    +
101339    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
101340    +
101341    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
101342    +
101343    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
101344    +
101345    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
101346    +
101347    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
101348    +
101349    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
101350    +
101351    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
101352    +
101353    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
101354    +
101355    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
101356    +
101357    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
101358    +
101359    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
101360    +
101361    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
101362    +
101363    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
101364    +
101365    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
101366    +
101367    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
101368    +
101369    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
101370    +
101371    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
101372    +
101373    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
101374    +
101375    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
101376    +
101377    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
101378    +
101379    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
101380    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
101381    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
101382    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
101383    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
101384    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
101385    +end;
MPRINT(EM_DIAGRAM):   end;
101386    +else do;
MPRINT(EM_DIAGRAM):   else do;
101387    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
101388    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
101389    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
101390    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
101391    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
101392    +   end;
MPRINT(EM_DIAGRAM):   end;
101393    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
101394    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
101395    +   end;
MPRINT(EM_DIAGRAM):   end;
101396    +   else do;
MPRINT(EM_DIAGRAM):   else do;
101397    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
101398    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
101399    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
101400    +   end;
MPRINT(EM_DIAGRAM):   end;
101401    +end;
MPRINT(EM_DIAGRAM):   end;
101402    +
101403    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
101404    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
101405    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
101406    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
101407    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
101408    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
101409    +end;
MPRINT(EM_DIAGRAM):   end;
101410    +else do;
MPRINT(EM_DIAGRAM):   else do;
101411    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
101412    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
101413    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
101414    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
101415    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
101416    +   end;
MPRINT(EM_DIAGRAM):   end;
101417    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
101418    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
101419    +   end;
MPRINT(EM_DIAGRAM):   end;
101420    +   else do;
MPRINT(EM_DIAGRAM):   else do;
101421    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
101422    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
101423    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
101424    +   end;
MPRINT(EM_DIAGRAM):   end;
101425    +end;
MPRINT(EM_DIAGRAM):   end;
101426    +
101427    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
101428    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
101429    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
101430    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
101431    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
101432    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
101433    +end;
MPRINT(EM_DIAGRAM):   end;
101434    +else do;
MPRINT(EM_DIAGRAM):   else do;
101435    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
101436    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
101437    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
101438    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
101439    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
101440    +   end;
MPRINT(EM_DIAGRAM):   end;
101441    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
101442    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
101443    +   end;
MPRINT(EM_DIAGRAM):   end;
101444    +   else do;
MPRINT(EM_DIAGRAM):   else do;
101445    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
101446    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
101447    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
101448    +   end;
MPRINT(EM_DIAGRAM):   end;
101449    +end;
MPRINT(EM_DIAGRAM):   end;
101450    +
101451    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
101452    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
101453    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
101454    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
101455    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
101456    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
101457    +end;
MPRINT(EM_DIAGRAM):   end;
101458    +else do;
MPRINT(EM_DIAGRAM):   else do;
101459    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
101460    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
101461    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
101462    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
101463    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
101464    +   end;
MPRINT(EM_DIAGRAM):   end;
101465    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
101466    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
101467    +   end;
MPRINT(EM_DIAGRAM):   end;
101468    +   else do;
MPRINT(EM_DIAGRAM):   else do;
101469    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
101470    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
101471    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
101472    +   end;
MPRINT(EM_DIAGRAM):   end;
101473    +end;
MPRINT(EM_DIAGRAM):   end;
101474    +
101475    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
101476    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
101477    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
101478    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
101479    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
101480    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
101481    +end;
MPRINT(EM_DIAGRAM):   end;
101482    +else do;
MPRINT(EM_DIAGRAM):   else do;
101483    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
101484    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
101485    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
101486    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
101487    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
101488    +   end;
MPRINT(EM_DIAGRAM):   end;
101489    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
101490    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
101491    +   end;
MPRINT(EM_DIAGRAM):   end;
101492    +   else do;
MPRINT(EM_DIAGRAM):   else do;
101493    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
101494    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
101495    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
101496    +   end;
MPRINT(EM_DIAGRAM):   end;
101497    +end;
MPRINT(EM_DIAGRAM):   end;
101498    +
101499    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
101500    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
101501    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
101502    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
101503    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
101504    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
101505    +end;
MPRINT(EM_DIAGRAM):   end;
101506    +else do;
MPRINT(EM_DIAGRAM):   else do;
101507    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
101508    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
101509    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
101510    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
101511    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
101512    +   end;
MPRINT(EM_DIAGRAM):   end;
101513    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
101514    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
101515    +   end;
MPRINT(EM_DIAGRAM):   end;
101516    +   else do;
MPRINT(EM_DIAGRAM):   else do;
101517    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
101518    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
101519    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
101520    +   end;
MPRINT(EM_DIAGRAM):   end;
101521    +end;
MPRINT(EM_DIAGRAM):   end;
101522    +
101523    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
101524    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
101525    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
101526    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
101527    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
101528    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
101529    +end;
MPRINT(EM_DIAGRAM):   end;
101530    +else do;
MPRINT(EM_DIAGRAM):   else do;
101531    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
101532    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
101533    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
101534    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
101535    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
101536    +   end;
MPRINT(EM_DIAGRAM):   end;
101537    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
101538    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
101539    +   end;
MPRINT(EM_DIAGRAM):   end;
101540    +   else do;
MPRINT(EM_DIAGRAM):   else do;
101541    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
101542    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
101543    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
101544    +   end;
MPRINT(EM_DIAGRAM):   end;
101545    +end;
MPRINT(EM_DIAGRAM):   end;
101546    +
101547    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
101548    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
101549    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
101550    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
101551    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
101552    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
101553    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
101554    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
101555    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
101556    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
101557    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
101558    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
101559    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
101560    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
101561    +end;
MPRINT(EM_DIAGRAM):   end;
101562    +else do;
MPRINT(EM_DIAGRAM):   else do;
101563    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
101564    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
101565    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
101566    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
101567    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
101568    +   end;
MPRINT(EM_DIAGRAM):   end;
101569    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
101570    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
101571    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
101572    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
101573    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
101574    +   end;
MPRINT(EM_DIAGRAM):   end;
101575    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
101576    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
101577    +   end;
MPRINT(EM_DIAGRAM):   end;
101578    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
101579    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
101580    +   end;
MPRINT(EM_DIAGRAM):   end;
101581    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
101582    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
101583    +   end;
MPRINT(EM_DIAGRAM):   end;
101584    +   else do;
MPRINT(EM_DIAGRAM):   else do;
101585    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
101586    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
101587    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
101588    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
101589    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
101590    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
101591    +   end;
MPRINT(EM_DIAGRAM):   end;
101592    +end;
MPRINT(EM_DIAGRAM):   end;
101593    +
101594    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
101595    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
101596    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
101597    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
101598    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
101599    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
101600    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
101601    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
101602    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
101603    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
101604    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
101605    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
101606    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
101607    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
101608    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
101609    +end;
MPRINT(EM_DIAGRAM):   end;
101610    +else do;
MPRINT(EM_DIAGRAM):   else do;
101611    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
101612    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
101613    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
101614    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
101615    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
101616    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
101617    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
101618    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
101619    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
101620    +         end;
MPRINT(EM_DIAGRAM):   end;
101621    +         else do;
MPRINT(EM_DIAGRAM):   else do;
101622    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
101623    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
101624    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
101625    +            end;
MPRINT(EM_DIAGRAM):   end;
101626    +         end;
MPRINT(EM_DIAGRAM):   end;
101627    +      end;
MPRINT(EM_DIAGRAM):   end;
101628    +      else do;
MPRINT(EM_DIAGRAM):   else do;
101629    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
101630    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
101631    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
101632    +         end;
MPRINT(EM_DIAGRAM):   end;
101633    +      end;
MPRINT(EM_DIAGRAM):   end;
101634    +   end;
MPRINT(EM_DIAGRAM):   end;
101635    +   else do;
MPRINT(EM_DIAGRAM):   else do;
101636    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
101637    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
101638    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
101639    +      end;
MPRINT(EM_DIAGRAM):   end;
101640    +      else do;
MPRINT(EM_DIAGRAM):   else do;
101641    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
101642    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
101643    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
101644    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
101645    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
101646    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
101647    +         end;
MPRINT(EM_DIAGRAM):   end;
101648    +      end;
MPRINT(EM_DIAGRAM):   end;
101649    +   end;
MPRINT(EM_DIAGRAM):   end;
101650    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
101651    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
101652    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
101653    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
101654    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
101655    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
101656    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
101657    +   end;
MPRINT(EM_DIAGRAM):   end;
101658    +end;
MPRINT(EM_DIAGRAM):   end;
101659    +
101660    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
101661    +*** Checking missing input Interval
101662    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
101663    +
101664    +IF NMISS(
101665    +   AcceptedCmpTotal ,
101666    +   Age ,
101667    +   Frq ,
101668    +   Income ,
101669    +   Kidhome ,
101670    +   MntFishProducts ,
101671    +   MntFruits ,
101672    +   MntGoldProds ,
101673    +   MntSweetProducts ,
101674    +   MonthsAsCustomer ,
101675    +   NumDealsPurchases ,
101676    +   NumWebVisitsMonth ,
101677    +   RFMstat ,
101678    +   RMntFrq ,
101679    +   Recency ,
101680    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
101681    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
101682    +
101683    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
101684    +END;
MPRINT(EM_DIAGRAM):   END;
101685    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
101686    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
101687    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
101688    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
101689    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
101690    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
101691    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
101692    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
101693    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
101694    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
101695    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
101696    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
101697    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
101698    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
101699    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
101700    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
101701    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
101702    +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
101703    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
101704    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
101705    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
101706    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
101707    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
101708    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
101709    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
101710    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
101711    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
101712    +END;
MPRINT(EM_DIAGRAM):   END;
101713    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
101714    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
101715    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
101716    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
101717    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
101718    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
101719    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
101720    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
101721    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
101722    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
101723    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
101724    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
101725    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
101726    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
101727    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
101728    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
101729    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
101730    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
101731    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
101732    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
101733    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
101734    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
101735    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
101736    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
101737    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
101738    +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
101739    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
101740    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
101741    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
101742    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
101743    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
101744    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
101745    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
101746    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
101747    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
101748    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
101749    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
101750    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
101751    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
101752    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
101753    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
101754    +END;
MPRINT(EM_DIAGRAM):   END;
101755    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
101756    +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
101757    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
101758    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
101759    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
101760    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
101761    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
101762    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
101763    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
101764    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
101765    +   H1x1_1  =    -0.59619526510279 * S_AcceptedCmpTotal
101766    +          +    -0.19567367757209 * S_Age  +    -1.87154193856682 * S_Frq
101767    +          +    -0.61220463973763 * S_Income  +     0.39435632091859 *
101768    +        S_Kidhome  +     0.27115687172661 * S_MntFishProducts
101769    +          +    -0.11978715045932 * S_MntFruits  +     0.29519469099756 *
101770    +        S_MntGoldProds  +     0.10278416295834 * S_MntSweetProducts
101771    +          +     -0.1740957673716 * S_MonthsAsCustomer
101772    +          +     0.66565026405117 * S_NumDealsPurchases
101773    +          +     0.43247206282836 * S_NumWebVisitsMonth
101774    +          +     0.36972451068821 * S_RFMstat  +     0.26260869862277 *
101775    +        S_RMntFrq  +    -0.28002323732518 * S_Recency
101776    +          +     0.44490818869588 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.59619526510279 * S_AcceptedCmpTotal + -0.19567367757209 * 
S_Age + -1.87154193856682 * S_Frq + -0.61220463973763 * S_Income + 0.39435632091859 * 
S_Kidhome + 0.27115687172661 * S_MntFishProducts + -0.11978715045932 * S_MntFruits + 
0.29519469099756 * S_MntGoldProds + 0.10278416295834 * S_MntSweetProducts + -0.1740957673716 * 
S_MonthsAsCustomer + 0.66565026405117 * S_NumDealsPurchases + 0.43247206282836 * 
S_NumWebVisitsMonth + 0.36972451068821 * S_RFMstat + 0.26260869862277 * S_RMntFrq + 
-0.28002323732518 * S_Recency + 0.44490818869588 * S_Teenhome ;
101777    +   H1x1_2  =    -0.18817303555602 * S_AcceptedCmpTotal
101778    +          +     0.02563068671435 * S_Age  +    -0.19671119906022 * S_Frq
101779    +          +    -0.57601068946749 * S_Income  +     0.32494160304894 *
101780    +        S_Kidhome  +     0.01652017751959 * S_MntFishProducts
101781    +          +     0.05773921061355 * S_MntFruits  +     0.02592530362424 *
101782    +        S_MntGoldProds  +     0.08946665597916 * S_MntSweetProducts
101783    +          +    -0.06176784990963 * S_MonthsAsCustomer
101784    +          +    -0.11740415005833 * S_NumDealsPurchases
101785    +          +    -0.17084845478672 * S_NumWebVisitsMonth
101786    +          +     0.00178400194387 * S_RFMstat  +    -0.13250191926905 *
101787    +        S_RMntFrq  +     0.54983271222574 * S_Recency
101788    +          +     0.42609230297633 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.18817303555602 * S_AcceptedCmpTotal + 0.02563068671435 * 
S_Age + -0.19671119906022 * S_Frq + -0.57601068946749 * S_Income + 0.32494160304894 * 
S_Kidhome + 0.01652017751959 * S_MntFishProducts + 0.05773921061355 * S_MntFruits + 
0.02592530362424 * S_MntGoldProds + 0.08946665597916 * S_MntSweetProducts + -0.06176784990963 
* S_MonthsAsCustomer + -0.11740415005833 * S_NumDealsPurchases + -0.17084845478672 * 
S_NumWebVisitsMonth + 0.00178400194387 * S_RFMstat + -0.13250191926905 * S_RMntFrq + 
0.54983271222574 * S_Recency + 0.42609230297633 * S_Teenhome ;
101789    +   H1x1_1  = H1x1_1  +    -0.73533354476059 * AcceptedCmp10
101790    +          +    -0.96410698969351 * AcceptedCmp20  +    -0.68713486641274 *
101791    +        AcceptedCmp30  +    -0.36566057748639 * AcceptedCmp40
101792    +          +     0.30630246801131 * AcceptedCmp50  +     0.35120823961025 *
101793    +        Complain0  +     -0.4767771812126 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.73533354476059 * AcceptedCmp10 + -0.96410698969351 
* AcceptedCmp20 + -0.68713486641274 * AcceptedCmp30 + -0.36566057748639 * AcceptedCmp40 + 
0.30630246801131 * AcceptedCmp50 + 0.35120823961025 * Complain0 + -0.4767771812126 * 
HigherEducationBinary0 ;
101794    +   H1x1_2  = H1x1_2  +     0.09341963945817 * AcceptedCmp10
101795    +          +     0.08648218396156 * AcceptedCmp20  +     0.20807620140826 *
101796    +        AcceptedCmp30  +     0.07826062169244 * AcceptedCmp40
101797    +          +     0.02564266279554 * AcceptedCmp50  +     0.04261102080378 *
101798    +        Complain0  +    -0.27229992860702 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.09341963945817 * AcceptedCmp10 + 0.08648218396156 * 
AcceptedCmp20 + 0.20807620140826 * AcceptedCmp30 + 0.07826062169244 * AcceptedCmp40 + 
0.02564266279554 * AcceptedCmp50 + 0.04261102080378 * Complain0 + -0.27229992860702 * 
HigherEducationBinary0 ;
101799    +   H1x1_1  = H1x1_1  +     0.21712849768666 * Education2n_Cycle
101800    +          +    -0.14027907370038 * EducationBasic  +    -0.11959455460972 *
101801    +        EducationGraduation  +     0.22632282500966 * EducationMaster
101802    +          +     -0.0800438380883 * Marital_StatusDivorced
101803    +          +     0.44505766937623 * Marital_StatusMarried
101804    +          +    -0.57546515626468 * Marital_StatusSingle
101805    +          +     0.38638180853046 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.21712849768666 * Education2n_Cycle + 
-0.14027907370038 * EducationBasic + -0.11959455460972 * EducationGraduation + 
0.22632282500966 * EducationMaster + -0.0800438380883 * Marital_StatusDivorced + 
0.44505766937623 * Marital_StatusMarried + -0.57546515626468 * Marital_StatusSingle + 
0.38638180853046 * Marital_StatusTogether ;
101806    +   H1x1_2  = H1x1_2  +     0.20241854612702 * Education2n_Cycle
101807    +          +    -0.02204834045555 * EducationBasic  +    -0.17229363591628 *
101808    +        EducationGraduation  +      0.0794165981215 * EducationMaster
101809    +          +    -0.20291653465543 * Marital_StatusDivorced
101810    +          +     0.39547414450617 * Marital_StatusMarried
101811    +          +    -0.37001331184001 * Marital_StatusSingle
101812    +          +     0.37889668606101 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.20241854612702 * Education2n_Cycle + 
-0.02204834045555 * EducationBasic + -0.17229363591628 * EducationGraduation + 0.0794165981215 
* EducationMaster + -0.20291653465543 * Marital_StatusDivorced + 0.39547414450617 * 
Marital_StatusMarried + -0.37001331184001 * Marital_StatusSingle + 0.37889668606101 * 
Marital_StatusTogether ;
101813    +   H1x1_1  =     0.85218451823494 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.85218451823494 + H1x1_1 ;
101814    +   H1x1_2  =     1.25904481865206 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.25904481865206 + H1x1_2 ;
101815    +   H1x1_3  = 0;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0;
101816    +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 );
101817    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
101818    +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
101819    +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
101820    +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
101821    +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
101822    +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
101823    +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
101824    +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
101825    +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
101826    +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
101827    +END;
MPRINT(EM_DIAGRAM):   END;
101828    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
101829    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
101830    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
101831    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
101832    +END;
MPRINT(EM_DIAGRAM):   END;
101833    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
101834    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
101835    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
101836    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
101837    +   P_DepVar1  =     4.98178607983008 * H1x1_1  +    -8.34979505969025 * H1x1_2
101838    +          +     10.3301873876241 * H1x1_3 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 4.98178607983008 * H1x1_1 + -8.34979505969025 * H1x1_2 + 
10.3301873876241 * H1x1_3 ;
101839    +   P_DepVar1  =    -0.46201067268314 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.46201067268314 + P_DepVar1 ;
101840    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
101841    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
101842    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
101843    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
101844    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
101845    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
101846    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
101847    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
101848    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
101849    +END;
MPRINT(EM_DIAGRAM):   END;
101850    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
101851    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
101852    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
101853    +END;
MPRINT(EM_DIAGRAM):   END;
101854    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
101855    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
101856    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
101857    +END;
MPRINT(EM_DIAGRAM):   END;
101858    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
101859    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
101860    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
101861    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
101862    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
101863    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
101864    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
101865    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
101866    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
101867    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
101868    +END;
MPRINT(EM_DIAGRAM):   END;
101869    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
101870    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
101871    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
101872    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
101873     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
101874     quit;
101875     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
101876     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
101877     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
101878     retain ID 2 Node "AutoNeural39";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural39";
101879     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
101880     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1811 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1811 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

101881     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
101882     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
101883     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1811 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1811 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

101884     proc sort data=EMWS8.AutoNeural39_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural39_variableset out=_temp2(keep=NAME 
CREATOR);
101885     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
101886     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL39_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

101887     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
101888     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
101889     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
101890     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

101891     proc contents data=EMWS8.AutoNeural39_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural39_train out=_meta(keep=NAME) noprint;
101892     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 56 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

101893     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
101894     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
101895     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 56 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 56 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

101896     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
101897     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
101898     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
101899     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 56 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 56 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

101900     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
101901     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
101901   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 997 rows and 5 columns.

101902     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

101903     proc append base=EMWS8.Ensmbl23_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl23_FCMP data=_tempx;
101904     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL23_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 997 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL23_FCMP has 997 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

101905     filename _pref
101905   ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
101906     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
101907     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
101908    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
101909    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
101910    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
101911    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
101912    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
101913    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
101914     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
101915     quit;
101916     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
101917     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
101918     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
101919     retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
101920     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
101921     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

101922     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
101923     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
101924     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

101925     proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
101926     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
101927     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

101928     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
101929     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
101930     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
101931     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

101932     proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
101933     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

101934     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
101935     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
101936     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

101937     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
101938     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
101939     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
101940     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

101941     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
101942     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
101942   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

101943     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

101944     proc append base=EMWS8.Ensmbl23_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl23_FCMP data=_tempx;
101945     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL23_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL23_FCMP has 1001 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

101946     filename _pref
101946   ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
101947     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
101948     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
101949    +
101950    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
101951    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
101951   !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
101952    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
101953    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
101954    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
101955    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
101956    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
101957     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
101958     quit;
101959     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
101960     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
101961     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
101962     retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
101963     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
101964     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

101965     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
101966     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
101967     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

101968     proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
101969     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
101970     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

101971     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
101972     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
101973     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
101974     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

101975     proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
101976     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

101977     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
101978     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
101979     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

101980     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
101981     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
101982     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
101983     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

101984     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
101985     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
101985   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

101986     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

101987     proc append base=EMWS8.Ensmbl23_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl23_FCMP data=_tempx;
101988     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL23_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL23_FCMP has 1040 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

101989     filename _pref
101989   ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
101990     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
101991     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
101992    +
101993    +
101994    +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
101995    +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
101996    +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
101997    +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
101998    +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
101999    +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
102000    +
102001    +
102002    +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
102003    +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
102004    +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
102005    +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
102006    +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
102007    +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
102008    +
102009    +
102010    +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
102011    +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
102012    +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
102013    +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
102014    +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
102015    +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
102016    +
102017    +
102018    +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
102019    +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
102020    +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
102021    +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
102022    +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
102023    +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
102024    +
102025    +
102026    +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
102027    +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
102028    +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
102029    +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
102030    +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
102031    +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
102032    +
102033    +
102034    +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
102035    +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
102036    +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
102037    +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
102038    +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
102039    +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
102040    +
102041    +
102042    +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
102043    +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
102044    +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
102045    +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
102046    +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
102047    +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
102048    +
102049    +
102050    +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
102051    +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
102052    +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
102053    +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
102054    +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
102055    +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
102056    +if
102057    +_FILTERNORM1 not in ( '.')
102058    + and
102059    +_FILTERNORM2 not in ( '.')
102060    + and
102061    +_FILTERNORM3 not in ( '.')
102062    + and
102063    +_FILTERNORM4 not in ( '.')
102064    + and
102065    +_FILTERNORM5 not in ( '.')
102066    + and
102067    +_FILTERNORM6 not in ( '.')
102068    + and
102069    +_FILTERNORM7 not in ( ' ')
102070    + and
102071    +_FILTERNORM8 not in ( ' ')
102072    +and
102073    +( Dt_Customer ne .)
102074    +and ( Income ne . and (Income<=107000))
102075    +and ( Kidhome ne .)
102076    +and ( MntFishProducts ne .)
102077    +and ( MntFruits ne .)
102078    +and ( MntGoldProds ne .)
102079    +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
102080    +and ( MntSweetProducts ne .)
102081    +and ( MntWines ne .)
102082    +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
102083    +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
102084    +and ( NumStorePurchases ne .)
102085    +and ( NumWebPurchases ne .)
102086    +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
102087    +and ( Recency ne .)
102088    +and ( Teenhome ne .)
102089    +and ( Year_Birth ne .)
102090    +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
102091    +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
102092    +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
102093    +end;
MPRINT(EM_DIAGRAM):   end;
102094    +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
102095    +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
102096     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
102097     quit;
102098     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
102099     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
102100     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
102101     retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
102102     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
102103     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

102104     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
102105     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
102106     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

102107     proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
102108     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
102109     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

102110     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
102111     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
102112     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
102113     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

102114     proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
102115     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

102116     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
102117     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
102118     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

102119     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
102120     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
102121     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
102122     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

102123     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
102124     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
102124   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

102125     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

102126     proc append base=EMWS8.Ensmbl23_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl23_FCMP data=_tempx;
102127     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL23_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL23_FCMP has 1106 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

102128     %macro varDept(fcmpdata=,id=);
102129     %global nobs&id scoreFlag&id;
102130     %let scoreFlag&id = 0;
102131     %if &id=1 or ^&fcmpStart %then %do;
102132     proc sort data=&fcmpdata out=_temp&id nodupkey;
102133     by NAME;
102134     where id=&id and LHS in( %let j=1;
102135     %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
102136     %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
102137     "&var" %let j = %eval(&j+1);
102138     %end;
102139     );
102140     run;
102141     %let dsid = %sysfunc(open(_temp&id));
102142     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
102143     %let dsid = %sysfunc(close(&dsid));
102144     %if &&nobs&id %then %do;
102145     %let scoreFlag&id = 1;
102146     %let fcmpStart = 1;
102147     %end;
102148     %else %let fcmpStart = 0;
102149     %end;
102150     %else %do;
102151     proc sort data=&fcmpdata out=_tempid;
102152     where id=&id;
102153     by LHS;
102154     run;
102155     %let dsid = %sysfunc(open(_tempid));
102156     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
102157     %let dsid = %sysfunc(close(&dsid));
102158     %if ^&&nobs&id %then %do;
102159     proc datasets lib=work nolist;
102160     delete _tempid;
102161     run;
102162     quit;
102163     %end;
102164     %else %do;
102165     data _tempAll;
102166     set %let j=%eval(&id-1);
102167     %do x=1 %to &j;
102168     %if &&nobs&x %then %do;
102169     _temp&x %end;
102170     %end;
102171     ;
102172     run;
102173     proc sql;
102174     create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
102174   ! work._tempid p2 where p.name=p2.lhs;
102175     quit;
102176     data _temp&id;
102177     set _temp&id;
102178     where LHS ne '' and NAME ne '' and Node ne '';
102179     run;
102180     proc datasets lib=work nolist;
102181     delete _tempAll;
102182     run;
102183     %let dsid = %sysfunc(open(_temp&id));
102184     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
102185     %let dsid = %sysfunc(close(&dsid));
102186     %if ^&&nobs&id %then %do;
102187     proc datasets lib=work nolist;
102188     delete _temp&id;
102189     run;
102190     quit;
102191     %end;
102192     %else %do;
102193     %let scoreFlag&id = 1;
102194     data _temp&id;
102195     set _temp&id;
102196     where LHS ne NAME and node ne '';
102197     run;
102198     %let dsid = %sysfunc(open(_temp&id));
102199     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
102200     %let dsid = %sysfunc(close(&dsid));
102201     %if ^&&nobs&id %then %do;
102202     proc datasets lib=work nolist;
102203     delete _temp&id;
102204     run;
102205     quit;
102206     %end;
102207     %else %do;
102208     proc sort data=_temp&id nodupkey;
102209     by LHS NAME;
102210     run;
102211     %end;
102212     %end;
102213     %end;
102214     %end;
102215     %mend varDept;
102216     %macro optCode(outdata=fcmpdata);
102217     %global fcmpStart;
102218     %let fcmpStart = 0;
102219     %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
102220     %let NumNodes=9;
102221     %do k=1 %to &NumNodes;
102222     %vardept(fcmpdata=&outdata, id=&k);
102223     %end;
102224     %mend optCode;
102225     %optcode(outData=EMWS8.Ensmbl23_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl23_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL23_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl23_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 115 observations read from the data set EMWS8.ENSMBL23_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 85 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 30 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl23_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL23_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl23_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL23_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl23_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL23_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 30 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 30 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 2 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl23_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL23_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 30 observations read from the data set WORK._TEMP2.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 32 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 33 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl23_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL23_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 30 observations read from the data set WORK._TEMP2.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: There were 33 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 65 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl23_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL23_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl23_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL23_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

102226     data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
102227     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
102228     where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
102229     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

102230     data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
102231     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
102232     where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
102233     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

102234     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
102235     create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
102235   ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 2 rows and 3 columns.

102236     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

102237     data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
102238     set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
102239     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 2 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 2 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

102240     filename _pref
102240   ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural38\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural38\EMPUBLISHSCORE.sas";
102241     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
102242     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural38\EMPUBLISHSCORE.sas.
102243    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
102244    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
102245    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
102246    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
102247    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
102248    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
102249    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
102250    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
102251    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
102252    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
102253    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
102254    +LENGTH _WARN_ $4
102255    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
102256    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
The SAS System

MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
102257    +
102258    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
102259    +
102260    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
102261    +
102262    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
102263    +
102264    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
102265    +
102266    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
102267    +
102268    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
102269    +
102270    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
102271    +
102272    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
102273    +
102274    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
102275    +
102276    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
102277    +
102278    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
102279    +
102280    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
102281    +
102282    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
102283    +
102284    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
102285    +
102286    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
102287    +
102288    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
102289    +
102290    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
102291    +
102292    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
102293    +
102294    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
102295    +
102296    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
102297    +
102298    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
102299    +
102300    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
102301    +
102302    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
102303    +
102304    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
102305    +
102306    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
102307    +
102308    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
102309    +
102310    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
102311    +
102312    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
102313    +
102314    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
102315    +
102316    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
102317    +
102318    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
102319    +
102320    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
102321    +
102322    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
102323    +
102324    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
102325    +
102326    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
102327    +
102328    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
102329    +
102330    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
102331    +
102332    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
102333    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
102334    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
102335    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
102336    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
102337    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
102338    +end;
MPRINT(EM_DIAGRAM):   end;
102339    +else do;
MPRINT(EM_DIAGRAM):   else do;
102340    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
102341    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
102342    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
102343    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
102344    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
102345    +   end;
MPRINT(EM_DIAGRAM):   end;
102346    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
102347    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
102348    +   end;
MPRINT(EM_DIAGRAM):   end;
102349    +   else do;
MPRINT(EM_DIAGRAM):   else do;
102350    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
102351    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
102352    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
102353    +   end;
MPRINT(EM_DIAGRAM):   end;
102354    +end;
MPRINT(EM_DIAGRAM):   end;
102355    +
102356    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
102357    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
102358    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
102359    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
102360    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
102361    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
102362    +end;
MPRINT(EM_DIAGRAM):   end;
102363    +else do;
MPRINT(EM_DIAGRAM):   else do;
102364    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
102365    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
102366    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
102367    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
102368    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
102369    +   end;
MPRINT(EM_DIAGRAM):   end;
102370    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
102371    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
102372    +   end;
MPRINT(EM_DIAGRAM):   end;
102373    +   else do;
MPRINT(EM_DIAGRAM):   else do;
102374    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
102375    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
102376    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
102377    +   end;
MPRINT(EM_DIAGRAM):   end;
102378    +end;
MPRINT(EM_DIAGRAM):   end;
102379    +
102380    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
102381    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
102382    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
102383    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
102384    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
102385    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
102386    +end;
MPRINT(EM_DIAGRAM):   end;
102387    +else do;
MPRINT(EM_DIAGRAM):   else do;
102388    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
102389    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
102390    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
102391    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
102392    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
102393    +   end;
MPRINT(EM_DIAGRAM):   end;
102394    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
102395    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
102396    +   end;
MPRINT(EM_DIAGRAM):   end;
102397    +   else do;
MPRINT(EM_DIAGRAM):   else do;
102398    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
102399    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
102400    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
102401    +   end;
MPRINT(EM_DIAGRAM):   end;
102402    +end;
MPRINT(EM_DIAGRAM):   end;
102403    +
102404    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
102405    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
102406    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
102407    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
102408    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
102409    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
102410    +end;
MPRINT(EM_DIAGRAM):   end;
102411    +else do;
MPRINT(EM_DIAGRAM):   else do;
102412    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
102413    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
102414    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
102415    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
102416    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
102417    +   end;
MPRINT(EM_DIAGRAM):   end;
102418    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
102419    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
102420    +   end;
MPRINT(EM_DIAGRAM):   end;
102421    +   else do;
MPRINT(EM_DIAGRAM):   else do;
102422    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
102423    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
102424    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
102425    +   end;
MPRINT(EM_DIAGRAM):   end;
102426    +end;
MPRINT(EM_DIAGRAM):   end;
102427    +
102428    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
102429    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
102430    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
102431    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
102432    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
102433    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
102434    +end;
MPRINT(EM_DIAGRAM):   end;
102435    +else do;
MPRINT(EM_DIAGRAM):   else do;
102436    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
102437    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
102438    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
102439    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
102440    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
102441    +   end;
MPRINT(EM_DIAGRAM):   end;
102442    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
102443    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
102444    +   end;
MPRINT(EM_DIAGRAM):   end;
102445    +   else do;
MPRINT(EM_DIAGRAM):   else do;
102446    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
102447    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
102448    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
102449    +   end;
MPRINT(EM_DIAGRAM):   end;
102450    +end;
MPRINT(EM_DIAGRAM):   end;
102451    +
102452    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
102453    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
102454    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
102455    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
102456    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
102457    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
102458    +end;
MPRINT(EM_DIAGRAM):   end;
102459    +else do;
MPRINT(EM_DIAGRAM):   else do;
102460    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
102461    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
102462    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
102463    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
102464    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
102465    +   end;
MPRINT(EM_DIAGRAM):   end;
102466    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
102467    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
102468    +   end;
MPRINT(EM_DIAGRAM):   end;
102469    +   else do;
MPRINT(EM_DIAGRAM):   else do;
102470    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
102471    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
102472    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
102473    +   end;
MPRINT(EM_DIAGRAM):   end;
102474    +end;
MPRINT(EM_DIAGRAM):   end;
102475    +
102476    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
102477    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
102478    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
102479    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
102480    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
102481    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
102482    +end;
MPRINT(EM_DIAGRAM):   end;
102483    +else do;
MPRINT(EM_DIAGRAM):   else do;
102484    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
102485    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
102486    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
102487    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
102488    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
102489    +   end;
MPRINT(EM_DIAGRAM):   end;
102490    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
102491    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
102492    +   end;
MPRINT(EM_DIAGRAM):   end;
102493    +   else do;
MPRINT(EM_DIAGRAM):   else do;
102494    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
102495    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
102496    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
102497    +   end;
MPRINT(EM_DIAGRAM):   end;
102498    +end;
MPRINT(EM_DIAGRAM):   end;
102499    +
102500    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
102501    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
102502    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
102503    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
102504    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
102505    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
102506    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
102507    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
102508    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
102509    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
102510    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
102511    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
102512    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
102513    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
102514    +end;
MPRINT(EM_DIAGRAM):   end;
102515    +else do;
MPRINT(EM_DIAGRAM):   else do;
102516    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
102517    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
102518    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
102519    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
102520    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
102521    +   end;
MPRINT(EM_DIAGRAM):   end;
102522    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
102523    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
102524    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
102525    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
102526    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
102527    +   end;
MPRINT(EM_DIAGRAM):   end;
102528    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
102529    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
102530    +   end;
MPRINT(EM_DIAGRAM):   end;
102531    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
102532    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
102533    +   end;
MPRINT(EM_DIAGRAM):   end;
102534    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
102535    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
102536    +   end;
MPRINT(EM_DIAGRAM):   end;
102537    +   else do;
MPRINT(EM_DIAGRAM):   else do;
102538    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
102539    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
102540    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
102541    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
102542    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
102543    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
102544    +   end;
MPRINT(EM_DIAGRAM):   end;
102545    +end;
MPRINT(EM_DIAGRAM):   end;
102546    +
102547    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
102548    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
102549    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
102550    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
102551    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
102552    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
102553    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
102554    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
102555    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
102556    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
102557    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
102558    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
102559    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
102560    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
102561    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
102562    +end;
MPRINT(EM_DIAGRAM):   end;
102563    +else do;
MPRINT(EM_DIAGRAM):   else do;
102564    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
102565    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
102566    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
102567    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
102568    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
102569    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
102570    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
102571    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
102572    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
102573    +         end;
MPRINT(EM_DIAGRAM):   end;
102574    +         else do;
MPRINT(EM_DIAGRAM):   else do;
102575    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
102576    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
102577    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
102578    +            end;
MPRINT(EM_DIAGRAM):   end;
102579    +         end;
MPRINT(EM_DIAGRAM):   end;
102580    +      end;
MPRINT(EM_DIAGRAM):   end;
102581    +      else do;
MPRINT(EM_DIAGRAM):   else do;
102582    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
102583    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
102584    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
102585    +         end;
MPRINT(EM_DIAGRAM):   end;
102586    +      end;
MPRINT(EM_DIAGRAM):   end;
102587    +   end;
MPRINT(EM_DIAGRAM):   end;
102588    +   else do;
MPRINT(EM_DIAGRAM):   else do;
102589    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
102590    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
102591    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
102592    +      end;
MPRINT(EM_DIAGRAM):   end;
102593    +      else do;
MPRINT(EM_DIAGRAM):   else do;
102594    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
102595    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
102596    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
102597    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
102598    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
102599    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
102600    +         end;
MPRINT(EM_DIAGRAM):   end;
102601    +      end;
MPRINT(EM_DIAGRAM):   end;
102602    +   end;
MPRINT(EM_DIAGRAM):   end;
102603    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
102604    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
102605    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
102606    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
102607    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
102608    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
102609    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
102610    +   end;
MPRINT(EM_DIAGRAM):   end;
102611    +end;
MPRINT(EM_DIAGRAM):   end;
102612    +
102613    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
102614    +*** Checking missing input Interval
102615    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
102616    +
102617    +IF NMISS(
102618    +   AcceptedCmpTotal ,
102619    +   Age ,
102620    +   Frq ,
102621    +   Income ,
102622    +   Kidhome ,
102623    +   MntFishProducts ,
102624    +   MntFruits ,
102625    +   MntGoldProds ,
102626    +   MntSweetProducts ,
102627    +   MonthsAsCustomer ,
102628    +   NumDealsPurchases ,
102629    +   NumWebVisitsMonth ,
102630    +   RFMstat ,
102631    +   RMntFrq ,
102632    +   Recency ,
102633    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
102634    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
102635    +
102636    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
102637    +END;
MPRINT(EM_DIAGRAM):   END;
102638    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
102639    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
102640    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
102641    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
102642    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
102643    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
102644    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
102645    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
102646    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
102647    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
102648    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
102649    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
102650    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
102651    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
102652    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
102653    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
102654    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
102655    +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
102656    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
102657    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
102658    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
102659    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
102660    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
102661    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
102662    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
102663    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
102664    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
102665    +END;
MPRINT(EM_DIAGRAM):   END;
102666    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
102667    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
102668    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
102669    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
102670    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
102671    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
102672    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
102673    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
102674    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
102675    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
102676    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
102677    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
102678    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
102679    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
102680    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
102681    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
102682    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
102683    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
102684    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
102685    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
102686    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
102687    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
102688    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
102689    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
102690    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
102691    +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
102692    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
102693    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
102694    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
102695    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
102696    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
102697    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
102698    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
102699    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
102700    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
102701    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
102702    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
102703    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
102704    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
102705    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
102706    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
102707    +END;
MPRINT(EM_DIAGRAM):   END;
102708    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
102709    +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
102710    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
102711    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
102712    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
102713    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
102714    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
102715    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
102716    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
102717    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
102718    +   H1x1_1  =     0.14799095926144 * S_AcceptedCmpTotal
102719    +          +    -0.04647384466642 * S_Age  +     0.24999790039572 * S_Frq
102720    +          +     0.67193946760329 * S_Income  +    -0.42077272097029 *
102721    +        S_Kidhome  +    -0.02139676364759 * S_MntFishProducts
102722    +          +    -0.06309036790386 * S_MntFruits  +    -0.02579098391162 *
102723    +        S_MntGoldProds  +    -0.10360214785919 * S_MntSweetProducts
102724    +          +     0.07696704519183 * S_MonthsAsCustomer
102725    +          +     0.06885982009617 * S_NumDealsPurchases
102726    +          +     0.18284147478918 * S_NumWebVisitsMonth
102727    +          +    -0.00475791839806 * S_RFMstat  +     0.16731511643557 *
102728    +        S_RMntFrq  +    -0.65651411558717 * S_Recency
102729    +          +    -0.45659275487674 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.14799095926144 * S_AcceptedCmpTotal + -0.04647384466642 * 
S_Age + 0.24999790039572 * S_Frq + 0.67193946760329 * S_Income + -0.42077272097029 * S_Kidhome 
+ -0.02139676364759 * S_MntFishProducts + -0.06309036790386 * S_MntFruits + -0.02579098391162 
* S_MntGoldProds + -0.10360214785919 * S_MntSweetProducts + 0.07696704519183 * 
S_MonthsAsCustomer + 0.06885982009617 * S_NumDealsPurchases + 0.18284147478918 * 
S_NumWebVisitsMonth + -0.00475791839806 * S_RFMstat + 0.16731511643557 * S_RMntFrq + 
-0.65651411558717 * S_Recency + -0.45659275487674 * S_Teenhome ;
102730    +   H1x1_2  =      0.4505629421372 * S_AcceptedCmpTotal
102731    +          +     0.25939118491361 * S_Age  +     2.77688249418832 * S_Frq
102732    +          +     0.32697030303845 * S_Income  +    -0.37246867163551 *
102733    +        S_Kidhome  +    -0.61585865165341 * S_MntFishProducts
102734    +          +     0.48583904586511 * S_MntFruits  +    -0.38353134378746 *
102735    +        S_MntGoldProds  +     0.00655094628315 * S_MntSweetProducts
102736    +          +     0.19400730773464 * S_MonthsAsCustomer
102737    +          +    -1.36455521037197 * S_NumDealsPurchases
102738    +          +    -1.07068059346196 * S_NumWebVisitsMonth
102739    +          +     -0.4953702697801 * S_RFMstat  +    -0.73989265677449 *
102740    +        S_RMntFrq  +     1.36066079800227 * S_Recency
102741    +          +    -0.04271320094349 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.4505629421372 * S_AcceptedCmpTotal + 0.25939118491361 * S_Age 
+ 2.77688249418832 * S_Frq + 0.32697030303845 * S_Income + -0.37246867163551 * S_Kidhome + 
-0.61585865165341 * S_MntFishProducts + 0.48583904586511 * S_MntFruits + -0.38353134378746 * 
S_MntGoldProds + 0.00655094628315 * S_MntSweetProducts + 0.19400730773464 * S_MonthsAsCustomer 
+ -1.36455521037197 * S_NumDealsPurchases + -1.07068059346196 * S_NumWebVisitsMonth + 
-0.4953702697801 * S_RFMstat + -0.73989265677449 * S_RMntFrq + 1.36066079800227 * S_Recency + 
-0.04271320094349 * S_Teenhome ;
102742    +   H1x1_1  = H1x1_1  +    -0.15625358687394 * AcceptedCmp10
102743    +          +    -0.16004536933275 * AcceptedCmp20  +    -0.25016784155495 *
102744    +        AcceptedCmp30  +    -0.15585105085453 * AcceptedCmp40
102745    +          +    -0.06982247699471 * AcceptedCmp50  +    -0.11568047349098 *
102746    +        Complain0  +     0.36349047632504 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.15625358687394 * AcceptedCmp10 + -0.16004536933275 
* AcceptedCmp20 + -0.25016784155495 * AcceptedCmp30 + -0.15585105085453 * AcceptedCmp40 + 
-0.06982247699471 * AcceptedCmp50 + -0.11568047349098 * Complain0 + 0.36349047632504 * 
HigherEducationBinary0 ;
102747    +   H1x1_2  = H1x1_2  +     1.51765243597714 * AcceptedCmp10
102748    +          +     1.47001519525633 * AcceptedCmp20  +      1.4613337402064 *
102749    +        AcceptedCmp30  +     0.39175009738324 * AcceptedCmp40
102750    +          +    -0.35396325940732 * AcceptedCmp50  +     -0.8151538493653 *
102751    +        Complain0  +     0.47014175146609 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 1.51765243597714 * AcceptedCmp10 + 1.47001519525633 * 
AcceptedCmp20 + 1.4613337402064 * AcceptedCmp30 + 0.39175009738324 * AcceptedCmp40 + 
-0.35396325940732 * AcceptedCmp50 + -0.8151538493653 * Complain0 + 0.47014175146609 * 
HigherEducationBinary0 ;
102752    +   H1x1_1  = H1x1_1  +    -0.41546031612995 * Education2n_Cycle
102753    +          +     0.33474673936754 * EducationBasic  +     0.15788973153313 *
102754    +        EducationGraduation  +    -0.13796568916415 * EducationMaster
102755    +          +     0.23432241402098 * Marital_StatusDivorced
102756    +          +    -0.46302700269027 * Marital_StatusMarried
102757    +          +      0.4032168653504 * Marital_StatusSingle
102758    +          +    -0.44795341835702 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.41546031612995 * Education2n_Cycle + 
0.33474673936754 * EducationBasic + 0.15788973153313 * EducationGraduation + -0.13796568916415 
* EducationMaster + 0.23432241402098 * Marital_StatusDivorced + -0.46302700269027 * 
Marital_StatusMarried + 0.4032168653504 * Marital_StatusSingle + -0.44795341835702 * 
Marital_StatusTogether ;
102759    +   H1x1_2  = H1x1_2  +    -0.18958861902397 * Education2n_Cycle
102760    +          +     0.56593307913524 * EducationBasic  +    -0.16639049776163 *
102761    +        EducationGraduation  +     -0.3917553423088 * EducationMaster
102762    +          +    -0.31347503340603 * Marital_StatusDivorced
102763    +          +    -0.20319530959178 * Marital_StatusMarried
102764    +          +     0.48298350411196 * Marital_StatusSingle
102765    +          +      -0.252969507874 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.18958861902397 * Education2n_Cycle + 
0.56593307913524 * EducationBasic + -0.16639049776163 * EducationGraduation + -0.3917553423088 
* EducationMaster + -0.31347503340603 * Marital_StatusDivorced + -0.20319530959178 * 
Marital_StatusMarried + 0.48298350411196 * Marital_StatusSingle + -0.252969507874 * 
Marital_StatusTogether ;
102766    +   H1x1_1  =    -1.25768416618497 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.25768416618497 + H1x1_1 ;
102767    +   H1x1_2  =      1.4658519648796 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.4658519648796 + H1x1_2 ;
102768    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
102769    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
102770    +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
102771    +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
102772    +END;
MPRINT(EM_DIAGRAM):   END;
102773    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
102774    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
102775    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
102776    +END;
MPRINT(EM_DIAGRAM):   END;
102777    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
102778    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
102779    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
102780    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
102781    +   P_DepVar1  =     15.2788764824385 * H1x1_1  +    -7.37711503177617 * H1x1_2
102782    +         ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 15.2788764824385 * H1x1_1 + -7.37711503177617 * H1x1_2 ;
102783    +   P_DepVar1  =     0.37159160751318 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.37159160751318 + P_DepVar1 ;
102784    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
102785    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
102786    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
102787    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
102788    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
102789    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
102790    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
102791    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
102792    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
102793    +END;
MPRINT(EM_DIAGRAM):   END;
102794    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
102795    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
102796    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
102797    +END;
MPRINT(EM_DIAGRAM):   END;
102798    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
102799    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
102800    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
102801    +END;
MPRINT(EM_DIAGRAM):   END;
102802    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
102803    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
102804    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
102805    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
102806    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
102807    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
102808    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
102809    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
102810    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
102811    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
102812    +END;
MPRINT(EM_DIAGRAM):   END;
102813    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
102814    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
102815    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
102816    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
102817     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
102818     quit;
102819     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
102820     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
102821     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
102822     retain ID 2 Node "AutoNeural38";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural38";
102823     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
102824     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1643 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1643 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

102825     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
102826     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
102827     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1643 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1643 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

102828     proc sort data=EMWS8.AutoNeural38_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural38_variableset out=_temp2(keep=NAME 
CREATOR);
102829     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
102830     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL38_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

102831     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
102832     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
102833     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
102834     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

102835     proc contents data=EMWS8.AutoNeural38_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural38_train out=_meta(keep=NAME) noprint;
102836     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 55 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

102837     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
102838     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
102839     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 55 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 55 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

102840     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
102841     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
102842     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
102843     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 55 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 55 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

102844     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
102845     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
102845   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 936 rows and 5 columns.

102846     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

102847     proc append base=EMWS8.Ensmbl23_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl23_FCMP data=_tempx;
102848     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL23_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 936 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL23_FCMP has 936 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

102849     filename _pref
102849   ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
102850     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
102851     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
102852    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
102853    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
102854    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
102855    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
102856    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
102857    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
102858     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
102859     quit;
102860     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
102861     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
102862     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
102863     retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
102864     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
102865     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

102866     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
102867     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
102868     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

102869     proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
102870     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
102871     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

102872     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
102873     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
102874     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
102875     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

102876     proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
102877     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

102878     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
102879     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
102880     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

102881     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
102882     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
102883     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
102884     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

102885     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
102886     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
102886   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

102887     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

102888     proc append base=EMWS8.Ensmbl23_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl23_FCMP data=_tempx;
102889     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL23_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL23_FCMP has 940 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

102890     filename _pref
102890   ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
102891     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
102892     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
102893    +
102894    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
102895    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
102895   !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
102896    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
102897    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
102898    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
102899    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
102900    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
102901     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
102902     quit;
102903     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
102904     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
102905     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
102906     retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
102907     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
102908     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

102909     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
102910     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
102911     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

102912     proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
102913     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
102914     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

102915     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
102916     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
102917     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
102918     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

102919     proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
102920     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

102921     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
102922     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
102923     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

102924     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
102925     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
102926     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
102927     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

102928     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
102929     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
102929   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

102930     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

102931     proc append base=EMWS8.Ensmbl23_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl23_FCMP data=_tempx;
102932     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL23_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL23_FCMP has 979 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

102933     filename _pref
102933   ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
102934     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
102935     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
102936    +
102937    +
102938    +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
102939    +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
102940    +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
102941    +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
102942    +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
102943    +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
102944    +
102945    +
102946    +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
102947    +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
102948    +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
102949    +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
102950    +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
102951    +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
102952    +
102953    +
102954    +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
102955    +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
102956    +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
102957    +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
102958    +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
102959    +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
102960    +
102961    +
102962    +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
102963    +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
102964    +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
102965    +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
102966    +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
102967    +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
102968    +
102969    +
102970    +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
102971    +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
102972    +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
102973    +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
102974    +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
102975    +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
102976    +
102977    +
102978    +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
102979    +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
102980    +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
102981    +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
102982    +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
102983    +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
102984    +
102985    +
102986    +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
102987    +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
102988    +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
102989    +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
102990    +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
102991    +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
102992    +
102993    +
102994    +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
102995    +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
102996    +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
102997    +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
102998    +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
102999    +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
103000    +if
103001    +_FILTERNORM1 not in ( '.')
103002    + and
103003    +_FILTERNORM2 not in ( '.')
103004    + and
103005    +_FILTERNORM3 not in ( '.')
103006    + and
103007    +_FILTERNORM4 not in ( '.')
103008    + and
103009    +_FILTERNORM5 not in ( '.')
103010    + and
103011    +_FILTERNORM6 not in ( '.')
103012    + and
103013    +_FILTERNORM7 not in ( ' ')
103014    + and
103015    +_FILTERNORM8 not in ( ' ')
103016    +and
103017    +( Dt_Customer ne .)
103018    +and ( Income ne . and (Income<=107000))
103019    +and ( Kidhome ne .)
103020    +and ( MntFishProducts ne .)
103021    +and ( MntFruits ne .)
103022    +and ( MntGoldProds ne .)
103023    +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
103024    +and ( MntSweetProducts ne .)
103025    +and ( MntWines ne .)
103026    +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
103027    +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
103028    +and ( NumStorePurchases ne .)
103029    +and ( NumWebPurchases ne .)
103030    +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
103031    +and ( Recency ne .)
103032    +and ( Teenhome ne .)
103033    +and ( Year_Birth ne .)
103034    +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
103035    +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
103036    +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
103037    +end;
MPRINT(EM_DIAGRAM):   end;
103038    +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
103039    +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
103040     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
103041     quit;
103042     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
103043     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
103044     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
103045     retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
103046     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
103047     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

103048     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
103049     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
103050     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

103051     proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
103052     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
103053     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

103054     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
103055     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
103056     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
103057     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

103058     proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
103059     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

103060     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
103061     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
103062     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

103063     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
103064     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
103065     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
103066     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

103067     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
103068     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
103068   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

103069     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

103070     proc append base=EMWS8.Ensmbl23_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl23_FCMP data=_tempx;
103071     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL23_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL23_FCMP has 1045 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

103072     %macro varDept(fcmpdata=,id=);
103073     %global nobs&id scoreFlag&id;
103074     %let scoreFlag&id = 0;
103075     %if &id=1 or ^&fcmpStart %then %do;
103076     proc sort data=&fcmpdata out=_temp&id nodupkey;
103077     by NAME;
103078     where id=&id and LHS in( %let j=1;
103079     %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
103080     %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
103081     "&var" %let j = %eval(&j+1);
103082     %end;
103083     );
103084     run;
103085     %let dsid = %sysfunc(open(_temp&id));
103086     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
103087     %let dsid = %sysfunc(close(&dsid));
103088     %if &&nobs&id %then %do;
103089     %let scoreFlag&id = 1;
103090     %let fcmpStart = 1;
103091     %end;
103092     %else %let fcmpStart = 0;
103093     %end;
103094     %else %do;
103095     proc sort data=&fcmpdata out=_tempid;
103096     where id=&id;
103097     by LHS;
103098     run;
103099     %let dsid = %sysfunc(open(_tempid));
103100     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
103101     %let dsid = %sysfunc(close(&dsid));
103102     %if ^&&nobs&id %then %do;
103103     proc datasets lib=work nolist;
103104     delete _tempid;
103105     run;
103106     quit;
103107     %end;
103108     %else %do;
103109     data _tempAll;
103110     set %let j=%eval(&id-1);
103111     %do x=1 %to &j;
103112     %if &&nobs&x %then %do;
103113     _temp&x %end;
103114     %end;
103115     ;
103116     run;
103117     proc sql;
103118     create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
103118   ! work._tempid p2 where p.name=p2.lhs;
103119     quit;
103120     data _temp&id;
103121     set _temp&id;
103122     where LHS ne '' and NAME ne '' and Node ne '';
103123     run;
103124     proc datasets lib=work nolist;
103125     delete _tempAll;
103126     run;
103127     %let dsid = %sysfunc(open(_temp&id));
103128     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
103129     %let dsid = %sysfunc(close(&dsid));
103130     %if ^&&nobs&id %then %do;
103131     proc datasets lib=work nolist;
103132     delete _temp&id;
103133     run;
103134     quit;
103135     %end;
103136     %else %do;
103137     %let scoreFlag&id = 1;
103138     data _temp&id;
103139     set _temp&id;
103140     where LHS ne NAME and node ne '';
103141     run;
103142     %let dsid = %sysfunc(open(_temp&id));
103143     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
103144     %let dsid = %sysfunc(close(&dsid));
103145     %if ^&&nobs&id %then %do;
103146     proc datasets lib=work nolist;
103147     delete _temp&id;
103148     run;
103149     quit;
103150     %end;
103151     %else %do;
103152     proc sort data=_temp&id nodupkey;
103153     by LHS NAME;
103154     run;
103155     %end;
103156     %end;
103157     %end;
103158     %end;
103159     %mend varDept;
103160     %macro optCode(outdata=fcmpdata);
103161     %global fcmpStart;
103162     %let fcmpStart = 0;
103163     %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
103164     %let NumNodes=9;
103165     %do k=1 %to &NumNodes;
103166     %vardept(fcmpdata=&outdata, id=&k);
103167     %end;
103168     %mend optCode;
103169     %optcode(outData=EMWS8.Ensmbl23_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl23_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL23_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl23_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 112 observations read from the data set EMWS8.ENSMBL23_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 83 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 29 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl23_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL23_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl23_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL23_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl23_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL23_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 29 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 29 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 2 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl23_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL23_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 29 observations read from the data set WORK._TEMP2.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 31 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 33 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl23_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL23_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 29 observations read from the data set WORK._TEMP2.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: There were 33 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 64 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl23_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL23_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl23_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL23_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

103170     data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
103171     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
103172     where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
103173     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

103174     data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
103175     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
103176     where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
103177     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

103178     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
103179     create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
103179   ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 2 rows and 3 columns.

103180     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

103181     data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
103182     set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
103183     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 2 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 2 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

103184     filename _pref
103184   ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural39\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural39\EMPUBLISHSCORE.sas";
103185     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
103186     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural39\EMPUBLISHSCORE.sas.
103187    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
103188    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
103189    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
103190    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
103191    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
103192    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
103193    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
103194    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
103195    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
103196    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
103197    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
103198    +LENGTH _WARN_ $4
103199    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
103200    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
103201    +
103202    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
103203    +
103204    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
103205    +
103206    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
103207    +
103208    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
103209    +
103210    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
103211    +
103212    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
103213    +
103214    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
103215    +
103216    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
103217    +
103218    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
103219    +
103220    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
103221    +
103222    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
103223    +
103224    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
103225    +
103226    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
103227    +
103228    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
103229    +
103230    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
103231    +
103232    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
103233    +
103234    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
103235    +
103236    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
103237    +
103238    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
103239    +
103240    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
103241    +
103242    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
103243    +
103244    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
103245    +
103246    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
103247    +
103248    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
103249    +
103250    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
103251    +
103252    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
103253    +
103254    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
103255    +
103256    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
103257    +
103258    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
103259    +
103260    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
103261    +
103262    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
103263    +
103264    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
103265    +
103266    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
103267    +
103268    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
103269    +
103270    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
103271    +
103272    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
103273    +
103274    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
103275    +
103276    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
103277    +
103278    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
103279    +
103280    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
103281    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
103282    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
103283    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
103284    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
103285    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
103286    +end;
MPRINT(EM_DIAGRAM):   end;
103287    +else do;
MPRINT(EM_DIAGRAM):   else do;
103288    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
103289    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
103290    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
103291    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
103292    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
103293    +   end;
MPRINT(EM_DIAGRAM):   end;
103294    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
103295    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
103296    +   end;
MPRINT(EM_DIAGRAM):   end;
103297    +   else do;
MPRINT(EM_DIAGRAM):   else do;
103298    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
103299    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
103300    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
103301    +   end;
MPRINT(EM_DIAGRAM):   end;
103302    +end;
MPRINT(EM_DIAGRAM):   end;
103303    +
103304    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
103305    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
103306    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
103307    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
103308    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
103309    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
103310    +end;
MPRINT(EM_DIAGRAM):   end;
103311    +else do;
MPRINT(EM_DIAGRAM):   else do;
103312    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
103313    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
103314    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
103315    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
103316    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
103317    +   end;
MPRINT(EM_DIAGRAM):   end;
103318    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
103319    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
103320    +   end;
MPRINT(EM_DIAGRAM):   end;
103321    +   else do;
MPRINT(EM_DIAGRAM):   else do;
103322    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
103323    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
103324    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
103325    +   end;
MPRINT(EM_DIAGRAM):   end;
103326    +end;
MPRINT(EM_DIAGRAM):   end;
103327    +
103328    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
103329    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
103330    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
103331    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
103332    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
103333    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
103334    +end;
MPRINT(EM_DIAGRAM):   end;
103335    +else do;
MPRINT(EM_DIAGRAM):   else do;
103336    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
103337    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
103338    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
103339    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
103340    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
103341    +   end;
MPRINT(EM_DIAGRAM):   end;
103342    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
103343    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
103344    +   end;
MPRINT(EM_DIAGRAM):   end;
103345    +   else do;
MPRINT(EM_DIAGRAM):   else do;
103346    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
103347    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
103348    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
103349    +   end;
MPRINT(EM_DIAGRAM):   end;
103350    +end;
MPRINT(EM_DIAGRAM):   end;
103351    +
103352    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
103353    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
103354    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
103355    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
103356    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
103357    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
103358    +end;
MPRINT(EM_DIAGRAM):   end;
103359    +else do;
MPRINT(EM_DIAGRAM):   else do;
103360    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
103361    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
103362    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
103363    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
103364    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
103365    +   end;
MPRINT(EM_DIAGRAM):   end;
103366    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
103367    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
103368    +   end;
MPRINT(EM_DIAGRAM):   end;
103369    +   else do;
MPRINT(EM_DIAGRAM):   else do;
103370    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
103371    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
103372    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
103373    +   end;
MPRINT(EM_DIAGRAM):   end;
103374    +end;
MPRINT(EM_DIAGRAM):   end;
103375    +
103376    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
103377    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
103378    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
103379    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
103380    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
103381    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
103382    +end;
MPRINT(EM_DIAGRAM):   end;
103383    +else do;
MPRINT(EM_DIAGRAM):   else do;
103384    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
103385    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
103386    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
103387    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
103388    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
103389    +   end;
MPRINT(EM_DIAGRAM):   end;
103390    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
103391    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
103392    +   end;
MPRINT(EM_DIAGRAM):   end;
103393    +   else do;
MPRINT(EM_DIAGRAM):   else do;
103394    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
103395    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
103396    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
103397    +   end;
MPRINT(EM_DIAGRAM):   end;
103398    +end;
MPRINT(EM_DIAGRAM):   end;
103399    +
103400    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
103401    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
103402    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
103403    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
103404    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
103405    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
103406    +end;
MPRINT(EM_DIAGRAM):   end;
103407    +else do;
MPRINT(EM_DIAGRAM):   else do;
103408    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
103409    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
103410    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
103411    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
103412    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
103413    +   end;
MPRINT(EM_DIAGRAM):   end;
103414    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
103415    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
103416    +   end;
MPRINT(EM_DIAGRAM):   end;
103417    +   else do;
MPRINT(EM_DIAGRAM):   else do;
103418    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
103419    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
103420    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
103421    +   end;
MPRINT(EM_DIAGRAM):   end;
103422    +end;
MPRINT(EM_DIAGRAM):   end;
103423    +
103424    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
103425    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
103426    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
103427    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
103428    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
103429    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
103430    +end;
MPRINT(EM_DIAGRAM):   end;
103431    +else do;
MPRINT(EM_DIAGRAM):   else do;
103432    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
103433    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
103434    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
103435    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
103436    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
103437    +   end;
MPRINT(EM_DIAGRAM):   end;
103438    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
103439    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
103440    +   end;
MPRINT(EM_DIAGRAM):   end;
103441    +   else do;
MPRINT(EM_DIAGRAM):   else do;
103442    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
103443    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
103444    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
103445    +   end;
MPRINT(EM_DIAGRAM):   end;
103446    +end;
MPRINT(EM_DIAGRAM):   end;
103447    +
103448    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
103449    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
103450    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
103451    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
103452    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
103453    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
103454    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
103455    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
103456    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
103457    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
103458    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
103459    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
103460    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
103461    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
103462    +end;
MPRINT(EM_DIAGRAM):   end;
103463    +else do;
MPRINT(EM_DIAGRAM):   else do;
103464    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
103465    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
103466    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
103467    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
103468    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
103469    +   end;
MPRINT(EM_DIAGRAM):   end;
103470    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
103471    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
103472    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
103473    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
103474    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
103475    +   end;
MPRINT(EM_DIAGRAM):   end;
103476    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
103477    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
103478    +   end;
MPRINT(EM_DIAGRAM):   end;
103479    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
103480    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
103481    +   end;
MPRINT(EM_DIAGRAM):   end;
103482    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
103483    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
103484    +   end;
MPRINT(EM_DIAGRAM):   end;
103485    +   else do;
MPRINT(EM_DIAGRAM):   else do;
103486    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
103487    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
103488    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
103489    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
103490    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
103491    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
103492    +   end;
MPRINT(EM_DIAGRAM):   end;
103493    +end;
MPRINT(EM_DIAGRAM):   end;
103494    +
103495    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
103496    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
103497    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
103498    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
103499    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
103500    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
103501    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
103502    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
103503    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
103504    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
103505    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
103506    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
103507    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
103508    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
103509    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
103510    +end;
MPRINT(EM_DIAGRAM):   end;
103511    +else do;
MPRINT(EM_DIAGRAM):   else do;
103512    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
103513    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
103514    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
103515    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
103516    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
103517    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
103518    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
103519    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
103520    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
103521    +         end;
MPRINT(EM_DIAGRAM):   end;
103522    +         else do;
MPRINT(EM_DIAGRAM):   else do;
103523    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
103524    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
103525    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
103526    +            end;
MPRINT(EM_DIAGRAM):   end;
103527    +         end;
MPRINT(EM_DIAGRAM):   end;
103528    +      end;
MPRINT(EM_DIAGRAM):   end;
103529    +      else do;
MPRINT(EM_DIAGRAM):   else do;
103530    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
103531    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
103532    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
103533    +         end;
MPRINT(EM_DIAGRAM):   end;
103534    +      end;
MPRINT(EM_DIAGRAM):   end;
103535    +   end;
MPRINT(EM_DIAGRAM):   end;
103536    +   else do;
MPRINT(EM_DIAGRAM):   else do;
103537    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
103538    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
103539    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
103540    +      end;
MPRINT(EM_DIAGRAM):   end;
103541    +      else do;
MPRINT(EM_DIAGRAM):   else do;
103542    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
103543    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
103544    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
103545    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
103546    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
103547    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
103548    +         end;
MPRINT(EM_DIAGRAM):   end;
103549    +      end;
MPRINT(EM_DIAGRAM):   end;
103550    +   end;
MPRINT(EM_DIAGRAM):   end;
103551    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
103552    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
103553    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
103554    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
103555    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
103556    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
103557    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
103558    +   end;
MPRINT(EM_DIAGRAM):   end;
103559    +end;
MPRINT(EM_DIAGRAM):   end;
103560    +
103561    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
103562    +*** Checking missing input Interval
103563    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
103564    +
103565    +IF NMISS(
103566    +   AcceptedCmpTotal ,
103567    +   Age ,
103568    +   Frq ,
103569    +   Income ,
103570    +   Kidhome ,
103571    +   MntFishProducts ,
103572    +   MntFruits ,
103573    +   MntGoldProds ,
103574    +   MntSweetProducts ,
103575    +   MonthsAsCustomer ,
103576    +   NumDealsPurchases ,
103577    +   NumWebVisitsMonth ,
103578    +   RFMstat ,
103579    +   RMntFrq ,
103580    +   Recency ,
103581    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
103582    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
103583    +
103584    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
103585    +END;
MPRINT(EM_DIAGRAM):   END;
103586    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
103587    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
103588    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
103589    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
103590    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
103591    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
103592    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
103593    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
103594    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
103595    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
103596    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
103597    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
103598    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
103599    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
103600    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
103601    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
103602    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
103603    +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
103604    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
103605    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
103606    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
103607    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
103608    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
103609    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
103610    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
103611    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
103612    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
103613    +END;
MPRINT(EM_DIAGRAM):   END;
103614    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
103615    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
103616    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
103617    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
103618    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
103619    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
103620    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
103621    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
103622    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
103623    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
103624    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
103625    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
103626    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
103627    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
103628    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
103629    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
103630    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
103631    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
103632    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
103633    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
103634    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
103635    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
103636    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
103637    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
103638    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
103639    +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
103640    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
103641    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
103642    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
103643    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
103644    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
103645    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
103646    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
103647    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
103648    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
103649    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
103650    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
103651    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
103652    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
103653    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
103654    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
103655    +END;
MPRINT(EM_DIAGRAM):   END;
103656    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
103657    +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
103658    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
103659    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
103660    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
103661    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
103662    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
103663    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
103664    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
103665    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
103666    +   H11  =    -0.64096829905108 * S_AcceptedCmpTotal  +    -0.11209535704145 *
103667    +        S_Age  +     0.38442347653056 * S_Frq  +     0.10191582051286 *
103668    +        S_Income  +     0.27663215475285 * S_Kidhome
103669    +          +    -0.02861873561507 * S_MntFishProducts
103670    +          +     0.20598948908915 * S_MntFruits  +     0.20804179479079 *
103671    +        S_MntGoldProds  +     0.19160035179466 * S_MntSweetProducts
103672    +          +    -0.30820227749029 * S_MonthsAsCustomer
103673    +          +    -0.64335583461867 * S_NumDealsPurchases
103674    +          +    -0.40339200335235 * S_NumWebVisitsMonth
103675    +          +    -0.05053414482512 * S_RFMstat  +     0.32736870225964 *
103676    +        S_RMntFrq  +     0.73297917115427 * S_Recency
103677    +          +     0.11670126537146 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.64096829905108 * S_AcceptedCmpTotal + -0.11209535704145 * S_Age 
+ 0.38442347653056 * S_Frq + 0.10191582051286 * S_Income + 0.27663215475285 * S_Kidhome + 
-0.02861873561507 * S_MntFishProducts + 0.20598948908915 * S_MntFruits + 0.20804179479079 * 
S_MntGoldProds + 0.19160035179466 * S_MntSweetProducts + -0.30820227749029 * 
S_MonthsAsCustomer + -0.64335583461867 * S_NumDealsPurchases + -0.40339200335235 * 
S_NumWebVisitsMonth + -0.05053414482512 * S_RFMstat + 0.32736870225964 * S_RMntFrq + 
0.73297917115427 * S_Recency + 0.11670126537146 * S_Teenhome ;
103678    +   H12  =     -0.1657091472212 * S_AcceptedCmpTotal  +     0.51956326282264 *
103679    +        S_Age  +     1.09230379920111 * S_Frq  +     0.41850245998114 *
103680    +        S_Income  +     0.04677082637593 * S_Kidhome
103681    +          +    -0.26310923797495 * S_MntFishProducts
103682    +          +     0.07068396793785 * S_MntFruits  +    -0.13614297077165 *
103683    +        S_MntGoldProds  +    -0.41288432261418 * S_MntSweetProducts
103684    +          +     0.31464974024806 * S_MonthsAsCustomer
103685    +          +    -0.51422897206707 * S_NumDealsPurchases
103686    +          +    -0.70210448968741 * S_NumWebVisitsMonth
103687    +          +    -0.20168285475248 * S_RFMstat  +    -0.52597031961785 *
103688    +        S_RMntFrq  +     1.12297422526954 * S_Recency
103689    +          +    -0.19583787100677 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.1657091472212 * S_AcceptedCmpTotal + 0.51956326282264 * S_Age + 
1.09230379920111 * S_Frq + 0.41850245998114 * S_Income + 0.04677082637593 * S_Kidhome + 
-0.26310923797495 * S_MntFishProducts + 0.07068396793785 * S_MntFruits + -0.13614297077165 * 
S_MntGoldProds + -0.41288432261418 * S_MntSweetProducts + 0.31464974024806 * 
S_MonthsAsCustomer + -0.51422897206707 * S_NumDealsPurchases + -0.70210448968741 * 
S_NumWebVisitsMonth + -0.20168285475248 * S_RFMstat + -0.52597031961785 * S_RMntFrq + 
1.12297422526954 * S_Recency + -0.19583787100677 * S_Teenhome ;
103690    +   H13  =    -0.52948883352014 * S_AcceptedCmpTotal  +    -0.12557829758966 *
103691    +        S_Age  +     -0.0390229319101 * S_Frq  +    -0.82750091245735 *
103692    +        S_Income  +    -0.76074905594112 * S_Kidhome
103693    +          +     0.28012200156756 * S_MntFishProducts
103694    +          +    -0.11859027002733 * S_MntFruits  +    -0.41772270940459 *
103695    +        S_MntGoldProds  +     0.02732432410202 * S_MntSweetProducts
103696    +          +    -0.02209353426555 * S_MonthsAsCustomer
103697    +          +    -0.30351716506195 * S_NumDealsPurchases
103698    +          +    -0.54961975756206 * S_NumWebVisitsMonth
103699    +          +    -0.10801362755152 * S_RFMstat  +    -0.18473836604054 *
103700    +        S_RMntFrq  +     0.84276565192556 * S_Recency
103701    +          +     0.30860891080893 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.52948883352014 * S_AcceptedCmpTotal + -0.12557829758966 * S_Age 
+ -0.0390229319101 * S_Frq + -0.82750091245735 * S_Income + -0.76074905594112 * S_Kidhome + 
0.28012200156756 * S_MntFishProducts + -0.11859027002733 * S_MntFruits + -0.41772270940459 * 
S_MntGoldProds + 0.02732432410202 * S_MntSweetProducts + -0.02209353426555 * 
S_MonthsAsCustomer + -0.30351716506195 * S_NumDealsPurchases + -0.54961975756206 * 
S_NumWebVisitsMonth + -0.10801362755152 * S_RFMstat + -0.18473836604054 * S_RMntFrq + 
0.84276565192556 * S_Recency + 0.30860891080893 * S_Teenhome ;
103702    +   H14  =    -0.07567218864184 * S_AcceptedCmpTotal  +     0.02462117827216 *
103703    +        S_Age  +    -0.64320970361048 * S_Frq  +     -1.0659518778449 *
103704    +        S_Income  +     0.68593841144377 * S_Kidhome
103705    +          +     -0.0587169446037 * S_MntFishProducts
103706    +          +     0.24365125001776 * S_MntFruits  +     0.04647719507405 *
103707    +        S_MntGoldProds  +     0.25871718590254 * S_MntSweetProducts
103708    +          +    -0.17220981900732 * S_MonthsAsCustomer
103709    +          +     0.27940162953795 * S_NumDealsPurchases
103710    +          +    -0.04761461934562 * S_NumWebVisitsMonth
103711    +          +    -0.11656397034939 * S_RFMstat  +    -0.30754235450488 *
103712    +        S_RMntFrq  +     0.68962447302378 * S_Recency
103713    +          +     0.73159731135815 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = -0.07567218864184 * S_AcceptedCmpTotal + 0.02462117827216 * S_Age 
+ -0.64320970361048 * S_Frq + -1.0659518778449 * S_Income + 0.68593841144377 * S_Kidhome + 
-0.0587169446037 * S_MntFishProducts + 0.24365125001776 * S_MntFruits + 0.04647719507405 * 
S_MntGoldProds + 0.25871718590254 * S_MntSweetProducts + -0.17220981900732 * 
S_MonthsAsCustomer + 0.27940162953795 * S_NumDealsPurchases + -0.04761461934562 * 
S_NumWebVisitsMonth + -0.11656397034939 * S_RFMstat + -0.30754235450488 * S_RMntFrq + 
0.68962447302378 * S_Recency + 0.73159731135815 * S_Teenhome ;
103714    +   H11  = H11  +     0.25038776257796 * AcceptedCmp10
103715    +          +     0.04282733069599 * AcceptedCmp20  +     0.16936079906612 *
103716    +        AcceptedCmp30  +     0.05079498344461 * AcceptedCmp40
103717    +          +      0.6690889070972 * AcceptedCmp50  +    -0.11756177189054 *
103718    +        Complain0  +     0.00601034671987 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.25038776257796 * AcceptedCmp10 + 0.04282733069599 * 
AcceptedCmp20 + 0.16936079906612 * AcceptedCmp30 + 0.05079498344461 * AcceptedCmp40 + 
0.6690889070972 * AcceptedCmp50 + -0.11756177189054 * Complain0 + 0.00601034671987 * 
HigherEducationBinary0 ;
103719    +   H12  = H12  +     0.63638345806433 * AcceptedCmp10
103720    +          +      0.3453598097393 * AcceptedCmp20  +     0.49359811223374 *
103721    +        AcceptedCmp30  +     0.27581207611627 * AcceptedCmp40
103722    +          +     0.05866095623494 * AcceptedCmp50  +    -0.13005408285069 *
103723    +        Complain0  +      0.2160948352192 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.63638345806433 * AcceptedCmp10 + 0.3453598097393 * 
AcceptedCmp20 + 0.49359811223374 * AcceptedCmp30 + 0.27581207611627 * AcceptedCmp40 + 
0.05866095623494 * AcceptedCmp50 + -0.13005408285069 * Complain0 + 0.2160948352192 * 
HigherEducationBinary0 ;
103724    +   H13  = H13  +     0.09956549586905 * AcceptedCmp10
103725    +          +     0.03691883338772 * AcceptedCmp20  +     0.47736653446815 *
103726    +        AcceptedCmp30  +    -0.91581599271765 * AcceptedCmp40
103727    +          +     0.50560814473618 * AcceptedCmp50  +    -0.33308229467468 *
103728    +        Complain0  +     0.14672770960028 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.09956549586905 * AcceptedCmp10 + 0.03691883338772 * 
AcceptedCmp20 + 0.47736653446815 * AcceptedCmp30 + -0.91581599271765 * AcceptedCmp40 + 
0.50560814473618 * AcceptedCmp50 + -0.33308229467468 * Complain0 + 0.14672770960028 * 
HigherEducationBinary0 ;
103729    +   H14  = H14  +     0.22255149692461 * AcceptedCmp10
103730    +          +     0.13590153487525 * AcceptedCmp20  +     0.33124716818779 *
103731    +        AcceptedCmp30  +     0.53538971216451 * AcceptedCmp40
103732    +          +    -0.15288643860698 * AcceptedCmp50  +     0.30766742713062 *
103733    +        Complain0  +    -0.54379124310959 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.22255149692461 * AcceptedCmp10 + 0.13590153487525 * 
AcceptedCmp20 + 0.33124716818779 * AcceptedCmp30 + 0.53538971216451 * AcceptedCmp40 + 
-0.15288643860698 * AcceptedCmp50 + 0.30766742713062 * Complain0 + -0.54379124310959 * 
HigherEducationBinary0 ;
103734    +   H11  = H11  +    -0.16246752897554 * Education2n_Cycle
103735    +          +    -0.02018324007765 * EducationBasic  +    -0.01853488592136 *
103736    +        EducationGraduation  +    -0.09512206973791 * EducationMaster
103737    +          +     0.04284251520428 * Marital_StatusDivorced
103738    +          +    -0.08591343257218 * Marital_StatusMarried
103739    +          +     0.43667281622253 * Marital_StatusSingle
103740    +          +     0.35264409549804 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.16246752897554 * Education2n_Cycle + -0.02018324007765 * 
EducationBasic + -0.01853488592136 * EducationGraduation + -0.09512206973791 * EducationMaster 
+ 0.04284251520428 * Marital_StatusDivorced + -0.08591343257218 * Marital_StatusMarried + 
0.43667281622253 * Marital_StatusSingle + 0.35264409549804 * Marital_StatusTogether ;
103741    +   H12  = H12  +     0.33728620033583 * Education2n_Cycle
103742    +          +    -0.00479023403414 * EducationBasic  +    -0.10257966569549 *
103743    +        EducationGraduation  +    -0.17955750532548 * EducationMaster
103744    +          +    -0.10823631131846 * Marital_StatusDivorced
103745    +          +     0.15344450170599 * Marital_StatusMarried
103746    +          +    -0.00222187507332 * Marital_StatusSingle
103747    +          +     0.12886702838116 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.33728620033583 * Education2n_Cycle + -0.00479023403414 * 
EducationBasic + -0.10257966569549 * EducationGraduation + -0.17955750532548 * EducationMaster 
+ -0.10823631131846 * Marital_StatusDivorced + 0.15344450170599 * Marital_StatusMarried + 
-0.00222187507332 * Marital_StatusSingle + 0.12886702838116 * Marital_StatusTogether ;
103748    +   H13  = H13  +     0.04434288585425 * Education2n_Cycle
103749    +          +     0.45393732517503 * EducationBasic  +    -0.30230166822748 *
103750    +        EducationGraduation  +     0.06012880669469 * EducationMaster
103751    +          +    -0.20523044713629 * Marital_StatusDivorced
103752    +          +     0.15779331320414 * Marital_StatusMarried
103753    +          +    -0.33273914160638 * Marital_StatusSingle
103754    +          +    -0.25472406769802 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.04434288585425 * Education2n_Cycle + 0.45393732517503 * 
EducationBasic + -0.30230166822748 * EducationGraduation + 0.06012880669469 * EducationMaster 
+ -0.20523044713629 * Marital_StatusDivorced + 0.15779331320414 * Marital_StatusMarried + 
-0.33273914160638 * Marital_StatusSingle + -0.25472406769802 * Marital_StatusTogether ;
103755    +   H14  = H14  +    -0.16441299564379 * Education2n_Cycle
103756    +          +     0.10809494068924 * EducationBasic  +    -0.23265316836427 *
103757    +        EducationGraduation  +      0.3018512119562 * EducationMaster
103758    +          +    -0.24973986133996 * Marital_StatusDivorced
103759    +          +     1.15862092191103 * Marital_StatusMarried
103760    +          +    -0.91451543179937 * Marital_StatusSingle
103761    +          +     0.98391013262071 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.16441299564379 * Education2n_Cycle + 0.10809494068924 * 
EducationBasic + -0.23265316836427 * EducationGraduation + 0.3018512119562 * EducationMaster + 
-0.24973986133996 * Marital_StatusDivorced + 1.15862092191103 * Marital_StatusMarried + 
-0.91451543179937 * Marital_StatusSingle + 0.98391013262071 * Marital_StatusTogether ;
103762    +   H11  =     0.70941478033358 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.70941478033358 + H11 ;
103763    +   H12  =     0.91925226212025 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.91925226212025 + H12 ;
103764    +   H13  =    -0.26151947698166 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.26151947698166 + H13 ;
103765    +   H14  =     1.57965424463368 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 1.57965424463368 + H14 ;
103766    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
103767    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
103768    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
103769    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
103770    +END;
MPRINT(EM_DIAGRAM):   END;
103771    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
103772    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
103773    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
103774    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
103775    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
103776    +END;
MPRINT(EM_DIAGRAM):   END;
103777    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
103778    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
103779    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
103780    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
103781    +   P_DepVar1  =    -1.20356257603969 * H11  +    -1.94296236893655 * H12
103782    +          +    -2.81737663487689 * H13  +    -2.69363833398263 * H14 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.20356257603969 * H11 + -1.94296236893655 * H12 + 
-2.81737663487689 * H13 + -2.69363833398263 * H14 ;
103783    +   P_DepVar1  =    -0.80241057184596 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.80241057184596 + P_DepVar1 ;
103784    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
103785    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
103786    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
103787    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
103788    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
103789    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
103790    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
103791    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
103792    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
103793    +END;
MPRINT(EM_DIAGRAM):   END;
103794    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
103795    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
103796    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
103797    +END;
MPRINT(EM_DIAGRAM):   END;
103798    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
103799    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
103800    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
103801    +END;
MPRINT(EM_DIAGRAM):   END;
103802    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
103803    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
103804    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
103805    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
103806    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
103807    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
103808    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
103809    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
103810    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
103811    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
103812    +END;
MPRINT(EM_DIAGRAM):   END;
103813    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
103814    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
103815    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
103816    +drop
103817    +H11
103818    +H12
103819    +H13
103820    +H14
103821    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 ;
103822    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
103823     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
103824     quit;
103825     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
103826     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
103827     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
103828     retain ID 2 Node "Neural39";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural39";
103829     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
103830     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1891 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1891 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

103831     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
103832     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
103833     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1891 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1891 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

103834     proc sort data=EMWS8.Neural39_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural39_variableset out=_temp2(keep=NAME CREATOR);
103835     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
103836     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.NEURAL39_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

103837     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
103838     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
103839     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
103840     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

103841     proc contents data=EMWS8.Neural39_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural39_train out=_meta(keep=NAME) noprint;
103842     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

103843     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
103844     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
103845     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

103846     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
103847     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
103848     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
103849     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

103850     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
103851     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
103851   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 987 rows and 5 columns.

103852     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

103853     proc append base=EMWS8.Ensmbl23_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl23_FCMP data=_tempx;
103854     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL23_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 987 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL23_FCMP has 987 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

103855     filename _pref
103855   ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
103856     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
103857     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
103858    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
103859    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
103860    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
103861    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
103862    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
103863    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
103864     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
103865     quit;
103866     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
103867     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
103868     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
103869     retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
103870     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
103871     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

103872     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
103873     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
103874     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

103875     proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
103876     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
103877     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

103878     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
103879     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
103880     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
103881     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

103882     proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
103883     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

103884     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
103885     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
103886     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

103887     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
103888     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
103889     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
103890     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

103891     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
103892     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
103892   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

103893     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

103894     proc append base=EMWS8.Ensmbl23_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl23_FCMP data=_tempx;
103895     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL23_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL23_FCMP has 991 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

103896     filename _pref
103896   ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
103897     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
103898     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
103899    +
103900    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
103901    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
103901   !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
103902    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
103903    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
103904    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
103905    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
103906    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
103907     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
103908     quit;
103909     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
103910     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
103911     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
103912     retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
103913     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
103914     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

103915     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
103916     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
103917     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

103918     proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
103919     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
103920     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

103921     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
103922     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
103923     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
103924     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

103925     proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
103926     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

103927     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
103928     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
103929     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

103930     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
103931     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
103932     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
103933     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

103934     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
103935     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
103935   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

103936     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

103937     proc append base=EMWS8.Ensmbl23_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl23_FCMP data=_tempx;
103938     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL23_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL23_FCMP has 1030 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

103939     filename _pref
103939   ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
103940     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
103941     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
103942    +
103943    +
103944    +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
103945    +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
103946    +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
103947    +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
103948    +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
103949    +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
103950    +
103951    +
103952    +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
103953    +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
103954    +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
103955    +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
103956    +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
103957    +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
103958    +
103959    +
103960    +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
103961    +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
103962    +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
103963    +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
103964    +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
103965    +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
103966    +
103967    +
103968    +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
103969    +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
103970    +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
103971    +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
103972    +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
103973    +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
103974    +
103975    +
103976    +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
103977    +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
103978    +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
103979    +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
103980    +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
103981    +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
103982    +
103983    +
103984    +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
103985    +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
103986    +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
103987    +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
103988    +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
103989    +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
103990    +
103991    +
103992    +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
103993    +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
103994    +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
103995    +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
103996    +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
103997    +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
103998    +
103999    +
104000    +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
104001    +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
104002    +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
104003    +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
104004    +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
104005    +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
104006    +if
104007    +_FILTERNORM1 not in ( '.')
104008    + and
104009    +_FILTERNORM2 not in ( '.')
104010    + and
104011    +_FILTERNORM3 not in ( '.')
104012    + and
104013    +_FILTERNORM4 not in ( '.')
104014    + and
104015    +_FILTERNORM5 not in ( '.')
104016    + and
104017    +_FILTERNORM6 not in ( '.')
104018    + and
104019    +_FILTERNORM7 not in ( ' ')
104020    + and
104021    +_FILTERNORM8 not in ( ' ')
104022    +and
104023    +( Dt_Customer ne .)
104024    +and ( Income ne . and (Income<=107000))
104025    +and ( Kidhome ne .)
104026    +and ( MntFishProducts ne .)
104027    +and ( MntFruits ne .)
104028    +and ( MntGoldProds ne .)
104029    +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
104030    +and ( MntSweetProducts ne .)
104031    +and ( MntWines ne .)
104032    +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
104033    +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
104034    +and ( NumStorePurchases ne .)
104035    +and ( NumWebPurchases ne .)
104036    +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
104037    +and ( Recency ne .)
104038    +and ( Teenhome ne .)
104039    +and ( Year_Birth ne .)
104040    +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
104041    +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
104042    +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
104043    +end;
MPRINT(EM_DIAGRAM):   end;
104044    +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
104045    +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
104046     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
104047     quit;
104048     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
104049     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
104050     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
104051     retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
104052     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
104053     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

104054     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
104055     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
104056     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

104057     proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
104058     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
104059     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

104060     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
104061     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
104062     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
104063     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

104064     proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
104065     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

104066     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
104067     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
104068     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

104069     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
104070     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
104071     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
104072     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

104073     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
104074     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
104074   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

104075     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

104076     proc append base=EMWS8.Ensmbl23_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl23_FCMP data=_tempx;
104077     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL23_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL23_FCMP has 1096 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

104078     %macro varDept(fcmpdata=,id=);
104079     %global nobs&id scoreFlag&id;
104080     %let scoreFlag&id = 0;
104081     %if &id=1 or ^&fcmpStart %then %do;
104082     proc sort data=&fcmpdata out=_temp&id nodupkey;
104083     by NAME;
104084     where id=&id and LHS in( %let j=1;
104085     %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
104086     %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
104087     "&var" %let j = %eval(&j+1);
104088     %end;
104089     );
104090     run;
104091     %let dsid = %sysfunc(open(_temp&id));
104092     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
104093     %let dsid = %sysfunc(close(&dsid));
104094     %if &&nobs&id %then %do;
104095     %let scoreFlag&id = 1;
104096     %let fcmpStart = 1;
104097     %end;
104098     %else %let fcmpStart = 0;
104099     %end;
104100     %else %do;
104101     proc sort data=&fcmpdata out=_tempid;
104102     where id=&id;
104103     by LHS;
104104     run;
104105     %let dsid = %sysfunc(open(_tempid));
104106     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
104107     %let dsid = %sysfunc(close(&dsid));
104108     %if ^&&nobs&id %then %do;
104109     proc datasets lib=work nolist;
104110     delete _tempid;
104111     run;
104112     quit;
104113     %end;
104114     %else %do;
104115     data _tempAll;
104116     set %let j=%eval(&id-1);
104117     %do x=1 %to &j;
104118     %if &&nobs&x %then %do;
104119     _temp&x %end;
104120     %end;
104121     ;
104122     run;
104123     proc sql;
104124     create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
104124   ! work._tempid p2 where p.name=p2.lhs;
104125     quit;
104126     data _temp&id;
104127     set _temp&id;
104128     where LHS ne '' and NAME ne '' and Node ne '';
104129     run;
104130     proc datasets lib=work nolist;
104131     delete _tempAll;
104132     run;
104133     %let dsid = %sysfunc(open(_temp&id));
104134     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
104135     %let dsid = %sysfunc(close(&dsid));
104136     %if ^&&nobs&id %then %do;
104137     proc datasets lib=work nolist;
104138     delete _temp&id;
104139     run;
104140     quit;
104141     %end;
104142     %else %do;
104143     %let scoreFlag&id = 1;
104144     data _temp&id;
104145     set _temp&id;
104146     where LHS ne NAME and node ne '';
104147     run;
104148     %let dsid = %sysfunc(open(_temp&id));
104149     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
104150     %let dsid = %sysfunc(close(&dsid));
104151     %if ^&&nobs&id %then %do;
104152     proc datasets lib=work nolist;
104153     delete _temp&id;
104154     run;
104155     quit;
104156     %end;
104157     %else %do;
104158     proc sort data=_temp&id nodupkey;
104159     by LHS NAME;
104160     run;
104161     %end;
104162     %end;
104163     %end;
104164     %end;
104165     %mend varDept;
104166     %macro optCode(outdata=fcmpdata);
104167     %global fcmpStart;
104168     %let fcmpStart = 0;
104169     %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
104170     %let NumNodes=9;
104171     %do k=1 %to &NumNodes;
104172     %vardept(fcmpdata=&outdata, id=&k);
104173     %end;
104174     %mend optCode;
104175     %optcode(outData=EMWS8.Ensmbl23_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl23_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL23_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl23_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 106 observations read from the data set EMWS8.ENSMBL23_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 79 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 27 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl23_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL23_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl23_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL23_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl23_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL23_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 27 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 2 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl23_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL23_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 29 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 33 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl23_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL23_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: There were 33 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 62 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl23_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL23_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl23_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL23_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

104176     data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
104177     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
104178     where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
104179     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

104180     data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
104181     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
104182     where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
104183     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

104184     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
104185     create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
104185   ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 2 rows and 3 columns.

104186     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

104187     data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
104188     set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
104189     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 2 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 2 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

104190     filename _pref
104190   ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural41\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural41\EMPUBLISHSCORE.sas";
104191     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
104192     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural41\EMPUBLISHSCORE.sas.
104193    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
104194    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
104195    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
104196    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
104197    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
104198    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
104199    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
104200    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
104201    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
104202    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
104203    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
104204    +LENGTH _WARN_ $4
104205    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
104206    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
104207    +
104208    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
104209    +
104210    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
104211    +
104212    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
104213    +
104214    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
104215    +
104216    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
104217    +
104218    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
104219    +
104220    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
104221    +
104222    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
104223    +
104224    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
104225    +
104226    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
104227    +
104228    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
104229    +
104230    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
104231    +
104232    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
104233    +
104234    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
104235    +
104236    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
104237    +
104238    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
104239    +
104240    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
104241    +
104242    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
104243    +
104244    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
104245    +
104246    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
104247    +
104248    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
104249    +
104250    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
104251    +
104252    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
104253    +
104254    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
104255    +
104256    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
104257    +
104258    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
104259    +
104260    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
104261    +
104262    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
104263    +
104264    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
104265    +
104266    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
104267    +
104268    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
104269    +
104270    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
104271    +
104272    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
104273    +
104274    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
104275    +
104276    +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
104277    +
104278    +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
104279    +
104280    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
104281    +
104282    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
104283    +
104284    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
104285    +
104286    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
104287    +
104288    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
104289    +
104290    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
104291    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
104292    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
104293    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
104294    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
104295    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
104296    +end;
MPRINT(EM_DIAGRAM):   end;
104297    +else do;
MPRINT(EM_DIAGRAM):   else do;
104298    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
104299    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
104300    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
104301    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
104302    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
104303    +   end;
MPRINT(EM_DIAGRAM):   end;
104304    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
104305    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
104306    +   end;
MPRINT(EM_DIAGRAM):   end;
104307    +   else do;
MPRINT(EM_DIAGRAM):   else do;
104308    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
104309    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
104310    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
104311    +   end;
MPRINT(EM_DIAGRAM):   end;
104312    +end;
MPRINT(EM_DIAGRAM):   end;
104313    +
104314    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
104315    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
104316    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
104317    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
104318    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
104319    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
104320    +end;
MPRINT(EM_DIAGRAM):   end;
104321    +else do;
MPRINT(EM_DIAGRAM):   else do;
104322    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
104323    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
104324    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
104325    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
104326    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
104327    +   end;
MPRINT(EM_DIAGRAM):   end;
104328    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
104329    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
104330    +   end;
MPRINT(EM_DIAGRAM):   end;
104331    +   else do;
MPRINT(EM_DIAGRAM):   else do;
104332    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
104333    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
104334    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
104335    +   end;
MPRINT(EM_DIAGRAM):   end;
104336    +end;
MPRINT(EM_DIAGRAM):   end;
104337    +
104338    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
104339    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
104340    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
104341    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
104342    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
104343    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
104344    +end;
MPRINT(EM_DIAGRAM):   end;
104345    +else do;
MPRINT(EM_DIAGRAM):   else do;
104346    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
104347    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
104348    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
104349    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
104350    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
104351    +   end;
MPRINT(EM_DIAGRAM):   end;
104352    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
104353    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
104354    +   end;
MPRINT(EM_DIAGRAM):   end;
104355    +   else do;
MPRINT(EM_DIAGRAM):   else do;
104356    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
104357    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
104358    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
104359    +   end;
MPRINT(EM_DIAGRAM):   end;
104360    +end;
MPRINT(EM_DIAGRAM):   end;
104361    +
104362    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
104363    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
104364    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
104365    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
104366    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
104367    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
104368    +end;
MPRINT(EM_DIAGRAM):   end;
104369    +else do;
MPRINT(EM_DIAGRAM):   else do;
104370    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
104371    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
104372    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
104373    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
104374    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
104375    +   end;
MPRINT(EM_DIAGRAM):   end;
104376    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
104377    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
104378    +   end;
MPRINT(EM_DIAGRAM):   end;
104379    +   else do;
MPRINT(EM_DIAGRAM):   else do;
104380    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
104381    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
104382    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
104383    +   end;
MPRINT(EM_DIAGRAM):   end;
104384    +end;
MPRINT(EM_DIAGRAM):   end;
104385    +
104386    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
104387    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
104388    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
104389    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
104390    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
104391    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
104392    +end;
MPRINT(EM_DIAGRAM):   end;
104393    +else do;
MPRINT(EM_DIAGRAM):   else do;
104394    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
104395    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
104396    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
104397    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
104398    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
104399    +   end;
MPRINT(EM_DIAGRAM):   end;
104400    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
104401    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
104402    +   end;
MPRINT(EM_DIAGRAM):   end;
104403    +   else do;
MPRINT(EM_DIAGRAM):   else do;
104404    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
104405    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
104406    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
104407    +   end;
MPRINT(EM_DIAGRAM):   end;
104408    +end;
MPRINT(EM_DIAGRAM):   end;
104409    +
104410    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
104411    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
104412    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
104413    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
104414    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
104415    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
104416    +end;
MPRINT(EM_DIAGRAM):   end;
104417    +else do;
MPRINT(EM_DIAGRAM):   else do;
104418    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
104419    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
104420    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
104421    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
104422    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
104423    +   end;
MPRINT(EM_DIAGRAM):   end;
104424    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
104425    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
104426    +   end;
MPRINT(EM_DIAGRAM):   end;
104427    +   else do;
MPRINT(EM_DIAGRAM):   else do;
104428    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
104429    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
104430    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
104431    +   end;
MPRINT(EM_DIAGRAM):   end;
104432    +end;
MPRINT(EM_DIAGRAM):   end;
104433    +
104434    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
104435    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
104436    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
104437    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
104438    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
104439    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
104440    +end;
MPRINT(EM_DIAGRAM):   end;
104441    +else do;
MPRINT(EM_DIAGRAM):   else do;
104442    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
104443    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
104444    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
104445    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
104446    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
104447    +   end;
MPRINT(EM_DIAGRAM):   end;
104448    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
104449    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
104450    +   end;
MPRINT(EM_DIAGRAM):   end;
104451    +   else do;
MPRINT(EM_DIAGRAM):   else do;
104452    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
104453    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
104454    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
104455    +   end;
MPRINT(EM_DIAGRAM):   end;
104456    +end;
MPRINT(EM_DIAGRAM):   end;
104457    +
104458    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
104459    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
104460    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
104461    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
104462    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
104463    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
104464    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
104465    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
104466    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
104467    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
104468    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
104469    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
104470    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
104471    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
104472    +end;
MPRINT(EM_DIAGRAM):   end;
104473    +else do;
MPRINT(EM_DIAGRAM):   else do;
104474    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
104475    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
104476    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
104477    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
104478    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
104479    +   end;
MPRINT(EM_DIAGRAM):   end;
104480    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
104481    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
104482    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
104483    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
104484    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
104485    +   end;
MPRINT(EM_DIAGRAM):   end;
104486    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
104487    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
104488    +   end;
MPRINT(EM_DIAGRAM):   end;
104489    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
104490    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
104491    +   end;
MPRINT(EM_DIAGRAM):   end;
104492    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
104493    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
104494    +   end;
MPRINT(EM_DIAGRAM):   end;
104495    +   else do;
MPRINT(EM_DIAGRAM):   else do;
104496    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
104497    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
104498    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
104499    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
104500    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
104501    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
104502    +   end;
MPRINT(EM_DIAGRAM):   end;
104503    +end;
MPRINT(EM_DIAGRAM):   end;
104504    +
104505    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
104506    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
104507    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
104508    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
104509    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
104510    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
104511    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
104512    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
104513    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
104514    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
104515    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
104516    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
104517    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
104518    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
104519    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
104520    +end;
MPRINT(EM_DIAGRAM):   end;
104521    +else do;
MPRINT(EM_DIAGRAM):   else do;
104522    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
104523    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
104524    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
104525    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
104526    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
104527    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
104528    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
104529    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
104530    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
104531    +         end;
MPRINT(EM_DIAGRAM):   end;
104532    +         else do;
MPRINT(EM_DIAGRAM):   else do;
104533    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
104534    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
104535    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
104536    +            end;
MPRINT(EM_DIAGRAM):   end;
104537    +         end;
MPRINT(EM_DIAGRAM):   end;
104538    +      end;
MPRINT(EM_DIAGRAM):   end;
104539    +      else do;
MPRINT(EM_DIAGRAM):   else do;
104540    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
104541    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
104542    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
104543    +         end;
MPRINT(EM_DIAGRAM):   end;
104544    +      end;
MPRINT(EM_DIAGRAM):   end;
104545    +   end;
MPRINT(EM_DIAGRAM):   end;
104546    +   else do;
MPRINT(EM_DIAGRAM):   else do;
104547    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
104548    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
104549    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
104550    +      end;
MPRINT(EM_DIAGRAM):   end;
104551    +      else do;
MPRINT(EM_DIAGRAM):   else do;
104552    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
104553    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
104554    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
104555    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
104556    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
104557    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
104558    +         end;
MPRINT(EM_DIAGRAM):   end;
104559    +      end;
MPRINT(EM_DIAGRAM):   end;
104560    +   end;
MPRINT(EM_DIAGRAM):   end;
104561    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
104562    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
104563    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
104564    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
104565    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
104566    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
104567    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
104568    +   end;
MPRINT(EM_DIAGRAM):   end;
104569    +end;
MPRINT(EM_DIAGRAM):   end;
104570    +
104571    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
104572    +*** Checking missing input Interval
104573    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
104574    +
104575    +IF NMISS(
104576    +   AcceptedCmpTotal ,
104577    +   Age ,
104578    +   Frq ,
104579    +   Income ,
104580    +   Kidhome ,
104581    +   MntFishProducts ,
104582    +   MntFruits ,
104583    +   MntGoldProds ,
104584    +   MntSweetProducts ,
104585    +   MonthsAsCustomer ,
104586    +   NumDealsPurchases ,
104587    +   NumWebVisitsMonth ,
104588    +   RFMstat ,
104589    +   RMntFrq ,
104590    +   Recency ,
104591    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
104592    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
104593    +
104594    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
104595    +END;
MPRINT(EM_DIAGRAM):   END;
104596    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
104597    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
104598    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
104599    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
104600    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
104601    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
104602    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
104603    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
104604    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
104605    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
104606    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
104607    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
104608    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
104609    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
104610    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
104611    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
104612    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
104613    +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
104614    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
104615    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
104616    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
104617    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
104618    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
104619    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
104620    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
104621    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
104622    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
104623    +END;
MPRINT(EM_DIAGRAM):   END;
104624    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
104625    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
104626    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
104627    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
104628    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
104629    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
104630    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
104631    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
104632    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
104633    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
104634    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
104635    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
104636    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
104637    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
104638    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
104639    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
104640    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
104641    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
104642    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
104643    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
104644    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
104645    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
104646    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
104647    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
104648    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
104649    +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
104650    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
104651    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
104652    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
104653    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
104654    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
104655    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
104656    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
104657    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
104658    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
104659    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
104660    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
104661    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
104662    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
104663    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
104664    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
104665    +END;
MPRINT(EM_DIAGRAM):   END;
104666    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
104667    +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
104668    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
104669    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
104670    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
104671    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
104672    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
104673    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
104674    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
104675    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
104676    +   H11  =    -0.50311574684963 * S_AcceptedCmpTotal  +    -0.18985055644549 *
104677    +        S_Age  +     0.44828804873659 * S_Frq  +    -0.51280008296346 *
104678    +        S_Income  +    -0.07468461691846 * S_Kidhome
104679    +          +    -0.02817334981603 * S_MntFishProducts
104680    +          +    -0.23674836972041 * S_MntFruits  +     0.09571592531833 *
104681    +        S_MntGoldProds  +    -0.09676918994417 * S_MntSweetProducts
104682    +          +     0.11832246824115 * S_MonthsAsCustomer
104683    +          +    -0.06605281991661 * S_NumDealsPurchases
104684    +          +    -0.48924564446119 * S_NumWebVisitsMonth
104685    +          +    -0.46878579854964 * S_RFMstat  +    -0.08286830724047 *
104686    +        S_RMntFrq  +     0.72493722489034 * S_Recency
104687    +          +     0.54759769648457 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.50311574684963 * S_AcceptedCmpTotal + -0.18985055644549 * S_Age 
+ 0.44828804873659 * S_Frq + -0.51280008296346 * S_Income + -0.07468461691846 * S_Kidhome + 
-0.02817334981603 * S_MntFishProducts + -0.23674836972041 * S_MntFruits + 0.09571592531833 * 
S_MntGoldProds + -0.09676918994417 * S_MntSweetProducts + 0.11832246824115 * 
S_MonthsAsCustomer + -0.06605281991661 * S_NumDealsPurchases + -0.48924564446119 * 
S_NumWebVisitsMonth + -0.46878579854964 * S_RFMstat + -0.08286830724047 * S_RMntFrq + 
0.72493722489034 * S_Recency + 0.54759769648457 * S_Teenhome ;
104688    +   H12  =     0.27433541795855 * S_AcceptedCmpTotal  +    -0.13239293741829 *
104689    +        S_Age  +       0.297440346075 * S_Frq  +     0.60301641350325 *
104690    +        S_Income  +    -0.52629295860426 * S_Kidhome
104691    +          +    -0.09281934074994 * S_MntFishProducts
104692    +          +    -0.01139552037387 * S_MntFruits  +    -0.01724648803464 *
104693    +        S_MntGoldProds  +    -0.11213003865462 * S_MntSweetProducts
104694    +          +     0.01420877288416 * S_MonthsAsCustomer
104695    +          +     0.15753030263585 * S_NumDealsPurchases
104696    +          +     0.12839062787468 * S_NumWebVisitsMonth
104697    +          +     0.09918681531437 * S_RFMstat  +     0.28128581499392 *
104698    +        S_RMntFrq  +    -0.77555854798433 * S_Recency
104699    +          +    -0.39696436898966 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.27433541795855 * S_AcceptedCmpTotal + -0.13239293741829 * S_Age 
+ 0.297440346075 * S_Frq + 0.60301641350325 * S_Income + -0.52629295860426 * S_Kidhome + 
-0.09281934074994 * S_MntFishProducts + -0.01139552037387 * S_MntFruits + -0.01724648803464 * 
S_MntGoldProds + -0.11213003865462 * S_MntSweetProducts + 0.01420877288416 * 
S_MonthsAsCustomer + 0.15753030263585 * S_NumDealsPurchases + 0.12839062787468 * 
S_NumWebVisitsMonth + 0.09918681531437 * S_RFMstat + 0.28128581499392 * S_RMntFrq + 
-0.77555854798433 * S_Recency + -0.39696436898966 * S_Teenhome ;
104700    +   H13  =     0.03123358805476 * S_AcceptedCmpTotal  +    -0.11998608363847 *
104701    +        S_Age  +     0.08338729365626 * S_Frq  +     0.36926635699098 *
104702    +        S_Income  +     0.00460024601501 * S_Kidhome
104703    +          +    -0.02200799678674 * S_MntFishProducts
104704    +          +     0.17038795346592 * S_MntFruits  +    -0.01191054270128 *
104705    +        S_MntGoldProds  +     0.09461198228745 * S_MntSweetProducts
104706    +          +     0.11175639451728 * S_MonthsAsCustomer
104707    +          +    -0.14915044300238 * S_NumDealsPurchases
104708    +          +     -0.0217132622877 * S_NumWebVisitsMonth
104709    +          +     0.19209945631632 * S_RFMstat  +     0.27685327218371 *
104710    +        S_RMntFrq  +     -0.1114202547513 * S_Recency
104711    +          +    -0.07677627375613 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 0.03123358805476 * S_AcceptedCmpTotal + -0.11998608363847 * S_Age 
+ 0.08338729365626 * S_Frq + 0.36926635699098 * S_Income + 0.00460024601501 * S_Kidhome + 
-0.02200799678674 * S_MntFishProducts + 0.17038795346592 * S_MntFruits + -0.01191054270128 * 
S_MntGoldProds + 0.09461198228745 * S_MntSweetProducts + 0.11175639451728 * S_MonthsAsCustomer 
+ -0.14915044300238 * S_NumDealsPurchases + -0.0217132622877 * S_NumWebVisitsMonth + 
0.19209945631632 * S_RFMstat + 0.27685327218371 * S_RMntFrq + -0.1114202547513 * S_Recency + 
-0.07677627375613 * S_Teenhome ;
104712    +   H14  =      -0.510052563552 * S_AcceptedCmpTotal  +    -0.12652051241051 *
104713    +        S_Age  +    -0.42250950524778 * S_Frq  +    -0.66291360306733 *
104714    +        S_Income  +    -0.50120074528145 * S_Kidhome
104715    +          +     0.44715945861433 * S_MntFishProducts
104716    +          +     0.23552533999892 * S_MntFruits  +    -0.60812570135419 *
104717    +        S_MntGoldProds  +    -0.29436997886251 * S_MntSweetProducts
104718    +          +    -0.16226459240838 * S_MonthsAsCustomer
104719    +          +    -0.66300674579813 * S_NumDealsPurchases
104720    +          +    -0.46113723081205 * S_NumWebVisitsMonth
104721    +          +    -0.28741955047351 * S_RFMstat  +    -0.51342973736897 *
104722    +        S_RMntFrq  +     0.32948062104596 * S_Recency
104723    +          +     0.04630647814801 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = -0.510052563552 * S_AcceptedCmpTotal + -0.12652051241051 * S_Age + 
-0.42250950524778 * S_Frq + -0.66291360306733 * S_Income + -0.50120074528145 * S_Kidhome + 
0.44715945861433 * S_MntFishProducts + 0.23552533999892 * S_MntFruits + -0.60812570135419 * 
S_MntGoldProds + -0.29436997886251 * S_MntSweetProducts + -0.16226459240838 * 
S_MonthsAsCustomer + -0.66300674579813 * S_NumDealsPurchases + -0.46113723081205 * 
S_NumWebVisitsMonth + -0.28741955047351 * S_RFMstat + -0.51342973736897 * S_RMntFrq + 
0.32948062104596 * S_Recency + 0.04630647814801 * S_Teenhome ;
104724    +   H15  =    -0.05552489181258 * S_AcceptedCmpTotal  +      0.3358097664399 *
104725    +        S_Age  +     0.99860330572057 * S_Frq  +     0.33672529961967 *
104726    +        S_Income  +     0.16969714205994 * S_Kidhome
104727    +          +     0.04976308170854 * S_MntFishProducts
104728    +          +     0.17074705999537 * S_MntFruits  +    -0.14669916972196 *
104729    +        S_MntGoldProds  +    -0.09562051744533 * S_MntSweetProducts
104730    +          +     0.17484703075203 * S_MonthsAsCustomer
104731    +          +    -0.55173591551358 * S_NumDealsPurchases
104732    +          +    -0.43823357997032 * S_NumWebVisitsMonth
104733    +          +     0.35315919586696 * S_RFMstat  +    -0.19785503093343 *
104734    +        S_RMntFrq  +     0.71670167585868 * S_Recency
104735    +          +    -0.28983189748238 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = -0.05552489181258 * S_AcceptedCmpTotal + 0.3358097664399 * S_Age + 
0.99860330572057 * S_Frq + 0.33672529961967 * S_Income + 0.16969714205994 * S_Kidhome + 
0.04976308170854 * S_MntFishProducts + 0.17074705999537 * S_MntFruits + -0.14669916972196 * 
S_MntGoldProds + -0.09562051744533 * S_MntSweetProducts + 0.17484703075203 * 
S_MonthsAsCustomer + -0.55173591551358 * S_NumDealsPurchases + -0.43823357997032 * 
S_NumWebVisitsMonth + 0.35315919586696 * S_RFMstat + -0.19785503093343 * S_RMntFrq + 
0.71670167585868 * S_Recency + -0.28983189748238 * S_Teenhome ;
104736    +   H16  =     0.13586107601616 * S_AcceptedCmpTotal  +    -0.03004972131524 *
104737    +        S_Age  +     0.34607777972893 * S_Frq  +     0.04594045147698 *
104738    +        S_Income  +    -0.02355089102951 * S_Kidhome
104739    +          +     0.17666646340328 * S_MntFishProducts
104740    +          +    -0.42460885844972 * S_MntFruits  +      0.1419729562767 *
104741    +        S_MntGoldProds  +    -0.37586377717812 * S_MntSweetProducts
104742    +          +     0.13355805650034 * S_MonthsAsCustomer
104743    +          +     0.14924024487443 * S_NumDealsPurchases
104744    +          +     0.34848278731511 * S_NumWebVisitsMonth
104745    +          +     0.19641659129802 * S_RFMstat  +    -0.04454828782133 *
104746    +        S_RMntFrq  +    -0.80210797166772 * S_Recency
104747    +          +    -0.42106674037771 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = 0.13586107601616 * S_AcceptedCmpTotal + -0.03004972131524 * S_Age 
+ 0.34607777972893 * S_Frq + 0.04594045147698 * S_Income + -0.02355089102951 * S_Kidhome + 
0.17666646340328 * S_MntFishProducts + -0.42460885844972 * S_MntFruits + 0.1419729562767 * 
S_MntGoldProds + -0.37586377717812 * S_MntSweetProducts + 0.13355805650034 * 
S_MonthsAsCustomer + 0.14924024487443 * S_NumDealsPurchases + 0.34848278731511 * 
S_NumWebVisitsMonth + 0.19641659129802 * S_RFMstat + -0.04454828782133 * S_RMntFrq + 
-0.80210797166772 * S_Recency + -0.42106674037771 * S_Teenhome ;
104748    +   H11  = H11  +     0.23614129020735 * AcceptedCmp10
104749    +          +    -0.02084878775169 * AcceptedCmp20  +     0.37466381839371 *
104750    +        AcceptedCmp30  +    -0.73407018983175 * AcceptedCmp40
104751    +          +     0.56003163460043 * AcceptedCmp50  +      0.2232704545414 *
104752    +        Complain0  +    -0.47480864689786 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.23614129020735 * AcceptedCmp10 + -0.02084878775169 * 
AcceptedCmp20 + 0.37466381839371 * AcceptedCmp30 + -0.73407018983175 * AcceptedCmp40 + 
0.56003163460043 * AcceptedCmp50 + 0.2232704545414 * Complain0 + -0.47480864689786 * 
HigherEducationBinary0 ;
104753    +   H12  = H12  +    -0.27353744753102 * AcceptedCmp10
104754    +          +    -0.28444143977421 * AcceptedCmp20  +    -0.31024205224044 *
104755    +        AcceptedCmp30  +     -0.3066557522304 * AcceptedCmp40
104756    +          +      0.0549579852636 * AcceptedCmp50  +    -0.14741752806404 *
104757    +        Complain0  +     0.28934485954948 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.27353744753102 * AcceptedCmp10 + -0.28444143977421 * 
AcceptedCmp20 + -0.31024205224044 * AcceptedCmp30 + -0.3066557522304 * AcceptedCmp40 + 
0.0549579852636 * AcceptedCmp50 + -0.14741752806404 * Complain0 + 0.28934485954948 * 
HigherEducationBinary0 ;
104758    +   H13  = H13  +    -0.04693289193242 * AcceptedCmp10
104759    +          +     0.14083843787444 * AcceptedCmp20  +     0.35339306333755 *
104760    +        AcceptedCmp30  +     0.18353806616447 * AcceptedCmp40
104761    +          +      0.1789056537211 * AcceptedCmp50  +     -0.0778376167893 *
104762    +        Complain0  +    -0.42804187853556 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.04693289193242 * AcceptedCmp10 + 0.14083843787444 * 
AcceptedCmp20 + 0.35339306333755 * AcceptedCmp30 + 0.18353806616447 * AcceptedCmp40 + 
0.1789056537211 * AcceptedCmp50 + -0.0778376167893 * Complain0 + -0.42804187853556 * 
HigherEducationBinary0 ;
104763    +   H14  = H14  +     -0.1827583424217 * AcceptedCmp10
104764    +          +     -0.1489832073407 * AcceptedCmp20  +     0.19258598777521 *
104765    +        AcceptedCmp30  +    -0.09050532815681 * AcceptedCmp40
104766    +          +     0.31883627486144 * AcceptedCmp50  +    -0.45377259681397 *
104767    +        Complain0  +     0.15391344192243 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.1827583424217 * AcceptedCmp10 + -0.1489832073407 * 
AcceptedCmp20 + 0.19258598777521 * AcceptedCmp30 + -0.09050532815681 * AcceptedCmp40 + 
0.31883627486144 * AcceptedCmp50 + -0.45377259681397 * Complain0 + 0.15391344192243 * 
HigherEducationBinary0 ;
104768    +   H15  = H15  +     0.27865852917942 * AcceptedCmp10
104769    +          +       0.138287927284 * AcceptedCmp20  +     0.16317472998408 *
104770    +        AcceptedCmp30  +    -0.05372991123771 * AcceptedCmp40
104771    +          +     0.10581002090735 * AcceptedCmp50  +     -0.1352393114395 *
104772    +        Complain0  +    -0.01276168923951 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.27865852917942 * AcceptedCmp10 + 0.138287927284 * 
AcceptedCmp20 + 0.16317472998408 * AcceptedCmp30 + -0.05372991123771 * AcceptedCmp40 + 
0.10581002090735 * AcceptedCmp50 + -0.1352393114395 * Complain0 + -0.01276168923951 * 
HigherEducationBinary0 ;
104773    +   H16  = H16  +     0.54923092188785 * AcceptedCmp10
104774    +          +     0.06197589967314 * AcceptedCmp20  +    -0.16384237649268 *
104775    +        AcceptedCmp30  +     0.19164251659143 * AcceptedCmp40
104776    +          +     -0.0276972319359 * AcceptedCmp50  +     0.24239824406043 *
104777    +        Complain0  +    -0.10846507318888 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.54923092188785 * AcceptedCmp10 + 0.06197589967314 * 
AcceptedCmp20 + -0.16384237649268 * AcceptedCmp30 + 0.19164251659143 * AcceptedCmp40 + 
-0.0276972319359 * AcceptedCmp50 + 0.24239824406043 * Complain0 + -0.10846507318888 * 
HigherEducationBinary0 ;
104778    +   H11  = H11  +     0.04065157802519 * Education2n_Cycle
104779    +          +     0.07405354529938 * EducationBasic  +    -0.27041205259916 *
104780    +        EducationGraduation  +     0.19305680604676 * EducationMaster
104781    +          +    -0.26816495704747 * Marital_StatusDivorced
104782    +          +     0.29673114151649 * Marital_StatusMarried
104783    +          +    -0.41626876543099 * Marital_StatusSingle
104784    +          +     0.09243411924301 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.04065157802519 * Education2n_Cycle + 0.07405354529938 * 
EducationBasic + -0.27041205259916 * EducationGraduation + 0.19305680604676 * EducationMaster 
+ -0.26816495704747 * Marital_StatusDivorced + 0.29673114151649 * Marital_StatusMarried + 
-0.41626876543099 * Marital_StatusSingle + 0.09243411924301 * Marital_StatusTogether ;
104785    +   H12  = H12  +     0.01524024349677 * Education2n_Cycle
104786    +          +     0.15070908916981 * EducationBasic  +     0.08422316601088 *
104787    +        EducationGraduation  +     -0.1896291301388 * EducationMaster
104788    +          +     0.11744127787391 * Marital_StatusDivorced
104789    +          +    -0.63703361207291 * Marital_StatusMarried
104790    +          +     0.57071735977739 * Marital_StatusSingle
104791    +          +    -0.68611342778218 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.01524024349677 * Education2n_Cycle + 0.15070908916981 * 
EducationBasic + 0.08422316601088 * EducationGraduation + -0.1896291301388 * EducationMaster + 
0.11744127787391 * Marital_StatusDivorced + -0.63703361207291 * Marital_StatusMarried + 
0.57071735977739 * Marital_StatusSingle + -0.68611342778218 * Marital_StatusTogether ;
104792    +   H13  = H13  +     0.09605604995794 * Education2n_Cycle
104793    +          +    -0.04349642322783 * EducationBasic  +    -0.11196808839685 *
104794    +        EducationGraduation  +    -0.01261925630364 * EducationMaster
104795    +          +     -0.1701911327485 * Marital_StatusDivorced
104796    +          +     0.22770672854155 * Marital_StatusMarried
104797    +          +    -0.00691671702288 * Marital_StatusSingle
104798    +          +       0.236686912143 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.09605604995794 * Education2n_Cycle + -0.04349642322783 * 
EducationBasic + -0.11196808839685 * EducationGraduation + -0.01261925630364 * EducationMaster 
+ -0.1701911327485 * Marital_StatusDivorced + 0.22770672854155 * Marital_StatusMarried + 
-0.00691671702288 * Marital_StatusSingle + 0.236686912143 * Marital_StatusTogether ;
104799    +   H14  = H14  +     0.10857873061564 * Education2n_Cycle
104800    +          +     0.16814453951395 * EducationBasic  +    -0.34874327957426 *
104801    +        EducationGraduation  +    -0.25193270521624 * EducationMaster
104802    +          +    -0.15403542879027 * Marital_StatusDivorced
104803    +          +     0.02652360752468 * Marital_StatusMarried
104804    +          +    -0.10723298292119 * Marital_StatusSingle
104805    +          +     0.11548543150405 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.10857873061564 * Education2n_Cycle + 0.16814453951395 * 
EducationBasic + -0.34874327957426 * EducationGraduation + -0.25193270521624 * EducationMaster 
+ -0.15403542879027 * Marital_StatusDivorced + 0.02652360752468 * Marital_StatusMarried + 
-0.10723298292119 * Marital_StatusSingle + 0.11548543150405 * Marital_StatusTogether ;
104806    +   H15  = H15  +     0.15880112810083 * Education2n_Cycle
104807    +          +     0.24466813535709 * EducationBasic  +    -0.03905452635368 *
104808    +        EducationGraduation  +    -0.24152136481937 * EducationMaster
104809    +          +    -0.00204417192532 * Marital_StatusDivorced
104810    +          +    -0.16973417192262 * Marital_StatusMarried
104811    +          +     0.23027366297507 * Marital_StatusSingle
104812    +          +     0.08101453661219 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.15880112810083 * Education2n_Cycle + 0.24466813535709 * 
EducationBasic + -0.03905452635368 * EducationGraduation + -0.24152136481937 * EducationMaster 
+ -0.00204417192532 * Marital_StatusDivorced + -0.16973417192262 * Marital_StatusMarried + 
0.23027366297507 * Marital_StatusSingle + 0.08101453661219 * Marital_StatusTogether ;
104813    +   H16  = H16  +     0.06080074855433 * Education2n_Cycle
104814    +          +     0.05712541606796 * EducationBasic  +     0.08565135130429 *
104815    +        EducationGraduation  +    -0.35693831321015 * EducationMaster
104816    +          +     0.23360275712164 * Marital_StatusDivorced
104817    +          +    -0.12276379115508 * Marital_StatusMarried
104818    +          +     0.25482197877469 * Marital_StatusSingle
104819    +          +    -0.38122499701658 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.06080074855433 * Education2n_Cycle + 0.05712541606796 * 
EducationBasic + 0.08565135130429 * EducationGraduation + -0.35693831321015 * EducationMaster 
+ 0.23360275712164 * Marital_StatusDivorced + -0.12276379115508 * Marital_StatusMarried + 
0.25482197877469 * Marital_StatusSingle + -0.38122499701658 * Marital_StatusTogether ;
104820    +   H11  =    -1.45785613717334 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.45785613717334 + H11 ;
104821    +   H12  =    -1.39199534011753 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -1.39199534011753 + H12 ;
104822    +   H13  =     2.43348807391253 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 2.43348807391253 + H13 ;
104823    +   H14  =    -0.82674437249292 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -0.82674437249292 + H14 ;
104824    +   H15  =     1.84262829639962 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 1.84262829639962 + H15 ;
104825    +   H16  =     1.40892711992493 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = 1.40892711992493 + H16 ;
104826    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
104827    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
104828    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
104829    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
104830    +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
104831    +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
104832    +END;
MPRINT(EM_DIAGRAM):   END;
104833    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
104834    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
104835    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
104836    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
104837    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
104838    +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
104839    +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
104840    +END;
MPRINT(EM_DIAGRAM):   END;
104841    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
104842    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
104843    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
104844    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
104845    +   P_DepVar1  =    -2.98548396417337 * H11  +     3.55440982243177 * H12
104846    +          +    -1.98442501061115 * H13  +    -2.67879549563082 * H14
104847    +          +    -2.68634609959794 * H15  +     3.13238014605319 * H16 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.98548396417337 * H11 + 3.55440982243177 * H12 + 
-1.98442501061115 * H13 + -2.67879549563082 * H14 + -2.68634609959794 * H15 + 3.13238014605319 
* H16 ;
104848    +   P_DepVar1  =    -2.49443575387204 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.49443575387204 + P_DepVar1 ;
104849    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
104850    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
104851    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
104852    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
104853    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
104854    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
104855    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
104856    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
104857    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
104858    +END;
MPRINT(EM_DIAGRAM):   END;
104859    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
104860    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
104861    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
104862    +END;
MPRINT(EM_DIAGRAM):   END;
104863    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
104864    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
104865    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
104866    +END;
MPRINT(EM_DIAGRAM):   END;
104867    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
104868    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
104869    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
104870    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
104871    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
104872    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
104873    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
104874    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
104875    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
104876    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
104877    +END;
MPRINT(EM_DIAGRAM):   END;
104878    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
104879    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
104880    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
104881    +drop
104882    +H11
104883    +H12
104884    +H13
104885    +H14
104886    +H15
104887    +H16
104888    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 ;
104889    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
104890     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
104891     quit;
104892     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
104893     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
104894     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
104895     retain ID 2 Node "Neural41";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural41";
104896     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
104897     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2183 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2183 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

104898     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
104899     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
104900     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2183 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2183 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

104901     proc sort data=EMWS8.Neural41_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural41_variableset out=_temp2(keep=NAME CREATOR);
104902     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
104903     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.NEURAL41_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

104904     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
104905     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
104906     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
104907     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

104908     proc contents data=EMWS8.Neural41_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural41_train out=_meta(keep=NAME) noprint;
104909     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

104910     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
104911     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
104912     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

104913     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
104914     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
104915     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
104916     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

104917     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
104918     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
104918   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1087 rows and 5 columns.

104919     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

104920     proc append base=EMWS8.Ensmbl23_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl23_FCMP data=_tempx;
104921     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL23_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1087 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL23_FCMP has 1087 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

104922     filename _pref
104922   ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
104923     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
104924     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
104925    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
104926    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
104927    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
104928    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
104929    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
104930    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
104931     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
104932     quit;
104933     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
104934     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
104935     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
104936     retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
104937     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
104938     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

104939     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
104940     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
104941     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

104942     proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
104943     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
104944     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

104945     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
104946     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
104947     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
104948     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

104949     proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
104950     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

104951     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
104952     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
104953     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

104954     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
104955     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
104956     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
104957     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

104958     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
104959     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
104959   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

104960     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

104961     proc append base=EMWS8.Ensmbl23_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl23_FCMP data=_tempx;
104962     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL23_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL23_FCMP has 1091 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

104963     filename _pref
104963   ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
104964     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
104965     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
104966    +
104967    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
104968    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
104968   !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
104969    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
104970    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
104971    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
104972    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
104973    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
104974     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
104975     quit;
104976     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
104977     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
104978     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
104979     retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
104980     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
104981     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

104982     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
104983     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
104984     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

104985     proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
104986     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
104987     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

104988     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
104989     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
104990     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
104991     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

104992     proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
104993     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

104994     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
104995     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
104996     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

104997     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
104998     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
104999     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
105000     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

105001     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
105002     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
105002   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

105003     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

105004     proc append base=EMWS8.Ensmbl23_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl23_FCMP data=_tempx;
105005     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL23_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL23_FCMP has 1130 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

105006     filename _pref
105006   ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
105007     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
105008     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
105009    +
105010    +
105011    +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
105012    +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
105013    +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
105014    +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
105015    +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
105016    +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
105017    +
105018    +
105019    +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
105020    +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
105021    +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
105022    +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
105023    +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
105024    +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
105025    +
105026    +
105027    +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
105028    +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
105029    +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
105030    +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
105031    +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
105032    +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
105033    +
105034    +
105035    +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
105036    +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
105037    +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
105038    +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
105039    +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
105040    +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
105041    +
105042    +
105043    +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
105044    +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
105045    +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
105046    +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
105047    +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
105048    +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
105049    +
105050    +
105051    +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
105052    +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
105053    +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
105054    +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
105055    +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
105056    +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
105057    +
105058    +
105059    +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
105060    +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
105061    +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
105062    +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
105063    +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
105064    +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
105065    +
105066    +
105067    +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
105068    +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
105069    +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
105070    +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
105071    +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
105072    +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
105073    +if
105074    +_FILTERNORM1 not in ( '.')
105075    + and
105076    +_FILTERNORM2 not in ( '.')
105077    + and
105078    +_FILTERNORM3 not in ( '.')
105079    + and
105080    +_FILTERNORM4 not in ( '.')
105081    + and
105082    +_FILTERNORM5 not in ( '.')
105083    + and
105084    +_FILTERNORM6 not in ( '.')
105085    + and
105086    +_FILTERNORM7 not in ( ' ')
105087    + and
105088    +_FILTERNORM8 not in ( ' ')
105089    +and
105090    +( Dt_Customer ne .)
105091    +and ( Income ne . and (Income<=107000))
105092    +and ( Kidhome ne .)
105093    +and ( MntFishProducts ne .)
105094    +and ( MntFruits ne .)
105095    +and ( MntGoldProds ne .)
105096    +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
105097    +and ( MntSweetProducts ne .)
105098    +and ( MntWines ne .)
105099    +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
105100    +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
105101    +and ( NumStorePurchases ne .)
105102    +and ( NumWebPurchases ne .)
105103    +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
105104    +and ( Recency ne .)
105105    +and ( Teenhome ne .)
105106    +and ( Year_Birth ne .)
105107    +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
105108    +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
105109    +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
105110    +end;
MPRINT(EM_DIAGRAM):   end;
105111    +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
105112    +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
105113     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
105114     quit;
105115     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
105116     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
105117     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
105118     retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
105119     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
105120     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

105121     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
105122     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
105123     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

105124     proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
105125     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
105126     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

105127     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
105128     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
105129     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
105130     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

105131     proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
105132     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

105133     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
105134     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
105135     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

105136     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
105137     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
105138     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
105139     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

105140     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
105141     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
105141   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

105142     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

105143     proc append base=EMWS8.Ensmbl23_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl23_FCMP data=_tempx;
105144     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL23_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL23_FCMP has 1196 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

105145     %macro varDept(fcmpdata=,id=);
105146     %global nobs&id scoreFlag&id;
105147     %let scoreFlag&id = 0;
105148     %if &id=1 or ^&fcmpStart %then %do;
105149     proc sort data=&fcmpdata out=_temp&id nodupkey;
105150     by NAME;
105151     where id=&id and LHS in( %let j=1;
105152     %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
105153     %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
105154     "&var" %let j = %eval(&j+1);
105155     %end;
105156     );
105157     run;
105158     %let dsid = %sysfunc(open(_temp&id));
105159     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
105160     %let dsid = %sysfunc(close(&dsid));
105161     %if &&nobs&id %then %do;
105162     %let scoreFlag&id = 1;
105163     %let fcmpStart = 1;
105164     %end;
105165     %else %let fcmpStart = 0;
105166     %end;
105167     %else %do;
105168     proc sort data=&fcmpdata out=_tempid;
105169     where id=&id;
105170     by LHS;
105171     run;
105172     %let dsid = %sysfunc(open(_tempid));
105173     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
105174     %let dsid = %sysfunc(close(&dsid));
105175     %if ^&&nobs&id %then %do;
105176     proc datasets lib=work nolist;
105177     delete _tempid;
105178     run;
105179     quit;
105180     %end;
105181     %else %do;
105182     data _tempAll;
105183     set %let j=%eval(&id-1);
105184     %do x=1 %to &j;
105185     %if &&nobs&x %then %do;
105186     _temp&x %end;
105187     %end;
105188     ;
105189     run;
105190     proc sql;
105191     create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
105191   ! work._tempid p2 where p.name=p2.lhs;
105192     quit;
105193     data _temp&id;
105194     set _temp&id;
105195     where LHS ne '' and NAME ne '' and Node ne '';
105196     run;
105197     proc datasets lib=work nolist;
105198     delete _tempAll;
105199     run;
105200     %let dsid = %sysfunc(open(_temp&id));
105201     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
105202     %let dsid = %sysfunc(close(&dsid));
105203     %if ^&&nobs&id %then %do;
105204     proc datasets lib=work nolist;
105205     delete _temp&id;
105206     run;
105207     quit;
105208     %end;
105209     %else %do;
105210     %let scoreFlag&id = 1;
105211     data _temp&id;
105212     set _temp&id;
105213     where LHS ne NAME and node ne '';
105214     run;
105215     %let dsid = %sysfunc(open(_temp&id));
105216     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
105217     %let dsid = %sysfunc(close(&dsid));
105218     %if ^&&nobs&id %then %do;
105219     proc datasets lib=work nolist;
105220     delete _temp&id;
105221     run;
105222     quit;
105223     %end;
105224     %else %do;
105225     proc sort data=_temp&id nodupkey;
105226     by LHS NAME;
105227     run;
105228     %end;
105229     %end;
105230     %end;
105231     %end;
105232     %mend varDept;
105233     %macro optCode(outdata=fcmpdata);
105234     %global fcmpStart;
105235     %let fcmpStart = 0;
105236     %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
105237     %let NumNodes=9;
105238     %do k=1 %to &NumNodes;
105239     %vardept(fcmpdata=&outdata, id=&k);
105240     %end;
105241     %mend optCode;
105242     %optcode(outData=EMWS8.Ensmbl23_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl23_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL23_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl23_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 106 observations read from the data set EMWS8.ENSMBL23_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 79 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 27 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl23_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL23_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl23_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL23_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl23_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL23_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 27 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 2 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl23_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL23_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 29 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.30 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 33 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl23_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL23_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: There were 33 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 62 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl23_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL23_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl23_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL23_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

105243     data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
105244     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
105245     where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
105246     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

105247     data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
105248     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
105249     where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
105250     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

105251     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
105252     create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
105252   ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 2 rows and 3 columns.

105253     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

105254     data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
105255     set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
105256     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 2 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 2 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

105257     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
105258     * Ensmbl23: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Ensmbl23: Computing metadata for TRAIN data;
105259     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS8.ENSMBL23_TRAIN.VIEW used (Total process time):
      real time           0.07 seconds
      cpu time            0.06 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl23\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.Ensmbl23_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.Ensmbl23_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.Ensmbl23_TRAIN out=WORK.M1HSQ8GN noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1HSQ8GN;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M1HSQ8GN(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = 
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1HSQ8GN;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M1HSQ8GN;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M0EI07R0 NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0EI07R0;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M0EI07R0;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0_GQTNF(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M0EI07R0;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0EI07R0;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M0EI07R0;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0EI07R0;
MPRINT(EMADVISECOLUMNS):   set WORK.M0EI07R0;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural40_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural40_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl23_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Ensmbl23";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "Ensmbl23";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "Ensmbl23";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "Ensmbl23";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "Ensmbl23";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "Ensmbl23";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "Ensmbl23";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "Ensmbl23";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Ensmbl23";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "Ensmbl23";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl23: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   if NAME in( "I_DepVar" "F_DepVar" "U_DepVar" "_WARN_" "P_DepVar1" 
"P_DepVar0" "R_DepVar1" "R_DepVar0" ) then CREATOR="Ensmbl23";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
105579     data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
105580     set EMWS8.Ensmbl23_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl23_EMINFO;
105581     where DATA='Ensmbl23' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Ensmbl23' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 
'MODEL');
105582     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.ENSMBL23_EMINFO.
      WHERE (DATA='Ensmbl23') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

105583     data EMWS8.Ensmbl23_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl23_EMINFO;
105584     length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
105585     input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
105586     cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS8.ENSMBL23_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   run;
105590     run;
105591     data EMWS8.Ensmbl23_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl23_EMINFO;
105592     set EMWS8.Ensmbl23_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl23_EMINFO WORK.MODELTEMP_INFO;
105593     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.ENSMBL23_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.ENSMBL23_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

105594     proc sort data = EMWS8.Ensmbl23_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Ensmbl23_EMINFO NOTHREADS;
105595     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
105596     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.ENSMBL23_EMINFO.
NOTE: The data set EMWS8.ENSMBL23_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

105597     proc sort data = EMWS8.Neural40_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Neural40_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
105598     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
105599     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set EMWS8.NEURAL40_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

105600     proc sort data = EMWS8.Ensmbl23_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Ensmbl23_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
105601     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
105602     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.ENSMBL23_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

105603     data EMWS8.Ensmbl23_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl23_EMINFO;
105604     merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
105605     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
105606     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.ENSMBL23_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

105607     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
105608     delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
105609     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
105610     quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

NOTE: View EMWS8.ENSMBL23_TRAIN.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.07 seconds
      
NOTE: View EMWS8.ENSMBL23_VALIDATE.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
