MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "21.11 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                28. April 2016
Time:                21.11 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O27FB4O5 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl23\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O27FB4O5 new;
MPRINT(EM_DIAGRAM):   run;
233797     filename emflow
233797   ! "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl23\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl23\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl23: Scoring NEURAL40_TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
233798     *------------------------------------------------------------*;
233799     * Ensmbl23: Scoring NEURAL40_TRAIN data;
233800     *------------------------------------------------------------*;
233801     data EMWS8.Ensmbl23_TRAIN
233802     / view=EMWS8.Ensmbl23_TRAIN
233803     ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl23_TRAIN / view=EMWS8.Ensmbl23_TRAIN ;
233804     set EMWS8.Neural40_TRAIN
233805     ;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural40_TRAIN ;
233806     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl23\EMFLOWSCORE.sas.
233807    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
233808    +* Ensmbl23: Combine model for DepVar;
MPRINT(EM_DIAGRAM):   * Ensmbl23: Combine model for DepVar;
233809    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
233810    +* Ensmbl23: Scoring Code of model 1 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl23: Scoring Code of model 1 of 5;
233811    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
233812    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
233813    +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
233814    +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
233815    +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
233816    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
233817    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
233818    +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
233819    +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
233820    +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
233821    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
233822    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
233823    +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
233824    +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
233825    +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
233826    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
233827    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
233828    +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
233829    +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
233830    +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
233831    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
233832    +
233833    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
233834    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
233834   !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
233835    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
233836    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
233837    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
233838    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
233839    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
233840    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
233841    +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
233842    +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
233843    +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
233844    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
233845    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
233846    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
233847    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
233848    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
233849    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
233850    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
233851    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
233852    +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
233853    +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
233854    +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
233855    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
233856    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
233857    +* TOOL: Metadata Node;
MPRINT(EM_DIAGRAM):   * TOOL: Metadata Node;
233858    +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
233859    +* NODE: Meta3;
MPRINT(EM_DIAGRAM):   * NODE: Meta3;
233860    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
233861    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
233862    +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
233863    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
233864    +* NODE: Neural40;
MPRINT(EM_DIAGRAM):   * NODE: Neural40;
233865    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
233866    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
233867    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
233868    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
233869    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
233870    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
233871    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
233872    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
233873    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
233874    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
233875    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
233876    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
233877    +LENGTH _WARN_ $4
233878    +      F_DepVar  $ 12
233879    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
233880    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
233881    +
233882    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
233883    +
233884    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
233885    +
233886    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
233887    +
233888    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
233889    +
233890    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
233891    +
233892    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
233893    +
233894    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
233895    +
233896    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
233897    +
233898    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
233899    +
233900    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
233901    +
233902    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
233903    +
233904    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
233905    +
233906    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
233907    +
233908    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
233909    +
233910    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
233911    +
233912    +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
233913    +
233914    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
233915    +
233916    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
233917    +
233918    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
233919    +
233920    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
233921    +
233922    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
233923    +
233924    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
233925    +
233926    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
233927    +
233928    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
233929    +
233930    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
233931    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
233932    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
233933    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
233934    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
233935    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
233936    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
233937    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
233938    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
233939    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
233940    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
233941    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
233942    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
233943    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
233944    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
233945    +end;
MPRINT(EM_DIAGRAM):   end;
233946    +else do;
MPRINT(EM_DIAGRAM):   else do;
233947    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
233948    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
233949    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
233950    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
233951    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
233952    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
233953    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
233954    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
233955    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
233956    +         end;
MPRINT(EM_DIAGRAM):   end;
233957    +         else do;
MPRINT(EM_DIAGRAM):   else do;
233958    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
233959    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
233960    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
233961    +            end;
MPRINT(EM_DIAGRAM):   end;
233962    +         end;
MPRINT(EM_DIAGRAM):   end;
233963    +      end;
MPRINT(EM_DIAGRAM):   end;
233964    +      else do;
MPRINT(EM_DIAGRAM):   else do;
233965    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
233966    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
233967    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
233968    +         end;
MPRINT(EM_DIAGRAM):   end;
233969    +      end;
MPRINT(EM_DIAGRAM):   end;
233970    +   end;
MPRINT(EM_DIAGRAM):   end;
233971    +   else do;
MPRINT(EM_DIAGRAM):   else do;
233972    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
233973    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
233974    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
233975    +      end;
MPRINT(EM_DIAGRAM):   end;
233976    +      else do;
MPRINT(EM_DIAGRAM):   else do;
233977    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
233978    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
233979    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
233980    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
233981    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
233982    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
233983    +         end;
MPRINT(EM_DIAGRAM):   end;
233984    +      end;
MPRINT(EM_DIAGRAM):   end;
233985    +   end;
MPRINT(EM_DIAGRAM):   end;
233986    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
233987    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
233988    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
233989    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
233990    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
233991    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
233992    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
233993    +   end;
MPRINT(EM_DIAGRAM):   end;
233994    +end;
MPRINT(EM_DIAGRAM):   end;
233995    +
233996    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
233997    +*** Checking missing input Interval
233998    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
233999    +
234000    +IF NMISS(
234001    +   AcceptedCmpTotal ,
234002    +   Frq ,
234003    +   Mnt ,
234004    +   MntMeatProducts ,
234005    +   NumCatalogPurchases ,
234006    +   NumDealsPurchases ,
234007    +   NumWebVisitsMonth ,
234008    +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Mnt , MntMeatProducts , 
NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , Recency ) THEN DO;
234009    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
234010    +
234011    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
234012    +END;
MPRINT(EM_DIAGRAM):   END;
234013    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
234014    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
234015    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
234016    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
234017    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
234018    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
234019    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
234020    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
234021    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
234022    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
234023    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
234024    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
234025    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
234026    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
234027    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
234028    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
234029    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
234030    +END;
MPRINT(EM_DIAGRAM):   END;
234031    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
234032    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
234033    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
234034    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
234035    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
234036    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
234037    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
234038    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
234039    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
234040    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
234041    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
234042    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
234043    +   ELSE S_NumCatalogPurchases
234044    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
234045    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
234046    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
234047    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
234048    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
234049    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
234050    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
234051    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
234052    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
234053    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
234054    +END;
MPRINT(EM_DIAGRAM):   END;
234055    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
234056    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
234057    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
234058    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
234059    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
234060    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
234061    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
234062    +   H11  =    -0.50937067326512 * S_AcceptedCmpTotal  +     0.59153604997173 *
234063    +        S_Frq  +     0.35109708191283 * S_Mnt  +    -0.54183123684873 *
234064    +        S_MntMeatProducts  +    -0.50968421326068 * S_NumCatalogPurchases
234065    +          +    -0.19046126117019 * S_NumDealsPurchases
234066    +          +    -0.51033119597715 * S_NumWebVisitsMonth
234067    +          +     0.81837864997249 * S_Recency ;
MPRINT(EM_DIAGRAM):   H11 = -0.50937067326512 * S_AcceptedCmpTotal + 0.59153604997173 * S_Frq 
+ 0.35109708191283 * S_Mnt + -0.54183123684873 * S_MntMeatProducts + -0.50968421326068 * 
S_NumCatalogPurchases + -0.19046126117019 * S_NumDealsPurchases + -0.51033119597715 * 
S_NumWebVisitsMonth + 0.81837864997249 * S_Recency ;
234068    +   H12  =     0.02025228046339 * S_AcceptedCmpTotal  +     0.99930163787509 *
234069    +        S_Frq  +     1.71070447604488 * S_Mnt  +     0.00262288180651 *
234070    +        S_MntMeatProducts  +    -0.26040107336488 * S_NumCatalogPurchases
234071    +          +     1.79245188553632 * S_NumDealsPurchases
234072    +          +     0.26061762777338 * S_NumWebVisitsMonth
234073    +          +     0.08976701277133 * S_Recency ;
MPRINT(EM_DIAGRAM):   H12 = 0.02025228046339 * S_AcceptedCmpTotal + 0.99930163787509 * S_Frq + 
1.71070447604488 * S_Mnt + 0.00262288180651 * S_MntMeatProducts + -0.26040107336488 * 
S_NumCatalogPurchases + 1.79245188553632 * S_NumDealsPurchases + 0.26061762777338 * 
S_NumWebVisitsMonth + 0.08976701277133 * S_Recency ;
234074    +   H13  =       0.104381332746 * S_AcceptedCmpTotal  +    -1.51764539772771 *
234075    +        S_Frq  +     0.93148616742855 * S_Mnt  +     2.93767108708116 *
234076    +        S_MntMeatProducts  +     0.79051284359814 * S_NumCatalogPurchases
234077    +          +     0.49339750797451 * S_NumDealsPurchases
234078    +          +    -0.25657630888957 * S_NumWebVisitsMonth
234079    +          +    -0.02783592802322 * S_Recency ;
MPRINT(EM_DIAGRAM):   H13 = 0.104381332746 * S_AcceptedCmpTotal + -1.51764539772771 * S_Frq + 
0.93148616742855 * S_Mnt + 2.93767108708116 * S_MntMeatProducts + 0.79051284359814 * 
S_NumCatalogPurchases + 0.49339750797451 * S_NumDealsPurchases + -0.25657630888957 * 
S_NumWebVisitsMonth + -0.02783592802322 * S_Recency ;
234080    +   H14  =     0.54135833698612 * S_AcceptedCmpTotal  +     1.35730431022222 *
234081    +        S_Frq  +     0.77200942468842 * S_Mnt  +    -1.51698500454254 *
234082    +        S_MntMeatProducts  +    -0.62605649177998 * S_NumCatalogPurchases
234083    +          +    -0.20841011025614 * S_NumDealsPurchases
234084    +          +    -0.95976462163535 * S_NumWebVisitsMonth
234085    +          +    -0.85153512604579 * S_Recency ;
MPRINT(EM_DIAGRAM):   H14 = 0.54135833698612 * S_AcceptedCmpTotal + 1.35730431022222 * S_Frq + 
0.77200942468842 * S_Mnt + -1.51698500454254 * S_MntMeatProducts + -0.62605649177998 * 
S_NumCatalogPurchases + -0.20841011025614 * S_NumDealsPurchases + -0.95976462163535 * 
S_NumWebVisitsMonth + -0.85153512604579 * S_Recency ;
234086    +   H15  =     0.45598292592982 * S_AcceptedCmpTotal  +     0.62149856604856 *
234087    +        S_Frq  +    -0.19094507833451 * S_Mnt  +     0.31024365368678 *
234088    +        S_MntMeatProducts  +     0.43336537836455 * S_NumCatalogPurchases
234089    +          +    -0.79330545518211 * S_NumDealsPurchases
234090    +          +     0.31692653945914 * S_NumWebVisitsMonth
234091    +          +    -0.82721510615104 * S_Recency ;
MPRINT(EM_DIAGRAM):   H15 = 0.45598292592982 * S_AcceptedCmpTotal + 0.62149856604856 * S_Frq + 
-0.19094507833451 * S_Mnt + 0.31024365368678 * S_MntMeatProducts + 0.43336537836455 * 
S_NumCatalogPurchases + -0.79330545518211 * S_NumDealsPurchases + 0.31692653945914 * 
S_NumWebVisitsMonth + -0.82721510615104 * S_Recency ;
234092    +   H11  = H11  +    -0.25100863467838 * Marital_StatusDivorced
234093    +          +     0.15562142019257 * Marital_StatusMarried
234094    +          +    -0.11924929825992 * Marital_StatusSingle
234095    +          +     0.19445161712576 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.25100863467838 * Marital_StatusDivorced + 
0.15562142019257 * Marital_StatusMarried + -0.11924929825992 * Marital_StatusSingle + 
0.19445161712576 * Marital_StatusTogether ;
234096    +   H12  = H12  +     0.58193215591516 * Marital_StatusDivorced
234097    +          +     0.27485963958922 * Marital_StatusMarried
234098    +          +    -0.46136322561544 * Marital_StatusSingle
234099    +          +     1.17785849262888 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.58193215591516 * Marital_StatusDivorced + 0.27485963958922 
* Marital_StatusMarried + -0.46136322561544 * Marital_StatusSingle + 1.17785849262888 * 
Marital_StatusTogether ;
234100    +   H13  = H13  +    -0.55576156297846 * Marital_StatusDivorced
234101    +          +     0.18663773247842 * Marital_StatusMarried
234102    +          +    -0.14692184711639 * Marital_StatusSingle
234103    +          +     0.40795003682635 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.55576156297846 * Marital_StatusDivorced + 
0.18663773247842 * Marital_StatusMarried + -0.14692184711639 * Marital_StatusSingle + 
0.40795003682635 * Marital_StatusTogether ;
234104    +   H14  = H14  +    -1.70154958647134 * Marital_StatusDivorced
234105    +          +     -0.0143065674831 * Marital_StatusMarried
234106    +          +     0.13491720981006 * Marital_StatusSingle
234107    +          +     0.65058537454476 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -1.70154958647134 * Marital_StatusDivorced + 
-0.0143065674831 * Marital_StatusMarried + 0.13491720981006 * Marital_StatusSingle + 
0.65058537454476 * Marital_StatusTogether ;
234108    +   H15  = H15  +    -0.57735977480465 * Marital_StatusDivorced
234109    +          +    -1.18521635425485 * Marital_StatusMarried
234110    +          +     1.27858890561049 * Marital_StatusSingle
234111    +          +    -0.68308863502606 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.57735977480465 * Marital_StatusDivorced + 
-1.18521635425485 * Marital_StatusMarried + 1.27858890561049 * Marital_StatusSingle + 
-0.68308863502606 * Marital_StatusTogether ;
234112    +   H11  =     0.91898399777449 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.91898399777449 + H11 ;
234113    +   H12  =    -0.65172531168643 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.65172531168643 + H12 ;
234114    +   H13  =     2.21950020718323 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 2.21950020718323 + H13 ;
234115    +   H14  =     0.94167989308741 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.94167989308741 + H14 ;
234116    +   H15  =    -2.75049414690283 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -2.75049414690283 + H15 ;
234117    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
234118    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
234119    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
234120    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
234121    +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
234122    +END;
MPRINT(EM_DIAGRAM):   END;
234123    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
234124    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
234125    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
234126    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
234127    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
234128    +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
234129    +END;
MPRINT(EM_DIAGRAM):   END;
234130    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
234131    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
234132    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
234133    +
234134    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
234135    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
234136    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
234137    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
234138    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
234139    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
234140    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
234141    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
234142    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
234143    +end;
MPRINT(EM_DIAGRAM):   end;
234144    +else do;
MPRINT(EM_DIAGRAM):   else do;
234145    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
234146    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
234147    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
234148    +   end;
MPRINT(EM_DIAGRAM):   end;
234149    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
234150    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
234151    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
234152    +   end;
MPRINT(EM_DIAGRAM):   end;
234153    +   else do;
MPRINT(EM_DIAGRAM):   else do;
234154    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
234155    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
234156    +   end;
MPRINT(EM_DIAGRAM):   end;
234157    +end;
MPRINT(EM_DIAGRAM):   end;
234158    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
234159    +   P_DepVar1  =    -7.73278760171706 * H11  +    -1.81420899061277 * H12
234160    +          +      7.8974780725891 * H13  +    -2.47430312661533 * H14
234161    +          +       3.637554312671 * H15 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -7.73278760171706 * H11 + -1.81420899061277 * H12 + 
7.8974780725891 * H13 + -2.47430312661533 * H14 + 3.637554312671 * H15 ;
234162    +   P_DepVar1  =    -2.27177312353398 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.27177312353398 + P_DepVar1 ;
234163    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
234164    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
234165    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
234166    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
234167    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
234168    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
234169    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
234170    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
234171    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
234172    +END;
MPRINT(EM_DIAGRAM):   END;
234173    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
234174    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
234175    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
234176    +END;
MPRINT(EM_DIAGRAM):   END;
234177    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
234178    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
234179    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
234180    +END;
MPRINT(EM_DIAGRAM):   END;
234181    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
234182    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
234183    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
234184    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
234185    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
234186    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
234187    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
234188    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
234189    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
234190    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
234191    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
234192    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
234193    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
234194    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
234195    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
234196    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
234197    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
234198    +END;
MPRINT(EM_DIAGRAM):   END;
234199    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
234200    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
234201    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
234202    +drop
234203    +H11
234204    +H12
234205    +H13
234206    +H14
234207    +H15
234208    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 ;
234209    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
234210    +* Renaming variables for Neural40;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural40;
234211    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
234212    +* Renaming Posterior variables for Neural40;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural40;
234213    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
234214    +drop Neural40_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural40_P_DepVar1;
234215    +Neural40_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural40_P_DepVar1 = P_DepVar1;
234216    +drop Neural40_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural40_P_DepVar0;
234217    +Neural40_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural40_P_DepVar0 = P_DepVar0;
234218    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
234219    +* Renaming _WARN_ variable for Neural40;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural40;
234220    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
234221    +length Neural40_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural40_WARN_ $4;
234222    +drop Neural40_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural40_WARN_;
234223    +Neural40_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural40_WARN_ = _WARN_;
234224    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
234225    +* Ensmbl23: Scoring Code of model 2 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl23: Scoring Code of model 2 of 5;
234226    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
234227    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
234228    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
234229    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
234230    +* NODE: AutoNeural38;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural38;
234231    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
234232    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
234233    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
234234    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
234235    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
234236    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
234237    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
234238    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
234239    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
234240    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
234241    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
234242    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
234243    +LENGTH _WARN_ $4
234244    +      F_DepVar  $ 12
234245    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
234246    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
234247    +
234248    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
234249    +
234250    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
234251    +
234252    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
234253    +
234254    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
234255    +
234256    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
234257    +
234258    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
234259    +
234260    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
234261    +
234262    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
234263    +
234264    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
234265    +
234266    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
234267    +
234268    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
234269    +
234270    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
234271    +
234272    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
234273    +
234274    +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
234275    +
234276    +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
234277    +
234278    +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
234279    +
234280    +      label H1x3_2 = 'Hidden: H1x3_=2' ;
MPRINT(EM_DIAGRAM):   label H1x3_2 = 'Hidden: H1x3_=2' ;
234281    +
234282    +      label H1x4_1 = 'Hidden: H1x4_=1' ;
MPRINT(EM_DIAGRAM):   label H1x4_1 = 'Hidden: H1x4_=1' ;
234283    +
234284    +      label H1x4_2 = 'Hidden: H1x4_=2' ;
MPRINT(EM_DIAGRAM):   label H1x4_2 = 'Hidden: H1x4_=2' ;
234285    +
234286    +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
234287    +
234288    +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
234289    +
234290    +      label H2x2_1 = 'Hidden: H2x2_=1' ;
MPRINT(EM_DIAGRAM):   label H2x2_1 = 'Hidden: H2x2_=1' ;
234291    +
234292    +      label H2x2_2 = 'Hidden: H2x2_=2' ;
MPRINT(EM_DIAGRAM):   label H2x2_2 = 'Hidden: H2x2_=2' ;
234293    +
234294    +      label H2x3_1 = 'Hidden: H2x3_=1' ;
MPRINT(EM_DIAGRAM):   label H2x3_1 = 'Hidden: H2x3_=1' ;
234295    +
234296    +      label H2x3_2 = 'Hidden: H2x3_=2' ;
MPRINT(EM_DIAGRAM):   label H2x3_2 = 'Hidden: H2x3_=2' ;
234297    +
234298    +      label H3x1_1 = 'Hidden: H3x1_=1' ;
MPRINT(EM_DIAGRAM):   label H3x1_1 = 'Hidden: H3x1_=1' ;
234299    +
234300    +      label H3x1_2 = 'Hidden: H3x1_=2' ;
MPRINT(EM_DIAGRAM):   label H3x1_2 = 'Hidden: H3x1_=2' ;
234301    +
234302    +      label H3x2_1 = 'Hidden: H3x2_=1' ;
MPRINT(EM_DIAGRAM):   label H3x2_1 = 'Hidden: H3x2_=1' ;
234303    +
234304    +      label H3x2_2 = 'Hidden: H3x2_=2' ;
MPRINT(EM_DIAGRAM):   label H3x2_2 = 'Hidden: H3x2_=2' ;
234305    +
234306    +      label H4x1_1 = 'Hidden: H4x1_=1' ;
MPRINT(EM_DIAGRAM):   label H4x1_1 = 'Hidden: H4x1_=1' ;
234307    +
234308    +      label H4x1_2 = 'Hidden: H4x1_=2' ;
MPRINT(EM_DIAGRAM):   label H4x1_2 = 'Hidden: H4x1_=2' ;
234309    +
234310    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
234311    +
234312    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
234313    +
234314    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
234315    +
234316    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
234317    +
234318    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
234319    +
234320    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
234321    +
234322    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
234323    +
234324    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
234325    +
234326    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
234327    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
234328    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
234329    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
234330    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
234331    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
234332    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
234333    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
234334    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
234335    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
234336    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
234337    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
234338    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
234339    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
234340    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
234341    +end;
MPRINT(EM_DIAGRAM):   end;
234342    +else do;
MPRINT(EM_DIAGRAM):   else do;
234343    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
234344    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
234345    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
234346    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
234347    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
234348    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
234349    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
234350    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
234351    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
234352    +         end;
MPRINT(EM_DIAGRAM):   end;
234353    +         else do;
MPRINT(EM_DIAGRAM):   else do;
234354    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
234355    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
234356    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
234357    +            end;
MPRINT(EM_DIAGRAM):   end;
234358    +         end;
MPRINT(EM_DIAGRAM):   end;
234359    +      end;
MPRINT(EM_DIAGRAM):   end;
234360    +      else do;
MPRINT(EM_DIAGRAM):   else do;
234361    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
234362    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
234363    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
234364    +         end;
MPRINT(EM_DIAGRAM):   end;
234365    +      end;
MPRINT(EM_DIAGRAM):   end;
234366    +   end;
MPRINT(EM_DIAGRAM):   end;
234367    +   else do;
MPRINT(EM_DIAGRAM):   else do;
234368    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
234369    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
234370    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
234371    +      end;
MPRINT(EM_DIAGRAM):   end;
234372    +      else do;
MPRINT(EM_DIAGRAM):   else do;
234373    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
234374    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
234375    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
234376    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
234377    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
234378    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
234379    +         end;
MPRINT(EM_DIAGRAM):   end;
234380    +      end;
MPRINT(EM_DIAGRAM):   end;
234381    +   end;
MPRINT(EM_DIAGRAM):   end;
234382    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
234383    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
234384    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
234385    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
234386    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
234387    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
234388    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
234389    +   end;
MPRINT(EM_DIAGRAM):   end;
234390    +end;
MPRINT(EM_DIAGRAM):   end;
234391    +
234392    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
234393    +*** Checking missing input Interval
234394    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
234395    +
234396    +IF NMISS(
234397    +   AcceptedCmpTotal ,
234398    +   Frq ,
234399    +   Mnt ,
234400    +   MntMeatProducts ,
234401    +   NumCatalogPurchases ,
234402    +   NumDealsPurchases ,
234403    +   NumWebVisitsMonth ,
234404    +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Mnt , MntMeatProducts , 
NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , Recency ) THEN DO;
234405    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
234406    +
234407    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
234408    +END;
MPRINT(EM_DIAGRAM):   END;
234409    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
234410    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
234411    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
234412    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
234413    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
234414    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
234415    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
234416    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
234417    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
234418    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
234419    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
234420    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
234421    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
234422    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
234423    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
234424    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
234425    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
234426    +END;
MPRINT(EM_DIAGRAM):   END;
234427    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
234428    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
234429    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
234430    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
234431    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
234432    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
234433    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
234434    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
234435    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
234436    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
234437    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
234438    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
234439    +   ELSE S_NumCatalogPurchases
234440    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
234441    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
234442    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
234443    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
234444    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
234445    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
234446    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
234447    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
234448    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
234449    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
234450    +END;
MPRINT(EM_DIAGRAM):   END;
234451    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
234452    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
234453    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
234454    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
234455    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
234456    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
234457    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
234458    +   H1x1_1  =     0.03317833435323 * S_AcceptedCmpTotal
234459    +          +    -0.66859164215955 * S_Frq  +     1.04503858219375 * S_Mnt
234460    +          +     3.02405267314398 * S_MntMeatProducts
234461    +          +     0.25422172488707 * S_NumCatalogPurchases
234462    +          +     0.25977266371328 * S_NumDealsPurchases
234463    +          +    -0.26865365728773 * S_NumWebVisitsMonth
234464    +          +     0.09531087154516 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.03317833435323 * S_AcceptedCmpTotal + -0.66859164215955 * 
S_Frq + 1.04503858219375 * S_Mnt + 3.02405267314398 * S_MntMeatProducts + 0.25422172488707 * 
S_NumCatalogPurchases + 0.25977266371328 * S_NumDealsPurchases + -0.26865365728773 * 
S_NumWebVisitsMonth + 0.09531087154516 * S_Recency ;
234465    +   H1x1_2  =    -0.69087988352897 * S_AcceptedCmpTotal
234466    +          +    -0.11955753576733 * S_Frq  +     0.84152651412075 * S_Mnt
234467    +          +    -0.64419071408502 * S_MntMeatProducts
234468    +          +    -0.49060224303044 * S_NumCatalogPurchases
234469    +          +    -0.04840762943457 * S_NumDealsPurchases
234470    +          +     -0.7656247386051 * S_NumWebVisitsMonth
234471    +          +     1.13086655489449 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.69087988352897 * S_AcceptedCmpTotal + -0.11955753576733 * 
S_Frq + 0.84152651412075 * S_Mnt + -0.64419071408502 * S_MntMeatProducts + -0.49060224303044 * 
S_NumCatalogPurchases + -0.04840762943457 * S_NumDealsPurchases + -0.7656247386051 * 
S_NumWebVisitsMonth + 1.13086655489449 * S_Recency ;
234472    +   H1x1_1  = H1x1_1  +    -0.53136707555877 * Marital_StatusDivorced
234473    +          +    -0.05888536499281 * Marital_StatusMarried
234474    +          +    -0.22627441829205 * Marital_StatusSingle
234475    +          +     0.52348719245564 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.53136707555877 * Marital_StatusDivorced + 
-0.05888536499281 * Marital_StatusMarried + -0.22627441829205 * Marital_StatusSingle + 
0.52348719245564 * Marital_StatusTogether ;
234476    +   H1x1_2  = H1x1_2  +    -0.85322837962298 * Marital_StatusDivorced
234477    +          +     0.82536605771339 * Marital_StatusMarried
234478    +          +    -0.97196770004098 * Marital_StatusSingle
234479    +          +      1.2063947269032 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.85322837962298 * Marital_StatusDivorced + 
0.82536605771339 * Marital_StatusMarried + -0.97196770004098 * Marital_StatusSingle + 
1.2063947269032 * Marital_StatusTogether ;
234480    +   H1x1_1  =     3.30547913450619 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 3.30547913450619 + H1x1_1 ;
234481    +   H1x1_2  =     1.08446512287712 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.08446512287712 + H1x1_2 ;
234482    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
234483    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
234484    +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
234485    +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
234486    +END;
MPRINT(EM_DIAGRAM):   END;
234487    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
234488    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
234489    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
234490    +END;
MPRINT(EM_DIAGRAM):   END;
234491    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
234492    +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
234493    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
234494    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
234495    +   H1x2_1  =     0.52271766494525 * S_AcceptedCmpTotal
234496    +          +     0.57611155332907 * S_Frq  +     2.82792468297238 * S_Mnt
234497    +          +    -1.52187144029368 * S_MntMeatProducts
234498    +          +    -0.17233011764417 * S_NumCatalogPurchases
234499    +          +     0.08681674245114 * S_NumDealsPurchases
234500    +          +     0.13308256651831 * S_NumWebVisitsMonth
234501    +          +    -0.88526514420045 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.52271766494525 * S_AcceptedCmpTotal + 0.57611155332907 * 
S_Frq + 2.82792468297238 * S_Mnt + -1.52187144029368 * S_MntMeatProducts + -0.17233011764417 * 
S_NumCatalogPurchases + 0.08681674245114 * S_NumDealsPurchases + 0.13308256651831 * 
S_NumWebVisitsMonth + -0.88526514420045 * S_Recency ;
234502    +   H1x2_2  =      0.4222520789746 * S_AcceptedCmpTotal
234503    +          +    -3.13381438735416 * S_Frq  +    -0.34909843441486 * S_Mnt
234504    +          +     0.66187267823731 * S_MntMeatProducts
234505    +          +     1.52530454111654 * S_NumCatalogPurchases
234506    +          +     0.73982889008686 * S_NumDealsPurchases
234507    +          +     1.03760708665776 * S_NumWebVisitsMonth
234508    +          +    -1.31685207844927 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.4222520789746 * S_AcceptedCmpTotal + -3.13381438735416 * 
S_Frq + -0.34909843441486 * S_Mnt + 0.66187267823731 * S_MntMeatProducts + 1.52530454111654 * 
S_NumCatalogPurchases + 0.73982889008686 * S_NumDealsPurchases + 1.03760708665776 * 
S_NumWebVisitsMonth + -1.31685207844927 * S_Recency ;
234509    +   H1x2_1  = H1x2_1  +    -0.40921432838161 * Marital_StatusDivorced
234510    +          +    -0.57121500191985 * Marital_StatusMarried
234511    +          +     0.00575301863466 * Marital_StatusSingle
234512    +          +     0.58606212168272 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.40921432838161 * Marital_StatusDivorced + 
-0.57121500191985 * Marital_StatusMarried + 0.00575301863466 * Marital_StatusSingle + 
0.58606212168272 * Marital_StatusTogether ;
234513    +   H1x2_2  = H1x2_2  +     0.05193612372383 * Marital_StatusDivorced
234514    +          +     0.68382990555761 * Marital_StatusMarried
234515    +          +    -0.40241665873988 * Marital_StatusSingle
234516    +          +     0.66274709598028 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.05193612372383 * Marital_StatusDivorced + 
0.68382990555761 * Marital_StatusMarried + -0.40241665873988 * Marital_StatusSingle + 
0.66274709598028 * Marital_StatusTogether ;
234517    +   H1x2_1  =     1.66256790999222 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.66256790999222 + H1x2_1 ;
234518    +   H1x2_2  =    -2.71135276190381 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -2.71135276190381 + H1x2_2 ;
234519    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
234520    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
234521    +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
234522    +   H1x2_2  = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_2 = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
234523    +END;
MPRINT(EM_DIAGRAM):   END;
234524    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
234525    +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
234526    +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
234527    +END;
MPRINT(EM_DIAGRAM):   END;
234528    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
234529    +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
234530    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
234531    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
234532    +   H1x3_1  =    -1.36813165661884 * S_AcceptedCmpTotal
234533    +          +    -0.29960918468261 * S_Frq  +    -0.65204315831074 * S_Mnt
234534    +          +    -2.40830591527574 * S_MntMeatProducts
234535    +          +    -0.89296864866675 * S_NumCatalogPurchases
234536    +          +     1.79889409325514 * S_NumDealsPurchases
234537    +          +    -0.33765715793031 * S_NumWebVisitsMonth
234538    +          +    -0.63474704455434 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_1 = -1.36813165661884 * S_AcceptedCmpTotal + -0.29960918468261 * 
S_Frq + -0.65204315831074 * S_Mnt + -2.40830591527574 * S_MntMeatProducts + -0.89296864866675 
* S_NumCatalogPurchases + 1.79889409325514 * S_NumDealsPurchases + -0.33765715793031 * 
S_NumWebVisitsMonth + -0.63474704455434 * S_Recency ;
234539    +   H1x3_2  =    -0.20409738779324 * S_AcceptedCmpTotal
234540    +          +     1.49919916163823 * S_Frq  +     -0.9415605932144 * S_Mnt
234541    +          +     0.04224245417831 * S_MntMeatProducts
234542    +          +     0.25836861794607 * S_NumCatalogPurchases
234543    +          +     2.47909264202917 * S_NumDealsPurchases
234544    +          +     0.14790226792406 * S_NumWebVisitsMonth
234545    +          +     0.40870786833591 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_2 = -0.20409738779324 * S_AcceptedCmpTotal + 1.49919916163823 * 
S_Frq + -0.9415605932144 * S_Mnt + 0.04224245417831 * S_MntMeatProducts + 0.25836861794607 * 
S_NumCatalogPurchases + 2.47909264202917 * S_NumDealsPurchases + 0.14790226792406 * 
S_NumWebVisitsMonth + 0.40870786833591 * S_Recency ;
234546    +   H1x3_1  = H1x3_1  +     0.20928850420446 * Marital_StatusDivorced
234547    +          +     0.39103795234666 * Marital_StatusMarried
234548    +          +    -0.52822284221545 * Marital_StatusSingle
234549    +          +    -1.86494928221959 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 0.20928850420446 * Marital_StatusDivorced + 
0.39103795234666 * Marital_StatusMarried + -0.52822284221545 * Marital_StatusSingle + 
-1.86494928221959 * Marital_StatusTogether ;
234550    +   H1x3_2  = H1x3_2  +     1.62005786474378 * Marital_StatusDivorced
234551    +          +       1.975579060233 * Marital_StatusMarried
234552    +          +     0.15028521746762 * Marital_StatusSingle
234553    +          +     0.92005975380984 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + 1.62005786474378 * Marital_StatusDivorced + 
1.975579060233 * Marital_StatusMarried + 0.15028521746762 * Marital_StatusSingle + 
0.92005975380984 * Marital_StatusTogether ;
234554    +   H1x3_1  =     0.89242262747745 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.89242262747745 + H1x3_1 ;
234555    +   H1x3_2  =     0.65972128608947 + H1x3_2 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = 0.65972128608947 + H1x3_2 ;
234556    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
234557    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
234558    +   H1x3_1  = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_1 = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
234559    +   H1x3_2  = 1.0 / (1.0 + EXP(MIN( - H1x3_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_2 = 1.0 / (1.0 + EXP(MIN( - H1x3_2 , _EXP_BAR)));
234560    +END;
MPRINT(EM_DIAGRAM):   END;
234561    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
234562    +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
234563    +   H1x3_2  = .;
MPRINT(EM_DIAGRAM):   H1x3_2 = .;
234564    +END;
MPRINT(EM_DIAGRAM):   END;
234565    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
234566    +*** Writing the Node H1x4_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x4_ ;
234567    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
234568    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
234569    +   H1x4_1  =    -1.56857036994838 * S_AcceptedCmpTotal
234570    +          +    -0.01709393019065 * S_Frq  +    -0.41130381419631 * S_Mnt
234571    +          +     0.16060225059391 * S_MntMeatProducts
234572    +          +     1.53093292630033 * S_NumCatalogPurchases
234573    +          +     0.39573641806699 * S_NumDealsPurchases
234574    +          +    -0.95387142126649 * S_NumWebVisitsMonth
234575    +          +     0.58661969978382 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x4_1 = -1.56857036994838 * S_AcceptedCmpTotal + -0.01709393019065 * 
S_Frq + -0.41130381419631 * S_Mnt + 0.16060225059391 * S_MntMeatProducts + 1.53093292630033 * 
S_NumCatalogPurchases + 0.39573641806699 * S_NumDealsPurchases + -0.95387142126649 * 
S_NumWebVisitsMonth + 0.58661969978382 * S_Recency ;
234576    +   H1x4_2  =     0.40365014181339 * S_AcceptedCmpTotal
234577    +          +     0.25758137147094 * S_Frq  +     1.96878849657351 * S_Mnt
234578    +          +     0.71628478327205 * S_MntMeatProducts
234579    +          +     0.15890352363556 * S_NumCatalogPurchases
234580    +          +    -1.12928875468011 * S_NumDealsPurchases
234581    +          +    -0.30108145274307 * S_NumWebVisitsMonth
234582    +          +     0.28810419317266 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x4_2 = 0.40365014181339 * S_AcceptedCmpTotal + 0.25758137147094 * 
S_Frq + 1.96878849657351 * S_Mnt + 0.71628478327205 * S_MntMeatProducts + 0.15890352363556 * 
S_NumCatalogPurchases + -1.12928875468011 * S_NumDealsPurchases + -0.30108145274307 * 
S_NumWebVisitsMonth + 0.28810419317266 * S_Recency ;
234583    +   H1x4_1  = H1x4_1  +     0.71809860803817 * Marital_StatusDivorced
234584    +          +     0.91966160839643 * Marital_StatusMarried
234585    +          +    -0.63411090570397 * Marital_StatusSingle
234586    +          +    -0.54635673224032 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x4_1 = H1x4_1 + 0.71809860803817 * Marital_StatusDivorced + 
0.91966160839643 * Marital_StatusMarried + -0.63411090570397 * Marital_StatusSingle + 
-0.54635673224032 * Marital_StatusTogether ;
234587    +   H1x4_2  = H1x4_2  +    -0.82559954633474 * Marital_StatusDivorced
234588    +          +     0.77230489026504 * Marital_StatusMarried
234589    +          +     0.20456495503812 * Marital_StatusSingle
234590    +          +    -0.94791841887496 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x4_2 = H1x4_2 + -0.82559954633474 * Marital_StatusDivorced + 
0.77230489026504 * Marital_StatusMarried + 0.20456495503812 * Marital_StatusSingle + 
-0.94791841887496 * Marital_StatusTogether ;
234591    +   H1x4_1  =    -0.74278734869781 + H1x4_1 ;
MPRINT(EM_DIAGRAM):   H1x4_1 = -0.74278734869781 + H1x4_1 ;
234592    +   H1x4_2  =     1.36386007305279 + H1x4_2 ;
MPRINT(EM_DIAGRAM):   H1x4_2 = 1.36386007305279 + H1x4_2 ;
234593    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
234594    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
234595    +   H1x4_1  = 1.0 / (1.0 + EXP(MIN( - H1x4_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x4_1 = 1.0 / (1.0 + EXP(MIN( - H1x4_1 , _EXP_BAR)));
234596    +   H1x4_2  = 1.0 / (1.0 + EXP(MIN( - H1x4_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x4_2 = 1.0 / (1.0 + EXP(MIN( - H1x4_2 , _EXP_BAR)));
234597    +END;
MPRINT(EM_DIAGRAM):   END;
234598    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
234599    +   H1x4_1  = .;
MPRINT(EM_DIAGRAM):   H1x4_1 = .;
234600    +   H1x4_2  = .;
MPRINT(EM_DIAGRAM):   H1x4_2 = .;
234601    +END;
MPRINT(EM_DIAGRAM):   END;
234602    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
234603    +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
234604    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
234605    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
234606    +   H2x1_1  =     6.70671434954254 * H1x1_1  +    -3.26026761915622 * H1x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 6.70671434954254 * H1x1_1 + -3.26026761915622 * H1x1_2 ;
234607    +   H2x1_2  =     9.50930943961048 * H1x1_1  +     -38.665886357082 * H1x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 9.50930943961048 * H1x1_1 + -38.665886357082 * H1x1_2 ;
234608    +   H2x1_1  = H2x1_1  +    -2.93089545861469 * H1x2_1
234609    +          +     1.56101538169797 * H1x2_2 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -2.93089545861469 * H1x2_1 + 1.56101538169797 * H1x2_2 
;
234610    +   H2x1_2  = H2x1_2  +    -0.71350117244702 * H1x2_1
234611    +          +    -3.81025846953023 * H1x2_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -0.71350117244702 * H1x2_1 + -3.81025846953023 * 
H1x2_2 ;
234612    +   H2x1_1  = H2x1_1  +    -0.33624313911685 * H1x3_1
234613    +          +     -0.2506302302983 * H1x3_2 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -0.33624313911685 * H1x3_1 + -0.2506302302983 * H1x3_2 
;
234614    +   H2x1_2  = H2x1_2  +    -0.95434767487254 * H1x3_1
234615    +          +    -0.10638654133666 * H1x3_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -0.95434767487254 * H1x3_1 + -0.10638654133666 * 
H1x3_2 ;
234616    +   H2x1_1  = H2x1_1  +    -0.27261326347944 * H1x4_1
234617    +          +     0.15687682287669 * H1x4_2 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -0.27261326347944 * H1x4_1 + 0.15687682287669 * H1x4_2 
;
234618    +   H2x1_2  = H2x1_2  +     0.43717724195408 * H1x4_1
234619    +          +     0.97600288948907 * H1x4_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.43717724195408 * H1x4_1 + 0.97600288948907 * H1x4_2 ;
234620    +   H2x1_1  =    -1.76465776305701 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -1.76465776305701 + H2x1_1 ;
234621    +   H2x1_2  =     2.45505067378694 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 2.45505067378694 + H2x1_2 ;
234622    +   H2x1_1  = SIN(H2x1_1 );
MPRINT(EM_DIAGRAM):   H2x1_1 = SIN(H2x1_1 );
234623    +   H2x1_2  = SIN(H2x1_2 );
MPRINT(EM_DIAGRAM):   H2x1_2 = SIN(H2x1_2 );
234624    +END;
MPRINT(EM_DIAGRAM):   END;
234625    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
234626    +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
234627    +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
234628    +END;
MPRINT(EM_DIAGRAM):   END;
234629    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
234630    +*** Writing the Node H2x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x2_ ;
234631    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
234632    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
234633    +   H2x2_1  =     0.44221000188212 * H1x1_1  +    -0.09410411660626 * H1x1_2 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = 0.44221000188212 * H1x1_1 + -0.09410411660626 * H1x1_2 ;
234634    +   H2x2_2  =    -0.62041237832472 * H1x1_1  +    -1.70568019769479 * H1x1_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = -0.62041237832472 * H1x1_1 + -1.70568019769479 * H1x1_2 ;
234635    +   H2x2_1  = H2x2_1  +     0.86476170574504 * H1x2_1
234636    +          +    -2.36042697137738 * H1x2_2 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + 0.86476170574504 * H1x2_1 + -2.36042697137738 * H1x2_2 
;
234637    +   H2x2_2  = H2x2_2  +     0.44483356408795 * H1x2_1
234638    +          +    -1.66254033339836 * H1x2_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + 0.44483356408795 * H1x2_1 + -1.66254033339836 * H1x2_2 
;
234639    +   H2x2_1  = H2x2_1  +     2.16429199725142 * H1x3_1
234640    +          +     1.43296701176218 * H1x3_2 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + 2.16429199725142 * H1x3_1 + 1.43296701176218 * H1x3_2 ;
234641    +   H2x2_2  = H2x2_2  +     -2.3086904824016 * H1x3_1
234642    +          +    -2.17810690370253 * H1x3_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + -2.3086904824016 * H1x3_1 + -2.17810690370253 * H1x3_2 
;
234643    +   H2x2_1  = H2x2_1  +     0.00588994713052 * H1x4_1
234644    +          +     0.12676819806376 * H1x4_2 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + 0.00588994713052 * H1x4_1 + 0.12676819806376 * H1x4_2 ;
234645    +   H2x2_2  = H2x2_2  +     0.82027256992322 * H1x4_1
234646    +          +    -0.52732352975227 * H1x4_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + 0.82027256992322 * H1x4_1 + -0.52732352975227 * H1x4_2 
;
234647    +   H2x2_1  =     0.47389009262422 + H2x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = 0.47389009262422 + H2x2_1 ;
234648    +   H2x2_2  =     -0.8122008316452 + H2x2_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = -0.8122008316452 + H2x2_2 ;
234649    +   H2x2_1  = SIN(H2x2_1 );
MPRINT(EM_DIAGRAM):   H2x2_1 = SIN(H2x2_1 );
234650    +   H2x2_2  = SIN(H2x2_2 );
MPRINT(EM_DIAGRAM):   H2x2_2 = SIN(H2x2_2 );
234651    +END;
MPRINT(EM_DIAGRAM):   END;
234652    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
234653    +   H2x2_1  = .;
MPRINT(EM_DIAGRAM):   H2x2_1 = .;
234654    +   H2x2_2  = .;
MPRINT(EM_DIAGRAM):   H2x2_2 = .;
234655    +END;
MPRINT(EM_DIAGRAM):   END;
234656    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
234657    +*** Writing the Node H2x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x3_ ;
234658    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
234659    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
234660    +   H2x3_1  =    -0.28493649489231 * H1x1_1  +     0.46324227997344 * H1x1_2 ;
MPRINT(EM_DIAGRAM):   H2x3_1 = -0.28493649489231 * H1x1_1 + 0.46324227997344 * H1x1_2 ;
234661    +   H2x3_2  =     0.41015874548881 * H1x1_1  +    -0.05146341955765 * H1x1_2 ;
MPRINT(EM_DIAGRAM):   H2x3_2 = 0.41015874548881 * H1x1_1 + -0.05146341955765 * H1x1_2 ;
234662    +   H2x3_1  = H2x3_1  +    -1.00349052905386 * H1x2_1
234663    +          +     0.64290952668224 * H1x2_2 ;
MPRINT(EM_DIAGRAM):   H2x3_1 = H2x3_1 + -1.00349052905386 * H1x2_1 + 0.64290952668224 * H1x2_2 
;
234664    +   H2x3_2  = H2x3_2  +     0.48935572509195 * H1x2_1
234665    +          +     0.64476371718125 * H1x2_2 ;
MPRINT(EM_DIAGRAM):   H2x3_2 = H2x3_2 + 0.48935572509195 * H1x2_1 + 0.64476371718125 * H1x2_2 ;
234666    +   H2x3_1  = H2x3_1  +    -1.11988665905516 * H1x3_1
234667    +          +    -0.34805105626026 * H1x3_2 ;
MPRINT(EM_DIAGRAM):   H2x3_1 = H2x3_1 + -1.11988665905516 * H1x3_1 + -0.34805105626026 * 
H1x3_2 ;
234668    +   H2x3_2  = H2x3_2  +     0.32493988416634 * H1x3_1
234669    +          +     0.32809540262065 * H1x3_2 ;
MPRINT(EM_DIAGRAM):   H2x3_2 = H2x3_2 + 0.32493988416634 * H1x3_1 + 0.32809540262065 * H1x3_2 ;
234670    +   H2x3_1  = H2x3_1  +     0.47764131040964 * H1x4_1
234671    +          +    -1.36976442655344 * H1x4_2 ;
MPRINT(EM_DIAGRAM):   H2x3_1 = H2x3_1 + 0.47764131040964 * H1x4_1 + -1.36976442655344 * H1x4_2 
;
234672    +   H2x3_2  = H2x3_2  +     -0.3421580983005 * H1x4_1
234673    +          +     0.47926475944446 * H1x4_2 ;
MPRINT(EM_DIAGRAM):   H2x3_2 = H2x3_2 + -0.3421580983005 * H1x4_1 + 0.47926475944446 * H1x4_2 ;
234674    +   H2x3_1  =     0.90815431460142 + H2x3_1 ;
MPRINT(EM_DIAGRAM):   H2x3_1 = 0.90815431460142 + H2x3_1 ;
234675    +   H2x3_2  =    -1.77185533764538 + H2x3_2 ;
MPRINT(EM_DIAGRAM):   H2x3_2 = -1.77185533764538 + H2x3_2 ;
234676    +   H2x3_1  = SIN(H2x3_1 );
MPRINT(EM_DIAGRAM):   H2x3_1 = SIN(H2x3_1 );
234677    +   H2x3_2  = SIN(H2x3_2 );
MPRINT(EM_DIAGRAM):   H2x3_2 = SIN(H2x3_2 );
234678    +END;
MPRINT(EM_DIAGRAM):   END;
234679    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
234680    +   H2x3_1  = .;
MPRINT(EM_DIAGRAM):   H2x3_1 = .;
234681    +   H2x3_2  = .;
MPRINT(EM_DIAGRAM):   H2x3_2 = .;
234682    +END;
MPRINT(EM_DIAGRAM):   END;
234683    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
234684    +*** Writing the Node H3x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x1_ ;
234685    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
234686    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
234687    +   H3x1_1  =     4.31939811374229 * H2x1_1  +      -0.700351897347 * H2x1_2 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 4.31939811374229 * H2x1_1 + -0.700351897347 * H2x1_2 ;
234688    +   H3x1_1  = H3x1_1  +     2.40750918668175 * H2x2_1
234689    +          +    -1.54042325930374 * H2x2_2 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + 2.40750918668175 * H2x2_1 + -1.54042325930374 * H2x2_2 
;
234690    +   H3x1_1  = H3x1_1  +     1.46738265989804 * H2x3_1
234691    +          +     0.20077963052939 * H2x3_2 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + 1.46738265989804 * H2x3_1 + 0.20077963052939 * H2x3_2 ;
234692    +   H3x1_1  =    -0.09840116412671 + H3x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = -0.09840116412671 + H3x1_1 ;
234693    +   H3x1_2  = 0;
MPRINT(EM_DIAGRAM):   H3x1_2 = 0;
234694    +   _MAX_ = MAX (H3x1_1 , H3x1_2 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H3x1_1 , H3x1_2 );
234695    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
234696    +   H3x1_1  = EXP(H3x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_1 = EXP(H3x1_1 - _MAX_);
234697    +   _SUM_ = _SUM_ + H3x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_1 ;
234698    +   H3x1_2  = EXP(H3x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_2 = EXP(H3x1_2 - _MAX_);
234699    +   _SUM_ = _SUM_ + H3x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_2 ;
234700    +   H3x1_1  = H3x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 / _SUM_;
234701    +   H3x1_2  = H3x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_2 = H3x1_2 / _SUM_;
234702    +END;
MPRINT(EM_DIAGRAM):   END;
234703    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
234704    +   H3x1_1  = .;
MPRINT(EM_DIAGRAM):   H3x1_1 = .;
234705    +   H3x1_2  = .;
MPRINT(EM_DIAGRAM):   H3x1_2 = .;
234706    +END;
MPRINT(EM_DIAGRAM):   END;
234707    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
234708    +*** Writing the Node H3x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x2_ ;
234709    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
234710    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
234711    +   H3x2_1  =    -1.46965147800397 * H2x1_1  +    -0.15489723855448 * H2x1_2 ;
MPRINT(EM_DIAGRAM):   H3x2_1 = -1.46965147800397 * H2x1_1 + -0.15489723855448 * H2x1_2 ;
234712    +   H3x2_1  = H3x2_1  +     0.91269334410481 * H2x2_1
234713    +          +     -0.0392976578726 * H2x2_2 ;
MPRINT(EM_DIAGRAM):   H3x2_1 = H3x2_1 + 0.91269334410481 * H2x2_1 + -0.0392976578726 * H2x2_2 ;
234714    +   H3x2_1  = H3x2_1  +    -1.07273740820729 * H2x3_1
234715    +          +    -1.32572907075931 * H2x3_2 ;
MPRINT(EM_DIAGRAM):   H3x2_1 = H3x2_1 + -1.07273740820729 * H2x3_1 + -1.32572907075931 * 
H2x3_2 ;
234716    +   H3x2_1  =     0.58690615295837 + H3x2_1 ;
MPRINT(EM_DIAGRAM):   H3x2_1 = 0.58690615295837 + H3x2_1 ;
234717    +   H3x2_2  = 0;
MPRINT(EM_DIAGRAM):   H3x2_2 = 0;
234718    +   _MAX_ = MAX (H3x2_1 , H3x2_2 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H3x2_1 , H3x2_2 );
234719    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
234720    +   H3x2_1  = EXP(H3x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x2_1 = EXP(H3x2_1 - _MAX_);
234721    +   _SUM_ = _SUM_ + H3x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x2_1 ;
234722    +   H3x2_2  = EXP(H3x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x2_2 = EXP(H3x2_2 - _MAX_);
234723    +   _SUM_ = _SUM_ + H3x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x2_2 ;
234724    +   H3x2_1  = H3x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x2_1 = H3x2_1 / _SUM_;
234725    +   H3x2_2  = H3x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x2_2 = H3x2_2 / _SUM_;
234726    +END;
MPRINT(EM_DIAGRAM):   END;
234727    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
234728    +   H3x2_1  = .;
MPRINT(EM_DIAGRAM):   H3x2_1 = .;
234729    +   H3x2_2  = .;
MPRINT(EM_DIAGRAM):   H3x2_2 = .;
234730    +END;
MPRINT(EM_DIAGRAM):   END;
234731    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
234732    +*** Writing the Node H4x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H4x1_ ;
234733    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
234734    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
234735    +   H4x1_1  =     2.98683826857579 * H3x1_1  +     -3.7943130439002 * H3x1_2 ;
MPRINT(EM_DIAGRAM):   H4x1_1 = 2.98683826857579 * H3x1_1 + -3.7943130439002 * H3x1_2 ;
234736    +   H4x1_1  = H4x1_1  +     -0.1130856885584 * H3x2_1
234737    +          +     0.90223250703174 * H3x2_2 ;
MPRINT(EM_DIAGRAM):   H4x1_1 = H4x1_1 + -0.1130856885584 * H3x2_1 + 0.90223250703174 * H3x2_2 ;
234738    +   H4x1_1  =     0.34321706022332 + H4x1_1 ;
MPRINT(EM_DIAGRAM):   H4x1_1 = 0.34321706022332 + H4x1_1 ;
234739    +   H4x1_2  = 0;
MPRINT(EM_DIAGRAM):   H4x1_2 = 0;
234740    +   _MAX_ = MAX (H4x1_1 , H4x1_2 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H4x1_1 , H4x1_2 );
234741    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
234742    +   H4x1_1  = EXP(H4x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H4x1_1 = EXP(H4x1_1 - _MAX_);
234743    +   _SUM_ = _SUM_ + H4x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H4x1_1 ;
234744    +   H4x1_2  = EXP(H4x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H4x1_2 = EXP(H4x1_2 - _MAX_);
234745    +   _SUM_ = _SUM_ + H4x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H4x1_2 ;
234746    +   H4x1_1  = H4x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H4x1_1 = H4x1_1 / _SUM_;
234747    +   H4x1_2  = H4x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H4x1_2 = H4x1_2 / _SUM_;
234748    +END;
MPRINT(EM_DIAGRAM):   END;
234749    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
234750    +   H4x1_1  = .;
MPRINT(EM_DIAGRAM):   H4x1_1 = .;
234751    +   H4x1_2  = .;
MPRINT(EM_DIAGRAM):   H4x1_2 = .;
234752    +END;
MPRINT(EM_DIAGRAM):   END;
234753    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
234754    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
234755    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
234756    +
234757    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
234758    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
234759    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
234760    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
234761    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
234762    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
234763    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
234764    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
234765    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
234766    +end;
MPRINT(EM_DIAGRAM):   end;
234767    +else do;
MPRINT(EM_DIAGRAM):   else do;
234768    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
234769    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
234770    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
234771    +   end;
MPRINT(EM_DIAGRAM):   end;
234772    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
234773    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
234774    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
234775    +   end;
MPRINT(EM_DIAGRAM):   end;
234776    +   else do;
MPRINT(EM_DIAGRAM):   else do;
234777    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
234778    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
234779    +   end;
MPRINT(EM_DIAGRAM):   end;
234780    +end;
MPRINT(EM_DIAGRAM):   end;
234781    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
234782    +   P_DepVar1  =     4.36647161522328 * H4x1_1  +    -5.83126986959915 * H4x1_2
234783    +         ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 4.36647161522328 * H4x1_1 + -5.83126986959915 * H4x1_2 ;
234784    +   P_DepVar1  =    -4.21364937441824 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -4.21364937441824 + P_DepVar1 ;
234785    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
234786    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
234787    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
234788    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
234789    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
234790    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
234791    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
234792    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
234793    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
234794    +END;
MPRINT(EM_DIAGRAM):   END;
234795    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
234796    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
234797    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
234798    +END;
MPRINT(EM_DIAGRAM):   END;
234799    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
234800    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
234801    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
234802    +END;
MPRINT(EM_DIAGRAM):   END;
234803    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
234804    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
234805    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
234806    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
234807    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
234808    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
234809    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
234810    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
234811    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
234812    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
234813    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
234814    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
234815    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
234816    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
234817    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
234818    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
234819    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
234820    +END;
MPRINT(EM_DIAGRAM):   END;
234821    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
234822    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
234823    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
234824    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
234825    +* Renaming variables for AutoNeural38;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural38;
234826    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
234827    +* Renaming Posterior variables for AutoNeural38;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural38;
234828    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
234829    +drop AutoNeural38_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural38_P_DepVar1;
234830    +AutoNeural38_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural38_P_DepVar1 = P_DepVar1;
234831    +drop AutoNeural38_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural38_P_DepVar0;
234832    +AutoNeural38_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural38_P_DepVar0 = P_DepVar0;
234833    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
234834    +* Renaming _WARN_ variable for AutoNeural38;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural38;
234835    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
234836    +length AutoNeural38_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural38_WARN_ $4;
234837    +drop AutoNeural38_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural38_WARN_;
234838    +AutoNeural38_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural38_WARN_ = _WARN_;
234839    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
234840    +* Ensmbl23: Scoring Code of model 3 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl23: Scoring Code of model 3 of 5;
234841    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
234842    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
234843    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
234844    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
234845    +* NODE: AutoNeural39;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural39;
234846    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
234847    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
234848    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
234849    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
234850    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
234851    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
234852    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
234853    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
234854    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
234855    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
234856    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
234857    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
234858    +LENGTH _WARN_ $4
234859    +      F_DepVar  $ 12
234860    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
234861    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
234862    +
234863    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
234864    +
234865    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
234866    +
234867    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
234868    +
234869    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
234870    +
234871    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
234872    +
234873    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
234874    +
234875    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
234876    +
234877    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
234878    +
234879    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
234880    +
234881    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
234882    +
234883    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
234884    +
234885    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
234886    +
234887    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
234888    +
234889    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
234890    +
234891    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
234892    +
234893    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
234894    +
234895    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
234896    +
234897    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
234898    +
234899    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
234900    +
234901    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
234902    +
234903    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
234904    +
234905    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
234906    +
234907    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
234908    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
234909    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
234910    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
234911    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
234912    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
234913    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
234914    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
234915    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
234916    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
234917    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
234918    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
234919    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
234920    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
234921    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
234922    +end;
MPRINT(EM_DIAGRAM):   end;
234923    +else do;
MPRINT(EM_DIAGRAM):   else do;
234924    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
234925    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
234926    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
234927    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
234928    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
234929    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
234930    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
234931    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
234932    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
234933    +         end;
MPRINT(EM_DIAGRAM):   end;
234934    +         else do;
MPRINT(EM_DIAGRAM):   else do;
234935    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
234936    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
234937    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
234938    +            end;
MPRINT(EM_DIAGRAM):   end;
234939    +         end;
MPRINT(EM_DIAGRAM):   end;
234940    +      end;
MPRINT(EM_DIAGRAM):   end;
234941    +      else do;
MPRINT(EM_DIAGRAM):   else do;
234942    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
234943    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
234944    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
234945    +         end;
MPRINT(EM_DIAGRAM):   end;
234946    +      end;
MPRINT(EM_DIAGRAM):   end;
234947    +   end;
MPRINT(EM_DIAGRAM):   end;
234948    +   else do;
MPRINT(EM_DIAGRAM):   else do;
234949    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
234950    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
234951    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
234952    +      end;
MPRINT(EM_DIAGRAM):   end;
234953    +      else do;
MPRINT(EM_DIAGRAM):   else do;
234954    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
234955    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
234956    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
234957    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
234958    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
234959    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
234960    +         end;
MPRINT(EM_DIAGRAM):   end;
234961    +      end;
MPRINT(EM_DIAGRAM):   end;
234962    +   end;
MPRINT(EM_DIAGRAM):   end;
234963    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
234964    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
234965    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
234966    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
234967    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
234968    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
234969    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
234970    +   end;
MPRINT(EM_DIAGRAM):   end;
234971    +end;
MPRINT(EM_DIAGRAM):   end;
234972    +
234973    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
234974    +*** Checking missing input Interval
234975    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
234976    +
234977    +IF NMISS(
234978    +   AcceptedCmpTotal ,
234979    +   Frq ,
234980    +   Mnt ,
234981    +   MntMeatProducts ,
234982    +   NumCatalogPurchases ,
234983    +   NumDealsPurchases ,
234984    +   NumWebVisitsMonth ,
234985    +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Mnt , MntMeatProducts , 
NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , Recency ) THEN DO;
234986    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
234987    +
234988    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
234989    +END;
MPRINT(EM_DIAGRAM):   END;
234990    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
234991    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
234992    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
234993    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
234994    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
234995    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
234996    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
234997    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
234998    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
234999    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
235000    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
235001    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
235002    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
235003    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
235004    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
235005    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
235006    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
235007    +END;
MPRINT(EM_DIAGRAM):   END;
235008    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
235009    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
235010    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
235011    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
235012    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
235013    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
235014    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
235015    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
235016    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
235017    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
235018    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
235019    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
235020    +   ELSE S_NumCatalogPurchases
235021    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
235022    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
235023    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
235024    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
235025    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
235026    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
235027    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
235028    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
235029    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
235030    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
235031    +END;
MPRINT(EM_DIAGRAM):   END;
235032    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
235033    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
235034    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
235035    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
235036    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
235037    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
235038    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
235039    +   H1x1_1  =    -0.80144597199591 * S_AcceptedCmpTotal
235040    +          +    -0.14504406751843 * S_Frq  +    -0.94059273072385 * S_Mnt
235041    +          +     0.02561809182055 * S_MntMeatProducts
235042    +          +     -0.1793288912734 * S_NumCatalogPurchases
235043    +          +    -0.37563080213093 * S_NumDealsPurchases
235044    +          +    -0.48858578777845 * S_NumWebVisitsMonth
235045    +          +     1.20680693155412 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.80144597199591 * S_AcceptedCmpTotal + -0.14504406751843 * 
S_Frq + -0.94059273072385 * S_Mnt + 0.02561809182055 * S_MntMeatProducts + -0.1793288912734 * 
S_NumCatalogPurchases + -0.37563080213093 * S_NumDealsPurchases + -0.48858578777845 * 
S_NumWebVisitsMonth + 1.20680693155412 * S_Recency ;
235046    +   H1x1_2  =    -0.07420266838621 * S_AcceptedCmpTotal
235047    +          +    -0.45831074090349 * S_Frq  +     0.54967451479719 * S_Mnt
235048    +          +     1.94302986779634 * S_MntMeatProducts
235049    +          +      0.2669037763846 * S_NumCatalogPurchases
235050    +          +     0.29313104233947 * S_NumDealsPurchases
235051    +          +    -0.30591479309812 * S_NumWebVisitsMonth
235052    +          +     0.25821520617291 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.07420266838621 * S_AcceptedCmpTotal + -0.45831074090349 * 
S_Frq + 0.54967451479719 * S_Mnt + 1.94302986779634 * S_MntMeatProducts + 0.2669037763846 * 
S_NumCatalogPurchases + 0.29313104233947 * S_NumDealsPurchases + -0.30591479309812 * 
S_NumWebVisitsMonth + 0.25821520617291 * S_Recency ;
235053    +   H1x1_3  =    -0.12066404689072 * S_AcceptedCmpTotal
235054    +          +     0.68455759852245 * S_Frq  +     1.21976572320843 * S_Mnt
235055    +          +    -0.76055629383789 * S_MntMeatProducts
235056    +          +    -0.40114802991127 * S_NumCatalogPurchases
235057    +          +    -1.12215966034372 * S_NumDealsPurchases
235058    +          +    -0.30978133586417 * S_NumWebVisitsMonth
235059    +          +     0.20549481777473 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.12066404689072 * S_AcceptedCmpTotal + 0.68455759852245 * 
S_Frq + 1.21976572320843 * S_Mnt + -0.76055629383789 * S_MntMeatProducts + -0.40114802991127 * 
S_NumCatalogPurchases + -1.12215966034372 * S_NumDealsPurchases + -0.30978133586417 * 
S_NumWebVisitsMonth + 0.20549481777473 * S_Recency ;
235060    +   H1x1_1  = H1x1_1  +     0.27293780318455 * Marital_StatusDivorced
235061    +          +     0.20445663414925 * Marital_StatusMarried
235062    +          +     0.16369117386202 * Marital_StatusSingle
235063    +          +     0.24678692955726 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.27293780318455 * Marital_StatusDivorced + 
0.20445663414925 * Marital_StatusMarried + 0.16369117386202 * Marital_StatusSingle + 
0.24678692955726 * Marital_StatusTogether ;
235064    +   H1x1_2  = H1x1_2  +    -0.36629769700975 * Marital_StatusDivorced
235065    +          +     0.09645374599508 * Marital_StatusMarried
235066    +          +     -0.0816282741981 * Marital_StatusSingle
235067    +          +       0.097160394807 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.36629769700975 * Marital_StatusDivorced + 
0.09645374599508 * Marital_StatusMarried + -0.0816282741981 * Marital_StatusSingle + 
0.097160394807 * Marital_StatusTogether ;
235068    +   H1x1_3  = H1x1_3  +     1.07910879572923 * Marital_StatusDivorced
235069    +          +     -3.9031880089591 * Marital_StatusMarried
235070    +          +      1.6995748309328 * Marital_StatusSingle
235071    +          +    -0.60356952072267 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 1.07910879572923 * Marital_StatusDivorced + 
-3.9031880089591 * Marital_StatusMarried + 1.6995748309328 * Marital_StatusSingle + 
-0.60356952072267 * Marital_StatusTogether ;
235072    +   H1x1_1  =     4.12951833926199 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 4.12951833926199 + H1x1_1 ;
235073    +   H1x1_2  =      2.8051459955517 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 2.8051459955517 + H1x1_2 ;
235074    +   H1x1_3  =    -4.02151507937085 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -4.02151507937085 + H1x1_3 ;
235075    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
235076    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
235077    +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
235078    +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
235079    +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
235080    +END;
MPRINT(EM_DIAGRAM):   END;
235081    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
235082    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
235083    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
235084    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
235085    +END;
MPRINT(EM_DIAGRAM):   END;
235086    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
235087    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
235088    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
235089    +
235090    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
235091    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
235092    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
235093    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
235094    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
235095    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
235096    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
235097    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
235098    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
235099    +end;
MPRINT(EM_DIAGRAM):   end;
235100    +else do;
MPRINT(EM_DIAGRAM):   else do;
235101    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
235102    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
235103    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
235104    +   end;
MPRINT(EM_DIAGRAM):   end;
235105    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
235106    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
235107    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
235108    +   end;
MPRINT(EM_DIAGRAM):   end;
235109    +   else do;
MPRINT(EM_DIAGRAM):   else do;
235110    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
235111    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
235112    +   end;
MPRINT(EM_DIAGRAM):   end;
235113    +end;
MPRINT(EM_DIAGRAM):   end;
235114    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
235115    +   P_DepVar1  =    -49.7324855017185 * H1x1_1  +     60.9087770313173 * H1x1_2
235116    +          +     44.7070762374356 * H1x1_3 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -49.7324855017185 * H1x1_1 + 60.9087770313173 * H1x1_2 + 
44.7070762374356 * H1x1_3 ;
235117    +   P_DepVar1  =    -18.5106107755559 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -18.5106107755559 + P_DepVar1 ;
235118    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
235119    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
235120    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
235121    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
235122    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
235123    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
235124    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
235125    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
235126    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
235127    +END;
MPRINT(EM_DIAGRAM):   END;
235128    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
235129    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
235130    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
235131    +END;
MPRINT(EM_DIAGRAM):   END;
235132    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
235133    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
235134    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
235135    +END;
MPRINT(EM_DIAGRAM):   END;
235136    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
235137    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
235138    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
235139    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
235140    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
235141    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
235142    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
235143    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
235144    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
235145    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
235146    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
235147    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
235148    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
235149    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
235150    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
235151    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
235152    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
235153    +END;
MPRINT(EM_DIAGRAM):   END;
235154    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
235155    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
235156    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
235157    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
235158    +* Renaming variables for AutoNeural39;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural39;
235159    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
235160    +* Renaming Posterior variables for AutoNeural39;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural39;
235161    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
235162    +drop AutoNeural39_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural39_P_DepVar1;
235163    +AutoNeural39_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural39_P_DepVar1 = P_DepVar1;
235164    +drop AutoNeural39_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural39_P_DepVar0;
235165    +AutoNeural39_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural39_P_DepVar0 = P_DepVar0;
235166    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
235167    +* Renaming _WARN_ variable for AutoNeural39;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural39;
235168    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
235169    +length AutoNeural39_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural39_WARN_ $4;
235170    +drop AutoNeural39_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural39_WARN_;
235171    +AutoNeural39_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural39_WARN_ = _WARN_;
235172    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
235173    +* Ensmbl23: Scoring Code of model 4 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl23: Scoring Code of model 4 of 5;
235174    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
235175    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
235176    +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
235177    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
235178    +* NODE: Neural41;
MPRINT(EM_DIAGRAM):   * NODE: Neural41;
235179    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
235180    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
235181    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
235182    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
235183    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
235184    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
235185    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
235186    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
235187    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
235188    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
235189    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
235190    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
235191    +LENGTH _WARN_ $4
235192    +      F_DepVar  $ 12
235193    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
235194    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
235195    +
235196    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
235197    +
235198    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
235199    +
235200    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
235201    +
235202    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
235203    +
235204    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
235205    +
235206    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
235207    +
235208    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
235209    +
235210    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
235211    +
235212    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
235213    +
235214    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
235215    +
235216    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
235217    +
235218    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
235219    +
235220    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
235221    +
235222    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
235223    +
235224    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
235225    +
235226    +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
235227    +
235228    +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
235229    +
235230    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
235231    +
235232    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
235233    +
235234    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
235235    +
235236    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
235237    +
235238    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
235239    +
235240    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
235241    +
235242    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
235243    +
235244    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
235245    +
235246    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
235247    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
235248    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
235249    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
235250    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
235251    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
235252    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
235253    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
235254    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
235255    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
235256    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
235257    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
235258    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
235259    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
235260    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
235261    +end;
MPRINT(EM_DIAGRAM):   end;
235262    +else do;
MPRINT(EM_DIAGRAM):   else do;
235263    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
235264    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
235265    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
235266    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
235267    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
235268    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
235269    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
235270    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
235271    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
235272    +         end;
MPRINT(EM_DIAGRAM):   end;
235273    +         else do;
MPRINT(EM_DIAGRAM):   else do;
235274    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
235275    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
235276    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
235277    +            end;
MPRINT(EM_DIAGRAM):   end;
235278    +         end;
MPRINT(EM_DIAGRAM):   end;
235279    +      end;
MPRINT(EM_DIAGRAM):   end;
235280    +      else do;
MPRINT(EM_DIAGRAM):   else do;
235281    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
235282    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
235283    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
235284    +         end;
MPRINT(EM_DIAGRAM):   end;
235285    +      end;
MPRINT(EM_DIAGRAM):   end;
235286    +   end;
MPRINT(EM_DIAGRAM):   end;
235287    +   else do;
MPRINT(EM_DIAGRAM):   else do;
235288    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
235289    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
235290    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
235291    +      end;
MPRINT(EM_DIAGRAM):   end;
235292    +      else do;
MPRINT(EM_DIAGRAM):   else do;
235293    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
235294    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
235295    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
235296    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
235297    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
235298    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
235299    +         end;
MPRINT(EM_DIAGRAM):   end;
235300    +      end;
MPRINT(EM_DIAGRAM):   end;
235301    +   end;
MPRINT(EM_DIAGRAM):   end;
235302    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
235303    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
235304    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
235305    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
235306    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
235307    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
235308    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
235309    +   end;
MPRINT(EM_DIAGRAM):   end;
235310    +end;
MPRINT(EM_DIAGRAM):   end;
235311    +
235312    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
235313    +*** Checking missing input Interval
235314    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
235315    +
235316    +IF NMISS(
235317    +   AcceptedCmpTotal ,
235318    +   Frq ,
235319    +   Mnt ,
235320    +   MntMeatProducts ,
235321    +   NumCatalogPurchases ,
235322    +   NumDealsPurchases ,
235323    +   NumWebVisitsMonth ,
235324    +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Mnt , MntMeatProducts , 
NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , Recency ) THEN DO;
235325    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
235326    +
235327    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
235328    +END;
MPRINT(EM_DIAGRAM):   END;
235329    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
235330    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
235331    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
235332    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
235333    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
235334    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
235335    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
235336    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
235337    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
235338    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
235339    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
235340    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
235341    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
235342    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
235343    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
235344    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
235345    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
235346    +END;
MPRINT(EM_DIAGRAM):   END;
235347    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
235348    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
235349    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
235350    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
235351    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
235352    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
235353    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
235354    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
235355    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
235356    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
235357    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
235358    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
235359    +   ELSE S_NumCatalogPurchases
235360    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
235361    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
235362    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
235363    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
235364    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
235365    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
235366    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
235367    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
235368    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
235369    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
235370    +END;
MPRINT(EM_DIAGRAM):   END;
235371    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
235372    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
235373    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
235374    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
235375    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
235376    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
235377    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
235378    +   H11  =    -0.41170995389365 * S_AcceptedCmpTotal  +     0.95675776354898 *
235379    +        S_Frq  +     0.79241767524066 * S_Mnt  +    -1.11291951115769 *
235380    +        S_MntMeatProducts  +    -0.81016243357955 * S_NumCatalogPurchases
235381    +          +    -0.06020302160033 * S_NumDealsPurchases
235382    +          +    -0.72187271327886 * S_NumWebVisitsMonth
235383    +          +     0.63072705601805 * S_Recency ;
MPRINT(EM_DIAGRAM):   H11 = -0.41170995389365 * S_AcceptedCmpTotal + 0.95675776354898 * S_Frq 
+ 0.79241767524066 * S_Mnt + -1.11291951115769 * S_MntMeatProducts + -0.81016243357955 * 
S_NumCatalogPurchases + -0.06020302160033 * S_NumDealsPurchases + -0.72187271327886 * 
S_NumWebVisitsMonth + 0.63072705601805 * S_Recency ;
235384    +   H12  =     0.16845165387856 * S_AcceptedCmpTotal  +     0.13952140472368 *
235385    +        S_Frq  +    -0.49680297454001 * S_Mnt  +     0.20077884768409 *
235386    +        S_MntMeatProducts  +    -0.26509457206436 * S_NumCatalogPurchases
235387    +          +     0.44023370306786 * S_NumDealsPurchases
235388    +          +     0.14437092902564 * S_NumWebVisitsMonth
235389    +          +     0.29830280717193 * S_Recency ;
MPRINT(EM_DIAGRAM):   H12 = 0.16845165387856 * S_AcceptedCmpTotal + 0.13952140472368 * S_Frq + 
-0.49680297454001 * S_Mnt + 0.20077884768409 * S_MntMeatProducts + -0.26509457206436 * 
S_NumCatalogPurchases + 0.44023370306786 * S_NumDealsPurchases + 0.14437092902564 * 
S_NumWebVisitsMonth + 0.29830280717193 * S_Recency ;
235390    +   H13  =     0.17736973005738 * S_AcceptedCmpTotal  +    -1.27691889541485 *
235391    +        S_Frq  +     0.76151337613405 * S_Mnt  +     2.91913897431534 *
235392    +        S_MntMeatProducts  +     0.91968924804036 * S_NumCatalogPurchases
235393    +          +     0.36494720404815 * S_NumDealsPurchases
235394    +          +     0.03877838723538 * S_NumWebVisitsMonth
235395    +          +    -0.07783339271235 * S_Recency ;
MPRINT(EM_DIAGRAM):   H13 = 0.17736973005738 * S_AcceptedCmpTotal + -1.27691889541485 * S_Frq 
+ 0.76151337613405 * S_Mnt + 2.91913897431534 * S_MntMeatProducts + 0.91968924804036 * 
S_NumCatalogPurchases + 0.36494720404815 * S_NumDealsPurchases + 0.03877838723538 * 
S_NumWebVisitsMonth + -0.07783339271235 * S_Recency ;
235396    +   H14  =     0.06585247678486 * S_AcceptedCmpTotal  +     2.38872321291933 *
235397    +        S_Frq  +     0.55261122983069 * S_Mnt  +    -0.92412810336036 *
235398    +        S_MntMeatProducts  +    -0.85761594899144 * S_NumCatalogPurchases
235399    +          +    -0.87171784420951 * S_NumDealsPurchases
235400    +          +     0.27077171192055 * S_NumWebVisitsMonth
235401    +          +     0.44529508014227 * S_Recency ;
MPRINT(EM_DIAGRAM):   H14 = 0.06585247678486 * S_AcceptedCmpTotal + 2.38872321291933 * S_Frq + 
0.55261122983069 * S_Mnt + -0.92412810336036 * S_MntMeatProducts + -0.85761594899144 * 
S_NumCatalogPurchases + -0.87171784420951 * S_NumDealsPurchases + 0.27077171192055 * 
S_NumWebVisitsMonth + 0.44529508014227 * S_Recency ;
235402    +   H15  =     0.79261864023919 * S_AcceptedCmpTotal  +     0.22408033839661 *
235403    +        S_Frq  +     0.41205750844428 * S_Mnt  +    -0.05167252147978 *
235404    +        S_MntMeatProducts  +     0.52437372576463 * S_NumCatalogPurchases
235405    +          +    -0.02694744085713 * S_NumDealsPurchases
235406    +          +     0.42930866809604 * S_NumWebVisitsMonth
235407    +          +    -1.23356204218313 * S_Recency ;
MPRINT(EM_DIAGRAM):   H15 = 0.79261864023919 * S_AcceptedCmpTotal + 0.22408033839661 * S_Frq + 
0.41205750844428 * S_Mnt + -0.05167252147978 * S_MntMeatProducts + 0.52437372576463 * 
S_NumCatalogPurchases + -0.02694744085713 * S_NumDealsPurchases + 0.42930866809604 * 
S_NumWebVisitsMonth + -1.23356204218313 * S_Recency ;
235408    +   H16  =     0.07557739377714 * S_AcceptedCmpTotal  +     0.06732498402011 *
235409    +        S_Frq  +     1.00949697256114 * S_Mnt  +     0.18190372979158 *
235410    +        S_MntMeatProducts  +    -0.20994714743436 * S_NumCatalogPurchases
235411    +          +     1.91827561352967 * S_NumDealsPurchases
235412    +          +    -0.65112089304736 * S_NumWebVisitsMonth
235413    +          +     0.94688864667779 * S_Recency ;
MPRINT(EM_DIAGRAM):   H16 = 0.07557739377714 * S_AcceptedCmpTotal + 0.06732498402011 * S_Frq + 
1.00949697256114 * S_Mnt + 0.18190372979158 * S_MntMeatProducts + -0.20994714743436 * 
S_NumCatalogPurchases + 1.91827561352967 * S_NumDealsPurchases + -0.65112089304736 * 
S_NumWebVisitsMonth + 0.94688864667779 * S_Recency ;
235414    +   H11  = H11  +    -0.41944609131662 * Marital_StatusDivorced
235415    +          +     0.19571272479408 * Marital_StatusMarried
235416    +          +    -0.16061908960963 * Marital_StatusSingle
235417    +          +     0.01147019501849 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.41944609131662 * Marital_StatusDivorced + 
0.19571272479408 * Marital_StatusMarried + -0.16061908960963 * Marital_StatusSingle + 
0.01147019501849 * Marital_StatusTogether ;
235418    +   H12  = H12  +    -0.70326037460175 * Marital_StatusDivorced
235419    +          +    -0.64968872046859 * Marital_StatusMarried
235420    +          +     1.81995301340231 * Marital_StatusSingle
235421    +          +    -1.25679526739636 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.70326037460175 * Marital_StatusDivorced + 
-0.64968872046859 * Marital_StatusMarried + 1.81995301340231 * Marital_StatusSingle + 
-1.25679526739636 * Marital_StatusTogether ;
235422    +   H13  = H13  +    -0.50413590013638 * Marital_StatusDivorced
235423    +          +     0.19296467458933 * Marital_StatusMarried
235424    +          +     -0.2295693568996 * Marital_StatusSingle
235425    +          +     0.51095451752525 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.50413590013638 * Marital_StatusDivorced + 
0.19296467458933 * Marital_StatusMarried + -0.2295693568996 * Marital_StatusSingle + 
0.51095451752525 * Marital_StatusTogether ;
235426    +   H14  = H14  +    -0.93810483419419 * Marital_StatusDivorced
235427    +          +    -0.12318541826308 * Marital_StatusMarried
235428    +          +    -0.02882902763243 * Marital_StatusSingle
235429    +          +      0.9552700390789 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.93810483419419 * Marital_StatusDivorced + 
-0.12318541826308 * Marital_StatusMarried + -0.02882902763243 * Marital_StatusSingle + 
0.9552700390789 * Marital_StatusTogether ;
235430    +   H15  = H15  +    -0.16315275571793 * Marital_StatusDivorced
235431    +          +    -0.65544681605691 * Marital_StatusMarried
235432    +          +     0.31269236164873 * Marital_StatusSingle
235433    +          +    -0.37135201633747 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.16315275571793 * Marital_StatusDivorced + 
-0.65544681605691 * Marital_StatusMarried + 0.31269236164873 * Marital_StatusSingle + 
-0.37135201633747 * Marital_StatusTogether ;
235434    +   H16  = H16  +    -0.47177568566677 * Marital_StatusDivorced
235435    +          +     0.12269709457787 * Marital_StatusMarried
235436    +          +     0.37106402586008 * Marital_StatusSingle
235437    +          +     0.07580816063395 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + -0.47177568566677 * Marital_StatusDivorced + 
0.12269709457787 * Marital_StatusMarried + 0.37106402586008 * Marital_StatusSingle + 
0.07580816063395 * Marital_StatusTogether ;
235438    +   H11  =     0.87814553506559 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.87814553506559 + H11 ;
235439    +   H12  =     1.18416285607678 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 1.18416285607678 + H12 ;
235440    +   H13  =     1.86220379911993 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 1.86220379911993 + H13 ;
235441    +   H14  =     1.79999645343103 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 1.79999645343103 + H14 ;
235442    +   H15  =    -2.95745585057281 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -2.95745585057281 + H15 ;
235443    +   H16  =    -0.63040593626724 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -0.63040593626724 + H16 ;
235444    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
235445    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
235446    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
235447    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
235448    +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
235449    +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
235450    +END;
MPRINT(EM_DIAGRAM):   END;
235451    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
235452    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
235453    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
235454    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
235455    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
235456    +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
235457    +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
235458    +END;
MPRINT(EM_DIAGRAM):   END;
235459    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
235460    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
235461    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
235462    +
235463    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
235464    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
235465    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
235466    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
235467    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
235468    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
235469    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
235470    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
235471    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
235472    +end;
MPRINT(EM_DIAGRAM):   end;
235473    +else do;
MPRINT(EM_DIAGRAM):   else do;
235474    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
235475    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
235476    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
235477    +   end;
MPRINT(EM_DIAGRAM):   end;
235478    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
235479    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
235480    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
235481    +   end;
MPRINT(EM_DIAGRAM):   end;
235482    +   else do;
MPRINT(EM_DIAGRAM):   else do;
235483    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
235484    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
235485    +   end;
MPRINT(EM_DIAGRAM):   end;
235486    +end;
MPRINT(EM_DIAGRAM):   end;
235487    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
235488    +   P_DepVar1  =    -5.78936073221603 * H11  +     3.14966455677413 * H12
235489    +          +     7.03853349374163 * H13  +    -2.45391654583749 * H14
235490    +          +     4.80213644089029 * H15  +    -1.60369759544804 * H16 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -5.78936073221603 * H11 + 3.14966455677413 * H12 + 
7.03853349374163 * H13 + -2.45391654583749 * H14 + 4.80213644089029 * H15 + -1.60369759544804 
* H16 ;
235491    +   P_DepVar1  =    -1.95361942474066 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.95361942474066 + P_DepVar1 ;
235492    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
235493    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
235494    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
235495    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
235496    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
235497    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
235498    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
235499    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
235500    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
235501    +END;
MPRINT(EM_DIAGRAM):   END;
235502    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
235503    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
235504    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
235505    +END;
MPRINT(EM_DIAGRAM):   END;
235506    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
235507    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
235508    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
235509    +END;
MPRINT(EM_DIAGRAM):   END;
235510    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
235511    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
235512    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
235513    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
235514    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
235515    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
235516    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
235517    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
235518    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
235519    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
235520    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
235521    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
235522    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
235523    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
235524    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
235525    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
235526    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
235527    +END;
MPRINT(EM_DIAGRAM):   END;
235528    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
235529    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
235530    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
235531    +drop
235532    +H11
235533    +H12
235534    +H13
235535    +H14
235536    +H15
235537    +H16
235538    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 ;
235539    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
235540    +* Renaming variables for Neural41;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural41;
235541    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
235542    +* Renaming Posterior variables for Neural41;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural41;
235543    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
235544    +drop Neural41_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural41_P_DepVar1;
235545    +Neural41_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural41_P_DepVar1 = P_DepVar1;
235546    +drop Neural41_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural41_P_DepVar0;
235547    +Neural41_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural41_P_DepVar0 = P_DepVar0;
235548    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
235549    +* Renaming _WARN_ variable for Neural41;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural41;
235550    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
235551    +length Neural41_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural41_WARN_ $4;
235552    +drop Neural41_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural41_WARN_;
235553    +Neural41_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural41_WARN_ = _WARN_;
235554    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
235555    +* Ensmbl23: Scoring Code of model 5 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl23: Scoring Code of model 5 of 5;
235556    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
235557    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
235558    +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
235559    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
235560    +* NODE: Neural39;
MPRINT(EM_DIAGRAM):   * NODE: Neural39;
235561    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
235562    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
235563    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
235564    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
235565    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
235566    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
235567    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
235568    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
235569    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
235570    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
235571    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
235572    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
235573    +LENGTH _WARN_ $4
235574    +      F_DepVar  $ 12
235575    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
235576    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
235577    +
235578    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
235579    +
235580    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
235581    +
235582    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
235583    +
235584    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
235585    +
235586    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
235587    +
235588    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
235589    +
235590    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
235591    +
235592    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
235593    +
235594    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
235595    +
235596    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
235597    +
235598    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
235599    +
235600    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
235601    +
235602    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
235603    +
235604    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
235605    +
235606    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
235607    +
235608    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
235609    +
235610    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
235611    +
235612    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
235613    +
235614    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
235615    +
235616    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
235617    +
235618    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
235619    +
235620    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
235621    +
235622    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
235623    +
235624    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
235625    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
235626    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
235627    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
235628    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
235629    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
235630    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
235631    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
235632    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
235633    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
235634    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
235635    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
235636    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
235637    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
235638    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
235639    +end;
MPRINT(EM_DIAGRAM):   end;
235640    +else do;
MPRINT(EM_DIAGRAM):   else do;
235641    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
235642    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
235643    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
235644    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
235645    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
235646    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
235647    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
235648    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
235649    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
235650    +         end;
MPRINT(EM_DIAGRAM):   end;
235651    +         else do;
MPRINT(EM_DIAGRAM):   else do;
235652    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
235653    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
235654    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
235655    +            end;
MPRINT(EM_DIAGRAM):   end;
235656    +         end;
MPRINT(EM_DIAGRAM):   end;
235657    +      end;
MPRINT(EM_DIAGRAM):   end;
235658    +      else do;
MPRINT(EM_DIAGRAM):   else do;
235659    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
235660    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
235661    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
235662    +         end;
MPRINT(EM_DIAGRAM):   end;
235663    +      end;
MPRINT(EM_DIAGRAM):   end;
235664    +   end;
MPRINT(EM_DIAGRAM):   end;
235665    +   else do;
MPRINT(EM_DIAGRAM):   else do;
235666    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
235667    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
235668    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
235669    +      end;
MPRINT(EM_DIAGRAM):   end;
235670    +      else do;
MPRINT(EM_DIAGRAM):   else do;
235671    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
235672    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
235673    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
235674    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
235675    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
235676    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
235677    +         end;
MPRINT(EM_DIAGRAM):   end;
235678    +      end;
MPRINT(EM_DIAGRAM):   end;
235679    +   end;
MPRINT(EM_DIAGRAM):   end;
235680    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
235681    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
235682    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
235683    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
235684    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
235685    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
235686    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
235687    +   end;
MPRINT(EM_DIAGRAM):   end;
235688    +end;
MPRINT(EM_DIAGRAM):   end;
235689    +
235690    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
235691    +*** Checking missing input Interval
235692    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
235693    +
235694    +IF NMISS(
235695    +   AcceptedCmpTotal ,
235696    +   Frq ,
235697    +   Mnt ,
235698    +   MntMeatProducts ,
235699    +   NumCatalogPurchases ,
235700    +   NumDealsPurchases ,
235701    +   NumWebVisitsMonth ,
235702    +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Mnt , MntMeatProducts , 
NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , Recency ) THEN DO;
235703    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
235704    +
235705    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
235706    +END;
MPRINT(EM_DIAGRAM):   END;
235707    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
235708    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
235709    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
235710    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
235711    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
235712    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
235713    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
235714    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
235715    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
235716    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
235717    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
235718    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
235719    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
235720    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
235721    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
235722    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
235723    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
235724    +END;
MPRINT(EM_DIAGRAM):   END;
235725    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
235726    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
235727    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
235728    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
235729    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
235730    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
235731    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
235732    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
235733    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
235734    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
235735    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
235736    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
235737    +   ELSE S_NumCatalogPurchases
235738    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
235739    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
235740    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
235741    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
235742    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
235743    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
235744    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
235745    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
235746    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
235747    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
235748    +END;
MPRINT(EM_DIAGRAM):   END;
235749    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
235750    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
235751    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
235752    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
235753    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
235754    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
235755    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
235756    +   H11  =     0.32071869925611 * S_AcceptedCmpTotal  +    -1.18627222732428 *
235757    +        S_Frq  +     0.00967528650049 * S_Mnt  +     0.53945968152118 *
235758    +        S_MntMeatProducts  +     0.76096876406469 * S_NumCatalogPurchases
235759    +          +       0.868651674737 * S_NumDealsPurchases
235760    +          +     0.56519310644826 * S_NumWebVisitsMonth
235761    +          +    -0.85354176662475 * S_Recency ;
MPRINT(EM_DIAGRAM):   H11 = 0.32071869925611 * S_AcceptedCmpTotal + -1.18627222732428 * S_Frq 
+ 0.00967528650049 * S_Mnt + 0.53945968152118 * S_MntMeatProducts + 0.76096876406469 * 
S_NumCatalogPurchases + 0.868651674737 * S_NumDealsPurchases + 0.56519310644826 * 
S_NumWebVisitsMonth + -0.85354176662475 * S_Recency ;
235762    +   H12  =    -0.53760783840514 * S_AcceptedCmpTotal  +    -0.10887355535928 *
235763    +        S_Frq  +     0.25951462601453 * S_Mnt  +    -0.54343784484503 *
235764    +        S_MntMeatProducts  +    -0.74697447632011 * S_NumCatalogPurchases
235765    +          +     0.22588169231784 * S_NumDealsPurchases
235766    +          +    -0.50349429270665 * S_NumWebVisitsMonth
235767    +          +     0.94913855646928 * S_Recency ;
MPRINT(EM_DIAGRAM):   H12 = -0.53760783840514 * S_AcceptedCmpTotal + -0.10887355535928 * S_Frq 
+ 0.25951462601453 * S_Mnt + -0.54343784484503 * S_MntMeatProducts + -0.74697447632011 * 
S_NumCatalogPurchases + 0.22588169231784 * S_NumDealsPurchases + -0.50349429270665 * 
S_NumWebVisitsMonth + 0.94913855646928 * S_Recency ;
235768    +   H13  =    -0.49808738781134 * S_AcceptedCmpTotal  +     0.75871743128278 *
235769    +        S_Frq  +     0.92783231668315 * S_Mnt  +    -0.72994432129905 *
235770    +        S_MntMeatProducts  +    -0.41911874339248 * S_NumCatalogPurchases
235771    +          +     0.38270609344543 * S_NumDealsPurchases
235772    +          +    -0.67911374483005 * S_NumWebVisitsMonth
235773    +          +     0.62959851233589 * S_Recency ;
MPRINT(EM_DIAGRAM):   H13 = -0.49808738781134 * S_AcceptedCmpTotal + 0.75871743128278 * S_Frq 
+ 0.92783231668315 * S_Mnt + -0.72994432129905 * S_MntMeatProducts + -0.41911874339248 * 
S_NumCatalogPurchases + 0.38270609344543 * S_NumDealsPurchases + -0.67911374483005 * 
S_NumWebVisitsMonth + 0.62959851233589 * S_Recency ;
235774    +   H14  =    -0.36477606348735 * S_AcceptedCmpTotal  +     1.38796327523044 *
235775    +        S_Frq  +     0.07887052944027 * S_Mnt  +    -2.27327070721147 *
235776    +        S_MntMeatProducts  +    -1.42807558393601 * S_NumCatalogPurchases
235777    +          +    -0.27211575710638 * S_NumDealsPurchases
235778    +          +    -0.27365412530976 * S_NumWebVisitsMonth
235779    +          +     0.25676979915144 * S_Recency ;
MPRINT(EM_DIAGRAM):   H14 = -0.36477606348735 * S_AcceptedCmpTotal + 1.38796327523044 * S_Frq 
+ 0.07887052944027 * S_Mnt + -2.27327070721147 * S_MntMeatProducts + -1.42807558393601 * 
S_NumCatalogPurchases + -0.27211575710638 * S_NumDealsPurchases + -0.27365412530976 * 
S_NumWebVisitsMonth + 0.25676979915144 * S_Recency ;
235780    +   H11  = H11  +    -0.10986134340688 * Marital_StatusDivorced
235781    +          +     0.26671394907331 * Marital_StatusMarried
235782    +          +    -0.21412689047791 * Marital_StatusSingle
235783    +          +      0.0878866166131 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.10986134340688 * Marital_StatusDivorced + 
0.26671394907331 * Marital_StatusMarried + -0.21412689047791 * Marital_StatusSingle + 
0.0878866166131 * Marital_StatusTogether ;
235784    +   H12  = H12  +     0.57822808683392 * Marital_StatusDivorced
235785    +          +      0.8828544386185 * Marital_StatusMarried
235786    +          +    -0.82952673399486 * Marital_StatusSingle
235787    +          +     0.54925647255359 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.57822808683392 * Marital_StatusDivorced + 0.8828544386185 
* Marital_StatusMarried + -0.82952673399486 * Marital_StatusSingle + 0.54925647255359 * 
Marital_StatusTogether ;
235788    +   H13  = H13  +    -0.79896029123713 * Marital_StatusDivorced
235789    +          +     0.43581055671108 * Marital_StatusMarried
235790    +          +    -0.37028703904727 * Marital_StatusSingle
235791    +          +     0.68190263239907 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.79896029123713 * Marital_StatusDivorced + 
0.43581055671108 * Marital_StatusMarried + -0.37028703904727 * Marital_StatusSingle + 
0.68190263239907 * Marital_StatusTogether ;
235792    +   H14  = H14  +     0.00414219307385 * Marital_StatusDivorced
235793    +          +     -0.1219875250835 * Marital_StatusMarried
235794    +          +    -0.01813173038471 * Marital_StatusSingle
235795    +          +    -0.20940808240309 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.00414219307385 * Marital_StatusDivorced + -0.1219875250835 
* Marital_StatusMarried + -0.01813173038471 * Marital_StatusSingle + -0.20940808240309 * 
Marital_StatusTogether ;
235796    +   H11  =    -2.24986706948705 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -2.24986706948705 + H11 ;
235797    +   H12  =     2.55250334233636 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 2.55250334233636 + H12 ;
235798    +   H13  =    -0.36139954012771 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.36139954012771 + H13 ;
235799    +   H14  =    -0.78789859340386 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -0.78789859340386 + H14 ;
235800    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
235801    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
235802    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
235803    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
235804    +END;
MPRINT(EM_DIAGRAM):   END;
235805    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
235806    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
235807    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
235808    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
235809    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
235810    +END;
MPRINT(EM_DIAGRAM):   END;
235811    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
235812    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
235813    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
235814    +
235815    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
235816    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
235817    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
235818    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
235819    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
235820    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
235821    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
235822    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
235823    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
235824    +end;
MPRINT(EM_DIAGRAM):   end;
235825    +else do;
MPRINT(EM_DIAGRAM):   else do;
235826    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
235827    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
235828    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
235829    +   end;
MPRINT(EM_DIAGRAM):   end;
235830    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
235831    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
235832    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
235833    +   end;
MPRINT(EM_DIAGRAM):   end;
235834    +   else do;
MPRINT(EM_DIAGRAM):   else do;
235835    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
235836    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
235837    +   end;
MPRINT(EM_DIAGRAM):   end;
235838    +end;
MPRINT(EM_DIAGRAM):   end;
235839    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
235840    +   P_DepVar1  =     3.47156859435653 * H11  +     -3.7137526781971 * H12
235841    +          +    -4.05222402892753 * H13  +    -4.15704481111915 * H14 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 3.47156859435653 * H11 + -3.7137526781971 * H12 + 
-4.05222402892753 * H13 + -4.15704481111915 * H14 ;
235842    +   P_DepVar1  =    -0.19096137615409 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.19096137615409 + P_DepVar1 ;
235843    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
235844    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
235845    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
235846    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
235847    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
235848    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
235849    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
235850    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
235851    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
235852    +END;
MPRINT(EM_DIAGRAM):   END;
235853    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
235854    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
235855    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
235856    +END;
MPRINT(EM_DIAGRAM):   END;
235857    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
235858    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
235859    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
235860    +END;
MPRINT(EM_DIAGRAM):   END;
235861    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
235862    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
235863    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
235864    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
235865    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
235866    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
235867    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
235868    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
235869    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
235870    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
235871    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
235872    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
235873    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
235874    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
235875    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
235876    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
235877    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
235878    +END;
MPRINT(EM_DIAGRAM):   END;
235879    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
235880    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
235881    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
235882    +drop
235883    +H11
235884    +H12
235885    +H13
235886    +H14
235887    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 ;
235888    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
235889    +* Renaming variables for Neural39;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural39;
235890    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
235891    +* Renaming Posterior variables for Neural39;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural39;
235892    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
235893    +drop Neural39_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural39_P_DepVar1;
235894    +Neural39_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural39_P_DepVar1 = P_DepVar1;
235895    +drop Neural39_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural39_P_DepVar0;
235896    +Neural39_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural39_P_DepVar0 = P_DepVar0;
235897    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
235898    +* Renaming _WARN_ variable for Neural39;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural39;
235899    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
235900    +length Neural39_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural39_WARN_ $4;
235901    +drop Neural39_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural39_WARN_;
235902    +Neural39_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural39_WARN_ = _WARN_;
235903    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
235904    +* Ensmbl23: Average Posteriors of 5 models;
MPRINT(EM_DIAGRAM):   * Ensmbl23: Average Posteriors of 5 models;
235905    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
235906    +P_DepVar1 = (
235907    +Neural40_P_DepVar1 +
235908    +AutoNeural38_P_DepVar1 +
235909    +AutoNeural39_P_DepVar1 +
235910    +Neural41_P_DepVar1 +
235911    +Neural39_P_DepVar1
235912    +)/5;
MPRINT(EM_DIAGRAM):   P_DepVar1 = ( Neural40_P_DepVar1 + AutoNeural38_P_DepVar1 + 
AutoNeural39_P_DepVar1 + Neural41_P_DepVar1 + Neural39_P_DepVar1 )/5;
235913    +P_DepVar0 = (
235914    +Neural40_P_DepVar0 +
235915    +AutoNeural38_P_DepVar0 +
235916    +AutoNeural39_P_DepVar0 +
235917    +Neural41_P_DepVar0 +
235918    +Neural39_P_DepVar0
235919    +)/5;
MPRINT(EM_DIAGRAM):   P_DepVar0 = ( Neural40_P_DepVar0 + AutoNeural38_P_DepVar0 + 
AutoNeural39_P_DepVar0 + Neural41_P_DepVar0 + Neural39_P_DepVar0 )/5;
235920    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
235921    +* Ensmbl23: Computing Classification Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl23: Computing Classification Vars;
235922    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
235923    +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set. 
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the 
         length of a character variable.
235924    +label I_DepVar = 'Into: DepVar';
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar';
235925    +length _format $200;
MPRINT(EM_DIAGRAM):   length _format $200;
235926    +drop _format;
MPRINT(EM_DIAGRAM):   drop _format;
235927    +_format= ' ';
MPRINT(EM_DIAGRAM):   _format= ' ';
235928    +_p_= 0;
MPRINT(EM_DIAGRAM):   _p_= 0;
235929    +drop _p_;
MPRINT(EM_DIAGRAM):   drop _p_;
235930    +if P_DepVar1 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _p_ then do;
235931    +_p_= P_DepVar1;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar1;
235932    +_format= '1';
MPRINT(EM_DIAGRAM):   _format= '1';
235933    +end;
MPRINT(EM_DIAGRAM):   end;
235934    +if P_DepVar0 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _p_ then do;
235935    +_p_= P_DepVar0;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar0;
235936    +_format= '0';
MPRINT(EM_DIAGRAM):   _format= '0';
235937    +end;
MPRINT(EM_DIAGRAM):   end;
235938    +%DMNORMCP(_format,I_DepVar);
MPRINT(DMNORMCP):   I_DepVar=dmnorm(_format,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
235939    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
235940    +* Ensmbl23: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   * Ensmbl23: Producing Unformatted variable;
235941    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
235942    +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
235943    +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
235944    +else
235945    +if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
235946    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
235947    +* Ensmbl23: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl23: Computing _WARN_ Variable;
235948    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
235949    +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
235950    +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
235951    +_WARN_ = '';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
235952    +if index(NEURAL40_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
235952   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL40_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
235953    +if index(NEURAL40_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
235953   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL40_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
235954    +if index(NEURAL40_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
235954   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL40_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
235955    +if index(NEURAL40_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
235955   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL40_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
235956    +if index(AUTONEURAL38_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
235956   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL38_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
235957    +if index(AUTONEURAL38_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
235957   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL38_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
235958    +if index(AUTONEURAL38_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
235958   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL38_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
235959    +if index(AUTONEURAL38_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
235959   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL38_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
235960    +if index(AUTONEURAL39_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
235960   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL39_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
235961    +if index(AUTONEURAL39_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
235961   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL39_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
235962    +if index(AUTONEURAL39_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
235962   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL39_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
235963    +if index(AUTONEURAL39_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
235963   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL39_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
235964    +if index(NEURAL41_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
235964   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL41_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
235965    +if index(NEURAL41_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
235965   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL41_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
235966    +if index(NEURAL41_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
235966   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL41_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
235967    +if index(NEURAL41_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
235967   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL41_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
235968    +if index(NEURAL39_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
235968   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL39_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
235969    +if index(NEURAL39_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
235969   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL39_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
235970    +if index(NEURAL39_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
235970   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL39_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
235971    +if index(NEURAL39_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
235971   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL39_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
235972    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
235973    +* Ensmbl23: Computing Residual Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl23: Computing Residual Vars;
235974    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
235975    +if
235976    +F_DepVar NE '1'
235977    +AND F_DepVar NE '0'
235978    +then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE '1' AND F_DepVar NE '0' then do;
235979    +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
235980    +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
235981    +end;
MPRINT(EM_DIAGRAM):   end;
235982    +else do;
MPRINT(EM_DIAGRAM):   else do;
235983    +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
235984    +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
235985    +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
235986    +WHEN('1') R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN('1') R_DepVar1 = R_DepVar1 +1;
235987    +WHEN('0') R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN('0') R_DepVar0 = R_DepVar0 +1;
235988    +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
235989    +END;
MPRINT(EM_DIAGRAM):   END;
235990    +END;
MPRINT(EM_DIAGRAM):   END;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
235991     run;

NOTE: DATA STEP view saved on file EMWS8.ENSMBL23_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.NEURAL40_TRAIN.VIEW used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.09 seconds
      cpu time            0.09 seconds
      

MPRINT(EM_DIAGRAM):   quit;
235992     quit;
235993     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
235994     filename emflow
235994   ! "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl23\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl23\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl23: Scoring NEURAL40_VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
235995     *------------------------------------------------------------*;
235996     * Ensmbl23: Scoring NEURAL40_VALIDATE data;
235997     *------------------------------------------------------------*;
235998     data EMWS8.Ensmbl23_VALIDATE
235999     / view=EMWS8.Ensmbl23_VALIDATE
236000     ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl23_VALIDATE / view=EMWS8.Ensmbl23_VALIDATE ;
236001     set EMWS8.Neural40_VALIDATE
236002     ;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural40_VALIDATE ;
236003     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl23\EMFLOWSCORE.sas.
236004    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
236005    +* Ensmbl23: Combine model for DepVar;
MPRINT(EM_DIAGRAM):   * Ensmbl23: Combine model for DepVar;
236006    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
236007    +* Ensmbl23: Scoring Code of model 1 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl23: Scoring Code of model 1 of 5;
236008    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
236009    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
236010    +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
236011    +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
236012    +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
236013    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
236014    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
236015    +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
236016    +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
236017    +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
236018    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
236019    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
236020    +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
236021    +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
236022    +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
236023    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
236024    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
236025    +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
236026    +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
236027    +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
236028    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
236029    +
236030    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
236031    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
236031   !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
236032    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
236033    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
236034    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
236035    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
236036    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
236037    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
236038    +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
236039    +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
236040    +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
236041    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
236042    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
236043    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
236044    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
236045    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
236046    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
236047    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
236048    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
236049    +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
236050    +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
236051    +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
236052    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
236053    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
236054    +* TOOL: Metadata Node;
MPRINT(EM_DIAGRAM):   * TOOL: Metadata Node;
236055    +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
236056    +* NODE: Meta3;
MPRINT(EM_DIAGRAM):   * NODE: Meta3;
236057    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
236058    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
236059    +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
236060    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
236061    +* NODE: Neural40;
MPRINT(EM_DIAGRAM):   * NODE: Neural40;
236062    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
236063    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
236064    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
236065    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
236066    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
236067    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
236068    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
236069    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
236070    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
236071    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
236072    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
236073    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
236074    +LENGTH _WARN_ $4
236075    +      F_DepVar  $ 12
236076    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
236077    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
236078    +
236079    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
236080    +
236081    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
236082    +
236083    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
236084    +
236085    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
236086    +
236087    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
236088    +
236089    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
236090    +
236091    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
236092    +
236093    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
236094    +
236095    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
236096    +
236097    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
236098    +
236099    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
236100    +
236101    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
236102    +
236103    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
236104    +
236105    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
236106    +
236107    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
236108    +
236109    +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
236110    +
236111    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
236112    +
236113    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
236114    +
236115    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
236116    +
236117    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
236118    +
236119    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
236120    +
236121    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
236122    +
236123    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
236124    +
236125    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
236126    +
236127    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
236128    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
236129    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
236130    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
236131    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
236132    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
236133    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
236134    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
236135    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
236136    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
236137    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
236138    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
236139    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
236140    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
236141    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
236142    +end;
MPRINT(EM_DIAGRAM):   end;
236143    +else do;
MPRINT(EM_DIAGRAM):   else do;
236144    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
236145    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
236146    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
236147    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
236148    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
236149    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
236150    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
236151    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
236152    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
236153    +         end;
MPRINT(EM_DIAGRAM):   end;
236154    +         else do;
MPRINT(EM_DIAGRAM):   else do;
236155    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
236156    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
236157    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
236158    +            end;
MPRINT(EM_DIAGRAM):   end;
236159    +         end;
MPRINT(EM_DIAGRAM):   end;
236160    +      end;
MPRINT(EM_DIAGRAM):   end;
236161    +      else do;
MPRINT(EM_DIAGRAM):   else do;
236162    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
236163    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
236164    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
236165    +         end;
MPRINT(EM_DIAGRAM):   end;
236166    +      end;
MPRINT(EM_DIAGRAM):   end;
236167    +   end;
MPRINT(EM_DIAGRAM):   end;
236168    +   else do;
MPRINT(EM_DIAGRAM):   else do;
236169    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
236170    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
236171    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
236172    +      end;
MPRINT(EM_DIAGRAM):   end;
236173    +      else do;
MPRINT(EM_DIAGRAM):   else do;
236174    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
236175    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
236176    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
236177    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
236178    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
236179    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
236180    +         end;
MPRINT(EM_DIAGRAM):   end;
236181    +      end;
MPRINT(EM_DIAGRAM):   end;
236182    +   end;
MPRINT(EM_DIAGRAM):   end;
236183    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
236184    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
236185    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
236186    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
236187    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
236188    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
236189    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
236190    +   end;
MPRINT(EM_DIAGRAM):   end;
236191    +end;
MPRINT(EM_DIAGRAM):   end;
236192    +
236193    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
236194    +*** Checking missing input Interval
236195    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
236196    +
236197    +IF NMISS(
236198    +   AcceptedCmpTotal ,
236199    +   Frq ,
236200    +   Mnt ,
236201    +   MntMeatProducts ,
236202    +   NumCatalogPurchases ,
236203    +   NumDealsPurchases ,
236204    +   NumWebVisitsMonth ,
236205    +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Mnt , MntMeatProducts , 
NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , Recency ) THEN DO;
236206    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
236207    +
236208    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
236209    +END;
MPRINT(EM_DIAGRAM):   END;
236210    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
236211    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
236212    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
236213    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
236214    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
236215    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
236216    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
236217    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
236218    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
236219    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
236220    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
236221    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
236222    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
236223    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
236224    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
236225    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
236226    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
236227    +END;
MPRINT(EM_DIAGRAM):   END;
236228    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
236229    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
236230    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
236231    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
236232    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
236233    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
236234    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
236235    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
236236    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
236237    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
236238    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
236239    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
236240    +   ELSE S_NumCatalogPurchases
236241    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
236242    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
236243    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
236244    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
236245    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
236246    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
236247    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
236248    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
236249    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
236250    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
236251    +END;
MPRINT(EM_DIAGRAM):   END;
236252    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
236253    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
236254    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
236255    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
236256    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
236257    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
236258    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
236259    +   H11  =    -0.50937067326512 * S_AcceptedCmpTotal  +     0.59153604997173 *
236260    +        S_Frq  +     0.35109708191283 * S_Mnt  +    -0.54183123684873 *
236261    +        S_MntMeatProducts  +    -0.50968421326068 * S_NumCatalogPurchases
236262    +          +    -0.19046126117019 * S_NumDealsPurchases
236263    +          +    -0.51033119597715 * S_NumWebVisitsMonth
236264    +          +     0.81837864997249 * S_Recency ;
MPRINT(EM_DIAGRAM):   H11 = -0.50937067326512 * S_AcceptedCmpTotal + 0.59153604997173 * S_Frq 
+ 0.35109708191283 * S_Mnt + -0.54183123684873 * S_MntMeatProducts + -0.50968421326068 * 
S_NumCatalogPurchases + -0.19046126117019 * S_NumDealsPurchases + -0.51033119597715 * 
S_NumWebVisitsMonth + 0.81837864997249 * S_Recency ;
236265    +   H12  =     0.02025228046339 * S_AcceptedCmpTotal  +     0.99930163787509 *
236266    +        S_Frq  +     1.71070447604488 * S_Mnt  +     0.00262288180651 *
236267    +        S_MntMeatProducts  +    -0.26040107336488 * S_NumCatalogPurchases
236268    +          +     1.79245188553632 * S_NumDealsPurchases
236269    +          +     0.26061762777338 * S_NumWebVisitsMonth
236270    +          +     0.08976701277133 * S_Recency ;
MPRINT(EM_DIAGRAM):   H12 = 0.02025228046339 * S_AcceptedCmpTotal + 0.99930163787509 * S_Frq + 
1.71070447604488 * S_Mnt + 0.00262288180651 * S_MntMeatProducts + -0.26040107336488 * 
S_NumCatalogPurchases + 1.79245188553632 * S_NumDealsPurchases + 0.26061762777338 * 
S_NumWebVisitsMonth + 0.08976701277133 * S_Recency ;
236271    +   H13  =       0.104381332746 * S_AcceptedCmpTotal  +    -1.51764539772771 *
236272    +        S_Frq  +     0.93148616742855 * S_Mnt  +     2.93767108708116 *
236273    +        S_MntMeatProducts  +     0.79051284359814 * S_NumCatalogPurchases
236274    +          +     0.49339750797451 * S_NumDealsPurchases
236275    +          +    -0.25657630888957 * S_NumWebVisitsMonth
236276    +          +    -0.02783592802322 * S_Recency ;
MPRINT(EM_DIAGRAM):   H13 = 0.104381332746 * S_AcceptedCmpTotal + -1.51764539772771 * S_Frq + 
0.93148616742855 * S_Mnt + 2.93767108708116 * S_MntMeatProducts + 0.79051284359814 * 
S_NumCatalogPurchases + 0.49339750797451 * S_NumDealsPurchases + -0.25657630888957 * 
S_NumWebVisitsMonth + -0.02783592802322 * S_Recency ;
236277    +   H14  =     0.54135833698612 * S_AcceptedCmpTotal  +     1.35730431022222 *
236278    +        S_Frq  +     0.77200942468842 * S_Mnt  +    -1.51698500454254 *
236279    +        S_MntMeatProducts  +    -0.62605649177998 * S_NumCatalogPurchases
236280    +          +    -0.20841011025614 * S_NumDealsPurchases
236281    +          +    -0.95976462163535 * S_NumWebVisitsMonth
236282    +          +    -0.85153512604579 * S_Recency ;
MPRINT(EM_DIAGRAM):   H14 = 0.54135833698612 * S_AcceptedCmpTotal + 1.35730431022222 * S_Frq + 
0.77200942468842 * S_Mnt + -1.51698500454254 * S_MntMeatProducts + -0.62605649177998 * 
S_NumCatalogPurchases + -0.20841011025614 * S_NumDealsPurchases + -0.95976462163535 * 
S_NumWebVisitsMonth + -0.85153512604579 * S_Recency ;
236283    +   H15  =     0.45598292592982 * S_AcceptedCmpTotal  +     0.62149856604856 *
236284    +        S_Frq  +    -0.19094507833451 * S_Mnt  +     0.31024365368678 *
236285    +        S_MntMeatProducts  +     0.43336537836455 * S_NumCatalogPurchases
236286    +          +    -0.79330545518211 * S_NumDealsPurchases
236287    +          +     0.31692653945914 * S_NumWebVisitsMonth
236288    +          +    -0.82721510615104 * S_Recency ;
MPRINT(EM_DIAGRAM):   H15 = 0.45598292592982 * S_AcceptedCmpTotal + 0.62149856604856 * S_Frq + 
-0.19094507833451 * S_Mnt + 0.31024365368678 * S_MntMeatProducts + 0.43336537836455 * 
S_NumCatalogPurchases + -0.79330545518211 * S_NumDealsPurchases + 0.31692653945914 * 
S_NumWebVisitsMonth + -0.82721510615104 * S_Recency ;
236289    +   H11  = H11  +    -0.25100863467838 * Marital_StatusDivorced
236290    +          +     0.15562142019257 * Marital_StatusMarried
236291    +          +    -0.11924929825992 * Marital_StatusSingle
236292    +          +     0.19445161712576 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.25100863467838 * Marital_StatusDivorced + 
0.15562142019257 * Marital_StatusMarried + -0.11924929825992 * Marital_StatusSingle + 
0.19445161712576 * Marital_StatusTogether ;
236293    +   H12  = H12  +     0.58193215591516 * Marital_StatusDivorced
236294    +          +     0.27485963958922 * Marital_StatusMarried
236295    +          +    -0.46136322561544 * Marital_StatusSingle
236296    +          +     1.17785849262888 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.58193215591516 * Marital_StatusDivorced + 0.27485963958922 
* Marital_StatusMarried + -0.46136322561544 * Marital_StatusSingle + 1.17785849262888 * 
Marital_StatusTogether ;
236297    +   H13  = H13  +    -0.55576156297846 * Marital_StatusDivorced
236298    +          +     0.18663773247842 * Marital_StatusMarried
236299    +          +    -0.14692184711639 * Marital_StatusSingle
236300    +          +     0.40795003682635 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.55576156297846 * Marital_StatusDivorced + 
0.18663773247842 * Marital_StatusMarried + -0.14692184711639 * Marital_StatusSingle + 
0.40795003682635 * Marital_StatusTogether ;
236301    +   H14  = H14  +    -1.70154958647134 * Marital_StatusDivorced
236302    +          +     -0.0143065674831 * Marital_StatusMarried
236303    +          +     0.13491720981006 * Marital_StatusSingle
236304    +          +     0.65058537454476 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -1.70154958647134 * Marital_StatusDivorced + 
-0.0143065674831 * Marital_StatusMarried + 0.13491720981006 * Marital_StatusSingle + 
0.65058537454476 * Marital_StatusTogether ;
236305    +   H15  = H15  +    -0.57735977480465 * Marital_StatusDivorced
236306    +          +    -1.18521635425485 * Marital_StatusMarried
236307    +          +     1.27858890561049 * Marital_StatusSingle
236308    +          +    -0.68308863502606 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.57735977480465 * Marital_StatusDivorced + 
-1.18521635425485 * Marital_StatusMarried + 1.27858890561049 * Marital_StatusSingle + 
-0.68308863502606 * Marital_StatusTogether ;
236309    +   H11  =     0.91898399777449 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.91898399777449 + H11 ;
236310    +   H12  =    -0.65172531168643 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.65172531168643 + H12 ;
236311    +   H13  =     2.21950020718323 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 2.21950020718323 + H13 ;
236312    +   H14  =     0.94167989308741 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.94167989308741 + H14 ;
236313    +   H15  =    -2.75049414690283 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -2.75049414690283 + H15 ;
236314    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
236315    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
236316    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
236317    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
236318    +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
236319    +END;
MPRINT(EM_DIAGRAM):   END;
236320    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
236321    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
236322    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
236323    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
236324    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
236325    +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
236326    +END;
MPRINT(EM_DIAGRAM):   END;
236327    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
236328    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
236329    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
236330    +
236331    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
236332    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
236333    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
236334    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
236335    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
236336    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
236337    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
236338    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
236339    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
236340    +end;
MPRINT(EM_DIAGRAM):   end;
236341    +else do;
MPRINT(EM_DIAGRAM):   else do;
236342    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
236343    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
236344    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
236345    +   end;
MPRINT(EM_DIAGRAM):   end;
236346    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
236347    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
236348    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
236349    +   end;
MPRINT(EM_DIAGRAM):   end;
236350    +   else do;
MPRINT(EM_DIAGRAM):   else do;
236351    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
236352    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
236353    +   end;
MPRINT(EM_DIAGRAM):   end;
236354    +end;
MPRINT(EM_DIAGRAM):   end;
236355    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
236356    +   P_DepVar1  =    -7.73278760171706 * H11  +    -1.81420899061277 * H12
236357    +          +      7.8974780725891 * H13  +    -2.47430312661533 * H14
236358    +          +       3.637554312671 * H15 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -7.73278760171706 * H11 + -1.81420899061277 * H12 + 
7.8974780725891 * H13 + -2.47430312661533 * H14 + 3.637554312671 * H15 ;
236359    +   P_DepVar1  =    -2.27177312353398 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.27177312353398 + P_DepVar1 ;
236360    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
236361    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
236362    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
236363    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
236364    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
236365    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
236366    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
236367    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
236368    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
236369    +END;
MPRINT(EM_DIAGRAM):   END;
236370    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
236371    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
236372    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
236373    +END;
MPRINT(EM_DIAGRAM):   END;
236374    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
236375    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
236376    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
236377    +END;
MPRINT(EM_DIAGRAM):   END;
236378    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
236379    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
236380    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
236381    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
236382    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
236383    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
236384    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
236385    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
236386    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
236387    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
236388    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
236389    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
236390    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
236391    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
236392    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
236393    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
236394    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
236395    +END;
MPRINT(EM_DIAGRAM):   END;
236396    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
236397    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
236398    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
236399    +drop
236400    +H11
236401    +H12
236402    +H13
236403    +H14
236404    +H15
236405    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 ;
236406    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
236407    +* Renaming variables for Neural40;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural40;
236408    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
236409    +* Renaming Posterior variables for Neural40;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural40;
236410    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
236411    +drop Neural40_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural40_P_DepVar1;
236412    +Neural40_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural40_P_DepVar1 = P_DepVar1;
236413    +drop Neural40_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural40_P_DepVar0;
236414    +Neural40_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural40_P_DepVar0 = P_DepVar0;
236415    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
236416    +* Renaming _WARN_ variable for Neural40;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural40;
236417    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
236418    +length Neural40_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural40_WARN_ $4;
236419    +drop Neural40_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural40_WARN_;
236420    +Neural40_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural40_WARN_ = _WARN_;
236421    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
236422    +* Ensmbl23: Scoring Code of model 2 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl23: Scoring Code of model 2 of 5;
236423    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
236424    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
236425    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
236426    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
236427    +* NODE: AutoNeural38;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural38;
236428    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
236429    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
236430    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
236431    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
236432    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
236433    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
236434    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
236435    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
236436    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
236437    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
236438    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
236439    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
236440    +LENGTH _WARN_ $4
236441    +      F_DepVar  $ 12
236442    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
236443    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
236444    +
236445    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
236446    +
236447    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
236448    +
236449    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
236450    +
236451    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
236452    +
236453    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
236454    +
236455    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
236456    +
236457    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
236458    +
236459    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
236460    +
236461    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
236462    +
236463    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
236464    +
236465    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
236466    +
236467    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
236468    +
236469    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
236470    +
236471    +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
236472    +
236473    +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
236474    +
236475    +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
236476    +
236477    +      label H1x3_2 = 'Hidden: H1x3_=2' ;
MPRINT(EM_DIAGRAM):   label H1x3_2 = 'Hidden: H1x3_=2' ;
236478    +
236479    +      label H1x4_1 = 'Hidden: H1x4_=1' ;
MPRINT(EM_DIAGRAM):   label H1x4_1 = 'Hidden: H1x4_=1' ;
236480    +
236481    +      label H1x4_2 = 'Hidden: H1x4_=2' ;
MPRINT(EM_DIAGRAM):   label H1x4_2 = 'Hidden: H1x4_=2' ;
236482    +
236483    +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
236484    +
236485    +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
236486    +
236487    +      label H2x2_1 = 'Hidden: H2x2_=1' ;
MPRINT(EM_DIAGRAM):   label H2x2_1 = 'Hidden: H2x2_=1' ;
236488    +
236489    +      label H2x2_2 = 'Hidden: H2x2_=2' ;
MPRINT(EM_DIAGRAM):   label H2x2_2 = 'Hidden: H2x2_=2' ;
236490    +
236491    +      label H2x3_1 = 'Hidden: H2x3_=1' ;
MPRINT(EM_DIAGRAM):   label H2x3_1 = 'Hidden: H2x3_=1' ;
236492    +
236493    +      label H2x3_2 = 'Hidden: H2x3_=2' ;
MPRINT(EM_DIAGRAM):   label H2x3_2 = 'Hidden: H2x3_=2' ;
236494    +
236495    +      label H3x1_1 = 'Hidden: H3x1_=1' ;
MPRINT(EM_DIAGRAM):   label H3x1_1 = 'Hidden: H3x1_=1' ;
236496    +
236497    +      label H3x1_2 = 'Hidden: H3x1_=2' ;
MPRINT(EM_DIAGRAM):   label H3x1_2 = 'Hidden: H3x1_=2' ;
236498    +
236499    +      label H3x2_1 = 'Hidden: H3x2_=1' ;
MPRINT(EM_DIAGRAM):   label H3x2_1 = 'Hidden: H3x2_=1' ;
236500    +
236501    +      label H3x2_2 = 'Hidden: H3x2_=2' ;
MPRINT(EM_DIAGRAM):   label H3x2_2 = 'Hidden: H3x2_=2' ;
236502    +
236503    +      label H4x1_1 = 'Hidden: H4x1_=1' ;
MPRINT(EM_DIAGRAM):   label H4x1_1 = 'Hidden: H4x1_=1' ;
236504    +
236505    +      label H4x1_2 = 'Hidden: H4x1_=2' ;
MPRINT(EM_DIAGRAM):   label H4x1_2 = 'Hidden: H4x1_=2' ;
236506    +
236507    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
236508    +
236509    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
236510    +
236511    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
236512    +
236513    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
236514    +
236515    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
236516    +
236517    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
236518    +
236519    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
236520    +
236521    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
236522    +
236523    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
236524    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
236525    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
236526    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
236527    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
236528    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
236529    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
236530    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
236531    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
236532    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
236533    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
236534    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
236535    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
236536    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
236537    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
236538    +end;
MPRINT(EM_DIAGRAM):   end;
236539    +else do;
MPRINT(EM_DIAGRAM):   else do;
236540    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
236541    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
236542    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
236543    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
236544    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
236545    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
236546    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
236547    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
236548    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
236549    +         end;
MPRINT(EM_DIAGRAM):   end;
236550    +         else do;
MPRINT(EM_DIAGRAM):   else do;
236551    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
236552    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
236553    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
236554    +            end;
MPRINT(EM_DIAGRAM):   end;
236555    +         end;
MPRINT(EM_DIAGRAM):   end;
236556    +      end;
MPRINT(EM_DIAGRAM):   end;
236557    +      else do;
MPRINT(EM_DIAGRAM):   else do;
236558    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
236559    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
236560    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
236561    +         end;
MPRINT(EM_DIAGRAM):   end;
236562    +      end;
MPRINT(EM_DIAGRAM):   end;
236563    +   end;
MPRINT(EM_DIAGRAM):   end;
236564    +   else do;
MPRINT(EM_DIAGRAM):   else do;
236565    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
236566    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
236567    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
236568    +      end;
MPRINT(EM_DIAGRAM):   end;
236569    +      else do;
MPRINT(EM_DIAGRAM):   else do;
236570    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
236571    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
236572    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
236573    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
236574    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
236575    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
236576    +         end;
MPRINT(EM_DIAGRAM):   end;
236577    +      end;
MPRINT(EM_DIAGRAM):   end;
236578    +   end;
MPRINT(EM_DIAGRAM):   end;
236579    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
236580    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
236581    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
236582    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
236583    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
236584    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
236585    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
236586    +   end;
MPRINT(EM_DIAGRAM):   end;
236587    +end;
MPRINT(EM_DIAGRAM):   end;
236588    +
236589    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
236590    +*** Checking missing input Interval
236591    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
236592    +
236593    +IF NMISS(
236594    +   AcceptedCmpTotal ,
236595    +   Frq ,
236596    +   Mnt ,
236597    +   MntMeatProducts ,
236598    +   NumCatalogPurchases ,
236599    +   NumDealsPurchases ,
236600    +   NumWebVisitsMonth ,
236601    +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Mnt , MntMeatProducts , 
NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , Recency ) THEN DO;
236602    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
236603    +
236604    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
236605    +END;
MPRINT(EM_DIAGRAM):   END;
236606    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
236607    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
236608    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
236609    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
236610    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
236611    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
236612    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
236613    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
236614    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
236615    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
236616    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
236617    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
236618    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
236619    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
236620    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
236621    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
236622    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
236623    +END;
MPRINT(EM_DIAGRAM):   END;
236624    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
236625    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
236626    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
236627    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
236628    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
236629    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
236630    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
236631    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
236632    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
236633    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
236634    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
236635    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
236636    +   ELSE S_NumCatalogPurchases
236637    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
236638    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
236639    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
236640    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
236641    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
236642    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
236643    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
236644    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
236645    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
236646    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
236647    +END;
MPRINT(EM_DIAGRAM):   END;
236648    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
236649    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
236650    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
236651    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
236652    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
236653    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
236654    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
236655    +   H1x1_1  =     0.03317833435323 * S_AcceptedCmpTotal
236656    +          +    -0.66859164215955 * S_Frq  +     1.04503858219375 * S_Mnt
236657    +          +     3.02405267314398 * S_MntMeatProducts
236658    +          +     0.25422172488707 * S_NumCatalogPurchases
236659    +          +     0.25977266371328 * S_NumDealsPurchases
236660    +          +    -0.26865365728773 * S_NumWebVisitsMonth
236661    +          +     0.09531087154516 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.03317833435323 * S_AcceptedCmpTotal + -0.66859164215955 * 
S_Frq + 1.04503858219375 * S_Mnt + 3.02405267314398 * S_MntMeatProducts + 0.25422172488707 * 
S_NumCatalogPurchases + 0.25977266371328 * S_NumDealsPurchases + -0.26865365728773 * 
S_NumWebVisitsMonth + 0.09531087154516 * S_Recency ;
236662    +   H1x1_2  =    -0.69087988352897 * S_AcceptedCmpTotal
236663    +          +    -0.11955753576733 * S_Frq  +     0.84152651412075 * S_Mnt
236664    +          +    -0.64419071408502 * S_MntMeatProducts
236665    +          +    -0.49060224303044 * S_NumCatalogPurchases
236666    +          +    -0.04840762943457 * S_NumDealsPurchases
236667    +          +     -0.7656247386051 * S_NumWebVisitsMonth
236668    +          +     1.13086655489449 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.69087988352897 * S_AcceptedCmpTotal + -0.11955753576733 * 
S_Frq + 0.84152651412075 * S_Mnt + -0.64419071408502 * S_MntMeatProducts + -0.49060224303044 * 
S_NumCatalogPurchases + -0.04840762943457 * S_NumDealsPurchases + -0.7656247386051 * 
S_NumWebVisitsMonth + 1.13086655489449 * S_Recency ;
236669    +   H1x1_1  = H1x1_1  +    -0.53136707555877 * Marital_StatusDivorced
236670    +          +    -0.05888536499281 * Marital_StatusMarried
236671    +          +    -0.22627441829205 * Marital_StatusSingle
236672    +          +     0.52348719245564 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.53136707555877 * Marital_StatusDivorced + 
-0.05888536499281 * Marital_StatusMarried + -0.22627441829205 * Marital_StatusSingle + 
0.52348719245564 * Marital_StatusTogether ;
236673    +   H1x1_2  = H1x1_2  +    -0.85322837962298 * Marital_StatusDivorced
236674    +          +     0.82536605771339 * Marital_StatusMarried
236675    +          +    -0.97196770004098 * Marital_StatusSingle
236676    +          +      1.2063947269032 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.85322837962298 * Marital_StatusDivorced + 
0.82536605771339 * Marital_StatusMarried + -0.97196770004098 * Marital_StatusSingle + 
1.2063947269032 * Marital_StatusTogether ;
236677    +   H1x1_1  =     3.30547913450619 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 3.30547913450619 + H1x1_1 ;
236678    +   H1x1_2  =     1.08446512287712 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.08446512287712 + H1x1_2 ;
236679    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
236680    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
236681    +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
236682    +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
236683    +END;
MPRINT(EM_DIAGRAM):   END;
236684    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
236685    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
236686    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
236687    +END;
MPRINT(EM_DIAGRAM):   END;
236688    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
236689    +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
236690    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
236691    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
236692    +   H1x2_1  =     0.52271766494525 * S_AcceptedCmpTotal
236693    +          +     0.57611155332907 * S_Frq  +     2.82792468297238 * S_Mnt
236694    +          +    -1.52187144029368 * S_MntMeatProducts
236695    +          +    -0.17233011764417 * S_NumCatalogPurchases
236696    +          +     0.08681674245114 * S_NumDealsPurchases
236697    +          +     0.13308256651831 * S_NumWebVisitsMonth
236698    +          +    -0.88526514420045 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.52271766494525 * S_AcceptedCmpTotal + 0.57611155332907 * 
S_Frq + 2.82792468297238 * S_Mnt + -1.52187144029368 * S_MntMeatProducts + -0.17233011764417 * 
S_NumCatalogPurchases + 0.08681674245114 * S_NumDealsPurchases + 0.13308256651831 * 
S_NumWebVisitsMonth + -0.88526514420045 * S_Recency ;
236699    +   H1x2_2  =      0.4222520789746 * S_AcceptedCmpTotal
236700    +          +    -3.13381438735416 * S_Frq  +    -0.34909843441486 * S_Mnt
236701    +          +     0.66187267823731 * S_MntMeatProducts
236702    +          +     1.52530454111654 * S_NumCatalogPurchases
236703    +          +     0.73982889008686 * S_NumDealsPurchases
236704    +          +     1.03760708665776 * S_NumWebVisitsMonth
236705    +          +    -1.31685207844927 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.4222520789746 * S_AcceptedCmpTotal + -3.13381438735416 * 
S_Frq + -0.34909843441486 * S_Mnt + 0.66187267823731 * S_MntMeatProducts + 1.52530454111654 * 
S_NumCatalogPurchases + 0.73982889008686 * S_NumDealsPurchases + 1.03760708665776 * 
S_NumWebVisitsMonth + -1.31685207844927 * S_Recency ;
236706    +   H1x2_1  = H1x2_1  +    -0.40921432838161 * Marital_StatusDivorced
236707    +          +    -0.57121500191985 * Marital_StatusMarried
236708    +          +     0.00575301863466 * Marital_StatusSingle
236709    +          +     0.58606212168272 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.40921432838161 * Marital_StatusDivorced + 
-0.57121500191985 * Marital_StatusMarried + 0.00575301863466 * Marital_StatusSingle + 
0.58606212168272 * Marital_StatusTogether ;
236710    +   H1x2_2  = H1x2_2  +     0.05193612372383 * Marital_StatusDivorced
236711    +          +     0.68382990555761 * Marital_StatusMarried
236712    +          +    -0.40241665873988 * Marital_StatusSingle
236713    +          +     0.66274709598028 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.05193612372383 * Marital_StatusDivorced + 
0.68382990555761 * Marital_StatusMarried + -0.40241665873988 * Marital_StatusSingle + 
0.66274709598028 * Marital_StatusTogether ;
236714    +   H1x2_1  =     1.66256790999222 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.66256790999222 + H1x2_1 ;
236715    +   H1x2_2  =    -2.71135276190381 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -2.71135276190381 + H1x2_2 ;
236716    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
236717    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
236718    +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
236719    +   H1x2_2  = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_2 = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
236720    +END;
MPRINT(EM_DIAGRAM):   END;
236721    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
236722    +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
236723    +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
236724    +END;
MPRINT(EM_DIAGRAM):   END;
236725    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
236726    +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
236727    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
236728    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
236729    +   H1x3_1  =    -1.36813165661884 * S_AcceptedCmpTotal
236730    +          +    -0.29960918468261 * S_Frq  +    -0.65204315831074 * S_Mnt
236731    +          +    -2.40830591527574 * S_MntMeatProducts
236732    +          +    -0.89296864866675 * S_NumCatalogPurchases
236733    +          +     1.79889409325514 * S_NumDealsPurchases
236734    +          +    -0.33765715793031 * S_NumWebVisitsMonth
236735    +          +    -0.63474704455434 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_1 = -1.36813165661884 * S_AcceptedCmpTotal + -0.29960918468261 * 
S_Frq + -0.65204315831074 * S_Mnt + -2.40830591527574 * S_MntMeatProducts + -0.89296864866675 
* S_NumCatalogPurchases + 1.79889409325514 * S_NumDealsPurchases + -0.33765715793031 * 
S_NumWebVisitsMonth + -0.63474704455434 * S_Recency ;
236736    +   H1x3_2  =    -0.20409738779324 * S_AcceptedCmpTotal
236737    +          +     1.49919916163823 * S_Frq  +     -0.9415605932144 * S_Mnt
236738    +          +     0.04224245417831 * S_MntMeatProducts
236739    +          +     0.25836861794607 * S_NumCatalogPurchases
236740    +          +     2.47909264202917 * S_NumDealsPurchases
236741    +          +     0.14790226792406 * S_NumWebVisitsMonth
236742    +          +     0.40870786833591 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_2 = -0.20409738779324 * S_AcceptedCmpTotal + 1.49919916163823 * 
S_Frq + -0.9415605932144 * S_Mnt + 0.04224245417831 * S_MntMeatProducts + 0.25836861794607 * 
S_NumCatalogPurchases + 2.47909264202917 * S_NumDealsPurchases + 0.14790226792406 * 
S_NumWebVisitsMonth + 0.40870786833591 * S_Recency ;
236743    +   H1x3_1  = H1x3_1  +     0.20928850420446 * Marital_StatusDivorced
236744    +          +     0.39103795234666 * Marital_StatusMarried
236745    +          +    -0.52822284221545 * Marital_StatusSingle
236746    +          +    -1.86494928221959 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 0.20928850420446 * Marital_StatusDivorced + 
0.39103795234666 * Marital_StatusMarried + -0.52822284221545 * Marital_StatusSingle + 
-1.86494928221959 * Marital_StatusTogether ;
236747    +   H1x3_2  = H1x3_2  +     1.62005786474378 * Marital_StatusDivorced
236748    +          +       1.975579060233 * Marital_StatusMarried
236749    +          +     0.15028521746762 * Marital_StatusSingle
236750    +          +     0.92005975380984 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + 1.62005786474378 * Marital_StatusDivorced + 
1.975579060233 * Marital_StatusMarried + 0.15028521746762 * Marital_StatusSingle + 
0.92005975380984 * Marital_StatusTogether ;
236751    +   H1x3_1  =     0.89242262747745 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.89242262747745 + H1x3_1 ;
236752    +   H1x3_2  =     0.65972128608947 + H1x3_2 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = 0.65972128608947 + H1x3_2 ;
236753    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
236754    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
236755    +   H1x3_1  = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_1 = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
236756    +   H1x3_2  = 1.0 / (1.0 + EXP(MIN( - H1x3_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_2 = 1.0 / (1.0 + EXP(MIN( - H1x3_2 , _EXP_BAR)));
236757    +END;
MPRINT(EM_DIAGRAM):   END;
236758    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
236759    +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
236760    +   H1x3_2  = .;
MPRINT(EM_DIAGRAM):   H1x3_2 = .;
236761    +END;
MPRINT(EM_DIAGRAM):   END;
236762    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
236763    +*** Writing the Node H1x4_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x4_ ;
236764    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
236765    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
236766    +   H1x4_1  =    -1.56857036994838 * S_AcceptedCmpTotal
236767    +          +    -0.01709393019065 * S_Frq  +    -0.41130381419631 * S_Mnt
236768    +          +     0.16060225059391 * S_MntMeatProducts
236769    +          +     1.53093292630033 * S_NumCatalogPurchases
236770    +          +     0.39573641806699 * S_NumDealsPurchases
236771    +          +    -0.95387142126649 * S_NumWebVisitsMonth
236772    +          +     0.58661969978382 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x4_1 = -1.56857036994838 * S_AcceptedCmpTotal + -0.01709393019065 * 
S_Frq + -0.41130381419631 * S_Mnt + 0.16060225059391 * S_MntMeatProducts + 1.53093292630033 * 
S_NumCatalogPurchases + 0.39573641806699 * S_NumDealsPurchases + -0.95387142126649 * 
S_NumWebVisitsMonth + 0.58661969978382 * S_Recency ;
236773    +   H1x4_2  =     0.40365014181339 * S_AcceptedCmpTotal
236774    +          +     0.25758137147094 * S_Frq  +     1.96878849657351 * S_Mnt
236775    +          +     0.71628478327205 * S_MntMeatProducts
236776    +          +     0.15890352363556 * S_NumCatalogPurchases
236777    +          +    -1.12928875468011 * S_NumDealsPurchases
236778    +          +    -0.30108145274307 * S_NumWebVisitsMonth
236779    +          +     0.28810419317266 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x4_2 = 0.40365014181339 * S_AcceptedCmpTotal + 0.25758137147094 * 
S_Frq + 1.96878849657351 * S_Mnt + 0.71628478327205 * S_MntMeatProducts + 0.15890352363556 * 
S_NumCatalogPurchases + -1.12928875468011 * S_NumDealsPurchases + -0.30108145274307 * 
S_NumWebVisitsMonth + 0.28810419317266 * S_Recency ;
236780    +   H1x4_1  = H1x4_1  +     0.71809860803817 * Marital_StatusDivorced
236781    +          +     0.91966160839643 * Marital_StatusMarried
236782    +          +    -0.63411090570397 * Marital_StatusSingle
236783    +          +    -0.54635673224032 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x4_1 = H1x4_1 + 0.71809860803817 * Marital_StatusDivorced + 
0.91966160839643 * Marital_StatusMarried + -0.63411090570397 * Marital_StatusSingle + 
-0.54635673224032 * Marital_StatusTogether ;
236784    +   H1x4_2  = H1x4_2  +    -0.82559954633474 * Marital_StatusDivorced
236785    +          +     0.77230489026504 * Marital_StatusMarried
236786    +          +     0.20456495503812 * Marital_StatusSingle
236787    +          +    -0.94791841887496 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x4_2 = H1x4_2 + -0.82559954633474 * Marital_StatusDivorced + 
0.77230489026504 * Marital_StatusMarried + 0.20456495503812 * Marital_StatusSingle + 
-0.94791841887496 * Marital_StatusTogether ;
236788    +   H1x4_1  =    -0.74278734869781 + H1x4_1 ;
MPRINT(EM_DIAGRAM):   H1x4_1 = -0.74278734869781 + H1x4_1 ;
236789    +   H1x4_2  =     1.36386007305279 + H1x4_2 ;
MPRINT(EM_DIAGRAM):   H1x4_2 = 1.36386007305279 + H1x4_2 ;
236790    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
236791    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
236792    +   H1x4_1  = 1.0 / (1.0 + EXP(MIN( - H1x4_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x4_1 = 1.0 / (1.0 + EXP(MIN( - H1x4_1 , _EXP_BAR)));
236793    +   H1x4_2  = 1.0 / (1.0 + EXP(MIN( - H1x4_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x4_2 = 1.0 / (1.0 + EXP(MIN( - H1x4_2 , _EXP_BAR)));
236794    +END;
MPRINT(EM_DIAGRAM):   END;
236795    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
236796    +   H1x4_1  = .;
MPRINT(EM_DIAGRAM):   H1x4_1 = .;
236797    +   H1x4_2  = .;
MPRINT(EM_DIAGRAM):   H1x4_2 = .;
236798    +END;
MPRINT(EM_DIAGRAM):   END;
236799    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
236800    +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
236801    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
236802    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
236803    +   H2x1_1  =     6.70671434954254 * H1x1_1  +    -3.26026761915622 * H1x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 6.70671434954254 * H1x1_1 + -3.26026761915622 * H1x1_2 ;
236804    +   H2x1_2  =     9.50930943961048 * H1x1_1  +     -38.665886357082 * H1x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 9.50930943961048 * H1x1_1 + -38.665886357082 * H1x1_2 ;
236805    +   H2x1_1  = H2x1_1  +    -2.93089545861469 * H1x2_1
236806    +          +     1.56101538169797 * H1x2_2 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -2.93089545861469 * H1x2_1 + 1.56101538169797 * H1x2_2 
;
236807    +   H2x1_2  = H2x1_2  +    -0.71350117244702 * H1x2_1
236808    +          +    -3.81025846953023 * H1x2_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -0.71350117244702 * H1x2_1 + -3.81025846953023 * 
H1x2_2 ;
236809    +   H2x1_1  = H2x1_1  +    -0.33624313911685 * H1x3_1
236810    +          +     -0.2506302302983 * H1x3_2 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -0.33624313911685 * H1x3_1 + -0.2506302302983 * H1x3_2 
;
236811    +   H2x1_2  = H2x1_2  +    -0.95434767487254 * H1x3_1
236812    +          +    -0.10638654133666 * H1x3_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -0.95434767487254 * H1x3_1 + -0.10638654133666 * 
H1x3_2 ;
236813    +   H2x1_1  = H2x1_1  +    -0.27261326347944 * H1x4_1
236814    +          +     0.15687682287669 * H1x4_2 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -0.27261326347944 * H1x4_1 + 0.15687682287669 * H1x4_2 
;
236815    +   H2x1_2  = H2x1_2  +     0.43717724195408 * H1x4_1
236816    +          +     0.97600288948907 * H1x4_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.43717724195408 * H1x4_1 + 0.97600288948907 * H1x4_2 ;
236817    +   H2x1_1  =    -1.76465776305701 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -1.76465776305701 + H2x1_1 ;
236818    +   H2x1_2  =     2.45505067378694 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 2.45505067378694 + H2x1_2 ;
236819    +   H2x1_1  = SIN(H2x1_1 );
MPRINT(EM_DIAGRAM):   H2x1_1 = SIN(H2x1_1 );
236820    +   H2x1_2  = SIN(H2x1_2 );
MPRINT(EM_DIAGRAM):   H2x1_2 = SIN(H2x1_2 );
236821    +END;
MPRINT(EM_DIAGRAM):   END;
236822    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
236823    +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
236824    +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
236825    +END;
MPRINT(EM_DIAGRAM):   END;
236826    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
236827    +*** Writing the Node H2x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x2_ ;
236828    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
236829    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
236830    +   H2x2_1  =     0.44221000188212 * H1x1_1  +    -0.09410411660626 * H1x1_2 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = 0.44221000188212 * H1x1_1 + -0.09410411660626 * H1x1_2 ;
236831    +   H2x2_2  =    -0.62041237832472 * H1x1_1  +    -1.70568019769479 * H1x1_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = -0.62041237832472 * H1x1_1 + -1.70568019769479 * H1x1_2 ;
236832    +   H2x2_1  = H2x2_1  +     0.86476170574504 * H1x2_1
236833    +          +    -2.36042697137738 * H1x2_2 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + 0.86476170574504 * H1x2_1 + -2.36042697137738 * H1x2_2 
;
236834    +   H2x2_2  = H2x2_2  +     0.44483356408795 * H1x2_1
236835    +          +    -1.66254033339836 * H1x2_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + 0.44483356408795 * H1x2_1 + -1.66254033339836 * H1x2_2 
;
236836    +   H2x2_1  = H2x2_1  +     2.16429199725142 * H1x3_1
236837    +          +     1.43296701176218 * H1x3_2 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + 2.16429199725142 * H1x3_1 + 1.43296701176218 * H1x3_2 ;
236838    +   H2x2_2  = H2x2_2  +     -2.3086904824016 * H1x3_1
236839    +          +    -2.17810690370253 * H1x3_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + -2.3086904824016 * H1x3_1 + -2.17810690370253 * H1x3_2 
;
236840    +   H2x2_1  = H2x2_1  +     0.00588994713052 * H1x4_1
236841    +          +     0.12676819806376 * H1x4_2 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + 0.00588994713052 * H1x4_1 + 0.12676819806376 * H1x4_2 ;
236842    +   H2x2_2  = H2x2_2  +     0.82027256992322 * H1x4_1
236843    +          +    -0.52732352975227 * H1x4_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + 0.82027256992322 * H1x4_1 + -0.52732352975227 * H1x4_2 
;
236844    +   H2x2_1  =     0.47389009262422 + H2x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = 0.47389009262422 + H2x2_1 ;
236845    +   H2x2_2  =     -0.8122008316452 + H2x2_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = -0.8122008316452 + H2x2_2 ;
236846    +   H2x2_1  = SIN(H2x2_1 );
MPRINT(EM_DIAGRAM):   H2x2_1 = SIN(H2x2_1 );
236847    +   H2x2_2  = SIN(H2x2_2 );
MPRINT(EM_DIAGRAM):   H2x2_2 = SIN(H2x2_2 );
236848    +END;
MPRINT(EM_DIAGRAM):   END;
236849    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
236850    +   H2x2_1  = .;
MPRINT(EM_DIAGRAM):   H2x2_1 = .;
236851    +   H2x2_2  = .;
MPRINT(EM_DIAGRAM):   H2x2_2 = .;
236852    +END;
MPRINT(EM_DIAGRAM):   END;
236853    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
236854    +*** Writing the Node H2x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x3_ ;
236855    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
236856    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
236857    +   H2x3_1  =    -0.28493649489231 * H1x1_1  +     0.46324227997344 * H1x1_2 ;
MPRINT(EM_DIAGRAM):   H2x3_1 = -0.28493649489231 * H1x1_1 + 0.46324227997344 * H1x1_2 ;
236858    +   H2x3_2  =     0.41015874548881 * H1x1_1  +    -0.05146341955765 * H1x1_2 ;
MPRINT(EM_DIAGRAM):   H2x3_2 = 0.41015874548881 * H1x1_1 + -0.05146341955765 * H1x1_2 ;
236859    +   H2x3_1  = H2x3_1  +    -1.00349052905386 * H1x2_1
236860    +          +     0.64290952668224 * H1x2_2 ;
MPRINT(EM_DIAGRAM):   H2x3_1 = H2x3_1 + -1.00349052905386 * H1x2_1 + 0.64290952668224 * H1x2_2 
;
236861    +   H2x3_2  = H2x3_2  +     0.48935572509195 * H1x2_1
236862    +          +     0.64476371718125 * H1x2_2 ;
MPRINT(EM_DIAGRAM):   H2x3_2 = H2x3_2 + 0.48935572509195 * H1x2_1 + 0.64476371718125 * H1x2_2 ;
236863    +   H2x3_1  = H2x3_1  +    -1.11988665905516 * H1x3_1
236864    +          +    -0.34805105626026 * H1x3_2 ;
MPRINT(EM_DIAGRAM):   H2x3_1 = H2x3_1 + -1.11988665905516 * H1x3_1 + -0.34805105626026 * 
H1x3_2 ;
236865    +   H2x3_2  = H2x3_2  +     0.32493988416634 * H1x3_1
236866    +          +     0.32809540262065 * H1x3_2 ;
MPRINT(EM_DIAGRAM):   H2x3_2 = H2x3_2 + 0.32493988416634 * H1x3_1 + 0.32809540262065 * H1x3_2 ;
236867    +   H2x3_1  = H2x3_1  +     0.47764131040964 * H1x4_1
236868    +          +    -1.36976442655344 * H1x4_2 ;
MPRINT(EM_DIAGRAM):   H2x3_1 = H2x3_1 + 0.47764131040964 * H1x4_1 + -1.36976442655344 * H1x4_2 
;
236869    +   H2x3_2  = H2x3_2  +     -0.3421580983005 * H1x4_1
236870    +          +     0.47926475944446 * H1x4_2 ;
MPRINT(EM_DIAGRAM):   H2x3_2 = H2x3_2 + -0.3421580983005 * H1x4_1 + 0.47926475944446 * H1x4_2 ;
236871    +   H2x3_1  =     0.90815431460142 + H2x3_1 ;
MPRINT(EM_DIAGRAM):   H2x3_1 = 0.90815431460142 + H2x3_1 ;
236872    +   H2x3_2  =    -1.77185533764538 + H2x3_2 ;
MPRINT(EM_DIAGRAM):   H2x3_2 = -1.77185533764538 + H2x3_2 ;
236873    +   H2x3_1  = SIN(H2x3_1 );
MPRINT(EM_DIAGRAM):   H2x3_1 = SIN(H2x3_1 );
236874    +   H2x3_2  = SIN(H2x3_2 );
MPRINT(EM_DIAGRAM):   H2x3_2 = SIN(H2x3_2 );
236875    +END;
MPRINT(EM_DIAGRAM):   END;
236876    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
236877    +   H2x3_1  = .;
MPRINT(EM_DIAGRAM):   H2x3_1 = .;
236878    +   H2x3_2  = .;
MPRINT(EM_DIAGRAM):   H2x3_2 = .;
236879    +END;
MPRINT(EM_DIAGRAM):   END;
236880    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
236881    +*** Writing the Node H3x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x1_ ;
236882    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
236883    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
236884    +   H3x1_1  =     4.31939811374229 * H2x1_1  +      -0.700351897347 * H2x1_2 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 4.31939811374229 * H2x1_1 + -0.700351897347 * H2x1_2 ;
236885    +   H3x1_1  = H3x1_1  +     2.40750918668175 * H2x2_1
236886    +          +    -1.54042325930374 * H2x2_2 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + 2.40750918668175 * H2x2_1 + -1.54042325930374 * H2x2_2 
;
236887    +   H3x1_1  = H3x1_1  +     1.46738265989804 * H2x3_1
236888    +          +     0.20077963052939 * H2x3_2 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + 1.46738265989804 * H2x3_1 + 0.20077963052939 * H2x3_2 ;
236889    +   H3x1_1  =    -0.09840116412671 + H3x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = -0.09840116412671 + H3x1_1 ;
236890    +   H3x1_2  = 0;
MPRINT(EM_DIAGRAM):   H3x1_2 = 0;
236891    +   _MAX_ = MAX (H3x1_1 , H3x1_2 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H3x1_1 , H3x1_2 );
236892    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
236893    +   H3x1_1  = EXP(H3x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_1 = EXP(H3x1_1 - _MAX_);
236894    +   _SUM_ = _SUM_ + H3x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_1 ;
236895    +   H3x1_2  = EXP(H3x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_2 = EXP(H3x1_2 - _MAX_);
236896    +   _SUM_ = _SUM_ + H3x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_2 ;
236897    +   H3x1_1  = H3x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 / _SUM_;
236898    +   H3x1_2  = H3x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_2 = H3x1_2 / _SUM_;
236899    +END;
MPRINT(EM_DIAGRAM):   END;
236900    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
236901    +   H3x1_1  = .;
MPRINT(EM_DIAGRAM):   H3x1_1 = .;
236902    +   H3x1_2  = .;
MPRINT(EM_DIAGRAM):   H3x1_2 = .;
236903    +END;
MPRINT(EM_DIAGRAM):   END;
236904    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
236905    +*** Writing the Node H3x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x2_ ;
236906    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
236907    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
236908    +   H3x2_1  =    -1.46965147800397 * H2x1_1  +    -0.15489723855448 * H2x1_2 ;
MPRINT(EM_DIAGRAM):   H3x2_1 = -1.46965147800397 * H2x1_1 + -0.15489723855448 * H2x1_2 ;
236909    +   H3x2_1  = H3x2_1  +     0.91269334410481 * H2x2_1
236910    +          +     -0.0392976578726 * H2x2_2 ;
MPRINT(EM_DIAGRAM):   H3x2_1 = H3x2_1 + 0.91269334410481 * H2x2_1 + -0.0392976578726 * H2x2_2 ;
236911    +   H3x2_1  = H3x2_1  +    -1.07273740820729 * H2x3_1
236912    +          +    -1.32572907075931 * H2x3_2 ;
MPRINT(EM_DIAGRAM):   H3x2_1 = H3x2_1 + -1.07273740820729 * H2x3_1 + -1.32572907075931 * 
H2x3_2 ;
236913    +   H3x2_1  =     0.58690615295837 + H3x2_1 ;
MPRINT(EM_DIAGRAM):   H3x2_1 = 0.58690615295837 + H3x2_1 ;
236914    +   H3x2_2  = 0;
MPRINT(EM_DIAGRAM):   H3x2_2 = 0;
236915    +   _MAX_ = MAX (H3x2_1 , H3x2_2 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H3x2_1 , H3x2_2 );
236916    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
236917    +   H3x2_1  = EXP(H3x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x2_1 = EXP(H3x2_1 - _MAX_);
236918    +   _SUM_ = _SUM_ + H3x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x2_1 ;
236919    +   H3x2_2  = EXP(H3x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x2_2 = EXP(H3x2_2 - _MAX_);
236920    +   _SUM_ = _SUM_ + H3x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x2_2 ;
236921    +   H3x2_1  = H3x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x2_1 = H3x2_1 / _SUM_;
236922    +   H3x2_2  = H3x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x2_2 = H3x2_2 / _SUM_;
236923    +END;
MPRINT(EM_DIAGRAM):   END;
236924    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
236925    +   H3x2_1  = .;
MPRINT(EM_DIAGRAM):   H3x2_1 = .;
236926    +   H3x2_2  = .;
MPRINT(EM_DIAGRAM):   H3x2_2 = .;
236927    +END;
MPRINT(EM_DIAGRAM):   END;
236928    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
236929    +*** Writing the Node H4x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H4x1_ ;
236930    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
236931    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
236932    +   H4x1_1  =     2.98683826857579 * H3x1_1  +     -3.7943130439002 * H3x1_2 ;
MPRINT(EM_DIAGRAM):   H4x1_1 = 2.98683826857579 * H3x1_1 + -3.7943130439002 * H3x1_2 ;
236933    +   H4x1_1  = H4x1_1  +     -0.1130856885584 * H3x2_1
236934    +          +     0.90223250703174 * H3x2_2 ;
MPRINT(EM_DIAGRAM):   H4x1_1 = H4x1_1 + -0.1130856885584 * H3x2_1 + 0.90223250703174 * H3x2_2 ;
236935    +   H4x1_1  =     0.34321706022332 + H4x1_1 ;
MPRINT(EM_DIAGRAM):   H4x1_1 = 0.34321706022332 + H4x1_1 ;
236936    +   H4x1_2  = 0;
MPRINT(EM_DIAGRAM):   H4x1_2 = 0;
236937    +   _MAX_ = MAX (H4x1_1 , H4x1_2 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H4x1_1 , H4x1_2 );
236938    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
236939    +   H4x1_1  = EXP(H4x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H4x1_1 = EXP(H4x1_1 - _MAX_);
236940    +   _SUM_ = _SUM_ + H4x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H4x1_1 ;
236941    +   H4x1_2  = EXP(H4x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H4x1_2 = EXP(H4x1_2 - _MAX_);
236942    +   _SUM_ = _SUM_ + H4x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H4x1_2 ;
236943    +   H4x1_1  = H4x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H4x1_1 = H4x1_1 / _SUM_;
236944    +   H4x1_2  = H4x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H4x1_2 = H4x1_2 / _SUM_;
236945    +END;
MPRINT(EM_DIAGRAM):   END;
236946    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
236947    +   H4x1_1  = .;
MPRINT(EM_DIAGRAM):   H4x1_1 = .;
236948    +   H4x1_2  = .;
MPRINT(EM_DIAGRAM):   H4x1_2 = .;
236949    +END;
MPRINT(EM_DIAGRAM):   END;
236950    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
236951    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
236952    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
236953    +
236954    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
236955    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
236956    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
236957    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
236958    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
236959    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
236960    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
236961    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
236962    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
236963    +end;
MPRINT(EM_DIAGRAM):   end;
236964    +else do;
MPRINT(EM_DIAGRAM):   else do;
236965    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
236966    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
236967    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
236968    +   end;
MPRINT(EM_DIAGRAM):   end;
236969    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
236970    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
236971    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
236972    +   end;
MPRINT(EM_DIAGRAM):   end;
236973    +   else do;
MPRINT(EM_DIAGRAM):   else do;
236974    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
236975    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
236976    +   end;
MPRINT(EM_DIAGRAM):   end;
236977    +end;
MPRINT(EM_DIAGRAM):   end;
236978    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
236979    +   P_DepVar1  =     4.36647161522328 * H4x1_1  +    -5.83126986959915 * H4x1_2
236980    +         ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 4.36647161522328 * H4x1_1 + -5.83126986959915 * H4x1_2 ;
236981    +   P_DepVar1  =    -4.21364937441824 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -4.21364937441824 + P_DepVar1 ;
236982    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
236983    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
236984    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
236985    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
236986    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
236987    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
236988    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
236989    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
236990    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
236991    +END;
MPRINT(EM_DIAGRAM):   END;
236992    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
236993    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
236994    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
236995    +END;
MPRINT(EM_DIAGRAM):   END;
236996    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
236997    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
236998    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
236999    +END;
MPRINT(EM_DIAGRAM):   END;
237000    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
237001    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
237002    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
237003    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
237004    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
237005    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
237006    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
237007    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
237008    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
237009    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
237010    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
237011    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
237012    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
237013    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
237014    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
237015    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
237016    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
237017    +END;
MPRINT(EM_DIAGRAM):   END;
237018    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
237019    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
237020    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
237021    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
237022    +* Renaming variables for AutoNeural38;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural38;
237023    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
237024    +* Renaming Posterior variables for AutoNeural38;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural38;
237025    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
237026    +drop AutoNeural38_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural38_P_DepVar1;
237027    +AutoNeural38_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural38_P_DepVar1 = P_DepVar1;
237028    +drop AutoNeural38_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural38_P_DepVar0;
237029    +AutoNeural38_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural38_P_DepVar0 = P_DepVar0;
237030    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
237031    +* Renaming _WARN_ variable for AutoNeural38;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural38;
237032    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
237033    +length AutoNeural38_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural38_WARN_ $4;
237034    +drop AutoNeural38_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural38_WARN_;
237035    +AutoNeural38_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural38_WARN_ = _WARN_;
237036    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
237037    +* Ensmbl23: Scoring Code of model 3 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl23: Scoring Code of model 3 of 5;
237038    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
237039    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
237040    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
237041    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
237042    +* NODE: AutoNeural39;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural39;
237043    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
237044    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
237045    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
237046    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
237047    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
237048    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
237049    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
237050    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
237051    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
237052    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
237053    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
237054    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
237055    +LENGTH _WARN_ $4
237056    +      F_DepVar  $ 12
237057    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
237058    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
237059    +
237060    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
237061    +
237062    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
237063    +
237064    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
237065    +
237066    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
237067    +
237068    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
237069    +
237070    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
237071    +
237072    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
237073    +
237074    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
237075    +
237076    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
237077    +
237078    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
237079    +
237080    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
237081    +
237082    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
237083    +
237084    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
237085    +
237086    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
237087    +
237088    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
237089    +
237090    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
237091    +
237092    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
237093    +
237094    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
237095    +
237096    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
237097    +
237098    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
237099    +
237100    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
237101    +
237102    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
237103    +
237104    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
237105    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
237106    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
237107    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
237108    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
237109    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
237110    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
237111    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
237112    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
237113    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
237114    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
237115    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
237116    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
237117    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
237118    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
237119    +end;
MPRINT(EM_DIAGRAM):   end;
237120    +else do;
MPRINT(EM_DIAGRAM):   else do;
237121    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
237122    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
237123    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
237124    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
237125    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
237126    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
237127    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
237128    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
237129    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
237130    +         end;
MPRINT(EM_DIAGRAM):   end;
237131    +         else do;
MPRINT(EM_DIAGRAM):   else do;
237132    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
237133    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
237134    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
237135    +            end;
MPRINT(EM_DIAGRAM):   end;
237136    +         end;
MPRINT(EM_DIAGRAM):   end;
237137    +      end;
MPRINT(EM_DIAGRAM):   end;
237138    +      else do;
MPRINT(EM_DIAGRAM):   else do;
237139    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
237140    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
237141    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
237142    +         end;
MPRINT(EM_DIAGRAM):   end;
237143    +      end;
MPRINT(EM_DIAGRAM):   end;
237144    +   end;
MPRINT(EM_DIAGRAM):   end;
237145    +   else do;
MPRINT(EM_DIAGRAM):   else do;
237146    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
237147    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
237148    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
237149    +      end;
MPRINT(EM_DIAGRAM):   end;
237150    +      else do;
MPRINT(EM_DIAGRAM):   else do;
237151    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
237152    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
237153    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
237154    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
237155    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
237156    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
237157    +         end;
MPRINT(EM_DIAGRAM):   end;
237158    +      end;
MPRINT(EM_DIAGRAM):   end;
237159    +   end;
MPRINT(EM_DIAGRAM):   end;
237160    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
237161    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
237162    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
237163    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
237164    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
237165    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
237166    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
237167    +   end;
MPRINT(EM_DIAGRAM):   end;
237168    +end;
MPRINT(EM_DIAGRAM):   end;
237169    +
237170    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
237171    +*** Checking missing input Interval
237172    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
237173    +
237174    +IF NMISS(
237175    +   AcceptedCmpTotal ,
237176    +   Frq ,
237177    +   Mnt ,
237178    +   MntMeatProducts ,
237179    +   NumCatalogPurchases ,
237180    +   NumDealsPurchases ,
237181    +   NumWebVisitsMonth ,
237182    +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Mnt , MntMeatProducts , 
NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , Recency ) THEN DO;
237183    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
237184    +
237185    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
237186    +END;
MPRINT(EM_DIAGRAM):   END;
237187    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
237188    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
237189    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
237190    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
237191    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
237192    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
237193    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
237194    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
237195    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
237196    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
237197    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
237198    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
237199    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
237200    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
237201    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
237202    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
237203    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
237204    +END;
MPRINT(EM_DIAGRAM):   END;
237205    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
237206    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
237207    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
237208    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
237209    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
237210    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
237211    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
237212    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
237213    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
237214    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
237215    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
237216    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
237217    +   ELSE S_NumCatalogPurchases
237218    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
237219    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
237220    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
237221    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
237222    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
237223    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
237224    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
237225    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
237226    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
237227    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
237228    +END;
MPRINT(EM_DIAGRAM):   END;
237229    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
237230    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
237231    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
237232    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
237233    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
237234    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
237235    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
237236    +   H1x1_1  =    -0.80144597199591 * S_AcceptedCmpTotal
237237    +          +    -0.14504406751843 * S_Frq  +    -0.94059273072385 * S_Mnt
237238    +          +     0.02561809182055 * S_MntMeatProducts
237239    +          +     -0.1793288912734 * S_NumCatalogPurchases
237240    +          +    -0.37563080213093 * S_NumDealsPurchases
237241    +          +    -0.48858578777845 * S_NumWebVisitsMonth
237242    +          +     1.20680693155412 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.80144597199591 * S_AcceptedCmpTotal + -0.14504406751843 * 
S_Frq + -0.94059273072385 * S_Mnt + 0.02561809182055 * S_MntMeatProducts + -0.1793288912734 * 
S_NumCatalogPurchases + -0.37563080213093 * S_NumDealsPurchases + -0.48858578777845 * 
S_NumWebVisitsMonth + 1.20680693155412 * S_Recency ;
237243    +   H1x1_2  =    -0.07420266838621 * S_AcceptedCmpTotal
237244    +          +    -0.45831074090349 * S_Frq  +     0.54967451479719 * S_Mnt
237245    +          +     1.94302986779634 * S_MntMeatProducts
237246    +          +      0.2669037763846 * S_NumCatalogPurchases
237247    +          +     0.29313104233947 * S_NumDealsPurchases
237248    +          +    -0.30591479309812 * S_NumWebVisitsMonth
237249    +          +     0.25821520617291 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.07420266838621 * S_AcceptedCmpTotal + -0.45831074090349 * 
S_Frq + 0.54967451479719 * S_Mnt + 1.94302986779634 * S_MntMeatProducts + 0.2669037763846 * 
S_NumCatalogPurchases + 0.29313104233947 * S_NumDealsPurchases + -0.30591479309812 * 
S_NumWebVisitsMonth + 0.25821520617291 * S_Recency ;
237250    +   H1x1_3  =    -0.12066404689072 * S_AcceptedCmpTotal
237251    +          +     0.68455759852245 * S_Frq  +     1.21976572320843 * S_Mnt
237252    +          +    -0.76055629383789 * S_MntMeatProducts
237253    +          +    -0.40114802991127 * S_NumCatalogPurchases
237254    +          +    -1.12215966034372 * S_NumDealsPurchases
237255    +          +    -0.30978133586417 * S_NumWebVisitsMonth
237256    +          +     0.20549481777473 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.12066404689072 * S_AcceptedCmpTotal + 0.68455759852245 * 
S_Frq + 1.21976572320843 * S_Mnt + -0.76055629383789 * S_MntMeatProducts + -0.40114802991127 * 
S_NumCatalogPurchases + -1.12215966034372 * S_NumDealsPurchases + -0.30978133586417 * 
S_NumWebVisitsMonth + 0.20549481777473 * S_Recency ;
237257    +   H1x1_1  = H1x1_1  +     0.27293780318455 * Marital_StatusDivorced
237258    +          +     0.20445663414925 * Marital_StatusMarried
237259    +          +     0.16369117386202 * Marital_StatusSingle
237260    +          +     0.24678692955726 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.27293780318455 * Marital_StatusDivorced + 
0.20445663414925 * Marital_StatusMarried + 0.16369117386202 * Marital_StatusSingle + 
0.24678692955726 * Marital_StatusTogether ;
237261    +   H1x1_2  = H1x1_2  +    -0.36629769700975 * Marital_StatusDivorced
237262    +          +     0.09645374599508 * Marital_StatusMarried
237263    +          +     -0.0816282741981 * Marital_StatusSingle
237264    +          +       0.097160394807 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.36629769700975 * Marital_StatusDivorced + 
0.09645374599508 * Marital_StatusMarried + -0.0816282741981 * Marital_StatusSingle + 
0.097160394807 * Marital_StatusTogether ;
237265    +   H1x1_3  = H1x1_3  +     1.07910879572923 * Marital_StatusDivorced
237266    +          +     -3.9031880089591 * Marital_StatusMarried
237267    +          +      1.6995748309328 * Marital_StatusSingle
237268    +          +    -0.60356952072267 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 1.07910879572923 * Marital_StatusDivorced + 
-3.9031880089591 * Marital_StatusMarried + 1.6995748309328 * Marital_StatusSingle + 
-0.60356952072267 * Marital_StatusTogether ;
237269    +   H1x1_1  =     4.12951833926199 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 4.12951833926199 + H1x1_1 ;
237270    +   H1x1_2  =      2.8051459955517 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 2.8051459955517 + H1x1_2 ;
237271    +   H1x1_3  =    -4.02151507937085 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -4.02151507937085 + H1x1_3 ;
237272    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
237273    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
237274    +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
237275    +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
237276    +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
237277    +END;
MPRINT(EM_DIAGRAM):   END;
237278    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
237279    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
237280    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
237281    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
237282    +END;
MPRINT(EM_DIAGRAM):   END;
237283    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
237284    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
237285    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
237286    +
237287    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
237288    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
237289    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
237290    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
237291    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
237292    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
237293    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
237294    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
237295    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
237296    +end;
MPRINT(EM_DIAGRAM):   end;
237297    +else do;
MPRINT(EM_DIAGRAM):   else do;
237298    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
237299    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
237300    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
237301    +   end;
MPRINT(EM_DIAGRAM):   end;
237302    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
237303    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
237304    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
237305    +   end;
MPRINT(EM_DIAGRAM):   end;
237306    +   else do;
MPRINT(EM_DIAGRAM):   else do;
237307    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
237308    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
237309    +   end;
MPRINT(EM_DIAGRAM):   end;
237310    +end;
MPRINT(EM_DIAGRAM):   end;
237311    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
237312    +   P_DepVar1  =    -49.7324855017185 * H1x1_1  +     60.9087770313173 * H1x1_2
237313    +          +     44.7070762374356 * H1x1_3 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -49.7324855017185 * H1x1_1 + 60.9087770313173 * H1x1_2 + 
44.7070762374356 * H1x1_3 ;
237314    +   P_DepVar1  =    -18.5106107755559 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -18.5106107755559 + P_DepVar1 ;
237315    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
237316    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
237317    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
237318    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
237319    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
237320    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
237321    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
237322    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
237323    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
237324    +END;
MPRINT(EM_DIAGRAM):   END;
237325    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
237326    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
237327    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
237328    +END;
MPRINT(EM_DIAGRAM):   END;
237329    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
237330    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
237331    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
237332    +END;
MPRINT(EM_DIAGRAM):   END;
237333    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
237334    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
237335    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
237336    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
237337    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
237338    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
237339    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
237340    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
237341    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
237342    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
237343    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
237344    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
237345    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
237346    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
237347    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
237348    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
237349    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
237350    +END;
MPRINT(EM_DIAGRAM):   END;
237351    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
237352    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
237353    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
237354    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
237355    +* Renaming variables for AutoNeural39;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural39;
237356    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
237357    +* Renaming Posterior variables for AutoNeural39;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural39;
237358    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
237359    +drop AutoNeural39_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural39_P_DepVar1;
237360    +AutoNeural39_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural39_P_DepVar1 = P_DepVar1;
237361    +drop AutoNeural39_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural39_P_DepVar0;
237362    +AutoNeural39_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural39_P_DepVar0 = P_DepVar0;
237363    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
237364    +* Renaming _WARN_ variable for AutoNeural39;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural39;
237365    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
237366    +length AutoNeural39_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural39_WARN_ $4;
237367    +drop AutoNeural39_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural39_WARN_;
237368    +AutoNeural39_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural39_WARN_ = _WARN_;
237369    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
237370    +* Ensmbl23: Scoring Code of model 4 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl23: Scoring Code of model 4 of 5;
237371    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
237372    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
237373    +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
237374    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
237375    +* NODE: Neural41;
MPRINT(EM_DIAGRAM):   * NODE: Neural41;
237376    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
237377    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
237378    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
237379    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
237380    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
237381    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
237382    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
237383    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
237384    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
237385    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
237386    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
237387    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
237388    +LENGTH _WARN_ $4
237389    +      F_DepVar  $ 12
237390    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
237391    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
237392    +
237393    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
237394    +
237395    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
237396    +
237397    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
237398    +
237399    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
237400    +
237401    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
237402    +
237403    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
237404    +
237405    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
237406    +
237407    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
237408    +
237409    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
237410    +
237411    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
237412    +
237413    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
237414    +
237415    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
237416    +
237417    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
237418    +
237419    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
237420    +
237421    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
237422    +
237423    +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
237424    +
237425    +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
237426    +
237427    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
237428    +
237429    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
237430    +
237431    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
237432    +
237433    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
237434    +
237435    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
237436    +
237437    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
237438    +
237439    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
237440    +
237441    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
237442    +
237443    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
237444    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
237445    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
237446    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
237447    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
237448    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
237449    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
237450    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
237451    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
237452    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
237453    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
237454    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
237455    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
237456    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
237457    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
237458    +end;
MPRINT(EM_DIAGRAM):   end;
237459    +else do;
MPRINT(EM_DIAGRAM):   else do;
237460    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
237461    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
237462    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
237463    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
237464    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
237465    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
237466    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
237467    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
237468    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
237469    +         end;
MPRINT(EM_DIAGRAM):   end;
237470    +         else do;
MPRINT(EM_DIAGRAM):   else do;
237471    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
237472    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
237473    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
237474    +            end;
MPRINT(EM_DIAGRAM):   end;
237475    +         end;
MPRINT(EM_DIAGRAM):   end;
237476    +      end;
MPRINT(EM_DIAGRAM):   end;
237477    +      else do;
MPRINT(EM_DIAGRAM):   else do;
237478    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
237479    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
237480    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
237481    +         end;
MPRINT(EM_DIAGRAM):   end;
237482    +      end;
MPRINT(EM_DIAGRAM):   end;
237483    +   end;
MPRINT(EM_DIAGRAM):   end;
237484    +   else do;
MPRINT(EM_DIAGRAM):   else do;
237485    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
237486    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
237487    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
237488    +      end;
MPRINT(EM_DIAGRAM):   end;
237489    +      else do;
MPRINT(EM_DIAGRAM):   else do;
237490    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
237491    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
237492    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
237493    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
237494    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
237495    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
237496    +         end;
MPRINT(EM_DIAGRAM):   end;
237497    +      end;
MPRINT(EM_DIAGRAM):   end;
237498    +   end;
MPRINT(EM_DIAGRAM):   end;
237499    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
237500    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
237501    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
237502    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
237503    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
237504    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
237505    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
237506    +   end;
MPRINT(EM_DIAGRAM):   end;
237507    +end;
MPRINT(EM_DIAGRAM):   end;
237508    +
237509    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
237510    +*** Checking missing input Interval
237511    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
237512    +
237513    +IF NMISS(
237514    +   AcceptedCmpTotal ,
237515    +   Frq ,
237516    +   Mnt ,
237517    +   MntMeatProducts ,
237518    +   NumCatalogPurchases ,
237519    +   NumDealsPurchases ,
237520    +   NumWebVisitsMonth ,
237521    +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Mnt , MntMeatProducts , 
NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , Recency ) THEN DO;
237522    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
237523    +
237524    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
237525    +END;
MPRINT(EM_DIAGRAM):   END;
237526    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
237527    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
237528    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
237529    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
237530    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
237531    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
237532    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
237533    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
237534    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
237535    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
237536    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
237537    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
237538    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
237539    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
237540    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
237541    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
237542    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
237543    +END;
MPRINT(EM_DIAGRAM):   END;
237544    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
237545    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
237546    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
237547    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
237548    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
237549    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
237550    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
237551    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
237552    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
237553    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
237554    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
237555    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
237556    +   ELSE S_NumCatalogPurchases
237557    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
237558    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
237559    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
237560    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
237561    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
237562    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
237563    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
237564    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
237565    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
237566    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
237567    +END;
MPRINT(EM_DIAGRAM):   END;
237568    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
237569    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
237570    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
237571    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
237572    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
237573    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
237574    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
237575    +   H11  =    -0.41170995389365 * S_AcceptedCmpTotal  +     0.95675776354898 *
237576    +        S_Frq  +     0.79241767524066 * S_Mnt  +    -1.11291951115769 *
237577    +        S_MntMeatProducts  +    -0.81016243357955 * S_NumCatalogPurchases
237578    +          +    -0.06020302160033 * S_NumDealsPurchases
237579    +          +    -0.72187271327886 * S_NumWebVisitsMonth
237580    +          +     0.63072705601805 * S_Recency ;
MPRINT(EM_DIAGRAM):   H11 = -0.41170995389365 * S_AcceptedCmpTotal + 0.95675776354898 * S_Frq 
+ 0.79241767524066 * S_Mnt + -1.11291951115769 * S_MntMeatProducts + -0.81016243357955 * 
S_NumCatalogPurchases + -0.06020302160033 * S_NumDealsPurchases + -0.72187271327886 * 
S_NumWebVisitsMonth + 0.63072705601805 * S_Recency ;
237581    +   H12  =     0.16845165387856 * S_AcceptedCmpTotal  +     0.13952140472368 *
237582    +        S_Frq  +    -0.49680297454001 * S_Mnt  +     0.20077884768409 *
237583    +        S_MntMeatProducts  +    -0.26509457206436 * S_NumCatalogPurchases
237584    +          +     0.44023370306786 * S_NumDealsPurchases
237585    +          +     0.14437092902564 * S_NumWebVisitsMonth
237586    +          +     0.29830280717193 * S_Recency ;
MPRINT(EM_DIAGRAM):   H12 = 0.16845165387856 * S_AcceptedCmpTotal + 0.13952140472368 * S_Frq + 
-0.49680297454001 * S_Mnt + 0.20077884768409 * S_MntMeatProducts + -0.26509457206436 * 
S_NumCatalogPurchases + 0.44023370306786 * S_NumDealsPurchases + 0.14437092902564 * 
S_NumWebVisitsMonth + 0.29830280717193 * S_Recency ;
237587    +   H13  =     0.17736973005738 * S_AcceptedCmpTotal  +    -1.27691889541485 *
237588    +        S_Frq  +     0.76151337613405 * S_Mnt  +     2.91913897431534 *
237589    +        S_MntMeatProducts  +     0.91968924804036 * S_NumCatalogPurchases
237590    +          +     0.36494720404815 * S_NumDealsPurchases
237591    +          +     0.03877838723538 * S_NumWebVisitsMonth
237592    +          +    -0.07783339271235 * S_Recency ;
MPRINT(EM_DIAGRAM):   H13 = 0.17736973005738 * S_AcceptedCmpTotal + -1.27691889541485 * S_Frq 
+ 0.76151337613405 * S_Mnt + 2.91913897431534 * S_MntMeatProducts + 0.91968924804036 * 
S_NumCatalogPurchases + 0.36494720404815 * S_NumDealsPurchases + 0.03877838723538 * 
S_NumWebVisitsMonth + -0.07783339271235 * S_Recency ;
237593    +   H14  =     0.06585247678486 * S_AcceptedCmpTotal  +     2.38872321291933 *
237594    +        S_Frq  +     0.55261122983069 * S_Mnt  +    -0.92412810336036 *
237595    +        S_MntMeatProducts  +    -0.85761594899144 * S_NumCatalogPurchases
237596    +          +    -0.87171784420951 * S_NumDealsPurchases
237597    +          +     0.27077171192055 * S_NumWebVisitsMonth
237598    +          +     0.44529508014227 * S_Recency ;
MPRINT(EM_DIAGRAM):   H14 = 0.06585247678486 * S_AcceptedCmpTotal + 2.38872321291933 * S_Frq + 
0.55261122983069 * S_Mnt + -0.92412810336036 * S_MntMeatProducts + -0.85761594899144 * 
S_NumCatalogPurchases + -0.87171784420951 * S_NumDealsPurchases + 0.27077171192055 * 
S_NumWebVisitsMonth + 0.44529508014227 * S_Recency ;
237599    +   H15  =     0.79261864023919 * S_AcceptedCmpTotal  +     0.22408033839661 *
237600    +        S_Frq  +     0.41205750844428 * S_Mnt  +    -0.05167252147978 *
237601    +        S_MntMeatProducts  +     0.52437372576463 * S_NumCatalogPurchases
237602    +          +    -0.02694744085713 * S_NumDealsPurchases
237603    +          +     0.42930866809604 * S_NumWebVisitsMonth
237604    +          +    -1.23356204218313 * S_Recency ;
MPRINT(EM_DIAGRAM):   H15 = 0.79261864023919 * S_AcceptedCmpTotal + 0.22408033839661 * S_Frq + 
0.41205750844428 * S_Mnt + -0.05167252147978 * S_MntMeatProducts + 0.52437372576463 * 
S_NumCatalogPurchases + -0.02694744085713 * S_NumDealsPurchases + 0.42930866809604 * 
S_NumWebVisitsMonth + -1.23356204218313 * S_Recency ;
237605    +   H16  =     0.07557739377714 * S_AcceptedCmpTotal  +     0.06732498402011 *
237606    +        S_Frq  +     1.00949697256114 * S_Mnt  +     0.18190372979158 *
237607    +        S_MntMeatProducts  +    -0.20994714743436 * S_NumCatalogPurchases
237608    +          +     1.91827561352967 * S_NumDealsPurchases
237609    +          +    -0.65112089304736 * S_NumWebVisitsMonth
237610    +          +     0.94688864667779 * S_Recency ;
MPRINT(EM_DIAGRAM):   H16 = 0.07557739377714 * S_AcceptedCmpTotal + 0.06732498402011 * S_Frq + 
1.00949697256114 * S_Mnt + 0.18190372979158 * S_MntMeatProducts + -0.20994714743436 * 
S_NumCatalogPurchases + 1.91827561352967 * S_NumDealsPurchases + -0.65112089304736 * 
S_NumWebVisitsMonth + 0.94688864667779 * S_Recency ;
237611    +   H11  = H11  +    -0.41944609131662 * Marital_StatusDivorced
237612    +          +     0.19571272479408 * Marital_StatusMarried
237613    +          +    -0.16061908960963 * Marital_StatusSingle
237614    +          +     0.01147019501849 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.41944609131662 * Marital_StatusDivorced + 
0.19571272479408 * Marital_StatusMarried + -0.16061908960963 * Marital_StatusSingle + 
0.01147019501849 * Marital_StatusTogether ;
237615    +   H12  = H12  +    -0.70326037460175 * Marital_StatusDivorced
237616    +          +    -0.64968872046859 * Marital_StatusMarried
237617    +          +     1.81995301340231 * Marital_StatusSingle
237618    +          +    -1.25679526739636 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.70326037460175 * Marital_StatusDivorced + 
-0.64968872046859 * Marital_StatusMarried + 1.81995301340231 * Marital_StatusSingle + 
-1.25679526739636 * Marital_StatusTogether ;
237619    +   H13  = H13  +    -0.50413590013638 * Marital_StatusDivorced
237620    +          +     0.19296467458933 * Marital_StatusMarried
237621    +          +     -0.2295693568996 * Marital_StatusSingle
237622    +          +     0.51095451752525 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.50413590013638 * Marital_StatusDivorced + 
0.19296467458933 * Marital_StatusMarried + -0.2295693568996 * Marital_StatusSingle + 
0.51095451752525 * Marital_StatusTogether ;
237623    +   H14  = H14  +    -0.93810483419419 * Marital_StatusDivorced
237624    +          +    -0.12318541826308 * Marital_StatusMarried
237625    +          +    -0.02882902763243 * Marital_StatusSingle
237626    +          +      0.9552700390789 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.93810483419419 * Marital_StatusDivorced + 
-0.12318541826308 * Marital_StatusMarried + -0.02882902763243 * Marital_StatusSingle + 
0.9552700390789 * Marital_StatusTogether ;
237627    +   H15  = H15  +    -0.16315275571793 * Marital_StatusDivorced
237628    +          +    -0.65544681605691 * Marital_StatusMarried
237629    +          +     0.31269236164873 * Marital_StatusSingle
237630    +          +    -0.37135201633747 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.16315275571793 * Marital_StatusDivorced + 
-0.65544681605691 * Marital_StatusMarried + 0.31269236164873 * Marital_StatusSingle + 
-0.37135201633747 * Marital_StatusTogether ;
237631    +   H16  = H16  +    -0.47177568566677 * Marital_StatusDivorced
237632    +          +     0.12269709457787 * Marital_StatusMarried
237633    +          +     0.37106402586008 * Marital_StatusSingle
237634    +          +     0.07580816063395 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + -0.47177568566677 * Marital_StatusDivorced + 
0.12269709457787 * Marital_StatusMarried + 0.37106402586008 * Marital_StatusSingle + 
0.07580816063395 * Marital_StatusTogether ;
237635    +   H11  =     0.87814553506559 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.87814553506559 + H11 ;
237636    +   H12  =     1.18416285607678 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 1.18416285607678 + H12 ;
237637    +   H13  =     1.86220379911993 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 1.86220379911993 + H13 ;
237638    +   H14  =     1.79999645343103 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 1.79999645343103 + H14 ;
237639    +   H15  =    -2.95745585057281 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -2.95745585057281 + H15 ;
237640    +   H16  =    -0.63040593626724 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -0.63040593626724 + H16 ;
237641    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
237642    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
237643    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
237644    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
237645    +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
237646    +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
237647    +END;
MPRINT(EM_DIAGRAM):   END;
237648    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
237649    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
237650    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
237651    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
237652    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
237653    +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
237654    +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
237655    +END;
MPRINT(EM_DIAGRAM):   END;
237656    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
237657    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
237658    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
237659    +
237660    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
237661    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
237662    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
237663    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
237664    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
237665    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
237666    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
237667    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
237668    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
237669    +end;
MPRINT(EM_DIAGRAM):   end;
237670    +else do;
MPRINT(EM_DIAGRAM):   else do;
237671    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
237672    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
237673    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
237674    +   end;
MPRINT(EM_DIAGRAM):   end;
237675    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
237676    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
237677    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
237678    +   end;
MPRINT(EM_DIAGRAM):   end;
237679    +   else do;
MPRINT(EM_DIAGRAM):   else do;
237680    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
237681    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
237682    +   end;
MPRINT(EM_DIAGRAM):   end;
237683    +end;
MPRINT(EM_DIAGRAM):   end;
237684    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
237685    +   P_DepVar1  =    -5.78936073221603 * H11  +     3.14966455677413 * H12
237686    +          +     7.03853349374163 * H13  +    -2.45391654583749 * H14
237687    +          +     4.80213644089029 * H15  +    -1.60369759544804 * H16 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -5.78936073221603 * H11 + 3.14966455677413 * H12 + 
7.03853349374163 * H13 + -2.45391654583749 * H14 + 4.80213644089029 * H15 + -1.60369759544804 
* H16 ;
237688    +   P_DepVar1  =    -1.95361942474066 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.95361942474066 + P_DepVar1 ;
237689    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
237690    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
237691    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
237692    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
237693    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
237694    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
237695    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
237696    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
237697    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
237698    +END;
MPRINT(EM_DIAGRAM):   END;
237699    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
237700    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
237701    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
237702    +END;
MPRINT(EM_DIAGRAM):   END;
237703    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
237704    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
237705    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
237706    +END;
MPRINT(EM_DIAGRAM):   END;
237707    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
237708    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
237709    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
237710    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
237711    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
237712    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
237713    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
237714    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
237715    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
237716    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
237717    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
237718    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
237719    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
237720    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
237721    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
237722    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
237723    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
237724    +END;
MPRINT(EM_DIAGRAM):   END;
237725    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
237726    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
237727    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
237728    +drop
237729    +H11
237730    +H12
237731    +H13
237732    +H14
237733    +H15
237734    +H16
237735    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 ;
237736    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
237737    +* Renaming variables for Neural41;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural41;
237738    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
237739    +* Renaming Posterior variables for Neural41;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural41;
237740    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
237741    +drop Neural41_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural41_P_DepVar1;
237742    +Neural41_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural41_P_DepVar1 = P_DepVar1;
237743    +drop Neural41_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural41_P_DepVar0;
237744    +Neural41_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural41_P_DepVar0 = P_DepVar0;
237745    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
237746    +* Renaming _WARN_ variable for Neural41;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural41;
237747    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
237748    +length Neural41_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural41_WARN_ $4;
237749    +drop Neural41_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural41_WARN_;
237750    +Neural41_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural41_WARN_ = _WARN_;
237751    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
237752    +* Ensmbl23: Scoring Code of model 5 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl23: Scoring Code of model 5 of 5;
237753    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
237754    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
237755    +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
237756    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
237757    +* NODE: Neural39;
MPRINT(EM_DIAGRAM):   * NODE: Neural39;
237758    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
237759    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
237760    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
237761    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
237762    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
237763    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
237764    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
237765    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
237766    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
237767    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
237768    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
237769    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
237770    +LENGTH _WARN_ $4
237771    +      F_DepVar  $ 12
237772    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
237773    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
237774    +
237775    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
237776    +
237777    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
237778    +
237779    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
237780    +
237781    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
237782    +
237783    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
237784    +
237785    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
237786    +
237787    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
237788    +
237789    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
237790    +
237791    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
237792    +
237793    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
237794    +
237795    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
237796    +
237797    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
237798    +
237799    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
237800    +
237801    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
237802    +
237803    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
237804    +
237805    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
237806    +
237807    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
237808    +
237809    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
237810    +
237811    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
237812    +
237813    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
237814    +
237815    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
237816    +
237817    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
237818    +
237819    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
237820    +
237821    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
237822    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
237823    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
237824    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
237825    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
237826    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
237827    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
237828    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
237829    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
237830    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
237831    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
237832    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
237833    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
237834    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
237835    +   _DM_BAD = 1;
The SAS System

MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
237836    +end;
MPRINT(EM_DIAGRAM):   end;
237837    +else do;
MPRINT(EM_DIAGRAM):   else do;
237838    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
237839    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
237840    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
237841    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
237842    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
237843    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
237844    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
237845    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
237846    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
237847    +         end;
MPRINT(EM_DIAGRAM):   end;
237848    +         else do;
MPRINT(EM_DIAGRAM):   else do;
237849    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
237850    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
237851    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
237852    +            end;
MPRINT(EM_DIAGRAM):   end;
237853    +         end;
MPRINT(EM_DIAGRAM):   end;
237854    +      end;
MPRINT(EM_DIAGRAM):   end;
237855    +      else do;
MPRINT(EM_DIAGRAM):   else do;
237856    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
237857    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
237858    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
237859    +         end;
MPRINT(EM_DIAGRAM):   end;
237860    +      end;
MPRINT(EM_DIAGRAM):   end;
237861    +   end;
MPRINT(EM_DIAGRAM):   end;
237862    +   else do;
MPRINT(EM_DIAGRAM):   else do;
237863    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
237864    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
237865    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
237866    +      end;
MPRINT(EM_DIAGRAM):   end;
237867    +      else do;
MPRINT(EM_DIAGRAM):   else do;
237868    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
237869    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
237870    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
237871    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
237872    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
237873    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
237874    +         end;
MPRINT(EM_DIAGRAM):   end;
237875    +      end;
MPRINT(EM_DIAGRAM):   end;
237876    +   end;
MPRINT(EM_DIAGRAM):   end;
237877    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
237878    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
237879    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
237880    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
237881    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
237882    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
237883    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
237884    +   end;
MPRINT(EM_DIAGRAM):   end;
237885    +end;
MPRINT(EM_DIAGRAM):   end;
237886    +
237887    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
237888    +*** Checking missing input Interval
237889    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
237890    +
237891    +IF NMISS(
237892    +   AcceptedCmpTotal ,
237893    +   Frq ,
237894    +   Mnt ,
237895    +   MntMeatProducts ,
237896    +   NumCatalogPurchases ,
237897    +   NumDealsPurchases ,
237898    +   NumWebVisitsMonth ,
237899    +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Mnt , MntMeatProducts , 
NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , Recency ) THEN DO;
237900    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
237901    +
237902    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
237903    +END;
MPRINT(EM_DIAGRAM):   END;
237904    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
237905    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
237906    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
237907    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
237908    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
237909    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
237910    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
237911    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
237912    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
237913    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
237914    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
237915    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
237916    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
237917    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
237918    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
237919    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
237920    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
237921    +END;
MPRINT(EM_DIAGRAM):   END;
237922    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
237923    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
237924    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
237925    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
237926    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
237927    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
237928    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
237929    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
237930    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
237931    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
237932    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
237933    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
237934    +   ELSE S_NumCatalogPurchases
237935    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
237936    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
237937    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
237938    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
237939    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
237940    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
237941    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
237942    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
237943    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
237944    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
237945    +END;
MPRINT(EM_DIAGRAM):   END;
237946    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
237947    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
237948    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
237949    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
237950    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
237951    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
237952    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
237953    +   H11  =     0.32071869925611 * S_AcceptedCmpTotal  +    -1.18627222732428 *
237954    +        S_Frq  +     0.00967528650049 * S_Mnt  +     0.53945968152118 *
237955    +        S_MntMeatProducts  +     0.76096876406469 * S_NumCatalogPurchases
237956    +          +       0.868651674737 * S_NumDealsPurchases
237957    +          +     0.56519310644826 * S_NumWebVisitsMonth
237958    +          +    -0.85354176662475 * S_Recency ;
MPRINT(EM_DIAGRAM):   H11 = 0.32071869925611 * S_AcceptedCmpTotal + -1.18627222732428 * S_Frq 
+ 0.00967528650049 * S_Mnt + 0.53945968152118 * S_MntMeatProducts + 0.76096876406469 * 
S_NumCatalogPurchases + 0.868651674737 * S_NumDealsPurchases + 0.56519310644826 * 
S_NumWebVisitsMonth + -0.85354176662475 * S_Recency ;
237959    +   H12  =    -0.53760783840514 * S_AcceptedCmpTotal  +    -0.10887355535928 *
237960    +        S_Frq  +     0.25951462601453 * S_Mnt  +    -0.54343784484503 *
237961    +        S_MntMeatProducts  +    -0.74697447632011 * S_NumCatalogPurchases
237962    +          +     0.22588169231784 * S_NumDealsPurchases
237963    +          +    -0.50349429270665 * S_NumWebVisitsMonth
237964    +          +     0.94913855646928 * S_Recency ;
MPRINT(EM_DIAGRAM):   H12 = -0.53760783840514 * S_AcceptedCmpTotal + -0.10887355535928 * S_Frq 
+ 0.25951462601453 * S_Mnt + -0.54343784484503 * S_MntMeatProducts + -0.74697447632011 * 
S_NumCatalogPurchases + 0.22588169231784 * S_NumDealsPurchases + -0.50349429270665 * 
S_NumWebVisitsMonth + 0.94913855646928 * S_Recency ;
237965    +   H13  =    -0.49808738781134 * S_AcceptedCmpTotal  +     0.75871743128278 *
237966    +        S_Frq  +     0.92783231668315 * S_Mnt  +    -0.72994432129905 *
237967    +        S_MntMeatProducts  +    -0.41911874339248 * S_NumCatalogPurchases
237968    +          +     0.38270609344543 * S_NumDealsPurchases
237969    +          +    -0.67911374483005 * S_NumWebVisitsMonth
237970    +          +     0.62959851233589 * S_Recency ;
MPRINT(EM_DIAGRAM):   H13 = -0.49808738781134 * S_AcceptedCmpTotal + 0.75871743128278 * S_Frq 
+ 0.92783231668315 * S_Mnt + -0.72994432129905 * S_MntMeatProducts + -0.41911874339248 * 
S_NumCatalogPurchases + 0.38270609344543 * S_NumDealsPurchases + -0.67911374483005 * 
S_NumWebVisitsMonth + 0.62959851233589 * S_Recency ;
237971    +   H14  =    -0.36477606348735 * S_AcceptedCmpTotal  +     1.38796327523044 *
237972    +        S_Frq  +     0.07887052944027 * S_Mnt  +    -2.27327070721147 *
237973    +        S_MntMeatProducts  +    -1.42807558393601 * S_NumCatalogPurchases
237974    +          +    -0.27211575710638 * S_NumDealsPurchases
237975    +          +    -0.27365412530976 * S_NumWebVisitsMonth
237976    +          +     0.25676979915144 * S_Recency ;
MPRINT(EM_DIAGRAM):   H14 = -0.36477606348735 * S_AcceptedCmpTotal + 1.38796327523044 * S_Frq 
+ 0.07887052944027 * S_Mnt + -2.27327070721147 * S_MntMeatProducts + -1.42807558393601 * 
S_NumCatalogPurchases + -0.27211575710638 * S_NumDealsPurchases + -0.27365412530976 * 
S_NumWebVisitsMonth + 0.25676979915144 * S_Recency ;
237977    +   H11  = H11  +    -0.10986134340688 * Marital_StatusDivorced
237978    +          +     0.26671394907331 * Marital_StatusMarried
237979    +          +    -0.21412689047791 * Marital_StatusSingle
237980    +          +      0.0878866166131 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.10986134340688 * Marital_StatusDivorced + 
0.26671394907331 * Marital_StatusMarried + -0.21412689047791 * Marital_StatusSingle + 
0.0878866166131 * Marital_StatusTogether ;
237981    +   H12  = H12  +     0.57822808683392 * Marital_StatusDivorced
237982    +          +      0.8828544386185 * Marital_StatusMarried
237983    +          +    -0.82952673399486 * Marital_StatusSingle
237984    +          +     0.54925647255359 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.57822808683392 * Marital_StatusDivorced + 0.8828544386185 
* Marital_StatusMarried + -0.82952673399486 * Marital_StatusSingle + 0.54925647255359 * 
Marital_StatusTogether ;
237985    +   H13  = H13  +    -0.79896029123713 * Marital_StatusDivorced
237986    +          +     0.43581055671108 * Marital_StatusMarried
237987    +          +    -0.37028703904727 * Marital_StatusSingle
237988    +          +     0.68190263239907 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.79896029123713 * Marital_StatusDivorced + 
0.43581055671108 * Marital_StatusMarried + -0.37028703904727 * Marital_StatusSingle + 
0.68190263239907 * Marital_StatusTogether ;
237989    +   H14  = H14  +     0.00414219307385 * Marital_StatusDivorced
237990    +          +     -0.1219875250835 * Marital_StatusMarried
237991    +          +    -0.01813173038471 * Marital_StatusSingle
237992    +          +    -0.20940808240309 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.00414219307385 * Marital_StatusDivorced + -0.1219875250835 
* Marital_StatusMarried + -0.01813173038471 * Marital_StatusSingle + -0.20940808240309 * 
Marital_StatusTogether ;
237993    +   H11  =    -2.24986706948705 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -2.24986706948705 + H11 ;
237994    +   H12  =     2.55250334233636 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 2.55250334233636 + H12 ;
237995    +   H13  =    -0.36139954012771 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.36139954012771 + H13 ;
237996    +   H14  =    -0.78789859340386 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -0.78789859340386 + H14 ;
237997    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
237998    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
237999    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
238000    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
238001    +END;
MPRINT(EM_DIAGRAM):   END;
238002    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
238003    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
238004    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
238005    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
238006    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
238007    +END;
MPRINT(EM_DIAGRAM):   END;
238008    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
238009    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
238010    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
238011    +
238012    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
238013    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
238014    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
238015    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
238016    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
238017    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
238018    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
238019    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
238020    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
238021    +end;
MPRINT(EM_DIAGRAM):   end;
238022    +else do;
MPRINT(EM_DIAGRAM):   else do;
238023    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
238024    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
238025    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
238026    +   end;
MPRINT(EM_DIAGRAM):   end;
238027    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
238028    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
238029    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
238030    +   end;
MPRINT(EM_DIAGRAM):   end;
238031    +   else do;
MPRINT(EM_DIAGRAM):   else do;
238032    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
238033    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
238034    +   end;
MPRINT(EM_DIAGRAM):   end;
238035    +end;
MPRINT(EM_DIAGRAM):   end;
238036    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
238037    +   P_DepVar1  =     3.47156859435653 * H11  +     -3.7137526781971 * H12
238038    +          +    -4.05222402892753 * H13  +    -4.15704481111915 * H14 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 3.47156859435653 * H11 + -3.7137526781971 * H12 + 
-4.05222402892753 * H13 + -4.15704481111915 * H14 ;
238039    +   P_DepVar1  =    -0.19096137615409 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.19096137615409 + P_DepVar1 ;
238040    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
238041    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
238042    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
238043    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
238044    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
238045    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
238046    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
238047    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
238048    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
238049    +END;
MPRINT(EM_DIAGRAM):   END;
238050    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
238051    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
238052    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
238053    +END;
MPRINT(EM_DIAGRAM):   END;
238054    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
238055    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
238056    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
238057    +END;
MPRINT(EM_DIAGRAM):   END;
238058    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
238059    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
238060    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
238061    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
238062    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
238063    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
238064    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
238065    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
238066    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
238067    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
238068    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
238069    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
238070    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
238071    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
238072    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
238073    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
238074    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
238075    +END;
MPRINT(EM_DIAGRAM):   END;
238076    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
238077    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
238078    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
238079    +drop
238080    +H11
238081    +H12
238082    +H13
238083    +H14
238084    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 ;
238085    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
238086    +* Renaming variables for Neural39;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural39;
238087    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
238088    +* Renaming Posterior variables for Neural39;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural39;
238089    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
238090    +drop Neural39_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural39_P_DepVar1;
238091    +Neural39_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural39_P_DepVar1 = P_DepVar1;
238092    +drop Neural39_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural39_P_DepVar0;
238093    +Neural39_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural39_P_DepVar0 = P_DepVar0;
238094    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
238095    +* Renaming _WARN_ variable for Neural39;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural39;
238096    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
238097    +length Neural39_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural39_WARN_ $4;
238098    +drop Neural39_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural39_WARN_;
238099    +Neural39_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural39_WARN_ = _WARN_;
238100    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
238101    +* Ensmbl23: Average Posteriors of 5 models;
MPRINT(EM_DIAGRAM):   * Ensmbl23: Average Posteriors of 5 models;
238102    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
238103    +P_DepVar1 = (
238104    +Neural40_P_DepVar1 +
238105    +AutoNeural38_P_DepVar1 +
238106    +AutoNeural39_P_DepVar1 +
238107    +Neural41_P_DepVar1 +
238108    +Neural39_P_DepVar1
238109    +)/5;
MPRINT(EM_DIAGRAM):   P_DepVar1 = ( Neural40_P_DepVar1 + AutoNeural38_P_DepVar1 + 
AutoNeural39_P_DepVar1 + Neural41_P_DepVar1 + Neural39_P_DepVar1 )/5;
238110    +P_DepVar0 = (
238111    +Neural40_P_DepVar0 +
238112    +AutoNeural38_P_DepVar0 +
238113    +AutoNeural39_P_DepVar0 +
238114    +Neural41_P_DepVar0 +
238115    +Neural39_P_DepVar0
238116    +)/5;
MPRINT(EM_DIAGRAM):   P_DepVar0 = ( Neural40_P_DepVar0 + AutoNeural38_P_DepVar0 + 
AutoNeural39_P_DepVar0 + Neural41_P_DepVar0 + Neural39_P_DepVar0 )/5;
238117    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
238118    +* Ensmbl23: Computing Classification Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl23: Computing Classification Vars;
238119    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
238120    +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set. 
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the 
         length of a character variable.
238121    +label I_DepVar = 'Into: DepVar';
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar';
238122    +length _format $200;
MPRINT(EM_DIAGRAM):   length _format $200;
238123    +drop _format;
MPRINT(EM_DIAGRAM):   drop _format;
238124    +_format= ' ';
MPRINT(EM_DIAGRAM):   _format= ' ';
238125    +_p_= 0;
MPRINT(EM_DIAGRAM):   _p_= 0;
238126    +drop _p_;
MPRINT(EM_DIAGRAM):   drop _p_;
238127    +if P_DepVar1 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _p_ then do;
238128    +_p_= P_DepVar1;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar1;
238129    +_format= '1';
MPRINT(EM_DIAGRAM):   _format= '1';
238130    +end;
MPRINT(EM_DIAGRAM):   end;
238131    +if P_DepVar0 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _p_ then do;
238132    +_p_= P_DepVar0;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar0;
238133    +_format= '0';
MPRINT(EM_DIAGRAM):   _format= '0';
238134    +end;
MPRINT(EM_DIAGRAM):   end;
238135    +%DMNORMCP(_format,I_DepVar);
MPRINT(DMNORMCP):   I_DepVar=dmnorm(_format,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
238136    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
238137    +* Ensmbl23: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   * Ensmbl23: Producing Unformatted variable;
238138    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
238139    +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
238140    +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
238141    +else
238142    +if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
238143    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
238144    +* Ensmbl23: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl23: Computing _WARN_ Variable;
238145    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
238146    +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
238147    +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
238148    +_WARN_ = '';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
238149    +if index(NEURAL40_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
238149   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL40_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
238150    +if index(NEURAL40_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
238150   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL40_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
238151    +if index(NEURAL40_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
238151   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL40_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
238152    +if index(NEURAL40_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
238152   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL40_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
238153    +if index(AUTONEURAL38_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
238153   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL38_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
238154    +if index(AUTONEURAL38_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
238154   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL38_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
238155    +if index(AUTONEURAL38_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
238155   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL38_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
238156    +if index(AUTONEURAL38_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
238156   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL38_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
238157    +if index(AUTONEURAL39_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
238157   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL39_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
238158    +if index(AUTONEURAL39_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
238158   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL39_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
238159    +if index(AUTONEURAL39_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
238159   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL39_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
238160    +if index(AUTONEURAL39_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
238160   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL39_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
238161    +if index(NEURAL41_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
238161   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL41_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
238162    +if index(NEURAL41_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
238162   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL41_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
238163    +if index(NEURAL41_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
238163   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL41_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
238164    +if index(NEURAL41_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
238164   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL41_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
238165    +if index(NEURAL39_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
238165   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL39_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
238166    +if index(NEURAL39_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
238166   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL39_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
238167    +if index(NEURAL39_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
238167   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL39_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
238168    +if index(NEURAL39_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
238168   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL39_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
238169    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
238170    +* Ensmbl23: Computing Residual Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl23: Computing Residual Vars;
238171    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
238172    +if
238173    +F_DepVar NE '1'
238174    +AND F_DepVar NE '0'
238175    +then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE '1' AND F_DepVar NE '0' then do;
238176    +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
238177    +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
238178    +end;
MPRINT(EM_DIAGRAM):   end;
238179    +else do;
MPRINT(EM_DIAGRAM):   else do;
238180    +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
238181    +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
238182    +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
238183    +WHEN('1') R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN('1') R_DepVar1 = R_DepVar1 +1;
238184    +WHEN('0') R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN('0') R_DepVar0 = R_DepVar0 +1;
238185    +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
238186    +END;
MPRINT(EM_DIAGRAM):   END;
238187    +END;
MPRINT(EM_DIAGRAM):   END;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
238188     run;

NOTE: DATA STEP view saved on file EMWS8.ENSMBL23_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.NEURAL40_VALIDATE.VIEW used (Total process time):
      real time           0.08 seconds
      cpu time            0.09 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.10 seconds
      cpu time            0.10 seconds
      

MPRINT(EM_DIAGRAM):   quit;
238189     quit;
238190     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
MPRINT(EM_DIAGRAM):   
MPRINT(CALFITSTATSNOMINAL):   data _tmpTrainFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_ 
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.Ensmbl23_TRAIN end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_ 
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Train: Target Variable" _NOBS_= "Train: Sum of 
Frequencies" _SSE_= "Train: Sum of Squared Errors" _MAX_= "Train: Maximum Absolute Error" 
_DIV_ = "Train: Divisor for ASE" _WRONG_= "Train: Number of Wrong Classifications" _DISF_= 
"Train: Frequency of Classified Cases" _MISC_= "Train: Misclassification Rate" _ASE_ = "Train: 
Average Squared Error" _RASE_ = "Train: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_ 
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl23_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set _tmpTrainFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   
MPRINT(CALFITSTATSNOMINAL):   data _tmpValidFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_ 
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.Ensmbl23_VALIDATE end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_ 
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Valid: Target Variable" _NOBS_= "Valid: Sum of 
Frequencies" _SSE_= "Valid: Sum of Squared Errors" _MAX_= "Valid: Maximum Absolute Error" 
_DIV_ = "Valid: Divisor for ASE" _WRONG_= "Valid: Number of Wrong Classifications" _DISF_= 
"Valid: Frequency of Classified Cases" _MISC_= "Valid: Misclassification Rate" _ASE_ = "Valid: 
Average Squared Error" _RASE_ = "Valid: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_ 
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _tmpdata_(DROP= TARGET);
MPRINT(EM_DIAGRAM):   set _tmpValidFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _tmpdata_;
MPRINT(EM_DIAGRAM):   set _tmpdata_;
MPRINT(EM_DIAGRAM):   rename _ASE_=_VASE_;
MPRINT(EM_DIAGRAM):   rename _DIV_=_VDIV_;
MPRINT(EM_DIAGRAM):   rename _MAX_=_VMAX_;
MPRINT(EM_DIAGRAM):   rename _NOBS_=_VNOBS_;
MPRINT(EM_DIAGRAM):   rename _RASE_=_VRASE_;
MPRINT(EM_DIAGRAM):   rename _SSE_=_VSSE_;
MPRINT(EM_DIAGRAM):   rename _DISF_=_VDISF_;
MPRINT(EM_DIAGRAM):   rename _MISC_=_VMISC_;
MPRINT(EM_DIAGRAM):   rename _WRONG_=_VWRONG_;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl23_EMOUTFIT;
MPRINT(EM_DIAGRAM):   merge EMWS8.Ensmbl23_EMOUTFIT _tmpdata_;
MPRINT(EM_DIAGRAM):   run;
238250     filename _pref
238250   ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural40\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural40\EMPUBLISHSCORE.sas";
238251     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
238252     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural40\EMPUBLISHSCORE.sas.
238253    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
238254    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
238255    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
238256    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
238257    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
238258    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
238259    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
238260    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
238261    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
238262    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
238263    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
238264    +LENGTH _WARN_ $4
238265    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
238266    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
238267    +
238268    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
238269    +
238270    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
238271    +
238272    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
238273    +
238274    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
238275    +
238276    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
238277    +
238278    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
238279    +
238280    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
238281    +
238282    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
238283    +
238284    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
238285    +
238286    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
238287    +
238288    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
238289    +
238290    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
238291    +
238292    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
238293    +
238294    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
238295    +
238296    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
238297    +
238298    +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
238299    +
238300    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
238301    +
238302    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
238303    +
238304    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
238305    +
238306    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
238307    +
238308    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
238309    +
238310    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
238311    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
238312    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
238313    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
238314    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
238315    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
238316    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
238317    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
238318    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
238319    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
238320    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
238321    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
238322    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
238323    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
238324    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
238325    +end;
MPRINT(EM_DIAGRAM):   end;
238326    +else do;
MPRINT(EM_DIAGRAM):   else do;
238327    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
238328    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
238329    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
238330    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
238331    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
238332    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
238333    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
238334    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
238335    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
238336    +         end;
MPRINT(EM_DIAGRAM):   end;
238337    +         else do;
MPRINT(EM_DIAGRAM):   else do;
238338    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
238339    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
238340    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
238341    +            end;
MPRINT(EM_DIAGRAM):   end;
238342    +         end;
MPRINT(EM_DIAGRAM):   end;
238343    +      end;
MPRINT(EM_DIAGRAM):   end;
238344    +      else do;
MPRINT(EM_DIAGRAM):   else do;
238345    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
238346    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
238347    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
238348    +         end;
MPRINT(EM_DIAGRAM):   end;
238349    +      end;
MPRINT(EM_DIAGRAM):   end;
238350    +   end;
MPRINT(EM_DIAGRAM):   end;
238351    +   else do;
MPRINT(EM_DIAGRAM):   else do;
238352    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
238353    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
238354    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
238355    +      end;
MPRINT(EM_DIAGRAM):   end;
238356    +      else do;
MPRINT(EM_DIAGRAM):   else do;
238357    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
238358    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
238359    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
238360    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
238361    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
238362    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
238363    +         end;
MPRINT(EM_DIAGRAM):   end;
238364    +      end;
MPRINT(EM_DIAGRAM):   end;
238365    +   end;
MPRINT(EM_DIAGRAM):   end;
238366    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
238367    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
238368    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
238369    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
238370    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
238371    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
238372    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
238373    +   end;
MPRINT(EM_DIAGRAM):   end;
238374    +end;
MPRINT(EM_DIAGRAM):   end;
238375    +
238376    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
238377    +*** Checking missing input Interval
238378    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
238379    +
238380    +IF NMISS(
238381    +   AcceptedCmpTotal ,
238382    +   Frq ,
238383    +   Mnt ,
238384    +   MntMeatProducts ,
238385    +   NumCatalogPurchases ,
238386    +   NumDealsPurchases ,
238387    +   NumWebVisitsMonth ,
238388    +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Mnt , MntMeatProducts , 
NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , Recency ) THEN DO;
238389    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
238390    +
238391    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
238392    +END;
MPRINT(EM_DIAGRAM):   END;
238393    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
238394    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
238395    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
238396    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
238397    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
238398    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
238399    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
238400    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
238401    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
238402    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
238403    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
238404    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
238405    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
238406    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
238407    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
238408    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
238409    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
238410    +END;
MPRINT(EM_DIAGRAM):   END;
238411    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
238412    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
238413    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
238414    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
238415    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
238416    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
238417    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
238418    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
238419    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
238420    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
238421    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
238422    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
238423    +   ELSE S_NumCatalogPurchases
238424    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
238425    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
238426    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
238427    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
238428    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
238429    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
238430    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
238431    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
238432    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
238433    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
238434    +END;
MPRINT(EM_DIAGRAM):   END;
238435    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
238436    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
238437    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
238438    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
238439    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
238440    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
238441    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
238442    +   H11  =    -0.50937067326512 * S_AcceptedCmpTotal  +     0.59153604997173 *
238443    +        S_Frq  +     0.35109708191283 * S_Mnt  +    -0.54183123684873 *
238444    +        S_MntMeatProducts  +    -0.50968421326068 * S_NumCatalogPurchases
238445    +          +    -0.19046126117019 * S_NumDealsPurchases
238446    +          +    -0.51033119597715 * S_NumWebVisitsMonth
238447    +          +     0.81837864997249 * S_Recency ;
MPRINT(EM_DIAGRAM):   H11 = -0.50937067326512 * S_AcceptedCmpTotal + 0.59153604997173 * S_Frq 
+ 0.35109708191283 * S_Mnt + -0.54183123684873 * S_MntMeatProducts + -0.50968421326068 * 
S_NumCatalogPurchases + -0.19046126117019 * S_NumDealsPurchases + -0.51033119597715 * 
S_NumWebVisitsMonth + 0.81837864997249 * S_Recency ;
238448    +   H12  =     0.02025228046339 * S_AcceptedCmpTotal  +     0.99930163787509 *
238449    +        S_Frq  +     1.71070447604488 * S_Mnt  +     0.00262288180651 *
238450    +        S_MntMeatProducts  +    -0.26040107336488 * S_NumCatalogPurchases
238451    +          +     1.79245188553632 * S_NumDealsPurchases
238452    +          +     0.26061762777338 * S_NumWebVisitsMonth
238453    +          +     0.08976701277133 * S_Recency ;
MPRINT(EM_DIAGRAM):   H12 = 0.02025228046339 * S_AcceptedCmpTotal + 0.99930163787509 * S_Frq + 
1.71070447604488 * S_Mnt + 0.00262288180651 * S_MntMeatProducts + -0.26040107336488 * 
S_NumCatalogPurchases + 1.79245188553632 * S_NumDealsPurchases + 0.26061762777338 * 
S_NumWebVisitsMonth + 0.08976701277133 * S_Recency ;
238454    +   H13  =       0.104381332746 * S_AcceptedCmpTotal  +    -1.51764539772771 *
238455    +        S_Frq  +     0.93148616742855 * S_Mnt  +     2.93767108708116 *
238456    +        S_MntMeatProducts  +     0.79051284359814 * S_NumCatalogPurchases
238457    +          +     0.49339750797451 * S_NumDealsPurchases
238458    +          +    -0.25657630888957 * S_NumWebVisitsMonth
238459    +          +    -0.02783592802322 * S_Recency ;
MPRINT(EM_DIAGRAM):   H13 = 0.104381332746 * S_AcceptedCmpTotal + -1.51764539772771 * S_Frq + 
0.93148616742855 * S_Mnt + 2.93767108708116 * S_MntMeatProducts + 0.79051284359814 * 
S_NumCatalogPurchases + 0.49339750797451 * S_NumDealsPurchases + -0.25657630888957 * 
S_NumWebVisitsMonth + -0.02783592802322 * S_Recency ;
238460    +   H14  =     0.54135833698612 * S_AcceptedCmpTotal  +     1.35730431022222 *
238461    +        S_Frq  +     0.77200942468842 * S_Mnt  +    -1.51698500454254 *
238462    +        S_MntMeatProducts  +    -0.62605649177998 * S_NumCatalogPurchases
238463    +          +    -0.20841011025614 * S_NumDealsPurchases
238464    +          +    -0.95976462163535 * S_NumWebVisitsMonth
238465    +          +    -0.85153512604579 * S_Recency ;
MPRINT(EM_DIAGRAM):   H14 = 0.54135833698612 * S_AcceptedCmpTotal + 1.35730431022222 * S_Frq + 
0.77200942468842 * S_Mnt + -1.51698500454254 * S_MntMeatProducts + -0.62605649177998 * 
S_NumCatalogPurchases + -0.20841011025614 * S_NumDealsPurchases + -0.95976462163535 * 
S_NumWebVisitsMonth + -0.85153512604579 * S_Recency ;
238466    +   H15  =     0.45598292592982 * S_AcceptedCmpTotal  +     0.62149856604856 *
238467    +        S_Frq  +    -0.19094507833451 * S_Mnt  +     0.31024365368678 *
238468    +        S_MntMeatProducts  +     0.43336537836455 * S_NumCatalogPurchases
238469    +          +    -0.79330545518211 * S_NumDealsPurchases
238470    +          +     0.31692653945914 * S_NumWebVisitsMonth
238471    +          +    -0.82721510615104 * S_Recency ;
MPRINT(EM_DIAGRAM):   H15 = 0.45598292592982 * S_AcceptedCmpTotal + 0.62149856604856 * S_Frq + 
-0.19094507833451 * S_Mnt + 0.31024365368678 * S_MntMeatProducts + 0.43336537836455 * 
S_NumCatalogPurchases + -0.79330545518211 * S_NumDealsPurchases + 0.31692653945914 * 
S_NumWebVisitsMonth + -0.82721510615104 * S_Recency ;
238472    +   H11  = H11  +    -0.25100863467838 * Marital_StatusDivorced
238473    +          +     0.15562142019257 * Marital_StatusMarried
238474    +          +    -0.11924929825992 * Marital_StatusSingle
238475    +          +     0.19445161712576 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.25100863467838 * Marital_StatusDivorced + 
0.15562142019257 * Marital_StatusMarried + -0.11924929825992 * Marital_StatusSingle + 
0.19445161712576 * Marital_StatusTogether ;
238476    +   H12  = H12  +     0.58193215591516 * Marital_StatusDivorced
238477    +          +     0.27485963958922 * Marital_StatusMarried
238478    +          +    -0.46136322561544 * Marital_StatusSingle
238479    +          +     1.17785849262888 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.58193215591516 * Marital_StatusDivorced + 0.27485963958922 
* Marital_StatusMarried + -0.46136322561544 * Marital_StatusSingle + 1.17785849262888 * 
Marital_StatusTogether ;
238480    +   H13  = H13  +    -0.55576156297846 * Marital_StatusDivorced
238481    +          +     0.18663773247842 * Marital_StatusMarried
238482    +          +    -0.14692184711639 * Marital_StatusSingle
238483    +          +     0.40795003682635 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.55576156297846 * Marital_StatusDivorced + 
0.18663773247842 * Marital_StatusMarried + -0.14692184711639 * Marital_StatusSingle + 
0.40795003682635 * Marital_StatusTogether ;
238484    +   H14  = H14  +    -1.70154958647134 * Marital_StatusDivorced
238485    +          +     -0.0143065674831 * Marital_StatusMarried
238486    +          +     0.13491720981006 * Marital_StatusSingle
238487    +          +     0.65058537454476 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -1.70154958647134 * Marital_StatusDivorced + 
-0.0143065674831 * Marital_StatusMarried + 0.13491720981006 * Marital_StatusSingle + 
0.65058537454476 * Marital_StatusTogether ;
238488    +   H15  = H15  +    -0.57735977480465 * Marital_StatusDivorced
238489    +          +    -1.18521635425485 * Marital_StatusMarried
238490    +          +     1.27858890561049 * Marital_StatusSingle
238491    +          +    -0.68308863502606 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.57735977480465 * Marital_StatusDivorced + 
-1.18521635425485 * Marital_StatusMarried + 1.27858890561049 * Marital_StatusSingle + 
-0.68308863502606 * Marital_StatusTogether ;
238492    +   H11  =     0.91898399777449 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.91898399777449 + H11 ;
238493    +   H12  =    -0.65172531168643 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.65172531168643 + H12 ;
238494    +   H13  =     2.21950020718323 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 2.21950020718323 + H13 ;
238495    +   H14  =     0.94167989308741 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.94167989308741 + H14 ;
238496    +   H15  =    -2.75049414690283 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -2.75049414690283 + H15 ;
238497    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
238498    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
238499    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
238500    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
238501    +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
238502    +END;
MPRINT(EM_DIAGRAM):   END;
238503    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
238504    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
238505    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
238506    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
238507    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
238508    +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
238509    +END;
MPRINT(EM_DIAGRAM):   END;
238510    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
238511    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
238512    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
238513    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
238514    +   P_DepVar1  =    -7.73278760171706 * H11  +    -1.81420899061277 * H12
238515    +          +      7.8974780725891 * H13  +    -2.47430312661533 * H14
238516    +          +       3.637554312671 * H15 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -7.73278760171706 * H11 + -1.81420899061277 * H12 + 
7.8974780725891 * H13 + -2.47430312661533 * H14 + 3.637554312671 * H15 ;
238517    +   P_DepVar1  =    -2.27177312353398 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.27177312353398 + P_DepVar1 ;
238518    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
238519    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
238520    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
238521    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
238522    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
238523    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
238524    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
238525    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
238526    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
238527    +END;
MPRINT(EM_DIAGRAM):   END;
238528    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
238529    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
238530    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
238531    +END;
MPRINT(EM_DIAGRAM):   END;
238532    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
238533    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
238534    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
238535    +END;
MPRINT(EM_DIAGRAM):   END;
238536    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
238537    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
238538    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
238539    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
238540    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
238541    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
238542    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
238543    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
238544    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
238545    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
238546    +END;
MPRINT(EM_DIAGRAM):   END;
238547    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
238548    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
238549    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
238550    +drop
238551    +H11
238552    +H12
238553    +H13
238554    +H14
238555    +H15
238556    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 ;
238557    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
238558     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
238559     quit;
238560     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
238561     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
238562     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
238563     retain ID 2 Node "Neural40";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural40";
238564     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
238565     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 805 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 805 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

238566     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
238567     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
238568     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 805 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 805 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

238569     proc sort data=EMWS8.Neural40_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural40_variableset out=_temp2(keep=NAME CREATOR);
238570     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
238571     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.NEURAL40_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

238572     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
238573     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
238574     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
238575     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

238576     proc contents data=EMWS8.Neural40_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural40_train out=_meta(keep=NAME) noprint;
238577     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

238578     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
238579     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
238580     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

238581     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
238582     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
238583     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
238584     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

238585     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
238586     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
238586   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 296 rows and 5 columns.

238587     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

238588     proc append base=EMWS8.Ensmbl23_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl23_FCMP data=_tempx;
238589     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL23_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 296 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL23_FCMP has 296 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

238590     filename _pref
238590   ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
238591     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
238592     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
238593    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
238594    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
238595    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
238596    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
238597    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
238598    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
238599     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
238600     quit;
238601     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
238602     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
238603     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
238604     retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
238605     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
238606     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

238607     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
238608     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
238609     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

238610     proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
238611     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
238612     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

238613     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
238614     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
238615     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
238616     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

238617     proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
238618     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

238619     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
238620     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
238621     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

238622     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
238623     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
238624     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
238625     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

238626     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
238627     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
238627   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

238628     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

238629     proc append base=EMWS8.Ensmbl23_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl23_FCMP data=_tempx;
238630     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL23_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL23_FCMP has 300 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

238631     filename _pref
238631   ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
238632     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
238633     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
238634    +
238635    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
238636    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
238636   !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
238637    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
238638    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
238639    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
238640    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
238641    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
238642     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
238643     quit;
238644     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
238645     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
238646     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
238647     retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
238648     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
238649     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

238650     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
238651     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
238652     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

238653     proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
238654     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
238655     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

238656     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
238657     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
238658     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
238659     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

238660     proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
238661     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

238662     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
238663     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
238664     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

238665     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
238666     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
238667     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
238668     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

238669     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
238670     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
238670   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

238671     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

238672     proc append base=EMWS8.Ensmbl23_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl23_FCMP data=_tempx;
238673     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL23_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL23_FCMP has 339 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

238674     filename _pref
238674   ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
238675     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
238676     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
238677    +
238678    +
238679    +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
238680    +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
238681    +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
238682    +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
238683    +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
238684    +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
238685    +
238686    +
238687    +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
238688    +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
238689    +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
238690    +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
238691    +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
238692    +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
238693    +
238694    +
238695    +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
238696    +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
238697    +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
238698    +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
238699    +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
238700    +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
238701    +
238702    +
238703    +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
238704    +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
238705    +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
238706    +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
238707    +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
238708    +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
238709    +
238710    +
238711    +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
238712    +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
238713    +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
238714    +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
238715    +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
238716    +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
238717    +
238718    +
238719    +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
238720    +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
238721    +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
238722    +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
238723    +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
238724    +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
238725    +
238726    +
238727    +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
238728    +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
238729    +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
238730    +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
238731    +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
238732    +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
238733    +
238734    +
238735    +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
238736    +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
238737    +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
238738    +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
238739    +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
238740    +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
238741    +if
238742    +_FILTERNORM1 not in ( '.')
238743    + and
238744    +_FILTERNORM2 not in ( '.')
238745    + and
238746    +_FILTERNORM3 not in ( '.')
238747    + and
238748    +_FILTERNORM4 not in ( '.')
238749    + and
238750    +_FILTERNORM5 not in ( '.')
238751    + and
238752    +_FILTERNORM6 not in ( '.')
238753    + and
238754    +_FILTERNORM7 not in ( ' ')
238755    + and
238756    +_FILTERNORM8 not in ( ' ')
238757    +and
238758    +( Dt_Customer ne .)
238759    +and ( Income ne . and (Income<=107000))
238760    +and ( Kidhome ne .)
238761    +and ( MntFishProducts ne .)
238762    +and ( MntFruits ne .)
238763    +and ( MntGoldProds ne .)
238764    +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
238765    +and ( MntSweetProducts ne .)
238766    +and ( MntWines ne .)
238767    +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
238768    +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
238769    +and ( NumStorePurchases ne .)
238770    +and ( NumWebPurchases ne .)
238771    +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
238772    +and ( Recency ne .)
238773    +and ( Teenhome ne .)
238774    +and ( Year_Birth ne .)
238775    +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
238776    +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
238777    +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
238778    +end;
MPRINT(EM_DIAGRAM):   end;
238779    +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
238780    +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
238781     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
238782     quit;
238783     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
238784     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
238785     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
238786     retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
238787     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
238788     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

238789     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
238790     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
238791     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

238792     proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
238793     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
238794     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

238795     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
238796     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
238797     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
238798     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

238799     proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
238800     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

238801     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
238802     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
238803     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

238804     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
238805     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
238806     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
238807     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

238808     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
238809     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
238809   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

238810     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

238811     proc append base=EMWS8.Ensmbl23_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl23_FCMP data=_tempx;
238812     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL23_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL23_FCMP has 405 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

238813     %macro varDept(fcmpdata=,id=);
238814     %global nobs&id scoreFlag&id;
238815     %let scoreFlag&id = 0;
238816     %if &id=1 or ^&fcmpStart %then %do;
238817     proc sort data=&fcmpdata out=_temp&id nodupkey;
238818     by NAME;
238819     where id=&id and LHS in( %let j=1;
238820     %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
238821     %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
238822     "&var" %let j = %eval(&j+1);
238823     %end;
238824     );
238825     run;
238826     %let dsid = %sysfunc(open(_temp&id));
238827     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
238828     %let dsid = %sysfunc(close(&dsid));
238829     %if &&nobs&id %then %do;
238830     %let scoreFlag&id = 1;
238831     %let fcmpStart = 1;
238832     %end;
238833     %else %let fcmpStart = 0;
238834     %end;
238835     %else %do;
238836     proc sort data=&fcmpdata out=_tempid;
238837     where id=&id;
238838     by LHS;
238839     run;
238840     %let dsid = %sysfunc(open(_tempid));
238841     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
238842     %let dsid = %sysfunc(close(&dsid));
238843     %if ^&&nobs&id %then %do;
238844     proc datasets lib=work nolist;
238845     delete _tempid;
238846     run;
238847     quit;
238848     %end;
238849     %else %do;
238850     data _tempAll;
238851     set %let j=%eval(&id-1);
238852     %do x=1 %to &j;
238853     %if &&nobs&x %then %do;
238854     _temp&x %end;
238855     %end;
238856     ;
238857     run;
238858     proc sql;
238859     create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
238859   ! work._tempid p2 where p.name=p2.lhs;
238860     quit;
238861     data _temp&id;
238862     set _temp&id;
238863     where LHS ne '' and NAME ne '' and Node ne '';
238864     run;
238865     proc datasets lib=work nolist;
238866     delete _tempAll;
238867     run;
238868     %let dsid = %sysfunc(open(_temp&id));
238869     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
238870     %let dsid = %sysfunc(close(&dsid));
238871     %if ^&&nobs&id %then %do;
238872     proc datasets lib=work nolist;
238873     delete _temp&id;
238874     run;
238875     quit;
238876     %end;
238877     %else %do;
238878     %let scoreFlag&id = 1;
238879     data _temp&id;
238880     set _temp&id;
238881     where LHS ne NAME and node ne '';
238882     run;
238883     %let dsid = %sysfunc(open(_temp&id));
238884     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
238885     %let dsid = %sysfunc(close(&dsid));
238886     %if ^&&nobs&id %then %do;
238887     proc datasets lib=work nolist;
238888     delete _temp&id;
238889     run;
238890     quit;
238891     %end;
238892     %else %do;
238893     proc sort data=_temp&id nodupkey;
238894     by LHS NAME;
238895     run;
238896     %end;
238897     %end;
238898     %end;
238899     %end;
238900     %mend varDept;
238901     %macro optCode(outdata=fcmpdata);
238902     %global fcmpStart;
238903     %let fcmpStart = 0;
238904     %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
238905     %let NumNodes=9;
238906     %do k=1 %to &NumNodes;
238907     %vardept(fcmpdata=&outdata, id=&k);
238908     %end;
238909     %mend optCode;
238910     %optcode(outData=EMWS8.Ensmbl23_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl23_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL23_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl23_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 42 observations read from the data set EMWS8.ENSMBL23_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 31 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 11 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl23_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL23_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl23_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL23_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl23_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL23_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 11 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 11 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl23_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL23_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 11 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 11 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 14 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 14 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 14 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 14 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl23_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL23_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 11 observations read from the data set WORK._TEMP2.
NOTE: There were 14 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 25 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl23_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL23_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl23_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL23_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

238911     filename _pref
238911   ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural38\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural38\EMPUBLISHSCORE.sas";
238912     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
238913     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural38\EMPUBLISHSCORE.sas.
238914    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
238915    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
238916    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
238917    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
238918    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
238919    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
238920    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
238921    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
238922    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
238923    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
238924    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
238925    +LENGTH _WARN_ $4
238926    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
238927    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
238928    +
238929    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
238930    +
238931    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
238932    +
238933    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
238934    +
238935    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
238936    +
238937    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
238938    +
238939    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
238940    +
238941    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
238942    +
238943    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
238944    +
238945    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
238946    +
238947    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
238948    +
238949    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
238950    +
238951    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
238952    +
238953    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
238954    +
238955    +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
238956    +
238957    +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
238958    +
238959    +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
238960    +
238961    +      label H1x3_2 = 'Hidden: H1x3_=2' ;
MPRINT(EM_DIAGRAM):   label H1x3_2 = 'Hidden: H1x3_=2' ;
238962    +
238963    +      label H1x4_1 = 'Hidden: H1x4_=1' ;
MPRINT(EM_DIAGRAM):   label H1x4_1 = 'Hidden: H1x4_=1' ;
238964    +
238965    +      label H1x4_2 = 'Hidden: H1x4_=2' ;
MPRINT(EM_DIAGRAM):   label H1x4_2 = 'Hidden: H1x4_=2' ;
238966    +
238967    +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
238968    +
238969    +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
238970    +
238971    +      label H2x2_1 = 'Hidden: H2x2_=1' ;
MPRINT(EM_DIAGRAM):   label H2x2_1 = 'Hidden: H2x2_=1' ;
238972    +
238973    +      label H2x2_2 = 'Hidden: H2x2_=2' ;
MPRINT(EM_DIAGRAM):   label H2x2_2 = 'Hidden: H2x2_=2' ;
238974    +
238975    +      label H2x3_1 = 'Hidden: H2x3_=1' ;
MPRINT(EM_DIAGRAM):   label H2x3_1 = 'Hidden: H2x3_=1' ;
238976    +
238977    +      label H2x3_2 = 'Hidden: H2x3_=2' ;
MPRINT(EM_DIAGRAM):   label H2x3_2 = 'Hidden: H2x3_=2' ;
238978    +
238979    +      label H3x1_1 = 'Hidden: H3x1_=1' ;
MPRINT(EM_DIAGRAM):   label H3x1_1 = 'Hidden: H3x1_=1' ;
238980    +
238981    +      label H3x1_2 = 'Hidden: H3x1_=2' ;
MPRINT(EM_DIAGRAM):   label H3x1_2 = 'Hidden: H3x1_=2' ;
238982    +
238983    +      label H3x2_1 = 'Hidden: H3x2_=1' ;
MPRINT(EM_DIAGRAM):   label H3x2_1 = 'Hidden: H3x2_=1' ;
238984    +
238985    +      label H3x2_2 = 'Hidden: H3x2_=2' ;
MPRINT(EM_DIAGRAM):   label H3x2_2 = 'Hidden: H3x2_=2' ;
238986    +
238987    +      label H4x1_1 = 'Hidden: H4x1_=1' ;
MPRINT(EM_DIAGRAM):   label H4x1_1 = 'Hidden: H4x1_=1' ;
238988    +
238989    +      label H4x1_2 = 'Hidden: H4x1_=2' ;
MPRINT(EM_DIAGRAM):   label H4x1_2 = 'Hidden: H4x1_=2' ;
238990    +
238991    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
238992    +
238993    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
238994    +
238995    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
238996    +
238997    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
238998    +
238999    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
239000    +
239001    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
239002    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
239003    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
239004    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
239005    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
239006    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
239007    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
239008    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
239009    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
239010    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
239011    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
239012    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
239013    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
239014    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
239015    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
239016    +end;
MPRINT(EM_DIAGRAM):   end;
239017    +else do;
MPRINT(EM_DIAGRAM):   else do;
239018    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
239019    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
239020    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
239021    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
239022    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
239023    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
239024    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
239025    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
239026    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
239027    +         end;
MPRINT(EM_DIAGRAM):   end;
239028    +         else do;
MPRINT(EM_DIAGRAM):   else do;
239029    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
239030    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
239031    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
239032    +            end;
MPRINT(EM_DIAGRAM):   end;
239033    +         end;
MPRINT(EM_DIAGRAM):   end;
239034    +      end;
MPRINT(EM_DIAGRAM):   end;
239035    +      else do;
MPRINT(EM_DIAGRAM):   else do;
239036    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
239037    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
239038    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
239039    +         end;
MPRINT(EM_DIAGRAM):   end;
239040    +      end;
MPRINT(EM_DIAGRAM):   end;
239041    +   end;
MPRINT(EM_DIAGRAM):   end;
239042    +   else do;
MPRINT(EM_DIAGRAM):   else do;
239043    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
239044    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
239045    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
239046    +      end;
MPRINT(EM_DIAGRAM):   end;
239047    +      else do;
MPRINT(EM_DIAGRAM):   else do;
239048    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
239049    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
239050    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
239051    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
239052    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
239053    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
239054    +         end;
MPRINT(EM_DIAGRAM):   end;
239055    +      end;
MPRINT(EM_DIAGRAM):   end;
239056    +   end;
MPRINT(EM_DIAGRAM):   end;
239057    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
239058    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
239059    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
239060    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
239061    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
239062    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
239063    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
239064    +   end;
MPRINT(EM_DIAGRAM):   end;
239065    +end;
MPRINT(EM_DIAGRAM):   end;
239066    +
239067    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
239068    +*** Checking missing input Interval
239069    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
239070    +
239071    +IF NMISS(
239072    +   AcceptedCmpTotal ,
239073    +   Frq ,
239074    +   Mnt ,
239075    +   MntMeatProducts ,
239076    +   NumCatalogPurchases ,
239077    +   NumDealsPurchases ,
239078    +   NumWebVisitsMonth ,
239079    +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Mnt , MntMeatProducts , 
NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , Recency ) THEN DO;
239080    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
239081    +
239082    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
239083    +END;
MPRINT(EM_DIAGRAM):   END;
239084    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
239085    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
239086    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
239087    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
239088    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
239089    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
239090    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
239091    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
239092    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
239093    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
239094    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
239095    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
239096    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
239097    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
239098    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
239099    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
239100    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
239101    +END;
MPRINT(EM_DIAGRAM):   END;
239102    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
239103    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
239104    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
239105    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
239106    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
239107    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
239108    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
239109    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
239110    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
239111    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
239112    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
239113    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
239114    +   ELSE S_NumCatalogPurchases
239115    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
239116    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
239117    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
239118    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
239119    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
239120    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
239121    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
239122    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
239123    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
239124    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
239125    +END;
MPRINT(EM_DIAGRAM):   END;
239126    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
239127    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
239128    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
239129    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
239130    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
239131    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
239132    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
239133    +   H1x1_1  =     0.03317833435323 * S_AcceptedCmpTotal
239134    +          +    -0.66859164215955 * S_Frq  +     1.04503858219375 * S_Mnt
239135    +          +     3.02405267314398 * S_MntMeatProducts
239136    +          +     0.25422172488707 * S_NumCatalogPurchases
239137    +          +     0.25977266371328 * S_NumDealsPurchases
239138    +          +    -0.26865365728773 * S_NumWebVisitsMonth
239139    +          +     0.09531087154516 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.03317833435323 * S_AcceptedCmpTotal + -0.66859164215955 * 
S_Frq + 1.04503858219375 * S_Mnt + 3.02405267314398 * S_MntMeatProducts + 0.25422172488707 * 
S_NumCatalogPurchases + 0.25977266371328 * S_NumDealsPurchases + -0.26865365728773 * 
S_NumWebVisitsMonth + 0.09531087154516 * S_Recency ;
239140    +   H1x1_2  =    -0.69087988352897 * S_AcceptedCmpTotal
239141    +          +    -0.11955753576733 * S_Frq  +     0.84152651412075 * S_Mnt
239142    +          +    -0.64419071408502 * S_MntMeatProducts
239143    +          +    -0.49060224303044 * S_NumCatalogPurchases
239144    +          +    -0.04840762943457 * S_NumDealsPurchases
239145    +          +     -0.7656247386051 * S_NumWebVisitsMonth
239146    +          +     1.13086655489449 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.69087988352897 * S_AcceptedCmpTotal + -0.11955753576733 * 
S_Frq + 0.84152651412075 * S_Mnt + -0.64419071408502 * S_MntMeatProducts + -0.49060224303044 * 
S_NumCatalogPurchases + -0.04840762943457 * S_NumDealsPurchases + -0.7656247386051 * 
S_NumWebVisitsMonth + 1.13086655489449 * S_Recency ;
239147    +   H1x1_1  = H1x1_1  +    -0.53136707555877 * Marital_StatusDivorced
239148    +          +    -0.05888536499281 * Marital_StatusMarried
239149    +          +    -0.22627441829205 * Marital_StatusSingle
239150    +          +     0.52348719245564 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.53136707555877 * Marital_StatusDivorced + 
-0.05888536499281 * Marital_StatusMarried + -0.22627441829205 * Marital_StatusSingle + 
0.52348719245564 * Marital_StatusTogether ;
239151    +   H1x1_2  = H1x1_2  +    -0.85322837962298 * Marital_StatusDivorced
239152    +          +     0.82536605771339 * Marital_StatusMarried
239153    +          +    -0.97196770004098 * Marital_StatusSingle
239154    +          +      1.2063947269032 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.85322837962298 * Marital_StatusDivorced + 
0.82536605771339 * Marital_StatusMarried + -0.97196770004098 * Marital_StatusSingle + 
1.2063947269032 * Marital_StatusTogether ;
239155    +   H1x1_1  =     3.30547913450619 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 3.30547913450619 + H1x1_1 ;
239156    +   H1x1_2  =     1.08446512287712 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.08446512287712 + H1x1_2 ;
239157    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
239158    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
239159    +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
239160    +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
239161    +END;
MPRINT(EM_DIAGRAM):   END;
239162    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
239163    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
239164    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
239165    +END;
MPRINT(EM_DIAGRAM):   END;
239166    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
239167    +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
239168    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
239169    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
239170    +   H1x2_1  =     0.52271766494525 * S_AcceptedCmpTotal
239171    +          +     0.57611155332907 * S_Frq  +     2.82792468297238 * S_Mnt
239172    +          +    -1.52187144029368 * S_MntMeatProducts
239173    +          +    -0.17233011764417 * S_NumCatalogPurchases
239174    +          +     0.08681674245114 * S_NumDealsPurchases
239175    +          +     0.13308256651831 * S_NumWebVisitsMonth
239176    +          +    -0.88526514420045 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.52271766494525 * S_AcceptedCmpTotal + 0.57611155332907 * 
S_Frq + 2.82792468297238 * S_Mnt + -1.52187144029368 * S_MntMeatProducts + -0.17233011764417 * 
S_NumCatalogPurchases + 0.08681674245114 * S_NumDealsPurchases + 0.13308256651831 * 
S_NumWebVisitsMonth + -0.88526514420045 * S_Recency ;
239177    +   H1x2_2  =      0.4222520789746 * S_AcceptedCmpTotal
239178    +          +    -3.13381438735416 * S_Frq  +    -0.34909843441486 * S_Mnt
239179    +          +     0.66187267823731 * S_MntMeatProducts
239180    +          +     1.52530454111654 * S_NumCatalogPurchases
239181    +          +     0.73982889008686 * S_NumDealsPurchases
239182    +          +     1.03760708665776 * S_NumWebVisitsMonth
239183    +          +    -1.31685207844927 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.4222520789746 * S_AcceptedCmpTotal + -3.13381438735416 * 
S_Frq + -0.34909843441486 * S_Mnt + 0.66187267823731 * S_MntMeatProducts + 1.52530454111654 * 
S_NumCatalogPurchases + 0.73982889008686 * S_NumDealsPurchases + 1.03760708665776 * 
S_NumWebVisitsMonth + -1.31685207844927 * S_Recency ;
239184    +   H1x2_1  = H1x2_1  +    -0.40921432838161 * Marital_StatusDivorced
239185    +          +    -0.57121500191985 * Marital_StatusMarried
239186    +          +     0.00575301863466 * Marital_StatusSingle
239187    +          +     0.58606212168272 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.40921432838161 * Marital_StatusDivorced + 
-0.57121500191985 * Marital_StatusMarried + 0.00575301863466 * Marital_StatusSingle + 
0.58606212168272 * Marital_StatusTogether ;
239188    +   H1x2_2  = H1x2_2  +     0.05193612372383 * Marital_StatusDivorced
239189    +          +     0.68382990555761 * Marital_StatusMarried
239190    +          +    -0.40241665873988 * Marital_StatusSingle
239191    +          +     0.66274709598028 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.05193612372383 * Marital_StatusDivorced + 
0.68382990555761 * Marital_StatusMarried + -0.40241665873988 * Marital_StatusSingle + 
0.66274709598028 * Marital_StatusTogether ;
239192    +   H1x2_1  =     1.66256790999222 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.66256790999222 + H1x2_1 ;
239193    +   H1x2_2  =    -2.71135276190381 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -2.71135276190381 + H1x2_2 ;
239194    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
239195    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
239196    +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
239197    +   H1x2_2  = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_2 = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
239198    +END;
MPRINT(EM_DIAGRAM):   END;
239199    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
239200    +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
239201    +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
239202    +END;
MPRINT(EM_DIAGRAM):   END;
239203    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
239204    +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
239205    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
239206    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
239207    +   H1x3_1  =    -1.36813165661884 * S_AcceptedCmpTotal
239208    +          +    -0.29960918468261 * S_Frq  +    -0.65204315831074 * S_Mnt
239209    +          +    -2.40830591527574 * S_MntMeatProducts
239210    +          +    -0.89296864866675 * S_NumCatalogPurchases
239211    +          +     1.79889409325514 * S_NumDealsPurchases
239212    +          +    -0.33765715793031 * S_NumWebVisitsMonth
239213    +          +    -0.63474704455434 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_1 = -1.36813165661884 * S_AcceptedCmpTotal + -0.29960918468261 * 
S_Frq + -0.65204315831074 * S_Mnt + -2.40830591527574 * S_MntMeatProducts + -0.89296864866675 
* S_NumCatalogPurchases + 1.79889409325514 * S_NumDealsPurchases + -0.33765715793031 * 
S_NumWebVisitsMonth + -0.63474704455434 * S_Recency ;
239214    +   H1x3_2  =    -0.20409738779324 * S_AcceptedCmpTotal
239215    +          +     1.49919916163823 * S_Frq  +     -0.9415605932144 * S_Mnt
239216    +          +     0.04224245417831 * S_MntMeatProducts
239217    +          +     0.25836861794607 * S_NumCatalogPurchases
239218    +          +     2.47909264202917 * S_NumDealsPurchases
239219    +          +     0.14790226792406 * S_NumWebVisitsMonth
239220    +          +     0.40870786833591 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_2 = -0.20409738779324 * S_AcceptedCmpTotal + 1.49919916163823 * 
S_Frq + -0.9415605932144 * S_Mnt + 0.04224245417831 * S_MntMeatProducts + 0.25836861794607 * 
S_NumCatalogPurchases + 2.47909264202917 * S_NumDealsPurchases + 0.14790226792406 * 
S_NumWebVisitsMonth + 0.40870786833591 * S_Recency ;
239221    +   H1x3_1  = H1x3_1  +     0.20928850420446 * Marital_StatusDivorced
239222    +          +     0.39103795234666 * Marital_StatusMarried
239223    +          +    -0.52822284221545 * Marital_StatusSingle
239224    +          +    -1.86494928221959 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 0.20928850420446 * Marital_StatusDivorced + 
0.39103795234666 * Marital_StatusMarried + -0.52822284221545 * Marital_StatusSingle + 
-1.86494928221959 * Marital_StatusTogether ;
239225    +   H1x3_2  = H1x3_2  +     1.62005786474378 * Marital_StatusDivorced
239226    +          +       1.975579060233 * Marital_StatusMarried
239227    +          +     0.15028521746762 * Marital_StatusSingle
239228    +          +     0.92005975380984 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + 1.62005786474378 * Marital_StatusDivorced + 
1.975579060233 * Marital_StatusMarried + 0.15028521746762 * Marital_StatusSingle + 
0.92005975380984 * Marital_StatusTogether ;
239229    +   H1x3_1  =     0.89242262747745 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.89242262747745 + H1x3_1 ;
239230    +   H1x3_2  =     0.65972128608947 + H1x3_2 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = 0.65972128608947 + H1x3_2 ;
239231    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
239232    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
239233    +   H1x3_1  = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_1 = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
239234    +   H1x3_2  = 1.0 / (1.0 + EXP(MIN( - H1x3_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_2 = 1.0 / (1.0 + EXP(MIN( - H1x3_2 , _EXP_BAR)));
239235    +END;
MPRINT(EM_DIAGRAM):   END;
239236    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
239237    +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
239238    +   H1x3_2  = .;
MPRINT(EM_DIAGRAM):   H1x3_2 = .;
239239    +END;
MPRINT(EM_DIAGRAM):   END;
239240    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
239241    +*** Writing the Node H1x4_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x4_ ;
239242    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
239243    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
239244    +   H1x4_1  =    -1.56857036994838 * S_AcceptedCmpTotal
239245    +          +    -0.01709393019065 * S_Frq  +    -0.41130381419631 * S_Mnt
239246    +          +     0.16060225059391 * S_MntMeatProducts
239247    +          +     1.53093292630033 * S_NumCatalogPurchases
239248    +          +     0.39573641806699 * S_NumDealsPurchases
239249    +          +    -0.95387142126649 * S_NumWebVisitsMonth
239250    +          +     0.58661969978382 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x4_1 = -1.56857036994838 * S_AcceptedCmpTotal + -0.01709393019065 * 
S_Frq + -0.41130381419631 * S_Mnt + 0.16060225059391 * S_MntMeatProducts + 1.53093292630033 * 
S_NumCatalogPurchases + 0.39573641806699 * S_NumDealsPurchases + -0.95387142126649 * 
S_NumWebVisitsMonth + 0.58661969978382 * S_Recency ;
239251    +   H1x4_2  =     0.40365014181339 * S_AcceptedCmpTotal
239252    +          +     0.25758137147094 * S_Frq  +     1.96878849657351 * S_Mnt
239253    +          +     0.71628478327205 * S_MntMeatProducts
239254    +          +     0.15890352363556 * S_NumCatalogPurchases
239255    +          +    -1.12928875468011 * S_NumDealsPurchases
239256    +          +    -0.30108145274307 * S_NumWebVisitsMonth
239257    +          +     0.28810419317266 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x4_2 = 0.40365014181339 * S_AcceptedCmpTotal + 0.25758137147094 * 
S_Frq + 1.96878849657351 * S_Mnt + 0.71628478327205 * S_MntMeatProducts + 0.15890352363556 * 
S_NumCatalogPurchases + -1.12928875468011 * S_NumDealsPurchases + -0.30108145274307 * 
S_NumWebVisitsMonth + 0.28810419317266 * S_Recency ;
239258    +   H1x4_1  = H1x4_1  +     0.71809860803817 * Marital_StatusDivorced
239259    +          +     0.91966160839643 * Marital_StatusMarried
239260    +          +    -0.63411090570397 * Marital_StatusSingle
239261    +          +    -0.54635673224032 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x4_1 = H1x4_1 + 0.71809860803817 * Marital_StatusDivorced + 
0.91966160839643 * Marital_StatusMarried + -0.63411090570397 * Marital_StatusSingle + 
-0.54635673224032 * Marital_StatusTogether ;
239262    +   H1x4_2  = H1x4_2  +    -0.82559954633474 * Marital_StatusDivorced
239263    +          +     0.77230489026504 * Marital_StatusMarried
239264    +          +     0.20456495503812 * Marital_StatusSingle
239265    +          +    -0.94791841887496 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x4_2 = H1x4_2 + -0.82559954633474 * Marital_StatusDivorced + 
0.77230489026504 * Marital_StatusMarried + 0.20456495503812 * Marital_StatusSingle + 
-0.94791841887496 * Marital_StatusTogether ;
239266    +   H1x4_1  =    -0.74278734869781 + H1x4_1 ;
MPRINT(EM_DIAGRAM):   H1x4_1 = -0.74278734869781 + H1x4_1 ;
239267    +   H1x4_2  =     1.36386007305279 + H1x4_2 ;
MPRINT(EM_DIAGRAM):   H1x4_2 = 1.36386007305279 + H1x4_2 ;
239268    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
239269    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
239270    +   H1x4_1  = 1.0 / (1.0 + EXP(MIN( - H1x4_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x4_1 = 1.0 / (1.0 + EXP(MIN( - H1x4_1 , _EXP_BAR)));
239271    +   H1x4_2  = 1.0 / (1.0 + EXP(MIN( - H1x4_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x4_2 = 1.0 / (1.0 + EXP(MIN( - H1x4_2 , _EXP_BAR)));
239272    +END;
MPRINT(EM_DIAGRAM):   END;
239273    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
239274    +   H1x4_1  = .;
MPRINT(EM_DIAGRAM):   H1x4_1 = .;
239275    +   H1x4_2  = .;
MPRINT(EM_DIAGRAM):   H1x4_2 = .;
239276    +END;
MPRINT(EM_DIAGRAM):   END;
239277    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
239278    +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
239279    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
239280    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
239281    +   H2x1_1  =     6.70671434954254 * H1x1_1  +    -3.26026761915622 * H1x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 6.70671434954254 * H1x1_1 + -3.26026761915622 * H1x1_2 ;
239282    +   H2x1_2  =     9.50930943961048 * H1x1_1  +     -38.665886357082 * H1x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 9.50930943961048 * H1x1_1 + -38.665886357082 * H1x1_2 ;
239283    +   H2x1_1  = H2x1_1  +    -2.93089545861469 * H1x2_1
239284    +          +     1.56101538169797 * H1x2_2 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -2.93089545861469 * H1x2_1 + 1.56101538169797 * H1x2_2 
;
239285    +   H2x1_2  = H2x1_2  +    -0.71350117244702 * H1x2_1
239286    +          +    -3.81025846953023 * H1x2_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -0.71350117244702 * H1x2_1 + -3.81025846953023 * 
H1x2_2 ;
239287    +   H2x1_1  = H2x1_1  +    -0.33624313911685 * H1x3_1
239288    +          +     -0.2506302302983 * H1x3_2 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -0.33624313911685 * H1x3_1 + -0.2506302302983 * H1x3_2 
;
239289    +   H2x1_2  = H2x1_2  +    -0.95434767487254 * H1x3_1
239290    +          +    -0.10638654133666 * H1x3_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -0.95434767487254 * H1x3_1 + -0.10638654133666 * 
H1x3_2 ;
239291    +   H2x1_1  = H2x1_1  +    -0.27261326347944 * H1x4_1
239292    +          +     0.15687682287669 * H1x4_2 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -0.27261326347944 * H1x4_1 + 0.15687682287669 * H1x4_2 
;
239293    +   H2x1_2  = H2x1_2  +     0.43717724195408 * H1x4_1
239294    +          +     0.97600288948907 * H1x4_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.43717724195408 * H1x4_1 + 0.97600288948907 * H1x4_2 ;
239295    +   H2x1_1  =    -1.76465776305701 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -1.76465776305701 + H2x1_1 ;
239296    +   H2x1_2  =     2.45505067378694 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 2.45505067378694 + H2x1_2 ;
239297    +   H2x1_1  = SIN(H2x1_1 );
MPRINT(EM_DIAGRAM):   H2x1_1 = SIN(H2x1_1 );
239298    +   H2x1_2  = SIN(H2x1_2 );
MPRINT(EM_DIAGRAM):   H2x1_2 = SIN(H2x1_2 );
239299    +END;
MPRINT(EM_DIAGRAM):   END;
239300    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
239301    +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
239302    +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
239303    +END;
MPRINT(EM_DIAGRAM):   END;
239304    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
239305    +*** Writing the Node H2x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x2_ ;
239306    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
239307    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
239308    +   H2x2_1  =     0.44221000188212 * H1x1_1  +    -0.09410411660626 * H1x1_2 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = 0.44221000188212 * H1x1_1 + -0.09410411660626 * H1x1_2 ;
239309    +   H2x2_2  =    -0.62041237832472 * H1x1_1  +    -1.70568019769479 * H1x1_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = -0.62041237832472 * H1x1_1 + -1.70568019769479 * H1x1_2 ;
239310    +   H2x2_1  = H2x2_1  +     0.86476170574504 * H1x2_1
239311    +          +    -2.36042697137738 * H1x2_2 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + 0.86476170574504 * H1x2_1 + -2.36042697137738 * H1x2_2 
;
239312    +   H2x2_2  = H2x2_2  +     0.44483356408795 * H1x2_1
239313    +          +    -1.66254033339836 * H1x2_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + 0.44483356408795 * H1x2_1 + -1.66254033339836 * H1x2_2 
;
239314    +   H2x2_1  = H2x2_1  +     2.16429199725142 * H1x3_1
239315    +          +     1.43296701176218 * H1x3_2 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + 2.16429199725142 * H1x3_1 + 1.43296701176218 * H1x3_2 ;
239316    +   H2x2_2  = H2x2_2  +     -2.3086904824016 * H1x3_1
239317    +          +    -2.17810690370253 * H1x3_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + -2.3086904824016 * H1x3_1 + -2.17810690370253 * H1x3_2 
;
239318    +   H2x2_1  = H2x2_1  +     0.00588994713052 * H1x4_1
239319    +          +     0.12676819806376 * H1x4_2 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + 0.00588994713052 * H1x4_1 + 0.12676819806376 * H1x4_2 ;
239320    +   H2x2_2  = H2x2_2  +     0.82027256992322 * H1x4_1
239321    +          +    -0.52732352975227 * H1x4_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + 0.82027256992322 * H1x4_1 + -0.52732352975227 * H1x4_2 
;
239322    +   H2x2_1  =     0.47389009262422 + H2x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = 0.47389009262422 + H2x2_1 ;
239323    +   H2x2_2  =     -0.8122008316452 + H2x2_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = -0.8122008316452 + H2x2_2 ;
239324    +   H2x2_1  = SIN(H2x2_1 );
MPRINT(EM_DIAGRAM):   H2x2_1 = SIN(H2x2_1 );
239325    +   H2x2_2  = SIN(H2x2_2 );
MPRINT(EM_DIAGRAM):   H2x2_2 = SIN(H2x2_2 );
239326    +END;
MPRINT(EM_DIAGRAM):   END;
239327    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
239328    +   H2x2_1  = .;
MPRINT(EM_DIAGRAM):   H2x2_1 = .;
239329    +   H2x2_2  = .;
MPRINT(EM_DIAGRAM):   H2x2_2 = .;
239330    +END;
MPRINT(EM_DIAGRAM):   END;
239331    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
239332    +*** Writing the Node H2x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x3_ ;
239333    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
239334    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
239335    +   H2x3_1  =    -0.28493649489231 * H1x1_1  +     0.46324227997344 * H1x1_2 ;
MPRINT(EM_DIAGRAM):   H2x3_1 = -0.28493649489231 * H1x1_1 + 0.46324227997344 * H1x1_2 ;
239336    +   H2x3_2  =     0.41015874548881 * H1x1_1  +    -0.05146341955765 * H1x1_2 ;
MPRINT(EM_DIAGRAM):   H2x3_2 = 0.41015874548881 * H1x1_1 + -0.05146341955765 * H1x1_2 ;
239337    +   H2x3_1  = H2x3_1  +    -1.00349052905386 * H1x2_1
239338    +          +     0.64290952668224 * H1x2_2 ;
MPRINT(EM_DIAGRAM):   H2x3_1 = H2x3_1 + -1.00349052905386 * H1x2_1 + 0.64290952668224 * H1x2_2 
;
239339    +   H2x3_2  = H2x3_2  +     0.48935572509195 * H1x2_1
239340    +          +     0.64476371718125 * H1x2_2 ;
MPRINT(EM_DIAGRAM):   H2x3_2 = H2x3_2 + 0.48935572509195 * H1x2_1 + 0.64476371718125 * H1x2_2 ;
239341    +   H2x3_1  = H2x3_1  +    -1.11988665905516 * H1x3_1
239342    +          +    -0.34805105626026 * H1x3_2 ;
MPRINT(EM_DIAGRAM):   H2x3_1 = H2x3_1 + -1.11988665905516 * H1x3_1 + -0.34805105626026 * 
H1x3_2 ;
239343    +   H2x3_2  = H2x3_2  +     0.32493988416634 * H1x3_1
239344    +          +     0.32809540262065 * H1x3_2 ;
MPRINT(EM_DIAGRAM):   H2x3_2 = H2x3_2 + 0.32493988416634 * H1x3_1 + 0.32809540262065 * H1x3_2 ;
239345    +   H2x3_1  = H2x3_1  +     0.47764131040964 * H1x4_1
239346    +          +    -1.36976442655344 * H1x4_2 ;
MPRINT(EM_DIAGRAM):   H2x3_1 = H2x3_1 + 0.47764131040964 * H1x4_1 + -1.36976442655344 * H1x4_2 
;
239347    +   H2x3_2  = H2x3_2  +     -0.3421580983005 * H1x4_1
239348    +          +     0.47926475944446 * H1x4_2 ;
MPRINT(EM_DIAGRAM):   H2x3_2 = H2x3_2 + -0.3421580983005 * H1x4_1 + 0.47926475944446 * H1x4_2 ;
239349    +   H2x3_1  =     0.90815431460142 + H2x3_1 ;
MPRINT(EM_DIAGRAM):   H2x3_1 = 0.90815431460142 + H2x3_1 ;
239350    +   H2x3_2  =    -1.77185533764538 + H2x3_2 ;
MPRINT(EM_DIAGRAM):   H2x3_2 = -1.77185533764538 + H2x3_2 ;
239351    +   H2x3_1  = SIN(H2x3_1 );
MPRINT(EM_DIAGRAM):   H2x3_1 = SIN(H2x3_1 );
239352    +   H2x3_2  = SIN(H2x3_2 );
MPRINT(EM_DIAGRAM):   H2x3_2 = SIN(H2x3_2 );
239353    +END;
MPRINT(EM_DIAGRAM):   END;
239354    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
239355    +   H2x3_1  = .;
MPRINT(EM_DIAGRAM):   H2x3_1 = .;
239356    +   H2x3_2  = .;
MPRINT(EM_DIAGRAM):   H2x3_2 = .;
239357    +END;
MPRINT(EM_DIAGRAM):   END;
239358    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
239359    +*** Writing the Node H3x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x1_ ;
239360    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
239361    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
239362    +   H3x1_1  =     4.31939811374229 * H2x1_1  +      -0.700351897347 * H2x1_2 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 4.31939811374229 * H2x1_1 + -0.700351897347 * H2x1_2 ;
239363    +   H3x1_1  = H3x1_1  +     2.40750918668175 * H2x2_1
239364    +          +    -1.54042325930374 * H2x2_2 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + 2.40750918668175 * H2x2_1 + -1.54042325930374 * H2x2_2 
;
239365    +   H3x1_1  = H3x1_1  +     1.46738265989804 * H2x3_1
239366    +          +     0.20077963052939 * H2x3_2 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + 1.46738265989804 * H2x3_1 + 0.20077963052939 * H2x3_2 ;
239367    +   H3x1_1  =    -0.09840116412671 + H3x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = -0.09840116412671 + H3x1_1 ;
239368    +   H3x1_2  = 0;
MPRINT(EM_DIAGRAM):   H3x1_2 = 0;
239369    +   _MAX_ = MAX (H3x1_1 , H3x1_2 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H3x1_1 , H3x1_2 );
239370    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
239371    +   H3x1_1  = EXP(H3x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_1 = EXP(H3x1_1 - _MAX_);
239372    +   _SUM_ = _SUM_ + H3x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_1 ;
239373    +   H3x1_2  = EXP(H3x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_2 = EXP(H3x1_2 - _MAX_);
239374    +   _SUM_ = _SUM_ + H3x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_2 ;
239375    +   H3x1_1  = H3x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 / _SUM_;
239376    +   H3x1_2  = H3x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_2 = H3x1_2 / _SUM_;
239377    +END;
MPRINT(EM_DIAGRAM):   END;
239378    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
239379    +   H3x1_1  = .;
MPRINT(EM_DIAGRAM):   H3x1_1 = .;
239380    +   H3x1_2  = .;
MPRINT(EM_DIAGRAM):   H3x1_2 = .;
239381    +END;
MPRINT(EM_DIAGRAM):   END;
239382    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
239383    +*** Writing the Node H3x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x2_ ;
239384    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
239385    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
239386    +   H3x2_1  =    -1.46965147800397 * H2x1_1  +    -0.15489723855448 * H2x1_2 ;
MPRINT(EM_DIAGRAM):   H3x2_1 = -1.46965147800397 * H2x1_1 + -0.15489723855448 * H2x1_2 ;
239387    +   H3x2_1  = H3x2_1  +     0.91269334410481 * H2x2_1
239388    +          +     -0.0392976578726 * H2x2_2 ;
MPRINT(EM_DIAGRAM):   H3x2_1 = H3x2_1 + 0.91269334410481 * H2x2_1 + -0.0392976578726 * H2x2_2 ;
239389    +   H3x2_1  = H3x2_1  +    -1.07273740820729 * H2x3_1
239390    +          +    -1.32572907075931 * H2x3_2 ;
MPRINT(EM_DIAGRAM):   H3x2_1 = H3x2_1 + -1.07273740820729 * H2x3_1 + -1.32572907075931 * 
H2x3_2 ;
239391    +   H3x2_1  =     0.58690615295837 + H3x2_1 ;
MPRINT(EM_DIAGRAM):   H3x2_1 = 0.58690615295837 + H3x2_1 ;
239392    +   H3x2_2  = 0;
MPRINT(EM_DIAGRAM):   H3x2_2 = 0;
239393    +   _MAX_ = MAX (H3x2_1 , H3x2_2 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H3x2_1 , H3x2_2 );
239394    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
239395    +   H3x2_1  = EXP(H3x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x2_1 = EXP(H3x2_1 - _MAX_);
239396    +   _SUM_ = _SUM_ + H3x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x2_1 ;
239397    +   H3x2_2  = EXP(H3x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x2_2 = EXP(H3x2_2 - _MAX_);
239398    +   _SUM_ = _SUM_ + H3x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x2_2 ;
239399    +   H3x2_1  = H3x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x2_1 = H3x2_1 / _SUM_;
239400    +   H3x2_2  = H3x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x2_2 = H3x2_2 / _SUM_;
239401    +END;
MPRINT(EM_DIAGRAM):   END;
239402    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
239403    +   H3x2_1  = .;
MPRINT(EM_DIAGRAM):   H3x2_1 = .;
239404    +   H3x2_2  = .;
MPRINT(EM_DIAGRAM):   H3x2_2 = .;
239405    +END;
MPRINT(EM_DIAGRAM):   END;
239406    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
239407    +*** Writing the Node H4x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H4x1_ ;
239408    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
239409    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
239410    +   H4x1_1  =     2.98683826857579 * H3x1_1  +     -3.7943130439002 * H3x1_2 ;
MPRINT(EM_DIAGRAM):   H4x1_1 = 2.98683826857579 * H3x1_1 + -3.7943130439002 * H3x1_2 ;
239411    +   H4x1_1  = H4x1_1  +     -0.1130856885584 * H3x2_1
239412    +          +     0.90223250703174 * H3x2_2 ;
MPRINT(EM_DIAGRAM):   H4x1_1 = H4x1_1 + -0.1130856885584 * H3x2_1 + 0.90223250703174 * H3x2_2 ;
239413    +   H4x1_1  =     0.34321706022332 + H4x1_1 ;
MPRINT(EM_DIAGRAM):   H4x1_1 = 0.34321706022332 + H4x1_1 ;
239414    +   H4x1_2  = 0;
MPRINT(EM_DIAGRAM):   H4x1_2 = 0;
239415    +   _MAX_ = MAX (H4x1_1 , H4x1_2 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H4x1_1 , H4x1_2 );
239416    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
239417    +   H4x1_1  = EXP(H4x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H4x1_1 = EXP(H4x1_1 - _MAX_);
239418    +   _SUM_ = _SUM_ + H4x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H4x1_1 ;
239419    +   H4x1_2  = EXP(H4x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H4x1_2 = EXP(H4x1_2 - _MAX_);
239420    +   _SUM_ = _SUM_ + H4x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H4x1_2 ;
239421    +   H4x1_1  = H4x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H4x1_1 = H4x1_1 / _SUM_;
239422    +   H4x1_2  = H4x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H4x1_2 = H4x1_2 / _SUM_;
239423    +END;
MPRINT(EM_DIAGRAM):   END;
239424    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
239425    +   H4x1_1  = .;
MPRINT(EM_DIAGRAM):   H4x1_1 = .;
239426    +   H4x1_2  = .;
MPRINT(EM_DIAGRAM):   H4x1_2 = .;
239427    +END;
MPRINT(EM_DIAGRAM):   END;
239428    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
239429    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
239430    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
239431    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
239432    +   P_DepVar1  =     4.36647161522328 * H4x1_1  +    -5.83126986959915 * H4x1_2
239433    +         ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 4.36647161522328 * H4x1_1 + -5.83126986959915 * H4x1_2 ;
239434    +   P_DepVar1  =    -4.21364937441824 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -4.21364937441824 + P_DepVar1 ;
239435    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
239436    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
239437    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
239438    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
239439    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
239440    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
239441    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
239442    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
239443    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
239444    +END;
MPRINT(EM_DIAGRAM):   END;
239445    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
239446    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
239447    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
239448    +END;
MPRINT(EM_DIAGRAM):   END;
239449    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
239450    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
239451    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
239452    +END;
MPRINT(EM_DIAGRAM):   END;
239453    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
239454    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
239455    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
239456    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
239457    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
239458    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
239459    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
239460    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
239461    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
239462    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
239463    +END;
MPRINT(EM_DIAGRAM):   END;
239464    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
239465    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
239466    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
239467    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
239468     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
239469     quit;
239470     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
239471     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
239472     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
239473     retain ID 2 Node "AutoNeural38";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural38";
239474     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
239475     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2679 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2679 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

239476     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
239477     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
239478     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2679 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2679 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

239479     proc sort data=EMWS8.AutoNeural38_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural38_variableset out=_temp2(keep=NAME 
CREATOR);
239480     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
239481     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL38_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

239482     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
239483     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
239484     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
239485     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

239486     proc contents data=EMWS8.AutoNeural38_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural38_train out=_meta(keep=NAME) noprint;
239487     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 73 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

239488     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
239489     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
239490     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 73 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 73 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

239491     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
239492     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
239493     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
239494     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 73 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 73 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

239495     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
239496     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
239496   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1163 rows and 5 columns.

239497     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

239498     proc append base=EMWS8.Ensmbl23_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl23_FCMP data=_tempx;
239499     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL23_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1163 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL23_FCMP has 1163 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

239500     filename _pref
239500   ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
239501     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
239502     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
239503    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
239504    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
239505    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
239506    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
239507    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
239508    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
239509     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
239510     quit;
239511     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
239512     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
239513     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
239514     retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
239515     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
239516     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

239517     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
239518     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
239519     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

239520     proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
239521     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
239522     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

239523     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
239524     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
239525     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
239526     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

239527     proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
239528     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

239529     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
239530     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
239531     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

239532     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
239533     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
239534     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
239535     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

239536     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
239537     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
239537   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

239538     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

239539     proc append base=EMWS8.Ensmbl23_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl23_FCMP data=_tempx;
239540     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL23_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL23_FCMP has 1167 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

239541     filename _pref
239541   ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
239542     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
239543     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
239544    +
239545    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
239546    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
239546   !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
239547    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
239548    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
239549    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
239550    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
239551    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
239552     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
239553     quit;
239554     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
239555     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
239556     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
239557     retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
239558     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
239559     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

239560     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
239561     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
239562     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

239563     proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
239564     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
239565     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

239566     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
239567     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
239568     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
239569     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

239570     proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
239571     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

239572     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
239573     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
239574     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

239575     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
239576     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
239577     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
239578     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

239579     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
239580     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
239580   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

239581     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

239582     proc append base=EMWS8.Ensmbl23_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl23_FCMP data=_tempx;
239583     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL23_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL23_FCMP has 1206 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

239584     filename _pref
239584   ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
239585     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
239586     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
239587    +
239588    +
239589    +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
239590    +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
239591    +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
239592    +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
239593    +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
239594    +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
239595    +
239596    +
239597    +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
239598    +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
239599    +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
239600    +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
239601    +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
239602    +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
239603    +
239604    +
239605    +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
239606    +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
239607    +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
239608    +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
239609    +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
239610    +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
239611    +
239612    +
239613    +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
239614    +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
239615    +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
239616    +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
239617    +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
239618    +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
239619    +
239620    +
239621    +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
239622    +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
239623    +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
239624    +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
239625    +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
239626    +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
239627    +
239628    +
239629    +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
239630    +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
239631    +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
239632    +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
239633    +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
239634    +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
239635    +
239636    +
239637    +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
239638    +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
239639    +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
239640    +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
239641    +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
239642    +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
239643    +
239644    +
239645    +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
239646    +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
239647    +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
239648    +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
239649    +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
239650    +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
239651    +if
239652    +_FILTERNORM1 not in ( '.')
239653    + and
239654    +_FILTERNORM2 not in ( '.')
239655    + and
239656    +_FILTERNORM3 not in ( '.')
239657    + and
239658    +_FILTERNORM4 not in ( '.')
239659    + and
239660    +_FILTERNORM5 not in ( '.')
239661    + and
239662    +_FILTERNORM6 not in ( '.')
239663    + and
239664    +_FILTERNORM7 not in ( ' ')
239665    + and
239666    +_FILTERNORM8 not in ( ' ')
239667    +and
239668    +( Dt_Customer ne .)
239669    +and ( Income ne . and (Income<=107000))
239670    +and ( Kidhome ne .)
239671    +and ( MntFishProducts ne .)
239672    +and ( MntFruits ne .)
239673    +and ( MntGoldProds ne .)
239674    +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
239675    +and ( MntSweetProducts ne .)
239676    +and ( MntWines ne .)
239677    +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
239678    +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
239679    +and ( NumStorePurchases ne .)
239680    +and ( NumWebPurchases ne .)
239681    +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
239682    +and ( Recency ne .)
239683    +and ( Teenhome ne .)
239684    +and ( Year_Birth ne .)
239685    +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
239686    +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
239687    +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
239688    +end;
MPRINT(EM_DIAGRAM):   end;
239689    +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
239690    +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
239691     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
239692     quit;
239693     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
239694     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
239695     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
239696     retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
239697     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
239698     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

239699     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
239700     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
239701     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

239702     proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
239703     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
239704     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

239705     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
239706     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
239707     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
239708     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

239709     proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
239710     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

239711     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
239712     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
239713     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

239714     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
239715     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
239716     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
239717     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

239718     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
239719     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
239719   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

239720     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

239721     proc append base=EMWS8.Ensmbl23_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl23_FCMP data=_tempx;
239722     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL23_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL23_FCMP has 1272 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

239723     %macro varDept(fcmpdata=,id=);
239724     %global nobs&id scoreFlag&id;
239725     %let scoreFlag&id = 0;
239726     %if &id=1 or ^&fcmpStart %then %do;
239727     proc sort data=&fcmpdata out=_temp&id nodupkey;
239728     by NAME;
239729     where id=&id and LHS in( %let j=1;
239730     %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
239731     %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
239732     "&var" %let j = %eval(&j+1);
239733     %end;
239734     );
239735     run;
239736     %let dsid = %sysfunc(open(_temp&id));
239737     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
239738     %let dsid = %sysfunc(close(&dsid));
239739     %if &&nobs&id %then %do;
239740     %let scoreFlag&id = 1;
239741     %let fcmpStart = 1;
239742     %end;
239743     %else %let fcmpStart = 0;
239744     %end;
239745     %else %do;
239746     proc sort data=&fcmpdata out=_tempid;
239747     where id=&id;
239748     by LHS;
239749     run;
239750     %let dsid = %sysfunc(open(_tempid));
239751     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
239752     %let dsid = %sysfunc(close(&dsid));
239753     %if ^&&nobs&id %then %do;
239754     proc datasets lib=work nolist;
239755     delete _tempid;
239756     run;
239757     quit;
239758     %end;
239759     %else %do;
239760     data _tempAll;
239761     set %let j=%eval(&id-1);
239762     %do x=1 %to &j;
239763     %if &&nobs&x %then %do;
239764     _temp&x %end;
239765     %end;
239766     ;
239767     run;
239768     proc sql;
239769     create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
239769   ! work._tempid p2 where p.name=p2.lhs;
239770     quit;
239771     data _temp&id;
239772     set _temp&id;
239773     where LHS ne '' and NAME ne '' and Node ne '';
239774     run;
239775     proc datasets lib=work nolist;
239776     delete _tempAll;
239777     run;
239778     %let dsid = %sysfunc(open(_temp&id));
239779     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
239780     %let dsid = %sysfunc(close(&dsid));
239781     %if ^&&nobs&id %then %do;
239782     proc datasets lib=work nolist;
239783     delete _temp&id;
239784     run;
239785     quit;
239786     %end;
239787     %else %do;
239788     %let scoreFlag&id = 1;
239789     data _temp&id;
239790     set _temp&id;
239791     where LHS ne NAME and node ne '';
239792     run;
239793     %let dsid = %sysfunc(open(_temp&id));
239794     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
239795     %let dsid = %sysfunc(close(&dsid));
239796     %if ^&&nobs&id %then %do;
239797     proc datasets lib=work nolist;
239798     delete _temp&id;
239799     run;
239800     quit;
239801     %end;
239802     %else %do;
239803     proc sort data=_temp&id nodupkey;
239804     by LHS NAME;
239805     run;
239806     %end;
239807     %end;
239808     %end;
239809     %end;
239810     %mend varDept;
239811     %macro optCode(outdata=fcmpdata);
239812     %global fcmpStart;
239813     %let fcmpStart = 0;
239814     %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
239815     %let NumNodes=9;
239816     %do k=1 %to &NumNodes;
239817     %vardept(fcmpdata=&outdata, id=&k);
239818     %end;
239819     %mend optCode;
239820     %optcode(outData=EMWS8.Ensmbl23_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl23_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL23_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl23_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 102 observations read from the data set EMWS8.ENSMBL23_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 71 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 31 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl23_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL23_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl23_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL23_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl23_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL23_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.17 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 31 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 31 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl23_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL23_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 31 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 31 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 14 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 14 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 14 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 14 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl23_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL23_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 31 observations read from the data set WORK._TEMP2.
NOTE: There were 14 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 45 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl23_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL23_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl23_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL23_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

239821     filename _pref
239821   ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural39\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural39\EMPUBLISHSCORE.sas";
239822     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
239823     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural39\EMPUBLISHSCORE.sas.
239824    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
239825    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
239826    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
239827    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
239828    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
239829    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
239830    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
239831    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
239832    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
239833    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
239834    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
239835    +LENGTH _WARN_ $4
239836    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
239837    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
239838    +
239839    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
239840    +
239841    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
239842    +
239843    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
239844    +
239845    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
239846    +
239847    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
239848    +
239849    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
239850    +
239851    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
239852    +
239853    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
239854    +
239855    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
239856    +
239857    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
239858    +
239859    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
239860    +
239861    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
239862    +
239863    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
239864    +
239865    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
239866    +
239867    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
239868    +
239869    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
239870    +
239871    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
239872    +
239873    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
239874    +
239875    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
239876    +
239877    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
239878    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
239879    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
239880    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
239881    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
239882    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
239883    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
239884    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
239885    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
239886    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
239887    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
239888    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
239889    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
239890    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
239891    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
239892    +end;
MPRINT(EM_DIAGRAM):   end;
239893    +else do;
MPRINT(EM_DIAGRAM):   else do;
239894    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
239895    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
239896    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
239897    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
239898    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
239899    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
239900    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
239901    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
239902    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
239903    +         end;
MPRINT(EM_DIAGRAM):   end;
239904    +         else do;
MPRINT(EM_DIAGRAM):   else do;
239905    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
239906    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
239907    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
239908    +            end;
MPRINT(EM_DIAGRAM):   end;
239909    +         end;
MPRINT(EM_DIAGRAM):   end;
239910    +      end;
MPRINT(EM_DIAGRAM):   end;
239911    +      else do;
MPRINT(EM_DIAGRAM):   else do;
239912    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
239913    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
239914    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
239915    +         end;
MPRINT(EM_DIAGRAM):   end;
239916    +      end;
MPRINT(EM_DIAGRAM):   end;
239917    +   end;
MPRINT(EM_DIAGRAM):   end;
239918    +   else do;
MPRINT(EM_DIAGRAM):   else do;
239919    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
239920    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
239921    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
239922    +      end;
MPRINT(EM_DIAGRAM):   end;
239923    +      else do;
MPRINT(EM_DIAGRAM):   else do;
239924    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
239925    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
239926    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
239927    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
239928    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
239929    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
239930    +         end;
MPRINT(EM_DIAGRAM):   end;
239931    +      end;
MPRINT(EM_DIAGRAM):   end;
239932    +   end;
MPRINT(EM_DIAGRAM):   end;
239933    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
239934    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
239935    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
239936    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
239937    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
239938    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
239939    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
239940    +   end;
MPRINT(EM_DIAGRAM):   end;
239941    +end;
MPRINT(EM_DIAGRAM):   end;
239942    +
239943    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
239944    +*** Checking missing input Interval
239945    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
239946    +
239947    +IF NMISS(
239948    +   AcceptedCmpTotal ,
239949    +   Frq ,
239950    +   Mnt ,
239951    +   MntMeatProducts ,
239952    +   NumCatalogPurchases ,
239953    +   NumDealsPurchases ,
239954    +   NumWebVisitsMonth ,
239955    +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Mnt , MntMeatProducts , 
NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , Recency ) THEN DO;
239956    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
239957    +
239958    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
239959    +END;
MPRINT(EM_DIAGRAM):   END;
239960    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
239961    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
239962    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
239963    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
239964    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
239965    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
239966    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
239967    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
239968    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
239969    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
239970    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
239971    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
239972    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
239973    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
239974    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
239975    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
239976    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
239977    +END;
MPRINT(EM_DIAGRAM):   END;
239978    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
239979    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
239980    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
239981    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
239982    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
239983    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
239984    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
239985    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
239986    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
239987    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
239988    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
239989    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
239990    +   ELSE S_NumCatalogPurchases
239991    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
239992    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
239993    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
239994    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
239995    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
239996    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
239997    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
239998    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
239999    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
240000    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
240001    +END;
MPRINT(EM_DIAGRAM):   END;
240002    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
240003    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
240004    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
240005    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
240006    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
240007    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
240008    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
240009    +   H1x1_1  =    -0.80144597199591 * S_AcceptedCmpTotal
240010    +          +    -0.14504406751843 * S_Frq  +    -0.94059273072385 * S_Mnt
240011    +          +     0.02561809182055 * S_MntMeatProducts
240012    +          +     -0.1793288912734 * S_NumCatalogPurchases
240013    +          +    -0.37563080213093 * S_NumDealsPurchases
240014    +          +    -0.48858578777845 * S_NumWebVisitsMonth
240015    +          +     1.20680693155412 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.80144597199591 * S_AcceptedCmpTotal + -0.14504406751843 * 
S_Frq + -0.94059273072385 * S_Mnt + 0.02561809182055 * S_MntMeatProducts + -0.1793288912734 * 
S_NumCatalogPurchases + -0.37563080213093 * S_NumDealsPurchases + -0.48858578777845 * 
S_NumWebVisitsMonth + 1.20680693155412 * S_Recency ;
240016    +   H1x1_2  =    -0.07420266838621 * S_AcceptedCmpTotal
240017    +          +    -0.45831074090349 * S_Frq  +     0.54967451479719 * S_Mnt
240018    +          +     1.94302986779634 * S_MntMeatProducts
240019    +          +      0.2669037763846 * S_NumCatalogPurchases
240020    +          +     0.29313104233947 * S_NumDealsPurchases
240021    +          +    -0.30591479309812 * S_NumWebVisitsMonth
240022    +          +     0.25821520617291 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.07420266838621 * S_AcceptedCmpTotal + -0.45831074090349 * 
S_Frq + 0.54967451479719 * S_Mnt + 1.94302986779634 * S_MntMeatProducts + 0.2669037763846 * 
S_NumCatalogPurchases + 0.29313104233947 * S_NumDealsPurchases + -0.30591479309812 * 
S_NumWebVisitsMonth + 0.25821520617291 * S_Recency ;
240023    +   H1x1_3  =    -0.12066404689072 * S_AcceptedCmpTotal
240024    +          +     0.68455759852245 * S_Frq  +     1.21976572320843 * S_Mnt
240025    +          +    -0.76055629383789 * S_MntMeatProducts
240026    +          +    -0.40114802991127 * S_NumCatalogPurchases
240027    +          +    -1.12215966034372 * S_NumDealsPurchases
240028    +          +    -0.30978133586417 * S_NumWebVisitsMonth
240029    +          +     0.20549481777473 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.12066404689072 * S_AcceptedCmpTotal + 0.68455759852245 * 
S_Frq + 1.21976572320843 * S_Mnt + -0.76055629383789 * S_MntMeatProducts + -0.40114802991127 * 
S_NumCatalogPurchases + -1.12215966034372 * S_NumDealsPurchases + -0.30978133586417 * 
S_NumWebVisitsMonth + 0.20549481777473 * S_Recency ;
240030    +   H1x1_1  = H1x1_1  +     0.27293780318455 * Marital_StatusDivorced
240031    +          +     0.20445663414925 * Marital_StatusMarried
240032    +          +     0.16369117386202 * Marital_StatusSingle
240033    +          +     0.24678692955726 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.27293780318455 * Marital_StatusDivorced + 
0.20445663414925 * Marital_StatusMarried + 0.16369117386202 * Marital_StatusSingle + 
0.24678692955726 * Marital_StatusTogether ;
240034    +   H1x1_2  = H1x1_2  +    -0.36629769700975 * Marital_StatusDivorced
240035    +          +     0.09645374599508 * Marital_StatusMarried
240036    +          +     -0.0816282741981 * Marital_StatusSingle
240037    +          +       0.097160394807 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.36629769700975 * Marital_StatusDivorced + 
0.09645374599508 * Marital_StatusMarried + -0.0816282741981 * Marital_StatusSingle + 
0.097160394807 * Marital_StatusTogether ;
240038    +   H1x1_3  = H1x1_3  +     1.07910879572923 * Marital_StatusDivorced
240039    +          +     -3.9031880089591 * Marital_StatusMarried
240040    +          +      1.6995748309328 * Marital_StatusSingle
240041    +          +    -0.60356952072267 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 1.07910879572923 * Marital_StatusDivorced + 
-3.9031880089591 * Marital_StatusMarried + 1.6995748309328 * Marital_StatusSingle + 
-0.60356952072267 * Marital_StatusTogether ;
240042    +   H1x1_1  =     4.12951833926199 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 4.12951833926199 + H1x1_1 ;
240043    +   H1x1_2  =      2.8051459955517 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 2.8051459955517 + H1x1_2 ;
240044    +   H1x1_3  =    -4.02151507937085 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -4.02151507937085 + H1x1_3 ;
240045    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
240046    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
240047    +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
240048    +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
240049    +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
240050    +END;
MPRINT(EM_DIAGRAM):   END;
240051    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
240052    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
240053    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
240054    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
240055    +END;
MPRINT(EM_DIAGRAM):   END;
240056    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
240057    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
240058    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
240059    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
240060    +   P_DepVar1  =    -49.7324855017185 * H1x1_1  +     60.9087770313173 * H1x1_2
240061    +          +     44.7070762374356 * H1x1_3 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -49.7324855017185 * H1x1_1 + 60.9087770313173 * H1x1_2 + 
44.7070762374356 * H1x1_3 ;
240062    +   P_DepVar1  =    -18.5106107755559 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -18.5106107755559 + P_DepVar1 ;
240063    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
240064    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
240065    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
240066    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
240067    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
240068    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
240069    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
240070    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
240071    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
240072    +END;
MPRINT(EM_DIAGRAM):   END;
240073    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
240074    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
240075    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
240076    +END;
MPRINT(EM_DIAGRAM):   END;
240077    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
240078    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
240079    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
240080    +END;
MPRINT(EM_DIAGRAM):   END;
240081    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
240082    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
240083    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
240084    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
240085    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
240086    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
240087    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
240088    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
240089    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
240090    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
240091    +END;
MPRINT(EM_DIAGRAM):   END;
240092    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
240093    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
240094    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
240095    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
240096     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
240097     quit;
240098     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
240099     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
240100     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
240101     retain ID 2 Node "AutoNeural39";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural39";
240102     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
240103     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 689 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 689 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

240104     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
240105     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
240106     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 689 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 689 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

240107     proc sort data=EMWS8.AutoNeural39_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural39_variableset out=_temp2(keep=NAME 
CREATOR);
240108     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
240109     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL39_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

240110     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
240111     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
240112     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
240113     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

240114     proc contents data=EMWS8.AutoNeural39_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural39_train out=_meta(keep=NAME) noprint;
240115     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 56 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

240116     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
240117     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
240118     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 56 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 56 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

240119     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
240120     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
240121     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
240122     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 56 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 56 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

240123     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
240124     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
240124   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 305 rows and 5 columns.

240125     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

240126     proc append base=EMWS8.Ensmbl23_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl23_FCMP data=_tempx;
240127     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL23_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 305 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL23_FCMP has 305 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

240128     filename _pref
240128   ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
240129     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
240130     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
240131    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
240132    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
240133    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
240134    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
240135    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
240136    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
240137     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
240138     quit;
240139     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
240140     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
240141     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
240142     retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
240143     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
240144     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

240145     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
240146     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
240147     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

240148     proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
240149     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
240150     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

240151     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
240152     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
240153     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
240154     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

240155     proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
240156     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

240157     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
240158     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
240159     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

240160     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
240161     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
240162     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
240163     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

240164     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
240165     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
240165   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

240166     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

240167     proc append base=EMWS8.Ensmbl23_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl23_FCMP data=_tempx;
240168     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL23_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL23_FCMP has 309 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

240169     filename _pref
240169   ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
240170     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
240171     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
240172    +
240173    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
240174    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
240174   !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
240175    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
240176    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
240177    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
240178    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
240179    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
240180     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
240181     quit;
240182     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
240183     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
240184     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
240185     retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
240186     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
240187     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

240188     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
240189     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
240190     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

240191     proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
240192     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
240193     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

240194     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
240195     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
240196     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
240197     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

240198     proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
240199     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

240200     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
240201     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
240202     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

240203     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
240204     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
240205     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
240206     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

240207     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
240208     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
240208   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

240209     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

240210     proc append base=EMWS8.Ensmbl23_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl23_FCMP data=_tempx;
240211     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL23_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL23_FCMP has 348 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

240212     filename _pref
240212   ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
240213     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
240214     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
240215    +
240216    +
240217    +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
240218    +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
240219    +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
240220    +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
240221    +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
240222    +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
240223    +
240224    +
240225    +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
240226    +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
240227    +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
240228    +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
240229    +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
240230    +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
240231    +
240232    +
240233    +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
240234    +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
240235    +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
240236    +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
240237    +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
240238    +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
240239    +
240240    +
240241    +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
240242    +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
240243    +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
240244    +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
240245    +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
240246    +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
240247    +
240248    +
240249    +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
240250    +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
240251    +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
240252    +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
240253    +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
240254    +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
240255    +
240256    +
240257    +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
240258    +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
240259    +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
240260    +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
240261    +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
240262    +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
240263    +
240264    +
240265    +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
240266    +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
240267    +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
240268    +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
240269    +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
240270    +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
240271    +
240272    +
240273    +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
240274    +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
240275    +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
240276    +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
240277    +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
240278    +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
240279    +if
240280    +_FILTERNORM1 not in ( '.')
240281    + and
240282    +_FILTERNORM2 not in ( '.')
240283    + and
240284    +_FILTERNORM3 not in ( '.')
240285    + and
240286    +_FILTERNORM4 not in ( '.')
240287    + and
240288    +_FILTERNORM5 not in ( '.')
240289    + and
240290    +_FILTERNORM6 not in ( '.')
240291    + and
240292    +_FILTERNORM7 not in ( ' ')
240293    + and
240294    +_FILTERNORM8 not in ( ' ')
240295    +and
240296    +( Dt_Customer ne .)
240297    +and ( Income ne . and (Income<=107000))
240298    +and ( Kidhome ne .)
240299    +and ( MntFishProducts ne .)
240300    +and ( MntFruits ne .)
240301    +and ( MntGoldProds ne .)
240302    +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
240303    +and ( MntSweetProducts ne .)
240304    +and ( MntWines ne .)
240305    +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
240306    +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
240307    +and ( NumStorePurchases ne .)
240308    +and ( NumWebPurchases ne .)
240309    +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
240310    +and ( Recency ne .)
240311    +and ( Teenhome ne .)
240312    +and ( Year_Birth ne .)
240313    +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
240314    +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
240315    +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
240316    +end;
MPRINT(EM_DIAGRAM):   end;
240317    +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
240318    +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
240319     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
240320     quit;
240321     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
240322     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
240323     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
240324     retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
240325     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
240326     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

240327     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
240328     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
240329     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

240330     proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
240331     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
240332     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

240333     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
240334     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
240335     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
240336     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

240337     proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
240338     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

240339     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
240340     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
240341     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

240342     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
240343     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
240344     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
240345     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

240346     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
240347     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
240347   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

240348     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

240349     proc append base=EMWS8.Ensmbl23_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl23_FCMP data=_tempx;
240350     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL23_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL23_FCMP has 414 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

240351     %macro varDept(fcmpdata=,id=);
240352     %global nobs&id scoreFlag&id;
240353     %let scoreFlag&id = 0;
240354     %if &id=1 or ^&fcmpStart %then %do;
240355     proc sort data=&fcmpdata out=_temp&id nodupkey;
240356     by NAME;
240357     where id=&id and LHS in( %let j=1;
240358     %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
240359     %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
240360     "&var" %let j = %eval(&j+1);
240361     %end;
240362     );
240363     run;
240364     %let dsid = %sysfunc(open(_temp&id));
240365     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
240366     %let dsid = %sysfunc(close(&dsid));
240367     %if &&nobs&id %then %do;
240368     %let scoreFlag&id = 1;
240369     %let fcmpStart = 1;
240370     %end;
240371     %else %let fcmpStart = 0;
240372     %end;
240373     %else %do;
240374     proc sort data=&fcmpdata out=_tempid;
240375     where id=&id;
240376     by LHS;
240377     run;
240378     %let dsid = %sysfunc(open(_tempid));
240379     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
240380     %let dsid = %sysfunc(close(&dsid));
240381     %if ^&&nobs&id %then %do;
240382     proc datasets lib=work nolist;
240383     delete _tempid;
240384     run;
240385     quit;
240386     %end;
240387     %else %do;
240388     data _tempAll;
240389     set %let j=%eval(&id-1);
240390     %do x=1 %to &j;
240391     %if &&nobs&x %then %do;
240392     _temp&x %end;
240393     %end;
240394     ;
240395     run;
240396     proc sql;
240397     create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
240397   ! work._tempid p2 where p.name=p2.lhs;
240398     quit;
240399     data _temp&id;
240400     set _temp&id;
240401     where LHS ne '' and NAME ne '' and Node ne '';
240402     run;
240403     proc datasets lib=work nolist;
240404     delete _tempAll;
240405     run;
240406     %let dsid = %sysfunc(open(_temp&id));
240407     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
240408     %let dsid = %sysfunc(close(&dsid));
240409     %if ^&&nobs&id %then %do;
240410     proc datasets lib=work nolist;
240411     delete _temp&id;
240412     run;
240413     quit;
240414     %end;
240415     %else %do;
240416     %let scoreFlag&id = 1;
240417     data _temp&id;
240418     set _temp&id;
240419     where LHS ne NAME and node ne '';
240420     run;
240421     %let dsid = %sysfunc(open(_temp&id));
240422     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
240423     %let dsid = %sysfunc(close(&dsid));
240424     %if ^&&nobs&id %then %do;
240425     proc datasets lib=work nolist;
240426     delete _temp&id;
240427     run;
240428     quit;
240429     %end;
240430     %else %do;
240431     proc sort data=_temp&id nodupkey;
240432     by LHS NAME;
240433     run;
240434     %end;
240435     %end;
240436     %end;
240437     %end;
240438     %mend varDept;
240439     %macro optCode(outdata=fcmpdata);
240440     %global fcmpStart;
240441     %let fcmpStart = 0;
240442     %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
240443     %let NumNodes=9;
240444     %do k=1 %to &NumNodes;
240445     %vardept(fcmpdata=&outdata, id=&k);
240446     %end;
240447     %mend optCode;
240448     %optcode(outData=EMWS8.Ensmbl23_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl23_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL23_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl23_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 51 observations read from the data set EMWS8.ENSMBL23_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 37 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 14 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl23_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL23_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl23_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL23_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl23_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL23_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 14 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl23_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL23_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 14 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 14 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 14 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 14 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 14 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl23_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL23_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP2.
NOTE: There were 14 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 28 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl23_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL23_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl23_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL23_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

240449     filename _pref
240449   ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural41\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural41\EMPUBLISHSCORE.sas";
240450     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
240451     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural41\EMPUBLISHSCORE.sas.
240452    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
240453    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
240454    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
240455    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
240456    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
240457    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
240458    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
240459    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
240460    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
240461    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
240462    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
240463    +LENGTH _WARN_ $4
240464    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
240465    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
240466    +
240467    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
240468    +
240469    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
240470    +
240471    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
240472    +
240473    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
240474    +
240475    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
240476    +
240477    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
240478    +
240479    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
240480    +
240481    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
240482    +
240483    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
240484    +
240485    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
240486    +
240487    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
240488    +
240489    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
240490    +
240491    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
240492    +
240493    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
240494    +
240495    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
240496    +
240497    +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
240498    +
240499    +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
240500    +
240501    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
240502    +
240503    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
240504    +
240505    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
240506    +
240507    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
240508    +
240509    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
240510    +
240511    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
240512    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
240513    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
240514    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
240515    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
240516    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
240517    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
240518    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
240519    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
240520    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
240521    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
240522    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
240523    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
240524    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
240525    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
240526    +end;
MPRINT(EM_DIAGRAM):   end;
240527    +else do;
MPRINT(EM_DIAGRAM):   else do;
240528    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
240529    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
240530    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
240531    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
240532    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
240533    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
240534    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
240535    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
240536    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
240537    +         end;
MPRINT(EM_DIAGRAM):   end;
240538    +         else do;
MPRINT(EM_DIAGRAM):   else do;
240539    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
240540    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
240541    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
240542    +            end;
MPRINT(EM_DIAGRAM):   end;
240543    +         end;
MPRINT(EM_DIAGRAM):   end;
240544    +      end;
MPRINT(EM_DIAGRAM):   end;
240545    +      else do;
MPRINT(EM_DIAGRAM):   else do;
240546    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
240547    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
240548    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
240549    +         end;
MPRINT(EM_DIAGRAM):   end;
240550    +      end;
MPRINT(EM_DIAGRAM):   end;
240551    +   end;
MPRINT(EM_DIAGRAM):   end;
240552    +   else do;
MPRINT(EM_DIAGRAM):   else do;
240553    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
240554    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
240555    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
240556    +      end;
MPRINT(EM_DIAGRAM):   end;
240557    +      else do;
MPRINT(EM_DIAGRAM):   else do;
240558    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
240559    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
240560    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
240561    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
240562    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
240563    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
240564    +         end;
MPRINT(EM_DIAGRAM):   end;
240565    +      end;
MPRINT(EM_DIAGRAM):   end;
240566    +   end;
MPRINT(EM_DIAGRAM):   end;
240567    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
240568    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
240569    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
240570    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
240571    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
240572    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
240573    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
240574    +   end;
MPRINT(EM_DIAGRAM):   end;
240575    +end;
MPRINT(EM_DIAGRAM):   end;
240576    +
240577    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
240578    +*** Checking missing input Interval
240579    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
240580    +
240581    +IF NMISS(
240582    +   AcceptedCmpTotal ,
240583    +   Frq ,
240584    +   Mnt ,
240585    +   MntMeatProducts ,
240586    +   NumCatalogPurchases ,
240587    +   NumDealsPurchases ,
240588    +   NumWebVisitsMonth ,
240589    +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Mnt , MntMeatProducts , 
NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , Recency ) THEN DO;
240590    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
240591    +
240592    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
240593    +END;
MPRINT(EM_DIAGRAM):   END;
240594    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
240595    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
240596    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
240597    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
240598    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
240599    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
240600    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
240601    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
240602    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
240603    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
240604    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
240605    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
240606    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
240607    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
240608    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
240609    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
240610    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
240611    +END;
MPRINT(EM_DIAGRAM):   END;
240612    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
240613    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
240614    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
240615    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
240616    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
240617    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
240618    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
240619    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
240620    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
240621    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
240622    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
240623    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
240624    +   ELSE S_NumCatalogPurchases
240625    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
240626    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
240627    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
240628    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
240629    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
240630    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
240631    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
240632    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
240633    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
240634    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
240635    +END;
MPRINT(EM_DIAGRAM):   END;
240636    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
240637    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
240638    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
240639    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
240640    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
240641    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
240642    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
240643    +   H11  =    -0.41170995389365 * S_AcceptedCmpTotal  +     0.95675776354898 *
240644    +        S_Frq  +     0.79241767524066 * S_Mnt  +    -1.11291951115769 *
240645    +        S_MntMeatProducts  +    -0.81016243357955 * S_NumCatalogPurchases
240646    +          +    -0.06020302160033 * S_NumDealsPurchases
240647    +          +    -0.72187271327886 * S_NumWebVisitsMonth
240648    +          +     0.63072705601805 * S_Recency ;
MPRINT(EM_DIAGRAM):   H11 = -0.41170995389365 * S_AcceptedCmpTotal + 0.95675776354898 * S_Frq 
+ 0.79241767524066 * S_Mnt + -1.11291951115769 * S_MntMeatProducts + -0.81016243357955 * 
S_NumCatalogPurchases + -0.06020302160033 * S_NumDealsPurchases + -0.72187271327886 * 
S_NumWebVisitsMonth + 0.63072705601805 * S_Recency ;
240649    +   H12  =     0.16845165387856 * S_AcceptedCmpTotal  +     0.13952140472368 *
240650    +        S_Frq  +    -0.49680297454001 * S_Mnt  +     0.20077884768409 *
240651    +        S_MntMeatProducts  +    -0.26509457206436 * S_NumCatalogPurchases
240652    +          +     0.44023370306786 * S_NumDealsPurchases
240653    +          +     0.14437092902564 * S_NumWebVisitsMonth
240654    +          +     0.29830280717193 * S_Recency ;
MPRINT(EM_DIAGRAM):   H12 = 0.16845165387856 * S_AcceptedCmpTotal + 0.13952140472368 * S_Frq + 
-0.49680297454001 * S_Mnt + 0.20077884768409 * S_MntMeatProducts + -0.26509457206436 * 
S_NumCatalogPurchases + 0.44023370306786 * S_NumDealsPurchases + 0.14437092902564 * 
S_NumWebVisitsMonth + 0.29830280717193 * S_Recency ;
240655    +   H13  =     0.17736973005738 * S_AcceptedCmpTotal  +    -1.27691889541485 *
240656    +        S_Frq  +     0.76151337613405 * S_Mnt  +     2.91913897431534 *
240657    +        S_MntMeatProducts  +     0.91968924804036 * S_NumCatalogPurchases
240658    +          +     0.36494720404815 * S_NumDealsPurchases
240659    +          +     0.03877838723538 * S_NumWebVisitsMonth
240660    +          +    -0.07783339271235 * S_Recency ;
MPRINT(EM_DIAGRAM):   H13 = 0.17736973005738 * S_AcceptedCmpTotal + -1.27691889541485 * S_Frq 
+ 0.76151337613405 * S_Mnt + 2.91913897431534 * S_MntMeatProducts + 0.91968924804036 * 
S_NumCatalogPurchases + 0.36494720404815 * S_NumDealsPurchases + 0.03877838723538 * 
S_NumWebVisitsMonth + -0.07783339271235 * S_Recency ;
240661    +   H14  =     0.06585247678486 * S_AcceptedCmpTotal  +     2.38872321291933 *
240662    +        S_Frq  +     0.55261122983069 * S_Mnt  +    -0.92412810336036 *
240663    +        S_MntMeatProducts  +    -0.85761594899144 * S_NumCatalogPurchases
240664    +          +    -0.87171784420951 * S_NumDealsPurchases
240665    +          +     0.27077171192055 * S_NumWebVisitsMonth
240666    +          +     0.44529508014227 * S_Recency ;
MPRINT(EM_DIAGRAM):   H14 = 0.06585247678486 * S_AcceptedCmpTotal + 2.38872321291933 * S_Frq + 
0.55261122983069 * S_Mnt + -0.92412810336036 * S_MntMeatProducts + -0.85761594899144 * 
S_NumCatalogPurchases + -0.87171784420951 * S_NumDealsPurchases + 0.27077171192055 * 
S_NumWebVisitsMonth + 0.44529508014227 * S_Recency ;
240667    +   H15  =     0.79261864023919 * S_AcceptedCmpTotal  +     0.22408033839661 *
240668    +        S_Frq  +     0.41205750844428 * S_Mnt  +    -0.05167252147978 *
240669    +        S_MntMeatProducts  +     0.52437372576463 * S_NumCatalogPurchases
240670    +          +    -0.02694744085713 * S_NumDealsPurchases
240671    +          +     0.42930866809604 * S_NumWebVisitsMonth
240672    +          +    -1.23356204218313 * S_Recency ;
MPRINT(EM_DIAGRAM):   H15 = 0.79261864023919 * S_AcceptedCmpTotal + 0.22408033839661 * S_Frq + 
0.41205750844428 * S_Mnt + -0.05167252147978 * S_MntMeatProducts + 0.52437372576463 * 
S_NumCatalogPurchases + -0.02694744085713 * S_NumDealsPurchases + 0.42930866809604 * 
S_NumWebVisitsMonth + -1.23356204218313 * S_Recency ;
240673    +   H16  =     0.07557739377714 * S_AcceptedCmpTotal  +     0.06732498402011 *
240674    +        S_Frq  +     1.00949697256114 * S_Mnt  +     0.18190372979158 *
240675    +        S_MntMeatProducts  +    -0.20994714743436 * S_NumCatalogPurchases
240676    +          +     1.91827561352967 * S_NumDealsPurchases
240677    +          +    -0.65112089304736 * S_NumWebVisitsMonth
240678    +          +     0.94688864667779 * S_Recency ;
MPRINT(EM_DIAGRAM):   H16 = 0.07557739377714 * S_AcceptedCmpTotal + 0.06732498402011 * S_Frq + 
1.00949697256114 * S_Mnt + 0.18190372979158 * S_MntMeatProducts + -0.20994714743436 * 
S_NumCatalogPurchases + 1.91827561352967 * S_NumDealsPurchases + -0.65112089304736 * 
S_NumWebVisitsMonth + 0.94688864667779 * S_Recency ;
240679    +   H11  = H11  +    -0.41944609131662 * Marital_StatusDivorced
240680    +          +     0.19571272479408 * Marital_StatusMarried
240681    +          +    -0.16061908960963 * Marital_StatusSingle
240682    +          +     0.01147019501849 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.41944609131662 * Marital_StatusDivorced + 
0.19571272479408 * Marital_StatusMarried + -0.16061908960963 * Marital_StatusSingle + 
0.01147019501849 * Marital_StatusTogether ;
240683    +   H12  = H12  +    -0.70326037460175 * Marital_StatusDivorced
240684    +          +    -0.64968872046859 * Marital_StatusMarried
240685    +          +     1.81995301340231 * Marital_StatusSingle
240686    +          +    -1.25679526739636 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.70326037460175 * Marital_StatusDivorced + 
-0.64968872046859 * Marital_StatusMarried + 1.81995301340231 * Marital_StatusSingle + 
-1.25679526739636 * Marital_StatusTogether ;
240687    +   H13  = H13  +    -0.50413590013638 * Marital_StatusDivorced
240688    +          +     0.19296467458933 * Marital_StatusMarried
240689    +          +     -0.2295693568996 * Marital_StatusSingle
240690    +          +     0.51095451752525 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.50413590013638 * Marital_StatusDivorced + 
0.19296467458933 * Marital_StatusMarried + -0.2295693568996 * Marital_StatusSingle + 
0.51095451752525 * Marital_StatusTogether ;
240691    +   H14  = H14  +    -0.93810483419419 * Marital_StatusDivorced
240692    +          +    -0.12318541826308 * Marital_StatusMarried
240693    +          +    -0.02882902763243 * Marital_StatusSingle
240694    +          +      0.9552700390789 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.93810483419419 * Marital_StatusDivorced + 
-0.12318541826308 * Marital_StatusMarried + -0.02882902763243 * Marital_StatusSingle + 
0.9552700390789 * Marital_StatusTogether ;
240695    +   H15  = H15  +    -0.16315275571793 * Marital_StatusDivorced
240696    +          +    -0.65544681605691 * Marital_StatusMarried
240697    +          +     0.31269236164873 * Marital_StatusSingle
240698    +          +    -0.37135201633747 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.16315275571793 * Marital_StatusDivorced + 
-0.65544681605691 * Marital_StatusMarried + 0.31269236164873 * Marital_StatusSingle + 
-0.37135201633747 * Marital_StatusTogether ;
240699    +   H16  = H16  +    -0.47177568566677 * Marital_StatusDivorced
240700    +          +     0.12269709457787 * Marital_StatusMarried
240701    +          +     0.37106402586008 * Marital_StatusSingle
240702    +          +     0.07580816063395 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + -0.47177568566677 * Marital_StatusDivorced + 
0.12269709457787 * Marital_StatusMarried + 0.37106402586008 * Marital_StatusSingle + 
0.07580816063395 * Marital_StatusTogether ;
240703    +   H11  =     0.87814553506559 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.87814553506559 + H11 ;
240704    +   H12  =     1.18416285607678 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 1.18416285607678 + H12 ;
240705    +   H13  =     1.86220379911993 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 1.86220379911993 + H13 ;
240706    +   H14  =     1.79999645343103 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 1.79999645343103 + H14 ;
240707    +   H15  =    -2.95745585057281 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -2.95745585057281 + H15 ;
240708    +   H16  =    -0.63040593626724 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -0.63040593626724 + H16 ;
240709    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
240710    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
240711    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
240712    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
240713    +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
240714    +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
240715    +END;
MPRINT(EM_DIAGRAM):   END;
240716    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
240717    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
240718    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
240719    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
240720    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
240721    +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
240722    +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
240723    +END;
MPRINT(EM_DIAGRAM):   END;
240724    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
240725    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
240726    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
240727    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
240728    +   P_DepVar1  =    -5.78936073221603 * H11  +     3.14966455677413 * H12
240729    +          +     7.03853349374163 * H13  +    -2.45391654583749 * H14
240730    +          +     4.80213644089029 * H15  +    -1.60369759544804 * H16 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -5.78936073221603 * H11 + 3.14966455677413 * H12 + 
7.03853349374163 * H13 + -2.45391654583749 * H14 + 4.80213644089029 * H15 + -1.60369759544804 
* H16 ;
240731    +   P_DepVar1  =    -1.95361942474066 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.95361942474066 + P_DepVar1 ;
240732    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
240733    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
240734    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
240735    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
240736    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
240737    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
240738    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
240739    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
240740    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
240741    +END;
MPRINT(EM_DIAGRAM):   END;
240742    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
240743    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
240744    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
240745    +END;
MPRINT(EM_DIAGRAM):   END;
240746    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
240747    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
240748    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
240749    +END;
MPRINT(EM_DIAGRAM):   END;
240750    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
240751    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
240752    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
240753    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
240754    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
240755    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
240756    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
240757    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
240758    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
240759    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
240760    +END;
MPRINT(EM_DIAGRAM):   END;
240761    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
240762    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
240763    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
240764    +drop
240765    +H11
240766    +H12
240767    +H13
240768    +H14
240769    +H15
240770    +H16
240771    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 ;
240772    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
240773     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
240774     quit;
240775     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
240776     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
240777     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
240778     retain ID 2 Node "Neural41";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural41";
240779     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
240780     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 877 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 877 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

240781     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
240782     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
240783     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 877 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 877 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

240784     proc sort data=EMWS8.Neural41_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural41_variableset out=_temp2(keep=NAME CREATOR);
240785     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
240786     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.NEURAL41_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

240787     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
240788     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
240789     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
240790     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

240791     proc contents data=EMWS8.Neural41_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural41_train out=_meta(keep=NAME) noprint;
240792     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

240793     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
240794     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
240795     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

240796     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
240797     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
240798     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
240799     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

240800     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
240801     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
240801   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 314 rows and 5 columns.

240802     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

240803     proc append base=EMWS8.Ensmbl23_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl23_FCMP data=_tempx;
240804     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL23_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 314 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL23_FCMP has 314 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

240805     filename _pref
240805   ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
240806     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
240807     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
240808    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
240809    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
240810    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
240811    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
240812    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
240813    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
240814     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
240815     quit;
240816     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
240817     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
240818     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
240819     retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
240820     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
240821     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

240822     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
240823     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
240824     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

240825     proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
240826     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
240827     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

240828     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
240829     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
240830     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
240831     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

240832     proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
240833     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

240834     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
240835     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
240836     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

240837     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
240838     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
240839     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
240840     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

240841     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
240842     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
240842   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

240843     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

240844     proc append base=EMWS8.Ensmbl23_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl23_FCMP data=_tempx;
240845     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL23_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL23_FCMP has 318 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

240846     filename _pref
240846   ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
240847     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
240848     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
240849    +
240850    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
240851    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
240851   !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
240852    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
240853    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
240854    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
240855    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
240856    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
240857     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
240858     quit;
240859     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
240860     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
240861     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
240862     retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
240863     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
240864     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

240865     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
240866     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
240867     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

240868     proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
240869     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
240870     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

240871     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
240872     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
240873     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
240874     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

240875     proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
240876     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

240877     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
240878     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
240879     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

240880     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
240881     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
240882     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
240883     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

240884     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
240885     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
240885   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

240886     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

240887     proc append base=EMWS8.Ensmbl23_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl23_FCMP data=_tempx;
240888     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL23_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL23_FCMP has 357 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

240889     filename _pref
240889   ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
240890     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
240891     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
240892    +
240893    +
240894    +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
240895    +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
240896    +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
240897    +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
240898    +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
240899    +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
240900    +
240901    +
240902    +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
240903    +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
240904    +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
240905    +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
240906    +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
240907    +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
240908    +
240909    +
240910    +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
240911    +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
240912    +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
240913    +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
240914    +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
240915    +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
240916    +
240917    +
240918    +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
240919    +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
240920    +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
240921    +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
240922    +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
240923    +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
240924    +
240925    +
240926    +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
240927    +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
240928    +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
240929    +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
240930    +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
240931    +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
240932    +
240933    +
240934    +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
240935    +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
240936    +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
240937    +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
240938    +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
240939    +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
240940    +
240941    +
240942    +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
240943    +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
240944    +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
240945    +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
240946    +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
240947    +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
240948    +
240949    +
240950    +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
240951    +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
240952    +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
240953    +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
240954    +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
240955    +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
240956    +if
240957    +_FILTERNORM1 not in ( '.')
240958    + and
240959    +_FILTERNORM2 not in ( '.')
240960    + and
240961    +_FILTERNORM3 not in ( '.')
240962    + and
240963    +_FILTERNORM4 not in ( '.')
240964    + and
240965    +_FILTERNORM5 not in ( '.')
240966    + and
240967    +_FILTERNORM6 not in ( '.')
240968    + and
240969    +_FILTERNORM7 not in ( ' ')
240970    + and
240971    +_FILTERNORM8 not in ( ' ')
240972    +and
240973    +( Dt_Customer ne .)
240974    +and ( Income ne . and (Income<=107000))
240975    +and ( Kidhome ne .)
240976    +and ( MntFishProducts ne .)
240977    +and ( MntFruits ne .)
240978    +and ( MntGoldProds ne .)
240979    +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
240980    +and ( MntSweetProducts ne .)
240981    +and ( MntWines ne .)
240982    +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
240983    +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
240984    +and ( NumStorePurchases ne .)
240985    +and ( NumWebPurchases ne .)
240986    +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
240987    +and ( Recency ne .)
240988    +and ( Teenhome ne .)
240989    +and ( Year_Birth ne .)
240990    +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
240991    +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
240992    +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
240993    +end;
MPRINT(EM_DIAGRAM):   end;
240994    +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
240995    +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
240996     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
240997     quit;
240998     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
240999     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
241000     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
241001     retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
241002     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
241003     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

241004     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
241005     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
241006     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

241007     proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
241008     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
241009     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

241010     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
241011     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
241012     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
241013     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

241014     proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
241015     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

241016     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
241017     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
241018     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

241019     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
241020     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
241021     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
241022     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

241023     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
241024     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
241024   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

241025     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

241026     proc append base=EMWS8.Ensmbl23_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl23_FCMP data=_tempx;
241027     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL23_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL23_FCMP has 423 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

241028     %macro varDept(fcmpdata=,id=);
241029     %global nobs&id scoreFlag&id;
241030     %let scoreFlag&id = 0;
241031     %if &id=1 or ^&fcmpStart %then %do;
241032     proc sort data=&fcmpdata out=_temp&id nodupkey;
241033     by NAME;
241034     where id=&id and LHS in( %let j=1;
241035     %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
241036     %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
241037     "&var" %let j = %eval(&j+1);
241038     %end;
241039     );
241040     run;
241041     %let dsid = %sysfunc(open(_temp&id));
241042     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
241043     %let dsid = %sysfunc(close(&dsid));
241044     %if &&nobs&id %then %do;
241045     %let scoreFlag&id = 1;
241046     %let fcmpStart = 1;
241047     %end;
241048     %else %let fcmpStart = 0;
241049     %end;
241050     %else %do;
241051     proc sort data=&fcmpdata out=_tempid;
241052     where id=&id;
241053     by LHS;
241054     run;
241055     %let dsid = %sysfunc(open(_tempid));
241056     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
241057     %let dsid = %sysfunc(close(&dsid));
241058     %if ^&&nobs&id %then %do;
241059     proc datasets lib=work nolist;
241060     delete _tempid;
241061     run;
241062     quit;
241063     %end;
241064     %else %do;
241065     data _tempAll;
241066     set %let j=%eval(&id-1);
241067     %do x=1 %to &j;
241068     %if &&nobs&x %then %do;
241069     _temp&x %end;
241070     %end;
241071     ;
241072     run;
241073     proc sql;
241074     create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
241074   ! work._tempid p2 where p.name=p2.lhs;
241075     quit;
241076     data _temp&id;
241077     set _temp&id;
241078     where LHS ne '' and NAME ne '' and Node ne '';
241079     run;
241080     proc datasets lib=work nolist;
241081     delete _tempAll;
241082     run;
241083     %let dsid = %sysfunc(open(_temp&id));
241084     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
241085     %let dsid = %sysfunc(close(&dsid));
241086     %if ^&&nobs&id %then %do;
241087     proc datasets lib=work nolist;
241088     delete _temp&id;
241089     run;
241090     quit;
241091     %end;
241092     %else %do;
241093     %let scoreFlag&id = 1;
241094     data _temp&id;
241095     set _temp&id;
241096     where LHS ne NAME and node ne '';
241097     run;
241098     %let dsid = %sysfunc(open(_temp&id));
241099     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
241100     %let dsid = %sysfunc(close(&dsid));
241101     %if ^&&nobs&id %then %do;
241102     proc datasets lib=work nolist;
241103     delete _temp&id;
241104     run;
241105     quit;
241106     %end;
241107     %else %do;
241108     proc sort data=_temp&id nodupkey;
241109     by LHS NAME;
241110     run;
241111     %end;
241112     %end;
241113     %end;
241114     %end;
241115     %mend varDept;
241116     %macro optCode(outdata=fcmpdata);
241117     %global fcmpStart;
241118     %let fcmpStart = 0;
241119     %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
241120     %let NumNodes=9;
241121     %do k=1 %to &NumNodes;
241122     %vardept(fcmpdata=&outdata, id=&k);
241123     %end;
241124     %mend optCode;
241125     %optcode(outData=EMWS8.Ensmbl23_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl23_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL23_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl23_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 42 observations read from the data set EMWS8.ENSMBL23_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 31 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 11 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl23_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL23_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl23_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL23_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl23_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL23_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 11 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 11 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl23_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL23_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 11 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 11 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 14 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 14 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 14 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 14 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl23_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL23_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 11 observations read from the data set WORK._TEMP2.
NOTE: There were 14 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 25 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl23_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL23_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl23_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL23_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

241126     filename _pref
241126   ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural39\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural39\EMPUBLISHSCORE.sas";
241127     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
241128     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural39\EMPUBLISHSCORE.sas.
241129    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
241130    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
241131    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
241132    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
241133    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
241134    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
241135    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
241136    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
241137    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
241138    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
241139    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
241140    +LENGTH _WARN_ $4
241141    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
241142    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
241143    +
241144    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
241145    +
241146    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
241147    +
241148    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
241149    +
241150    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
241151    +
241152    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
241153    +
241154    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
241155    +
241156    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
241157    +
241158    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
241159    +
241160    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
241161    +
241162    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
241163    +
241164    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
241165    +
241166    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
241167    +
241168    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
241169    +
241170    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
241171    +
241172    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
241173    +
241174    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
241175    +
241176    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
241177    +
241178    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
241179    +
241180    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
241181    +
241182    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
241183    +
241184    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
241185    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
241186    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
241187    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
241188    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
241189    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
241190    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
241191    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
241192    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
241193    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
241194    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
241195    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
241196    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
241197    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
241198    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
241199    +end;
MPRINT(EM_DIAGRAM):   end;
241200    +else do;
MPRINT(EM_DIAGRAM):   else do;
241201    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
241202    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
241203    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
241204    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
241205    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
241206    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
241207    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
241208    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
241209    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
241210    +         end;
MPRINT(EM_DIAGRAM):   end;
241211    +         else do;
MPRINT(EM_DIAGRAM):   else do;
241212    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
241213    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
241214    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
241215    +            end;
MPRINT(EM_DIAGRAM):   end;
241216    +         end;
MPRINT(EM_DIAGRAM):   end;
241217    +      end;
MPRINT(EM_DIAGRAM):   end;
241218    +      else do;
MPRINT(EM_DIAGRAM):   else do;
241219    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
241220    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
241221    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
241222    +         end;
MPRINT(EM_DIAGRAM):   end;
241223    +      end;
MPRINT(EM_DIAGRAM):   end;
241224    +   end;
MPRINT(EM_DIAGRAM):   end;
241225    +   else do;
MPRINT(EM_DIAGRAM):   else do;
241226    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
241227    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
241228    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
241229    +      end;
MPRINT(EM_DIAGRAM):   end;
241230    +      else do;
MPRINT(EM_DIAGRAM):   else do;
241231    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
241232    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
241233    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
241234    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
241235    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
241236    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
241237    +         end;
MPRINT(EM_DIAGRAM):   end;
241238    +      end;
MPRINT(EM_DIAGRAM):   end;
241239    +   end;
MPRINT(EM_DIAGRAM):   end;
241240    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
241241    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
241242    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
241243    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
241244    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
241245    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
241246    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
241247    +   end;
MPRINT(EM_DIAGRAM):   end;
241248    +end;
MPRINT(EM_DIAGRAM):   end;
241249    +
241250    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
241251    +*** Checking missing input Interval
241252    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
241253    +
241254    +IF NMISS(
241255    +   AcceptedCmpTotal ,
241256    +   Frq ,
241257    +   Mnt ,
241258    +   MntMeatProducts ,
241259    +   NumCatalogPurchases ,
241260    +   NumDealsPurchases ,
241261    +   NumWebVisitsMonth ,
241262    +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Mnt , MntMeatProducts , 
NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , Recency ) THEN DO;
241263    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
241264    +
241265    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
241266    +END;
MPRINT(EM_DIAGRAM):   END;
241267    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
241268    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
241269    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
241270    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
241271    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
241272    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
241273    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
241274    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
241275    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
241276    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
241277    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
241278    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
241279    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
241280    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
241281    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
241282    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
241283    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
241284    +END;
MPRINT(EM_DIAGRAM):   END;
241285    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
241286    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
241287    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
241288    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
241289    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
241290    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
241291    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
241292    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
241293    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
241294    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
241295    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
241296    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
241297    +   ELSE S_NumCatalogPurchases
241298    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
241299    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
241300    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
241301    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
241302    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
241303    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
241304    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
241305    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
241306    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
241307    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
241308    +END;
MPRINT(EM_DIAGRAM):   END;
241309    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
241310    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
241311    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
241312    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
241313    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
241314    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
241315    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
241316    +   H11  =     0.32071869925611 * S_AcceptedCmpTotal  +    -1.18627222732428 *
241317    +        S_Frq  +     0.00967528650049 * S_Mnt  +     0.53945968152118 *
241318    +        S_MntMeatProducts  +     0.76096876406469 * S_NumCatalogPurchases
241319    +          +       0.868651674737 * S_NumDealsPurchases
241320    +          +     0.56519310644826 * S_NumWebVisitsMonth
241321    +          +    -0.85354176662475 * S_Recency ;
MPRINT(EM_DIAGRAM):   H11 = 0.32071869925611 * S_AcceptedCmpTotal + -1.18627222732428 * S_Frq 
+ 0.00967528650049 * S_Mnt + 0.53945968152118 * S_MntMeatProducts + 0.76096876406469 * 
S_NumCatalogPurchases + 0.868651674737 * S_NumDealsPurchases + 0.56519310644826 * 
S_NumWebVisitsMonth + -0.85354176662475 * S_Recency ;
241322    +   H12  =    -0.53760783840514 * S_AcceptedCmpTotal  +    -0.10887355535928 *
241323    +        S_Frq  +     0.25951462601453 * S_Mnt  +    -0.54343784484503 *
241324    +        S_MntMeatProducts  +    -0.74697447632011 * S_NumCatalogPurchases
241325    +          +     0.22588169231784 * S_NumDealsPurchases
241326    +          +    -0.50349429270665 * S_NumWebVisitsMonth
241327    +          +     0.94913855646928 * S_Recency ;
MPRINT(EM_DIAGRAM):   H12 = -0.53760783840514 * S_AcceptedCmpTotal + -0.10887355535928 * S_Frq 
+ 0.25951462601453 * S_Mnt + -0.54343784484503 * S_MntMeatProducts + -0.74697447632011 * 
S_NumCatalogPurchases + 0.22588169231784 * S_NumDealsPurchases + -0.50349429270665 * 
S_NumWebVisitsMonth + 0.94913855646928 * S_Recency ;
241328    +   H13  =    -0.49808738781134 * S_AcceptedCmpTotal  +     0.75871743128278 *
241329    +        S_Frq  +     0.92783231668315 * S_Mnt  +    -0.72994432129905 *
241330    +        S_MntMeatProducts  +    -0.41911874339248 * S_NumCatalogPurchases
241331    +          +     0.38270609344543 * S_NumDealsPurchases
241332    +          +    -0.67911374483005 * S_NumWebVisitsMonth
241333    +          +     0.62959851233589 * S_Recency ;
MPRINT(EM_DIAGRAM):   H13 = -0.49808738781134 * S_AcceptedCmpTotal + 0.75871743128278 * S_Frq 
+ 0.92783231668315 * S_Mnt + -0.72994432129905 * S_MntMeatProducts + -0.41911874339248 * 
S_NumCatalogPurchases + 0.38270609344543 * S_NumDealsPurchases + -0.67911374483005 * 
S_NumWebVisitsMonth + 0.62959851233589 * S_Recency ;
241334    +   H14  =    -0.36477606348735 * S_AcceptedCmpTotal  +     1.38796327523044 *
241335    +        S_Frq  +     0.07887052944027 * S_Mnt  +    -2.27327070721147 *
241336    +        S_MntMeatProducts  +    -1.42807558393601 * S_NumCatalogPurchases
241337    +          +    -0.27211575710638 * S_NumDealsPurchases
241338    +          +    -0.27365412530976 * S_NumWebVisitsMonth
241339    +          +     0.25676979915144 * S_Recency ;
MPRINT(EM_DIAGRAM):   H14 = -0.36477606348735 * S_AcceptedCmpTotal + 1.38796327523044 * S_Frq 
+ 0.07887052944027 * S_Mnt + -2.27327070721147 * S_MntMeatProducts + -1.42807558393601 * 
S_NumCatalogPurchases + -0.27211575710638 * S_NumDealsPurchases + -0.27365412530976 * 
S_NumWebVisitsMonth + 0.25676979915144 * S_Recency ;
241340    +   H11  = H11  +    -0.10986134340688 * Marital_StatusDivorced
241341    +          +     0.26671394907331 * Marital_StatusMarried
241342    +          +    -0.21412689047791 * Marital_StatusSingle
241343    +          +      0.0878866166131 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.10986134340688 * Marital_StatusDivorced + 
0.26671394907331 * Marital_StatusMarried + -0.21412689047791 * Marital_StatusSingle + 
0.0878866166131 * Marital_StatusTogether ;
241344    +   H12  = H12  +     0.57822808683392 * Marital_StatusDivorced
241345    +          +      0.8828544386185 * Marital_StatusMarried
241346    +          +    -0.82952673399486 * Marital_StatusSingle
241347    +          +     0.54925647255359 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.57822808683392 * Marital_StatusDivorced + 0.8828544386185 
* Marital_StatusMarried + -0.82952673399486 * Marital_StatusSingle + 0.54925647255359 * 
Marital_StatusTogether ;
241348    +   H13  = H13  +    -0.79896029123713 * Marital_StatusDivorced
241349    +          +     0.43581055671108 * Marital_StatusMarried
241350    +          +    -0.37028703904727 * Marital_StatusSingle
241351    +          +     0.68190263239907 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.79896029123713 * Marital_StatusDivorced + 
0.43581055671108 * Marital_StatusMarried + -0.37028703904727 * Marital_StatusSingle + 
0.68190263239907 * Marital_StatusTogether ;
241352    +   H14  = H14  +     0.00414219307385 * Marital_StatusDivorced
241353    +          +     -0.1219875250835 * Marital_StatusMarried
241354    +          +    -0.01813173038471 * Marital_StatusSingle
241355    +          +    -0.20940808240309 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.00414219307385 * Marital_StatusDivorced + -0.1219875250835 
* Marital_StatusMarried + -0.01813173038471 * Marital_StatusSingle + -0.20940808240309 * 
Marital_StatusTogether ;
241356    +   H11  =    -2.24986706948705 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -2.24986706948705 + H11 ;
241357    +   H12  =     2.55250334233636 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 2.55250334233636 + H12 ;
241358    +   H13  =    -0.36139954012771 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.36139954012771 + H13 ;
241359    +   H14  =    -0.78789859340386 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -0.78789859340386 + H14 ;
241360    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
241361    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
241362    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
241363    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
241364    +END;
MPRINT(EM_DIAGRAM):   END;
241365    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
241366    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
241367    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
241368    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
241369    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
241370    +END;
MPRINT(EM_DIAGRAM):   END;
241371    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
241372    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
241373    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
241374    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
241375    +   P_DepVar1  =     3.47156859435653 * H11  +     -3.7137526781971 * H12
241376    +          +    -4.05222402892753 * H13  +    -4.15704481111915 * H14 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 3.47156859435653 * H11 + -3.7137526781971 * H12 + 
-4.05222402892753 * H13 + -4.15704481111915 * H14 ;
241377    +   P_DepVar1  =    -0.19096137615409 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.19096137615409 + P_DepVar1 ;
241378    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
241379    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
241380    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
241381    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
241382    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
241383    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
241384    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
241385    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
241386    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
241387    +END;
MPRINT(EM_DIAGRAM):   END;
241388    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
241389    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
241390    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
241391    +END;
MPRINT(EM_DIAGRAM):   END;
241392    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
241393    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
241394    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
241395    +END;
MPRINT(EM_DIAGRAM):   END;
241396    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
241397    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
241398    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
241399    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
241400    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
241401    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
241402    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
241403    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
241404    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
241405    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
241406    +END;
MPRINT(EM_DIAGRAM):   END;
241407    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
241408    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
241409    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
241410    +drop
241411    +H11
241412    +H12
241413    +H13
241414    +H14
241415    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 ;
241416    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
241417     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
241418     quit;
241419     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
241420     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
241421     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
241422     retain ID 2 Node "Neural39";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural39";
241423     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
241424     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 733 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 733 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

241425     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
241426     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
241427     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 733 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 733 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

241428     proc sort data=EMWS8.Neural39_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural39_variableset out=_temp2(keep=NAME CREATOR);
241429     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
241430     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.NEURAL39_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

241431     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
241432     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
241433     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
241434     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

241435     proc contents data=EMWS8.Neural39_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural39_train out=_meta(keep=NAME) noprint;
241436     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

241437     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
241438     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
241439     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

241440     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
241441     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
241442     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
241443     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

241444     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
241445     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
241445   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 278 rows and 5 columns.

241446     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

241447     proc append base=EMWS8.Ensmbl23_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl23_FCMP data=_tempx;
241448     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL23_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 278 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL23_FCMP has 278 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

241449     filename _pref
241449   ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
241450     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
241451     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
241452    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
241453    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
241454    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
241455    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
241456    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
241457    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
241458     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
241459     quit;
241460     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
241461     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
241462     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
241463     retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
241464     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
241465     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

241466     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
241467     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
241468     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

241469     proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
241470     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
241471     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

241472     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
241473     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
241474     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
241475     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

241476     proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
241477     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

241478     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
241479     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
241480     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

241481     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
241482     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
241483     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
241484     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

241485     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
241486     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
241486   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

241487     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

241488     proc append base=EMWS8.Ensmbl23_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl23_FCMP data=_tempx;
241489     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL23_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL23_FCMP has 282 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

241490     filename _pref
241490   ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
241491     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
241492     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
241493    +
241494    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
241495    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
241495   !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
241496    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
241497    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
241498    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
241499    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
241500    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
241501     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
241502     quit;
241503     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
241504     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
241505     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
241506     retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
241507     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
241508     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

241509     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
241510     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
241511     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

241512     proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
241513     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
241514     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

241515     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
241516     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
241517     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
241518     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

241519     proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
241520     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

241521     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
241522     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
241523     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

241524     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
241525     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
241526     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
241527     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

241528     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
241529     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
241529   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

241530     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

241531     proc append base=EMWS8.Ensmbl23_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl23_FCMP data=_tempx;
241532     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL23_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL23_FCMP has 321 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

241533     filename _pref
241533   ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
241534     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
241535     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
241536    +
241537    +
241538    +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
241539    +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
241540    +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
241541    +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
241542    +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
241543    +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
241544    +
241545    +
241546    +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
241547    +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
241548    +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
241549    +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
241550    +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
241551    +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
241552    +
241553    +
241554    +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
241555    +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
241556    +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
241557    +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
241558    +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
241559    +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
241560    +
241561    +
241562    +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
241563    +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
241564    +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
241565    +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
241566    +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
241567    +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
241568    +
241569    +
241570    +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
241571    +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
241572    +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
241573    +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
241574    +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
241575    +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
241576    +
241577    +
241578    +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
241579    +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
241580    +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
241581    +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
241582    +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
241583    +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
241584    +
241585    +
241586    +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
241587    +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
241588    +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
241589    +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
241590    +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
241591    +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
241592    +
241593    +
241594    +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
241595    +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
241596    +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
241597    +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
241598    +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
241599    +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
241600    +if
241601    +_FILTERNORM1 not in ( '.')
241602    + and
The SAS System

241603    +_FILTERNORM2 not in ( '.')
241604    + and
241605    +_FILTERNORM3 not in ( '.')
241606    + and
241607    +_FILTERNORM4 not in ( '.')
241608    + and
241609    +_FILTERNORM5 not in ( '.')
241610    + and
241611    +_FILTERNORM6 not in ( '.')
241612    + and
241613    +_FILTERNORM7 not in ( ' ')
241614    + and
241615    +_FILTERNORM8 not in ( ' ')
241616    +and
241617    +( Dt_Customer ne .)
241618    +and ( Income ne . and (Income<=107000))
241619    +and ( Kidhome ne .)
241620    +and ( MntFishProducts ne .)
241621    +and ( MntFruits ne .)
241622    +and ( MntGoldProds ne .)
241623    +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
241624    +and ( MntSweetProducts ne .)
241625    +and ( MntWines ne .)
241626    +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
241627    +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
241628    +and ( NumStorePurchases ne .)
241629    +and ( NumWebPurchases ne .)
241630    +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
241631    +and ( Recency ne .)
241632    +and ( Teenhome ne .)
241633    +and ( Year_Birth ne .)
241634    +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
241635    +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
241636    +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
241637    +end;
MPRINT(EM_DIAGRAM):   end;
241638    +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
241639    +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
241640     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
241641     quit;
241642     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
241643     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
241644     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
241645     retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
241646     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
241647     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

241648     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
241649     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
241650     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

241651     proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
241652     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
241653     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

241654     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
241655     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
241656     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
241657     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

241658     proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
241659     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
      

241660     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
241661     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
241662     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

241663     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
241664     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
241665     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
241666     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

241667     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
241668     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
241668   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

241669     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

241670     proc append base=EMWS8.Ensmbl23_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl23_FCMP data=_tempx;
241671     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL23_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL23_FCMP has 387 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

241672     %macro varDept(fcmpdata=,id=);
241673     %global nobs&id scoreFlag&id;
241674     %let scoreFlag&id = 0;
241675     %if &id=1 or ^&fcmpStart %then %do;
241676     proc sort data=&fcmpdata out=_temp&id nodupkey;
241677     by NAME;
241678     where id=&id and LHS in( %let j=1;
241679     %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
241680     %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
241681     "&var" %let j = %eval(&j+1);
241682     %end;
241683     );
241684     run;
241685     %let dsid = %sysfunc(open(_temp&id));
241686     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
241687     %let dsid = %sysfunc(close(&dsid));
241688     %if &&nobs&id %then %do;
241689     %let scoreFlag&id = 1;
241690     %let fcmpStart = 1;
241691     %end;
241692     %else %let fcmpStart = 0;
241693     %end;
241694     %else %do;
241695     proc sort data=&fcmpdata out=_tempid;
241696     where id=&id;
241697     by LHS;
241698     run;
241699     %let dsid = %sysfunc(open(_tempid));
241700     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
241701     %let dsid = %sysfunc(close(&dsid));
241702     %if ^&&nobs&id %then %do;
241703     proc datasets lib=work nolist;
241704     delete _tempid;
241705     run;
241706     quit;
241707     %end;
241708     %else %do;
241709     data _tempAll;
241710     set %let j=%eval(&id-1);
241711     %do x=1 %to &j;
241712     %if &&nobs&x %then %do;
241713     _temp&x %end;
241714     %end;
241715     ;
241716     run;
241717     proc sql;
241718     create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
241718   ! work._tempid p2 where p.name=p2.lhs;
241719     quit;
241720     data _temp&id;
241721     set _temp&id;
241722     where LHS ne '' and NAME ne '' and Node ne '';
241723     run;
241724     proc datasets lib=work nolist;
241725     delete _tempAll;
241726     run;
241727     %let dsid = %sysfunc(open(_temp&id));
241728     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
241729     %let dsid = %sysfunc(close(&dsid));
241730     %if ^&&nobs&id %then %do;
241731     proc datasets lib=work nolist;
241732     delete _temp&id;
241733     run;
241734     quit;
241735     %end;
241736     %else %do;
241737     %let scoreFlag&id = 1;
241738     data _temp&id;
241739     set _temp&id;
241740     where LHS ne NAME and node ne '';
241741     run;
241742     %let dsid = %sysfunc(open(_temp&id));
241743     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
241744     %let dsid = %sysfunc(close(&dsid));
241745     %if ^&&nobs&id %then %do;
241746     proc datasets lib=work nolist;
241747     delete _temp&id;
241748     run;
241749     quit;
241750     %end;
241751     %else %do;
241752     proc sort data=_temp&id nodupkey;
241753     by LHS NAME;
241754     run;
241755     %end;
241756     %end;
241757     %end;
241758     %end;
241759     %mend varDept;
241760     %macro optCode(outdata=fcmpdata);
241761     %global fcmpStart;
241762     %let fcmpStart = 0;
241763     %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
241764     %let NumNodes=9;
241765     %do k=1 %to &NumNodes;
241766     %vardept(fcmpdata=&outdata, id=&k);
241767     %end;
241768     %mend optCode;
241769     %optcode(outData=EMWS8.Ensmbl23_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl23_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL23_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl23_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 42 observations read from the data set EMWS8.ENSMBL23_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 31 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 11 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl23_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL23_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl23_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL23_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl23_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL23_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 11 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 11 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl23_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL23_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 11 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 11 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 14 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 14 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 14 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 14 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl23_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL23_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 11 observations read from the data set WORK._TEMP2.
NOTE: There were 14 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 25 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.09 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl23_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL23_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl23_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL23_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

241770     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
241771     * Ensmbl23: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Ensmbl23: Computing metadata for TRAIN data;
241772     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS8.ENSMBL23_TRAIN.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl23\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.Ensmbl23_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.Ensmbl23_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.Ensmbl23_TRAIN out=WORK.M2VQ89S7 noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2VQ89S7;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M2VQ89S7(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = 
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2VQ89S7;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M2VQ89S7;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M3UMII0P NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3UMII0P;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M3UMII0P;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3PNNDSY(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M3UMII0P;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3UMII0P;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M3UMII0P;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3UMII0P;
MPRINT(EMADVISECOLUMNS):   set WORK.M3UMII0P;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural40_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural40_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl23_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Ensmbl23";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "Ensmbl23";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "Ensmbl23";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "Ensmbl23";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "Ensmbl23";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "Ensmbl23";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "Ensmbl23";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "Ensmbl23";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Ensmbl23";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "Ensmbl23";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl23: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   if NAME in( "I_DepVar" "F_DepVar" "U_DepVar" "_WARN_" "P_DepVar1" 
"P_DepVar0" "R_DepVar1" "R_DepVar0" ) then CREATOR="Ensmbl23";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
242092     data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
242093     set EMWS8.Ensmbl23_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl23_EMINFO;
242094     where DATA='Ensmbl23' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Ensmbl23' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 
'MODEL');
242095     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.ENSMBL23_EMINFO.
      WHERE (DATA='Ensmbl23') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

242096     data EMWS8.Ensmbl23_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl23_EMINFO;
242097     length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
242098     input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
242099     cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS8.ENSMBL23_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   run;
242103     run;
242104     data EMWS8.Ensmbl23_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl23_EMINFO;
242105     set EMWS8.Ensmbl23_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl23_EMINFO WORK.MODELTEMP_INFO;
242106     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.ENSMBL23_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.ENSMBL23_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

242107     proc sort data = EMWS8.Ensmbl23_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Ensmbl23_EMINFO NOTHREADS;
242108     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
242109     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.ENSMBL23_EMINFO.
NOTE: The data set EMWS8.ENSMBL23_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

242110     proc sort data = EMWS8.Neural40_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Neural40_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
242111     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
242112     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set EMWS8.NEURAL40_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

242113     proc sort data = EMWS8.Ensmbl23_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Ensmbl23_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
242114     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
242115     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.ENSMBL23_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

242116     data EMWS8.Ensmbl23_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl23_EMINFO;
242117     merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
242118     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
242119     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.ENSMBL23_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

242120     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
242121     delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
242122     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
242123     quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

NOTE: View EMWS8.ENSMBL23_TRAIN.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
      
NOTE: View EMWS8.ENSMBL23_VALIDATE.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
