MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "21. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "19.06 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                21. April 2016
Time:                19.06 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O2K418W7 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl44\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O2K418W7 new;
MPRINT(EM_DIAGRAM):   run;
2397924    filename emflow
2397924  ! "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl44\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl44\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl44: Scoring AUTONEURAL9_TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2397925    *------------------------------------------------------------*;
2397926    * Ensmbl44: Scoring AUTONEURAL9_TRAIN data;
2397927    *------------------------------------------------------------*;
2397928    data EMWS8.Ensmbl44_TRAIN
2397929    / view=EMWS8.Ensmbl44_TRAIN
2397930    ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl44_TRAIN / view=EMWS8.Ensmbl44_TRAIN ;
2397931    set EMWS8.AutoNeural9_TRAIN
2397932    ;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural9_TRAIN ;
2397933    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl44\EMFLOWSCORE.sas.
2397934   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2397935   +* Ensmbl44: Combine model for DepVar;
MPRINT(EM_DIAGRAM):   * Ensmbl44: Combine model for DepVar;
2397936   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2397937   +* Ensmbl44: Scoring Code of model 1 of 3;
MPRINT(EM_DIAGRAM):   * Ensmbl44: Scoring Code of model 1 of 3;
2397938   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2397939   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2397940   +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
2397941   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
2397942   +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
2397943   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2397944   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2397945   +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
2397946   +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
2397947   +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
2397948   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2397949   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2397950   +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
2397951   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
2397952   +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
2397953   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2397954   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2397955   +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
2397956   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
2397957   +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
2397958   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2397959   +
2397960   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
2397961   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
2397961  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
2397962   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
2397963   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
2397964   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
2397965   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
2397966   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
2397967   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2397968   +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
2397969   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
2397970   +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
2397971   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2397972   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2397973   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
2397974   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2397975   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
2397976   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
2397977   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
2397978   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2397979   +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
2397980   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
2397981   +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
2397982   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2397983   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2397984   +* TOOL: Metadata Node;
MPRINT(EM_DIAGRAM):   * TOOL: Metadata Node;
2397985   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
2397986   +* NODE: Meta;
MPRINT(EM_DIAGRAM):   * NODE: Meta;
2397987   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2397988   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2397989   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
2397990   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2397991   +* NODE: AutoNeural9;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural9;
2397992   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2397993   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2397994   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2397995   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2397996   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2397997   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2397998   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2397999   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2398000   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2398001   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2398002   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2398003   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2398004   +LENGTH _WARN_ $4
2398005   +      F_DepVar  $ 12
2398006   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2398007   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2398008   +
2398009   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2398010   +
2398011   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2398012   +
2398013   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2398014   +
2398015   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2398016   +
2398017   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2398018   +
2398019   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2398020   +
2398021   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2398022   +
2398023   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2398024   +
2398025   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2398026   +
2398027   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2398028   +
2398029   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2398030   +
2398031   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2398032   +
2398033   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2398034   +
2398035   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2398036   +
2398037   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2398038   +
2398039   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2398040   +
2398041   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2398042   +
2398043   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2398044   +
2398045   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2398046   +
2398047   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2398048   +
2398049   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2398050   +
2398051   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2398052   +
2398053   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2398054   +
2398055   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2398056   +
2398057   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2398058   +
2398059   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2398060   +
2398061   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2398062   +
2398063   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2398064   +
2398065   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2398066   +
2398067   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2398068   +
2398069   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2398070   +
2398071   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2398072   +
2398073   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2398074   +
2398075   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2398076   +
2398077   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2398078   +
2398079   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2398080   +
2398081   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2398082   +
2398083   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2398084   +
2398085   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2398086   +
2398087   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2398088   +
2398089   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2398090   +
2398091   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2398092   +
2398093   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2398094   +
2398095   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2398096   +
2398097   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2398098   +
2398099   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2398100   +
2398101   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2398102   +
2398103   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2398104   +
2398105   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2398106   +
2398107   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2398108   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2398109   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2398110   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2398111   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2398112   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2398113   +end;
MPRINT(EM_DIAGRAM):   end;
2398114   +else do;
MPRINT(EM_DIAGRAM):   else do;
2398115   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2398116   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2398117   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2398118   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2398119   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2398120   +   end;
MPRINT(EM_DIAGRAM):   end;
2398121   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2398122   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2398123   +   end;
MPRINT(EM_DIAGRAM):   end;
2398124   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2398125   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2398126   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2398127   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2398128   +   end;
MPRINT(EM_DIAGRAM):   end;
2398129   +end;
MPRINT(EM_DIAGRAM):   end;
2398130   +
2398131   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2398132   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2398133   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2398134   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2398135   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2398136   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2398137   +end;
MPRINT(EM_DIAGRAM):   end;
2398138   +else do;
MPRINT(EM_DIAGRAM):   else do;
2398139   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2398140   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2398141   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2398142   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2398143   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2398144   +   end;
MPRINT(EM_DIAGRAM):   end;
2398145   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2398146   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2398147   +   end;
MPRINT(EM_DIAGRAM):   end;
2398148   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2398149   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2398150   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2398151   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2398152   +   end;
MPRINT(EM_DIAGRAM):   end;
2398153   +end;
MPRINT(EM_DIAGRAM):   end;
2398154   +
2398155   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2398156   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2398157   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2398158   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2398159   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2398160   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2398161   +end;
MPRINT(EM_DIAGRAM):   end;
2398162   +else do;
MPRINT(EM_DIAGRAM):   else do;
2398163   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2398164   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2398165   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2398166   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2398167   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2398168   +   end;
MPRINT(EM_DIAGRAM):   end;
2398169   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2398170   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2398171   +   end;
MPRINT(EM_DIAGRAM):   end;
2398172   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2398173   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2398174   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2398175   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2398176   +   end;
MPRINT(EM_DIAGRAM):   end;
2398177   +end;
MPRINT(EM_DIAGRAM):   end;
2398178   +
2398179   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2398180   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2398181   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2398182   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2398183   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2398184   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2398185   +end;
MPRINT(EM_DIAGRAM):   end;
2398186   +else do;
MPRINT(EM_DIAGRAM):   else do;
2398187   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2398188   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2398189   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2398190   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2398191   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2398192   +   end;
MPRINT(EM_DIAGRAM):   end;
2398193   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2398194   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2398195   +   end;
MPRINT(EM_DIAGRAM):   end;
2398196   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2398197   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2398198   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2398199   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2398200   +   end;
MPRINT(EM_DIAGRAM):   end;
2398201   +end;
MPRINT(EM_DIAGRAM):   end;
2398202   +
2398203   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2398204   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2398205   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2398206   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2398207   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2398208   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2398209   +end;
MPRINT(EM_DIAGRAM):   end;
2398210   +else do;
MPRINT(EM_DIAGRAM):   else do;
2398211   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2398212   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2398213   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2398214   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2398215   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2398216   +   end;
MPRINT(EM_DIAGRAM):   end;
2398217   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2398218   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2398219   +   end;
MPRINT(EM_DIAGRAM):   end;
2398220   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2398221   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2398222   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2398223   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2398224   +   end;
MPRINT(EM_DIAGRAM):   end;
2398225   +end;
MPRINT(EM_DIAGRAM):   end;
2398226   +
2398227   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2398228   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2398229   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2398230   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2398231   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2398232   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2398233   +end;
MPRINT(EM_DIAGRAM):   end;
2398234   +else do;
MPRINT(EM_DIAGRAM):   else do;
2398235   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2398236   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2398237   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2398238   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2398239   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2398240   +   end;
MPRINT(EM_DIAGRAM):   end;
2398241   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2398242   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2398243   +   end;
MPRINT(EM_DIAGRAM):   end;
2398244   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2398245   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2398246   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2398247   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2398248   +   end;
MPRINT(EM_DIAGRAM):   end;
2398249   +end;
MPRINT(EM_DIAGRAM):   end;
2398250   +
2398251   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2398252   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2398253   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2398254   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2398255   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2398256   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2398257   +end;
MPRINT(EM_DIAGRAM):   end;
2398258   +else do;
MPRINT(EM_DIAGRAM):   else do;
2398259   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2398260   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2398261   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2398262   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2398263   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2398264   +   end;
MPRINT(EM_DIAGRAM):   end;
2398265   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2398266   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2398267   +   end;
MPRINT(EM_DIAGRAM):   end;
2398268   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2398269   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2398270   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2398271   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2398272   +   end;
MPRINT(EM_DIAGRAM):   end;
2398273   +end;
MPRINT(EM_DIAGRAM):   end;
2398274   +
2398275   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2398276   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
2398277   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2398278   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2398279   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2398280   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2398281   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2398282   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2398283   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2398284   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2398285   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2398286   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2398287   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2398288   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2398289   +end;
MPRINT(EM_DIAGRAM):   end;
2398290   +else do;
MPRINT(EM_DIAGRAM):   else do;
2398291   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2398292   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2398293   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2398294   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2398295   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2398296   +   end;
MPRINT(EM_DIAGRAM):   end;
2398297   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2398298   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2398299   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2398300   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2398301   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2398302   +   end;
MPRINT(EM_DIAGRAM):   end;
2398303   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2398304   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2398305   +   end;
MPRINT(EM_DIAGRAM):   end;
2398306   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2398307   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2398308   +   end;
MPRINT(EM_DIAGRAM):   end;
2398309   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2398310   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2398311   +   end;
MPRINT(EM_DIAGRAM):   end;
2398312   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2398313   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2398314   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2398315   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2398316   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2398317   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2398318   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2398319   +   end;
MPRINT(EM_DIAGRAM):   end;
2398320   +end;
MPRINT(EM_DIAGRAM):   end;
2398321   +
2398322   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2398323   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2398324   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
2398325   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2398326   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2398327   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2398328   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2398329   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2398330   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2398331   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2398332   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2398333   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2398334   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2398335   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2398336   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2398337   +end;
MPRINT(EM_DIAGRAM):   end;
2398338   +else do;
MPRINT(EM_DIAGRAM):   else do;
2398339   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2398340   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2398341   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2398342   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2398343   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2398344   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2398345   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2398346   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2398347   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2398348   +         end;
MPRINT(EM_DIAGRAM):   end;
2398349   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2398350   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2398351   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2398352   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2398353   +            end;
MPRINT(EM_DIAGRAM):   end;
2398354   +         end;
MPRINT(EM_DIAGRAM):   end;
2398355   +      end;
MPRINT(EM_DIAGRAM):   end;
2398356   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2398357   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2398358   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2398359   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2398360   +         end;
MPRINT(EM_DIAGRAM):   end;
2398361   +      end;
MPRINT(EM_DIAGRAM):   end;
2398362   +   end;
MPRINT(EM_DIAGRAM):   end;
2398363   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2398364   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2398365   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2398366   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2398367   +      end;
MPRINT(EM_DIAGRAM):   end;
2398368   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2398369   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2398370   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2398371   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2398372   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2398373   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2398374   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2398375   +         end;
MPRINT(EM_DIAGRAM):   end;
2398376   +      end;
MPRINT(EM_DIAGRAM):   end;
2398377   +   end;
MPRINT(EM_DIAGRAM):   end;
2398378   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2398379   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2398380   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2398381   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2398382   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2398383   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2398384   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2398385   +   end;
MPRINT(EM_DIAGRAM):   end;
2398386   +end;
MPRINT(EM_DIAGRAM):   end;
2398387   +
2398388   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2398389   +*** Checking missing input Interval
2398390   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2398391   +
2398392   +IF NMISS(
2398393   +   AcceptedCmpTotal ,
2398394   +   Age ,
2398395   +   Frq ,
2398396   +   Income ,
2398397   +   Kidhome ,
2398398   +   Mnt ,
2398399   +   MntFishProducts ,
2398400   +   MntFruits ,
2398401   +   MntGoldProds ,
2398402   +   MntMeatProducts ,
2398403   +   MntSweetProducts ,
2398404   +   MntWines ,
2398405   +   MonthsAsCustomer ,
2398406   +   NumCatalogPurchases ,
2398407   +   NumDealsPurchases ,
2398408   +   NumDistPurchases ,
2398409   +   NumStorePurchases ,
2398410   +   NumWebPurchases ,
2398411   +   NumWebVisitsMonth ,
2398412   +   RFMstat ,
2398413   +   RMntFrq ,
2398414   +   Recency ,
2398415   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
2398416   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2398417   +
2398418   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2398419   +END;
MPRINT(EM_DIAGRAM):   END;
2398420   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2398421   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2398422   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2398423   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2398424   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2398425   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2398426   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2398427   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2398428   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2398429   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2398430   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2398431   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2398432   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2398433   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2398434   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2398435   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2398436   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2398437   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2398438   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2398439   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2398440   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2398441   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2398442   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
2398443   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2398444   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2398445   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2398446   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2398447   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2398448   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2398449   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2398450   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2398451   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2398452   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2398453   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2398454   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2398455   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2398456   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2398457   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2398458   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2398459   +END;
MPRINT(EM_DIAGRAM):   END;
2398460   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2398461   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2398462   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2398463   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2398464   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2398465   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2398466   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2398467   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2398468   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2398469   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2398470   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2398471   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2398472   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2398473   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2398474   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2398475   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2398476   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2398477   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2398478   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2398479   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2398480   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2398481   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2398482   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
2398483   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2398484   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2398485   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2398486   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2398487   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2398488   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2398489   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2398490   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2398491   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2398492   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2398493   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
2398494   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2398495   +   ELSE S_NumCatalogPurchases
2398496   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2398497   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2398498   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2398499   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2398500   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2398501   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2398502   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2398503   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2398504   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2398505   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2398506   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2398507   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2398508   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2398509   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2398510   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2398511   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2398512   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2398513   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2398514   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2398515   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2398516   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2398517   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2398518   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2398519   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2398520   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2398521   +END;
MPRINT(EM_DIAGRAM):   END;
2398522   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2398523   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2398524   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2398525   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2398526   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2398527   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2398528   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2398529   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2398530   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2398531   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2398532   +   H1x1_1  =    -0.78941671657664 * S_AcceptedCmpTotal
2398533   +          +     0.31767378900448 * S_Age  +      -0.450304150539 * S_Frq
2398534   +          +     0.13641886985589 * S_Income  +    -0.76390352240561 *
2398535   +        S_Kidhome  +    -0.84654868800943 * S_Mnt  +     0.96945558052651 *
2398536   +        S_MntFishProducts  +     0.16268958674432 * S_MntFruits
2398537   +          +     0.02144447788014 * S_MntGoldProds  +    -3.75090210449464 *
2398538   +        S_MntMeatProducts  +    -0.22086629229442 * S_MntSweetProducts
2398539   +          +      0.8352178457402 * S_MntWines  +     0.16493907873466 *
2398540   +        S_MonthsAsCustomer  +    -1.54607390993048 * S_NumCatalogPurchases
2398541   +          +    -1.12130210731541 * S_NumDealsPurchases
2398542   +          +    -0.12343505299726 * S_NumDistPurchases
2398543   +          +     0.11863092868196 * S_NumStorePurchases
2398544   +          +       0.583917993314 * S_NumWebPurchases
2398545   +          +     0.75529732848146 * S_NumWebVisitsMonth
2398546   +          +    -0.49784215446785 * S_RFMstat  +     0.40580477815146 *
2398547   +        S_RMntFrq  +    -0.95519170979342 * S_Recency
2398548   +          +    -0.44895196625502 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.78941671657664 * S_AcceptedCmpTotal + 0.31767378900448 * 
S_Age + -0.450304150539 * S_Frq + 0.13641886985589 * S_Income + -0.76390352240561 * S_Kidhome 
+ -0.84654868800943 * S_Mnt + 0.96945558052651 * S_MntFishProducts + 0.16268958674432 * 
S_MntFruits + 0.02144447788014 * S_MntGoldProds + -3.75090210449464 * S_MntMeatProducts + 
-0.22086629229442 * S_MntSweetProducts + 0.8352178457402 * S_MntWines + 0.16493907873466 * 
S_MonthsAsCustomer + -1.54607390993048 * S_NumCatalogPurchases + -1.12130210731541 * 
S_NumDealsPurchases + -0.12343505299726 * S_NumDistPurchases + 0.11863092868196 * 
S_NumStorePurchases + 0.583917993314 * S_NumWebPurchases + 0.75529732848146 * 
S_NumWebVisitsMonth + -0.49784215446785 * S_RFMstat + 0.40580477815146 * S_RMntFrq + 
-0.95519170979342 * S_Recency + -0.44895196625502 * S_Teenhome ;
2398549   +   H1x1_2  =    -0.22984864633102 * S_AcceptedCmpTotal
2398550   +          +     0.08901810463204 * S_Age  +    -0.13007664741542 * S_Frq
2398551   +          +    -0.64174617524704 * S_Income  +     0.26599968715733 *
2398552   +        S_Kidhome  +     0.57486260655125 * S_Mnt  +    -0.56033337110694 *
2398553   +        S_MntFishProducts  +     0.16060716517673 * S_MntFruits
2398554   +          +      0.4349197289782 * S_MntGoldProds  +     1.41079767517969 *
2398555   +        S_MntMeatProducts  +      0.0615730534741 * S_MntSweetProducts
2398556   +          +    -0.09057901886639 * S_MntWines  +     0.20260454891291 *
2398557   +        S_MonthsAsCustomer  +    -1.17048742280721 * S_NumCatalogPurchases
2398558   +          +    -0.84113790640734 * S_NumDealsPurchases
2398559   +          +    -0.10512672747147 * S_NumDistPurchases
2398560   +          +     0.07268711782494 * S_NumStorePurchases
2398561   +          +     0.57578331257439 * S_NumWebPurchases
2398562   +          +    -1.34334433506558 * S_NumWebVisitsMonth
2398563   +          +     0.50079465494904 * S_RFMstat  +     0.77329849238514 *
2398564   +        S_RMntFrq  +      1.2759588366983 * S_Recency
2398565   +          +     0.17722493443222 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.22984864633102 * S_AcceptedCmpTotal + 0.08901810463204 * 
S_Age + -0.13007664741542 * S_Frq + -0.64174617524704 * S_Income + 0.26599968715733 * 
S_Kidhome + 0.57486260655125 * S_Mnt + -0.56033337110694 * S_MntFishProducts + 
0.16060716517673 * S_MntFruits + 0.4349197289782 * S_MntGoldProds + 1.41079767517969 * 
S_MntMeatProducts + 0.0615730534741 * S_MntSweetProducts + -0.09057901886639 * S_MntWines + 
0.20260454891291 * S_MonthsAsCustomer + -1.17048742280721 * S_NumCatalogPurchases + 
-0.84113790640734 * S_NumDealsPurchases + -0.10512672747147 * S_NumDistPurchases + 
0.07268711782494 * S_NumStorePurchases + 0.57578331257439 * S_NumWebPurchases + 
-1.34334433506558 * S_NumWebVisitsMonth + 0.50079465494904 * S_RFMstat + 0.77329849238514 * 
S_RMntFrq + 1.2759588366983 * S_Recency + 0.17722493443222 * S_Teenhome ;
2398566   +   H1x1_3  =      1.1751297152411 * S_AcceptedCmpTotal
2398567   +          +     0.14380060376858 * S_Age  +    -0.90459868540245 * S_Frq
2398568   +          +     0.65570498233801 * S_Income  +    -0.66078213466597 *
2398569   +        S_Kidhome  +      0.5364727654141 * S_Mnt  +    -0.56452823521458 *
2398570   +        S_MntFishProducts  +     0.11401811215013 * S_MntFruits
2398571   +          +     0.42809239636494 * S_MntGoldProds  +     3.28485519579047 *
2398572   +        S_MntMeatProducts  +    -0.10959477301368 * S_MntSweetProducts
2398573   +          +     -0.5779524716069 * S_MntWines  +     0.08256957915579 *
2398574   +        S_MonthsAsCustomer  +     0.48195221766948 * S_NumCatalogPurchases
2398575   +          +     0.45924983504762 * S_NumDealsPurchases
2398576   +          +    -0.25508041581692 * S_NumDistPurchases
2398577   +          +    -1.34901283858526 * S_NumStorePurchases
2398578   +          +    -0.86388975031663 * S_NumWebPurchases
2398579   +          +     1.86136110391797 * S_NumWebVisitsMonth
2398580   +          +     0.39724376701426 * S_RFMstat  +    -1.08648755949459 *
2398581   +        S_RMntFrq  +    -2.06955456943047 * S_Recency
2398582   +          +     -0.6524420065858 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.1751297152411 * S_AcceptedCmpTotal + 0.14380060376858 * S_Age 
+ -0.90459868540245 * S_Frq + 0.65570498233801 * S_Income + -0.66078213466597 * S_Kidhome + 
0.5364727654141 * S_Mnt + -0.56452823521458 * S_MntFishProducts + 0.11401811215013 * 
S_MntFruits + 0.42809239636494 * S_MntGoldProds + 3.28485519579047 * S_MntMeatProducts + 
-0.10959477301368 * S_MntSweetProducts + -0.5779524716069 * S_MntWines + 0.08256957915579 * 
S_MonthsAsCustomer + 0.48195221766948 * S_NumCatalogPurchases + 0.45924983504762 * 
S_NumDealsPurchases + -0.25508041581692 * S_NumDistPurchases + -1.34901283858526 * 
S_NumStorePurchases + -0.86388975031663 * S_NumWebPurchases + 1.86136110391797 * 
S_NumWebVisitsMonth + 0.39724376701426 * S_RFMstat + -1.08648755949459 * S_RMntFrq + 
-2.06955456943047 * S_Recency + -0.6524420065858 * S_Teenhome ;
2398583   +   H1x1_1  = H1x1_1  +     0.80545309346785 * AcceptedCmp10
2398584   +          +    -0.33518398776018 * AcceptedCmp20  +    -0.58961939502901 *
2398585   +        AcceptedCmp30  +    -0.89675052404295 * AcceptedCmp40
2398586   +          +     0.75506592249683 * AcceptedCmp50  +    -0.07335613460961 *
2398587   +        Complain0  +     0.34255762261501 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.80545309346785 * AcceptedCmp10 + -0.33518398776018 * 
AcceptedCmp20 + -0.58961939502901 * AcceptedCmp30 + -0.89675052404295 * AcceptedCmp40 + 
0.75506592249683 * AcceptedCmp50 + -0.07335613460961 * Complain0 + 0.34255762261501 * 
HigherEducationBinary0 ;
2398588   +   H1x1_2  = H1x1_2  +    -0.17834267108797 * AcceptedCmp10
2398589   +          +    -0.54414628806984 * AcceptedCmp20  +      0.8037591997808 *
2398590   +        AcceptedCmp30  +     0.37789561997689 * AcceptedCmp40
2398591   +          +    -1.39910847665731 * AcceptedCmp50  +    -0.44783176263268 *
2398592   +        Complain0  +     0.36763760090773 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.17834267108797 * AcceptedCmp10 + -0.54414628806984 
* AcceptedCmp20 + 0.8037591997808 * AcceptedCmp30 + 0.37789561997689 * AcceptedCmp40 + 
-1.39910847665731 * AcceptedCmp50 + -0.44783176263268 * Complain0 + 0.36763760090773 * 
HigherEducationBinary0 ;
2398593   +   H1x1_3  = H1x1_3  +    -0.20323890063703 * AcceptedCmp10
2398594   +          +    -0.08537895761507 * AcceptedCmp20  +     0.22533818089504 *
2398595   +        AcceptedCmp30  +    -0.22195995100127 * AcceptedCmp40
2398596   +          +    -2.01371926977123 * AcceptedCmp50  +    -0.17097719978842 *
2398597   +        Complain0  +     0.34016905753094 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.20323890063703 * AcceptedCmp10 + -0.08537895761507 
* AcceptedCmp20 + 0.22533818089504 * AcceptedCmp30 + -0.22195995100127 * AcceptedCmp40 + 
-2.01371926977123 * AcceptedCmp50 + -0.17097719978842 * Complain0 + 0.34016905753094 * 
HigherEducationBinary0 ;
2398598   +   H1x1_1  = H1x1_1  +    -0.03394180683805 * Education2n_Cycle
2398599   +          +    -0.38224926448988 * EducationBasic  +    -0.42512289883041 *
2398600   +        EducationGraduation  +    -0.59708578424036 * EducationMaster
2398601   +          +     0.48853068455666 * Marital_StatusDivorced
2398602   +          +    -0.54903474026465 * Marital_StatusMarried
2398603   +          +    -0.34079188373939 * Marital_StatusSingle
2398604   +          +    -0.64602969938868 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.03394180683805 * Education2n_Cycle + 
-0.38224926448988 * EducationBasic + -0.42512289883041 * EducationGraduation + 
-0.59708578424036 * EducationMaster + 0.48853068455666 * Marital_StatusDivorced + 
-0.54903474026465 * Marital_StatusMarried + -0.34079188373939 * Marital_StatusSingle + 
-0.64602969938868 * Marital_StatusTogether ;
2398605   +   H1x1_2  = H1x1_2  +    -0.26170943801998 * Education2n_Cycle
2398606   +          +     0.06893871459175 * EducationBasic  +    -0.84123174187664 *
2398607   +        EducationGraduation  +     0.19038549912088 * EducationMaster
2398608   +          +    -1.03547689902027 * Marital_StatusDivorced
2398609   +          +     2.42164864610471 * Marital_StatusMarried
2398610   +          +    -1.95342561304942 * Marital_StatusSingle
2398611   +          +      2.1397185142046 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.26170943801998 * Education2n_Cycle + 
0.06893871459175 * EducationBasic + -0.84123174187664 * EducationGraduation + 0.19038549912088 
* EducationMaster + -1.03547689902027 * Marital_StatusDivorced + 2.42164864610471 * 
Marital_StatusMarried + -1.95342561304942 * Marital_StatusSingle + 2.1397185142046 * 
Marital_StatusTogether ;
2398612   +   H1x1_3  = H1x1_3  +    -0.04236694810886 * Education2n_Cycle
2398613   +          +    -0.57404276980591 * EducationBasic  +     -0.1441989834351 *
2398614   +        EducationGraduation  +    -0.31867831184924 * EducationMaster
2398615   +          +      0.4337638747935 * Marital_StatusDivorced
2398616   +          +    -0.38508657017615 * Marital_StatusMarried
2398617   +          +     -0.0160269708326 * Marital_StatusSingle
2398618   +          +    -0.57491004270903 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.04236694810886 * Education2n_Cycle + 
-0.57404276980591 * EducationBasic + -0.1441989834351 * EducationGraduation + 
-0.31867831184924 * EducationMaster + 0.4337638747935 * Marital_StatusDivorced + 
-0.38508657017615 * Marital_StatusMarried + -0.0160269708326 * Marital_StatusSingle + 
-0.57491004270903 * Marital_StatusTogether ;
2398619   +   H1x1_1  =    -0.53426188790968 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.53426188790968 + H1x1_1 ;
2398620   +   H1x1_2  =     0.98557066823746 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.98557066823746 + H1x1_2 ;
2398621   +   H1x1_3  =     1.81937688438175 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.81937688438175 + H1x1_3 ;
2398622   +   H1x1_4  = 0;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0;
2398623   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
2398624   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2398625   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
2398626   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
2398627   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
2398628   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
2398629   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
2398630   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
2398631   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
2398632   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
2398633   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
2398634   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
2398635   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
2398636   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
2398637   +END;
MPRINT(EM_DIAGRAM):   END;
2398638   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2398639   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2398640   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2398641   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2398642   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2398643   +END;
MPRINT(EM_DIAGRAM):   END;
2398644   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2398645   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2398646   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2398647   +
2398648   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2398649   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2398650   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2398651   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2398652   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2398653   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2398654   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2398655   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2398656   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2398657   +end;
MPRINT(EM_DIAGRAM):   end;
2398658   +else do;
MPRINT(EM_DIAGRAM):   else do;
2398659   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2398660   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2398661   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2398662   +   end;
MPRINT(EM_DIAGRAM):   end;
2398663   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2398664   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2398665   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2398666   +   end;
MPRINT(EM_DIAGRAM):   end;
2398667   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2398668   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2398669   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2398670   +   end;
MPRINT(EM_DIAGRAM):   end;
2398671   +end;
MPRINT(EM_DIAGRAM):   end;
2398672   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2398673   +   P_DepVar1  =    -3.43702380277695 * H1x1_1  +    -7.14235896425537 * H1x1_2
2398674   +          +     10.8296305415538 * H1x1_3  +    -2.20824183229369 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.43702380277695 * H1x1_1 + -7.14235896425537 * H1x1_2 + 
10.8296305415538 * H1x1_3 + -2.20824183229369 * H1x1_4 ;
2398675   +   P_DepVar1  =    -3.68304614366462 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.68304614366462 + P_DepVar1 ;
2398676   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2398677   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2398678   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2398679   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2398680   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2398681   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2398682   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2398683   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2398684   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2398685   +END;
MPRINT(EM_DIAGRAM):   END;
2398686   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2398687   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2398688   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2398689   +END;
MPRINT(EM_DIAGRAM):   END;
2398690   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2398691   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2398692   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2398693   +END;
MPRINT(EM_DIAGRAM):   END;
2398694   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2398695   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2398696   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2398697   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2398698   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2398699   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2398700   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2398701   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2398702   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2398703   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2398704   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2398705   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2398706   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2398707   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2398708   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2398709   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2398710   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2398711   +END;
MPRINT(EM_DIAGRAM):   END;
2398712   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2398713   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2398714   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2398715   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2398716   +* Renaming variables for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural9;
2398717   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2398718   +* Renaming Posterior variables for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural9;
2398719   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2398720   +drop AutoNeural9_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_P_DepVar1;
2398721   +AutoNeural9_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural9_P_DepVar1 = P_DepVar1;
2398722   +drop AutoNeural9_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_P_DepVar0;
2398723   +AutoNeural9_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural9_P_DepVar0 = P_DepVar0;
2398724   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2398725   +* Renaming Into variables for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for AutoNeural9;
2398726   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2398727   +length AutoNeural9_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length AutoNeural9_I_DepVar $32;
2398728   +drop AutoNeural9_I_DepVar;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_I_DepVar;
2398729   +AutoNeural9_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   AutoNeural9_I_DepVar = I_DepVar;
2398730   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2398731   +* Renaming _WARN_ variable for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural9;
2398732   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2398733   +length AutoNeural9_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural9_WARN_ $4;
2398734   +drop AutoNeural9_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_WARN_;
2398735   +AutoNeural9_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural9_WARN_ = _WARN_;
2398736   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2398737   +* Ensmbl44: Scoring Code of model 2 of 3;
MPRINT(EM_DIAGRAM):   * Ensmbl44: Scoring Code of model 2 of 3;
2398738   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2398739   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2398740   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
2398741   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2398742   +* NODE: AutoNeural11;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural11;
2398743   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2398744   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2398745   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2398746   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2398747   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2398748   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2398749   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2398750   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2398751   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2398752   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2398753   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2398754   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2398755   +LENGTH _WARN_ $4
2398756   +      F_DepVar  $ 12
2398757   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2398758   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2398759   +
2398760   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2398761   +
2398762   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2398763   +
2398764   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2398765   +
2398766   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2398767   +
2398768   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2398769   +
2398770   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2398771   +
2398772   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2398773   +
2398774   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2398775   +
2398776   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2398777   +
2398778   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2398779   +
2398780   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2398781   +
2398782   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2398783   +
2398784   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2398785   +
2398786   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2398787   +
2398788   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2398789   +
2398790   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2398791   +
2398792   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2398793   +
2398794   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2398795   +
2398796   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2398797   +
2398798   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2398799   +
2398800   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2398801   +
2398802   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2398803   +
2398804   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2398805   +
2398806   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2398807   +
2398808   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2398809   +
2398810   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2398811   +
2398812   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2398813   +
2398814   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2398815   +
2398816   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2398817   +
2398818   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2398819   +
2398820   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2398821   +
2398822   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2398823   +
2398824   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2398825   +
2398826   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2398827   +
2398828   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2398829   +
2398830   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2398831   +
2398832   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2398833   +
2398834   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2398835   +
2398836   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2398837   +
2398838   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2398839   +
2398840   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2398841   +
2398842   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
2398843   +
2398844   +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
2398845   +
2398846   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
2398847   +
2398848   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
2398849   +
2398850   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
2398851   +
2398852   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
2398853   +
2398854   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
2398855   +
2398856   +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
2398857   +
2398858   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
2398859   +
2398860   +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
2398861   +
2398862   +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
2398863   +
2398864   +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
2398865   +
2398866   +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
2398867   +
2398868   +      label H2x1_6 = 'Hidden: H2x1_=6' ;
MPRINT(EM_DIAGRAM):   label H2x1_6 = 'Hidden: H2x1_=6' ;
2398869   +
2398870   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2398871   +
2398872   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2398873   +
2398874   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2398875   +
2398876   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2398877   +
2398878   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2398879   +
2398880   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2398881   +
2398882   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2398883   +
2398884   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2398885   +
2398886   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2398887   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2398888   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2398889   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2398890   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2398891   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2398892   +end;
MPRINT(EM_DIAGRAM):   end;
2398893   +else do;
MPRINT(EM_DIAGRAM):   else do;
2398894   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2398895   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2398896   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2398897   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2398898   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2398899   +   end;
MPRINT(EM_DIAGRAM):   end;
2398900   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2398901   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2398902   +   end;
MPRINT(EM_DIAGRAM):   end;
2398903   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2398904   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2398905   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2398906   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2398907   +   end;
MPRINT(EM_DIAGRAM):   end;
2398908   +end;
MPRINT(EM_DIAGRAM):   end;
2398909   +
2398910   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2398911   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2398912   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2398913   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2398914   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2398915   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2398916   +end;
MPRINT(EM_DIAGRAM):   end;
2398917   +else do;
MPRINT(EM_DIAGRAM):   else do;
2398918   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2398919   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2398920   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2398921   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2398922   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2398923   +   end;
MPRINT(EM_DIAGRAM):   end;
2398924   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2398925   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2398926   +   end;
MPRINT(EM_DIAGRAM):   end;
2398927   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2398928   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2398929   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2398930   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2398931   +   end;
MPRINT(EM_DIAGRAM):   end;
2398932   +end;
MPRINT(EM_DIAGRAM):   end;
2398933   +
2398934   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2398935   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2398936   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2398937   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2398938   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2398939   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2398940   +end;
MPRINT(EM_DIAGRAM):   end;
2398941   +else do;
MPRINT(EM_DIAGRAM):   else do;
2398942   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2398943   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2398944   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2398945   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2398946   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2398947   +   end;
MPRINT(EM_DIAGRAM):   end;
2398948   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2398949   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2398950   +   end;
MPRINT(EM_DIAGRAM):   end;
2398951   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2398952   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2398953   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2398954   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2398955   +   end;
MPRINT(EM_DIAGRAM):   end;
2398956   +end;
MPRINT(EM_DIAGRAM):   end;
2398957   +
2398958   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2398959   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2398960   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2398961   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2398962   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2398963   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2398964   +end;
MPRINT(EM_DIAGRAM):   end;
2398965   +else do;
MPRINT(EM_DIAGRAM):   else do;
2398966   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2398967   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2398968   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2398969   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2398970   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2398971   +   end;
MPRINT(EM_DIAGRAM):   end;
2398972   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2398973   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2398974   +   end;
MPRINT(EM_DIAGRAM):   end;
2398975   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2398976   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2398977   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2398978   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2398979   +   end;
MPRINT(EM_DIAGRAM):   end;
2398980   +end;
MPRINT(EM_DIAGRAM):   end;
2398981   +
2398982   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2398983   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2398984   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2398985   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2398986   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2398987   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2398988   +end;
MPRINT(EM_DIAGRAM):   end;
2398989   +else do;
MPRINT(EM_DIAGRAM):   else do;
2398990   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2398991   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2398992   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2398993   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2398994   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2398995   +   end;
MPRINT(EM_DIAGRAM):   end;
2398996   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2398997   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2398998   +   end;
MPRINT(EM_DIAGRAM):   end;
2398999   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2399000   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2399001   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2399002   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2399003   +   end;
MPRINT(EM_DIAGRAM):   end;
2399004   +end;
MPRINT(EM_DIAGRAM):   end;
2399005   +
2399006   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2399007   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2399008   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2399009   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2399010   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2399011   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2399012   +end;
MPRINT(EM_DIAGRAM):   end;
2399013   +else do;
MPRINT(EM_DIAGRAM):   else do;
2399014   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2399015   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2399016   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2399017   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2399018   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2399019   +   end;
MPRINT(EM_DIAGRAM):   end;
2399020   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2399021   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2399022   +   end;
MPRINT(EM_DIAGRAM):   end;
2399023   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2399024   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2399025   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2399026   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2399027   +   end;
MPRINT(EM_DIAGRAM):   end;
2399028   +end;
MPRINT(EM_DIAGRAM):   end;
2399029   +
2399030   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2399031   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2399032   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2399033   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2399034   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2399035   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2399036   +end;
MPRINT(EM_DIAGRAM):   end;
2399037   +else do;
MPRINT(EM_DIAGRAM):   else do;
2399038   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2399039   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2399040   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2399041   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2399042   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2399043   +   end;
MPRINT(EM_DIAGRAM):   end;
2399044   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2399045   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2399046   +   end;
MPRINT(EM_DIAGRAM):   end;
2399047   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2399048   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2399049   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2399050   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2399051   +   end;
MPRINT(EM_DIAGRAM):   end;
2399052   +end;
MPRINT(EM_DIAGRAM):   end;
2399053   +
2399054   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2399055   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
2399056   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2399057   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2399058   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2399059   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2399060   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2399061   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2399062   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2399063   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2399064   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2399065   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2399066   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2399067   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2399068   +end;
MPRINT(EM_DIAGRAM):   end;
2399069   +else do;
MPRINT(EM_DIAGRAM):   else do;
2399070   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2399071   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2399072   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2399073   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2399074   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2399075   +   end;
MPRINT(EM_DIAGRAM):   end;
2399076   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2399077   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2399078   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2399079   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2399080   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2399081   +   end;
MPRINT(EM_DIAGRAM):   end;
2399082   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2399083   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2399084   +   end;
MPRINT(EM_DIAGRAM):   end;
2399085   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2399086   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2399087   +   end;
MPRINT(EM_DIAGRAM):   end;
2399088   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2399089   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2399090   +   end;
MPRINT(EM_DIAGRAM):   end;
2399091   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2399092   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2399093   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2399094   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2399095   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2399096   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2399097   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2399098   +   end;
MPRINT(EM_DIAGRAM):   end;
2399099   +end;
MPRINT(EM_DIAGRAM):   end;
2399100   +
2399101   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2399102   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2399103   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
2399104   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2399105   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2399106   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2399107   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2399108   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2399109   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2399110   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2399111   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2399112   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2399113   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2399114   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2399115   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2399116   +end;
MPRINT(EM_DIAGRAM):   end;
2399117   +else do;
MPRINT(EM_DIAGRAM):   else do;
2399118   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2399119   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2399120   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2399121   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2399122   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2399123   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2399124   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2399125   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2399126   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2399127   +         end;
MPRINT(EM_DIAGRAM):   end;
2399128   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2399129   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2399130   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2399131   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2399132   +            end;
MPRINT(EM_DIAGRAM):   end;
2399133   +         end;
MPRINT(EM_DIAGRAM):   end;
2399134   +      end;
MPRINT(EM_DIAGRAM):   end;
2399135   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2399136   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2399137   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2399138   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2399139   +         end;
MPRINT(EM_DIAGRAM):   end;
2399140   +      end;
MPRINT(EM_DIAGRAM):   end;
2399141   +   end;
MPRINT(EM_DIAGRAM):   end;
2399142   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2399143   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2399144   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2399145   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2399146   +      end;
MPRINT(EM_DIAGRAM):   end;
2399147   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2399148   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2399149   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2399150   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2399151   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2399152   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2399153   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2399154   +         end;
MPRINT(EM_DIAGRAM):   end;
2399155   +      end;
MPRINT(EM_DIAGRAM):   end;
2399156   +   end;
MPRINT(EM_DIAGRAM):   end;
2399157   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2399158   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2399159   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2399160   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2399161   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2399162   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2399163   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2399164   +   end;
MPRINT(EM_DIAGRAM):   end;
2399165   +end;
MPRINT(EM_DIAGRAM):   end;
2399166   +
2399167   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2399168   +*** Checking missing input Interval
2399169   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2399170   +
2399171   +IF NMISS(
2399172   +   AcceptedCmpTotal ,
2399173   +   Age ,
2399174   +   Frq ,
2399175   +   Income ,
2399176   +   Kidhome ,
2399177   +   Mnt ,
2399178   +   MntFishProducts ,
2399179   +   MntFruits ,
2399180   +   MntGoldProds ,
2399181   +   MntMeatProducts ,
2399182   +   MntSweetProducts ,
2399183   +   MntWines ,
2399184   +   MonthsAsCustomer ,
2399185   +   NumCatalogPurchases ,
2399186   +   NumDealsPurchases ,
2399187   +   NumDistPurchases ,
2399188   +   NumStorePurchases ,
2399189   +   NumWebPurchases ,
2399190   +   NumWebVisitsMonth ,
2399191   +   RFMstat ,
2399192   +   RMntFrq ,
2399193   +   Recency ,
2399194   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
2399195   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2399196   +
2399197   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2399198   +END;
MPRINT(EM_DIAGRAM):   END;
2399199   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2399200   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2399201   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2399202   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2399203   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2399204   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2399205   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2399206   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2399207   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2399208   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2399209   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2399210   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2399211   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2399212   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2399213   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2399214   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2399215   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2399216   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2399217   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2399218   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2399219   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2399220   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2399221   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
2399222   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2399223   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2399224   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2399225   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2399226   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2399227   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2399228   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2399229   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2399230   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2399231   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2399232   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2399233   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2399234   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2399235   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2399236   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2399237   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2399238   +END;
MPRINT(EM_DIAGRAM):   END;
2399239   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2399240   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2399241   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2399242   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2399243   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2399244   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2399245   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2399246   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2399247   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2399248   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2399249   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2399250   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2399251   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2399252   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2399253   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2399254   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2399255   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2399256   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2399257   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2399258   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2399259   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2399260   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2399261   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
2399262   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2399263   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2399264   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2399265   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2399266   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2399267   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2399268   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2399269   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2399270   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2399271   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2399272   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
2399273   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2399274   +   ELSE S_NumCatalogPurchases
2399275   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2399276   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2399277   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2399278   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2399279   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2399280   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2399281   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2399282   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2399283   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2399284   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2399285   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2399286   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2399287   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2399288   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2399289   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2399290   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2399291   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2399292   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2399293   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2399294   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2399295   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2399296   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2399297   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2399298   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2399299   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2399300   +END;
MPRINT(EM_DIAGRAM):   END;
2399301   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2399302   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2399303   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2399304   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2399305   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2399306   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2399307   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2399308   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2399309   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2399310   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2399311   +   H1x1_1  =     0.16786131610493 * S_AcceptedCmpTotal
2399312   +          +     0.08150129707008 * S_Age  +    -0.00076335149511 * S_Frq
2399313   +          +     2.37648351383272 * S_Income  +    -1.63260278456818 *
2399314   +        S_Kidhome  +     -0.6720941090663 * S_Mnt  +    -0.03176174297509 *
2399315   +        S_MntFishProducts  +    -0.03796990721617 * S_MntFruits
2399316   +          +    -0.17020485447842 * S_MntGoldProds  +      0.7709093878281 *
2399317   +        S_MntMeatProducts  +    -0.26168538456938 * S_MntSweetProducts
2399318   +          +    -1.36275284328546 * S_MntWines  +    -0.30344694826738 *
2399319   +        S_MonthsAsCustomer  +     1.68662611500615 * S_NumCatalogPurchases
2399320   +          +     1.32037113020393 * S_NumDealsPurchases
2399321   +          +     0.42879249227132 * S_NumDistPurchases
2399322   +          +    -0.89190172778783 * S_NumStorePurchases
2399323   +          +    -0.87975442613962 * S_NumWebPurchases
2399324   +          +     2.98977282825831 * S_NumWebVisitsMonth
2399325   +          +     0.16388418187981 * S_RFMstat  +     0.63858980984599 *
2399326   +        S_RMntFrq  +    -2.53833222281652 * S_Recency
2399327   +          +    -2.72141665283523 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.16786131610493 * S_AcceptedCmpTotal + 0.08150129707008 * 
S_Age + -0.00076335149511 * S_Frq + 2.37648351383272 * S_Income + -1.63260278456818 * 
S_Kidhome + -0.6720941090663 * S_Mnt + -0.03176174297509 * S_MntFishProducts + 
-0.03796990721617 * S_MntFruits + -0.17020485447842 * S_MntGoldProds + 0.7709093878281 * 
S_MntMeatProducts + -0.26168538456938 * S_MntSweetProducts + -1.36275284328546 * S_MntWines + 
-0.30344694826738 * S_MonthsAsCustomer + 1.68662611500615 * S_NumCatalogPurchases + 
1.32037113020393 * S_NumDealsPurchases + 0.42879249227132 * S_NumDistPurchases + 
-0.89190172778783 * S_NumStorePurchases + -0.87975442613962 * S_NumWebPurchases + 
2.98977282825831 * S_NumWebVisitsMonth + 0.16388418187981 * S_RFMstat + 0.63858980984599 * 
S_RMntFrq + -2.53833222281652 * S_Recency + -2.72141665283523 * S_Teenhome ;
2399328   +   H1x1_2  =    -1.16140709294501 * S_AcceptedCmpTotal
2399329   +          +    -0.87210661607894 * S_Age  +    -0.15365607228782 * S_Frq
2399330   +          +    -1.14855351318782 * S_Income  +     -0.3792851632462 *
2399331   +        S_Kidhome  +    -1.20412080219233 * S_Mnt  +     0.98615533034973 *
2399332   +        S_MntFishProducts  +     0.44541456963703 * S_MntFruits
2399333   +          +    -0.86465923336111 * S_MntGoldProds  +    -5.15063925950455 *
2399334   +        S_MntMeatProducts  +     0.54937255903381 * S_MntSweetProducts
2399335   +          +      1.1566197343428 * S_MntWines  +     1.05956341559861 *
2399336   +        S_MonthsAsCustomer  +    -1.51353620179805 * S_NumCatalogPurchases
2399337   +          +    -1.16737670931605 * S_NumDealsPurchases
2399338   +          +     0.08205195039242 * S_NumDistPurchases
2399339   +          +    -0.65367044520084 * S_NumStorePurchases
2399340   +          +     2.39693083674757 * S_NumWebPurchases
2399341   +          +     0.18432526469897 * S_NumWebVisitsMonth
2399342   +          +    -0.81660690569703 * S_RFMstat  +      0.2679378370467 *
2399343   +        S_RMntFrq  +    -0.12214066685673 * S_Recency
2399344   +          +     1.80138107382539 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -1.16140709294501 * S_AcceptedCmpTotal + -0.87210661607894 * 
S_Age + -0.15365607228782 * S_Frq + -1.14855351318782 * S_Income + -0.3792851632462 * 
S_Kidhome + -1.20412080219233 * S_Mnt + 0.98615533034973 * S_MntFishProducts + 
0.44541456963703 * S_MntFruits + -0.86465923336111 * S_MntGoldProds + -5.15063925950455 * 
S_MntMeatProducts + 0.54937255903381 * S_MntSweetProducts + 1.1566197343428 * S_MntWines + 
1.05956341559861 * S_MonthsAsCustomer + -1.51353620179805 * S_NumCatalogPurchases + 
-1.16737670931605 * S_NumDealsPurchases + 0.08205195039242 * S_NumDistPurchases + 
-0.65367044520084 * S_NumStorePurchases + 2.39693083674757 * S_NumWebPurchases + 
0.18432526469897 * S_NumWebVisitsMonth + -0.81660690569703 * S_RFMstat + 0.2679378370467 * 
S_RMntFrq + -0.12214066685673 * S_Recency + 1.80138107382539 * S_Teenhome ;
2399345   +   H1x1_3  =      2.0905555295419 * S_AcceptedCmpTotal
2399346   +          +    -0.23515107640805 * S_Age  +    -0.34980320997139 * S_Frq
2399347   +          +     0.96612788543649 * S_Income  +    -0.57035066115881 *
2399348   +        S_Kidhome  +     0.22762934410578 * S_Mnt  +    -0.52536382903021 *
2399349   +        S_MntFishProducts  +    -1.18451511831956 * S_MntFruits
2399350   +          +     0.15600368092559 * S_MntGoldProds  +     2.66964572205551 *
2399351   +        S_MntMeatProducts  +    -0.66381928008493 * S_MntSweetProducts
2399352   +          +    -1.34669953562975 * S_MntWines  +     1.35404821514849 *
2399353   +        S_MonthsAsCustomer  +     1.74839628716461 * S_NumCatalogPurchases
2399354   +          +     0.76616480025024 * S_NumDealsPurchases
2399355   +          +     0.42823368706255 * S_NumDistPurchases
2399356   +          +    -1.16998364854907 * S_NumStorePurchases
2399357   +          +     -1.0841896541746 * S_NumWebPurchases
2399358   +          +     2.74837744375079 * S_NumWebVisitsMonth
2399359   +          +    -0.12893804494501 * S_RFMstat  +    -0.62922223536042 *
2399360   +        S_RMntFrq  +    -5.13438280616518 * S_Recency
2399361   +          +    -0.03717013845941 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 2.0905555295419 * S_AcceptedCmpTotal + -0.23515107640805 * 
S_Age + -0.34980320997139 * S_Frq + 0.96612788543649 * S_Income + -0.57035066115881 * 
S_Kidhome + 0.22762934410578 * S_Mnt + -0.52536382903021 * S_MntFishProducts + 
-1.18451511831956 * S_MntFruits + 0.15600368092559 * S_MntGoldProds + 2.66964572205551 * 
S_MntMeatProducts + -0.66381928008493 * S_MntSweetProducts + -1.34669953562975 * S_MntWines + 
1.35404821514849 * S_MonthsAsCustomer + 1.74839628716461 * S_NumCatalogPurchases + 
0.76616480025024 * S_NumDealsPurchases + 0.42823368706255 * S_NumDistPurchases + 
-1.16998364854907 * S_NumStorePurchases + -1.0841896541746 * S_NumWebPurchases + 
2.74837744375079 * S_NumWebVisitsMonth + -0.12893804494501 * S_RFMstat + -0.62922223536042 * 
S_RMntFrq + -5.13438280616518 * S_Recency + -0.03717013845941 * S_Teenhome ;
2399362   +   H1x1_4  =     0.00721395593412 * S_AcceptedCmpTotal
2399363   +          +    -0.01540387767211 * S_Age  +    -0.84860703860633 * S_Frq
2399364   +          +    -1.02288627805121 * S_Income  +    -1.09101870516967 *
2399365   +        S_Kidhome  +    -0.49364597366691 * S_Mnt  +    -0.46832600024559 *
2399366   +        S_MntFishProducts  +     0.18419647776638 * S_MntFruits
2399367   +          +     0.08548650236624 * S_MntGoldProds  +      3.4353205628246 *
2399368   +        S_MntMeatProducts  +    -0.34836704949861 * S_MntSweetProducts
2399369   +          +    -2.43294028965601 * S_MntWines  +       -0.52018014955 *
2399370   +        S_MonthsAsCustomer  +     0.64700842330282 * S_NumCatalogPurchases
2399371   +          +     0.78421010501058 * S_NumDealsPurchases
2399372   +          +     0.01075885160671 * S_NumDistPurchases
2399373   +          +    -1.99395040717832 * S_NumStorePurchases
2399374   +          +    -1.02908330834262 * S_NumWebPurchases
2399375   +          +     2.79163466516477 * S_NumWebVisitsMonth
2399376   +          +    -0.02537920152644 * S_RFMstat  +    -0.42457000565561 *
2399377   +        S_RMntFrq  +     -2.0907247135068 * S_Recency
2399378   +          +     0.74119954026621 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.00721395593412 * S_AcceptedCmpTotal + -0.01540387767211 * 
S_Age + -0.84860703860633 * S_Frq + -1.02288627805121 * S_Income + -1.09101870516967 * 
S_Kidhome + -0.49364597366691 * S_Mnt + -0.46832600024559 * S_MntFishProducts + 
0.18419647776638 * S_MntFruits + 0.08548650236624 * S_MntGoldProds + 3.4353205628246 * 
S_MntMeatProducts + -0.34836704949861 * S_MntSweetProducts + -2.43294028965601 * S_MntWines + 
-0.52018014955 * S_MonthsAsCustomer + 0.64700842330282 * S_NumCatalogPurchases + 
0.78421010501058 * S_NumDealsPurchases + 0.01075885160671 * S_NumDistPurchases + 
-1.99395040717832 * S_NumStorePurchases + -1.02908330834262 * S_NumWebPurchases + 
2.79163466516477 * S_NumWebVisitsMonth + -0.02537920152644 * S_RFMstat + -0.42457000565561 * 
S_RMntFrq + -2.0907247135068 * S_Recency + 0.74119954026621 * S_Teenhome ;
2399379   +   H1x1_5  =    -1.61701205426558 * S_AcceptedCmpTotal
2399380   +          +     0.08257295395479 * S_Age  +    -0.68185680658717 * S_Frq
2399381   +          +    -1.39465125759406 * S_Income  +    -1.25029109577242 *
2399382   +        S_Kidhome  +    -1.09090107886966 * S_Mnt  +     1.64350195586938 *
2399383   +        S_MntFishProducts  +      0.5087421773332 * S_MntFruits
2399384   +          +      0.4047616469084 * S_MntGoldProds  +    -7.16241250715453 *
2399385   +        S_MntMeatProducts  +    -0.92562420397097 * S_MntSweetProducts
2399386   +          +     1.87307481667927 * S_MntWines  +    -0.53417946416471 *
2399387   +        S_MonthsAsCustomer  +    -1.53123660652072 * S_NumCatalogPurchases
2399388   +          +    -1.04219068390022 * S_NumDealsPurchases
2399389   +          +    -0.45770204483973 * S_NumDistPurchases
2399390   +          +    -0.04941442229195 * S_NumStorePurchases
2399391   +          +     0.67187353161183 * S_NumWebPurchases
2399392   +          +     2.01907760553871 * S_NumWebVisitsMonth
2399393   +          +    -1.68329765100269 * S_RFMstat  +     0.29244142334331 *
2399394   +        S_RMntFrq  +    -1.12913051410394 * S_Recency
2399395   +          +     0.43082751824484 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.61701205426558 * S_AcceptedCmpTotal + 0.08257295395479 * 
S_Age + -0.68185680658717 * S_Frq + -1.39465125759406 * S_Income + -1.25029109577242 * 
S_Kidhome + -1.09090107886966 * S_Mnt + 1.64350195586938 * S_MntFishProducts + 0.5087421773332 
* S_MntFruits + 0.4047616469084 * S_MntGoldProds + -7.16241250715453 * S_MntMeatProducts + 
-0.92562420397097 * S_MntSweetProducts + 1.87307481667927 * S_MntWines + -0.53417946416471 * 
S_MonthsAsCustomer + -1.53123660652072 * S_NumCatalogPurchases + -1.04219068390022 * 
S_NumDealsPurchases + -0.45770204483973 * S_NumDistPurchases + -0.04941442229195 * 
S_NumStorePurchases + 0.67187353161183 * S_NumWebPurchases + 2.01907760553871 * 
S_NumWebVisitsMonth + -1.68329765100269 * S_RFMstat + 0.29244142334331 * S_RMntFrq + 
-1.12913051410394 * S_Recency + 0.43082751824484 * S_Teenhome ;
2399396   +   H1x1_1  = H1x1_1  +    -0.44646416045725 * AcceptedCmp10
2399397   +          +    -0.51992887099168 * AcceptedCmp20  +    -1.12974688442196 *
2399398   +        AcceptedCmp30  +    -0.25247614927616 * AcceptedCmp40
2399399   +          +     -1.0839587453165 * AcceptedCmp50  +    -0.37542128912082 *
2399400   +        Complain0  +     0.50509109375746 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.44646416045725 * AcceptedCmp10 + -0.51992887099168 
* AcceptedCmp20 + -1.12974688442196 * AcceptedCmp30 + -0.25247614927616 * AcceptedCmp40 + 
-1.0839587453165 * AcceptedCmp50 + -0.37542128912082 * Complain0 + 0.50509109375746 * 
HigherEducationBinary0 ;
2399401   +   H1x1_2  = H1x1_2  +     1.41785862418118 * AcceptedCmp10
2399402   +          +     0.14869386732553 * AcceptedCmp20  +    -0.34292007253529 *
2399403   +        AcceptedCmp30  +    -0.46450669830265 * AcceptedCmp40
2399404   +          +    -0.84675597945703 * AcceptedCmp50  +     -0.0664649548734 *
2399405   +        Complain0  +    -0.45532665777266 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 1.41785862418118 * AcceptedCmp10 + 0.14869386732553 * 
AcceptedCmp20 + -0.34292007253529 * AcceptedCmp30 + -0.46450669830265 * AcceptedCmp40 + 
-0.84675597945703 * AcceptedCmp50 + -0.0664649548734 * Complain0 + -0.45532665777266 * 
HigherEducationBinary0 ;
2399406   +   H1x1_3  = H1x1_3  +    -0.77549230890552 * AcceptedCmp10
2399407   +          +    -1.36005205352388 * AcceptedCmp20  +    -0.77268925112364 *
2399408   +        AcceptedCmp30  +    -1.48651970256564 * AcceptedCmp40
2399409   +          +    -1.49771960438108 * AcceptedCmp50  +     0.05855673938529 *
2399410   +        Complain0  +      0.5650947463497 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.77549230890552 * AcceptedCmp10 + -1.36005205352388 
* AcceptedCmp20 + -0.77268925112364 * AcceptedCmp30 + -1.48651970256564 * AcceptedCmp40 + 
-1.49771960438108 * AcceptedCmp50 + 0.05855673938529 * Complain0 + 0.5650947463497 * 
HigherEducationBinary0 ;
2399411   +   H1x1_4  = H1x1_4  +    -0.67577364181798 * AcceptedCmp10
2399412   +          +    -0.90920539880387 * AcceptedCmp20  +    -0.10856872028934 *
2399413   +        AcceptedCmp30  +    -0.17408320421731 * AcceptedCmp40
2399414   +          +    -0.40718112138881 * AcceptedCmp50  +    -1.15772819875829 *
2399415   +        Complain0  +    -0.63688652305256 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.67577364181798 * AcceptedCmp10 + -0.90920539880387 
* AcceptedCmp20 + -0.10856872028934 * AcceptedCmp30 + -0.17408320421731 * AcceptedCmp40 + 
-0.40718112138881 * AcceptedCmp50 + -1.15772819875829 * Complain0 + -0.63688652305256 * 
HigherEducationBinary0 ;
2399416   +   H1x1_5  = H1x1_5  +      -0.257461635853 * AcceptedCmp10
2399417   +          +    -0.53931888306725 * AcceptedCmp20  +    -0.18314917937273 *
2399418   +        AcceptedCmp30  +    -0.63373606551928 * AcceptedCmp40
2399419   +          +    -0.22117496766649 * AcceptedCmp50  +    -0.96313784449205 *
2399420   +        Complain0  +    -0.42031825118642 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.257461635853 * AcceptedCmp10 + -0.53931888306725 * 
AcceptedCmp20 + -0.18314917937273 * AcceptedCmp30 + -0.63373606551928 * AcceptedCmp40 + 
-0.22117496766649 * AcceptedCmp50 + -0.96313784449205 * Complain0 + -0.42031825118642 * 
HigherEducationBinary0 ;
2399421   +   H1x1_1  = H1x1_1  +    -0.61947659516101 * Education2n_Cycle
2399422   +          +     0.35542867116569 * EducationBasic  +    -0.40115062807285 *
2399423   +        EducationGraduation  +     0.09596442360106 * EducationMaster
2399424   +          +     2.58907527032049 * Marital_StatusDivorced
2399425   +          +    -2.45549008158921 * Marital_StatusMarried
2399426   +          +     2.56223650840768 * Marital_StatusSingle
2399427   +          +    -2.57680442835747 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.61947659516101 * Education2n_Cycle + 
0.35542867116569 * EducationBasic + -0.40115062807285 * EducationGraduation + 0.09596442360106 
* EducationMaster + 2.58907527032049 * Marital_StatusDivorced + -2.45549008158921 * 
Marital_StatusMarried + 2.56223650840768 * Marital_StatusSingle + -2.57680442835747 * 
Marital_StatusTogether ;
2399428   +   H1x1_2  = H1x1_2  +    -0.89996232033524 * Education2n_Cycle
2399429   +          +     0.51901949778729 * EducationBasic  +     0.48428543845596 *
2399430   +        EducationGraduation  +     0.29249899969052 * EducationMaster
2399431   +          +     0.83917299191368 * Marital_StatusDivorced
2399432   +          +    -0.62624692699191 * Marital_StatusMarried
2399433   +          +    -0.22585060624911 * Marital_StatusSingle
2399434   +          +    -1.13600554287291 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.89996232033524 * Education2n_Cycle + 
0.51901949778729 * EducationBasic + 0.48428543845596 * EducationGraduation + 0.29249899969052 
* EducationMaster + 0.83917299191368 * Marital_StatusDivorced + -0.62624692699191 * 
Marital_StatusMarried + -0.22585060624911 * Marital_StatusSingle + -1.13600554287291 * 
Marital_StatusTogether ;
2399435   +   H1x1_3  = H1x1_3  +    -0.14267095105584 * Education2n_Cycle
2399436   +          +    -0.02301358792856 * EducationBasic  +     0.52040244367562 *
2399437   +        EducationGraduation  +     -1.3163356801876 * EducationMaster
2399438   +          +    -0.65063506696715 * Marital_StatusDivorced
2399439   +          +    -2.37495865381256 * Marital_StatusMarried
2399440   +          +    -0.54954654146904 * Marital_StatusSingle
2399441   +          +    -2.20184943463859 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.14267095105584 * Education2n_Cycle + 
-0.02301358792856 * EducationBasic + 0.52040244367562 * EducationGraduation + -1.3163356801876 
* EducationMaster + -0.65063506696715 * Marital_StatusDivorced + -2.37495865381256 * 
Marital_StatusMarried + -0.54954654146904 * Marital_StatusSingle + -2.20184943463859 * 
Marital_StatusTogether ;
2399442   +   H1x1_4  = H1x1_4  +     0.07824072331908 * Education2n_Cycle
2399443   +          +    -0.70728597193571 * EducationBasic  +    -0.08522817414387 *
2399444   +        EducationGraduation  +     0.07916018399549 * EducationMaster
2399445   +          +     0.16185824798364 * Marital_StatusDivorced
2399446   +          +    -0.08142416735136 * Marital_StatusMarried
2399447   +          +    -0.20392270385969 * Marital_StatusSingle
2399448   +          +    -0.16702436233017 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.07824072331908 * Education2n_Cycle + 
-0.70728597193571 * EducationBasic + -0.08522817414387 * EducationGraduation + 
0.07916018399549 * EducationMaster + 0.16185824798364 * Marital_StatusDivorced + 
-0.08142416735136 * Marital_StatusMarried + -0.20392270385969 * Marital_StatusSingle + 
-0.16702436233017 * Marital_StatusTogether ;
2399449   +   H1x1_5  = H1x1_5  +    -0.24374540557838 * Education2n_Cycle
2399450   +          +    -0.69820143786999 * EducationBasic  +    -0.60198982003005 *
2399451   +        EducationGraduation  +     0.28107355175103 * EducationMaster
2399452   +          +      -0.516522631078 * Marital_StatusDivorced
2399453   +          +    -0.61661247789976 * Marital_StatusMarried
2399454   +          +    -0.99533130308294 * Marital_StatusSingle
2399455   +          +    -0.36897004084592 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.24374540557838 * Education2n_Cycle + 
-0.69820143786999 * EducationBasic + -0.60198982003005 * EducationGraduation + 
0.28107355175103 * EducationMaster + -0.516522631078 * Marital_StatusDivorced + 
-0.61661247789976 * Marital_StatusMarried + -0.99533130308294 * Marital_StatusSingle + 
-0.36897004084592 * Marital_StatusTogether ;
2399456   +   H1x1_1  =    -2.48464133714558 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -2.48464133714558 + H1x1_1 ;
2399457   +   H1x1_2  =    -1.27353840480002 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -1.27353840480002 + H1x1_2 ;
2399458   +   H1x1_3  =    -1.74000879961851 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.74000879961851 + H1x1_3 ;
2399459   +   H1x1_4  =    -0.38838285632991 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.38838285632991 + H1x1_4 ;
2399460   +   H1x1_5  =    -0.14124488553728 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.14124488553728 + H1x1_5 ;
2399461   +   H1x1_6  = 0;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0;
2399462   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
2399463   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2399464   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
2399465   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
2399466   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
2399467   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
2399468   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
2399469   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
2399470   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
2399471   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
2399472   +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
2399473   +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
2399474   +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
2399475   +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
2399476   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
2399477   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
2399478   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
2399479   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
2399480   +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
2399481   +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
2399482   +END;
MPRINT(EM_DIAGRAM):   END;
2399483   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2399484   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2399485   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2399486   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2399487   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2399488   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
2399489   +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
2399490   +END;
MPRINT(EM_DIAGRAM):   END;
2399491   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2399492   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
2399493   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2399494   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2399495   +   H1x2_1  =     0.48404108721156 * S_AcceptedCmpTotal
2399496   +          +    -0.27070568741648 * S_Age  +    -0.78729393257177 * S_Frq
2399497   +          +    -0.22841203379079 * S_Income  +      1.7948359601764 *
2399498   +        S_Kidhome  +     0.16415271082275 * S_Mnt  +     0.68709045116477 *
2399499   +        S_MntFishProducts  +     1.40499150479431 * S_MntFruits
2399500   +          +     1.76690927096327 * S_MntGoldProds  +    -0.47805967324795 *
2399501   +        S_MntMeatProducts  +    -1.98462171861386 * S_MntSweetProducts
2399502   +          +     0.17732042205332 * S_MntWines  +    -2.68647979937092 *
2399503   +        S_MonthsAsCustomer  +     0.66724634672152 * S_NumCatalogPurchases
2399504   +          +    -0.03801022287706 * S_NumDealsPurchases
2399505   +          +    -1.50723574966419 * S_NumDistPurchases
2399506   +          +    -0.21514545448485 * S_NumStorePurchases
2399507   +          +    -0.50179555233865 * S_NumWebPurchases
2399508   +          +    -0.68226572560161 * S_NumWebVisitsMonth
2399509   +          +    -1.16287961930374 * S_RFMstat  +    -0.10835316604382 *
2399510   +        S_RMntFrq  +     0.78178939203913 * S_Recency
2399511   +          +     0.99430928489958 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.48404108721156 * S_AcceptedCmpTotal + -0.27070568741648 * 
S_Age + -0.78729393257177 * S_Frq + -0.22841203379079 * S_Income + 1.7948359601764 * S_Kidhome 
+ 0.16415271082275 * S_Mnt + 0.68709045116477 * S_MntFishProducts + 1.40499150479431 * 
S_MntFruits + 1.76690927096327 * S_MntGoldProds + -0.47805967324795 * S_MntMeatProducts + 
-1.98462171861386 * S_MntSweetProducts + 0.17732042205332 * S_MntWines + -2.68647979937092 * 
S_MonthsAsCustomer + 0.66724634672152 * S_NumCatalogPurchases + -0.03801022287706 * 
S_NumDealsPurchases + -1.50723574966419 * S_NumDistPurchases + -0.21514545448485 * 
S_NumStorePurchases + -0.50179555233865 * S_NumWebPurchases + -0.68226572560161 * 
S_NumWebVisitsMonth + -1.16287961930374 * S_RFMstat + -0.10835316604382 * S_RMntFrq + 
0.78178939203913 * S_Recency + 0.99430928489958 * S_Teenhome ;
2399512   +   H1x2_2  =    -0.36352858735119 * S_AcceptedCmpTotal
2399513   +          +    -0.57224467079409 * S_Age  +    -1.50170848997829 * S_Frq
2399514   +          +    -0.38902839025885 * S_Income  +     -1.1798795668612 *
2399515   +        S_Kidhome  +     -0.1290183198617 * S_Mnt  +     0.76723261406072 *
2399516   +        S_MntFishProducts  +     -0.2940014517298 * S_MntFruits
2399517   +          +     1.10823983171432 * S_MntGoldProds  +    -0.31483479967732 *
2399518   +        S_MntMeatProducts  +     1.52044892546638 * S_MntSweetProducts
2399519   +          +     0.93667207634948 * S_MntWines  +     1.38654947651763 *
2399520   +        S_MonthsAsCustomer  +     0.60618457384701 * S_NumCatalogPurchases
2399521   +          +     0.70551335536975 * S_NumDealsPurchases
2399522   +          +     0.02824488988803 * S_NumDistPurchases
2399523   +          +    -0.47958123842808 * S_NumStorePurchases
2399524   +          +     1.04559003239583 * S_NumWebPurchases
2399525   +          +    -0.58386087813772 * S_NumWebVisitsMonth
2399526   +          +     0.30550498646512 * S_RFMstat  +     0.30157778523343 *
2399527   +        S_RMntFrq  +    -0.05848082255965 * S_Recency
2399528   +          +     1.93017367885145 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.36352858735119 * S_AcceptedCmpTotal + -0.57224467079409 * 
S_Age + -1.50170848997829 * S_Frq + -0.38902839025885 * S_Income + -1.1798795668612 * 
S_Kidhome + -0.1290183198617 * S_Mnt + 0.76723261406072 * S_MntFishProducts + -0.2940014517298 
* S_MntFruits + 1.10823983171432 * S_MntGoldProds + -0.31483479967732 * S_MntMeatProducts + 
1.52044892546638 * S_MntSweetProducts + 0.93667207634948 * S_MntWines + 1.38654947651763 * 
S_MonthsAsCustomer + 0.60618457384701 * S_NumCatalogPurchases + 0.70551335536975 * 
S_NumDealsPurchases + 0.02824488988803 * S_NumDistPurchases + -0.47958123842808 * 
S_NumStorePurchases + 1.04559003239583 * S_NumWebPurchases + -0.58386087813772 * 
S_NumWebVisitsMonth + 0.30550498646512 * S_RFMstat + 0.30157778523343 * S_RMntFrq + 
-0.05848082255965 * S_Recency + 1.93017367885145 * S_Teenhome ;
2399529   +   H1x2_3  =    -1.42573562358231 * S_AcceptedCmpTotal
2399530   +          +    -1.32139459670271 * S_Age  +    -0.65089374259133 * S_Frq
2399531   +          +     0.40762251828155 * S_Income  +     0.07844400105703 *
2399532   +        S_Kidhome  +     0.50965373569965 * S_Mnt  +     0.16029734923155 *
2399533   +        S_MntFishProducts  +     0.09920766855666 * S_MntFruits
2399534   +          +     1.72613699296152 * S_MntGoldProds  +    -0.05634715837952 *
2399535   +        S_MntMeatProducts  +    -0.46288044931269 * S_MntSweetProducts
2399536   +          +    -1.56275217321856 * S_MntWines  +     0.47573724745363 *
2399537   +        S_MonthsAsCustomer  +     0.24362096681468 * S_NumCatalogPurchases
2399538   +          +    -0.28907339261907 * S_NumDealsPurchases
2399539   +          +     0.04310505858352 * S_NumDistPurchases
2399540   +          +    -0.99594604666889 * S_NumStorePurchases
2399541   +          +    -0.58870940220114 * S_NumWebPurchases
2399542   +          +     0.84018399925148 * S_NumWebVisitsMonth
2399543   +          +    -0.19517311010454 * S_RFMstat  +     -0.3463233802461 *
2399544   +        S_RMntFrq  +    -1.47730936960999 * S_Recency
2399545   +          +    -0.88597688046705 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -1.42573562358231 * S_AcceptedCmpTotal + -1.32139459670271 * 
S_Age + -0.65089374259133 * S_Frq + 0.40762251828155 * S_Income + 0.07844400105703 * S_Kidhome 
+ 0.50965373569965 * S_Mnt + 0.16029734923155 * S_MntFishProducts + 0.09920766855666 * 
S_MntFruits + 1.72613699296152 * S_MntGoldProds + -0.05634715837952 * S_MntMeatProducts + 
-0.46288044931269 * S_MntSweetProducts + -1.56275217321856 * S_MntWines + 0.47573724745363 * 
S_MonthsAsCustomer + 0.24362096681468 * S_NumCatalogPurchases + -0.28907339261907 * 
S_NumDealsPurchases + 0.04310505858352 * S_NumDistPurchases + -0.99594604666889 * 
S_NumStorePurchases + -0.58870940220114 * S_NumWebPurchases + 0.84018399925148 * 
S_NumWebVisitsMonth + -0.19517311010454 * S_RFMstat + -0.3463233802461 * S_RMntFrq + 
-1.47730936960999 * S_Recency + -0.88597688046705 * S_Teenhome ;
2399546   +   H1x2_4  =     0.11016580381662 * S_AcceptedCmpTotal
2399547   +          +     0.30908576425954 * S_Age  +     0.34179480828109 * S_Frq
2399548   +          +     0.40584056795753 * S_Income  +    -0.45712899846476 *
2399549   +        S_Kidhome  +     1.12080510316382 * S_Mnt  +     0.48988466623601 *
2399550   +        S_MntFishProducts  +    -0.33589219598754 * S_MntFruits
2399551   +          +     0.89305356089927 * S_MntGoldProds  +    -2.00512215642683 *
2399552   +        S_MntMeatProducts  +     1.10859074670332 * S_MntSweetProducts
2399553   +          +     -1.0064133988839 * S_MntWines  +      0.7768603559605 *
2399554   +        S_MonthsAsCustomer  +     0.97922554259242 * S_NumCatalogPurchases
2399555   +          +     0.52917289878604 * S_NumDealsPurchases
2399556   +          +     0.30974142545809 * S_NumDistPurchases
2399557   +          +    -0.36081450643799 * S_NumStorePurchases
2399558   +          +    -0.28418053386759 * S_NumWebPurchases
2399559   +          +    -0.80759462497096 * S_NumWebVisitsMonth
2399560   +          +    -1.12633439579018 * S_RFMstat  +    -0.14662678398603 *
2399561   +        S_RMntFrq  +    -0.02418118976368 * S_Recency
2399562   +          +    -0.46548253671298 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.11016580381662 * S_AcceptedCmpTotal + 0.30908576425954 * 
S_Age + 0.34179480828109 * S_Frq + 0.40584056795753 * S_Income + -0.45712899846476 * S_Kidhome 
+ 1.12080510316382 * S_Mnt + 0.48988466623601 * S_MntFishProducts + -0.33589219598754 * 
S_MntFruits + 0.89305356089927 * S_MntGoldProds + -2.00512215642683 * S_MntMeatProducts + 
1.10859074670332 * S_MntSweetProducts + -1.0064133988839 * S_MntWines + 0.7768603559605 * 
S_MonthsAsCustomer + 0.97922554259242 * S_NumCatalogPurchases + 0.52917289878604 * 
S_NumDealsPurchases + 0.30974142545809 * S_NumDistPurchases + -0.36081450643799 * 
S_NumStorePurchases + -0.28418053386759 * S_NumWebPurchases + -0.80759462497096 * 
S_NumWebVisitsMonth + -1.12633439579018 * S_RFMstat + -0.14662678398603 * S_RMntFrq + 
-0.02418118976368 * S_Recency + -0.46548253671298 * S_Teenhome ;
2399563   +   H1x2_5  =    -0.55551536908819 * S_AcceptedCmpTotal
2399564   +          +    -0.09163465220674 * S_Age  +    -0.35937602626275 * S_Frq
2399565   +          +     0.61145646041534 * S_Income  +     0.28920493959955 *
2399566   +        S_Kidhome  +     0.71661843805688 * S_Mnt  +     0.25254041554237 *
2399567   +        S_MntFishProducts  +    -0.38704785732563 * S_MntFruits
2399568   +          +    -0.16912995068939 * S_MntGoldProds  +     0.21440191729631 *
2399569   +        S_MntMeatProducts  +    -0.49507693220329 * S_MntSweetProducts
2399570   +          +      0.3153765288287 * S_MntWines  +    -0.15329574285112 *
2399571   +        S_MonthsAsCustomer  +     1.28722879296429 * S_NumCatalogPurchases
2399572   +          +    -0.47500053723253 * S_NumDealsPurchases
2399573   +          +     0.41421086319635 * S_NumDistPurchases
2399574   +          +     0.69664835428137 * S_NumStorePurchases
2399575   +          +     0.66359306812968 * S_NumWebPurchases
2399576   +          +     0.77931462528741 * S_NumWebVisitsMonth
2399577   +          +     0.05868786291548 * S_RFMstat  +     0.77672802649379 *
2399578   +        S_RMntFrq  +    -1.91226042675868 * S_Recency
2399579   +          +     1.79227856637688 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.55551536908819 * S_AcceptedCmpTotal + -0.09163465220674 * 
S_Age + -0.35937602626275 * S_Frq + 0.61145646041534 * S_Income + 0.28920493959955 * S_Kidhome 
+ 0.71661843805688 * S_Mnt + 0.25254041554237 * S_MntFishProducts + -0.38704785732563 * 
S_MntFruits + -0.16912995068939 * S_MntGoldProds + 0.21440191729631 * S_MntMeatProducts + 
-0.49507693220329 * S_MntSweetProducts + 0.3153765288287 * S_MntWines + -0.15329574285112 * 
S_MonthsAsCustomer + 1.28722879296429 * S_NumCatalogPurchases + -0.47500053723253 * 
S_NumDealsPurchases + 0.41421086319635 * S_NumDistPurchases + 0.69664835428137 * 
S_NumStorePurchases + 0.66359306812968 * S_NumWebPurchases + 0.77931462528741 * 
S_NumWebVisitsMonth + 0.05868786291548 * S_RFMstat + 0.77672802649379 * S_RMntFrq + 
-1.91226042675868 * S_Recency + 1.79227856637688 * S_Teenhome ;
2399580   +   H1x2_1  = H1x2_1  +     1.13471289065691 * AcceptedCmp10
2399581   +          +     0.65974383309652 * AcceptedCmp20  +    -1.87292531678796 *
2399582   +        AcceptedCmp30  +      -1.353797047409 * AcceptedCmp40
2399583   +          +     0.20616786486771 * AcceptedCmp50  +    -0.38264326101775 *
2399584   +        Complain0  +    -0.17807638061615 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 1.13471289065691 * AcceptedCmp10 + 0.65974383309652 * 
AcceptedCmp20 + -1.87292531678796 * AcceptedCmp30 + -1.353797047409 * AcceptedCmp40 + 
0.20616786486771 * AcceptedCmp50 + -0.38264326101775 * Complain0 + -0.17807638061615 * 
HigherEducationBinary0 ;
2399585   +   H1x2_2  = H1x2_2  +     1.21347348622419 * AcceptedCmp10
2399586   +          +    -0.25372740217388 * AcceptedCmp20  +     1.86937589112006 *
2399587   +        AcceptedCmp30  +    -0.04754722838516 * AcceptedCmp40
2399588   +          +    -0.08078800460742 * AcceptedCmp50  +     1.62387969342769 *
2399589   +        Complain0  +    -0.78004732229344 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 1.21347348622419 * AcceptedCmp10 + -0.25372740217388 * 
AcceptedCmp20 + 1.86937589112006 * AcceptedCmp30 + -0.04754722838516 * AcceptedCmp40 + 
-0.08078800460742 * AcceptedCmp50 + 1.62387969342769 * Complain0 + -0.78004732229344 * 
HigherEducationBinary0 ;
2399590   +   H1x2_3  = H1x2_3  +    -0.02152665189186 * AcceptedCmp10
2399591   +          +     0.57207081192818 * AcceptedCmp20  +      0.6212177562119 *
2399592   +        AcceptedCmp30  +    -0.73691462528053 * AcceptedCmp40
2399593   +          +    -0.35326427815838 * AcceptedCmp50  +     0.14875513793176 *
2399594   +        Complain0  +    -0.13978395235915 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -0.02152665189186 * AcceptedCmp10 + 0.57207081192818 * 
AcceptedCmp20 + 0.6212177562119 * AcceptedCmp30 + -0.73691462528053 * AcceptedCmp40 + 
-0.35326427815838 * AcceptedCmp50 + 0.14875513793176 * Complain0 + -0.13978395235915 * 
HigherEducationBinary0 ;
2399595   +   H1x2_4  = H1x2_4  +     0.87315450122595 * AcceptedCmp10
2399596   +          +      0.7868322457627 * AcceptedCmp20  +    -0.23332719513906 *
2399597   +        AcceptedCmp30  +    -0.68817918979928 * AcceptedCmp40
2399598   +          +    -0.57204462412445 * AcceptedCmp50  +    -0.86223238269616 *
2399599   +        Complain0  +     -0.3126348645458 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.87315450122595 * AcceptedCmp10 + 0.7868322457627 * 
AcceptedCmp20 + -0.23332719513906 * AcceptedCmp30 + -0.68817918979928 * AcceptedCmp40 + 
-0.57204462412445 * AcceptedCmp50 + -0.86223238269616 * Complain0 + -0.3126348645458 * 
HigherEducationBinary0 ;
2399600   +   H1x2_5  = H1x2_5  +     0.29282165496733 * AcceptedCmp10
2399601   +          +     1.51708756092369 * AcceptedCmp20  +     1.20268215158483 *
2399602   +        AcceptedCmp30  +     0.30521477351547 * AcceptedCmp40
2399603   +          +    -0.58691162701837 * AcceptedCmp50  +     0.75641665624817 *
2399604   +        Complain0  +      0.7018761099345 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.29282165496733 * AcceptedCmp10 + 1.51708756092369 * 
AcceptedCmp20 + 1.20268215158483 * AcceptedCmp30 + 0.30521477351547 * AcceptedCmp40 + 
-0.58691162701837 * AcceptedCmp50 + 0.75641665624817 * Complain0 + 0.7018761099345 * 
HigherEducationBinary0 ;
2399605   +   H1x2_1  = H1x2_1  +    -0.68955031483686 * Education2n_Cycle
2399606   +          +    -1.63162976419312 * EducationBasic  +     1.58569020932253 *
2399607   +        EducationGraduation  +     0.89392741557091 * EducationMaster
2399608   +          +    -1.34742914042312 * Marital_StatusDivorced
2399609   +          +    -0.75378934918763 * Marital_StatusMarried
2399610   +          +    -1.85411678929217 * Marital_StatusSingle
2399611   +          +     0.34579160965376 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.68955031483686 * Education2n_Cycle + 
-1.63162976419312 * EducationBasic + 1.58569020932253 * EducationGraduation + 0.89392741557091 
* EducationMaster + -1.34742914042312 * Marital_StatusDivorced + -0.75378934918763 * 
Marital_StatusMarried + -1.85411678929217 * Marital_StatusSingle + 0.34579160965376 * 
Marital_StatusTogether ;
2399612   +   H1x2_2  = H1x2_2  +     0.91842441316819 * Education2n_Cycle
2399613   +          +    -0.10372785737624 * EducationBasic  +     1.79022097342125 *
2399614   +        EducationGraduation  +      1.4602485898642 * EducationMaster
2399615   +          +     0.47958659206261 * Marital_StatusDivorced
2399616   +          +     -0.9665584294045 * Marital_StatusMarried
2399617   +          +      0.9733784530538 * Marital_StatusSingle
2399618   +          +     0.19258101270915 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.91842441316819 * Education2n_Cycle + 
-0.10372785737624 * EducationBasic + 1.79022097342125 * EducationGraduation + 1.4602485898642 
* EducationMaster + 0.47958659206261 * Marital_StatusDivorced + -0.9665584294045 * 
Marital_StatusMarried + 0.9733784530538 * Marital_StatusSingle + 0.19258101270915 * 
Marital_StatusTogether ;
2399619   +   H1x2_3  = H1x2_3  +     1.26817216331303 * Education2n_Cycle
2399620   +          +    -1.60153781162075 * EducationBasic  +    -0.32068567398782 *
2399621   +        EducationGraduation  +     1.49772418974753 * EducationMaster
2399622   +          +    -0.56894207908284 * Marital_StatusDivorced
2399623   +          +    -0.96715106987195 * Marital_StatusMarried
2399624   +          +     1.18678144721443 * Marital_StatusSingle
2399625   +          +     1.05940264255347 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 1.26817216331303 * Education2n_Cycle + 
-1.60153781162075 * EducationBasic + -0.32068567398782 * EducationGraduation + 
1.49772418974753 * EducationMaster + -0.56894207908284 * Marital_StatusDivorced + 
-0.96715106987195 * Marital_StatusMarried + 1.18678144721443 * Marital_StatusSingle + 
1.05940264255347 * Marital_StatusTogether ;
2399626   +   H1x2_4  = H1x2_4  +    -1.19824707240276 * Education2n_Cycle
2399627   +          +     0.43905907692169 * EducationBasic  +    -1.18279972023424 *
2399628   +        EducationGraduation  +    -2.01250798855133 * EducationMaster
2399629   +          +     -0.6061959224661 * Marital_StatusDivorced
2399630   +          +     0.03495844244684 * Marital_StatusMarried
2399631   +          +    -0.63896361063244 * Marital_StatusSingle
2399632   +          +     0.74357887057422 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -1.19824707240276 * Education2n_Cycle + 
0.43905907692169 * EducationBasic + -1.18279972023424 * EducationGraduation + 
-2.01250798855133 * EducationMaster + -0.6061959224661 * Marital_StatusDivorced + 
0.03495844244684 * Marital_StatusMarried + -0.63896361063244 * Marital_StatusSingle + 
0.74357887057422 * Marital_StatusTogether ;
2399633   +   H1x2_5  = H1x2_5  +     -0.6530237200396 * Education2n_Cycle
2399634   +          +     0.90062473169279 * EducationBasic  +    -3.01933913602199 *
2399635   +        EducationGraduation  +     -0.1598988619204 * EducationMaster
2399636   +          +     0.82178907301319 * Marital_StatusDivorced
2399637   +          +     1.69543553114589 * Marital_StatusMarried
2399638   +          +     -2.1272067363559 * Marital_StatusSingle
2399639   +          +     0.24274508474634 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + -0.6530237200396 * Education2n_Cycle + 
0.90062473169279 * EducationBasic + -3.01933913602199 * EducationGraduation + -0.1598988619204 
* EducationMaster + 0.82178907301319 * Marital_StatusDivorced + 1.69543553114589 * 
Marital_StatusMarried + -2.1272067363559 * Marital_StatusSingle + 0.24274508474634 * 
Marital_StatusTogether ;
2399640   +   H1x2_1  =     0.30842509451224 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.30842509451224 + H1x2_1 ;
2399641   +   H1x2_2  =     1.79200699407075 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 1.79200699407075 + H1x2_2 ;
2399642   +   H1x2_3  =     0.66706944906809 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = 0.66706944906809 + H1x2_3 ;
2399643   +   H1x2_4  =     -0.7356254138015 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.7356254138015 + H1x2_4 ;
2399644   +   H1x2_5  =    -0.68066575174095 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.68066575174095 + H1x2_5 ;
2399645   +   H1x2_6  = 0;
MPRINT(EM_DIAGRAM):   H1x2_6 = 0;
2399646   +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
2399647   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2399648   +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
2399649   +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
2399650   +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
2399651   +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
2399652   +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
2399653   +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
2399654   +   H1x2_4  = EXP(H1x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(H1x2_4 - _MAX_);
2399655   +   _SUM_ = _SUM_ + H1x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_4 ;
2399656   +   H1x2_5  = EXP(H1x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(H1x2_5 - _MAX_);
2399657   +   _SUM_ = _SUM_ + H1x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_5 ;
2399658   +   H1x2_6  = EXP(H1x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(H1x2_6 - _MAX_);
2399659   +   _SUM_ = _SUM_ + H1x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_6 ;
2399660   +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
2399661   +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
2399662   +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
2399663   +   H1x2_4  = H1x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 / _SUM_;
2399664   +   H1x2_5  = H1x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 / _SUM_;
2399665   +   H1x2_6  = H1x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 / _SUM_;
2399666   +END;
MPRINT(EM_DIAGRAM):   END;
2399667   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2399668   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
2399669   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
2399670   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
2399671   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
2399672   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
2399673   +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
2399674   +END;
MPRINT(EM_DIAGRAM):   END;
2399675   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2399676   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
2399677   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2399678   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2399679   +   H2x1_1  =      0.7656278374321 * H1x1_1  +     1.18988619460831 * H1x1_2
2399680   +          +    -0.68458045558713 * H1x1_3  +     0.49093980591245 * H1x1_4
2399681   +          +    -1.27959429919804 * H1x1_5  +    -1.38760297105319 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 0.7656278374321 * H1x1_1 + 1.18988619460831 * H1x1_2 + 
-0.68458045558713 * H1x1_3 + 0.49093980591245 * H1x1_4 + -1.27959429919804 * H1x1_5 + 
-1.38760297105319 * H1x1_6 ;
2399682   +   H2x1_2  =    -1.48941810274544 * H1x1_1  +     1.75443095464294 * H1x1_2
2399683   +          +    -1.63478694878031 * H1x1_3  +    -0.69296364459258 * H1x1_4
2399684   +          +     3.14007823471691 * H1x1_5  +     2.71965753640902 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -1.48941810274544 * H1x1_1 + 1.75443095464294 * H1x1_2 + 
-1.63478694878031 * H1x1_3 + -0.69296364459258 * H1x1_4 + 3.14007823471691 * H1x1_5 + 
2.71965753640902 * H1x1_6 ;
2399685   +   H2x1_3  =     1.07426996100463 * H1x1_1  +    -1.76796943416489 * H1x1_2
2399686   +          +    -0.11946940948224 * H1x1_3  +     1.25457449221991 * H1x1_4
2399687   +          +     -1.4079980040852 * H1x1_5  +    -0.94725163293394 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.07426996100463 * H1x1_1 + -1.76796943416489 * H1x1_2 + 
-0.11946940948224 * H1x1_3 + 1.25457449221991 * H1x1_4 + -1.4079980040852 * H1x1_5 + 
-0.94725163293394 * H1x1_6 ;
2399688   +   H2x1_4  =    -0.00078893231548 * H1x1_1  +     0.06396324179717 * H1x1_2
2399689   +          +    -0.13674165204668 * H1x1_3  +    -0.26576379023249 * H1x1_4
2399690   +          +     0.44513643867194 * H1x1_5  +     0.66585878141635 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -0.00078893231548 * H1x1_1 + 0.06396324179717 * H1x1_2 + 
-0.13674165204668 * H1x1_3 + -0.26576379023249 * H1x1_4 + 0.44513643867194 * H1x1_5 + 
0.66585878141635 * H1x1_6 ;
2399691   +   H2x1_5  =     -2.8467581879118 * H1x1_1  +     2.94182061339515 * H1x1_2
2399692   +          +    -3.43021438685063 * H1x1_3  +    -4.00045607730935 * H1x1_4
2399693   +          +     3.09230566797337 * H1x1_5  +     3.57592566919388 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -2.8467581879118 * H1x1_1 + 2.94182061339515 * H1x1_2 + 
-3.43021438685063 * H1x1_3 + -4.00045607730935 * H1x1_4 + 3.09230566797337 * H1x1_5 + 
3.57592566919388 * H1x1_6 ;
2399694   +   H2x1_6  =    -0.29912975132561 * H1x1_1  +     0.25554634262501 * H1x1_2
2399695   +          +    -0.62666868576544 * H1x1_3  +     1.54567563696489 * H1x1_4
2399696   +          +     1.87530466579189 * H1x1_5  +    -0.32006241006585 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = -0.29912975132561 * H1x1_1 + 0.25554634262501 * H1x1_2 + 
-0.62666868576544 * H1x1_3 + 1.54567563696489 * H1x1_4 + 1.87530466579189 * H1x1_5 + 
-0.32006241006585 * H1x1_6 ;
2399697   +   H2x1_1  = H2x1_1  +    -0.53923803948063 * H1x2_1
2399698   +          +    -0.14551996067575 * H1x2_2  +     1.15730137448351 * H1x2_3
2399699   +          +     0.02585401686791 * H1x2_4  +     -0.9274056409194 * H1x2_5
2399700   +          +    -0.07237646966438 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -0.53923803948063 * H1x2_1 + -0.14551996067575 * 
H1x2_2 + 1.15730137448351 * H1x2_3 + 0.02585401686791 * H1x2_4 + -0.9274056409194 * H1x2_5 + 
-0.07237646966438 * H1x2_6 ;
2399701   +   H2x1_2  = H2x1_2  +     -0.1441321293455 * H1x2_1
2399702   +          +    -0.53271770203833 * H1x2_2  +    -2.80064282115477 * H1x2_3
2399703   +          +    -1.05759395901612 * H1x2_4  +    -0.55127059339304 * H1x2_5
2399704   +          +     0.35471332651631 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -0.1441321293455 * H1x2_1 + -0.53271770203833 * H1x2_2 
+ -2.80064282115477 * H1x2_3 + -1.05759395901612 * H1x2_4 + -0.55127059339304 * H1x2_5 + 
0.35471332651631 * H1x2_6 ;
2399705   +   H2x1_3  = H2x1_3  +     -0.5351190580444 * H1x2_1
2399706   +          +    -0.02107048725988 * H1x2_2  +    -0.83389437376968 * H1x2_3
2399707   +          +    -0.80183937400902 * H1x2_4  +    -0.66588385104453 * H1x2_5
2399708   +          +      0.5218140468737 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -0.5351190580444 * H1x2_1 + -0.02107048725988 * H1x2_2 
+ -0.83389437376968 * H1x2_3 + -0.80183937400902 * H1x2_4 + -0.66588385104453 * H1x2_5 + 
0.5218140468737 * H1x2_6 ;
2399709   +   H2x1_4  = H2x1_4  +     1.89050022127485 * H1x2_1
2399710   +          +     -2.6557601537516 * H1x2_2  +     0.99126360053411 * H1x2_3
2399711   +          +    -0.44091776054792 * H1x2_4  +    -1.48547403065153 * H1x2_5
2399712   +          +    -0.67920869444907 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 1.89050022127485 * H1x2_1 + -2.6557601537516 * H1x2_2 
+ 0.99126360053411 * H1x2_3 + -0.44091776054792 * H1x2_4 + -1.48547403065153 * H1x2_5 + 
-0.67920869444907 * H1x2_6 ;
2399713   +   H2x1_5  = H2x1_5  +      0.2827883572995 * H1x2_1
2399714   +          +    -0.68177519072226 * H1x2_2  +    -1.62062483607713 * H1x2_3
2399715   +          +     0.24454579481466 * H1x2_4  +    -0.07591553404219 * H1x2_5
2399716   +          +      1.1175989027563 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 0.2827883572995 * H1x2_1 + -0.68177519072226 * H1x2_2 
+ -1.62062483607713 * H1x2_3 + 0.24454579481466 * H1x2_4 + -0.07591553404219 * H1x2_5 + 
1.1175989027563 * H1x2_6 ;
2399717   +   H2x1_6  = H2x1_6  +    -0.00603649892235 * H1x2_1
2399718   +          +    -1.39053357060307 * H1x2_2  +    -1.34023350990878 * H1x2_3
2399719   +          +    -0.76811804565852 * H1x2_4  +    -1.40869786147662 * H1x2_5
2399720   +          +     1.54589390085972 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + -0.00603649892235 * H1x2_1 + -1.39053357060307 * 
H1x2_2 + -1.34023350990878 * H1x2_3 + -0.76811804565852 * H1x2_4 + -1.40869786147662 * H1x2_5 
+ 1.54589390085972 * H1x2_6 ;
2399721   +   H2x1_1  =     0.47873396703524 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 0.47873396703524 + H2x1_1 ;
2399722   +   H2x1_2  =     -0.0000340630035 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -0.0000340630035 + H2x1_2 ;
2399723   +   H2x1_3  =     0.35556259592214 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 0.35556259592214 + H2x1_3 ;
2399724   +   H2x1_4  =     1.01896219314016 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.01896219314016 + H2x1_4 ;
2399725   +   H2x1_5  =     0.72195082860145 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = 0.72195082860145 + H2x1_5 ;
2399726   +   H2x1_6  =     0.24171639764515 + H2x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 0.24171639764515 + H2x1_6 ;
2399727   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2399728   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2399729   +   H2x1_1  = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
2399730   +   H2x1_2  = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
2399731   +   H2x1_3  = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
2399732   +   H2x1_4  = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
2399733   +   H2x1_5  = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_5 = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
2399734   +   H2x1_6  = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
2399735   +END;
MPRINT(EM_DIAGRAM):   END;
2399736   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2399737   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
2399738   +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
2399739   +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
2399740   +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
2399741   +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
2399742   +   H2x1_6  = .;
MPRINT(EM_DIAGRAM):   H2x1_6 = .;
2399743   +END;
MPRINT(EM_DIAGRAM):   END;
2399744   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2399745   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2399746   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2399747   +
2399748   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2399749   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2399750   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2399751   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2399752   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2399753   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2399754   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2399755   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2399756   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2399757   +end;
MPRINT(EM_DIAGRAM):   end;
2399758   +else do;
MPRINT(EM_DIAGRAM):   else do;
2399759   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2399760   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2399761   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2399762   +   end;
MPRINT(EM_DIAGRAM):   end;
2399763   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2399764   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2399765   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2399766   +   end;
MPRINT(EM_DIAGRAM):   end;
2399767   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2399768   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2399769   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2399770   +   end;
MPRINT(EM_DIAGRAM):   end;
2399771   +end;
MPRINT(EM_DIAGRAM):   end;
2399772   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2399773   +   P_DepVar1  =     7.13056975005701 * H2x1_1  +    -9.26714696465882 * H2x1_2
2399774   +          +     9.36351037194964 * H2x1_3  +     2.76582940055979 * H2x1_4
2399775   +          +    -20.1354182036801 * H2x1_5  +     1.54726164498938 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 7.13056975005701 * H2x1_1 + -9.26714696465882 * H2x1_2 + 
9.36351037194964 * H2x1_3 + 2.76582940055979 * H2x1_4 + -20.1354182036801 * H2x1_5 + 
1.54726164498938 * H2x1_6 ;
2399776   +   P_DepVar1  =     5.03726079820845 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 5.03726079820845 + P_DepVar1 ;
2399777   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2399778   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2399779   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2399780   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2399781   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2399782   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2399783   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2399784   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2399785   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2399786   +END;
MPRINT(EM_DIAGRAM):   END;
2399787   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2399788   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2399789   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2399790   +END;
MPRINT(EM_DIAGRAM):   END;
2399791   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2399792   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2399793   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2399794   +END;
MPRINT(EM_DIAGRAM):   END;
2399795   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2399796   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2399797   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2399798   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2399799   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2399800   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2399801   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2399802   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2399803   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2399804   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2399805   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2399806   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2399807   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2399808   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2399809   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2399810   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2399811   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2399812   +END;
MPRINT(EM_DIAGRAM):   END;
2399813   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2399814   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2399815   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2399816   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2399817   +* Renaming variables for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural11;
2399818   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2399819   +* Renaming Posterior variables for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural11;
2399820   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2399821   +drop AutoNeural11_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_P_DepVar1;
2399822   +AutoNeural11_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural11_P_DepVar1 = P_DepVar1;
2399823   +drop AutoNeural11_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_P_DepVar0;
2399824   +AutoNeural11_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural11_P_DepVar0 = P_DepVar0;
2399825   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2399826   +* Renaming Into variables for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for AutoNeural11;
2399827   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2399828   +length AutoNeural11_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length AutoNeural11_I_DepVar $32;
2399829   +drop AutoNeural11_I_DepVar;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_I_DepVar;
2399830   +AutoNeural11_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   AutoNeural11_I_DepVar = I_DepVar;
2399831   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2399832   +* Renaming _WARN_ variable for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural11;
2399833   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2399834   +length AutoNeural11_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural11_WARN_ $4;
2399835   +drop AutoNeural11_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_WARN_;
2399836   +AutoNeural11_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural11_WARN_ = _WARN_;
2399837   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2399838   +* Ensmbl44: Scoring Code of model 3 of 3;
MPRINT(EM_DIAGRAM):   * Ensmbl44: Scoring Code of model 3 of 3;
2399839   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2399840   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2399841   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
2399842   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2399843   +* NODE: AutoNeural12;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural12;
2399844   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2399845   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2399846   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2399847   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2399848   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2399849   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2399850   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2399851   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2399852   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2399853   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2399854   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2399855   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2399856   +LENGTH _WARN_ $4
2399857   +      F_DepVar  $ 12
2399858   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2399859   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2399860   +
2399861   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2399862   +
2399863   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2399864   +
2399865   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2399866   +
2399867   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2399868   +
2399869   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2399870   +
2399871   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2399872   +
2399873   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2399874   +
2399875   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2399876   +
2399877   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2399878   +
2399879   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2399880   +
2399881   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2399882   +
2399883   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2399884   +
2399885   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2399886   +
2399887   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2399888   +
2399889   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2399890   +
2399891   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2399892   +
2399893   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2399894   +
2399895   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2399896   +
2399897   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2399898   +
2399899   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2399900   +
2399901   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2399902   +
2399903   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2399904   +
2399905   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2399906   +
2399907   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2399908   +
2399909   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2399910   +
2399911   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2399912   +
2399913   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2399914   +
2399915   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2399916   +
2399917   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2399918   +
2399919   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2399920   +
2399921   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2399922   +
2399923   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2399924   +
2399925   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2399926   +
2399927   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2399928   +
2399929   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2399930   +
2399931   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2399932   +
2399933   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2399934   +
2399935   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2399936   +
2399937   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2399938   +
2399939   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2399940   +
2399941   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2399942   +
2399943   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
2399944   +
2399945   +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
2399946   +
2399947   +      label H1x1_7 = 'Hidden: H1x1_=7' ;
MPRINT(EM_DIAGRAM):   label H1x1_7 = 'Hidden: H1x1_=7' ;
2399948   +
2399949   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
2399950   +
2399951   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
2399952   +
2399953   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
2399954   +
2399955   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
2399956   +
2399957   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
2399958   +
2399959   +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
2399960   +
2399961   +      label H1x2_7 = 'Hidden: H1x2_=7' ;
MPRINT(EM_DIAGRAM):   label H1x2_7 = 'Hidden: H1x2_=7' ;
2399962   +
2399963   +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
2399964   +
2399965   +      label H1x3_2 = 'Hidden: H1x3_=2' ;
MPRINT(EM_DIAGRAM):   label H1x3_2 = 'Hidden: H1x3_=2' ;
2399966   +
2399967   +      label H1x3_3 = 'Hidden: H1x3_=3' ;
MPRINT(EM_DIAGRAM):   label H1x3_3 = 'Hidden: H1x3_=3' ;
2399968   +
2399969   +      label H1x3_4 = 'Hidden: H1x3_=4' ;
MPRINT(EM_DIAGRAM):   label H1x3_4 = 'Hidden: H1x3_=4' ;
2399970   +
2399971   +      label H1x3_5 = 'Hidden: H1x3_=5' ;
MPRINT(EM_DIAGRAM):   label H1x3_5 = 'Hidden: H1x3_=5' ;
2399972   +
2399973   +      label H1x3_6 = 'Hidden: H1x3_=6' ;
MPRINT(EM_DIAGRAM):   label H1x3_6 = 'Hidden: H1x3_=6' ;
2399974   +
2399975   +      label H1x3_7 = 'Hidden: H1x3_=7' ;
MPRINT(EM_DIAGRAM):   label H1x3_7 = 'Hidden: H1x3_=7' ;
2399976   +
2399977   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
2399978   +
2399979   +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
2399980   +
2399981   +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
2399982   +
2399983   +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
2399984   +
2399985   +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
2399986   +
2399987   +      label H2x1_6 = 'Hidden: H2x1_=6' ;
MPRINT(EM_DIAGRAM):   label H2x1_6 = 'Hidden: H2x1_=6' ;
2399988   +
2399989   +      label H2x1_7 = 'Hidden: H2x1_=7' ;
MPRINT(EM_DIAGRAM):   label H2x1_7 = 'Hidden: H2x1_=7' ;
2399990   +
2399991   +      label H2x2_1 = 'Hidden: H2x2_=1' ;
MPRINT(EM_DIAGRAM):   label H2x2_1 = 'Hidden: H2x2_=1' ;
2399992   +
2399993   +      label H2x2_2 = 'Hidden: H2x2_=2' ;
MPRINT(EM_DIAGRAM):   label H2x2_2 = 'Hidden: H2x2_=2' ;
2399994   +
2399995   +      label H2x2_3 = 'Hidden: H2x2_=3' ;
MPRINT(EM_DIAGRAM):   label H2x2_3 = 'Hidden: H2x2_=3' ;
2399996   +
2399997   +      label H2x2_4 = 'Hidden: H2x2_=4' ;
MPRINT(EM_DIAGRAM):   label H2x2_4 = 'Hidden: H2x2_=4' ;
2399998   +
2399999   +      label H2x2_5 = 'Hidden: H2x2_=5' ;
MPRINT(EM_DIAGRAM):   label H2x2_5 = 'Hidden: H2x2_=5' ;
2400000   +
2400001   +      label H2x2_6 = 'Hidden: H2x2_=6' ;
MPRINT(EM_DIAGRAM):   label H2x2_6 = 'Hidden: H2x2_=6' ;
2400002   +
2400003   +      label H2x2_7 = 'Hidden: H2x2_=7' ;
MPRINT(EM_DIAGRAM):   label H2x2_7 = 'Hidden: H2x2_=7' ;
2400004   +
2400005   +      label H3x1_1 = 'Hidden: H3x1_=1' ;
MPRINT(EM_DIAGRAM):   label H3x1_1 = 'Hidden: H3x1_=1' ;
2400006   +
2400007   +      label H3x1_2 = 'Hidden: H3x1_=2' ;
MPRINT(EM_DIAGRAM):   label H3x1_2 = 'Hidden: H3x1_=2' ;
2400008   +
2400009   +      label H3x1_3 = 'Hidden: H3x1_=3' ;
MPRINT(EM_DIAGRAM):   label H3x1_3 = 'Hidden: H3x1_=3' ;
2400010   +
2400011   +      label H3x1_4 = 'Hidden: H3x1_=4' ;
MPRINT(EM_DIAGRAM):   label H3x1_4 = 'Hidden: H3x1_=4' ;
2400012   +
2400013   +      label H3x1_5 = 'Hidden: H3x1_=5' ;
MPRINT(EM_DIAGRAM):   label H3x1_5 = 'Hidden: H3x1_=5' ;
2400014   +
2400015   +      label H3x1_6 = 'Hidden: H3x1_=6' ;
MPRINT(EM_DIAGRAM):   label H3x1_6 = 'Hidden: H3x1_=6' ;
2400016   +
2400017   +      label H3x1_7 = 'Hidden: H3x1_=7' ;
MPRINT(EM_DIAGRAM):   label H3x1_7 = 'Hidden: H3x1_=7' ;
2400018   +
2400019   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2400020   +
2400021   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2400022   +
2400023   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2400024   +
2400025   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2400026   +
2400027   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2400028   +
2400029   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2400030   +
2400031   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2400032   +
2400033   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2400034   +
2400035   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2400036   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2400037   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2400038   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2400039   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2400040   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2400041   +end;
MPRINT(EM_DIAGRAM):   end;
2400042   +else do;
MPRINT(EM_DIAGRAM):   else do;
2400043   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2400044   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2400045   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2400046   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2400047   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2400048   +   end;
MPRINT(EM_DIAGRAM):   end;
2400049   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2400050   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2400051   +   end;
MPRINT(EM_DIAGRAM):   end;
2400052   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2400053   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2400054   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2400055   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2400056   +   end;
MPRINT(EM_DIAGRAM):   end;
2400057   +end;
MPRINT(EM_DIAGRAM):   end;
2400058   +
2400059   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2400060   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2400061   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2400062   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2400063   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2400064   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2400065   +end;
MPRINT(EM_DIAGRAM):   end;
2400066   +else do;
MPRINT(EM_DIAGRAM):   else do;
2400067   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2400068   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2400069   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2400070   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2400071   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2400072   +   end;
MPRINT(EM_DIAGRAM):   end;
2400073   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2400074   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2400075   +   end;
MPRINT(EM_DIAGRAM):   end;
2400076   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2400077   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2400078   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2400079   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2400080   +   end;
MPRINT(EM_DIAGRAM):   end;
2400081   +end;
MPRINT(EM_DIAGRAM):   end;
2400082   +
2400083   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2400084   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2400085   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2400086   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2400087   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2400088   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2400089   +end;
MPRINT(EM_DIAGRAM):   end;
2400090   +else do;
MPRINT(EM_DIAGRAM):   else do;
2400091   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2400092   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2400093   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2400094   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2400095   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2400096   +   end;
MPRINT(EM_DIAGRAM):   end;
2400097   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2400098   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2400099   +   end;
MPRINT(EM_DIAGRAM):   end;
2400100   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2400101   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2400102   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2400103   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2400104   +   end;
MPRINT(EM_DIAGRAM):   end;
2400105   +end;
MPRINT(EM_DIAGRAM):   end;
2400106   +
2400107   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2400108   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2400109   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2400110   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2400111   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2400112   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2400113   +end;
MPRINT(EM_DIAGRAM):   end;
2400114   +else do;
MPRINT(EM_DIAGRAM):   else do;
2400115   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2400116   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2400117   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2400118   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2400119   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2400120   +   end;
MPRINT(EM_DIAGRAM):   end;
2400121   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2400122   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2400123   +   end;
MPRINT(EM_DIAGRAM):   end;
2400124   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2400125   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2400126   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2400127   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2400128   +   end;
MPRINT(EM_DIAGRAM):   end;
2400129   +end;
MPRINT(EM_DIAGRAM):   end;
2400130   +
2400131   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2400132   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2400133   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2400134   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2400135   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2400136   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2400137   +end;
MPRINT(EM_DIAGRAM):   end;
2400138   +else do;
MPRINT(EM_DIAGRAM):   else do;
2400139   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2400140   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2400141   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2400142   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2400143   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2400144   +   end;
MPRINT(EM_DIAGRAM):   end;
2400145   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2400146   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2400147   +   end;
MPRINT(EM_DIAGRAM):   end;
2400148   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2400149   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2400150   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2400151   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2400152   +   end;
MPRINT(EM_DIAGRAM):   end;
2400153   +end;
MPRINT(EM_DIAGRAM):   end;
2400154   +
2400155   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2400156   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2400157   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2400158   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2400159   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2400160   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2400161   +end;
MPRINT(EM_DIAGRAM):   end;
2400162   +else do;
MPRINT(EM_DIAGRAM):   else do;
2400163   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2400164   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2400165   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2400166   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2400167   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2400168   +   end;
MPRINT(EM_DIAGRAM):   end;
2400169   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2400170   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2400171   +   end;
MPRINT(EM_DIAGRAM):   end;
2400172   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2400173   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2400174   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2400175   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2400176   +   end;
MPRINT(EM_DIAGRAM):   end;
2400177   +end;
MPRINT(EM_DIAGRAM):   end;
2400178   +
2400179   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2400180   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2400181   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2400182   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2400183   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2400184   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2400185   +end;
MPRINT(EM_DIAGRAM):   end;
2400186   +else do;
MPRINT(EM_DIAGRAM):   else do;
2400187   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2400188   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2400189   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2400190   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2400191   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2400192   +   end;
MPRINT(EM_DIAGRAM):   end;
2400193   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2400194   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2400195   +   end;
MPRINT(EM_DIAGRAM):   end;
2400196   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2400197   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2400198   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2400199   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2400200   +   end;
MPRINT(EM_DIAGRAM):   end;
2400201   +end;
MPRINT(EM_DIAGRAM):   end;
2400202   +
2400203   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2400204   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
2400205   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2400206   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2400207   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2400208   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2400209   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2400210   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2400211   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2400212   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2400213   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2400214   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2400215   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2400216   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2400217   +end;
MPRINT(EM_DIAGRAM):   end;
2400218   +else do;
MPRINT(EM_DIAGRAM):   else do;
2400219   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2400220   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2400221   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2400222   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2400223   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2400224   +   end;
MPRINT(EM_DIAGRAM):   end;
2400225   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2400226   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2400227   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2400228   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2400229   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2400230   +   end;
MPRINT(EM_DIAGRAM):   end;
2400231   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2400232   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2400233   +   end;
MPRINT(EM_DIAGRAM):   end;
2400234   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2400235   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2400236   +   end;
MPRINT(EM_DIAGRAM):   end;
2400237   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2400238   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2400239   +   end;
MPRINT(EM_DIAGRAM):   end;
2400240   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2400241   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2400242   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2400243   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2400244   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2400245   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2400246   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2400247   +   end;
MPRINT(EM_DIAGRAM):   end;
2400248   +end;
MPRINT(EM_DIAGRAM):   end;
2400249   +
2400250   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2400251   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2400252   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
2400253   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2400254   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2400255   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2400256   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2400257   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2400258   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2400259   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2400260   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2400261   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2400262   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2400263   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2400264   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2400265   +end;
MPRINT(EM_DIAGRAM):   end;
2400266   +else do;
MPRINT(EM_DIAGRAM):   else do;
2400267   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2400268   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2400269   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2400270   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2400271   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2400272   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2400273   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2400274   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2400275   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2400276   +         end;
MPRINT(EM_DIAGRAM):   end;
2400277   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2400278   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2400279   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2400280   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2400281   +            end;
MPRINT(EM_DIAGRAM):   end;
2400282   +         end;
MPRINT(EM_DIAGRAM):   end;
2400283   +      end;
MPRINT(EM_DIAGRAM):   end;
2400284   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2400285   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2400286   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2400287   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2400288   +         end;
MPRINT(EM_DIAGRAM):   end;
2400289   +      end;
MPRINT(EM_DIAGRAM):   end;
2400290   +   end;
MPRINT(EM_DIAGRAM):   end;
2400291   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2400292   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2400293   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2400294   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2400295   +      end;
MPRINT(EM_DIAGRAM):   end;
2400296   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2400297   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2400298   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2400299   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2400300   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2400301   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2400302   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2400303   +         end;
MPRINT(EM_DIAGRAM):   end;
2400304   +      end;
MPRINT(EM_DIAGRAM):   end;
2400305   +   end;
MPRINT(EM_DIAGRAM):   end;
2400306   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2400307   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2400308   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2400309   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2400310   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2400311   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2400312   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2400313   +   end;
MPRINT(EM_DIAGRAM):   end;
2400314   +end;
MPRINT(EM_DIAGRAM):   end;
2400315   +
2400316   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2400317   +*** Checking missing input Interval
2400318   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2400319   +
2400320   +IF NMISS(
2400321   +   AcceptedCmpTotal ,
2400322   +   Age ,
2400323   +   Frq ,
2400324   +   Income ,
2400325   +   Kidhome ,
2400326   +   Mnt ,
2400327   +   MntFishProducts ,
2400328   +   MntFruits ,
2400329   +   MntGoldProds ,
2400330   +   MntMeatProducts ,
2400331   +   MntSweetProducts ,
2400332   +   MntWines ,
2400333   +   MonthsAsCustomer ,
2400334   +   NumCatalogPurchases ,
2400335   +   NumDealsPurchases ,
2400336   +   NumDistPurchases ,
2400337   +   NumStorePurchases ,
2400338   +   NumWebPurchases ,
2400339   +   NumWebVisitsMonth ,
2400340   +   RFMstat ,
2400341   +   RMntFrq ,
2400342   +   Recency ,
2400343   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
2400344   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2400345   +
2400346   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2400347   +END;
MPRINT(EM_DIAGRAM):   END;
2400348   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2400349   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2400350   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2400351   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2400352   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2400353   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2400354   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2400355   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2400356   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2400357   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2400358   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2400359   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2400360   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2400361   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2400362   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2400363   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2400364   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2400365   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2400366   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2400367   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2400368   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2400369   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2400370   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
2400371   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2400372   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2400373   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2400374   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2400375   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2400376   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2400377   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2400378   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2400379   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2400380   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2400381   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2400382   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2400383   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2400384   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2400385   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2400386   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2400387   +END;
MPRINT(EM_DIAGRAM):   END;
2400388   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2400389   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2400390   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2400391   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2400392   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2400393   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2400394   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2400395   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2400396   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2400397   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2400398   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2400399   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2400400   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2400401   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2400402   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2400403   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2400404   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2400405   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2400406   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2400407   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2400408   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2400409   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2400410   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
2400411   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2400412   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2400413   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2400414   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2400415   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2400416   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2400417   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2400418   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2400419   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2400420   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2400421   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
2400422   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2400423   +   ELSE S_NumCatalogPurchases
2400424   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2400425   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2400426   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2400427   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2400428   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2400429   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2400430   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2400431   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2400432   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2400433   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2400434   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2400435   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2400436   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2400437   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2400438   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2400439   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2400440   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2400441   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2400442   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2400443   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2400444   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2400445   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2400446   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2400447   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2400448   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2400449   +END;
MPRINT(EM_DIAGRAM):   END;
2400450   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2400451   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2400452   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2400453   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2400454   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2400455   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2400456   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2400457   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2400458   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2400459   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2400460   +   H1x1_1  =    -1.22979702388871 * S_AcceptedCmpTotal
2400461   +          +    -0.43104795266139 * S_Age  +     0.86889278443529 * S_Frq
2400462   +          +    -1.60769879195759 * S_Income  +     0.50863205564081 *
2400463   +        S_Kidhome  +     0.63485396330815 * S_Mnt  +     1.54715964931126 *
2400464   +        S_MntFishProducts  +     0.75185279130369 * S_MntFruits
2400465   +          +    -0.00997586610757 * S_MntGoldProds  +    -2.37203493907401 *
2400466   +        S_MntMeatProducts  +     0.38638626403468 * S_MntSweetProducts
2400467   +          +     2.26121903773395 * S_MntWines  +    -0.59651789183067 *
2400468   +        S_MonthsAsCustomer  +    -1.52699943820196 * S_NumCatalogPurchases
2400469   +          +    -1.18466001117424 * S_NumDealsPurchases
2400470   +          +     -0.1371252133567 * S_NumDistPurchases
2400471   +          +     1.92719775731123 * S_NumStorePurchases
2400472   +          +     1.23184249192116 * S_NumWebPurchases
2400473   +          +    -1.55583843197424 * S_NumWebVisitsMonth
2400474   +          +    -0.47773207532121 * S_RFMstat  +    -0.35513231558649 *
2400475   +        S_RMntFrq  +     1.63863392145333 * S_Recency
2400476   +          +     0.67173275608308 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.22979702388871 * S_AcceptedCmpTotal + -0.43104795266139 * 
S_Age + 0.86889278443529 * S_Frq + -1.60769879195759 * S_Income + 0.50863205564081 * S_Kidhome 
+ 0.63485396330815 * S_Mnt + 1.54715964931126 * S_MntFishProducts + 0.75185279130369 * 
S_MntFruits + -0.00997586610757 * S_MntGoldProds + -2.37203493907401 * S_MntMeatProducts + 
0.38638626403468 * S_MntSweetProducts + 2.26121903773395 * S_MntWines + -0.59651789183067 * 
S_MonthsAsCustomer + -1.52699943820196 * S_NumCatalogPurchases + -1.18466001117424 * 
S_NumDealsPurchases + -0.1371252133567 * S_NumDistPurchases + 1.92719775731123 * 
S_NumStorePurchases + 1.23184249192116 * S_NumWebPurchases + -1.55583843197424 * 
S_NumWebVisitsMonth + -0.47773207532121 * S_RFMstat + -0.35513231558649 * S_RMntFrq + 
1.63863392145333 * S_Recency + 0.67173275608308 * S_Teenhome ;
2400477   +   H1x1_2  =    -0.02716121128584 * S_AcceptedCmpTotal
2400478   +          +     0.11518566588792 * S_Age  +    -0.03446898150571 * S_Frq
2400479   +          +    -0.19022324523346 * S_Income  +     1.06549395713708 *
2400480   +        S_Kidhome  +    -0.75490876357951 * S_Mnt  +    -0.25515163712879 *
2400481   +        S_MntFishProducts  +    -0.33372388118122 * S_MntFruits
2400482   +          +    -1.35673933518218 * S_MntGoldProds  +    -2.95766948640442 *
2400483   +        S_MntMeatProducts  +      0.2681792093191 * S_MntSweetProducts
2400484   +          +     0.68376629766032 * S_MntWines  +     1.19853579057819 *
2400485   +        S_MonthsAsCustomer  +    -1.27282116370987 * S_NumCatalogPurchases
2400486   +          +     0.63616523425865 * S_NumDealsPurchases
2400487   +          +     0.45460056261546 * S_NumDistPurchases
2400488   +          +    -0.61009999017225 * S_NumStorePurchases
2400489   +          +     1.85193755731081 * S_NumWebPurchases
2400490   +          +    -2.47698404964319 * S_NumWebVisitsMonth
2400491   +          +     -0.6995834208607 * S_RFMstat  +    -0.25646177956568 *
2400492   +        S_RMntFrq  +     1.07962222419254 * S_Recency
2400493   +          +     0.63257022999179 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.02716121128584 * S_AcceptedCmpTotal + 0.11518566588792 * 
S_Age + -0.03446898150571 * S_Frq + -0.19022324523346 * S_Income + 1.06549395713708 * 
S_Kidhome + -0.75490876357951 * S_Mnt + -0.25515163712879 * S_MntFishProducts + 
-0.33372388118122 * S_MntFruits + -1.35673933518218 * S_MntGoldProds + -2.95766948640442 * 
S_MntMeatProducts + 0.2681792093191 * S_MntSweetProducts + 0.68376629766032 * S_MntWines + 
1.19853579057819 * S_MonthsAsCustomer + -1.27282116370987 * S_NumCatalogPurchases + 
0.63616523425865 * S_NumDealsPurchases + 0.45460056261546 * S_NumDistPurchases + 
-0.61009999017225 * S_NumStorePurchases + 1.85193755731081 * S_NumWebPurchases + 
-2.47698404964319 * S_NumWebVisitsMonth + -0.6995834208607 * S_RFMstat + -0.25646177956568 * 
S_RMntFrq + 1.07962222419254 * S_Recency + 0.63257022999179 * S_Teenhome ;
2400494   +   H1x1_3  =     2.21390028099752 * S_AcceptedCmpTotal
2400495   +          +     0.05331556426178 * S_Age  +    -0.65514579137956 * S_Frq
2400496   +          +     0.64307304324121 * S_Income  +    -0.74572098598993 *
2400497   +        S_Kidhome  +     0.72146088814601 * S_Mnt  +    -0.35292583888573 *
2400498   +        S_MntFishProducts  +    -0.60011862194755 * S_MntFruits
2400499   +          +     0.41187011131735 * S_MntGoldProds  +     6.59297713742725 *
2400500   +        S_MntMeatProducts  +    -0.24427365286575 * S_MntSweetProducts
2400501   +          +    -2.72258930476853 * S_MntWines  +     0.14880721485001 *
2400502   +        S_MonthsAsCustomer  +     1.43710120897606 * S_NumCatalogPurchases
2400503   +          +      1.8907968580473 * S_NumDealsPurchases
2400504   +          +     0.01244124801764 * S_NumDistPurchases
2400505   +          +    -2.34409118104622 * S_NumStorePurchases
2400506   +          +    -1.80820043087435 * S_NumWebPurchases
2400507   +          +     2.40219682136039 * S_NumWebVisitsMonth
2400508   +          +     0.64272295101175 * S_RFMstat  +    -2.37583346151401 *
2400509   +        S_RMntFrq  +    -2.05893311376628 * S_Recency
2400510   +          +    -0.09539892763273 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 2.21390028099752 * S_AcceptedCmpTotal + 0.05331556426178 * 
S_Age + -0.65514579137956 * S_Frq + 0.64307304324121 * S_Income + -0.74572098598993 * 
S_Kidhome + 0.72146088814601 * S_Mnt + -0.35292583888573 * S_MntFishProducts + 
-0.60011862194755 * S_MntFruits + 0.41187011131735 * S_MntGoldProds + 6.59297713742725 * 
S_MntMeatProducts + -0.24427365286575 * S_MntSweetProducts + -2.72258930476853 * S_MntWines + 
0.14880721485001 * S_MonthsAsCustomer + 1.43710120897606 * S_NumCatalogPurchases + 
1.8907968580473 * S_NumDealsPurchases + 0.01244124801764 * S_NumDistPurchases + 
-2.34409118104622 * S_NumStorePurchases + -1.80820043087435 * S_NumWebPurchases + 
2.40219682136039 * S_NumWebVisitsMonth + 0.64272295101175 * S_RFMstat + -2.37583346151401 * 
S_RMntFrq + -2.05893311376628 * S_Recency + -0.09539892763273 * S_Teenhome ;
2400511   +   H1x1_4  =     0.39967052173479 * S_AcceptedCmpTotal
2400512   +          +    -0.07923444459672 * S_Age  +     0.62339138041893 * S_Frq
2400513   +          +     1.61789948058771 * S_Income  +     -1.4543646851274 *
2400514   +        S_Kidhome  +      0.0674362517919 * S_Mnt  +    -0.01747401903722 *
2400515   +        S_MntFishProducts  +     0.35122931976599 * S_MntFruits
2400516   +          +     0.49479569666837 * S_MntGoldProds  +     0.96598079382568 *
2400517   +        S_MntMeatProducts  +     0.00966238843619 * S_MntSweetProducts
2400518   +          +    -1.04781861730336 * S_MntWines  +    -0.60232527705864 *
2400519   +        S_MonthsAsCustomer  +     1.64183850526139 * S_NumCatalogPurchases
2400520   +          +     0.28209537604198 * S_NumDealsPurchases
2400521   +          +      0.6450277971767 * S_NumDistPurchases
2400522   +          +     0.85050092520609 * S_NumStorePurchases
2400523   +          +    -0.53920307215941 * S_NumWebPurchases
2400524   +          +     3.01106015100147 * S_NumWebVisitsMonth
2400525   +          +     0.35454480730832 * S_RFMstat  +     2.44126135489059 *
2400526   +        S_RMntFrq  +    -3.15497765450512 * S_Recency
2400527   +          +    -1.52912100940198 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.39967052173479 * S_AcceptedCmpTotal + -0.07923444459672 * 
S_Age + 0.62339138041893 * S_Frq + 1.61789948058771 * S_Income + -1.4543646851274 * S_Kidhome 
+ 0.0674362517919 * S_Mnt + -0.01747401903722 * S_MntFishProducts + 0.35122931976599 * 
S_MntFruits + 0.49479569666837 * S_MntGoldProds + 0.96598079382568 * S_MntMeatProducts + 
0.00966238843619 * S_MntSweetProducts + -1.04781861730336 * S_MntWines + -0.60232527705864 * 
S_MonthsAsCustomer + 1.64183850526139 * S_NumCatalogPurchases + 0.28209537604198 * 
S_NumDealsPurchases + 0.6450277971767 * S_NumDistPurchases + 0.85050092520609 * 
S_NumStorePurchases + -0.53920307215941 * S_NumWebPurchases + 3.01106015100147 * 
S_NumWebVisitsMonth + 0.35454480730832 * S_RFMstat + 2.44126135489059 * S_RMntFrq + 
-3.15497765450512 * S_Recency + -1.52912100940198 * S_Teenhome ;
2400528   +   H1x1_5  =    -1.36246601888598 * S_AcceptedCmpTotal
2400529   +          +     0.18494970680372 * S_Age  +    -0.48239316237012 * S_Frq
2400530   +          +    -0.07754710635082 * S_Income  +    -1.12988783865284 *
2400531   +        S_Kidhome  +    -0.99389820487435 * S_Mnt  +     0.97730928948588 *
2400532   +        S_MntFishProducts  +     0.22400827772102 * S_MntFruits
2400533   +          +     0.74486626223136 * S_MntGoldProds  +    -5.09299340099429 *
2400534   +        S_MntMeatProducts  +     -0.9293665551505 * S_MntSweetProducts
2400535   +          +     2.05621056740754 * S_MntWines  +     0.13751326047818 *
2400536   +        S_MonthsAsCustomer  +    -0.78748700520409 * S_NumCatalogPurchases
2400537   +          +    -0.36642526324451 * S_NumDealsPurchases
2400538   +          +     -0.6091014843932 * S_NumDistPurchases
2400539   +          +    -0.21154626182088 * S_NumStorePurchases
2400540   +          +    -0.10361347071364 * S_NumWebPurchases
2400541   +          +     1.36358817627784 * S_NumWebVisitsMonth
2400542   +          +    -1.12999319551924 * S_RFMstat  +    -0.19491430019245 *
2400543   +        S_RMntFrq  +    -1.04649498091784 * S_Recency
2400544   +          +     0.17452738843544 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.36246601888598 * S_AcceptedCmpTotal + 0.18494970680372 * 
S_Age + -0.48239316237012 * S_Frq + -0.07754710635082 * S_Income + -1.12988783865284 * 
S_Kidhome + -0.99389820487435 * S_Mnt + 0.97730928948588 * S_MntFishProducts + 
0.22400827772102 * S_MntFruits + 0.74486626223136 * S_MntGoldProds + -5.09299340099429 * 
S_MntMeatProducts + -0.9293665551505 * S_MntSweetProducts + 2.05621056740754 * S_MntWines + 
0.13751326047818 * S_MonthsAsCustomer + -0.78748700520409 * S_NumCatalogPurchases + 
-0.36642526324451 * S_NumDealsPurchases + -0.6091014843932 * S_NumDistPurchases + 
-0.21154626182088 * S_NumStorePurchases + -0.10361347071364 * S_NumWebPurchases + 
1.36358817627784 * S_NumWebVisitsMonth + -1.12999319551924 * S_RFMstat + -0.19491430019245 * 
S_RMntFrq + -1.04649498091784 * S_Recency + 0.17452738843544 * S_Teenhome ;
2400545   +   H1x1_6  =    -0.61844696407508 * S_AcceptedCmpTotal
2400546   +          +    -0.13181297602063 * S_Age  +        0.68456903056 * S_Frq
2400547   +          +    -0.34991774042788 * S_Income  +     1.46159955002315 *
2400548   +        S_Kidhome  +     0.21200077233877 * S_Mnt  +    -1.25754094670769 *
2400549   +        S_MntFishProducts  +    -0.09204195787339 * S_MntFruits
2400550   +          +     0.30860507694466 * S_MntGoldProds  +     2.47956356836605 *
2400551   +        S_MntMeatProducts  +     0.40882561010395 * S_MntSweetProducts
2400552   +          +    -0.31319819026957 * S_MntWines  +    -0.35678594664106 *
2400553   +        S_MonthsAsCustomer  +     0.01690494248971 * S_NumCatalogPurchases
2400554   +          +    -0.14868505161718 * S_NumDealsPurchases
2400555   +          +    -0.08395384711805 * S_NumDistPurchases
2400556   +          +     0.60525238179245 * S_NumStorePurchases
2400557   +          +     0.04555100214276 * S_NumWebPurchases
2400558   +          +    -2.31888436784305 * S_NumWebVisitsMonth
2400559   +          +     0.04533094777373 * S_RFMstat  +     1.45047684433196 *
2400560   +        S_RMntFrq  +     3.02439474266744 * S_Recency
2400561   +          +     1.00458920115313 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -0.61844696407508 * S_AcceptedCmpTotal + -0.13181297602063 * 
S_Age + 0.68456903056 * S_Frq + -0.34991774042788 * S_Income + 1.46159955002315 * S_Kidhome + 
0.21200077233877 * S_Mnt + -1.25754094670769 * S_MntFishProducts + -0.09204195787339 * 
S_MntFruits + 0.30860507694466 * S_MntGoldProds + 2.47956356836605 * S_MntMeatProducts + 
0.40882561010395 * S_MntSweetProducts + -0.31319819026957 * S_MntWines + -0.35678594664106 * 
S_MonthsAsCustomer + 0.01690494248971 * S_NumCatalogPurchases + -0.14868505161718 * 
S_NumDealsPurchases + -0.08395384711805 * S_NumDistPurchases + 0.60525238179245 * 
S_NumStorePurchases + 0.04555100214276 * S_NumWebPurchases + -2.31888436784305 * 
S_NumWebVisitsMonth + 0.04533094777373 * S_RFMstat + 1.45047684433196 * S_RMntFrq + 
3.02439474266744 * S_Recency + 1.00458920115313 * S_Teenhome ;
2400562   +   H1x1_1  = H1x1_1  +     1.44647846478949 * AcceptedCmp10
2400563   +          +     0.96385529143297 * AcceptedCmp20  +     0.80013060089317 *
2400564   +        AcceptedCmp30  +     1.84770198014032 * AcceptedCmp40
2400565   +          +     0.80401446607714 * AcceptedCmp50  +     0.54049538978821 *
2400566   +        Complain0  +     0.10087163212641 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 1.44647846478949 * AcceptedCmp10 + 0.96385529143297 * 
AcceptedCmp20 + 0.80013060089317 * AcceptedCmp30 + 1.84770198014032 * AcceptedCmp40 + 
0.80401446607714 * AcceptedCmp50 + 0.54049538978821 * Complain0 + 0.10087163212641 * 
HigherEducationBinary0 ;
2400567   +   H1x1_2  = H1x1_2  +    -1.68777270512099 * AcceptedCmp10
2400568   +          +     0.54885195015877 * AcceptedCmp20  +    -0.90402264974928 *
2400569   +        AcceptedCmp30  +    -0.42358682267334 * AcceptedCmp40
2400570   +          +     0.87016183962004 * AcceptedCmp50  +     0.42082407002478 *
2400571   +        Complain0  +    -0.37999025234308 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -1.68777270512099 * AcceptedCmp10 + 0.54885195015877 * 
AcceptedCmp20 + -0.90402264974928 * AcceptedCmp30 + -0.42358682267334 * AcceptedCmp40 + 
0.87016183962004 * AcceptedCmp50 + 0.42082407002478 * Complain0 + -0.37999025234308 * 
HigherEducationBinary0 ;
2400572   +   H1x1_3  = H1x1_3  +    -0.40437631159129 * AcceptedCmp10
2400573   +          +      0.0972205308159 * AcceptedCmp20  +     0.81983130325412 *
2400574   +        AcceptedCmp30  +     0.11521626741585 * AcceptedCmp40
2400575   +          +    -0.67384158900854 * AcceptedCmp50  +    -0.08888648111628 *
2400576   +        Complain0  +    -0.12489144574555 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.40437631159129 * AcceptedCmp10 + 0.0972205308159 * 
AcceptedCmp20 + 0.81983130325412 * AcceptedCmp30 + 0.11521626741585 * AcceptedCmp40 + 
-0.67384158900854 * AcceptedCmp50 + -0.08888648111628 * Complain0 + -0.12489144574555 * 
HigherEducationBinary0 ;
2400577   +   H1x1_4  = H1x1_4  +    -0.11861456940351 * AcceptedCmp10
2400578   +          +    -0.84401831403342 * AcceptedCmp20  +    -0.99900514370547 *
2400579   +        AcceptedCmp30  +     0.03311277744337 * AcceptedCmp40
2400580   +          +    -0.89369182681709 * AcceptedCmp50  +    -0.46321923883787 *
2400581   +        Complain0  +     0.73698890563732 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.11861456940351 * AcceptedCmp10 + -0.84401831403342 
* AcceptedCmp20 + -0.99900514370547 * AcceptedCmp30 + 0.03311277744337 * AcceptedCmp40 + 
-0.89369182681709 * AcceptedCmp50 + -0.46321923883787 * Complain0 + 0.73698890563732 * 
HigherEducationBinary0 ;
2400582   +   H1x1_5  = H1x1_5  +     1.36740346673871 * AcceptedCmp10
2400583   +          +    -0.09307995102939 * AcceptedCmp20  +    -0.99727975675265 *
2400584   +        AcceptedCmp30  +    -1.64006559974507 * AcceptedCmp40
2400585   +          +    -0.12164496778613 * AcceptedCmp50  +    -0.20852398947217 *
2400586   +        Complain0  +    -0.12903157145588 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 1.36740346673871 * AcceptedCmp10 + -0.09307995102939 * 
AcceptedCmp20 + -0.99727975675265 * AcceptedCmp30 + -1.64006559974507 * AcceptedCmp40 + 
-0.12164496778613 * AcceptedCmp50 + -0.20852398947217 * Complain0 + -0.12903157145588 * 
HigherEducationBinary0 ;
2400587   +   H1x1_6  = H1x1_6  +    -0.18375336439178 * AcceptedCmp10
2400588   +          +    -0.61320886099742 * AcceptedCmp20  +     1.46384578641555 *
2400589   +        AcceptedCmp30  +     1.07211075480456 * AcceptedCmp40
2400590   +          +      0.1814894663676 * AcceptedCmp50  +     0.61050756961671 *
2400591   +        Complain0  +     0.18598381049052 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + -0.18375336439178 * AcceptedCmp10 + -0.61320886099742 
* AcceptedCmp20 + 1.46384578641555 * AcceptedCmp30 + 1.07211075480456 * AcceptedCmp40 + 
0.1814894663676 * AcceptedCmp50 + 0.61050756961671 * Complain0 + 0.18598381049052 * 
HigherEducationBinary0 ;
2400592   +   H1x1_1  = H1x1_1  +    -0.85219855086228 * Education2n_Cycle
2400593   +          +     0.72409647993559 * EducationBasic  +    -1.69896726220399 *
2400594   +        EducationGraduation  +     0.96924197858068 * EducationMaster
2400595   +          +     -0.7180104021039 * Marital_StatusDivorced
2400596   +          +      0.5957373170744 * Marital_StatusMarried
2400597   +          +    -0.86183942803988 * Marital_StatusSingle
2400598   +          +     0.92994743994713 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.85219855086228 * Education2n_Cycle + 
0.72409647993559 * EducationBasic + -1.69896726220399 * EducationGraduation + 0.96924197858068 
* EducationMaster + -0.7180104021039 * Marital_StatusDivorced + 0.5957373170744 * 
Marital_StatusMarried + -0.86183942803988 * Marital_StatusSingle + 0.92994743994713 * 
Marital_StatusTogether ;
2400599   +   H1x1_2  = H1x1_2  +    -0.29863788783823 * Education2n_Cycle
2400600   +          +    -0.03492398661463 * EducationBasic  +     1.96491183828121 *
2400601   +        EducationGraduation  +    -1.23733321574678 * EducationMaster
2400602   +          +     0.84772700244021 * Marital_StatusDivorced
2400603   +          +    -0.37049970188511 * Marital_StatusMarried
2400604   +          +     1.54291641732063 * Marital_StatusSingle
2400605   +          +      0.2036514883055 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.29863788783823 * Education2n_Cycle + 
-0.03492398661463 * EducationBasic + 1.96491183828121 * EducationGraduation + 
-1.23733321574678 * EducationMaster + 0.84772700244021 * Marital_StatusDivorced + 
-0.37049970188511 * Marital_StatusMarried + 1.54291641732063 * Marital_StatusSingle + 
0.2036514883055 * Marital_StatusTogether ;
2400606   +   H1x1_3  = H1x1_3  +     0.21600870420184 * Education2n_Cycle
2400607   +          +    -0.41247138958506 * EducationBasic  +    -0.04710356650237 *
2400608   +        EducationGraduation  +     0.02093123351397 * EducationMaster
2400609   +          +     0.73222548496385 * Marital_StatusDivorced
2400610   +          +    -0.50102202656102 * Marital_StatusMarried
2400611   +          +    -0.07207130428422 * Marital_StatusSingle
2400612   +          +     0.17349558515949 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.21600870420184 * Education2n_Cycle + 
-0.41247138958506 * EducationBasic + -0.04710356650237 * EducationGraduation + 
0.02093123351397 * EducationMaster + 0.73222548496385 * Marital_StatusDivorced + 
-0.50102202656102 * Marital_StatusMarried + -0.07207130428422 * Marital_StatusSingle + 
0.17349558515949 * Marital_StatusTogether ;
2400613   +   H1x1_4  = H1x1_4  +    -0.26695942691152 * Education2n_Cycle
2400614   +          +     0.08346486410021 * EducationBasic  +    -1.19880044804188 *
2400615   +        EducationGraduation  +     0.65366032471107 * EducationMaster
2400616   +          +     0.25894719464799 * Marital_StatusDivorced
2400617   +          +    -1.95576501275834 * Marital_StatusMarried
2400618   +          +     2.65422185276746 * Marital_StatusSingle
2400619   +          +    -3.75373924980398 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.26695942691152 * Education2n_Cycle + 
0.08346486410021 * EducationBasic + -1.19880044804188 * EducationGraduation + 0.65366032471107 
* EducationMaster + 0.25894719464799 * Marital_StatusDivorced + -1.95576501275834 * 
Marital_StatusMarried + 2.65422185276746 * Marital_StatusSingle + -3.75373924980398 * 
Marital_StatusTogether ;
2400620   +   H1x1_5  = H1x1_5  +     0.17586479935526 * Education2n_Cycle
2400621   +          +    -0.60926722758624 * EducationBasic  +    -0.09613529218096 *
2400622   +        EducationGraduation  +    -0.28683119112285 * EducationMaster
2400623   +          +     0.60936191204707 * Marital_StatusDivorced
2400624   +          +    -0.52190111190458 * Marital_StatusMarried
2400625   +          +    -0.60982305233136 * Marital_StatusSingle
2400626   +          +     0.44659686388318 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 0.17586479935526 * Education2n_Cycle + 
-0.60926722758624 * EducationBasic + -0.09613529218096 * EducationGraduation + 
-0.28683119112285 * EducationMaster + 0.60936191204707 * Marital_StatusDivorced + 
-0.52190111190458 * Marital_StatusMarried + -0.60982305233136 * Marital_StatusSingle + 
0.44659686388318 * Marital_StatusTogether ;
2400627   +   H1x1_6  = H1x1_6  +     0.16067502362228 * Education2n_Cycle
2400628   +          +     0.18937855703296 * EducationBasic  +     0.06386817095607 *
2400629   +        EducationGraduation  +     0.51538853297606 * EducationMaster
2400630   +          +    -1.44614502228294 * Marital_StatusDivorced
2400631   +          +      2.9001493892928 * Marital_StatusMarried
2400632   +          +    -2.60467399972513 * Marital_StatusSingle
2400633   +          +     2.31815156650258 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + 0.16067502362228 * Education2n_Cycle + 
0.18937855703296 * EducationBasic + 0.06386817095607 * EducationGraduation + 0.51538853297606 
* EducationMaster + -1.44614502228294 * Marital_StatusDivorced + 2.9001493892928 * 
Marital_StatusMarried + -2.60467399972513 * Marital_StatusSingle + 2.31815156650258 * 
Marital_StatusTogether ;
2400634   +   H1x1_1  =     2.01245018737649 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 2.01245018737649 + H1x1_1 ;
2400635   +   H1x1_2  =    -0.13724223857423 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.13724223857423 + H1x1_2 ;
2400636   +   H1x1_3  =     0.82934879006547 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.82934879006547 + H1x1_3 ;
2400637   +   H1x1_4  =    -0.21545557935699 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.21545557935699 + H1x1_4 ;
2400638   +   H1x1_5  =     0.44835497486542 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.44835497486542 + H1x1_5 ;
2400639   +   H1x1_6  =     0.11792774897936 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0.11792774897936 + H1x1_6 ;
2400640   +   H1x1_7  = 0;
MPRINT(EM_DIAGRAM):   H1x1_7 = 0;
2400641   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 , H1x1_7
2400642   +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 , 
H1x1_7 );
2400643   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2400644   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
2400645   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
2400646   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
2400647   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
2400648   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
2400649   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
2400650   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
2400651   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
2400652   +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
2400653   +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
2400654   +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
2400655   +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
2400656   +   H1x1_7  = EXP(H1x1_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_7 = EXP(H1x1_7 - _MAX_);
2400657   +   _SUM_ = _SUM_ + H1x1_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_7 ;
2400658   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
2400659   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
2400660   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
2400661   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
2400662   +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
2400663   +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
2400664   +   H1x1_7  = H1x1_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_7 = H1x1_7 / _SUM_;
2400665   +END;
MPRINT(EM_DIAGRAM):   END;
2400666   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2400667   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2400668   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2400669   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2400670   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2400671   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
2400672   +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
2400673   +   H1x1_7  = .;
MPRINT(EM_DIAGRAM):   H1x1_7 = .;
2400674   +END;
MPRINT(EM_DIAGRAM):   END;
2400675   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2400676   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
2400677   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2400678   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2400679   +   H1x2_1  =    -0.51245281628488 * S_AcceptedCmpTotal
2400680   +          +     0.29586551487242 * S_Age  +     1.34531593814589 * S_Frq
2400681   +          +     1.40753230099536 * S_Income  +    -1.01979935776675 *
2400682   +        S_Kidhome  +      1.0655533203194 * S_Mnt  +     0.74171867275429 *
2400683   +        S_MntFishProducts  +    -0.77881282886264 * S_MntFruits
2400684   +          +    -0.58546798489474 * S_MntGoldProds  +     0.93410444049208 *
2400685   +        S_MntMeatProducts  +     1.10536507959221 * S_MntSweetProducts
2400686   +          +     2.08723894920384 * S_MntWines  +    -0.64437193401661 *
2400687   +        S_MonthsAsCustomer  +     1.49880648713252 * S_NumCatalogPurchases
2400688   +          +    -0.46483717253931 * S_NumDealsPurchases
2400689   +          +    -0.53329008421157 * S_NumDistPurchases
2400690   +          +      0.2490774300193 * S_NumStorePurchases
2400691   +          +    -0.82755150673885 * S_NumWebPurchases
2400692   +          +     0.04007223822389 * S_NumWebVisitsMonth
2400693   +          +    -0.21044923749124 * S_RFMstat  +     0.27791352512351 *
2400694   +        S_RMntFrq  +     0.43434806411249 * S_Recency
2400695   +          +    -1.25974784572932 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.51245281628488 * S_AcceptedCmpTotal + 0.29586551487242 * 
S_Age + 1.34531593814589 * S_Frq + 1.40753230099536 * S_Income + -1.01979935776675 * S_Kidhome 
+ 1.0655533203194 * S_Mnt + 0.74171867275429 * S_MntFishProducts + -0.77881282886264 * 
S_MntFruits + -0.58546798489474 * S_MntGoldProds + 0.93410444049208 * S_MntMeatProducts + 
1.10536507959221 * S_MntSweetProducts + 2.08723894920384 * S_MntWines + -0.64437193401661 * 
S_MonthsAsCustomer + 1.49880648713252 * S_NumCatalogPurchases + -0.46483717253931 * 
S_NumDealsPurchases + -0.53329008421157 * S_NumDistPurchases + 0.2490774300193 * 
S_NumStorePurchases + -0.82755150673885 * S_NumWebPurchases + 0.04007223822389 * 
S_NumWebVisitsMonth + -0.21044923749124 * S_RFMstat + 0.27791352512351 * S_RMntFrq + 
0.43434806411249 * S_Recency + -1.25974784572932 * S_Teenhome ;
2400696   +   H1x2_2  =     0.30117516029562 * S_AcceptedCmpTotal
2400697   +          +     0.16042149118905 * S_Age  +    -2.59350323749407 * S_Frq
2400698   +          +    -0.29940842910223 * S_Income  +    -0.09168883019219 *
2400699   +        S_Kidhome  +    -0.39758312303322 * S_Mnt  +     -0.4138816285287 *
2400700   +        S_MntFishProducts  +        0.18555623351 * S_MntFruits
2400701   +          +    -0.28024159914959 * S_MntGoldProds  +     1.08084875123781 *
2400702   +        S_MntMeatProducts  +     0.29032828446632 * S_MntSweetProducts
2400703   +          +     0.47556687393839 * S_MntWines  +    -0.89795441591329 *
2400704   +        S_MonthsAsCustomer  +    -0.47081176716106 * S_NumCatalogPurchases
2400705   +          +     0.75855101382458 * S_NumDealsPurchases
2400706   +          +     1.61754951768262 * S_NumDistPurchases
2400707   +          +    -0.48146714929729 * S_NumStorePurchases
2400708   +          +    -0.76460728035552 * S_NumWebPurchases
2400709   +          +    -0.71146787112442 * S_NumWebVisitsMonth
2400710   +          +     0.42381866124588 * S_RFMstat  +     -0.3894818400451 *
2400711   +        S_RMntFrq  +    -0.01528916550509 * S_Recency
2400712   +          +     0.38823136254948 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.30117516029562 * S_AcceptedCmpTotal + 0.16042149118905 * 
S_Age + -2.59350323749407 * S_Frq + -0.29940842910223 * S_Income + -0.09168883019219 * 
S_Kidhome + -0.39758312303322 * S_Mnt + -0.4138816285287 * S_MntFishProducts + 0.18555623351 * 
S_MntFruits + -0.28024159914959 * S_MntGoldProds + 1.08084875123781 * S_MntMeatProducts + 
0.29032828446632 * S_MntSweetProducts + 0.47556687393839 * S_MntWines + -0.89795441591329 * 
S_MonthsAsCustomer + -0.47081176716106 * S_NumCatalogPurchases + 0.75855101382458 * 
S_NumDealsPurchases + 1.61754951768262 * S_NumDistPurchases + -0.48146714929729 * 
S_NumStorePurchases + -0.76460728035552 * S_NumWebPurchases + -0.71146787112442 * 
S_NumWebVisitsMonth + 0.42381866124588 * S_RFMstat + -0.3894818400451 * S_RMntFrq + 
-0.01528916550509 * S_Recency + 0.38823136254948 * S_Teenhome ;
2400713   +   H1x2_3  =    -1.28283712556699 * S_AcceptedCmpTotal
2400714   +          +    -0.62214066983867 * S_Age  +      0.0675653313166 * S_Frq
2400715   +          +     0.77098495841918 * S_Income  +    -1.36225954388119 *
2400716   +        S_Kidhome  +      0.0552831076081 * S_Mnt  +    -0.21387512812296 *
2400717   +        S_MntFishProducts  +    -1.14715718471691 * S_MntFruits
2400718   +          +    -1.15507787000433 * S_MntGoldProds  +     0.87571107504211 *
2400719   +        S_MntMeatProducts  +     0.28274178198443 * S_MntSweetProducts
2400720   +          +     0.23070204507311 * S_MntWines  +    -1.88342889522874 *
2400721   +        S_MonthsAsCustomer  +    -0.19127945486903 * S_NumCatalogPurchases
2400722   +          +     0.75255317965748 * S_NumDealsPurchases
2400723   +          +     1.34900588315783 * S_NumDistPurchases
2400724   +          +    -0.17717469778048 * S_NumStorePurchases
2400725   +          +    -0.01560551546553 * S_NumWebPurchases
2400726   +          +     1.24315988674343 * S_NumWebVisitsMonth
2400727   +          +     2.23854910235018 * S_RFMstat  +     0.55516131558838 *
2400728   +        S_RMntFrq  +    -2.01558015490584 * S_Recency
2400729   +          +     1.34178435587014 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -1.28283712556699 * S_AcceptedCmpTotal + -0.62214066983867 * 
S_Age + 0.0675653313166 * S_Frq + 0.77098495841918 * S_Income + -1.36225954388119 * S_Kidhome 
+ 0.0552831076081 * S_Mnt + -0.21387512812296 * S_MntFishProducts + -1.14715718471691 * 
S_MntFruits + -1.15507787000433 * S_MntGoldProds + 0.87571107504211 * S_MntMeatProducts + 
0.28274178198443 * S_MntSweetProducts + 0.23070204507311 * S_MntWines + -1.88342889522874 * 
S_MonthsAsCustomer + -0.19127945486903 * S_NumCatalogPurchases + 0.75255317965748 * 
S_NumDealsPurchases + 1.34900588315783 * S_NumDistPurchases + -0.17717469778048 * 
S_NumStorePurchases + -0.01560551546553 * S_NumWebPurchases + 1.24315988674343 * 
S_NumWebVisitsMonth + 2.23854910235018 * S_RFMstat + 0.55516131558838 * S_RMntFrq + 
-2.01558015490584 * S_Recency + 1.34178435587014 * S_Teenhome ;
2400730   +   H1x2_4  =     1.35706411211536 * S_AcceptedCmpTotal
2400731   +          +    -0.73374940975123 * S_Age  +     2.10445428870671 * S_Frq
2400732   +          +    -1.60133766439775 * S_Income  +     0.02861907512789 *
2400733   +        S_Kidhome  +    -1.61837693250001 * S_Mnt  +       0.209751533263 *
2400734   +        S_MntFishProducts  +     1.82411973889656 * S_MntFruits
2400735   +          +     1.12172774431408 * S_MntGoldProds  +     1.09610288046573 *
2400736   +        S_MntMeatProducts  +    -0.86671874280949 * S_MntSweetProducts
2400737   +          +    -0.11602638812541 * S_MntWines  +    -0.30074020863435 *
2400738   +        S_MonthsAsCustomer  +     0.46044258716085 * S_NumCatalogPurchases
2400739   +          +    -1.71127148178768 * S_NumDealsPurchases
2400740   +          +    -1.77527355221308 * S_NumDistPurchases
2400741   +          +    -1.40009594349363 * S_NumStorePurchases
2400742   +          +    -0.46471012062697 * S_NumWebPurchases
2400743   +          +     0.04619891083228 * S_NumWebVisitsMonth
2400744   +          +     0.34715614649891 * S_RFMstat  +    -0.74983051176564 *
2400745   +        S_RMntFrq  +     0.84880186653433 * S_Recency
2400746   +          +     0.20218341857265 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 1.35706411211536 * S_AcceptedCmpTotal + -0.73374940975123 * 
S_Age + 2.10445428870671 * S_Frq + -1.60133766439775 * S_Income + 0.02861907512789 * S_Kidhome 
+ -1.61837693250001 * S_Mnt + 0.209751533263 * S_MntFishProducts + 1.82411973889656 * 
S_MntFruits + 1.12172774431408 * S_MntGoldProds + 1.09610288046573 * S_MntMeatProducts + 
-0.86671874280949 * S_MntSweetProducts + -0.11602638812541 * S_MntWines + -0.30074020863435 * 
S_MonthsAsCustomer + 0.46044258716085 * S_NumCatalogPurchases + -1.71127148178768 * 
S_NumDealsPurchases + -1.77527355221308 * S_NumDistPurchases + -1.40009594349363 * 
S_NumStorePurchases + -0.46471012062697 * S_NumWebPurchases + 0.04619891083228 * 
S_NumWebVisitsMonth + 0.34715614649891 * S_RFMstat + -0.74983051176564 * S_RMntFrq + 
0.84880186653433 * S_Recency + 0.20218341857265 * S_Teenhome ;
2400747   +   H1x2_5  =     1.79452363233333 * S_AcceptedCmpTotal
2400748   +          +     1.70826835028511 * S_Age  +     0.08241717907016 * S_Frq
2400749   +          +    -1.15275600314196 * S_Income  +     0.87736096074094 *
2400750   +        S_Kidhome  +     0.90821427722502 * S_Mnt  +    -0.84055732556964 *
2400751   +        S_MntFishProducts  +    -0.74245639083939 * S_MntFruits
2400752   +          +     0.00204325095854 * S_MntGoldProds  +     0.37597102500134 *
2400753   +        S_MntMeatProducts  +     0.28586076288454 * S_MntSweetProducts
2400754   +          +    -1.38194310174269 * S_MntWines  +     0.10286181254259 *
2400755   +        S_MonthsAsCustomer  +    -0.82469018226034 * S_NumCatalogPurchases
2400756   +          +    -0.22204470395056 * S_NumDealsPurchases
2400757   +          +    -1.74490476011984 * S_NumDistPurchases
2400758   +          +     1.93538420108324 * S_NumStorePurchases
2400759   +          +     1.04892631742152 * S_NumWebPurchases
2400760   +          +     1.50717841566047 * S_NumWebVisitsMonth
2400761   +          +     0.61249250909375 * S_RFMstat  +    -0.54764212165911 *
2400762   +        S_RMntFrq  +      1.9918829185386 * S_Recency
2400763   +          +     0.64908540313947 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.79452363233333 * S_AcceptedCmpTotal + 1.70826835028511 * 
S_Age + 0.08241717907016 * S_Frq + -1.15275600314196 * S_Income + 0.87736096074094 * S_Kidhome 
+ 0.90821427722502 * S_Mnt + -0.84055732556964 * S_MntFishProducts + -0.74245639083939 * 
S_MntFruits + 0.00204325095854 * S_MntGoldProds + 0.37597102500134 * S_MntMeatProducts + 
0.28586076288454 * S_MntSweetProducts + -1.38194310174269 * S_MntWines + 0.10286181254259 * 
S_MonthsAsCustomer + -0.82469018226034 * S_NumCatalogPurchases + -0.22204470395056 * 
S_NumDealsPurchases + -1.74490476011984 * S_NumDistPurchases + 1.93538420108324 * 
S_NumStorePurchases + 1.04892631742152 * S_NumWebPurchases + 1.50717841566047 * 
S_NumWebVisitsMonth + 0.61249250909375 * S_RFMstat + -0.54764212165911 * S_RMntFrq + 
1.9918829185386 * S_Recency + 0.64908540313947 * S_Teenhome ;
2400764   +   H1x2_6  =     1.38705263280369 * S_AcceptedCmpTotal
2400765   +          +    -0.70531523704191 * S_Age  +     0.59125500807205 * S_Frq
2400766   +          +     0.89549490842249 * S_Income  +     1.07240562425698 *
2400767   +        S_Kidhome  +    -0.25050185694258 * S_Mnt  +    -0.77552207934024 *
2400768   +        S_MntFishProducts  +     0.18087757744856 * S_MntFruits
2400769   +          +    -1.37618517481144 * S_MntGoldProds  +      0.6557488228355 *
2400770   +        S_MntMeatProducts  +    -1.40834207395949 * S_MntSweetProducts
2400771   +          +    -0.76196689750388 * S_MntWines  +     0.85144735274506 *
2400772   +        S_MonthsAsCustomer  +     0.66349954778428 * S_NumCatalogPurchases
2400773   +          +    -0.94690420785776 * S_NumDealsPurchases
2400774   +          +     1.87932706342204 * S_NumDistPurchases
2400775   +          +     0.31232717416487 * S_NumStorePurchases
2400776   +          +     1.51889492693355 * S_NumWebPurchases
2400777   +          +     0.04376853689795 * S_NumWebVisitsMonth
2400778   +          +    -2.53979043374029 * S_RFMstat  +     1.33915580029494 *
2400779   +        S_RMntFrq  +    -1.21983510008829 * S_Recency
2400780   +          +     0.36122230024433 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_6 = 1.38705263280369 * S_AcceptedCmpTotal + -0.70531523704191 * 
S_Age + 0.59125500807205 * S_Frq + 0.89549490842249 * S_Income + 1.07240562425698 * S_Kidhome 
+ -0.25050185694258 * S_Mnt + -0.77552207934024 * S_MntFishProducts + 0.18087757744856 * 
S_MntFruits + -1.37618517481144 * S_MntGoldProds + 0.6557488228355 * S_MntMeatProducts + 
-1.40834207395949 * S_MntSweetProducts + -0.76196689750388 * S_MntWines + 0.85144735274506 * 
S_MonthsAsCustomer + 0.66349954778428 * S_NumCatalogPurchases + -0.94690420785776 * 
S_NumDealsPurchases + 1.87932706342204 * S_NumDistPurchases + 0.31232717416487 * 
S_NumStorePurchases + 1.51889492693355 * S_NumWebPurchases + 0.04376853689795 * 
S_NumWebVisitsMonth + -2.53979043374029 * S_RFMstat + 1.33915580029494 * S_RMntFrq + 
-1.21983510008829 * S_Recency + 0.36122230024433 * S_Teenhome ;
2400781   +   H1x2_1  = H1x2_1  +     1.89852147155601 * AcceptedCmp10
2400782   +          +     0.03501265764204 * AcceptedCmp20  +    -0.45070218241239 *
2400783   +        AcceptedCmp30  +    -1.27257966336041 * AcceptedCmp40
2400784   +          +     0.86175125820023 * AcceptedCmp50  +     1.42864024461581 *
2400785   +        Complain0  +     0.34417315915901 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 1.89852147155601 * AcceptedCmp10 + 0.03501265764204 * 
AcceptedCmp20 + -0.45070218241239 * AcceptedCmp30 + -1.27257966336041 * AcceptedCmp40 + 
0.86175125820023 * AcceptedCmp50 + 1.42864024461581 * Complain0 + 0.34417315915901 * 
HigherEducationBinary0 ;
2400786   +   H1x2_2  = H1x2_2  +     0.41672679168374 * AcceptedCmp10
2400787   +          +     0.10769233314512 * AcceptedCmp20  +     0.42374549876289 *
2400788   +        AcceptedCmp30  +     0.65697535989046 * AcceptedCmp40
2400789   +          +     1.49817201460948 * AcceptedCmp50  +     0.46039378640249 *
2400790   +        Complain0  +     1.34709525059573 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.41672679168374 * AcceptedCmp10 + 0.10769233314512 * 
AcceptedCmp20 + 0.42374549876289 * AcceptedCmp30 + 0.65697535989046 * AcceptedCmp40 + 
1.49817201460948 * AcceptedCmp50 + 0.46039378640249 * Complain0 + 1.34709525059573 * 
HigherEducationBinary0 ;
2400791   +   H1x2_3  = H1x2_3  +     0.75388522027745 * AcceptedCmp10
2400792   +          +     2.63069611253058 * AcceptedCmp20  +     0.30907626174766 *
2400793   +        AcceptedCmp30  +     1.10100873408666 * AcceptedCmp40
2400794   +          +    -1.08824297693055 * AcceptedCmp50  +     1.05059014395924 *
2400795   +        Complain0  +     0.67869922391732 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.75388522027745 * AcceptedCmp10 + 2.63069611253058 * 
AcceptedCmp20 + 0.30907626174766 * AcceptedCmp30 + 1.10100873408666 * AcceptedCmp40 + 
-1.08824297693055 * AcceptedCmp50 + 1.05059014395924 * Complain0 + 0.67869922391732 * 
HigherEducationBinary0 ;
2400796   +   H1x2_4  = H1x2_4  +    -0.22033664091288 * AcceptedCmp10
2400797   +          +     1.34914301916376 * AcceptedCmp20  +    -0.91465085581504 *
2400798   +        AcceptedCmp30  +    -0.19686441685837 * AcceptedCmp40
2400799   +          +     0.10683331864009 * AcceptedCmp50  +    -0.00754824810979 *
2400800   +        Complain0  +     1.52033864172921 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -0.22033664091288 * AcceptedCmp10 + 1.34914301916376 * 
AcceptedCmp20 + -0.91465085581504 * AcceptedCmp30 + -0.19686441685837 * AcceptedCmp40 + 
0.10683331864009 * AcceptedCmp50 + -0.00754824810979 * Complain0 + 1.52033864172921 * 
HigherEducationBinary0 ;
2400801   +   H1x2_5  = H1x2_5  +     0.83049886541915 * AcceptedCmp10
2400802   +          +    -0.74079162208987 * AcceptedCmp20  +    -0.67792505698297 *
2400803   +        AcceptedCmp30  +     0.07081190269168 * AcceptedCmp40
2400804   +          +     0.18720033568684 * AcceptedCmp50  +      2.6531318197812 *
2400805   +        Complain0  +     0.89741230471087 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.83049886541915 * AcceptedCmp10 + -0.74079162208987 * 
AcceptedCmp20 + -0.67792505698297 * AcceptedCmp30 + 0.07081190269168 * AcceptedCmp40 + 
0.18720033568684 * AcceptedCmp50 + 2.6531318197812 * Complain0 + 0.89741230471087 * 
HigherEducationBinary0 ;
2400806   +   H1x2_6  = H1x2_6  +    -0.56781516290501 * AcceptedCmp10
2400807   +          +    -1.51874938874937 * AcceptedCmp20  +     1.28621778326033 *
2400808   +        AcceptedCmp30  +    -0.68769482686243 * AcceptedCmp40
2400809   +          +     0.35592893389946 * AcceptedCmp50  +    -1.30827608061077 *
2400810   +        Complain0  +     0.32980103195099 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + -0.56781516290501 * AcceptedCmp10 + -1.51874938874937 
* AcceptedCmp20 + 1.28621778326033 * AcceptedCmp30 + -0.68769482686243 * AcceptedCmp40 + 
0.35592893389946 * AcceptedCmp50 + -1.30827608061077 * Complain0 + 0.32980103195099 * 
HigherEducationBinary0 ;
2400811   +   H1x2_1  = H1x2_1  +     -1.3799101073197 * Education2n_Cycle
2400812   +          +     0.02501135207931 * EducationBasic  +     1.13490660748682 *
2400813   +        EducationGraduation  +    -0.11344307008943 * EducationMaster
2400814   +          +     0.56030871857835 * Marital_StatusDivorced
2400815   +          +    -1.22448534379831 * Marital_StatusMarried
2400816   +          +     0.78141783495855 * Marital_StatusSingle
2400817   +          +    -1.35807438297575 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -1.3799101073197 * Education2n_Cycle + 
0.02501135207931 * EducationBasic + 1.13490660748682 * EducationGraduation + -0.11344307008943 
* EducationMaster + 0.56030871857835 * Marital_StatusDivorced + -1.22448534379831 * 
Marital_StatusMarried + 0.78141783495855 * Marital_StatusSingle + -1.35807438297575 * 
Marital_StatusTogether ;
2400818   +   H1x2_2  = H1x2_2  +    -0.29912132201198 * Education2n_Cycle
2400819   +          +    -0.97227735746604 * EducationBasic  +     1.05541395347718 *
2400820   +        EducationGraduation  +     0.69607179798453 * EducationMaster
2400821   +          +    -2.63452071552997 * Marital_StatusDivorced
2400822   +          +     0.61829054779121 * Marital_StatusMarried
2400823   +          +    -2.20743370246315 * Marital_StatusSingle
2400824   +          +     0.56930072654252 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.29912132201198 * Education2n_Cycle + 
-0.97227735746604 * EducationBasic + 1.05541395347718 * EducationGraduation + 0.69607179798453 
* EducationMaster + -2.63452071552997 * Marital_StatusDivorced + 0.61829054779121 * 
Marital_StatusMarried + -2.20743370246315 * Marital_StatusSingle + 0.56930072654252 * 
Marital_StatusTogether ;
2400825   +   H1x2_3  = H1x2_3  +     0.65046688904352 * Education2n_Cycle
2400826   +          +     0.03854232912474 * EducationBasic  +     0.59545004622858 *
2400827   +        EducationGraduation  +    -1.68638824011899 * EducationMaster
2400828   +          +      -1.454102516731 * Marital_StatusDivorced
2400829   +          +     0.71488291465759 * Marital_StatusMarried
2400830   +          +     0.96038830049792 * Marital_StatusSingle
2400831   +          +    -0.85244216490853 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.65046688904352 * Education2n_Cycle + 
0.03854232912474 * EducationBasic + 0.59545004622858 * EducationGraduation + -1.68638824011899 
* EducationMaster + -1.454102516731 * Marital_StatusDivorced + 0.71488291465759 * 
Marital_StatusMarried + 0.96038830049792 * Marital_StatusSingle + -0.85244216490853 * 
Marital_StatusTogether ;
2400832   +   H1x2_4  = H1x2_4  +     0.37430673318658 * Education2n_Cycle
2400833   +          +    -0.25373979771478 * EducationBasic  +    -1.65617377693247 *
2400834   +        EducationGraduation  +    -1.12481097095571 * EducationMaster
2400835   +          +    -0.01160394891598 * Marital_StatusDivorced
2400836   +          +    -1.09054636482951 * Marital_StatusMarried
2400837   +          +      0.7793855479379 * Marital_StatusSingle
2400838   +          +    -0.40649435490654 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.37430673318658 * Education2n_Cycle + 
-0.25373979771478 * EducationBasic + -1.65617377693247 * EducationGraduation + 
-1.12481097095571 * EducationMaster + -0.01160394891598 * Marital_StatusDivorced + 
-1.09054636482951 * Marital_StatusMarried + 0.7793855479379 * Marital_StatusSingle + 
-0.40649435490654 * Marital_StatusTogether ;
2400839   +   H1x2_5  = H1x2_5  +     -0.1016827992735 * Education2n_Cycle
2400840   +          +     1.07194596228219 * EducationBasic  +    -1.05800808905557 *
2400841   +        EducationGraduation  +     0.09666597691691 * EducationMaster
2400842   +          +    -0.73414854875115 * Marital_StatusDivorced
2400843   +          +     0.46421425621114 * Marital_StatusMarried
2400844   +          +    -0.54512730625469 * Marital_StatusSingle
2400845   +          +     0.76568726267448 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + -0.1016827992735 * Education2n_Cycle + 
1.07194596228219 * EducationBasic + -1.05800808905557 * EducationGraduation + 0.09666597691691 
* EducationMaster + -0.73414854875115 * Marital_StatusDivorced + 0.46421425621114 * 
Marital_StatusMarried + -0.54512730625469 * Marital_StatusSingle + 0.76568726267448 * 
Marital_StatusTogether ;
2400846   +   H1x2_6  = H1x2_6  +    -1.15957084181454 * Education2n_Cycle
2400847   +          +     0.00847667341235 * EducationBasic  +    -1.58463832529749 *
2400848   +        EducationGraduation  +     0.56518194582557 * EducationMaster
2400849   +          +     0.25131188683384 * Marital_StatusDivorced
2400850   +          +     2.38279806963807 * Marital_StatusMarried
2400851   +          +     0.28897706448348 * Marital_StatusSingle
2400852   +          +     0.89118497255856 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + -1.15957084181454 * Education2n_Cycle + 
0.00847667341235 * EducationBasic + -1.58463832529749 * EducationGraduation + 0.56518194582557 
* EducationMaster + 0.25131188683384 * Marital_StatusDivorced + 2.38279806963807 * 
Marital_StatusMarried + 0.28897706448348 * Marital_StatusSingle + 0.89118497255856 * 
Marital_StatusTogether ;
2400853   +   H1x2_1  =    -1.58113759763481 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -1.58113759763481 + H1x2_1 ;
2400854   +   H1x2_2  =    -1.19307731012977 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -1.19307731012977 + H1x2_2 ;
2400855   +   H1x2_3  =     0.35767811974231 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = 0.35767811974231 + H1x2_3 ;
2400856   +   H1x2_4  =    -0.20241610577527 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.20241610577527 + H1x2_4 ;
2400857   +   H1x2_5  =     0.30120348602955 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 0.30120348602955 + H1x2_5 ;
2400858   +   H1x2_6  =     1.04145053611779 + H1x2_6 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = 1.04145053611779 + H1x2_6 ;
2400859   +   H1x2_7  = 0;
MPRINT(EM_DIAGRAM):   H1x2_7 = 0;
2400860   +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 , H1x2_7
2400861   +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 , 
H1x2_7 );
2400862   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2400863   +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
2400864   +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
2400865   +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
2400866   +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
2400867   +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
2400868   +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
2400869   +   H1x2_4  = EXP(H1x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(H1x2_4 - _MAX_);
2400870   +   _SUM_ = _SUM_ + H1x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_4 ;
2400871   +   H1x2_5  = EXP(H1x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(H1x2_5 - _MAX_);
2400872   +   _SUM_ = _SUM_ + H1x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_5 ;
2400873   +   H1x2_6  = EXP(H1x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(H1x2_6 - _MAX_);
2400874   +   _SUM_ = _SUM_ + H1x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_6 ;
2400875   +   H1x2_7  = EXP(H1x2_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_7 = EXP(H1x2_7 - _MAX_);
2400876   +   _SUM_ = _SUM_ + H1x2_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_7 ;
2400877   +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
2400878   +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
2400879   +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
2400880   +   H1x2_4  = H1x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 / _SUM_;
2400881   +   H1x2_5  = H1x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 / _SUM_;
2400882   +   H1x2_6  = H1x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 / _SUM_;
2400883   +   H1x2_7  = H1x2_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_7 = H1x2_7 / _SUM_;
2400884   +END;
MPRINT(EM_DIAGRAM):   END;
2400885   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2400886   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
2400887   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
2400888   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
2400889   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
2400890   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
2400891   +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
2400892   +   H1x2_7  = .;
MPRINT(EM_DIAGRAM):   H1x2_7 = .;
2400893   +END;
MPRINT(EM_DIAGRAM):   END;
2400894   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2400895   +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
2400896   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2400897   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2400898   +   H1x3_1  =    -0.17891338426869 * S_AcceptedCmpTotal
2400899   +          +     0.25935021287808 * S_Age  +     -0.4211584261256 * S_Frq
2400900   +          +    -1.91007620895221 * S_Income  +     0.38954955842314 *
2400901   +        S_Kidhome  +     0.07674351412771 * S_Mnt  +    -0.00193662324959 *
2400902   +        S_MntFishProducts  +    -0.05912563364557 * S_MntFruits
2400903   +          +     0.34447908349796 * S_MntGoldProds  +      1.8146796379351 *
2400904   +        S_MntMeatProducts  +    -0.28617584915758 * S_MntSweetProducts
2400905   +          +    -0.25003395507837 * S_MntWines  +     2.70698456342857 *
2400906   +        S_MonthsAsCustomer  +     0.61560315312621 * S_NumCatalogPurchases
2400907   +          +     1.11855402225797 * S_NumDealsPurchases
2400908   +          +     0.39150287442005 * S_NumDistPurchases
2400909   +          +     0.00160244551627 * S_NumStorePurchases
2400910   +          +     1.54380043731879 * S_NumWebPurchases
2400911   +          +      0.6462755347813 * S_NumWebVisitsMonth
2400912   +          +      0.3712356571744 * S_RFMstat  +     0.31930000498313 *
2400913   +        S_RMntFrq  +     0.91533450209744 * S_Recency
2400914   +          +    -1.15144971921837 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_1 = -0.17891338426869 * S_AcceptedCmpTotal + 0.25935021287808 * 
S_Age + -0.4211584261256 * S_Frq + -1.91007620895221 * S_Income + 0.38954955842314 * S_Kidhome 
+ 0.07674351412771 * S_Mnt + -0.00193662324959 * S_MntFishProducts + -0.05912563364557 * 
S_MntFruits + 0.34447908349796 * S_MntGoldProds + 1.8146796379351 * S_MntMeatProducts + 
-0.28617584915758 * S_MntSweetProducts + -0.25003395507837 * S_MntWines + 2.70698456342857 * 
S_MonthsAsCustomer + 0.61560315312621 * S_NumCatalogPurchases + 1.11855402225797 * 
S_NumDealsPurchases + 0.39150287442005 * S_NumDistPurchases + 0.00160244551627 * 
S_NumStorePurchases + 1.54380043731879 * S_NumWebPurchases + 0.6462755347813 * 
S_NumWebVisitsMonth + 0.3712356571744 * S_RFMstat + 0.31930000498313 * S_RMntFrq + 
0.91533450209744 * S_Recency + -1.15144971921837 * S_Teenhome ;
2400915   +   H1x3_2  =     0.70342217458269 * S_AcceptedCmpTotal
2400916   +          +     1.00269567168731 * S_Age  +     0.28237778780972 * S_Frq
2400917   +          +     1.85610950568833 * S_Income  +    -0.88627540559449 *
2400918   +        S_Kidhome  +      -0.681406495446 * S_Mnt  +    -0.52884566607488 *
2400919   +        S_MntFishProducts  +    -1.55540056999822 * S_MntFruits
2400920   +          +    -0.86530238267543 * S_MntGoldProds  +     0.50288889191395 *
2400921   +        S_MntMeatProducts  +     0.42795025747297 * S_MntSweetProducts
2400922   +          +     1.65622561769832 * S_MntWines  +    -0.40506757052255 *
2400923   +        S_MonthsAsCustomer  +    -0.45283667973478 * S_NumCatalogPurchases
2400924   +          +     0.01911815525287 * S_NumDealsPurchases
2400925   +          +    -1.07196707915227 * S_NumDistPurchases
2400926   +          +      0.6452048321682 * S_NumStorePurchases
2400927   +          +    -0.15818575353955 * S_NumWebPurchases
2400928   +          +    -0.82586162051382 * S_NumWebVisitsMonth
2400929   +          +     0.35914598433318 * S_RFMstat  +     0.14754646817335 *
2400930   +        S_RMntFrq  +     0.23398669008843 * S_Recency
2400931   +          +      0.1494741245474 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_2 = 0.70342217458269 * S_AcceptedCmpTotal + 1.00269567168731 * 
S_Age + 0.28237778780972 * S_Frq + 1.85610950568833 * S_Income + -0.88627540559449 * S_Kidhome 
+ -0.681406495446 * S_Mnt + -0.52884566607488 * S_MntFishProducts + -1.55540056999822 * 
S_MntFruits + -0.86530238267543 * S_MntGoldProds + 0.50288889191395 * S_MntMeatProducts + 
0.42795025747297 * S_MntSweetProducts + 1.65622561769832 * S_MntWines + -0.40506757052255 * 
S_MonthsAsCustomer + -0.45283667973478 * S_NumCatalogPurchases + 0.01911815525287 * 
S_NumDealsPurchases + -1.07196707915227 * S_NumDistPurchases + 0.6452048321682 * 
S_NumStorePurchases + -0.15818575353955 * S_NumWebPurchases + -0.82586162051382 * 
S_NumWebVisitsMonth + 0.35914598433318 * S_RFMstat + 0.14754646817335 * S_RMntFrq + 
0.23398669008843 * S_Recency + 0.1494741245474 * S_Teenhome ;
2400932   +   H1x3_3  =     0.54929571619315 * S_AcceptedCmpTotal
2400933   +          +      -0.751329127583 * S_Age  +    -0.94592306727941 * S_Frq
2400934   +          +    -1.17625421122138 * S_Income  +     0.74760015734698 *
2400935   +        S_Kidhome  +    -1.31055967085841 * S_Mnt  +     -0.5844789069547 *
2400936   +        S_MntFishProducts  +     0.29563811382096 * S_MntFruits
2400937   +          +      2.0486671645084 * S_MntGoldProds  +      0.4596153519541 *
2400938   +        S_MntMeatProducts  +     0.43182048706593 * S_MntSweetProducts
2400939   +          +     0.06319773540648 * S_MntWines  +     -0.9320658068644 *
2400940   +        S_MonthsAsCustomer  +     0.97208201647088 * S_NumCatalogPurchases
2400941   +          +     1.56893739271853 * S_NumDealsPurchases
2400942   +          +      0.6745865425238 * S_NumDistPurchases
2400943   +          +    -0.26848765783548 * S_NumStorePurchases
2400944   +          +     0.79227081430227 * S_NumWebPurchases
2400945   +          +     0.83054874267768 * S_NumWebVisitsMonth
2400946   +          +    -0.28363014203077 * S_RFMstat  +    -0.71879552423951 *
2400947   +        S_RMntFrq  +     0.80917480816898 * S_Recency
2400948   +          +    -0.52052715034272 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_3 = 0.54929571619315 * S_AcceptedCmpTotal + -0.751329127583 * S_Age 
+ -0.94592306727941 * S_Frq + -1.17625421122138 * S_Income + 0.74760015734698 * S_Kidhome + 
-1.31055967085841 * S_Mnt + -0.5844789069547 * S_MntFishProducts + 0.29563811382096 * 
S_MntFruits + 2.0486671645084 * S_MntGoldProds + 0.4596153519541 * S_MntMeatProducts + 
0.43182048706593 * S_MntSweetProducts + 0.06319773540648 * S_MntWines + -0.9320658068644 * 
S_MonthsAsCustomer + 0.97208201647088 * S_NumCatalogPurchases + 1.56893739271853 * 
S_NumDealsPurchases + 0.6745865425238 * S_NumDistPurchases + -0.26848765783548 * 
S_NumStorePurchases + 0.79227081430227 * S_NumWebPurchases + 0.83054874267768 * 
S_NumWebVisitsMonth + -0.28363014203077 * S_RFMstat + -0.71879552423951 * S_RMntFrq + 
0.80917480816898 * S_Recency + -0.52052715034272 * S_Teenhome ;
2400949   +   H1x3_4  =     1.71480641781959 * S_AcceptedCmpTotal
2400950   +          +    -0.98495603767618 * S_Age  +     -0.0459665945886 * S_Frq
2400951   +          +     1.19396539246615 * S_Income  +     0.51326452746824 *
2400952   +        S_Kidhome  +    -0.22663230333642 * S_Mnt  +     0.27256846012963 *
2400953   +        S_MntFishProducts  +    -0.50661455153622 * S_MntFruits
2400954   +          +     -0.3498057126965 * S_MntGoldProds  +    -2.87000075082987 *
2400955   +        S_MntMeatProducts  +    -0.09413391100844 * S_MntSweetProducts
2400956   +          +     1.15010664811376 * S_MntWines  +    -0.48501392658783 *
2400957   +        S_MonthsAsCustomer  +      0.2688077310392 * S_NumCatalogPurchases
2400958   +          +    -0.23954856030467 * S_NumDealsPurchases
2400959   +          +    -1.61914390483829 * S_NumDistPurchases
2400960   +          +      -1.014570623016 * S_NumStorePurchases
2400961   +          +    -0.36828642098701 * S_NumWebPurchases
2400962   +          +    -0.04976922659227 * S_NumWebVisitsMonth
2400963   +          +     0.87811344320757 * S_RFMstat  +    -1.70999928232532 *
2400964   +        S_RMntFrq  +    -0.40880481304369 * S_Recency
2400965   +          +     0.75806578113158 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_4 = 1.71480641781959 * S_AcceptedCmpTotal + -0.98495603767618 * 
S_Age + -0.0459665945886 * S_Frq + 1.19396539246615 * S_Income + 0.51326452746824 * S_Kidhome 
+ -0.22663230333642 * S_Mnt + 0.27256846012963 * S_MntFishProducts + -0.50661455153622 * 
S_MntFruits + -0.3498057126965 * S_MntGoldProds + -2.87000075082987 * S_MntMeatProducts + 
-0.09413391100844 * S_MntSweetProducts + 1.15010664811376 * S_MntWines + -0.48501392658783 * 
S_MonthsAsCustomer + 0.2688077310392 * S_NumCatalogPurchases + -0.23954856030467 * 
S_NumDealsPurchases + -1.61914390483829 * S_NumDistPurchases + -1.014570623016 * 
S_NumStorePurchases + -0.36828642098701 * S_NumWebPurchases + -0.04976922659227 * 
S_NumWebVisitsMonth + 0.87811344320757 * S_RFMstat + -1.70999928232532 * S_RMntFrq + 
-0.40880481304369 * S_Recency + 0.75806578113158 * S_Teenhome ;
2400966   +   H1x3_5  =    -0.35033091531835 * S_AcceptedCmpTotal
2400967   +          +    -1.18148775203733 * S_Age  +    -0.17374293038138 * S_Frq
2400968   +          +    -0.36680516767012 * S_Income  +     0.57186890691757 *
2400969   +        S_Kidhome  +    -0.02612042491922 * S_Mnt  +     0.84551697375819 *
2400970   +        S_MntFishProducts  +     0.44255296354709 * S_MntFruits
2400971   +          +    -1.35259485807243 * S_MntGoldProds  +      0.3377329409199 *
2400972   +        S_MntMeatProducts  +    -1.06135100840202 * S_MntSweetProducts
2400973   +          +     0.15771394796649 * S_MntWines  +     1.55754960780486 *
2400974   +        S_MonthsAsCustomer  +    -0.76896921785988 * S_NumCatalogPurchases
2400975   +          +     1.00094082424204 * S_NumDealsPurchases
2400976   +          +      0.2724785290725 * S_NumDistPurchases
2400977   +          +     0.13170237783486 * S_NumStorePurchases
2400978   +          +    -1.31447792523743 * S_NumWebPurchases
2400979   +          +    -0.09121088371438 * S_NumWebVisitsMonth
2400980   +          +     1.46860488573551 * S_RFMstat  +     0.46491504994651 *
2400981   +        S_RMntFrq  +      0.6767512513985 * S_Recency
2400982   +          +    -1.74995034763966 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_5 = -0.35033091531835 * S_AcceptedCmpTotal + -1.18148775203733 * 
S_Age + -0.17374293038138 * S_Frq + -0.36680516767012 * S_Income + 0.57186890691757 * 
S_Kidhome + -0.02612042491922 * S_Mnt + 0.84551697375819 * S_MntFishProducts + 
0.44255296354709 * S_MntFruits + -1.35259485807243 * S_MntGoldProds + 0.3377329409199 * 
S_MntMeatProducts + -1.06135100840202 * S_MntSweetProducts + 0.15771394796649 * S_MntWines + 
1.55754960780486 * S_MonthsAsCustomer + -0.76896921785988 * S_NumCatalogPurchases + 
1.00094082424204 * S_NumDealsPurchases + 0.2724785290725 * S_NumDistPurchases + 
0.13170237783486 * S_NumStorePurchases + -1.31447792523743 * S_NumWebPurchases + 
-0.09121088371438 * S_NumWebVisitsMonth + 1.46860488573551 * S_RFMstat + 0.46491504994651 * 
S_RMntFrq + 0.6767512513985 * S_Recency + -1.74995034763966 * S_Teenhome ;
2400983   +   H1x3_6  =     1.05520309715672 * S_AcceptedCmpTotal
2400984   +          +    -1.05930507843633 * S_Age  +     0.07032294102853 * S_Frq
2400985   +          +    -0.05932294137503 * S_Income  +    -1.47206442598932 *
2400986   +        S_Kidhome  +     0.56661112816398 * S_Mnt  +    -0.11340132210258 *
2400987   +        S_MntFishProducts  +    -0.32177484313741 * S_MntFruits
2400988   +          +    -0.32378384178804 * S_MntGoldProds  +     0.00540737819175 *
2400989   +        S_MntMeatProducts  +     0.14834467568566 * S_MntSweetProducts
2400990   +          +    -0.95841169333668 * S_MntWines  +    -0.62902099823048 *
2400991   +        S_MonthsAsCustomer  +    -0.67434201898155 * S_NumCatalogPurchases
2400992   +          +    -0.73198872336344 * S_NumDealsPurchases
2400993   +          +     0.29368958872361 * S_NumDistPurchases
2400994   +          +     1.52772046446908 * S_NumStorePurchases
2400995   +          +    -1.75065469134874 * S_NumWebPurchases
2400996   +          +      0.0264954621772 * S_NumWebVisitsMonth
2400997   +          +    -0.88054137065815 * S_RFMstat  +     0.70371760194946 *
2400998   +        S_RMntFrq  +     1.14219878739476 * S_Recency
2400999   +          +    -1.15240998118906 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_6 = 1.05520309715672 * S_AcceptedCmpTotal + -1.05930507843633 * 
S_Age + 0.07032294102853 * S_Frq + -0.05932294137503 * S_Income + -1.47206442598932 * 
S_Kidhome + 0.56661112816398 * S_Mnt + -0.11340132210258 * S_MntFishProducts + 
-0.32177484313741 * S_MntFruits + -0.32378384178804 * S_MntGoldProds + 0.00540737819175 * 
S_MntMeatProducts + 0.14834467568566 * S_MntSweetProducts + -0.95841169333668 * S_MntWines + 
-0.62902099823048 * S_MonthsAsCustomer + -0.67434201898155 * S_NumCatalogPurchases + 
-0.73198872336344 * S_NumDealsPurchases + 0.29368958872361 * S_NumDistPurchases + 
1.52772046446908 * S_NumStorePurchases + -1.75065469134874 * S_NumWebPurchases + 
0.0264954621772 * S_NumWebVisitsMonth + -0.88054137065815 * S_RFMstat + 0.70371760194946 * 
S_RMntFrq + 1.14219878739476 * S_Recency + -1.15240998118906 * S_Teenhome ;
2401000   +   H1x3_1  = H1x3_1  +     0.60800466481517 * AcceptedCmp10
2401001   +          +     0.33187245535701 * AcceptedCmp20  +    -0.13888343551044 *
2401002   +        AcceptedCmp30  +     0.93663925029857 * AcceptedCmp40
2401003   +          +     1.09340622621085 * AcceptedCmp50  +    -0.49132743156126 *
2401004   +        Complain0  +     0.45196197584946 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 0.60800466481517 * AcceptedCmp10 + 0.33187245535701 * 
AcceptedCmp20 + -0.13888343551044 * AcceptedCmp30 + 0.93663925029857 * AcceptedCmp40 + 
1.09340622621085 * AcceptedCmp50 + -0.49132743156126 * Complain0 + 0.45196197584946 * 
HigherEducationBinary0 ;
2401005   +   H1x3_2  = H1x3_2  +     1.40275485940553 * AcceptedCmp10
2401006   +          +    -0.15035102140746 * AcceptedCmp20  +    -0.53574064147206 *
2401007   +        AcceptedCmp30  +    -1.67324904853563 * AcceptedCmp40
2401008   +          +     0.05636486780046 * AcceptedCmp50  +    -0.39032867538703 *
2401009   +        Complain0  +    -0.74980603736258 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + 1.40275485940553 * AcceptedCmp10 + -0.15035102140746 * 
AcceptedCmp20 + -0.53574064147206 * AcceptedCmp30 + -1.67324904853563 * AcceptedCmp40 + 
0.05636486780046 * AcceptedCmp50 + -0.39032867538703 * Complain0 + -0.74980603736258 * 
HigherEducationBinary0 ;
2401010   +   H1x3_3  = H1x3_3  +     0.26722647672682 * AcceptedCmp10
2401011   +          +      0.6216449242511 * AcceptedCmp20  +     0.76635966126463 *
2401012   +        AcceptedCmp30  +    -2.48978919706551 * AcceptedCmp40
2401013   +          +     0.98619070514978 * AcceptedCmp50  +    -0.19244215041297 *
2401014   +        Complain0  +    -1.19045127506692 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 + 0.26722647672682 * AcceptedCmp10 + 0.6216449242511 * 
AcceptedCmp20 + 0.76635966126463 * AcceptedCmp30 + -2.48978919706551 * AcceptedCmp40 + 
0.98619070514978 * AcceptedCmp50 + -0.19244215041297 * Complain0 + -1.19045127506692 * 
HigherEducationBinary0 ;
2401015   +   H1x3_4  = H1x3_4  +    -1.73915810074841 * AcceptedCmp10
2401016   +          +     0.72244354389321 * AcceptedCmp20  +     1.07200246076684 *
2401017   +        AcceptedCmp30  +     0.24242315318429 * AcceptedCmp40
2401018   +          +     0.48717202781909 * AcceptedCmp50  +    -1.18600714935645 *
2401019   +        Complain0  +     -1.0752062632729 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 + -1.73915810074841 * AcceptedCmp10 + 0.72244354389321 * 
AcceptedCmp20 + 1.07200246076684 * AcceptedCmp30 + 0.24242315318429 * AcceptedCmp40 + 
0.48717202781909 * AcceptedCmp50 + -1.18600714935645 * Complain0 + -1.0752062632729 * 
HigherEducationBinary0 ;
2401020   +   H1x3_5  = H1x3_5  +     1.07972020322696 * AcceptedCmp10
2401021   +          +     0.38275266830165 * AcceptedCmp20  +     0.45959913551609 *
2401022   +        AcceptedCmp30  +    -0.30891288234597 * AcceptedCmp40
2401023   +          +    -0.35568820567134 * AcceptedCmp50  +     -1.8045223309162 *
2401024   +        Complain0  +    -0.29380313969195 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 + 1.07972020322696 * AcceptedCmp10 + 0.38275266830165 * 
AcceptedCmp20 + 0.45959913551609 * AcceptedCmp30 + -0.30891288234597 * AcceptedCmp40 + 
-0.35568820567134 * AcceptedCmp50 + -1.8045223309162 * Complain0 + -0.29380313969195 * 
HigherEducationBinary0 ;
2401025   +   H1x3_6  = H1x3_6  +    -2.40002597755125 * AcceptedCmp10
2401026   +          +     0.61725427642794 * AcceptedCmp20  +      1.3438972982524 *
2401027   +        AcceptedCmp30  +    -0.66766212489049 * AcceptedCmp40
2401028   +          +     1.10709227053258 * AcceptedCmp50  +    -0.98301865424423 *
2401029   +        Complain0  +     0.83512874944952 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_6 = H1x3_6 + -2.40002597755125 * AcceptedCmp10 + 0.61725427642794 * 
AcceptedCmp20 + 1.3438972982524 * AcceptedCmp30 + -0.66766212489049 * AcceptedCmp40 + 
1.10709227053258 * AcceptedCmp50 + -0.98301865424423 * Complain0 + 0.83512874944952 * 
HigherEducationBinary0 ;
2401030   +   H1x3_1  = H1x3_1  +    -0.49604077640433 * Education2n_Cycle
2401031   +          +    -0.60803139475446 * EducationBasic  +     0.39029834300888 *
2401032   +        EducationGraduation  +     1.49476669226441 * EducationMaster
2401033   +          +     0.32207432513904 * Marital_StatusDivorced
2401034   +          +      0.6397913221395 * Marital_StatusMarried
2401035   +          +    -0.25330032559918 * Marital_StatusSingle
2401036   +          +      0.6826963146507 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + -0.49604077640433 * Education2n_Cycle + 
-0.60803139475446 * EducationBasic + 0.39029834300888 * EducationGraduation + 1.49476669226441 
* EducationMaster + 0.32207432513904 * Marital_StatusDivorced + 0.6397913221395 * 
Marital_StatusMarried + -0.25330032559918 * Marital_StatusSingle + 0.6826963146507 * 
Marital_StatusTogether ;
2401037   +   H1x3_2  = H1x3_2  +     0.70727271276171 * Education2n_Cycle
2401038   +          +    -0.74539861835467 * EducationBasic  +    -1.09813520505203 *
2401039   +        EducationGraduation  +      0.0913616986494 * EducationMaster
2401040   +          +     0.79430904713493 * Marital_StatusDivorced
2401041   +          +     2.54456429102799 * Marital_StatusMarried
2401042   +          +     0.59410742352499 * Marital_StatusSingle
2401043   +          +     0.62339810371964 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + 0.70727271276171 * Education2n_Cycle + 
-0.74539861835467 * EducationBasic + -1.09813520505203 * EducationGraduation + 0.0913616986494 
* EducationMaster + 0.79430904713493 * Marital_StatusDivorced + 2.54456429102799 * 
Marital_StatusMarried + 0.59410742352499 * Marital_StatusSingle + 0.62339810371964 * 
Marital_StatusTogether ;
2401044   +   H1x3_3  = H1x3_3  +     0.41739931776571 * Education2n_Cycle
2401045   +          +     0.90042318812458 * EducationBasic  +    -0.30863999735161 *
2401046   +        EducationGraduation  +    -0.07080985966069 * EducationMaster
2401047   +          +    -0.43081775693595 * Marital_StatusDivorced
2401048   +          +    -0.78485102174552 * Marital_StatusMarried
2401049   +          +    -1.56581090110813 * Marital_StatusSingle
2401050   +          +     1.31552735466691 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 + 0.41739931776571 * Education2n_Cycle + 
0.90042318812458 * EducationBasic + -0.30863999735161 * EducationGraduation + 
-0.07080985966069 * EducationMaster + -0.43081775693595 * Marital_StatusDivorced + 
-0.78485102174552 * Marital_StatusMarried + -1.56581090110813 * Marital_StatusSingle + 
1.31552735466691 * Marital_StatusTogether ;
2401051   +   H1x3_4  = H1x3_4  +    -1.03450070870223 * Education2n_Cycle
2401052   +          +     0.12962104594991 * EducationBasic  +    -2.08320982697158 *
2401053   +        EducationGraduation  +     1.01633562820676 * EducationMaster
2401054   +          +     0.38226706522151 * Marital_StatusDivorced
2401055   +          +     0.96666958079914 * Marital_StatusMarried
2401056   +          +    -0.07771259761555 * Marital_StatusSingle
2401057   +          +    -0.15667080607342 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 + -1.03450070870223 * Education2n_Cycle + 
0.12962104594991 * EducationBasic + -2.08320982697158 * EducationGraduation + 1.01633562820676 
* EducationMaster + 0.38226706522151 * Marital_StatusDivorced + 0.96666958079914 * 
Marital_StatusMarried + -0.07771259761555 * Marital_StatusSingle + -0.15667080607342 * 
Marital_StatusTogether ;
2401058   +   H1x3_5  = H1x3_5  +     0.42350784953316 * Education2n_Cycle
2401059   +          +    -0.47409869250049 * EducationBasic  +     0.22752853959532 *
2401060   +        EducationGraduation  +     0.05813076059598 * EducationMaster
2401061   +          +    -0.38325393606947 * Marital_StatusDivorced
2401062   +          +    -1.43303056163299 * Marital_StatusMarried
2401063   +          +     0.11571941757387 * Marital_StatusSingle
2401064   +          +     0.42633042000729 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 + 0.42350784953316 * Education2n_Cycle + 
-0.47409869250049 * EducationBasic + 0.22752853959532 * EducationGraduation + 0.05813076059598 
* EducationMaster + -0.38325393606947 * Marital_StatusDivorced + -1.43303056163299 * 
Marital_StatusMarried + 0.11571941757387 * Marital_StatusSingle + 0.42633042000729 * 
Marital_StatusTogether ;
2401065   +   H1x3_6  = H1x3_6  +     1.11214831415741 * Education2n_Cycle
2401066   +          +      0.8877309144454 * EducationBasic  +     0.87390674413956 *
2401067   +        EducationGraduation  +     0.90837023676142 * EducationMaster
2401068   +          +    -0.36491799765765 * Marital_StatusDivorced
2401069   +          +     0.14142786767503 * Marital_StatusMarried
2401070   +          +     0.22643970468805 * Marital_StatusSingle
2401071   +          +     0.74162870756295 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_6 = H1x3_6 + 1.11214831415741 * Education2n_Cycle + 0.8877309144454 
* EducationBasic + 0.87390674413956 * EducationGraduation + 0.90837023676142 * EducationMaster 
+ -0.36491799765765 * Marital_StatusDivorced + 0.14142786767503 * Marital_StatusMarried + 
0.22643970468805 * Marital_StatusSingle + 0.74162870756295 * Marital_StatusTogether ;
2401072   +   H1x3_1  =        0.17121674502 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.17121674502 + H1x3_1 ;
2401073   +   H1x3_2  =    -0.07858073871761 + H1x3_2 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = -0.07858073871761 + H1x3_2 ;
2401074   +   H1x3_3  =     -0.1687483376367 + H1x3_3 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = -0.1687483376367 + H1x3_3 ;
2401075   +   H1x3_4  =     0.92501573900148 + H1x3_4 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = 0.92501573900148 + H1x3_4 ;
2401076   +   H1x3_5  =    -0.04765930254307 + H1x3_5 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = -0.04765930254307 + H1x3_5 ;
2401077   +   H1x3_6  =     0.29532221854366 + H1x3_6 ;
MPRINT(EM_DIAGRAM):   H1x3_6 = 0.29532221854366 + H1x3_6 ;
2401078   +   H1x3_7  = 0;
MPRINT(EM_DIAGRAM):   H1x3_7 = 0;
2401079   +   _MAX_ = MAX (H1x3_1 , H1x3_2 , H1x3_3 , H1x3_4 , H1x3_5 , H1x3_6 , H1x3_7
2401080   +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x3_1 , H1x3_2 , H1x3_3 , H1x3_4 , H1x3_5 , H1x3_6 , 
H1x3_7 );
2401081   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2401082   +   H1x3_1  = EXP(H1x3_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_1 = EXP(H1x3_1 - _MAX_);
2401083   +   _SUM_ = _SUM_ + H1x3_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_1 ;
2401084   +   H1x3_2  = EXP(H1x3_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_2 = EXP(H1x3_2 - _MAX_);
2401085   +   _SUM_ = _SUM_ + H1x3_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_2 ;
2401086   +   H1x3_3  = EXP(H1x3_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_3 = EXP(H1x3_3 - _MAX_);
2401087   +   _SUM_ = _SUM_ + H1x3_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_3 ;
2401088   +   H1x3_4  = EXP(H1x3_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_4 = EXP(H1x3_4 - _MAX_);
2401089   +   _SUM_ = _SUM_ + H1x3_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_4 ;
The SAS System

2401090   +   H1x3_5  = EXP(H1x3_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_5 = EXP(H1x3_5 - _MAX_);
2401091   +   _SUM_ = _SUM_ + H1x3_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_5 ;
2401092   +   H1x3_6  = EXP(H1x3_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_6 = EXP(H1x3_6 - _MAX_);
2401093   +   _SUM_ = _SUM_ + H1x3_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_6 ;
2401094   +   H1x3_7  = EXP(H1x3_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_7 = EXP(H1x3_7 - _MAX_);
2401095   +   _SUM_ = _SUM_ + H1x3_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_7 ;
2401096   +   H1x3_1  = H1x3_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 / _SUM_;
2401097   +   H1x3_2  = H1x3_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 / _SUM_;
2401098   +   H1x3_3  = H1x3_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 / _SUM_;
2401099   +   H1x3_4  = H1x3_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 / _SUM_;
2401100   +   H1x3_5  = H1x3_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 / _SUM_;
2401101   +   H1x3_6  = H1x3_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_6 = H1x3_6 / _SUM_;
2401102   +   H1x3_7  = H1x3_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_7 = H1x3_7 / _SUM_;
2401103   +END;
MPRINT(EM_DIAGRAM):   END;
2401104   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2401105   +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
2401106   +   H1x3_2  = .;
MPRINT(EM_DIAGRAM):   H1x3_2 = .;
2401107   +   H1x3_3  = .;
MPRINT(EM_DIAGRAM):   H1x3_3 = .;
2401108   +   H1x3_4  = .;
MPRINT(EM_DIAGRAM):   H1x3_4 = .;
2401109   +   H1x3_5  = .;
MPRINT(EM_DIAGRAM):   H1x3_5 = .;
2401110   +   H1x3_6  = .;
MPRINT(EM_DIAGRAM):   H1x3_6 = .;
2401111   +   H1x3_7  = .;
MPRINT(EM_DIAGRAM):   H1x3_7 = .;
2401112   +END;
MPRINT(EM_DIAGRAM):   END;
2401113   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2401114   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
2401115   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2401116   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2401117   +   H2x1_1  =    -0.59397690687549 * H1x1_1  +     0.10790242485513 * H1x1_2
2401118   +          +     1.34957997338147 * H1x1_3  +     0.98783879769831 * H1x1_4
2401119   +          +    -1.73131698691915 * H1x1_5  +    -0.04920424431591 * H1x1_6
2401120   +          +    -0.75229173661277 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -0.59397690687549 * H1x1_1 + 0.10790242485513 * H1x1_2 + 
1.34957997338147 * H1x1_3 + 0.98783879769831 * H1x1_4 + -1.73131698691915 * H1x1_5 + 
-0.04920424431591 * H1x1_6 + -0.75229173661277 * H1x1_7 ;
2401121   +   H2x1_2  =    -0.98729009516736 * H1x1_1  +     0.08491210993613 * H1x1_2
2401122   +          +     0.08027654554575 * H1x1_3  +     0.06189432860142 * H1x1_4
2401123   +          +    -1.23526842489276 * H1x1_5  +    -0.17600169070197 * H1x1_6
2401124   +          +     0.70746372975481 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -0.98729009516736 * H1x1_1 + 0.08491210993613 * H1x1_2 + 
0.08027654554575 * H1x1_3 + 0.06189432860142 * H1x1_4 + -1.23526842489276 * H1x1_5 + 
-0.17600169070197 * H1x1_6 + 0.70746372975481 * H1x1_7 ;
2401125   +   H2x1_3  =    -0.91861478701429 * H1x1_1  +     0.18513565366261 * H1x1_2
2401126   +          +    -0.18629587955963 * H1x1_3  +     0.76802660507034 * H1x1_4
2401127   +          +    -0.47979525657638 * H1x1_5  +     0.06968142422923 * H1x1_6
2401128   +          +     2.18264864713501 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -0.91861478701429 * H1x1_1 + 0.18513565366261 * H1x1_2 + 
-0.18629587955963 * H1x1_3 + 0.76802660507034 * H1x1_4 + -0.47979525657638 * H1x1_5 + 
0.06968142422923 * H1x1_6 + 2.18264864713501 * H1x1_7 ;
2401129   +   H2x1_4  =     1.02774363171853 * H1x1_1  +     1.08006636098136 * H1x1_2
2401130   +          +    -2.27078540572539 * H1x1_3  +    -0.54968089382258 * H1x1_4
2401131   +          +     2.11477012099075 * H1x1_5  +     1.91368944483056 * H1x1_6
2401132   +          +     0.22313799249268 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.02774363171853 * H1x1_1 + 1.08006636098136 * H1x1_2 + 
-2.27078540572539 * H1x1_3 + -0.54968089382258 * H1x1_4 + 2.11477012099075 * H1x1_5 + 
1.91368944483056 * H1x1_6 + 0.22313799249268 * H1x1_7 ;
2401133   +   H2x1_5  =    -1.06933000183778 * H1x1_1  +     0.73081558484415 * H1x1_2
2401134   +          +    -0.78012012951065 * H1x1_3  +     0.81916081920412 * H1x1_4
2401135   +          +    -1.46358608086032 * H1x1_5  +     1.83492870022704 * H1x1_6
2401136   +          +     0.75554005406859 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -1.06933000183778 * H1x1_1 + 0.73081558484415 * H1x1_2 + 
-0.78012012951065 * H1x1_3 + 0.81916081920412 * H1x1_4 + -1.46358608086032 * H1x1_5 + 
1.83492870022704 * H1x1_6 + 0.75554005406859 * H1x1_7 ;
2401137   +   H2x1_6  =    -2.28576277725334 * H1x1_1  +    -0.32249555333061 * H1x1_2
2401138   +          +     3.41388795688866 * H1x1_3  +     3.30305437699117 * H1x1_4
2401139   +          +    -1.49237136034665 * H1x1_5  +    -1.64329313023006 * H1x1_6
2401140   +          +     3.08746595768905 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = -2.28576277725334 * H1x1_1 + -0.32249555333061 * H1x1_2 + 
3.41388795688866 * H1x1_3 + 3.30305437699117 * H1x1_4 + -1.49237136034665 * H1x1_5 + 
-1.64329313023006 * H1x1_6 + 3.08746595768905 * H1x1_7 ;
2401141   +   H2x1_1  = H2x1_1  +    -2.56424783943845 * H1x2_1
2401142   +          +    -1.00213973107436 * H1x2_2  +    -0.47445930434013 * H1x2_3
2401143   +          +    -1.62372689856618 * H1x2_4  +     -1.1856250348479 * H1x2_5
2401144   +          +     0.04266758405533 * H1x2_6  +    -0.60071538153471 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -2.56424783943845 * H1x2_1 + -1.00213973107436 * 
H1x2_2 + -0.47445930434013 * H1x2_3 + -1.62372689856618 * H1x2_4 + -1.1856250348479 * H1x2_5 + 
0.04266758405533 * H1x2_6 + -0.60071538153471 * H1x2_7 ;
2401145   +   H2x1_2  = H2x1_2  +     0.00935939453146 * H1x2_1
2401146   +          +     0.55542862749222 * H1x2_2  +     -0.6066128025675 * H1x2_3
2401147   +          +    -0.53196514301497 * H1x2_4  +    -1.40549473181231 * H1x2_5
2401148   +          +    -0.08595621526876 * H1x2_6  +    -1.03953618328756 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.00935939453146 * H1x2_1 + 0.55542862749222 * H1x2_2 
+ -0.6066128025675 * H1x2_3 + -0.53196514301497 * H1x2_4 + -1.40549473181231 * H1x2_5 + 
-0.08595621526876 * H1x2_6 + -1.03953618328756 * H1x2_7 ;
2401149   +   H2x1_3  = H2x1_3  +    -1.41069312035355 * H1x2_1
2401150   +          +     0.56124490780446 * H1x2_2  +    -0.00472279335297 * H1x2_3
2401151   +          +    -1.10441771442377 * H1x2_4  +    -0.27090019786185 * H1x2_5
2401152   +          +    -0.15206855618217 * H1x2_6  +     -1.6035395520507 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -1.41069312035355 * H1x2_1 + 0.56124490780446 * H1x2_2 
+ -0.00472279335297 * H1x2_3 + -1.10441771442377 * H1x2_4 + -0.27090019786185 * H1x2_5 + 
-0.15206855618217 * H1x2_6 + -1.6035395520507 * H1x2_7 ;
2401153   +   H2x1_4  = H2x1_4  +    -0.55045399339183 * H1x2_1
2401154   +          +     0.02477552373088 * H1x2_2  +     0.19400769235958 * H1x2_3
2401155   +          +    -0.38264537483702 * H1x2_4  +     0.63479720884458 * H1x2_5
2401156   +          +    -0.60194629301645 * H1x2_6  +    -0.83490097285651 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + -0.55045399339183 * H1x2_1 + 0.02477552373088 * H1x2_2 
+ 0.19400769235958 * H1x2_3 + -0.38264537483702 * H1x2_4 + 0.63479720884458 * H1x2_5 + 
-0.60194629301645 * H1x2_6 + -0.83490097285651 * H1x2_7 ;
2401157   +   H2x1_5  = H2x1_5  +    -1.03176133074695 * H1x2_1
2401158   +          +    -0.59926889064506 * H1x2_2  +    -1.07077012847053 * H1x2_3
2401159   +          +    -1.18998920291096 * H1x2_4  +     0.39150574258439 * H1x2_5
2401160   +          +     0.05580574741832 * H1x2_6  +    -0.32272109045259 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + -1.03176133074695 * H1x2_1 + -0.59926889064506 * 
H1x2_2 + -1.07077012847053 * H1x2_3 + -1.18998920291096 * H1x2_4 + 0.39150574258439 * H1x2_5 + 
0.05580574741832 * H1x2_6 + -0.32272109045259 * H1x2_7 ;
2401161   +   H2x1_6  = H2x1_6  +    -0.61952040538587 * H1x2_1
2401162   +          +     0.35510185028829 * H1x2_2  +    -0.23901935720129 * H1x2_3
2401163   +          +     0.31752417497209 * H1x2_4  +    -1.20101515562967 * H1x2_5
2401164   +          +     0.95004398218762 * H1x2_6  +    -0.60363955740244 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + -0.61952040538587 * H1x2_1 + 0.35510185028829 * H1x2_2 
+ -0.23901935720129 * H1x2_3 + 0.31752417497209 * H1x2_4 + -1.20101515562967 * H1x2_5 + 
0.95004398218762 * H1x2_6 + -0.60363955740244 * H1x2_7 ;
2401165   +   H2x1_1  = H2x1_1  +     0.74378922258523 * H1x3_1
2401166   +          +      0.4693103426831 * H1x3_2  +     0.82071786194731 * H1x3_3
2401167   +          +     0.46432194238141 * H1x3_4  +    -1.39760250161206 * H1x3_5
2401168   +          +     0.68725250578779 * H1x3_6  +    -0.98986331205144 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 0.74378922258523 * H1x3_1 + 0.4693103426831 * H1x3_2 + 
0.82071786194731 * H1x3_3 + 0.46432194238141 * H1x3_4 + -1.39760250161206 * H1x3_5 + 
0.68725250578779 * H1x3_6 + -0.98986331205144 * H1x3_7 ;
2401169   +   H2x1_2  = H2x1_2  +     0.48406734142754 * H1x3_1
2401170   +          +     1.24032575331626 * H1x3_2  +     0.10072816620895 * H1x3_3
2401171   +          +     -2.4915795108808 * H1x3_4  +    -1.20085587739472 * H1x3_5
2401172   +          +     2.57480977795816 * H1x3_6  +    -0.36127801521801 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.48406734142754 * H1x3_1 + 1.24032575331626 * H1x3_2 
+ 0.10072816620895 * H1x3_3 + -2.4915795108808 * H1x3_4 + -1.20085587739472 * H1x3_5 + 
2.57480977795816 * H1x3_6 + -0.36127801521801 * H1x3_7 ;
2401173   +   H2x1_3  = H2x1_3  +    -0.29392518978638 * H1x3_1
2401174   +          +     0.02884163093827 * H1x3_2  +     -0.7595494999576 * H1x3_3
2401175   +          +     0.32536537321799 * H1x3_4  +    -0.01283695014976 * H1x3_5
2401176   +          +     0.76895275927405 * H1x3_6  +     -0.2802859993784 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -0.29392518978638 * H1x3_1 + 0.02884163093827 * H1x3_2 
+ -0.7595494999576 * H1x3_3 + 0.32536537321799 * H1x3_4 + -0.01283695014976 * H1x3_5 + 
0.76895275927405 * H1x3_6 + -0.2802859993784 * H1x3_7 ;
2401177   +   H2x1_4  = H2x1_4  +     2.19833784150068 * H1x3_1
2401178   +          +     0.25528651098746 * H1x3_2  +    -0.72296156297186 * H1x3_3
2401179   +          +    -0.14360138590872 * H1x3_4  +     0.77657569331577 * H1x3_5
2401180   +          +    -1.57969278343415 * H1x3_6  +    -0.92288304588247 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 2.19833784150068 * H1x3_1 + 0.25528651098746 * H1x3_2 
+ -0.72296156297186 * H1x3_3 + -0.14360138590872 * H1x3_4 + 0.77657569331577 * H1x3_5 + 
-1.57969278343415 * H1x3_6 + -0.92288304588247 * H1x3_7 ;
2401181   +   H2x1_5  = H2x1_5  +     2.11753865409831 * H1x3_1
2401182   +          +     0.83654766112935 * H1x3_2  +     0.97472534941535 * H1x3_3
2401183   +          +     1.35030042962655 * H1x3_4  +     1.24680664824079 * H1x3_5
2401184   +          +     0.19234112612264 * H1x3_6  +    -0.90680244689294 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 2.11753865409831 * H1x3_1 + 0.83654766112935 * H1x3_2 
+ 0.97472534941535 * H1x3_3 + 1.35030042962655 * H1x3_4 + 1.24680664824079 * H1x3_5 + 
0.19234112612264 * H1x3_6 + -0.90680244689294 * H1x3_7 ;
2401185   +   H2x1_6  = H2x1_6  +     2.07923724911848 * H1x3_1
2401186   +          +     1.62526758922217 * H1x3_2  +    -0.68837627923045 * H1x3_3
2401187   +          +    -0.21127837456631 * H1x3_4  +    -1.47138526111866 * H1x3_5
2401188   +          +    -0.52275521204408 * H1x3_6  +    -0.36639952580044 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + 2.07923724911848 * H1x3_1 + 1.62526758922217 * H1x3_2 
+ -0.68837627923045 * H1x3_3 + -0.21127837456631 * H1x3_4 + -1.47138526111866 * H1x3_5 + 
-0.52275521204408 * H1x3_6 + -0.36639952580044 * H1x3_7 ;
2401189   +   H2x1_1  =    -1.05059672372056 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -1.05059672372056 + H2x1_1 ;
2401190   +   H2x1_2  =    -1.18404209429335 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -1.18404209429335 + H2x1_2 ;
2401191   +   H2x1_3  =    -0.76285494175137 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -0.76285494175137 + H2x1_3 ;
2401192   +   H2x1_4  =     2.22362261707253 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 2.22362261707253 + H2x1_4 ;
2401193   +   H2x1_5  =    -0.98793149966854 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -0.98793149966854 + H2x1_5 ;
2401194   +   H2x1_6  =     1.51370254076672 + H2x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.51370254076672 + H2x1_6 ;
2401195   +   H2x1_7  = 0;
MPRINT(EM_DIAGRAM):   H2x1_7 = 0;
2401196   +   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 , H2x1_6 , H2x1_7
2401197   +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 , H2x1_6 , 
H2x1_7 );
2401198   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2401199   +   H2x1_1  = EXP(H2x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_1 = EXP(H2x1_1 - _MAX_);
2401200   +   _SUM_ = _SUM_ + H2x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_1 ;
2401201   +   H2x1_2  = EXP(H2x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_2 = EXP(H2x1_2 - _MAX_);
2401202   +   _SUM_ = _SUM_ + H2x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_2 ;
2401203   +   H2x1_3  = EXP(H2x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_3 = EXP(H2x1_3 - _MAX_);
2401204   +   _SUM_ = _SUM_ + H2x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_3 ;
2401205   +   H2x1_4  = EXP(H2x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_4 = EXP(H2x1_4 - _MAX_);
2401206   +   _SUM_ = _SUM_ + H2x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_4 ;
2401207   +   H2x1_5  = EXP(H2x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_5 = EXP(H2x1_5 - _MAX_);
2401208   +   _SUM_ = _SUM_ + H2x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_5 ;
2401209   +   H2x1_6  = EXP(H2x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_6 = EXP(H2x1_6 - _MAX_);
2401210   +   _SUM_ = _SUM_ + H2x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_6 ;
2401211   +   H2x1_7  = EXP(H2x1_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_7 = EXP(H2x1_7 - _MAX_);
2401212   +   _SUM_ = _SUM_ + H2x1_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_7 ;
2401213   +   H2x1_1  = H2x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 / _SUM_;
2401214   +   H2x1_2  = H2x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 / _SUM_;
2401215   +   H2x1_3  = H2x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 / _SUM_;
2401216   +   H2x1_4  = H2x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 / _SUM_;
2401217   +   H2x1_5  = H2x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 / _SUM_;
2401218   +   H2x1_6  = H2x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 / _SUM_;
2401219   +   H2x1_7  = H2x1_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_7 = H2x1_7 / _SUM_;
2401220   +END;
MPRINT(EM_DIAGRAM):   END;
2401221   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2401222   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
2401223   +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
2401224   +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
2401225   +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
2401226   +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
2401227   +   H2x1_6  = .;
MPRINT(EM_DIAGRAM):   H2x1_6 = .;
2401228   +   H2x1_7  = .;
MPRINT(EM_DIAGRAM):   H2x1_7 = .;
2401229   +END;
MPRINT(EM_DIAGRAM):   END;
2401230   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2401231   +*** Writing the Node H2x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x2_ ;
2401232   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2401233   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2401234   +   H2x2_1  =    -0.47079896252387 * H1x1_1  +      0.6132734714958 * H1x1_2
2401235   +          +     1.50300753820512 * H1x1_3  +     -0.1812621169129 * H1x1_4
2401236   +          +    -0.18531614991208 * H1x1_5  +     -0.2905105845089 * H1x1_6
2401237   +          +     1.33158539183491 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = -0.47079896252387 * H1x1_1 + 0.6132734714958 * H1x1_2 + 
1.50300753820512 * H1x1_3 + -0.1812621169129 * H1x1_4 + -0.18531614991208 * H1x1_5 + 
-0.2905105845089 * H1x1_6 + 1.33158539183491 * H1x1_7 ;
2401238   +   H2x2_2  =    -1.90834701790953 * H1x1_1  +      0.6177658514697 * H1x1_2
2401239   +          +     0.36465199316418 * H1x1_3  +     0.85911870587838 * H1x1_4
2401240   +          +     0.02147610114602 * H1x1_5  +     0.32326590534391 * H1x1_6
2401241   +          +    -1.04241581652278 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = -1.90834701790953 * H1x1_1 + 0.6177658514697 * H1x1_2 + 
0.36465199316418 * H1x1_3 + 0.85911870587838 * H1x1_4 + 0.02147610114602 * H1x1_5 + 
0.32326590534391 * H1x1_6 + -1.04241581652278 * H1x1_7 ;
2401242   +   H2x2_3  =       0.471130277999 * H1x1_1  +     0.96694465336161 * H1x1_2
2401243   +          +       0.141582035067 * H1x1_3  +     0.53325844993783 * H1x1_4
2401244   +          +     -0.0659115060565 * H1x1_5  +     0.38141753021852 * H1x1_6
2401245   +          +    -1.14139437080586 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = 0.471130277999 * H1x1_1 + 0.96694465336161 * H1x1_2 + 
0.141582035067 * H1x1_3 + 0.53325844993783 * H1x1_4 + -0.0659115060565 * H1x1_5 + 
0.38141753021852 * H1x1_6 + -1.14139437080586 * H1x1_7 ;
2401246   +   H2x2_4  =     0.97070926632973 * H1x1_1  +    -0.13619191199121 * H1x1_2
2401247   +          +       0.111155554391 * H1x1_3  +    -0.50119055939436 * H1x1_4
2401248   +          +     -0.4478264228864 * H1x1_5  +    -0.07373167561096 * H1x1_6
2401249   +          +    -0.48838853015257 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = 0.97070926632973 * H1x1_1 + -0.13619191199121 * H1x1_2 + 
0.111155554391 * H1x1_3 + -0.50119055939436 * H1x1_4 + -0.4478264228864 * H1x1_5 + 
-0.07373167561096 * H1x1_6 + -0.48838853015257 * H1x1_7 ;
2401250   +   H2x2_5  =    -0.97151785477215 * H1x1_1  +     0.21189203541458 * H1x1_2
2401251   +          +    -0.19596886882434 * H1x1_3  +      1.3474130560719 * H1x1_4
2401252   +          +     1.73119417991798 * H1x1_5  +    -0.03726270753922 * H1x1_6
2401253   +          +    -1.41850405567364 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = -0.97151785477215 * H1x1_1 + 0.21189203541458 * H1x1_2 + 
-0.19596886882434 * H1x1_3 + 1.3474130560719 * H1x1_4 + 1.73119417991798 * H1x1_5 + 
-0.03726270753922 * H1x1_6 + -1.41850405567364 * H1x1_7 ;
2401254   +   H2x2_6  =     0.64188298957992 * H1x1_1  +     0.87835723870887 * H1x1_2
2401255   +          +     0.65705195530326 * H1x1_3  +    -1.37039626769544 * H1x1_4
2401256   +          +    -0.32238737127781 * H1x1_5  +     0.33986547881641 * H1x1_6
2401257   +          +    -0.39788950643812 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = 0.64188298957992 * H1x1_1 + 0.87835723870887 * H1x1_2 + 
0.65705195530326 * H1x1_3 + -1.37039626769544 * H1x1_4 + -0.32238737127781 * H1x1_5 + 
0.33986547881641 * H1x1_6 + -0.39788950643812 * H1x1_7 ;
2401258   +   H2x2_1  = H2x2_1  +    -0.69934298550944 * H1x2_1
2401259   +          +    -0.34972890643898 * H1x2_2  +     0.13067071374168 * H1x2_3
2401260   +          +    -0.35163870866778 * H1x2_4  +     0.68739106758866 * H1x2_5
2401261   +          +    -0.13482628170329 * H1x2_6  +    -0.03659282127619 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -0.69934298550944 * H1x2_1 + -0.34972890643898 * 
H1x2_2 + 0.13067071374168 * H1x2_3 + -0.35163870866778 * H1x2_4 + 0.68739106758866 * H1x2_5 + 
-0.13482628170329 * H1x2_6 + -0.03659282127619 * H1x2_7 ;
2401262   +   H2x2_2  = H2x2_2  +    -0.16537065948373 * H1x2_1
2401263   +          +     1.88602375412723 * H1x2_2  +     0.00246313998608 * H1x2_3
2401264   +          +    -0.38678545162214 * H1x2_4  +     1.62314892910576 * H1x2_5
2401265   +          +     1.14369813266427 * H1x2_6  +    -0.04547589616076 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + -0.16537065948373 * H1x2_1 + 1.88602375412723 * H1x2_2 
+ 0.00246313998608 * H1x2_3 + -0.38678545162214 * H1x2_4 + 1.62314892910576 * H1x2_5 + 
1.14369813266427 * H1x2_6 + -0.04547589616076 * H1x2_7 ;
2401266   +   H2x2_3  = H2x2_3  +     0.25040248389011 * H1x2_1
2401267   +          +    -1.56534319969402 * H1x2_2  +     0.07686150326519 * H1x2_3
2401268   +          +     -0.9279505919723 * H1x2_4  +    -0.40426942169792 * H1x2_5
2401269   +          +      0.0625082015929 * H1x2_6  +    -1.06140294711643 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + 0.25040248389011 * H1x2_1 + -1.56534319969402 * H1x2_2 
+ 0.07686150326519 * H1x2_3 + -0.9279505919723 * H1x2_4 + -0.40426942169792 * H1x2_5 + 
0.0625082015929 * H1x2_6 + -1.06140294711643 * H1x2_7 ;
2401270   +   H2x2_4  = H2x2_4  +     -0.4384763018657 * H1x2_1
2401271   +          +    -1.45966734038116 * H1x2_2  +      -2.034771072409 * H1x2_3
2401272   +          +    -0.09055740067076 * H1x2_4  +     1.51504299287048 * H1x2_5
2401273   +          +     0.15439799867788 * H1x2_6  +    -1.11828371545771 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + -0.4384763018657 * H1x2_1 + -1.45966734038116 * H1x2_2 
+ -2.034771072409 * H1x2_3 + -0.09055740067076 * H1x2_4 + 1.51504299287048 * H1x2_5 + 
0.15439799867788 * H1x2_6 + -1.11828371545771 * H1x2_7 ;
2401274   +   H2x2_5  = H2x2_5  +     1.25750321874643 * H1x2_1
2401275   +          +    -0.65639925770112 * H1x2_2  +     -1.7659580690496 * H1x2_3
2401276   +          +       0.375442412611 * H1x2_4  +     0.00802128415855 * H1x2_5
2401277   +          +     0.75342656671485 * H1x2_6  +     1.64939805941174 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 + 1.25750321874643 * H1x2_1 + -0.65639925770112 * H1x2_2 
+ -1.7659580690496 * H1x2_3 + 0.375442412611 * H1x2_4 + 0.00802128415855 * H1x2_5 + 
0.75342656671485 * H1x2_6 + 1.64939805941174 * H1x2_7 ;
2401278   +   H2x2_6  = H2x2_6  +     1.32293752617916 * H1x2_1
2401279   +          +     0.48969975153948 * H1x2_2  +    -0.72928783660254 * H1x2_3
2401280   +          +     0.84727905047749 * H1x2_4  +     0.04670520107938 * H1x2_5
2401281   +          +     2.02862934142232 * H1x2_6  +    -0.56510756043393 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = H2x2_6 + 1.32293752617916 * H1x2_1 + 0.48969975153948 * H1x2_2 
+ -0.72928783660254 * H1x2_3 + 0.84727905047749 * H1x2_4 + 0.04670520107938 * H1x2_5 + 
2.02862934142232 * H1x2_6 + -0.56510756043393 * H1x2_7 ;
2401282   +   H2x2_1  = H2x2_1  +       1.744725276854 * H1x3_1
2401283   +          +     0.13060858789431 * H1x3_2  +    -0.96737787454303 * H1x3_3
2401284   +          +    -0.33966254732699 * H1x3_4  +     2.39360262119688 * H1x3_5
2401285   +          +     2.58016170780679 * H1x3_6  +    -0.61611732156494 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + 1.744725276854 * H1x3_1 + 0.13060858789431 * H1x3_2 + 
-0.96737787454303 * H1x3_3 + -0.33966254732699 * H1x3_4 + 2.39360262119688 * H1x3_5 + 
2.58016170780679 * H1x3_6 + -0.61611732156494 * H1x3_7 ;
2401286   +   H2x2_2  = H2x2_2  +    -0.81180308935434 * H1x3_1
2401287   +          +    -1.15566778124471 * H1x3_2  +     0.08550916456261 * H1x3_3
2401288   +          +     0.54919117407314 * H1x3_4  +     0.18927188150893 * H1x3_5
2401289   +          +    -0.15464567766004 * H1x3_6  +     0.22152383228096 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + -0.81180308935434 * H1x3_1 + -1.15566778124471 * 
H1x3_2 + 0.08550916456261 * H1x3_3 + 0.54919117407314 * H1x3_4 + 0.18927188150893 * H1x3_5 + 
-0.15464567766004 * H1x3_6 + 0.22152383228096 * H1x3_7 ;
2401290   +   H2x2_3  = H2x2_3  +    -0.57155391194888 * H1x3_1
2401291   +          +    -0.80109748621438 * H1x3_2  +     -1.0755749661031 * H1x3_3
2401292   +          +     1.03082070302539 * H1x3_4  +    -2.00320570042417 * H1x3_5
2401293   +          +    -1.96298435256616 * H1x3_6  +     1.02097262601001 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + -0.57155391194888 * H1x3_1 + -0.80109748621438 * 
H1x3_2 + -1.0755749661031 * H1x3_3 + 1.03082070302539 * H1x3_4 + -2.00320570042417 * H1x3_5 + 
-1.96298435256616 * H1x3_6 + 1.02097262601001 * H1x3_7 ;
2401294   +   H2x2_4  = H2x2_4  +     0.24801772968599 * H1x3_1
2401295   +          +    -2.13175914157416 * H1x3_2  +    -0.52172370749235 * H1x3_3
2401296   +          +     2.04158456409986 * H1x3_4  +     1.02332318578438 * H1x3_5
2401297   +          +      -0.428263055638 * H1x3_6  +    -0.10602300040145 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + 0.24801772968599 * H1x3_1 + -2.13175914157416 * H1x3_2 
+ -0.52172370749235 * H1x3_3 + 2.04158456409986 * H1x3_4 + 1.02332318578438 * H1x3_5 + 
-0.428263055638 * H1x3_6 + -0.10602300040145 * H1x3_7 ;
2401298   +   H2x2_5  = H2x2_5  +    -1.00177979562809 * H1x3_1
2401299   +          +    -0.45285333413007 * H1x3_2  +    -0.35882884863392 * H1x3_3
2401300   +          +     0.23001711273663 * H1x3_4  +     0.77235765656369 * H1x3_5
2401301   +          +    -0.04383242140243 * H1x3_6  +    -0.25926963615252 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 + -1.00177979562809 * H1x3_1 + -0.45285333413007 * 
H1x3_2 + -0.35882884863392 * H1x3_3 + 0.23001711273663 * H1x3_4 + 0.77235765656369 * H1x3_5 + 
-0.04383242140243 * H1x3_6 + -0.25926963615252 * H1x3_7 ;
2401302   +   H2x2_6  = H2x2_6  +     0.84797826043534 * H1x3_1
2401303   +          +    -0.46927154831713 * H1x3_2  +    -1.09865845985096 * H1x3_3
2401304   +          +     0.59699123454307 * H1x3_4  +     1.59564014754161 * H1x3_5
2401305   +          +     1.33413776227036 * H1x3_6  +     0.33047800872361 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = H2x2_6 + 0.84797826043534 * H1x3_1 + -0.46927154831713 * H1x3_2 
+ -1.09865845985096 * H1x3_3 + 0.59699123454307 * H1x3_4 + 1.59564014754161 * H1x3_5 + 
1.33413776227036 * H1x3_6 + 0.33047800872361 * H1x3_7 ;
2401306   +   H2x2_1  =    -3.05344936388855 + H2x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = -3.05344936388855 + H2x2_1 ;
2401307   +   H2x2_2  =     0.31382645894355 + H2x2_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = 0.31382645894355 + H2x2_2 ;
2401308   +   H2x2_3  =     0.31718668306888 + H2x2_3 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = 0.31718668306888 + H2x2_3 ;
2401309   +   H2x2_4  =    -0.72340666209054 + H2x2_4 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = -0.72340666209054 + H2x2_4 ;
2401310   +   H2x2_5  =    -0.59585228872544 + H2x2_5 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = -0.59585228872544 + H2x2_5 ;
2401311   +   H2x2_6  =    -1.34027540207713 + H2x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = -1.34027540207713 + H2x2_6 ;
2401312   +   H2x2_7  = 0;
MPRINT(EM_DIAGRAM):   H2x2_7 = 0;
2401313   +   _MAX_ = MAX (H2x2_1 , H2x2_2 , H2x2_3 , H2x2_4 , H2x2_5 , H2x2_6 , H2x2_7
2401314   +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x2_1 , H2x2_2 , H2x2_3 , H2x2_4 , H2x2_5 , H2x2_6 , 
H2x2_7 );
2401315   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2401316   +   H2x2_1  = EXP(H2x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_1 = EXP(H2x2_1 - _MAX_);
2401317   +   _SUM_ = _SUM_ + H2x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_1 ;
2401318   +   H2x2_2  = EXP(H2x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_2 = EXP(H2x2_2 - _MAX_);
2401319   +   _SUM_ = _SUM_ + H2x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_2 ;
2401320   +   H2x2_3  = EXP(H2x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_3 = EXP(H2x2_3 - _MAX_);
2401321   +   _SUM_ = _SUM_ + H2x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_3 ;
2401322   +   H2x2_4  = EXP(H2x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_4 = EXP(H2x2_4 - _MAX_);
2401323   +   _SUM_ = _SUM_ + H2x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_4 ;
2401324   +   H2x2_5  = EXP(H2x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_5 = EXP(H2x2_5 - _MAX_);
2401325   +   _SUM_ = _SUM_ + H2x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_5 ;
2401326   +   H2x2_6  = EXP(H2x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_6 = EXP(H2x2_6 - _MAX_);
2401327   +   _SUM_ = _SUM_ + H2x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_6 ;
2401328   +   H2x2_7  = EXP(H2x2_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_7 = EXP(H2x2_7 - _MAX_);
2401329   +   _SUM_ = _SUM_ + H2x2_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_7 ;
2401330   +   H2x2_1  = H2x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 / _SUM_;
2401331   +   H2x2_2  = H2x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 / _SUM_;
2401332   +   H2x2_3  = H2x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 / _SUM_;
2401333   +   H2x2_4  = H2x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 / _SUM_;
2401334   +   H2x2_5  = H2x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 / _SUM_;
2401335   +   H2x2_6  = H2x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_6 = H2x2_6 / _SUM_;
2401336   +   H2x2_7  = H2x2_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_7 = H2x2_7 / _SUM_;
2401337   +END;
MPRINT(EM_DIAGRAM):   END;
2401338   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2401339   +   H2x2_1  = .;
MPRINT(EM_DIAGRAM):   H2x2_1 = .;
2401340   +   H2x2_2  = .;
MPRINT(EM_DIAGRAM):   H2x2_2 = .;
2401341   +   H2x2_3  = .;
MPRINT(EM_DIAGRAM):   H2x2_3 = .;
2401342   +   H2x2_4  = .;
MPRINT(EM_DIAGRAM):   H2x2_4 = .;
2401343   +   H2x2_5  = .;
MPRINT(EM_DIAGRAM):   H2x2_5 = .;
2401344   +   H2x2_6  = .;
MPRINT(EM_DIAGRAM):   H2x2_6 = .;
2401345   +   H2x2_7  = .;
MPRINT(EM_DIAGRAM):   H2x2_7 = .;
2401346   +END;
MPRINT(EM_DIAGRAM):   END;
2401347   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2401348   +*** Writing the Node H3x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x1_ ;
2401349   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2401350   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2401351   +   H3x1_1  =    -0.39436867680464 * H2x1_1  +    -0.20604911710368 * H2x1_2
2401352   +          +     0.29458107927185 * H2x1_3  +     0.66102662477481 * H2x1_4
2401353   +          +     0.62143406345506 * H2x1_5  +     2.63969484891539 * H2x1_6
2401354   +          +     2.03785323055294 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = -0.39436867680464 * H2x1_1 + -0.20604911710368 * H2x1_2 + 
0.29458107927185 * H2x1_3 + 0.66102662477481 * H2x1_4 + 0.62143406345506 * H2x1_5 + 
2.63969484891539 * H2x1_6 + 2.03785323055294 * H2x1_7 ;
2401355   +   H3x1_2  =     0.14668618790671 * H2x1_1  +     0.53251535375334 * H2x1_2
2401356   +          +     1.73802487245889 * H2x1_3  +    -0.48818058655944 * H2x1_4
2401357   +          +     -0.6987810213409 * H2x1_5  +     1.61216865707221 * H2x1_6
2401358   +          +     0.02086486846601 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = 0.14668618790671 * H2x1_1 + 0.53251535375334 * H2x1_2 + 
1.73802487245889 * H2x1_3 + -0.48818058655944 * H2x1_4 + -0.6987810213409 * H2x1_5 + 
1.61216865707221 * H2x1_6 + 0.02086486846601 * H2x1_7 ;
2401359   +   H3x1_3  =    -1.14054963328594 * H2x1_1  +    -0.75433574423253 * H2x1_2
2401360   +          +     0.06268113862558 * H2x1_3  +     -0.3981826777811 * H2x1_4
2401361   +          +    -0.04081627474016 * H2x1_5  +    -0.18547979458266 * H2x1_6
2401362   +          +     0.40248247309716 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = -1.14054963328594 * H2x1_1 + -0.75433574423253 * H2x1_2 + 
0.06268113862558 * H2x1_3 + -0.3981826777811 * H2x1_4 + -0.04081627474016 * H2x1_5 + 
-0.18547979458266 * H2x1_6 + 0.40248247309716 * H2x1_7 ;
2401363   +   H3x1_4  =    -0.41046431364634 * H2x1_1  +     0.53558649664528 * H2x1_2
2401364   +          +     0.25426413492282 * H2x1_3  +     2.32537388539524 * H2x1_4
2401365   +          +    -0.95624400041487 * H2x1_5  +     -2.1423043357326 * H2x1_6
2401366   +          +     0.70189203885946 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = -0.41046431364634 * H2x1_1 + 0.53558649664528 * H2x1_2 + 
0.25426413492282 * H2x1_3 + 2.32537388539524 * H2x1_4 + -0.95624400041487 * H2x1_5 + 
-2.1423043357326 * H2x1_6 + 0.70189203885946 * H2x1_7 ;
2401367   +   H3x1_5  =    -0.21139932639331 * H2x1_1  +      0.8853172209881 * H2x1_2
2401368   +          +    -0.23025284278478 * H2x1_3  +     1.30433450594503 * H2x1_4
2401369   +          +     1.26145590014333 * H2x1_5  +     0.63126627865104 * H2x1_6
2401370   +          +    -1.88455429451452 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = -0.21139932639331 * H2x1_1 + 0.8853172209881 * H2x1_2 + 
-0.23025284278478 * H2x1_3 + 1.30433450594503 * H2x1_4 + 1.26145590014333 * H2x1_5 + 
0.63126627865104 * H2x1_6 + -1.88455429451452 * H2x1_7 ;
2401371   +   H3x1_6  =     0.99645242104414 * H2x1_1  +    -0.17835964967148 * H2x1_2
2401372   +          +     0.06539648561603 * H2x1_3  +     0.97412284078325 * H2x1_4
2401373   +          +     -1.3247680635275 * H2x1_5  +      0.8723025918678 * H2x1_6
2401374   +          +    -0.04328836172134 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_6 = 0.99645242104414 * H2x1_1 + -0.17835964967148 * H2x1_2 + 
0.06539648561603 * H2x1_3 + 0.97412284078325 * H2x1_4 + -1.3247680635275 * H2x1_5 + 
0.8723025918678 * H2x1_6 + -0.04328836172134 * H2x1_7 ;
2401375   +   H3x1_7  =     2.66887548952929 * H2x1_1  +    -0.86289888310949 * H2x1_2
2401376   +          +     1.58137421487648 * H2x1_3  +    -1.37105839507635 * H2x1_4
2401377   +          +    -0.65069986041129 * H2x1_5  +     2.50322156288062 * H2x1_6
2401378   +          +     0.75157328436087 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_7 = 2.66887548952929 * H2x1_1 + -0.86289888310949 * H2x1_2 + 
1.58137421487648 * H2x1_3 + -1.37105839507635 * H2x1_4 + -0.65069986041129 * H2x1_5 + 
2.50322156288062 * H2x1_6 + 0.75157328436087 * H2x1_7 ;
2401379   +   H3x1_1  = H3x1_1  +     1.55317132694755 * H2x2_1
2401380   +          +     1.75656976582641 * H2x2_2  +    -1.25361089552085 * H2x2_3
2401381   +          +    -0.52984461837677 * H2x2_4  +     1.29915117873447 * H2x2_5
2401382   +          +    -1.03942372926622 * H2x2_6  +     0.13722887717178 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + 1.55317132694755 * H2x2_1 + 1.75656976582641 * H2x2_2 
+ -1.25361089552085 * H2x2_3 + -0.52984461837677 * H2x2_4 + 1.29915117873447 * H2x2_5 + 
-1.03942372926622 * H2x2_6 + 0.13722887717178 * H2x2_7 ;
2401383   +   H3x1_2  = H3x1_2  +     0.88902418392614 * H2x2_1
2401384   +          +     1.35198205638356 * H2x2_2  +     1.49845421410078 * H2x2_3
2401385   +          +    -1.22318137674998 * H2x2_4  +     1.03485654068494 * H2x2_5
2401386   +          +    -0.88760495649169 * H2x2_6  +    -1.94135868960024 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = H3x1_2 + 0.88902418392614 * H2x2_1 + 1.35198205638356 * H2x2_2 
+ 1.49845421410078 * H2x2_3 + -1.22318137674998 * H2x2_4 + 1.03485654068494 * H2x2_5 + 
-0.88760495649169 * H2x2_6 + -1.94135868960024 * H2x2_7 ;
2401387   +   H3x1_3  = H3x1_3  +     -0.5232166311723 * H2x2_1
2401388   +          +    -0.49154441995792 * H2x2_2  +     1.21222773866672 * H2x2_3
2401389   +          +     0.88954765096374 * H2x2_4  +     0.32666743913318 * H2x2_5
2401390   +          +     1.26201705110892 * H2x2_6  +    -2.46564869578322 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = H3x1_3 + -0.5232166311723 * H2x2_1 + -0.49154441995792 * H2x2_2 
+ 1.21222773866672 * H2x2_3 + 0.88954765096374 * H2x2_4 + 0.32666743913318 * H2x2_5 + 
1.26201705110892 * H2x2_6 + -2.46564869578322 * H2x2_7 ;
2401391   +   H3x1_4  = H3x1_4  +     0.93897688204524 * H2x2_1
2401392   +          +    -0.56396325682963 * H2x2_2  +     0.60312223662348 * H2x2_3
2401393   +          +     0.05506195666559 * H2x2_4  +    -1.19478701476792 * H2x2_5
2401394   +          +     1.11111060864544 * H2x2_6  +     0.07602420470068 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = H3x1_4 + 0.93897688204524 * H2x2_1 + -0.56396325682963 * H2x2_2 
+ 0.60312223662348 * H2x2_3 + 0.05506195666559 * H2x2_4 + -1.19478701476792 * H2x2_5 + 
1.11111060864544 * H2x2_6 + 0.07602420470068 * H2x2_7 ;
2401395   +   H3x1_5  = H3x1_5  +    -2.04067007195299 * H2x2_1
2401396   +          +    -0.24511447740547 * H2x2_2  +      1.1403782608351 * H2x2_3
2401397   +          +     0.28313253531571 * H2x2_4  +    -0.31001305293935 * H2x2_5
2401398   +          +     1.43972694265244 * H2x2_6  +     0.27081966717726 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = H3x1_5 + -2.04067007195299 * H2x2_1 + -0.24511447740547 * 
H2x2_2 + 1.1403782608351 * H2x2_3 + 0.28313253531571 * H2x2_4 + -0.31001305293935 * H2x2_5 + 
1.43972694265244 * H2x2_6 + 0.27081966717726 * H2x2_7 ;
2401399   +   H3x1_6  = H3x1_6  +     1.53918759970091 * H2x2_1
2401400   +          +    -1.36834652818881 * H2x2_2  +    -0.97354088259421 * H2x2_3
2401401   +          +     0.73052173697294 * H2x2_4  +     1.34716412811946 * H2x2_5
2401402   +          +     1.66261041249676 * H2x2_6  +    -0.99719318696356 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_6 = H3x1_6 + 1.53918759970091 * H2x2_1 + -1.36834652818881 * H2x2_2 
+ -0.97354088259421 * H2x2_3 + 0.73052173697294 * H2x2_4 + 1.34716412811946 * H2x2_5 + 
1.66261041249676 * H2x2_6 + -0.99719318696356 * H2x2_7 ;
2401403   +   H3x1_7  = H3x1_7  +     1.11994694673604 * H2x2_1
2401404   +          +     -1.6803356528873 * H2x2_2  +    -0.12962793678977 * H2x2_3
2401405   +          +    -0.71896094589725 * H2x2_4  +     0.46037684620833 * H2x2_5
2401406   +          +     0.25911483872618 * H2x2_6  +     1.00876479730932 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_7 = H3x1_7 + 1.11994694673604 * H2x2_1 + -1.6803356528873 * H2x2_2 
+ -0.12962793678977 * H2x2_3 + -0.71896094589725 * H2x2_4 + 0.46037684620833 * H2x2_5 + 
0.25911483872618 * H2x2_6 + 1.00876479730932 * H2x2_7 ;
2401407   +   H3x1_1  =     1.52228889950912 + H3x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 1.52228889950912 + H3x1_1 ;
2401408   +   H3x1_2  =    -0.46625781761332 + H3x1_2 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = -0.46625781761332 + H3x1_2 ;
2401409   +   H3x1_3  =     0.11008388635615 + H3x1_3 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = 0.11008388635615 + H3x1_3 ;
2401410   +   H3x1_4  =    -0.38333236869719 + H3x1_4 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = -0.38333236869719 + H3x1_4 ;
2401411   +   H3x1_5  =    -1.36620648378402 + H3x1_5 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = -1.36620648378402 + H3x1_5 ;
2401412   +   H3x1_6  =     0.41780608126276 + H3x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_6 = 0.41780608126276 + H3x1_6 ;
2401413   +   H3x1_7  =    -0.69490040783623 + H3x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_7 = -0.69490040783623 + H3x1_7 ;
2401414   +   H3x1_1  = SIN(H3x1_1 );
MPRINT(EM_DIAGRAM):   H3x1_1 = SIN(H3x1_1 );
2401415   +   H3x1_2  = SIN(H3x1_2 );
MPRINT(EM_DIAGRAM):   H3x1_2 = SIN(H3x1_2 );
2401416   +   H3x1_3  = SIN(H3x1_3 );
MPRINT(EM_DIAGRAM):   H3x1_3 = SIN(H3x1_3 );
2401417   +   H3x1_4  = SIN(H3x1_4 );
MPRINT(EM_DIAGRAM):   H3x1_4 = SIN(H3x1_4 );
2401418   +   H3x1_5  = SIN(H3x1_5 );
MPRINT(EM_DIAGRAM):   H3x1_5 = SIN(H3x1_5 );
2401419   +   H3x1_6  = SIN(H3x1_6 );
MPRINT(EM_DIAGRAM):   H3x1_6 = SIN(H3x1_6 );
2401420   +   H3x1_7  = SIN(H3x1_7 );
MPRINT(EM_DIAGRAM):   H3x1_7 = SIN(H3x1_7 );
2401421   +END;
MPRINT(EM_DIAGRAM):   END;
2401422   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2401423   +   H3x1_1  = .;
MPRINT(EM_DIAGRAM):   H3x1_1 = .;
2401424   +   H3x1_2  = .;
MPRINT(EM_DIAGRAM):   H3x1_2 = .;
2401425   +   H3x1_3  = .;
MPRINT(EM_DIAGRAM):   H3x1_3 = .;
2401426   +   H3x1_4  = .;
MPRINT(EM_DIAGRAM):   H3x1_4 = .;
2401427   +   H3x1_5  = .;
MPRINT(EM_DIAGRAM):   H3x1_5 = .;
2401428   +   H3x1_6  = .;
MPRINT(EM_DIAGRAM):   H3x1_6 = .;
2401429   +   H3x1_7  = .;
MPRINT(EM_DIAGRAM):   H3x1_7 = .;
2401430   +END;
MPRINT(EM_DIAGRAM):   END;
2401431   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2401432   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2401433   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2401434   +
2401435   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2401436   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2401437   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2401438   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2401439   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2401440   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2401441   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2401442   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2401443   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2401444   +end;
MPRINT(EM_DIAGRAM):   end;
2401445   +else do;
MPRINT(EM_DIAGRAM):   else do;
2401446   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2401447   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2401448   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2401449   +   end;
MPRINT(EM_DIAGRAM):   end;
2401450   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2401451   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2401452   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2401453   +   end;
MPRINT(EM_DIAGRAM):   end;
2401454   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2401455   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2401456   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2401457   +   end;
MPRINT(EM_DIAGRAM):   end;
2401458   +end;
MPRINT(EM_DIAGRAM):   end;
2401459   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2401460   +   P_DepVar1  =    -2.07102874283902 * H3x1_1  +     2.04799607124649 * H3x1_2
2401461   +          +    -0.05444449856749 * H3x1_3  +    -3.76440287030853 * H3x1_4
2401462   +          +    -0.62776678498994 * H3x1_5  +    -1.00383135301243 * H3x1_6
2401463   +          +     2.26027843968818 * H3x1_7 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.07102874283902 * H3x1_1 + 2.04799607124649 * H3x1_2 + 
-0.05444449856749 * H3x1_3 + -3.76440287030853 * H3x1_4 + -0.62776678498994 * H3x1_5 + 
-1.00383135301243 * H3x1_6 + 2.26027843968818 * H3x1_7 ;
2401464   +   P_DepVar1  =     0.51137297979162 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.51137297979162 + P_DepVar1 ;
2401465   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2401466   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2401467   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2401468   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2401469   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2401470   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2401471   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2401472   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2401473   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2401474   +END;
MPRINT(EM_DIAGRAM):   END;
2401475   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2401476   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2401477   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2401478   +END;
MPRINT(EM_DIAGRAM):   END;
2401479   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2401480   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2401481   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2401482   +END;
MPRINT(EM_DIAGRAM):   END;
2401483   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2401484   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2401485   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2401486   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2401487   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2401488   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2401489   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2401490   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2401491   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2401492   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2401493   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2401494   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2401495   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2401496   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2401497   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2401498   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2401499   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2401500   +END;
MPRINT(EM_DIAGRAM):   END;
2401501   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2401502   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2401503   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2401504   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2401505   +* Renaming variables for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural12;
2401506   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2401507   +* Renaming Posterior variables for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural12;
2401508   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2401509   +drop AutoNeural12_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_P_DepVar1;
2401510   +AutoNeural12_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural12_P_DepVar1 = P_DepVar1;
2401511   +drop AutoNeural12_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_P_DepVar0;
2401512   +AutoNeural12_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural12_P_DepVar0 = P_DepVar0;
2401513   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2401514   +* Renaming Into variables for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for AutoNeural12;
2401515   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2401516   +length AutoNeural12_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length AutoNeural12_I_DepVar $32;
2401517   +drop AutoNeural12_I_DepVar;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_I_DepVar;
2401518   +AutoNeural12_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   AutoNeural12_I_DepVar = I_DepVar;
2401519   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2401520   +* Renaming _WARN_ variable for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural12;
2401521   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2401522   +length AutoNeural12_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural12_WARN_ $4;
2401523   +drop AutoNeural12_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_WARN_;
2401524   +AutoNeural12_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural12_WARN_ = _WARN_;
2401525   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2401526   +* Ensmbl44: Voting to produce predicted target;
MPRINT(EM_DIAGRAM):   * Ensmbl44: Voting to produce predicted target;
2401527   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2401528   +array Ensmbl44_post{2} _temporary_;
MPRINT(EM_DIAGRAM):   array Ensmbl44_post{2} _temporary_;
2401529   +array Ensmbl44_count{2} _temporary_;
MPRINT(EM_DIAGRAM):   array Ensmbl44_count{2} _temporary_;
2401530   +array Ensmbl44_level{2} $32 _temporary_ (
2401531   +"1"
2401532   +"0"
2401533   +);
MPRINT(EM_DIAGRAM):   array Ensmbl44_level{2} $32 _temporary_ ( "1" "0" );
2401534   +do i=1 to 2;
MPRINT(EM_DIAGRAM):   do i=1 to 2;
2401535   +Ensmbl44_post{i} = 0;
MPRINT(EM_DIAGRAM):   Ensmbl44_post{i} = 0;
2401536   +Ensmbl44_count{i} = 0;
MPRINT(EM_DIAGRAM):   Ensmbl44_count{i} = 0;
2401537   +end;
MPRINT(EM_DIAGRAM):   end;
2401538   +if AutoNeural9_I_DepVar = Ensmbl44_level{1} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural9_I_DepVar = Ensmbl44_level{1} then do;
2401539   +Ensmbl44_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl44_count{1} + 1;
2401540   +Ensmbl44_post{1}=Ensmbl44_post{1}+ AutoNeural9_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl44_post{1}=Ensmbl44_post{1}+ AutoNeural9_P_DepVar1;
2401541   +end;
MPRINT(EM_DIAGRAM):   end;
2401542   +if AutoNeural11_I_DepVar = Ensmbl44_level{1} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural11_I_DepVar = Ensmbl44_level{1} then do;
2401543   +Ensmbl44_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl44_count{1} + 1;
2401544   +Ensmbl44_post{1}=Ensmbl44_post{1}+ AutoNeural11_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl44_post{1}=Ensmbl44_post{1}+ AutoNeural11_P_DepVar1;
2401545   +end;
MPRINT(EM_DIAGRAM):   end;
2401546   +if AutoNeural12_I_DepVar = Ensmbl44_level{1} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural12_I_DepVar = Ensmbl44_level{1} then do;
2401547   +Ensmbl44_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl44_count{1} + 1;
2401548   +Ensmbl44_post{1}=Ensmbl44_post{1}+ AutoNeural12_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl44_post{1}=Ensmbl44_post{1}+ AutoNeural12_P_DepVar1;
2401549   +end;
MPRINT(EM_DIAGRAM):   end;
2401550   +if AutoNeural9_I_DepVar = Ensmbl44_level{2} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural9_I_DepVar = Ensmbl44_level{2} then do;
2401551   +Ensmbl44_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl44_count{2} + 1;
2401552   +Ensmbl44_post{2}=Ensmbl44_post{2}+ AutoNeural9_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl44_post{2}=Ensmbl44_post{2}+ AutoNeural9_P_DepVar0;
2401553   +end;
MPRINT(EM_DIAGRAM):   end;
2401554   +if AutoNeural11_I_DepVar = Ensmbl44_level{2} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural11_I_DepVar = Ensmbl44_level{2} then do;
2401555   +Ensmbl44_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl44_count{2} + 1;
2401556   +Ensmbl44_post{2}=Ensmbl44_post{2}+ AutoNeural11_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl44_post{2}=Ensmbl44_post{2}+ AutoNeural11_P_DepVar0;
2401557   +end;
MPRINT(EM_DIAGRAM):   end;
2401558   +if AutoNeural12_I_DepVar = Ensmbl44_level{2} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural12_I_DepVar = Ensmbl44_level{2} then do;
2401559   +Ensmbl44_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl44_count{2} + 1;
2401560   +Ensmbl44_post{2}=Ensmbl44_post{2}+ AutoNeural12_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl44_post{2}=Ensmbl44_post{2}+ AutoNeural12_P_DepVar0;
2401561   +end;
MPRINT(EM_DIAGRAM):   end;
2401562   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2401563   +* Ensmbl44: Determine Into Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl44: Determine Into Variable;
2401564   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2401565   +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set. 
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the 
         length of a character variable.
2401566   +drop i vote_count vote_post;
MPRINT(EM_DIAGRAM):   drop i vote_count vote_post;
2401567   +vote_count = max(
2401568   +Ensmbl44_count{1} ,
2401569   +Ensmbl44_count{2}
2401570   +);
MPRINT(EM_DIAGRAM):   vote_count = max( Ensmbl44_count{1} , Ensmbl44_count{2} );
2401571   +do i=1 to 2;
MPRINT(EM_DIAGRAM):   do i=1 to 2;
2401572   +if Ensmbl44_count{i}=vote_count and Ensmbl44_post{i}>vote_post then do;
MPRINT(EM_DIAGRAM):   if Ensmbl44_count{i}=vote_count and Ensmbl44_post{i}>vote_post then do;
2401573   +I_DepVar = Ensmbl44_level{i};
MPRINT(EM_DIAGRAM):   I_DepVar = Ensmbl44_level{i};
2401574   +vote_post = Ensmbl44_count{i};
MPRINT(EM_DIAGRAM):   vote_post = Ensmbl44_count{i};
2401575   +end;
MPRINT(EM_DIAGRAM):   end;
2401576   +end;
MPRINT(EM_DIAGRAM):   end;
2401577   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2401578   +* Ensmbl44: Compute posterior vars using models predicting the chosen level;
MPRINT(EM_DIAGRAM):   * Ensmbl44: Compute posterior vars using models predicting the chosen 
level;
2401579   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2401580   +P_DepVar1 = 0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0;
2401581   +P_DepVar0 = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2401582   +if I_DepVar = AutoNeural9_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = AutoNeural9_I_DepVar then do;
2401583   +P_DEPVAR1 = P_DEPVAR1 + AutoNeural9_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + AutoNeural9_P_DepVar1;
2401584   +P_DEPVAR0 = P_DEPVAR0 + AutoNeural9_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + AutoNeural9_P_DepVar0;
2401585   +end;
MPRINT(EM_DIAGRAM):   end;
2401586   +if I_DepVar = AutoNeural11_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = AutoNeural11_I_DepVar then do;
2401587   +P_DEPVAR1 = P_DEPVAR1 + AutoNeural11_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + AutoNeural11_P_DepVar1;
2401588   +P_DEPVAR0 = P_DEPVAR0 + AutoNeural11_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + AutoNeural11_P_DepVar0;
2401589   +end;
MPRINT(EM_DIAGRAM):   end;
2401590   +if I_DepVar = AutoNeural12_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = AutoNeural12_I_DepVar then do;
2401591   +P_DEPVAR1 = P_DEPVAR1 + AutoNeural12_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + AutoNeural12_P_DepVar1;
2401592   +P_DEPVAR0 = P_DEPVAR0 + AutoNeural12_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + AutoNeural12_P_DepVar0;
2401593   +end;
MPRINT(EM_DIAGRAM):   end;
2401594   +* Ensmbl44: Averaging posterior;
MPRINT(EM_DIAGRAM):   * Ensmbl44: Averaging posterior;
2401595   +P_DepVar1 = P_DepVar1/vote_count;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1/vote_count;
2401596   +P_DepVar0 = P_DepVar0/vote_count;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0/vote_count;
2401597   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2401598   +* Ensmbl44: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   * Ensmbl44: Producing Unformatted variable;
2401599   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2401600   +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
2401601   +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
2401602   +else
2401603   +if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
2401604   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2401605   +* Ensmbl44: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl44: Computing _WARN_ Variable;
2401606   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2401607   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
2401608   +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
2401609   +_WARN_ = '';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
2401610   +if index(AUTONEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
2401610  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
2401611   +if index(AUTONEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
2401611  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
2401612   +if index(AUTONEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
2401612  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
2401613   +if index(AUTONEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
2401613  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
2401614   +if index(AUTONEURAL11_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
2401614  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
2401615   +if index(AUTONEURAL11_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
2401615  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
2401616   +if index(AUTONEURAL11_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
2401616  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
2401617   +if index(AUTONEURAL11_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
2401617  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
2401618   +if index(AUTONEURAL12_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
2401618  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
2401619   +if index(AUTONEURAL12_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
2401619  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
2401620   +if index(AUTONEURAL12_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
2401620  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
2401621   +if index(AUTONEURAL12_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
2401621  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
2401622   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2401623   +* Ensmbl44: Computing Residual Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl44: Computing Residual Vars;
2401624   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2401625   +if
2401626   +F_DepVar NE '1'
2401627   +AND F_DepVar NE '0'
2401628   +then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE '1' AND F_DepVar NE '0' then do;
2401629   +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
2401630   +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
2401631   +end;
MPRINT(EM_DIAGRAM):   end;
2401632   +else do;
MPRINT(EM_DIAGRAM):   else do;
2401633   +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
2401634   +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
2401635   +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
2401636   +WHEN('1') R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN('1') R_DepVar1 = R_DepVar1 +1;
2401637   +WHEN('0') R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN('0') R_DepVar0 = R_DepVar0 +1;
2401638   +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
2401639   +END;
MPRINT(EM_DIAGRAM):   END;
2401640   +END;
MPRINT(EM_DIAGRAM):   END;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2401641    run;

NOTE: DATA STEP view saved on file EMWS8.ENSMBL44_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.AUTONEURAL9_TRAIN.VIEW used (Total process time):
      real time           0.13 seconds
      cpu time            0.14 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.14 seconds
      cpu time            0.15 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2401642    quit;
2401643    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
2401644    filename emflow
2401644  ! "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl44\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl44\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl44: Scoring AUTONEURAL9_VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2401645    *------------------------------------------------------------*;
2401646    * Ensmbl44: Scoring AUTONEURAL9_VALIDATE data;
2401647    *------------------------------------------------------------*;
2401648    data EMWS8.Ensmbl44_VALIDATE
2401649    / view=EMWS8.Ensmbl44_VALIDATE
2401650    ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl44_VALIDATE / view=EMWS8.Ensmbl44_VALIDATE ;
2401651    set EMWS8.AutoNeural9_VALIDATE
2401652    ;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural9_VALIDATE ;
2401653    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl44\EMFLOWSCORE.sas.
2401654   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2401655   +* Ensmbl44: Combine model for DepVar;
MPRINT(EM_DIAGRAM):   * Ensmbl44: Combine model for DepVar;
2401656   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2401657   +* Ensmbl44: Scoring Code of model 1 of 3;
MPRINT(EM_DIAGRAM):   * Ensmbl44: Scoring Code of model 1 of 3;
2401658   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2401659   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2401660   +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
2401661   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
2401662   +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
2401663   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2401664   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2401665   +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
2401666   +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
2401667   +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
2401668   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2401669   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2401670   +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
2401671   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
2401672   +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
2401673   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2401674   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2401675   +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
2401676   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
2401677   +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
2401678   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2401679   +
2401680   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
2401681   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
2401681  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
2401682   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
2401683   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
2401684   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
2401685   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
2401686   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
2401687   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2401688   +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
2401689   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
2401690   +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
2401691   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2401692   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2401693   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
2401694   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2401695   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
2401696   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
2401697   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
2401698   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2401699   +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
2401700   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
2401701   +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
2401702   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2401703   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2401704   +* TOOL: Metadata Node;
MPRINT(EM_DIAGRAM):   * TOOL: Metadata Node;
2401705   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
2401706   +* NODE: Meta;
MPRINT(EM_DIAGRAM):   * NODE: Meta;
2401707   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2401708   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2401709   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
2401710   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2401711   +* NODE: AutoNeural9;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural9;
2401712   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2401713   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2401714   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2401715   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2401716   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2401717   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2401718   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2401719   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2401720   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2401721   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2401722   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2401723   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2401724   +LENGTH _WARN_ $4
2401725   +      F_DepVar  $ 12
2401726   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2401727   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2401728   +
2401729   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2401730   +
2401731   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2401732   +
2401733   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2401734   +
2401735   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2401736   +
2401737   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2401738   +
2401739   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2401740   +
2401741   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2401742   +
2401743   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2401744   +
2401745   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2401746   +
2401747   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2401748   +
2401749   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2401750   +
2401751   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2401752   +
2401753   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2401754   +
2401755   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2401756   +
2401757   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2401758   +
2401759   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2401760   +
2401761   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2401762   +
2401763   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2401764   +
2401765   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2401766   +
2401767   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2401768   +
2401769   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2401770   +
2401771   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2401772   +
2401773   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2401774   +
2401775   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2401776   +
2401777   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2401778   +
2401779   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2401780   +
2401781   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2401782   +
2401783   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2401784   +
2401785   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2401786   +
2401787   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2401788   +
2401789   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2401790   +
2401791   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2401792   +
2401793   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2401794   +
2401795   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2401796   +
2401797   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2401798   +
2401799   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2401800   +
2401801   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2401802   +
2401803   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2401804   +
2401805   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2401806   +
2401807   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2401808   +
2401809   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2401810   +
2401811   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2401812   +
2401813   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2401814   +
2401815   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2401816   +
2401817   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2401818   +
2401819   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2401820   +
2401821   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2401822   +
2401823   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2401824   +
2401825   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2401826   +
2401827   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2401828   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2401829   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2401830   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2401831   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2401832   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2401833   +end;
MPRINT(EM_DIAGRAM):   end;
2401834   +else do;
MPRINT(EM_DIAGRAM):   else do;
2401835   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2401836   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2401837   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2401838   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2401839   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2401840   +   end;
MPRINT(EM_DIAGRAM):   end;
2401841   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2401842   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2401843   +   end;
MPRINT(EM_DIAGRAM):   end;
2401844   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2401845   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2401846   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2401847   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2401848   +   end;
MPRINT(EM_DIAGRAM):   end;
2401849   +end;
MPRINT(EM_DIAGRAM):   end;
2401850   +
2401851   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2401852   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2401853   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2401854   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2401855   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2401856   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2401857   +end;
MPRINT(EM_DIAGRAM):   end;
2401858   +else do;
MPRINT(EM_DIAGRAM):   else do;
2401859   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2401860   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2401861   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2401862   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2401863   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2401864   +   end;
MPRINT(EM_DIAGRAM):   end;
2401865   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2401866   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2401867   +   end;
MPRINT(EM_DIAGRAM):   end;
2401868   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2401869   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2401870   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2401871   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2401872   +   end;
MPRINT(EM_DIAGRAM):   end;
2401873   +end;
MPRINT(EM_DIAGRAM):   end;
2401874   +
2401875   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2401876   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2401877   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2401878   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2401879   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2401880   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2401881   +end;
MPRINT(EM_DIAGRAM):   end;
2401882   +else do;
MPRINT(EM_DIAGRAM):   else do;
2401883   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2401884   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2401885   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2401886   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2401887   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2401888   +   end;
MPRINT(EM_DIAGRAM):   end;
2401889   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2401890   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2401891   +   end;
MPRINT(EM_DIAGRAM):   end;
2401892   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2401893   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2401894   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2401895   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2401896   +   end;
MPRINT(EM_DIAGRAM):   end;
2401897   +end;
MPRINT(EM_DIAGRAM):   end;
2401898   +
2401899   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2401900   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2401901   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2401902   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2401903   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2401904   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2401905   +end;
MPRINT(EM_DIAGRAM):   end;
2401906   +else do;
MPRINT(EM_DIAGRAM):   else do;
2401907   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2401908   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2401909   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2401910   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2401911   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2401912   +   end;
MPRINT(EM_DIAGRAM):   end;
2401913   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2401914   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2401915   +   end;
MPRINT(EM_DIAGRAM):   end;
2401916   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2401917   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2401918   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2401919   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2401920   +   end;
MPRINT(EM_DIAGRAM):   end;
2401921   +end;
MPRINT(EM_DIAGRAM):   end;
2401922   +
2401923   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2401924   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2401925   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2401926   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2401927   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2401928   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2401929   +end;
MPRINT(EM_DIAGRAM):   end;
2401930   +else do;
MPRINT(EM_DIAGRAM):   else do;
2401931   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2401932   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2401933   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2401934   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2401935   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2401936   +   end;
MPRINT(EM_DIAGRAM):   end;
2401937   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2401938   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2401939   +   end;
MPRINT(EM_DIAGRAM):   end;
2401940   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2401941   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2401942   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2401943   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2401944   +   end;
MPRINT(EM_DIAGRAM):   end;
2401945   +end;
MPRINT(EM_DIAGRAM):   end;
2401946   +
2401947   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2401948   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2401949   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2401950   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2401951   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2401952   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2401953   +end;
MPRINT(EM_DIAGRAM):   end;
2401954   +else do;
MPRINT(EM_DIAGRAM):   else do;
2401955   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2401956   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2401957   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2401958   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2401959   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2401960   +   end;
MPRINT(EM_DIAGRAM):   end;
2401961   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2401962   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2401963   +   end;
MPRINT(EM_DIAGRAM):   end;
2401964   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2401965   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2401966   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2401967   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2401968   +   end;
MPRINT(EM_DIAGRAM):   end;
2401969   +end;
MPRINT(EM_DIAGRAM):   end;
2401970   +
2401971   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2401972   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2401973   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2401974   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2401975   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2401976   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2401977   +end;
MPRINT(EM_DIAGRAM):   end;
2401978   +else do;
MPRINT(EM_DIAGRAM):   else do;
2401979   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2401980   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2401981   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2401982   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2401983   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2401984   +   end;
MPRINT(EM_DIAGRAM):   end;
2401985   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2401986   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2401987   +   end;
MPRINT(EM_DIAGRAM):   end;
2401988   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2401989   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2401990   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2401991   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2401992   +   end;
MPRINT(EM_DIAGRAM):   end;
2401993   +end;
MPRINT(EM_DIAGRAM):   end;
2401994   +
2401995   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2401996   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
2401997   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2401998   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2401999   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2402000   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2402001   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2402002   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2402003   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2402004   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2402005   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2402006   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2402007   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2402008   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2402009   +end;
MPRINT(EM_DIAGRAM):   end;
2402010   +else do;
MPRINT(EM_DIAGRAM):   else do;
2402011   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2402012   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2402013   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2402014   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2402015   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2402016   +   end;
MPRINT(EM_DIAGRAM):   end;
2402017   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2402018   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2402019   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2402020   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2402021   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2402022   +   end;
MPRINT(EM_DIAGRAM):   end;
2402023   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2402024   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2402025   +   end;
MPRINT(EM_DIAGRAM):   end;
2402026   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2402027   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2402028   +   end;
MPRINT(EM_DIAGRAM):   end;
2402029   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2402030   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2402031   +   end;
MPRINT(EM_DIAGRAM):   end;
2402032   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2402033   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2402034   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2402035   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2402036   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2402037   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2402038   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2402039   +   end;
MPRINT(EM_DIAGRAM):   end;
2402040   +end;
MPRINT(EM_DIAGRAM):   end;
2402041   +
2402042   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2402043   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2402044   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
2402045   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2402046   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2402047   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2402048   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2402049   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2402050   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2402051   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2402052   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2402053   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2402054   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2402055   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2402056   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2402057   +end;
MPRINT(EM_DIAGRAM):   end;
2402058   +else do;
MPRINT(EM_DIAGRAM):   else do;
2402059   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2402060   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2402061   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2402062   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2402063   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2402064   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2402065   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2402066   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2402067   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2402068   +         end;
MPRINT(EM_DIAGRAM):   end;
2402069   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2402070   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2402071   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2402072   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2402073   +            end;
MPRINT(EM_DIAGRAM):   end;
2402074   +         end;
MPRINT(EM_DIAGRAM):   end;
2402075   +      end;
MPRINT(EM_DIAGRAM):   end;
2402076   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2402077   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2402078   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2402079   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2402080   +         end;
MPRINT(EM_DIAGRAM):   end;
2402081   +      end;
MPRINT(EM_DIAGRAM):   end;
2402082   +   end;
MPRINT(EM_DIAGRAM):   end;
2402083   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2402084   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2402085   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2402086   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2402087   +      end;
MPRINT(EM_DIAGRAM):   end;
2402088   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2402089   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2402090   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2402091   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2402092   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2402093   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2402094   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2402095   +         end;
MPRINT(EM_DIAGRAM):   end;
2402096   +      end;
MPRINT(EM_DIAGRAM):   end;
2402097   +   end;
MPRINT(EM_DIAGRAM):   end;
2402098   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2402099   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2402100   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2402101   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2402102   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2402103   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2402104   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2402105   +   end;
MPRINT(EM_DIAGRAM):   end;
2402106   +end;
MPRINT(EM_DIAGRAM):   end;
2402107   +
2402108   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2402109   +*** Checking missing input Interval
2402110   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2402111   +
2402112   +IF NMISS(
2402113   +   AcceptedCmpTotal ,
2402114   +   Age ,
2402115   +   Frq ,
2402116   +   Income ,
2402117   +   Kidhome ,
2402118   +   Mnt ,
2402119   +   MntFishProducts ,
2402120   +   MntFruits ,
2402121   +   MntGoldProds ,
2402122   +   MntMeatProducts ,
2402123   +   MntSweetProducts ,
2402124   +   MntWines ,
2402125   +   MonthsAsCustomer ,
2402126   +   NumCatalogPurchases ,
2402127   +   NumDealsPurchases ,
2402128   +   NumDistPurchases ,
2402129   +   NumStorePurchases ,
2402130   +   NumWebPurchases ,
2402131   +   NumWebVisitsMonth ,
2402132   +   RFMstat ,
2402133   +   RMntFrq ,
2402134   +   Recency ,
2402135   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
2402136   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2402137   +
2402138   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2402139   +END;
MPRINT(EM_DIAGRAM):   END;
2402140   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2402141   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2402142   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2402143   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2402144   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2402145   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2402146   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2402147   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2402148   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2402149   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2402150   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2402151   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2402152   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2402153   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2402154   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2402155   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2402156   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2402157   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2402158   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2402159   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2402160   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2402161   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2402162   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
2402163   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2402164   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2402165   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2402166   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2402167   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2402168   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2402169   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2402170   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2402171   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2402172   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2402173   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2402174   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2402175   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2402176   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2402177   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2402178   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2402179   +END;
MPRINT(EM_DIAGRAM):   END;
2402180   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2402181   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2402182   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2402183   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2402184   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2402185   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2402186   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2402187   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2402188   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2402189   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2402190   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2402191   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2402192   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2402193   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2402194   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2402195   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2402196   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2402197   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2402198   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2402199   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2402200   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2402201   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2402202   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
2402203   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2402204   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2402205   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2402206   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2402207   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2402208   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2402209   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2402210   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2402211   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2402212   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2402213   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
2402214   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2402215   +   ELSE S_NumCatalogPurchases
2402216   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2402217   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2402218   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2402219   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2402220   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2402221   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2402222   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2402223   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2402224   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2402225   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2402226   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2402227   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2402228   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2402229   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2402230   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2402231   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2402232   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2402233   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2402234   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2402235   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2402236   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2402237   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2402238   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2402239   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2402240   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2402241   +END;
MPRINT(EM_DIAGRAM):   END;
2402242   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2402243   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2402244   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2402245   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2402246   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2402247   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2402248   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2402249   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2402250   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2402251   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2402252   +   H1x1_1  =    -0.78941671657664 * S_AcceptedCmpTotal
2402253   +          +     0.31767378900448 * S_Age  +      -0.450304150539 * S_Frq
2402254   +          +     0.13641886985589 * S_Income  +    -0.76390352240561 *
2402255   +        S_Kidhome  +    -0.84654868800943 * S_Mnt  +     0.96945558052651 *
2402256   +        S_MntFishProducts  +     0.16268958674432 * S_MntFruits
2402257   +          +     0.02144447788014 * S_MntGoldProds  +    -3.75090210449464 *
2402258   +        S_MntMeatProducts  +    -0.22086629229442 * S_MntSweetProducts
2402259   +          +      0.8352178457402 * S_MntWines  +     0.16493907873466 *
2402260   +        S_MonthsAsCustomer  +    -1.54607390993048 * S_NumCatalogPurchases
2402261   +          +    -1.12130210731541 * S_NumDealsPurchases
2402262   +          +    -0.12343505299726 * S_NumDistPurchases
2402263   +          +     0.11863092868196 * S_NumStorePurchases
2402264   +          +       0.583917993314 * S_NumWebPurchases
2402265   +          +     0.75529732848146 * S_NumWebVisitsMonth
2402266   +          +    -0.49784215446785 * S_RFMstat  +     0.40580477815146 *
2402267   +        S_RMntFrq  +    -0.95519170979342 * S_Recency
2402268   +          +    -0.44895196625502 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.78941671657664 * S_AcceptedCmpTotal + 0.31767378900448 * 
S_Age + -0.450304150539 * S_Frq + 0.13641886985589 * S_Income + -0.76390352240561 * S_Kidhome 
+ -0.84654868800943 * S_Mnt + 0.96945558052651 * S_MntFishProducts + 0.16268958674432 * 
S_MntFruits + 0.02144447788014 * S_MntGoldProds + -3.75090210449464 * S_MntMeatProducts + 
-0.22086629229442 * S_MntSweetProducts + 0.8352178457402 * S_MntWines + 0.16493907873466 * 
S_MonthsAsCustomer + -1.54607390993048 * S_NumCatalogPurchases + -1.12130210731541 * 
S_NumDealsPurchases + -0.12343505299726 * S_NumDistPurchases + 0.11863092868196 * 
S_NumStorePurchases + 0.583917993314 * S_NumWebPurchases + 0.75529732848146 * 
S_NumWebVisitsMonth + -0.49784215446785 * S_RFMstat + 0.40580477815146 * S_RMntFrq + 
-0.95519170979342 * S_Recency + -0.44895196625502 * S_Teenhome ;
2402269   +   H1x1_2  =    -0.22984864633102 * S_AcceptedCmpTotal
2402270   +          +     0.08901810463204 * S_Age  +    -0.13007664741542 * S_Frq
2402271   +          +    -0.64174617524704 * S_Income  +     0.26599968715733 *
2402272   +        S_Kidhome  +     0.57486260655125 * S_Mnt  +    -0.56033337110694 *
2402273   +        S_MntFishProducts  +     0.16060716517673 * S_MntFruits
2402274   +          +      0.4349197289782 * S_MntGoldProds  +     1.41079767517969 *
2402275   +        S_MntMeatProducts  +      0.0615730534741 * S_MntSweetProducts
2402276   +          +    -0.09057901886639 * S_MntWines  +     0.20260454891291 *
2402277   +        S_MonthsAsCustomer  +    -1.17048742280721 * S_NumCatalogPurchases
2402278   +          +    -0.84113790640734 * S_NumDealsPurchases
2402279   +          +    -0.10512672747147 * S_NumDistPurchases
2402280   +          +     0.07268711782494 * S_NumStorePurchases
2402281   +          +     0.57578331257439 * S_NumWebPurchases
2402282   +          +    -1.34334433506558 * S_NumWebVisitsMonth
2402283   +          +     0.50079465494904 * S_RFMstat  +     0.77329849238514 *
2402284   +        S_RMntFrq  +      1.2759588366983 * S_Recency
2402285   +          +     0.17722493443222 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.22984864633102 * S_AcceptedCmpTotal + 0.08901810463204 * 
S_Age + -0.13007664741542 * S_Frq + -0.64174617524704 * S_Income + 0.26599968715733 * 
S_Kidhome + 0.57486260655125 * S_Mnt + -0.56033337110694 * S_MntFishProducts + 
0.16060716517673 * S_MntFruits + 0.4349197289782 * S_MntGoldProds + 1.41079767517969 * 
S_MntMeatProducts + 0.0615730534741 * S_MntSweetProducts + -0.09057901886639 * S_MntWines + 
0.20260454891291 * S_MonthsAsCustomer + -1.17048742280721 * S_NumCatalogPurchases + 
-0.84113790640734 * S_NumDealsPurchases + -0.10512672747147 * S_NumDistPurchases + 
0.07268711782494 * S_NumStorePurchases + 0.57578331257439 * S_NumWebPurchases + 
-1.34334433506558 * S_NumWebVisitsMonth + 0.50079465494904 * S_RFMstat + 0.77329849238514 * 
S_RMntFrq + 1.2759588366983 * S_Recency + 0.17722493443222 * S_Teenhome ;
2402286   +   H1x1_3  =      1.1751297152411 * S_AcceptedCmpTotal
2402287   +          +     0.14380060376858 * S_Age  +    -0.90459868540245 * S_Frq
2402288   +          +     0.65570498233801 * S_Income  +    -0.66078213466597 *
2402289   +        S_Kidhome  +      0.5364727654141 * S_Mnt  +    -0.56452823521458 *
2402290   +        S_MntFishProducts  +     0.11401811215013 * S_MntFruits
2402291   +          +     0.42809239636494 * S_MntGoldProds  +     3.28485519579047 *
2402292   +        S_MntMeatProducts  +    -0.10959477301368 * S_MntSweetProducts
2402293   +          +     -0.5779524716069 * S_MntWines  +     0.08256957915579 *
2402294   +        S_MonthsAsCustomer  +     0.48195221766948 * S_NumCatalogPurchases
2402295   +          +     0.45924983504762 * S_NumDealsPurchases
2402296   +          +    -0.25508041581692 * S_NumDistPurchases
2402297   +          +    -1.34901283858526 * S_NumStorePurchases
2402298   +          +    -0.86388975031663 * S_NumWebPurchases
2402299   +          +     1.86136110391797 * S_NumWebVisitsMonth
2402300   +          +     0.39724376701426 * S_RFMstat  +    -1.08648755949459 *
2402301   +        S_RMntFrq  +    -2.06955456943047 * S_Recency
2402302   +          +     -0.6524420065858 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.1751297152411 * S_AcceptedCmpTotal + 0.14380060376858 * S_Age 
+ -0.90459868540245 * S_Frq + 0.65570498233801 * S_Income + -0.66078213466597 * S_Kidhome + 
0.5364727654141 * S_Mnt + -0.56452823521458 * S_MntFishProducts + 0.11401811215013 * 
S_MntFruits + 0.42809239636494 * S_MntGoldProds + 3.28485519579047 * S_MntMeatProducts + 
-0.10959477301368 * S_MntSweetProducts + -0.5779524716069 * S_MntWines + 0.08256957915579 * 
S_MonthsAsCustomer + 0.48195221766948 * S_NumCatalogPurchases + 0.45924983504762 * 
S_NumDealsPurchases + -0.25508041581692 * S_NumDistPurchases + -1.34901283858526 * 
S_NumStorePurchases + -0.86388975031663 * S_NumWebPurchases + 1.86136110391797 * 
S_NumWebVisitsMonth + 0.39724376701426 * S_RFMstat + -1.08648755949459 * S_RMntFrq + 
-2.06955456943047 * S_Recency + -0.6524420065858 * S_Teenhome ;
2402303   +   H1x1_1  = H1x1_1  +     0.80545309346785 * AcceptedCmp10
2402304   +          +    -0.33518398776018 * AcceptedCmp20  +    -0.58961939502901 *
2402305   +        AcceptedCmp30  +    -0.89675052404295 * AcceptedCmp40
2402306   +          +     0.75506592249683 * AcceptedCmp50  +    -0.07335613460961 *
2402307   +        Complain0  +     0.34255762261501 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.80545309346785 * AcceptedCmp10 + -0.33518398776018 * 
AcceptedCmp20 + -0.58961939502901 * AcceptedCmp30 + -0.89675052404295 * AcceptedCmp40 + 
0.75506592249683 * AcceptedCmp50 + -0.07335613460961 * Complain0 + 0.34255762261501 * 
HigherEducationBinary0 ;
2402308   +   H1x1_2  = H1x1_2  +    -0.17834267108797 * AcceptedCmp10
2402309   +          +    -0.54414628806984 * AcceptedCmp20  +      0.8037591997808 *
2402310   +        AcceptedCmp30  +     0.37789561997689 * AcceptedCmp40
2402311   +          +    -1.39910847665731 * AcceptedCmp50  +    -0.44783176263268 *
2402312   +        Complain0  +     0.36763760090773 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.17834267108797 * AcceptedCmp10 + -0.54414628806984 
* AcceptedCmp20 + 0.8037591997808 * AcceptedCmp30 + 0.37789561997689 * AcceptedCmp40 + 
-1.39910847665731 * AcceptedCmp50 + -0.44783176263268 * Complain0 + 0.36763760090773 * 
HigherEducationBinary0 ;
2402313   +   H1x1_3  = H1x1_3  +    -0.20323890063703 * AcceptedCmp10
2402314   +          +    -0.08537895761507 * AcceptedCmp20  +     0.22533818089504 *
2402315   +        AcceptedCmp30  +    -0.22195995100127 * AcceptedCmp40
2402316   +          +    -2.01371926977123 * AcceptedCmp50  +    -0.17097719978842 *
2402317   +        Complain0  +     0.34016905753094 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.20323890063703 * AcceptedCmp10 + -0.08537895761507 
* AcceptedCmp20 + 0.22533818089504 * AcceptedCmp30 + -0.22195995100127 * AcceptedCmp40 + 
-2.01371926977123 * AcceptedCmp50 + -0.17097719978842 * Complain0 + 0.34016905753094 * 
HigherEducationBinary0 ;
2402318   +   H1x1_1  = H1x1_1  +    -0.03394180683805 * Education2n_Cycle
2402319   +          +    -0.38224926448988 * EducationBasic  +    -0.42512289883041 *
2402320   +        EducationGraduation  +    -0.59708578424036 * EducationMaster
2402321   +          +     0.48853068455666 * Marital_StatusDivorced
2402322   +          +    -0.54903474026465 * Marital_StatusMarried
2402323   +          +    -0.34079188373939 * Marital_StatusSingle
2402324   +          +    -0.64602969938868 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.03394180683805 * Education2n_Cycle + 
-0.38224926448988 * EducationBasic + -0.42512289883041 * EducationGraduation + 
-0.59708578424036 * EducationMaster + 0.48853068455666 * Marital_StatusDivorced + 
-0.54903474026465 * Marital_StatusMarried + -0.34079188373939 * Marital_StatusSingle + 
-0.64602969938868 * Marital_StatusTogether ;
2402325   +   H1x1_2  = H1x1_2  +    -0.26170943801998 * Education2n_Cycle
2402326   +          +     0.06893871459175 * EducationBasic  +    -0.84123174187664 *
2402327   +        EducationGraduation  +     0.19038549912088 * EducationMaster
2402328   +          +    -1.03547689902027 * Marital_StatusDivorced
2402329   +          +     2.42164864610471 * Marital_StatusMarried
2402330   +          +    -1.95342561304942 * Marital_StatusSingle
2402331   +          +      2.1397185142046 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.26170943801998 * Education2n_Cycle + 
0.06893871459175 * EducationBasic + -0.84123174187664 * EducationGraduation + 0.19038549912088 
* EducationMaster + -1.03547689902027 * Marital_StatusDivorced + 2.42164864610471 * 
Marital_StatusMarried + -1.95342561304942 * Marital_StatusSingle + 2.1397185142046 * 
Marital_StatusTogether ;
2402332   +   H1x1_3  = H1x1_3  +    -0.04236694810886 * Education2n_Cycle
2402333   +          +    -0.57404276980591 * EducationBasic  +     -0.1441989834351 *
2402334   +        EducationGraduation  +    -0.31867831184924 * EducationMaster
2402335   +          +      0.4337638747935 * Marital_StatusDivorced
2402336   +          +    -0.38508657017615 * Marital_StatusMarried
2402337   +          +     -0.0160269708326 * Marital_StatusSingle
2402338   +          +    -0.57491004270903 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.04236694810886 * Education2n_Cycle + 
-0.57404276980591 * EducationBasic + -0.1441989834351 * EducationGraduation + 
-0.31867831184924 * EducationMaster + 0.4337638747935 * Marital_StatusDivorced + 
-0.38508657017615 * Marital_StatusMarried + -0.0160269708326 * Marital_StatusSingle + 
-0.57491004270903 * Marital_StatusTogether ;
2402339   +   H1x1_1  =    -0.53426188790968 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.53426188790968 + H1x1_1 ;
2402340   +   H1x1_2  =     0.98557066823746 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.98557066823746 + H1x1_2 ;
2402341   +   H1x1_3  =     1.81937688438175 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.81937688438175 + H1x1_3 ;
2402342   +   H1x1_4  = 0;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0;
2402343   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
2402344   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2402345   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
2402346   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
2402347   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
2402348   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
2402349   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
2402350   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
2402351   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
2402352   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
2402353   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
2402354   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
2402355   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
2402356   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
2402357   +END;
MPRINT(EM_DIAGRAM):   END;
2402358   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2402359   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2402360   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2402361   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2402362   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2402363   +END;
MPRINT(EM_DIAGRAM):   END;
2402364   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2402365   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2402366   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2402367   +
2402368   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2402369   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2402370   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2402371   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2402372   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2402373   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2402374   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2402375   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2402376   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2402377   +end;
MPRINT(EM_DIAGRAM):   end;
2402378   +else do;
MPRINT(EM_DIAGRAM):   else do;
2402379   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2402380   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2402381   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2402382   +   end;
MPRINT(EM_DIAGRAM):   end;
2402383   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2402384   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2402385   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2402386   +   end;
MPRINT(EM_DIAGRAM):   end;
2402387   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2402388   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2402389   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2402390   +   end;
MPRINT(EM_DIAGRAM):   end;
2402391   +end;
MPRINT(EM_DIAGRAM):   end;
2402392   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2402393   +   P_DepVar1  =    -3.43702380277695 * H1x1_1  +    -7.14235896425537 * H1x1_2
2402394   +          +     10.8296305415538 * H1x1_3  +    -2.20824183229369 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.43702380277695 * H1x1_1 + -7.14235896425537 * H1x1_2 + 
10.8296305415538 * H1x1_3 + -2.20824183229369 * H1x1_4 ;
2402395   +   P_DepVar1  =    -3.68304614366462 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.68304614366462 + P_DepVar1 ;
2402396   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2402397   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2402398   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2402399   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2402400   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2402401   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2402402   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2402403   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2402404   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2402405   +END;
MPRINT(EM_DIAGRAM):   END;
2402406   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2402407   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2402408   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2402409   +END;
MPRINT(EM_DIAGRAM):   END;
2402410   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2402411   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2402412   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2402413   +END;
MPRINT(EM_DIAGRAM):   END;
2402414   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2402415   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2402416   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2402417   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2402418   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2402419   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2402420   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2402421   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2402422   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2402423   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2402424   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2402425   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2402426   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2402427   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2402428   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2402429   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2402430   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2402431   +END;
MPRINT(EM_DIAGRAM):   END;
2402432   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2402433   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2402434   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2402435   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2402436   +* Renaming variables for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural9;
2402437   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2402438   +* Renaming Posterior variables for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural9;
2402439   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2402440   +drop AutoNeural9_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_P_DepVar1;
2402441   +AutoNeural9_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural9_P_DepVar1 = P_DepVar1;
2402442   +drop AutoNeural9_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_P_DepVar0;
2402443   +AutoNeural9_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural9_P_DepVar0 = P_DepVar0;
2402444   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2402445   +* Renaming Into variables for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for AutoNeural9;
2402446   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2402447   +length AutoNeural9_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length AutoNeural9_I_DepVar $32;
2402448   +drop AutoNeural9_I_DepVar;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_I_DepVar;
2402449   +AutoNeural9_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   AutoNeural9_I_DepVar = I_DepVar;
2402450   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2402451   +* Renaming _WARN_ variable for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural9;
2402452   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2402453   +length AutoNeural9_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural9_WARN_ $4;
2402454   +drop AutoNeural9_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_WARN_;
2402455   +AutoNeural9_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural9_WARN_ = _WARN_;
2402456   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2402457   +* Ensmbl44: Scoring Code of model 2 of 3;
MPRINT(EM_DIAGRAM):   * Ensmbl44: Scoring Code of model 2 of 3;
2402458   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2402459   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2402460   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
2402461   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2402462   +* NODE: AutoNeural11;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural11;
2402463   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2402464   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2402465   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2402466   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2402467   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2402468   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2402469   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2402470   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2402471   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2402472   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2402473   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2402474   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2402475   +LENGTH _WARN_ $4
2402476   +      F_DepVar  $ 12
2402477   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2402478   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2402479   +
2402480   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2402481   +
2402482   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2402483   +
2402484   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2402485   +
2402486   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2402487   +
2402488   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2402489   +
2402490   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2402491   +
2402492   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2402493   +
2402494   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2402495   +
2402496   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2402497   +
2402498   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2402499   +
2402500   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2402501   +
2402502   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2402503   +
2402504   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2402505   +
2402506   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2402507   +
2402508   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2402509   +
2402510   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2402511   +
2402512   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2402513   +
2402514   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2402515   +
2402516   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2402517   +
2402518   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2402519   +
2402520   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2402521   +
2402522   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2402523   +
2402524   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2402525   +
2402526   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2402527   +
2402528   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2402529   +
2402530   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2402531   +
2402532   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2402533   +
2402534   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2402535   +
2402536   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2402537   +
2402538   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2402539   +
2402540   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2402541   +
2402542   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2402543   +
2402544   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2402545   +
2402546   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2402547   +
2402548   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2402549   +
2402550   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2402551   +
2402552   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2402553   +
2402554   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2402555   +
2402556   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2402557   +
2402558   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2402559   +
2402560   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2402561   +
2402562   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
2402563   +
2402564   +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
2402565   +
2402566   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
2402567   +
2402568   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
2402569   +
2402570   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
2402571   +
2402572   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
2402573   +
2402574   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
2402575   +
2402576   +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
2402577   +
2402578   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
2402579   +
2402580   +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
2402581   +
2402582   +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
2402583   +
2402584   +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
2402585   +
2402586   +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
2402587   +
2402588   +      label H2x1_6 = 'Hidden: H2x1_=6' ;
MPRINT(EM_DIAGRAM):   label H2x1_6 = 'Hidden: H2x1_=6' ;
2402589   +
2402590   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2402591   +
2402592   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2402593   +
2402594   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2402595   +
2402596   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2402597   +
2402598   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2402599   +
2402600   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2402601   +
2402602   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2402603   +
2402604   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2402605   +
2402606   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2402607   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2402608   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2402609   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2402610   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2402611   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2402612   +end;
MPRINT(EM_DIAGRAM):   end;
2402613   +else do;
MPRINT(EM_DIAGRAM):   else do;
2402614   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2402615   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2402616   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2402617   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2402618   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2402619   +   end;
MPRINT(EM_DIAGRAM):   end;
2402620   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2402621   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2402622   +   end;
MPRINT(EM_DIAGRAM):   end;
2402623   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2402624   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2402625   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2402626   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2402627   +   end;
MPRINT(EM_DIAGRAM):   end;
2402628   +end;
MPRINT(EM_DIAGRAM):   end;
2402629   +
2402630   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2402631   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2402632   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2402633   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2402634   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2402635   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2402636   +end;
MPRINT(EM_DIAGRAM):   end;
2402637   +else do;
MPRINT(EM_DIAGRAM):   else do;
2402638   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2402639   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2402640   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2402641   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2402642   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2402643   +   end;
MPRINT(EM_DIAGRAM):   end;
2402644   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2402645   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2402646   +   end;
MPRINT(EM_DIAGRAM):   end;
2402647   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2402648   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2402649   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2402650   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2402651   +   end;
MPRINT(EM_DIAGRAM):   end;
2402652   +end;
MPRINT(EM_DIAGRAM):   end;
2402653   +
2402654   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2402655   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2402656   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2402657   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2402658   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2402659   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2402660   +end;
MPRINT(EM_DIAGRAM):   end;
2402661   +else do;
MPRINT(EM_DIAGRAM):   else do;
2402662   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2402663   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2402664   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2402665   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2402666   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2402667   +   end;
MPRINT(EM_DIAGRAM):   end;
2402668   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2402669   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2402670   +   end;
MPRINT(EM_DIAGRAM):   end;
2402671   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2402672   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2402673   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2402674   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2402675   +   end;
MPRINT(EM_DIAGRAM):   end;
2402676   +end;
MPRINT(EM_DIAGRAM):   end;
2402677   +
2402678   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2402679   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2402680   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2402681   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2402682   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2402683   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2402684   +end;
MPRINT(EM_DIAGRAM):   end;
2402685   +else do;
MPRINT(EM_DIAGRAM):   else do;
2402686   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2402687   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2402688   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2402689   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2402690   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2402691   +   end;
MPRINT(EM_DIAGRAM):   end;
2402692   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2402693   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2402694   +   end;
MPRINT(EM_DIAGRAM):   end;
2402695   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2402696   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2402697   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2402698   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2402699   +   end;
MPRINT(EM_DIAGRAM):   end;
2402700   +end;
MPRINT(EM_DIAGRAM):   end;
2402701   +
2402702   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2402703   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2402704   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2402705   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2402706   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2402707   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2402708   +end;
MPRINT(EM_DIAGRAM):   end;
2402709   +else do;
MPRINT(EM_DIAGRAM):   else do;
2402710   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2402711   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2402712   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2402713   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2402714   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2402715   +   end;
MPRINT(EM_DIAGRAM):   end;
2402716   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2402717   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2402718   +   end;
MPRINT(EM_DIAGRAM):   end;
2402719   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2402720   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2402721   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2402722   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2402723   +   end;
MPRINT(EM_DIAGRAM):   end;
2402724   +end;
MPRINT(EM_DIAGRAM):   end;
2402725   +
2402726   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2402727   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2402728   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2402729   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2402730   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2402731   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2402732   +end;
MPRINT(EM_DIAGRAM):   end;
2402733   +else do;
MPRINT(EM_DIAGRAM):   else do;
2402734   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2402735   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2402736   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2402737   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2402738   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2402739   +   end;
MPRINT(EM_DIAGRAM):   end;
2402740   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2402741   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2402742   +   end;
MPRINT(EM_DIAGRAM):   end;
2402743   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2402744   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2402745   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2402746   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2402747   +   end;
MPRINT(EM_DIAGRAM):   end;
2402748   +end;
MPRINT(EM_DIAGRAM):   end;
2402749   +
2402750   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2402751   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2402752   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2402753   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2402754   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2402755   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2402756   +end;
MPRINT(EM_DIAGRAM):   end;
2402757   +else do;
MPRINT(EM_DIAGRAM):   else do;
2402758   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2402759   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2402760   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2402761   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2402762   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2402763   +   end;
MPRINT(EM_DIAGRAM):   end;
2402764   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2402765   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2402766   +   end;
MPRINT(EM_DIAGRAM):   end;
2402767   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2402768   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2402769   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2402770   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2402771   +   end;
MPRINT(EM_DIAGRAM):   end;
2402772   +end;
MPRINT(EM_DIAGRAM):   end;
2402773   +
2402774   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2402775   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
2402776   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2402777   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2402778   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2402779   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2402780   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2402781   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2402782   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2402783   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2402784   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2402785   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2402786   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2402787   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2402788   +end;
MPRINT(EM_DIAGRAM):   end;
2402789   +else do;
MPRINT(EM_DIAGRAM):   else do;
2402790   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2402791   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2402792   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2402793   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2402794   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2402795   +   end;
MPRINT(EM_DIAGRAM):   end;
2402796   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2402797   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2402798   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2402799   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2402800   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2402801   +   end;
MPRINT(EM_DIAGRAM):   end;
2402802   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2402803   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2402804   +   end;
MPRINT(EM_DIAGRAM):   end;
2402805   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2402806   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2402807   +   end;
MPRINT(EM_DIAGRAM):   end;
2402808   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2402809   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2402810   +   end;
MPRINT(EM_DIAGRAM):   end;
2402811   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2402812   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2402813   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2402814   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2402815   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2402816   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2402817   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2402818   +   end;
MPRINT(EM_DIAGRAM):   end;
2402819   +end;
MPRINT(EM_DIAGRAM):   end;
2402820   +
2402821   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2402822   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2402823   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
2402824   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2402825   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2402826   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2402827   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2402828   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2402829   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2402830   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2402831   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2402832   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2402833   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2402834   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2402835   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2402836   +end;
MPRINT(EM_DIAGRAM):   end;
2402837   +else do;
MPRINT(EM_DIAGRAM):   else do;
2402838   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2402839   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2402840   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2402841   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2402842   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2402843   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2402844   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2402845   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2402846   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2402847   +         end;
MPRINT(EM_DIAGRAM):   end;
2402848   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2402849   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2402850   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2402851   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2402852   +            end;
MPRINT(EM_DIAGRAM):   end;
2402853   +         end;
MPRINT(EM_DIAGRAM):   end;
2402854   +      end;
MPRINT(EM_DIAGRAM):   end;
2402855   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2402856   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2402857   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2402858   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2402859   +         end;
MPRINT(EM_DIAGRAM):   end;
2402860   +      end;
MPRINT(EM_DIAGRAM):   end;
2402861   +   end;
MPRINT(EM_DIAGRAM):   end;
2402862   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2402863   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2402864   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2402865   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2402866   +      end;
MPRINT(EM_DIAGRAM):   end;
2402867   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2402868   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2402869   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2402870   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2402871   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2402872   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2402873   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2402874   +         end;
MPRINT(EM_DIAGRAM):   end;
2402875   +      end;
MPRINT(EM_DIAGRAM):   end;
2402876   +   end;
MPRINT(EM_DIAGRAM):   end;
2402877   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2402878   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2402879   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2402880   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2402881   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2402882   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2402883   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2402884   +   end;
MPRINT(EM_DIAGRAM):   end;
2402885   +end;
MPRINT(EM_DIAGRAM):   end;
2402886   +
2402887   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2402888   +*** Checking missing input Interval
2402889   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2402890   +
2402891   +IF NMISS(
2402892   +   AcceptedCmpTotal ,
2402893   +   Age ,
2402894   +   Frq ,
2402895   +   Income ,
2402896   +   Kidhome ,
2402897   +   Mnt ,
2402898   +   MntFishProducts ,
2402899   +   MntFruits ,
2402900   +   MntGoldProds ,
2402901   +   MntMeatProducts ,
2402902   +   MntSweetProducts ,
2402903   +   MntWines ,
2402904   +   MonthsAsCustomer ,
2402905   +   NumCatalogPurchases ,
2402906   +   NumDealsPurchases ,
2402907   +   NumDistPurchases ,
2402908   +   NumStorePurchases ,
2402909   +   NumWebPurchases ,
2402910   +   NumWebVisitsMonth ,
2402911   +   RFMstat ,
2402912   +   RMntFrq ,
2402913   +   Recency ,
2402914   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
2402915   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2402916   +
2402917   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2402918   +END;
MPRINT(EM_DIAGRAM):   END;
2402919   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2402920   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2402921   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2402922   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2402923   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2402924   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2402925   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2402926   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2402927   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2402928   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2402929   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2402930   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2402931   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2402932   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2402933   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2402934   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2402935   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2402936   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2402937   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2402938   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2402939   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2402940   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2402941   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
2402942   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2402943   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2402944   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2402945   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2402946   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2402947   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2402948   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2402949   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2402950   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2402951   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2402952   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2402953   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2402954   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2402955   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2402956   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2402957   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2402958   +END;
MPRINT(EM_DIAGRAM):   END;
2402959   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2402960   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2402961   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2402962   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2402963   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2402964   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2402965   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2402966   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2402967   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2402968   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2402969   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2402970   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2402971   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2402972   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2402973   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2402974   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2402975   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2402976   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2402977   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2402978   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2402979   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2402980   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2402981   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
2402982   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2402983   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2402984   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2402985   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2402986   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2402987   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2402988   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2402989   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2402990   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2402991   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2402992   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
2402993   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2402994   +   ELSE S_NumCatalogPurchases
2402995   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2402996   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2402997   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2402998   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2402999   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2403000   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2403001   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2403002   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2403003   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2403004   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2403005   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2403006   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2403007   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2403008   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2403009   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2403010   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2403011   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2403012   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2403013   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2403014   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2403015   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2403016   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2403017   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2403018   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2403019   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2403020   +END;
MPRINT(EM_DIAGRAM):   END;
2403021   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2403022   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2403023   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2403024   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2403025   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2403026   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2403027   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2403028   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2403029   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2403030   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2403031   +   H1x1_1  =     0.16786131610493 * S_AcceptedCmpTotal
2403032   +          +     0.08150129707008 * S_Age  +    -0.00076335149511 * S_Frq
2403033   +          +     2.37648351383272 * S_Income  +    -1.63260278456818 *
2403034   +        S_Kidhome  +     -0.6720941090663 * S_Mnt  +    -0.03176174297509 *
2403035   +        S_MntFishProducts  +    -0.03796990721617 * S_MntFruits
2403036   +          +    -0.17020485447842 * S_MntGoldProds  +      0.7709093878281 *
2403037   +        S_MntMeatProducts  +    -0.26168538456938 * S_MntSweetProducts
2403038   +          +    -1.36275284328546 * S_MntWines  +    -0.30344694826738 *
2403039   +        S_MonthsAsCustomer  +     1.68662611500615 * S_NumCatalogPurchases
2403040   +          +     1.32037113020393 * S_NumDealsPurchases
2403041   +          +     0.42879249227132 * S_NumDistPurchases
2403042   +          +    -0.89190172778783 * S_NumStorePurchases
2403043   +          +    -0.87975442613962 * S_NumWebPurchases
2403044   +          +     2.98977282825831 * S_NumWebVisitsMonth
2403045   +          +     0.16388418187981 * S_RFMstat  +     0.63858980984599 *
2403046   +        S_RMntFrq  +    -2.53833222281652 * S_Recency
2403047   +          +    -2.72141665283523 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.16786131610493 * S_AcceptedCmpTotal + 0.08150129707008 * 
S_Age + -0.00076335149511 * S_Frq + 2.37648351383272 * S_Income + -1.63260278456818 * 
S_Kidhome + -0.6720941090663 * S_Mnt + -0.03176174297509 * S_MntFishProducts + 
-0.03796990721617 * S_MntFruits + -0.17020485447842 * S_MntGoldProds + 0.7709093878281 * 
S_MntMeatProducts + -0.26168538456938 * S_MntSweetProducts + -1.36275284328546 * S_MntWines + 
-0.30344694826738 * S_MonthsAsCustomer + 1.68662611500615 * S_NumCatalogPurchases + 
1.32037113020393 * S_NumDealsPurchases + 0.42879249227132 * S_NumDistPurchases + 
-0.89190172778783 * S_NumStorePurchases + -0.87975442613962 * S_NumWebPurchases + 
2.98977282825831 * S_NumWebVisitsMonth + 0.16388418187981 * S_RFMstat + 0.63858980984599 * 
S_RMntFrq + -2.53833222281652 * S_Recency + -2.72141665283523 * S_Teenhome ;
2403048   +   H1x1_2  =    -1.16140709294501 * S_AcceptedCmpTotal
2403049   +          +    -0.87210661607894 * S_Age  +    -0.15365607228782 * S_Frq
2403050   +          +    -1.14855351318782 * S_Income  +     -0.3792851632462 *
2403051   +        S_Kidhome  +    -1.20412080219233 * S_Mnt  +     0.98615533034973 *
2403052   +        S_MntFishProducts  +     0.44541456963703 * S_MntFruits
2403053   +          +    -0.86465923336111 * S_MntGoldProds  +    -5.15063925950455 *
2403054   +        S_MntMeatProducts  +     0.54937255903381 * S_MntSweetProducts
2403055   +          +      1.1566197343428 * S_MntWines  +     1.05956341559861 *
2403056   +        S_MonthsAsCustomer  +    -1.51353620179805 * S_NumCatalogPurchases
2403057   +          +    -1.16737670931605 * S_NumDealsPurchases
2403058   +          +     0.08205195039242 * S_NumDistPurchases
2403059   +          +    -0.65367044520084 * S_NumStorePurchases
2403060   +          +     2.39693083674757 * S_NumWebPurchases
2403061   +          +     0.18432526469897 * S_NumWebVisitsMonth
2403062   +          +    -0.81660690569703 * S_RFMstat  +      0.2679378370467 *
2403063   +        S_RMntFrq  +    -0.12214066685673 * S_Recency
2403064   +          +     1.80138107382539 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -1.16140709294501 * S_AcceptedCmpTotal + -0.87210661607894 * 
S_Age + -0.15365607228782 * S_Frq + -1.14855351318782 * S_Income + -0.3792851632462 * 
S_Kidhome + -1.20412080219233 * S_Mnt + 0.98615533034973 * S_MntFishProducts + 
0.44541456963703 * S_MntFruits + -0.86465923336111 * S_MntGoldProds + -5.15063925950455 * 
S_MntMeatProducts + 0.54937255903381 * S_MntSweetProducts + 1.1566197343428 * S_MntWines + 
1.05956341559861 * S_MonthsAsCustomer + -1.51353620179805 * S_NumCatalogPurchases + 
-1.16737670931605 * S_NumDealsPurchases + 0.08205195039242 * S_NumDistPurchases + 
-0.65367044520084 * S_NumStorePurchases + 2.39693083674757 * S_NumWebPurchases + 
0.18432526469897 * S_NumWebVisitsMonth + -0.81660690569703 * S_RFMstat + 0.2679378370467 * 
S_RMntFrq + -0.12214066685673 * S_Recency + 1.80138107382539 * S_Teenhome ;
2403065   +   H1x1_3  =      2.0905555295419 * S_AcceptedCmpTotal
2403066   +          +    -0.23515107640805 * S_Age  +    -0.34980320997139 * S_Frq
2403067   +          +     0.96612788543649 * S_Income  +    -0.57035066115881 *
2403068   +        S_Kidhome  +     0.22762934410578 * S_Mnt  +    -0.52536382903021 *
2403069   +        S_MntFishProducts  +    -1.18451511831956 * S_MntFruits
2403070   +          +     0.15600368092559 * S_MntGoldProds  +     2.66964572205551 *
2403071   +        S_MntMeatProducts  +    -0.66381928008493 * S_MntSweetProducts
2403072   +          +    -1.34669953562975 * S_MntWines  +     1.35404821514849 *
2403073   +        S_MonthsAsCustomer  +     1.74839628716461 * S_NumCatalogPurchases
2403074   +          +     0.76616480025024 * S_NumDealsPurchases
2403075   +          +     0.42823368706255 * S_NumDistPurchases
2403076   +          +    -1.16998364854907 * S_NumStorePurchases
2403077   +          +     -1.0841896541746 * S_NumWebPurchases
2403078   +          +     2.74837744375079 * S_NumWebVisitsMonth
2403079   +          +    -0.12893804494501 * S_RFMstat  +    -0.62922223536042 *
2403080   +        S_RMntFrq  +    -5.13438280616518 * S_Recency
2403081   +          +    -0.03717013845941 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 2.0905555295419 * S_AcceptedCmpTotal + -0.23515107640805 * 
S_Age + -0.34980320997139 * S_Frq + 0.96612788543649 * S_Income + -0.57035066115881 * 
S_Kidhome + 0.22762934410578 * S_Mnt + -0.52536382903021 * S_MntFishProducts + 
-1.18451511831956 * S_MntFruits + 0.15600368092559 * S_MntGoldProds + 2.66964572205551 * 
S_MntMeatProducts + -0.66381928008493 * S_MntSweetProducts + -1.34669953562975 * S_MntWines + 
1.35404821514849 * S_MonthsAsCustomer + 1.74839628716461 * S_NumCatalogPurchases + 
0.76616480025024 * S_NumDealsPurchases + 0.42823368706255 * S_NumDistPurchases + 
-1.16998364854907 * S_NumStorePurchases + -1.0841896541746 * S_NumWebPurchases + 
2.74837744375079 * S_NumWebVisitsMonth + -0.12893804494501 * S_RFMstat + -0.62922223536042 * 
S_RMntFrq + -5.13438280616518 * S_Recency + -0.03717013845941 * S_Teenhome ;
2403082   +   H1x1_4  =     0.00721395593412 * S_AcceptedCmpTotal
2403083   +          +    -0.01540387767211 * S_Age  +    -0.84860703860633 * S_Frq
2403084   +          +    -1.02288627805121 * S_Income  +    -1.09101870516967 *
2403085   +        S_Kidhome  +    -0.49364597366691 * S_Mnt  +    -0.46832600024559 *
2403086   +        S_MntFishProducts  +     0.18419647776638 * S_MntFruits
2403087   +          +     0.08548650236624 * S_MntGoldProds  +      3.4353205628246 *
2403088   +        S_MntMeatProducts  +    -0.34836704949861 * S_MntSweetProducts
2403089   +          +    -2.43294028965601 * S_MntWines  +       -0.52018014955 *
2403090   +        S_MonthsAsCustomer  +     0.64700842330282 * S_NumCatalogPurchases
2403091   +          +     0.78421010501058 * S_NumDealsPurchases
2403092   +          +     0.01075885160671 * S_NumDistPurchases
2403093   +          +    -1.99395040717832 * S_NumStorePurchases
2403094   +          +    -1.02908330834262 * S_NumWebPurchases
2403095   +          +     2.79163466516477 * S_NumWebVisitsMonth
2403096   +          +    -0.02537920152644 * S_RFMstat  +    -0.42457000565561 *
2403097   +        S_RMntFrq  +     -2.0907247135068 * S_Recency
2403098   +          +     0.74119954026621 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.00721395593412 * S_AcceptedCmpTotal + -0.01540387767211 * 
S_Age + -0.84860703860633 * S_Frq + -1.02288627805121 * S_Income + -1.09101870516967 * 
S_Kidhome + -0.49364597366691 * S_Mnt + -0.46832600024559 * S_MntFishProducts + 
0.18419647776638 * S_MntFruits + 0.08548650236624 * S_MntGoldProds + 3.4353205628246 * 
S_MntMeatProducts + -0.34836704949861 * S_MntSweetProducts + -2.43294028965601 * S_MntWines + 
-0.52018014955 * S_MonthsAsCustomer + 0.64700842330282 * S_NumCatalogPurchases + 
0.78421010501058 * S_NumDealsPurchases + 0.01075885160671 * S_NumDistPurchases + 
-1.99395040717832 * S_NumStorePurchases + -1.02908330834262 * S_NumWebPurchases + 
2.79163466516477 * S_NumWebVisitsMonth + -0.02537920152644 * S_RFMstat + -0.42457000565561 * 
S_RMntFrq + -2.0907247135068 * S_Recency + 0.74119954026621 * S_Teenhome ;
2403099   +   H1x1_5  =    -1.61701205426558 * S_AcceptedCmpTotal
2403100   +          +     0.08257295395479 * S_Age  +    -0.68185680658717 * S_Frq
2403101   +          +    -1.39465125759406 * S_Income  +    -1.25029109577242 *
2403102   +        S_Kidhome  +    -1.09090107886966 * S_Mnt  +     1.64350195586938 *
2403103   +        S_MntFishProducts  +      0.5087421773332 * S_MntFruits
2403104   +          +      0.4047616469084 * S_MntGoldProds  +    -7.16241250715453 *
2403105   +        S_MntMeatProducts  +    -0.92562420397097 * S_MntSweetProducts
2403106   +          +     1.87307481667927 * S_MntWines  +    -0.53417946416471 *
2403107   +        S_MonthsAsCustomer  +    -1.53123660652072 * S_NumCatalogPurchases
2403108   +          +    -1.04219068390022 * S_NumDealsPurchases
2403109   +          +    -0.45770204483973 * S_NumDistPurchases
2403110   +          +    -0.04941442229195 * S_NumStorePurchases
2403111   +          +     0.67187353161183 * S_NumWebPurchases
2403112   +          +     2.01907760553871 * S_NumWebVisitsMonth
2403113   +          +    -1.68329765100269 * S_RFMstat  +     0.29244142334331 *
2403114   +        S_RMntFrq  +    -1.12913051410394 * S_Recency
2403115   +          +     0.43082751824484 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.61701205426558 * S_AcceptedCmpTotal + 0.08257295395479 * 
S_Age + -0.68185680658717 * S_Frq + -1.39465125759406 * S_Income + -1.25029109577242 * 
S_Kidhome + -1.09090107886966 * S_Mnt + 1.64350195586938 * S_MntFishProducts + 0.5087421773332 
* S_MntFruits + 0.4047616469084 * S_MntGoldProds + -7.16241250715453 * S_MntMeatProducts + 
-0.92562420397097 * S_MntSweetProducts + 1.87307481667927 * S_MntWines + -0.53417946416471 * 
S_MonthsAsCustomer + -1.53123660652072 * S_NumCatalogPurchases + -1.04219068390022 * 
S_NumDealsPurchases + -0.45770204483973 * S_NumDistPurchases + -0.04941442229195 * 
S_NumStorePurchases + 0.67187353161183 * S_NumWebPurchases + 2.01907760553871 * 
S_NumWebVisitsMonth + -1.68329765100269 * S_RFMstat + 0.29244142334331 * S_RMntFrq + 
-1.12913051410394 * S_Recency + 0.43082751824484 * S_Teenhome ;
2403116   +   H1x1_1  = H1x1_1  +    -0.44646416045725 * AcceptedCmp10
2403117   +          +    -0.51992887099168 * AcceptedCmp20  +    -1.12974688442196 *
2403118   +        AcceptedCmp30  +    -0.25247614927616 * AcceptedCmp40
2403119   +          +     -1.0839587453165 * AcceptedCmp50  +    -0.37542128912082 *
2403120   +        Complain0  +     0.50509109375746 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.44646416045725 * AcceptedCmp10 + -0.51992887099168 
* AcceptedCmp20 + -1.12974688442196 * AcceptedCmp30 + -0.25247614927616 * AcceptedCmp40 + 
-1.0839587453165 * AcceptedCmp50 + -0.37542128912082 * Complain0 + 0.50509109375746 * 
HigherEducationBinary0 ;
2403121   +   H1x1_2  = H1x1_2  +     1.41785862418118 * AcceptedCmp10
2403122   +          +     0.14869386732553 * AcceptedCmp20  +    -0.34292007253529 *
2403123   +        AcceptedCmp30  +    -0.46450669830265 * AcceptedCmp40
2403124   +          +    -0.84675597945703 * AcceptedCmp50  +     -0.0664649548734 *
2403125   +        Complain0  +    -0.45532665777266 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 1.41785862418118 * AcceptedCmp10 + 0.14869386732553 * 
AcceptedCmp20 + -0.34292007253529 * AcceptedCmp30 + -0.46450669830265 * AcceptedCmp40 + 
-0.84675597945703 * AcceptedCmp50 + -0.0664649548734 * Complain0 + -0.45532665777266 * 
HigherEducationBinary0 ;
2403126   +   H1x1_3  = H1x1_3  +    -0.77549230890552 * AcceptedCmp10
2403127   +          +    -1.36005205352388 * AcceptedCmp20  +    -0.77268925112364 *
2403128   +        AcceptedCmp30  +    -1.48651970256564 * AcceptedCmp40
2403129   +          +    -1.49771960438108 * AcceptedCmp50  +     0.05855673938529 *
2403130   +        Complain0  +      0.5650947463497 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.77549230890552 * AcceptedCmp10 + -1.36005205352388 
* AcceptedCmp20 + -0.77268925112364 * AcceptedCmp30 + -1.48651970256564 * AcceptedCmp40 + 
-1.49771960438108 * AcceptedCmp50 + 0.05855673938529 * Complain0 + 0.5650947463497 * 
HigherEducationBinary0 ;
2403131   +   H1x1_4  = H1x1_4  +    -0.67577364181798 * AcceptedCmp10
2403132   +          +    -0.90920539880387 * AcceptedCmp20  +    -0.10856872028934 *
2403133   +        AcceptedCmp30  +    -0.17408320421731 * AcceptedCmp40
2403134   +          +    -0.40718112138881 * AcceptedCmp50  +    -1.15772819875829 *
2403135   +        Complain0  +    -0.63688652305256 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.67577364181798 * AcceptedCmp10 + -0.90920539880387 
* AcceptedCmp20 + -0.10856872028934 * AcceptedCmp30 + -0.17408320421731 * AcceptedCmp40 + 
-0.40718112138881 * AcceptedCmp50 + -1.15772819875829 * Complain0 + -0.63688652305256 * 
HigherEducationBinary0 ;
2403136   +   H1x1_5  = H1x1_5  +      -0.257461635853 * AcceptedCmp10
2403137   +          +    -0.53931888306725 * AcceptedCmp20  +    -0.18314917937273 *
2403138   +        AcceptedCmp30  +    -0.63373606551928 * AcceptedCmp40
2403139   +          +    -0.22117496766649 * AcceptedCmp50  +    -0.96313784449205 *
2403140   +        Complain0  +    -0.42031825118642 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.257461635853 * AcceptedCmp10 + -0.53931888306725 * 
AcceptedCmp20 + -0.18314917937273 * AcceptedCmp30 + -0.63373606551928 * AcceptedCmp40 + 
-0.22117496766649 * AcceptedCmp50 + -0.96313784449205 * Complain0 + -0.42031825118642 * 
HigherEducationBinary0 ;
2403141   +   H1x1_1  = H1x1_1  +    -0.61947659516101 * Education2n_Cycle
2403142   +          +     0.35542867116569 * EducationBasic  +    -0.40115062807285 *
2403143   +        EducationGraduation  +     0.09596442360106 * EducationMaster
2403144   +          +     2.58907527032049 * Marital_StatusDivorced
2403145   +          +    -2.45549008158921 * Marital_StatusMarried
2403146   +          +     2.56223650840768 * Marital_StatusSingle
2403147   +          +    -2.57680442835747 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.61947659516101 * Education2n_Cycle + 
0.35542867116569 * EducationBasic + -0.40115062807285 * EducationGraduation + 0.09596442360106 
* EducationMaster + 2.58907527032049 * Marital_StatusDivorced + -2.45549008158921 * 
Marital_StatusMarried + 2.56223650840768 * Marital_StatusSingle + -2.57680442835747 * 
Marital_StatusTogether ;
2403148   +   H1x1_2  = H1x1_2  +    -0.89996232033524 * Education2n_Cycle
2403149   +          +     0.51901949778729 * EducationBasic  +     0.48428543845596 *
2403150   +        EducationGraduation  +     0.29249899969052 * EducationMaster
2403151   +          +     0.83917299191368 * Marital_StatusDivorced
2403152   +          +    -0.62624692699191 * Marital_StatusMarried
2403153   +          +    -0.22585060624911 * Marital_StatusSingle
2403154   +          +    -1.13600554287291 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.89996232033524 * Education2n_Cycle + 
0.51901949778729 * EducationBasic + 0.48428543845596 * EducationGraduation + 0.29249899969052 
* EducationMaster + 0.83917299191368 * Marital_StatusDivorced + -0.62624692699191 * 
Marital_StatusMarried + -0.22585060624911 * Marital_StatusSingle + -1.13600554287291 * 
Marital_StatusTogether ;
2403155   +   H1x1_3  = H1x1_3  +    -0.14267095105584 * Education2n_Cycle
2403156   +          +    -0.02301358792856 * EducationBasic  +     0.52040244367562 *
2403157   +        EducationGraduation  +     -1.3163356801876 * EducationMaster
2403158   +          +    -0.65063506696715 * Marital_StatusDivorced
2403159   +          +    -2.37495865381256 * Marital_StatusMarried
2403160   +          +    -0.54954654146904 * Marital_StatusSingle
2403161   +          +    -2.20184943463859 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.14267095105584 * Education2n_Cycle + 
-0.02301358792856 * EducationBasic + 0.52040244367562 * EducationGraduation + -1.3163356801876 
* EducationMaster + -0.65063506696715 * Marital_StatusDivorced + -2.37495865381256 * 
Marital_StatusMarried + -0.54954654146904 * Marital_StatusSingle + -2.20184943463859 * 
Marital_StatusTogether ;
2403162   +   H1x1_4  = H1x1_4  +     0.07824072331908 * Education2n_Cycle
2403163   +          +    -0.70728597193571 * EducationBasic  +    -0.08522817414387 *
2403164   +        EducationGraduation  +     0.07916018399549 * EducationMaster
2403165   +          +     0.16185824798364 * Marital_StatusDivorced
2403166   +          +    -0.08142416735136 * Marital_StatusMarried
2403167   +          +    -0.20392270385969 * Marital_StatusSingle
2403168   +          +    -0.16702436233017 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.07824072331908 * Education2n_Cycle + 
-0.70728597193571 * EducationBasic + -0.08522817414387 * EducationGraduation + 
0.07916018399549 * EducationMaster + 0.16185824798364 * Marital_StatusDivorced + 
-0.08142416735136 * Marital_StatusMarried + -0.20392270385969 * Marital_StatusSingle + 
-0.16702436233017 * Marital_StatusTogether ;
2403169   +   H1x1_5  = H1x1_5  +    -0.24374540557838 * Education2n_Cycle
2403170   +          +    -0.69820143786999 * EducationBasic  +    -0.60198982003005 *
2403171   +        EducationGraduation  +     0.28107355175103 * EducationMaster
2403172   +          +      -0.516522631078 * Marital_StatusDivorced
2403173   +          +    -0.61661247789976 * Marital_StatusMarried
2403174   +          +    -0.99533130308294 * Marital_StatusSingle
2403175   +          +    -0.36897004084592 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.24374540557838 * Education2n_Cycle + 
-0.69820143786999 * EducationBasic + -0.60198982003005 * EducationGraduation + 
0.28107355175103 * EducationMaster + -0.516522631078 * Marital_StatusDivorced + 
-0.61661247789976 * Marital_StatusMarried + -0.99533130308294 * Marital_StatusSingle + 
-0.36897004084592 * Marital_StatusTogether ;
2403176   +   H1x1_1  =    -2.48464133714558 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -2.48464133714558 + H1x1_1 ;
2403177   +   H1x1_2  =    -1.27353840480002 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -1.27353840480002 + H1x1_2 ;
2403178   +   H1x1_3  =    -1.74000879961851 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.74000879961851 + H1x1_3 ;
2403179   +   H1x1_4  =    -0.38838285632991 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.38838285632991 + H1x1_4 ;
2403180   +   H1x1_5  =    -0.14124488553728 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.14124488553728 + H1x1_5 ;
2403181   +   H1x1_6  = 0;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0;
2403182   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
2403183   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2403184   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
2403185   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
2403186   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
2403187   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
2403188   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
2403189   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
2403190   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
2403191   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
2403192   +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
2403193   +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
2403194   +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
2403195   +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
2403196   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
2403197   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
2403198   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
2403199   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
2403200   +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
2403201   +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
2403202   +END;
MPRINT(EM_DIAGRAM):   END;
2403203   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2403204   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2403205   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2403206   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2403207   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2403208   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
2403209   +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
2403210   +END;
MPRINT(EM_DIAGRAM):   END;
2403211   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2403212   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
2403213   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2403214   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2403215   +   H1x2_1  =     0.48404108721156 * S_AcceptedCmpTotal
2403216   +          +    -0.27070568741648 * S_Age  +    -0.78729393257177 * S_Frq
2403217   +          +    -0.22841203379079 * S_Income  +      1.7948359601764 *
2403218   +        S_Kidhome  +     0.16415271082275 * S_Mnt  +     0.68709045116477 *
2403219   +        S_MntFishProducts  +     1.40499150479431 * S_MntFruits
2403220   +          +     1.76690927096327 * S_MntGoldProds  +    -0.47805967324795 *
2403221   +        S_MntMeatProducts  +    -1.98462171861386 * S_MntSweetProducts
2403222   +          +     0.17732042205332 * S_MntWines  +    -2.68647979937092 *
2403223   +        S_MonthsAsCustomer  +     0.66724634672152 * S_NumCatalogPurchases
2403224   +          +    -0.03801022287706 * S_NumDealsPurchases
2403225   +          +    -1.50723574966419 * S_NumDistPurchases
2403226   +          +    -0.21514545448485 * S_NumStorePurchases
2403227   +          +    -0.50179555233865 * S_NumWebPurchases
2403228   +          +    -0.68226572560161 * S_NumWebVisitsMonth
2403229   +          +    -1.16287961930374 * S_RFMstat  +    -0.10835316604382 *
2403230   +        S_RMntFrq  +     0.78178939203913 * S_Recency
2403231   +          +     0.99430928489958 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.48404108721156 * S_AcceptedCmpTotal + -0.27070568741648 * 
S_Age + -0.78729393257177 * S_Frq + -0.22841203379079 * S_Income + 1.7948359601764 * S_Kidhome 
+ 0.16415271082275 * S_Mnt + 0.68709045116477 * S_MntFishProducts + 1.40499150479431 * 
S_MntFruits + 1.76690927096327 * S_MntGoldProds + -0.47805967324795 * S_MntMeatProducts + 
-1.98462171861386 * S_MntSweetProducts + 0.17732042205332 * S_MntWines + -2.68647979937092 * 
S_MonthsAsCustomer + 0.66724634672152 * S_NumCatalogPurchases + -0.03801022287706 * 
S_NumDealsPurchases + -1.50723574966419 * S_NumDistPurchases + -0.21514545448485 * 
S_NumStorePurchases + -0.50179555233865 * S_NumWebPurchases + -0.68226572560161 * 
S_NumWebVisitsMonth + -1.16287961930374 * S_RFMstat + -0.10835316604382 * S_RMntFrq + 
0.78178939203913 * S_Recency + 0.99430928489958 * S_Teenhome ;
2403232   +   H1x2_2  =    -0.36352858735119 * S_AcceptedCmpTotal
2403233   +          +    -0.57224467079409 * S_Age  +    -1.50170848997829 * S_Frq
2403234   +          +    -0.38902839025885 * S_Income  +     -1.1798795668612 *
2403235   +        S_Kidhome  +     -0.1290183198617 * S_Mnt  +     0.76723261406072 *
2403236   +        S_MntFishProducts  +     -0.2940014517298 * S_MntFruits
2403237   +          +     1.10823983171432 * S_MntGoldProds  +    -0.31483479967732 *
2403238   +        S_MntMeatProducts  +     1.52044892546638 * S_MntSweetProducts
2403239   +          +     0.93667207634948 * S_MntWines  +     1.38654947651763 *
2403240   +        S_MonthsAsCustomer  +     0.60618457384701 * S_NumCatalogPurchases
2403241   +          +     0.70551335536975 * S_NumDealsPurchases
2403242   +          +     0.02824488988803 * S_NumDistPurchases
2403243   +          +    -0.47958123842808 * S_NumStorePurchases
2403244   +          +     1.04559003239583 * S_NumWebPurchases
2403245   +          +    -0.58386087813772 * S_NumWebVisitsMonth
2403246   +          +     0.30550498646512 * S_RFMstat  +     0.30157778523343 *
2403247   +        S_RMntFrq  +    -0.05848082255965 * S_Recency
2403248   +          +     1.93017367885145 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.36352858735119 * S_AcceptedCmpTotal + -0.57224467079409 * 
S_Age + -1.50170848997829 * S_Frq + -0.38902839025885 * S_Income + -1.1798795668612 * 
S_Kidhome + -0.1290183198617 * S_Mnt + 0.76723261406072 * S_MntFishProducts + -0.2940014517298 
* S_MntFruits + 1.10823983171432 * S_MntGoldProds + -0.31483479967732 * S_MntMeatProducts + 
1.52044892546638 * S_MntSweetProducts + 0.93667207634948 * S_MntWines + 1.38654947651763 * 
S_MonthsAsCustomer + 0.60618457384701 * S_NumCatalogPurchases + 0.70551335536975 * 
S_NumDealsPurchases + 0.02824488988803 * S_NumDistPurchases + -0.47958123842808 * 
S_NumStorePurchases + 1.04559003239583 * S_NumWebPurchases + -0.58386087813772 * 
S_NumWebVisitsMonth + 0.30550498646512 * S_RFMstat + 0.30157778523343 * S_RMntFrq + 
-0.05848082255965 * S_Recency + 1.93017367885145 * S_Teenhome ;
2403249   +   H1x2_3  =    -1.42573562358231 * S_AcceptedCmpTotal
2403250   +          +    -1.32139459670271 * S_Age  +    -0.65089374259133 * S_Frq
2403251   +          +     0.40762251828155 * S_Income  +     0.07844400105703 *
2403252   +        S_Kidhome  +     0.50965373569965 * S_Mnt  +     0.16029734923155 *
2403253   +        S_MntFishProducts  +     0.09920766855666 * S_MntFruits
2403254   +          +     1.72613699296152 * S_MntGoldProds  +    -0.05634715837952 *
2403255   +        S_MntMeatProducts  +    -0.46288044931269 * S_MntSweetProducts
2403256   +          +    -1.56275217321856 * S_MntWines  +     0.47573724745363 *
2403257   +        S_MonthsAsCustomer  +     0.24362096681468 * S_NumCatalogPurchases
2403258   +          +    -0.28907339261907 * S_NumDealsPurchases
2403259   +          +     0.04310505858352 * S_NumDistPurchases
2403260   +          +    -0.99594604666889 * S_NumStorePurchases
2403261   +          +    -0.58870940220114 * S_NumWebPurchases
2403262   +          +     0.84018399925148 * S_NumWebVisitsMonth
2403263   +          +    -0.19517311010454 * S_RFMstat  +     -0.3463233802461 *
2403264   +        S_RMntFrq  +    -1.47730936960999 * S_Recency
2403265   +          +    -0.88597688046705 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -1.42573562358231 * S_AcceptedCmpTotal + -1.32139459670271 * 
S_Age + -0.65089374259133 * S_Frq + 0.40762251828155 * S_Income + 0.07844400105703 * S_Kidhome 
+ 0.50965373569965 * S_Mnt + 0.16029734923155 * S_MntFishProducts + 0.09920766855666 * 
S_MntFruits + 1.72613699296152 * S_MntGoldProds + -0.05634715837952 * S_MntMeatProducts + 
-0.46288044931269 * S_MntSweetProducts + -1.56275217321856 * S_MntWines + 0.47573724745363 * 
S_MonthsAsCustomer + 0.24362096681468 * S_NumCatalogPurchases + -0.28907339261907 * 
S_NumDealsPurchases + 0.04310505858352 * S_NumDistPurchases + -0.99594604666889 * 
S_NumStorePurchases + -0.58870940220114 * S_NumWebPurchases + 0.84018399925148 * 
S_NumWebVisitsMonth + -0.19517311010454 * S_RFMstat + -0.3463233802461 * S_RMntFrq + 
-1.47730936960999 * S_Recency + -0.88597688046705 * S_Teenhome ;
2403266   +   H1x2_4  =     0.11016580381662 * S_AcceptedCmpTotal
2403267   +          +     0.30908576425954 * S_Age  +     0.34179480828109 * S_Frq
2403268   +          +     0.40584056795753 * S_Income  +    -0.45712899846476 *
2403269   +        S_Kidhome  +     1.12080510316382 * S_Mnt  +     0.48988466623601 *
2403270   +        S_MntFishProducts  +    -0.33589219598754 * S_MntFruits
2403271   +          +     0.89305356089927 * S_MntGoldProds  +    -2.00512215642683 *
2403272   +        S_MntMeatProducts  +     1.10859074670332 * S_MntSweetProducts
2403273   +          +     -1.0064133988839 * S_MntWines  +      0.7768603559605 *
2403274   +        S_MonthsAsCustomer  +     0.97922554259242 * S_NumCatalogPurchases
2403275   +          +     0.52917289878604 * S_NumDealsPurchases
2403276   +          +     0.30974142545809 * S_NumDistPurchases
2403277   +          +    -0.36081450643799 * S_NumStorePurchases
2403278   +          +    -0.28418053386759 * S_NumWebPurchases
2403279   +          +    -0.80759462497096 * S_NumWebVisitsMonth
2403280   +          +    -1.12633439579018 * S_RFMstat  +    -0.14662678398603 *
2403281   +        S_RMntFrq  +    -0.02418118976368 * S_Recency
2403282   +          +    -0.46548253671298 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.11016580381662 * S_AcceptedCmpTotal + 0.30908576425954 * 
S_Age + 0.34179480828109 * S_Frq + 0.40584056795753 * S_Income + -0.45712899846476 * S_Kidhome 
+ 1.12080510316382 * S_Mnt + 0.48988466623601 * S_MntFishProducts + -0.33589219598754 * 
S_MntFruits + 0.89305356089927 * S_MntGoldProds + -2.00512215642683 * S_MntMeatProducts + 
1.10859074670332 * S_MntSweetProducts + -1.0064133988839 * S_MntWines + 0.7768603559605 * 
S_MonthsAsCustomer + 0.97922554259242 * S_NumCatalogPurchases + 0.52917289878604 * 
S_NumDealsPurchases + 0.30974142545809 * S_NumDistPurchases + -0.36081450643799 * 
S_NumStorePurchases + -0.28418053386759 * S_NumWebPurchases + -0.80759462497096 * 
S_NumWebVisitsMonth + -1.12633439579018 * S_RFMstat + -0.14662678398603 * S_RMntFrq + 
-0.02418118976368 * S_Recency + -0.46548253671298 * S_Teenhome ;
2403283   +   H1x2_5  =    -0.55551536908819 * S_AcceptedCmpTotal
2403284   +          +    -0.09163465220674 * S_Age  +    -0.35937602626275 * S_Frq
2403285   +          +     0.61145646041534 * S_Income  +     0.28920493959955 *
2403286   +        S_Kidhome  +     0.71661843805688 * S_Mnt  +     0.25254041554237 *
2403287   +        S_MntFishProducts  +    -0.38704785732563 * S_MntFruits
2403288   +          +    -0.16912995068939 * S_MntGoldProds  +     0.21440191729631 *
2403289   +        S_MntMeatProducts  +    -0.49507693220329 * S_MntSweetProducts
2403290   +          +      0.3153765288287 * S_MntWines  +    -0.15329574285112 *
2403291   +        S_MonthsAsCustomer  +     1.28722879296429 * S_NumCatalogPurchases
2403292   +          +    -0.47500053723253 * S_NumDealsPurchases
2403293   +          +     0.41421086319635 * S_NumDistPurchases
2403294   +          +     0.69664835428137 * S_NumStorePurchases
2403295   +          +     0.66359306812968 * S_NumWebPurchases
2403296   +          +     0.77931462528741 * S_NumWebVisitsMonth
2403297   +          +     0.05868786291548 * S_RFMstat  +     0.77672802649379 *
2403298   +        S_RMntFrq  +    -1.91226042675868 * S_Recency
2403299   +          +     1.79227856637688 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.55551536908819 * S_AcceptedCmpTotal + -0.09163465220674 * 
S_Age + -0.35937602626275 * S_Frq + 0.61145646041534 * S_Income + 0.28920493959955 * S_Kidhome 
+ 0.71661843805688 * S_Mnt + 0.25254041554237 * S_MntFishProducts + -0.38704785732563 * 
S_MntFruits + -0.16912995068939 * S_MntGoldProds + 0.21440191729631 * S_MntMeatProducts + 
-0.49507693220329 * S_MntSweetProducts + 0.3153765288287 * S_MntWines + -0.15329574285112 * 
S_MonthsAsCustomer + 1.28722879296429 * S_NumCatalogPurchases + -0.47500053723253 * 
S_NumDealsPurchases + 0.41421086319635 * S_NumDistPurchases + 0.69664835428137 * 
S_NumStorePurchases + 0.66359306812968 * S_NumWebPurchases + 0.77931462528741 * 
S_NumWebVisitsMonth + 0.05868786291548 * S_RFMstat + 0.77672802649379 * S_RMntFrq + 
-1.91226042675868 * S_Recency + 1.79227856637688 * S_Teenhome ;
2403300   +   H1x2_1  = H1x2_1  +     1.13471289065691 * AcceptedCmp10
2403301   +          +     0.65974383309652 * AcceptedCmp20  +    -1.87292531678796 *
2403302   +        AcceptedCmp30  +      -1.353797047409 * AcceptedCmp40
2403303   +          +     0.20616786486771 * AcceptedCmp50  +    -0.38264326101775 *
2403304   +        Complain0  +    -0.17807638061615 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 1.13471289065691 * AcceptedCmp10 + 0.65974383309652 * 
AcceptedCmp20 + -1.87292531678796 * AcceptedCmp30 + -1.353797047409 * AcceptedCmp40 + 
0.20616786486771 * AcceptedCmp50 + -0.38264326101775 * Complain0 + -0.17807638061615 * 
HigherEducationBinary0 ;
2403305   +   H1x2_2  = H1x2_2  +     1.21347348622419 * AcceptedCmp10
2403306   +          +    -0.25372740217388 * AcceptedCmp20  +     1.86937589112006 *
2403307   +        AcceptedCmp30  +    -0.04754722838516 * AcceptedCmp40
2403308   +          +    -0.08078800460742 * AcceptedCmp50  +     1.62387969342769 *
2403309   +        Complain0  +    -0.78004732229344 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 1.21347348622419 * AcceptedCmp10 + -0.25372740217388 * 
AcceptedCmp20 + 1.86937589112006 * AcceptedCmp30 + -0.04754722838516 * AcceptedCmp40 + 
-0.08078800460742 * AcceptedCmp50 + 1.62387969342769 * Complain0 + -0.78004732229344 * 
HigherEducationBinary0 ;
2403310   +   H1x2_3  = H1x2_3  +    -0.02152665189186 * AcceptedCmp10
2403311   +          +     0.57207081192818 * AcceptedCmp20  +      0.6212177562119 *
2403312   +        AcceptedCmp30  +    -0.73691462528053 * AcceptedCmp40
2403313   +          +    -0.35326427815838 * AcceptedCmp50  +     0.14875513793176 *
2403314   +        Complain0  +    -0.13978395235915 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -0.02152665189186 * AcceptedCmp10 + 0.57207081192818 * 
AcceptedCmp20 + 0.6212177562119 * AcceptedCmp30 + -0.73691462528053 * AcceptedCmp40 + 
-0.35326427815838 * AcceptedCmp50 + 0.14875513793176 * Complain0 + -0.13978395235915 * 
HigherEducationBinary0 ;
2403315   +   H1x2_4  = H1x2_4  +     0.87315450122595 * AcceptedCmp10
2403316   +          +      0.7868322457627 * AcceptedCmp20  +    -0.23332719513906 *
2403317   +        AcceptedCmp30  +    -0.68817918979928 * AcceptedCmp40
2403318   +          +    -0.57204462412445 * AcceptedCmp50  +    -0.86223238269616 *
2403319   +        Complain0  +     -0.3126348645458 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.87315450122595 * AcceptedCmp10 + 0.7868322457627 * 
AcceptedCmp20 + -0.23332719513906 * AcceptedCmp30 + -0.68817918979928 * AcceptedCmp40 + 
-0.57204462412445 * AcceptedCmp50 + -0.86223238269616 * Complain0 + -0.3126348645458 * 
HigherEducationBinary0 ;
2403320   +   H1x2_5  = H1x2_5  +     0.29282165496733 * AcceptedCmp10
2403321   +          +     1.51708756092369 * AcceptedCmp20  +     1.20268215158483 *
2403322   +        AcceptedCmp30  +     0.30521477351547 * AcceptedCmp40
2403323   +          +    -0.58691162701837 * AcceptedCmp50  +     0.75641665624817 *
2403324   +        Complain0  +      0.7018761099345 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.29282165496733 * AcceptedCmp10 + 1.51708756092369 * 
AcceptedCmp20 + 1.20268215158483 * AcceptedCmp30 + 0.30521477351547 * AcceptedCmp40 + 
-0.58691162701837 * AcceptedCmp50 + 0.75641665624817 * Complain0 + 0.7018761099345 * 
HigherEducationBinary0 ;
2403325   +   H1x2_1  = H1x2_1  +    -0.68955031483686 * Education2n_Cycle
2403326   +          +    -1.63162976419312 * EducationBasic  +     1.58569020932253 *
2403327   +        EducationGraduation  +     0.89392741557091 * EducationMaster
2403328   +          +    -1.34742914042312 * Marital_StatusDivorced
2403329   +          +    -0.75378934918763 * Marital_StatusMarried
2403330   +          +    -1.85411678929217 * Marital_StatusSingle
2403331   +          +     0.34579160965376 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.68955031483686 * Education2n_Cycle + 
-1.63162976419312 * EducationBasic + 1.58569020932253 * EducationGraduation + 0.89392741557091 
* EducationMaster + -1.34742914042312 * Marital_StatusDivorced + -0.75378934918763 * 
Marital_StatusMarried + -1.85411678929217 * Marital_StatusSingle + 0.34579160965376 * 
Marital_StatusTogether ;
2403332   +   H1x2_2  = H1x2_2  +     0.91842441316819 * Education2n_Cycle
2403333   +          +    -0.10372785737624 * EducationBasic  +     1.79022097342125 *
2403334   +        EducationGraduation  +      1.4602485898642 * EducationMaster
2403335   +          +     0.47958659206261 * Marital_StatusDivorced
2403336   +          +     -0.9665584294045 * Marital_StatusMarried
2403337   +          +      0.9733784530538 * Marital_StatusSingle
2403338   +          +     0.19258101270915 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.91842441316819 * Education2n_Cycle + 
-0.10372785737624 * EducationBasic + 1.79022097342125 * EducationGraduation + 1.4602485898642 
* EducationMaster + 0.47958659206261 * Marital_StatusDivorced + -0.9665584294045 * 
Marital_StatusMarried + 0.9733784530538 * Marital_StatusSingle + 0.19258101270915 * 
Marital_StatusTogether ;
2403339   +   H1x2_3  = H1x2_3  +     1.26817216331303 * Education2n_Cycle
2403340   +          +    -1.60153781162075 * EducationBasic  +    -0.32068567398782 *
2403341   +        EducationGraduation  +     1.49772418974753 * EducationMaster
2403342   +          +    -0.56894207908284 * Marital_StatusDivorced
2403343   +          +    -0.96715106987195 * Marital_StatusMarried
2403344   +          +     1.18678144721443 * Marital_StatusSingle
2403345   +          +     1.05940264255347 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 1.26817216331303 * Education2n_Cycle + 
-1.60153781162075 * EducationBasic + -0.32068567398782 * EducationGraduation + 
1.49772418974753 * EducationMaster + -0.56894207908284 * Marital_StatusDivorced + 
-0.96715106987195 * Marital_StatusMarried + 1.18678144721443 * Marital_StatusSingle + 
1.05940264255347 * Marital_StatusTogether ;
2403346   +   H1x2_4  = H1x2_4  +    -1.19824707240276 * Education2n_Cycle
2403347   +          +     0.43905907692169 * EducationBasic  +    -1.18279972023424 *
2403348   +        EducationGraduation  +    -2.01250798855133 * EducationMaster
2403349   +          +     -0.6061959224661 * Marital_StatusDivorced
2403350   +          +     0.03495844244684 * Marital_StatusMarried
2403351   +          +    -0.63896361063244 * Marital_StatusSingle
2403352   +          +     0.74357887057422 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -1.19824707240276 * Education2n_Cycle + 
0.43905907692169 * EducationBasic + -1.18279972023424 * EducationGraduation + 
-2.01250798855133 * EducationMaster + -0.6061959224661 * Marital_StatusDivorced + 
0.03495844244684 * Marital_StatusMarried + -0.63896361063244 * Marital_StatusSingle + 
0.74357887057422 * Marital_StatusTogether ;
2403353   +   H1x2_5  = H1x2_5  +     -0.6530237200396 * Education2n_Cycle
2403354   +          +     0.90062473169279 * EducationBasic  +    -3.01933913602199 *
2403355   +        EducationGraduation  +     -0.1598988619204 * EducationMaster
2403356   +          +     0.82178907301319 * Marital_StatusDivorced
2403357   +          +     1.69543553114589 * Marital_StatusMarried
2403358   +          +     -2.1272067363559 * Marital_StatusSingle
2403359   +          +     0.24274508474634 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + -0.6530237200396 * Education2n_Cycle + 
0.90062473169279 * EducationBasic + -3.01933913602199 * EducationGraduation + -0.1598988619204 
* EducationMaster + 0.82178907301319 * Marital_StatusDivorced + 1.69543553114589 * 
Marital_StatusMarried + -2.1272067363559 * Marital_StatusSingle + 0.24274508474634 * 
Marital_StatusTogether ;
2403360   +   H1x2_1  =     0.30842509451224 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.30842509451224 + H1x2_1 ;
2403361   +   H1x2_2  =     1.79200699407075 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 1.79200699407075 + H1x2_2 ;
2403362   +   H1x2_3  =     0.66706944906809 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = 0.66706944906809 + H1x2_3 ;
2403363   +   H1x2_4  =     -0.7356254138015 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.7356254138015 + H1x2_4 ;
2403364   +   H1x2_5  =    -0.68066575174095 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.68066575174095 + H1x2_5 ;
2403365   +   H1x2_6  = 0;
MPRINT(EM_DIAGRAM):   H1x2_6 = 0;
2403366   +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
2403367   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2403368   +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
2403369   +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
2403370   +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
2403371   +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
2403372   +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
2403373   +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
2403374   +   H1x2_4  = EXP(H1x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(H1x2_4 - _MAX_);
2403375   +   _SUM_ = _SUM_ + H1x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_4 ;
2403376   +   H1x2_5  = EXP(H1x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(H1x2_5 - _MAX_);
2403377   +   _SUM_ = _SUM_ + H1x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_5 ;
2403378   +   H1x2_6  = EXP(H1x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(H1x2_6 - _MAX_);
2403379   +   _SUM_ = _SUM_ + H1x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_6 ;
2403380   +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
2403381   +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
2403382   +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
2403383   +   H1x2_4  = H1x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 / _SUM_;
2403384   +   H1x2_5  = H1x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 / _SUM_;
2403385   +   H1x2_6  = H1x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 / _SUM_;
2403386   +END;
MPRINT(EM_DIAGRAM):   END;
2403387   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2403388   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
2403389   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
2403390   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
2403391   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
2403392   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
2403393   +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
2403394   +END;
MPRINT(EM_DIAGRAM):   END;
2403395   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2403396   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
2403397   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2403398   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2403399   +   H2x1_1  =      0.7656278374321 * H1x1_1  +     1.18988619460831 * H1x1_2
2403400   +          +    -0.68458045558713 * H1x1_3  +     0.49093980591245 * H1x1_4
2403401   +          +    -1.27959429919804 * H1x1_5  +    -1.38760297105319 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 0.7656278374321 * H1x1_1 + 1.18988619460831 * H1x1_2 + 
-0.68458045558713 * H1x1_3 + 0.49093980591245 * H1x1_4 + -1.27959429919804 * H1x1_5 + 
-1.38760297105319 * H1x1_6 ;
2403402   +   H2x1_2  =    -1.48941810274544 * H1x1_1  +     1.75443095464294 * H1x1_2
2403403   +          +    -1.63478694878031 * H1x1_3  +    -0.69296364459258 * H1x1_4
2403404   +          +     3.14007823471691 * H1x1_5  +     2.71965753640902 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -1.48941810274544 * H1x1_1 + 1.75443095464294 * H1x1_2 + 
-1.63478694878031 * H1x1_3 + -0.69296364459258 * H1x1_4 + 3.14007823471691 * H1x1_5 + 
2.71965753640902 * H1x1_6 ;
2403405   +   H2x1_3  =     1.07426996100463 * H1x1_1  +    -1.76796943416489 * H1x1_2
2403406   +          +    -0.11946940948224 * H1x1_3  +     1.25457449221991 * H1x1_4
2403407   +          +     -1.4079980040852 * H1x1_5  +    -0.94725163293394 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.07426996100463 * H1x1_1 + -1.76796943416489 * H1x1_2 + 
-0.11946940948224 * H1x1_3 + 1.25457449221991 * H1x1_4 + -1.4079980040852 * H1x1_5 + 
-0.94725163293394 * H1x1_6 ;
2403408   +   H2x1_4  =    -0.00078893231548 * H1x1_1  +     0.06396324179717 * H1x1_2
2403409   +          +    -0.13674165204668 * H1x1_3  +    -0.26576379023249 * H1x1_4
2403410   +          +     0.44513643867194 * H1x1_5  +     0.66585878141635 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -0.00078893231548 * H1x1_1 + 0.06396324179717 * H1x1_2 + 
-0.13674165204668 * H1x1_3 + -0.26576379023249 * H1x1_4 + 0.44513643867194 * H1x1_5 + 
0.66585878141635 * H1x1_6 ;
2403411   +   H2x1_5  =     -2.8467581879118 * H1x1_1  +     2.94182061339515 * H1x1_2
2403412   +          +    -3.43021438685063 * H1x1_3  +    -4.00045607730935 * H1x1_4
2403413   +          +     3.09230566797337 * H1x1_5  +     3.57592566919388 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -2.8467581879118 * H1x1_1 + 2.94182061339515 * H1x1_2 + 
-3.43021438685063 * H1x1_3 + -4.00045607730935 * H1x1_4 + 3.09230566797337 * H1x1_5 + 
3.57592566919388 * H1x1_6 ;
2403414   +   H2x1_6  =    -0.29912975132561 * H1x1_1  +     0.25554634262501 * H1x1_2
2403415   +          +    -0.62666868576544 * H1x1_3  +     1.54567563696489 * H1x1_4
2403416   +          +     1.87530466579189 * H1x1_5  +    -0.32006241006585 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = -0.29912975132561 * H1x1_1 + 0.25554634262501 * H1x1_2 + 
-0.62666868576544 * H1x1_3 + 1.54567563696489 * H1x1_4 + 1.87530466579189 * H1x1_5 + 
-0.32006241006585 * H1x1_6 ;
2403417   +   H2x1_1  = H2x1_1  +    -0.53923803948063 * H1x2_1
2403418   +          +    -0.14551996067575 * H1x2_2  +     1.15730137448351 * H1x2_3
2403419   +          +     0.02585401686791 * H1x2_4  +     -0.9274056409194 * H1x2_5
2403420   +          +    -0.07237646966438 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -0.53923803948063 * H1x2_1 + -0.14551996067575 * 
H1x2_2 + 1.15730137448351 * H1x2_3 + 0.02585401686791 * H1x2_4 + -0.9274056409194 * H1x2_5 + 
-0.07237646966438 * H1x2_6 ;
2403421   +   H2x1_2  = H2x1_2  +     -0.1441321293455 * H1x2_1
2403422   +          +    -0.53271770203833 * H1x2_2  +    -2.80064282115477 * H1x2_3
2403423   +          +    -1.05759395901612 * H1x2_4  +    -0.55127059339304 * H1x2_5
2403424   +          +     0.35471332651631 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -0.1441321293455 * H1x2_1 + -0.53271770203833 * H1x2_2 
+ -2.80064282115477 * H1x2_3 + -1.05759395901612 * H1x2_4 + -0.55127059339304 * H1x2_5 + 
0.35471332651631 * H1x2_6 ;
2403425   +   H2x1_3  = H2x1_3  +     -0.5351190580444 * H1x2_1
2403426   +          +    -0.02107048725988 * H1x2_2  +    -0.83389437376968 * H1x2_3
2403427   +          +    -0.80183937400902 * H1x2_4  +    -0.66588385104453 * H1x2_5
2403428   +          +      0.5218140468737 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -0.5351190580444 * H1x2_1 + -0.02107048725988 * H1x2_2 
+ -0.83389437376968 * H1x2_3 + -0.80183937400902 * H1x2_4 + -0.66588385104453 * H1x2_5 + 
0.5218140468737 * H1x2_6 ;
2403429   +   H2x1_4  = H2x1_4  +     1.89050022127485 * H1x2_1
2403430   +          +     -2.6557601537516 * H1x2_2  +     0.99126360053411 * H1x2_3
2403431   +          +    -0.44091776054792 * H1x2_4  +    -1.48547403065153 * H1x2_5
2403432   +          +    -0.67920869444907 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 1.89050022127485 * H1x2_1 + -2.6557601537516 * H1x2_2 
+ 0.99126360053411 * H1x2_3 + -0.44091776054792 * H1x2_4 + -1.48547403065153 * H1x2_5 + 
-0.67920869444907 * H1x2_6 ;
2403433   +   H2x1_5  = H2x1_5  +      0.2827883572995 * H1x2_1
2403434   +          +    -0.68177519072226 * H1x2_2  +    -1.62062483607713 * H1x2_3
2403435   +          +     0.24454579481466 * H1x2_4  +    -0.07591553404219 * H1x2_5
2403436   +          +      1.1175989027563 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 0.2827883572995 * H1x2_1 + -0.68177519072226 * H1x2_2 
+ -1.62062483607713 * H1x2_3 + 0.24454579481466 * H1x2_4 + -0.07591553404219 * H1x2_5 + 
1.1175989027563 * H1x2_6 ;
2403437   +   H2x1_6  = H2x1_6  +    -0.00603649892235 * H1x2_1
2403438   +          +    -1.39053357060307 * H1x2_2  +    -1.34023350990878 * H1x2_3
2403439   +          +    -0.76811804565852 * H1x2_4  +    -1.40869786147662 * H1x2_5
2403440   +          +     1.54589390085972 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + -0.00603649892235 * H1x2_1 + -1.39053357060307 * 
H1x2_2 + -1.34023350990878 * H1x2_3 + -0.76811804565852 * H1x2_4 + -1.40869786147662 * H1x2_5 
+ 1.54589390085972 * H1x2_6 ;
2403441   +   H2x1_1  =     0.47873396703524 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 0.47873396703524 + H2x1_1 ;
2403442   +   H2x1_2  =     -0.0000340630035 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -0.0000340630035 + H2x1_2 ;
2403443   +   H2x1_3  =     0.35556259592214 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 0.35556259592214 + H2x1_3 ;
2403444   +   H2x1_4  =     1.01896219314016 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.01896219314016 + H2x1_4 ;
2403445   +   H2x1_5  =     0.72195082860145 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = 0.72195082860145 + H2x1_5 ;
2403446   +   H2x1_6  =     0.24171639764515 + H2x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 0.24171639764515 + H2x1_6 ;
2403447   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2403448   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2403449   +   H2x1_1  = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
2403450   +   H2x1_2  = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
2403451   +   H2x1_3  = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
2403452   +   H2x1_4  = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
2403453   +   H2x1_5  = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_5 = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
2403454   +   H2x1_6  = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
2403455   +END;
MPRINT(EM_DIAGRAM):   END;
2403456   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2403457   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
2403458   +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
2403459   +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
2403460   +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
2403461   +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
2403462   +   H2x1_6  = .;
MPRINT(EM_DIAGRAM):   H2x1_6 = .;
2403463   +END;
MPRINT(EM_DIAGRAM):   END;
2403464   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2403465   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2403466   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2403467   +
2403468   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2403469   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2403470   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2403471   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2403472   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2403473   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2403474   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2403475   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2403476   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2403477   +end;
MPRINT(EM_DIAGRAM):   end;
2403478   +else do;
MPRINT(EM_DIAGRAM):   else do;
2403479   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2403480   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2403481   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2403482   +   end;
MPRINT(EM_DIAGRAM):   end;
2403483   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2403484   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2403485   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2403486   +   end;
MPRINT(EM_DIAGRAM):   end;
2403487   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2403488   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2403489   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2403490   +   end;
MPRINT(EM_DIAGRAM):   end;
2403491   +end;
MPRINT(EM_DIAGRAM):   end;
2403492   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2403493   +   P_DepVar1  =     7.13056975005701 * H2x1_1  +    -9.26714696465882 * H2x1_2
2403494   +          +     9.36351037194964 * H2x1_3  +     2.76582940055979 * H2x1_4
2403495   +          +    -20.1354182036801 * H2x1_5  +     1.54726164498938 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 7.13056975005701 * H2x1_1 + -9.26714696465882 * H2x1_2 + 
9.36351037194964 * H2x1_3 + 2.76582940055979 * H2x1_4 + -20.1354182036801 * H2x1_5 + 
1.54726164498938 * H2x1_6 ;
2403496   +   P_DepVar1  =     5.03726079820845 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 5.03726079820845 + P_DepVar1 ;
2403497   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2403498   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2403499   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2403500   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2403501   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2403502   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2403503   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2403504   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2403505   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2403506   +END;
MPRINT(EM_DIAGRAM):   END;
2403507   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2403508   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2403509   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2403510   +END;
MPRINT(EM_DIAGRAM):   END;
2403511   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2403512   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2403513   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2403514   +END;
MPRINT(EM_DIAGRAM):   END;
2403515   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2403516   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2403517   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2403518   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2403519   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2403520   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2403521   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2403522   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2403523   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2403524   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2403525   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2403526   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2403527   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2403528   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2403529   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2403530   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2403531   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2403532   +END;
MPRINT(EM_DIAGRAM):   END;
2403533   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2403534   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2403535   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2403536   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2403537   +* Renaming variables for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural11;
2403538   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2403539   +* Renaming Posterior variables for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural11;
2403540   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2403541   +drop AutoNeural11_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_P_DepVar1;
2403542   +AutoNeural11_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural11_P_DepVar1 = P_DepVar1;
2403543   +drop AutoNeural11_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_P_DepVar0;
2403544   +AutoNeural11_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural11_P_DepVar0 = P_DepVar0;
2403545   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2403546   +* Renaming Into variables for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for AutoNeural11;
2403547   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2403548   +length AutoNeural11_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length AutoNeural11_I_DepVar $32;
2403549   +drop AutoNeural11_I_DepVar;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_I_DepVar;
2403550   +AutoNeural11_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   AutoNeural11_I_DepVar = I_DepVar;
2403551   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2403552   +* Renaming _WARN_ variable for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural11;
2403553   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2403554   +length AutoNeural11_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural11_WARN_ $4;
2403555   +drop AutoNeural11_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_WARN_;
2403556   +AutoNeural11_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural11_WARN_ = _WARN_;
2403557   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2403558   +* Ensmbl44: Scoring Code of model 3 of 3;
MPRINT(EM_DIAGRAM):   * Ensmbl44: Scoring Code of model 3 of 3;
2403559   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2403560   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2403561   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
2403562   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2403563   +* NODE: AutoNeural12;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural12;
2403564   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2403565   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2403566   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2403567   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2403568   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2403569   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2403570   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2403571   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2403572   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2403573   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2403574   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2403575   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2403576   +LENGTH _WARN_ $4
2403577   +      F_DepVar  $ 12
2403578   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2403579   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2403580   +
2403581   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2403582   +
2403583   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2403584   +
2403585   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2403586   +
2403587   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2403588   +
2403589   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2403590   +
2403591   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2403592   +
2403593   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2403594   +
2403595   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2403596   +
2403597   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2403598   +
2403599   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2403600   +
2403601   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2403602   +
2403603   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2403604   +
2403605   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2403606   +
2403607   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2403608   +
2403609   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2403610   +
2403611   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2403612   +
2403613   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2403614   +
2403615   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2403616   +
2403617   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2403618   +
2403619   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2403620   +
2403621   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2403622   +
2403623   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2403624   +
2403625   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2403626   +
2403627   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2403628   +
2403629   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2403630   +
2403631   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2403632   +
2403633   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2403634   +
2403635   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2403636   +
2403637   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2403638   +
2403639   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2403640   +
2403641   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2403642   +
2403643   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2403644   +
2403645   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2403646   +
2403647   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2403648   +
2403649   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2403650   +
2403651   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2403652   +
2403653   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2403654   +
2403655   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2403656   +
2403657   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2403658   +
2403659   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2403660   +
2403661   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2403662   +
2403663   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
2403664   +
2403665   +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
2403666   +
2403667   +      label H1x1_7 = 'Hidden: H1x1_=7' ;
MPRINT(EM_DIAGRAM):   label H1x1_7 = 'Hidden: H1x1_=7' ;
2403668   +
2403669   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
2403670   +
2403671   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
2403672   +
2403673   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
2403674   +
2403675   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
2403676   +
2403677   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
2403678   +
2403679   +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
2403680   +
2403681   +      label H1x2_7 = 'Hidden: H1x2_=7' ;
MPRINT(EM_DIAGRAM):   label H1x2_7 = 'Hidden: H1x2_=7' ;
2403682   +
2403683   +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
2403684   +
2403685   +      label H1x3_2 = 'Hidden: H1x3_=2' ;
MPRINT(EM_DIAGRAM):   label H1x3_2 = 'Hidden: H1x3_=2' ;
2403686   +
2403687   +      label H1x3_3 = 'Hidden: H1x3_=3' ;
MPRINT(EM_DIAGRAM):   label H1x3_3 = 'Hidden: H1x3_=3' ;
2403688   +
2403689   +      label H1x3_4 = 'Hidden: H1x3_=4' ;
MPRINT(EM_DIAGRAM):   label H1x3_4 = 'Hidden: H1x3_=4' ;
2403690   +
2403691   +      label H1x3_5 = 'Hidden: H1x3_=5' ;
MPRINT(EM_DIAGRAM):   label H1x3_5 = 'Hidden: H1x3_=5' ;
2403692   +
2403693   +      label H1x3_6 = 'Hidden: H1x3_=6' ;
MPRINT(EM_DIAGRAM):   label H1x3_6 = 'Hidden: H1x3_=6' ;
2403694   +
2403695   +      label H1x3_7 = 'Hidden: H1x3_=7' ;
MPRINT(EM_DIAGRAM):   label H1x3_7 = 'Hidden: H1x3_=7' ;
2403696   +
2403697   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
2403698   +
2403699   +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
2403700   +
2403701   +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
2403702   +
2403703   +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
2403704   +
2403705   +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
2403706   +
2403707   +      label H2x1_6 = 'Hidden: H2x1_=6' ;
MPRINT(EM_DIAGRAM):   label H2x1_6 = 'Hidden: H2x1_=6' ;
2403708   +
2403709   +      label H2x1_7 = 'Hidden: H2x1_=7' ;
MPRINT(EM_DIAGRAM):   label H2x1_7 = 'Hidden: H2x1_=7' ;
2403710   +
2403711   +      label H2x2_1 = 'Hidden: H2x2_=1' ;
MPRINT(EM_DIAGRAM):   label H2x2_1 = 'Hidden: H2x2_=1' ;
2403712   +
2403713   +      label H2x2_2 = 'Hidden: H2x2_=2' ;
MPRINT(EM_DIAGRAM):   label H2x2_2 = 'Hidden: H2x2_=2' ;
2403714   +
2403715   +      label H2x2_3 = 'Hidden: H2x2_=3' ;
MPRINT(EM_DIAGRAM):   label H2x2_3 = 'Hidden: H2x2_=3' ;
2403716   +
2403717   +      label H2x2_4 = 'Hidden: H2x2_=4' ;
MPRINT(EM_DIAGRAM):   label H2x2_4 = 'Hidden: H2x2_=4' ;
2403718   +
2403719   +      label H2x2_5 = 'Hidden: H2x2_=5' ;
MPRINT(EM_DIAGRAM):   label H2x2_5 = 'Hidden: H2x2_=5' ;
2403720   +
2403721   +      label H2x2_6 = 'Hidden: H2x2_=6' ;
MPRINT(EM_DIAGRAM):   label H2x2_6 = 'Hidden: H2x2_=6' ;
2403722   +
2403723   +      label H2x2_7 = 'Hidden: H2x2_=7' ;
MPRINT(EM_DIAGRAM):   label H2x2_7 = 'Hidden: H2x2_=7' ;
2403724   +
2403725   +      label H3x1_1 = 'Hidden: H3x1_=1' ;
MPRINT(EM_DIAGRAM):   label H3x1_1 = 'Hidden: H3x1_=1' ;
2403726   +
2403727   +      label H3x1_2 = 'Hidden: H3x1_=2' ;
MPRINT(EM_DIAGRAM):   label H3x1_2 = 'Hidden: H3x1_=2' ;
2403728   +
2403729   +      label H3x1_3 = 'Hidden: H3x1_=3' ;
MPRINT(EM_DIAGRAM):   label H3x1_3 = 'Hidden: H3x1_=3' ;
2403730   +
2403731   +      label H3x1_4 = 'Hidden: H3x1_=4' ;
MPRINT(EM_DIAGRAM):   label H3x1_4 = 'Hidden: H3x1_=4' ;
2403732   +
2403733   +      label H3x1_5 = 'Hidden: H3x1_=5' ;
MPRINT(EM_DIAGRAM):   label H3x1_5 = 'Hidden: H3x1_=5' ;
2403734   +
2403735   +      label H3x1_6 = 'Hidden: H3x1_=6' ;
MPRINT(EM_DIAGRAM):   label H3x1_6 = 'Hidden: H3x1_=6' ;
2403736   +
2403737   +      label H3x1_7 = 'Hidden: H3x1_=7' ;
MPRINT(EM_DIAGRAM):   label H3x1_7 = 'Hidden: H3x1_=7' ;
2403738   +
2403739   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2403740   +
2403741   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2403742   +
2403743   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2403744   +
2403745   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2403746   +
2403747   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2403748   +
2403749   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2403750   +
2403751   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2403752   +
2403753   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2403754   +
2403755   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2403756   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2403757   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2403758   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2403759   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2403760   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2403761   +end;
MPRINT(EM_DIAGRAM):   end;
2403762   +else do;
MPRINT(EM_DIAGRAM):   else do;
2403763   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2403764   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2403765   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2403766   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2403767   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2403768   +   end;
MPRINT(EM_DIAGRAM):   end;
2403769   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2403770   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2403771   +   end;
MPRINT(EM_DIAGRAM):   end;
2403772   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2403773   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2403774   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2403775   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2403776   +   end;
MPRINT(EM_DIAGRAM):   end;
2403777   +end;
MPRINT(EM_DIAGRAM):   end;
2403778   +
2403779   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2403780   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2403781   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2403782   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2403783   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2403784   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2403785   +end;
MPRINT(EM_DIAGRAM):   end;
2403786   +else do;
MPRINT(EM_DIAGRAM):   else do;
2403787   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2403788   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2403789   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2403790   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2403791   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2403792   +   end;
MPRINT(EM_DIAGRAM):   end;
2403793   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2403794   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2403795   +   end;
MPRINT(EM_DIAGRAM):   end;
2403796   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2403797   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2403798   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2403799   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2403800   +   end;
MPRINT(EM_DIAGRAM):   end;
2403801   +end;
MPRINT(EM_DIAGRAM):   end;
2403802   +
2403803   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2403804   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2403805   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2403806   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2403807   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2403808   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2403809   +end;
MPRINT(EM_DIAGRAM):   end;
2403810   +else do;
MPRINT(EM_DIAGRAM):   else do;
2403811   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2403812   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2403813   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2403814   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2403815   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2403816   +   end;
MPRINT(EM_DIAGRAM):   end;
2403817   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2403818   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2403819   +   end;
MPRINT(EM_DIAGRAM):   end;
2403820   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2403821   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2403822   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2403823   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2403824   +   end;
MPRINT(EM_DIAGRAM):   end;
2403825   +end;
MPRINT(EM_DIAGRAM):   end;
2403826   +
2403827   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2403828   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2403829   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2403830   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2403831   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2403832   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2403833   +end;
MPRINT(EM_DIAGRAM):   end;
2403834   +else do;
MPRINT(EM_DIAGRAM):   else do;
2403835   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2403836   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2403837   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2403838   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2403839   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2403840   +   end;
MPRINT(EM_DIAGRAM):   end;
2403841   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2403842   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2403843   +   end;
MPRINT(EM_DIAGRAM):   end;
2403844   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2403845   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2403846   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2403847   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2403848   +   end;
MPRINT(EM_DIAGRAM):   end;
2403849   +end;
MPRINT(EM_DIAGRAM):   end;
2403850   +
2403851   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2403852   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2403853   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2403854   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2403855   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2403856   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2403857   +end;
MPRINT(EM_DIAGRAM):   end;
2403858   +else do;
MPRINT(EM_DIAGRAM):   else do;
2403859   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2403860   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2403861   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2403862   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2403863   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2403864   +   end;
MPRINT(EM_DIAGRAM):   end;
2403865   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2403866   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2403867   +   end;
MPRINT(EM_DIAGRAM):   end;
2403868   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2403869   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2403870   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2403871   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2403872   +   end;
MPRINT(EM_DIAGRAM):   end;
2403873   +end;
MPRINT(EM_DIAGRAM):   end;
2403874   +
2403875   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2403876   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2403877   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2403878   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2403879   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2403880   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2403881   +end;
MPRINT(EM_DIAGRAM):   end;
2403882   +else do;
MPRINT(EM_DIAGRAM):   else do;
2403883   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2403884   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2403885   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2403886   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2403887   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2403888   +   end;
MPRINT(EM_DIAGRAM):   end;
2403889   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2403890   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2403891   +   end;
MPRINT(EM_DIAGRAM):   end;
2403892   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2403893   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2403894   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2403895   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2403896   +   end;
MPRINT(EM_DIAGRAM):   end;
2403897   +end;
MPRINT(EM_DIAGRAM):   end;
2403898   +
2403899   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2403900   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2403901   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2403902   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2403903   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2403904   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2403905   +end;
MPRINT(EM_DIAGRAM):   end;
2403906   +else do;
MPRINT(EM_DIAGRAM):   else do;
2403907   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2403908   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2403909   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2403910   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2403911   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2403912   +   end;
MPRINT(EM_DIAGRAM):   end;
2403913   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2403914   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2403915   +   end;
MPRINT(EM_DIAGRAM):   end;
2403916   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2403917   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2403918   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2403919   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2403920   +   end;
MPRINT(EM_DIAGRAM):   end;
2403921   +end;
MPRINT(EM_DIAGRAM):   end;
2403922   +
2403923   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2403924   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
2403925   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2403926   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2403927   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2403928   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2403929   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2403930   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2403931   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2403932   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2403933   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2403934   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2403935   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2403936   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2403937   +end;
MPRINT(EM_DIAGRAM):   end;
2403938   +else do;
MPRINT(EM_DIAGRAM):   else do;
2403939   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2403940   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2403941   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2403942   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2403943   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2403944   +   end;
MPRINT(EM_DIAGRAM):   end;
2403945   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2403946   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2403947   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2403948   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2403949   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2403950   +   end;
MPRINT(EM_DIAGRAM):   end;
2403951   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2403952   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2403953   +   end;
MPRINT(EM_DIAGRAM):   end;
2403954   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2403955   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2403956   +   end;
MPRINT(EM_DIAGRAM):   end;
2403957   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2403958   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2403959   +   end;
MPRINT(EM_DIAGRAM):   end;
2403960   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2403961   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2403962   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2403963   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2403964   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2403965   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2403966   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2403967   +   end;
MPRINT(EM_DIAGRAM):   end;
2403968   +end;
MPRINT(EM_DIAGRAM):   end;
2403969   +
2403970   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2403971   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2403972   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
2403973   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2403974   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2403975   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2403976   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2403977   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2403978   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2403979   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2403980   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2403981   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2403982   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2403983   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2403984   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2403985   +end;
MPRINT(EM_DIAGRAM):   end;
2403986   +else do;
MPRINT(EM_DIAGRAM):   else do;
2403987   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2403988   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2403989   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2403990   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2403991   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2403992   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2403993   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2403994   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2403995   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2403996   +         end;
MPRINT(EM_DIAGRAM):   end;
2403997   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2403998   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2403999   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2404000   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2404001   +            end;
MPRINT(EM_DIAGRAM):   end;
2404002   +         end;
MPRINT(EM_DIAGRAM):   end;
2404003   +      end;
MPRINT(EM_DIAGRAM):   end;
2404004   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2404005   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2404006   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2404007   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2404008   +         end;
MPRINT(EM_DIAGRAM):   end;
2404009   +      end;
MPRINT(EM_DIAGRAM):   end;
2404010   +   end;
MPRINT(EM_DIAGRAM):   end;
2404011   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2404012   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2404013   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2404014   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2404015   +      end;
MPRINT(EM_DIAGRAM):   end;
2404016   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2404017   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2404018   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2404019   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2404020   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2404021   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2404022   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2404023   +         end;
MPRINT(EM_DIAGRAM):   end;
2404024   +      end;
MPRINT(EM_DIAGRAM):   end;
2404025   +   end;
MPRINT(EM_DIAGRAM):   end;
2404026   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2404027   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2404028   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2404029   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2404030   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2404031   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2404032   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2404033   +   end;
MPRINT(EM_DIAGRAM):   end;
2404034   +end;
MPRINT(EM_DIAGRAM):   end;
2404035   +
2404036   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2404037   +*** Checking missing input Interval
2404038   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2404039   +
2404040   +IF NMISS(
2404041   +   AcceptedCmpTotal ,
2404042   +   Age ,
2404043   +   Frq ,
2404044   +   Income ,
2404045   +   Kidhome ,
2404046   +   Mnt ,
2404047   +   MntFishProducts ,
2404048   +   MntFruits ,
2404049   +   MntGoldProds ,
2404050   +   MntMeatProducts ,
2404051   +   MntSweetProducts ,
2404052   +   MntWines ,
2404053   +   MonthsAsCustomer ,
2404054   +   NumCatalogPurchases ,
2404055   +   NumDealsPurchases ,
2404056   +   NumDistPurchases ,
2404057   +   NumStorePurchases ,
2404058   +   NumWebPurchases ,
2404059   +   NumWebVisitsMonth ,
2404060   +   RFMstat ,
2404061   +   RMntFrq ,
2404062   +   Recency ,
2404063   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
2404064   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2404065   +
2404066   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2404067   +END;
MPRINT(EM_DIAGRAM):   END;
2404068   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2404069   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2404070   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2404071   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2404072   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2404073   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2404074   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2404075   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2404076   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2404077   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2404078   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2404079   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2404080   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2404081   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2404082   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2404083   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2404084   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2404085   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2404086   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2404087   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2404088   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2404089   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2404090   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
2404091   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2404092   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2404093   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2404094   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2404095   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2404096   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2404097   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2404098   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2404099   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2404100   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2404101   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2404102   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2404103   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2404104   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2404105   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2404106   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2404107   +END;
MPRINT(EM_DIAGRAM):   END;
2404108   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2404109   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2404110   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2404111   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2404112   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2404113   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2404114   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2404115   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2404116   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2404117   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2404118   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2404119   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2404120   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2404121   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2404122   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2404123   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2404124   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2404125   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2404126   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2404127   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2404128   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2404129   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2404130   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
2404131   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2404132   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2404133   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2404134   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2404135   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2404136   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2404137   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2404138   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2404139   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2404140   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2404141   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
2404142   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2404143   +   ELSE S_NumCatalogPurchases
2404144   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2404145   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2404146   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2404147   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2404148   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2404149   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2404150   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2404151   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2404152   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2404153   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2404154   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2404155   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2404156   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2404157   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2404158   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2404159   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2404160   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2404161   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2404162   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2404163   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2404164   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2404165   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2404166   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2404167   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2404168   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2404169   +END;
MPRINT(EM_DIAGRAM):   END;
2404170   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2404171   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2404172   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2404173   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2404174   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2404175   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2404176   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2404177   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2404178   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2404179   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2404180   +   H1x1_1  =    -1.22979702388871 * S_AcceptedCmpTotal
2404181   +          +    -0.43104795266139 * S_Age  +     0.86889278443529 * S_Frq
2404182   +          +    -1.60769879195759 * S_Income  +     0.50863205564081 *
2404183   +        S_Kidhome  +     0.63485396330815 * S_Mnt  +     1.54715964931126 *
2404184   +        S_MntFishProducts  +     0.75185279130369 * S_MntFruits
2404185   +          +    -0.00997586610757 * S_MntGoldProds  +    -2.37203493907401 *
2404186   +        S_MntMeatProducts  +     0.38638626403468 * S_MntSweetProducts
2404187   +          +     2.26121903773395 * S_MntWines  +    -0.59651789183067 *
2404188   +        S_MonthsAsCustomer  +    -1.52699943820196 * S_NumCatalogPurchases
2404189   +          +    -1.18466001117424 * S_NumDealsPurchases
2404190   +          +     -0.1371252133567 * S_NumDistPurchases
2404191   +          +     1.92719775731123 * S_NumStorePurchases
2404192   +          +     1.23184249192116 * S_NumWebPurchases
2404193   +          +    -1.55583843197424 * S_NumWebVisitsMonth
2404194   +          +    -0.47773207532121 * S_RFMstat  +    -0.35513231558649 *
2404195   +        S_RMntFrq  +     1.63863392145333 * S_Recency
2404196   +          +     0.67173275608308 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.22979702388871 * S_AcceptedCmpTotal + -0.43104795266139 * 
S_Age + 0.86889278443529 * S_Frq + -1.60769879195759 * S_Income + 0.50863205564081 * S_Kidhome 
+ 0.63485396330815 * S_Mnt + 1.54715964931126 * S_MntFishProducts + 0.75185279130369 * 
S_MntFruits + -0.00997586610757 * S_MntGoldProds + -2.37203493907401 * S_MntMeatProducts + 
0.38638626403468 * S_MntSweetProducts + 2.26121903773395 * S_MntWines + -0.59651789183067 * 
S_MonthsAsCustomer + -1.52699943820196 * S_NumCatalogPurchases + -1.18466001117424 * 
S_NumDealsPurchases + -0.1371252133567 * S_NumDistPurchases + 1.92719775731123 * 
S_NumStorePurchases + 1.23184249192116 * S_NumWebPurchases + -1.55583843197424 * 
S_NumWebVisitsMonth + -0.47773207532121 * S_RFMstat + -0.35513231558649 * S_RMntFrq + 
1.63863392145333 * S_Recency + 0.67173275608308 * S_Teenhome ;
2404197   +   H1x1_2  =    -0.02716121128584 * S_AcceptedCmpTotal
2404198   +          +     0.11518566588792 * S_Age  +    -0.03446898150571 * S_Frq
2404199   +          +    -0.19022324523346 * S_Income  +     1.06549395713708 *
2404200   +        S_Kidhome  +    -0.75490876357951 * S_Mnt  +    -0.25515163712879 *
2404201   +        S_MntFishProducts  +    -0.33372388118122 * S_MntFruits
2404202   +          +    -1.35673933518218 * S_MntGoldProds  +    -2.95766948640442 *
2404203   +        S_MntMeatProducts  +      0.2681792093191 * S_MntSweetProducts
2404204   +          +     0.68376629766032 * S_MntWines  +     1.19853579057819 *
2404205   +        S_MonthsAsCustomer  +    -1.27282116370987 * S_NumCatalogPurchases
2404206   +          +     0.63616523425865 * S_NumDealsPurchases
2404207   +          +     0.45460056261546 * S_NumDistPurchases
2404208   +          +    -0.61009999017225 * S_NumStorePurchases
2404209   +          +     1.85193755731081 * S_NumWebPurchases
2404210   +          +    -2.47698404964319 * S_NumWebVisitsMonth
2404211   +          +     -0.6995834208607 * S_RFMstat  +    -0.25646177956568 *
2404212   +        S_RMntFrq  +     1.07962222419254 * S_Recency
2404213   +          +     0.63257022999179 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.02716121128584 * S_AcceptedCmpTotal + 0.11518566588792 * 
S_Age + -0.03446898150571 * S_Frq + -0.19022324523346 * S_Income + 1.06549395713708 * 
S_Kidhome + -0.75490876357951 * S_Mnt + -0.25515163712879 * S_MntFishProducts + 
-0.33372388118122 * S_MntFruits + -1.35673933518218 * S_MntGoldProds + -2.95766948640442 * 
S_MntMeatProducts + 0.2681792093191 * S_MntSweetProducts + 0.68376629766032 * S_MntWines + 
1.19853579057819 * S_MonthsAsCustomer + -1.27282116370987 * S_NumCatalogPurchases + 
0.63616523425865 * S_NumDealsPurchases + 0.45460056261546 * S_NumDistPurchases + 
-0.61009999017225 * S_NumStorePurchases + 1.85193755731081 * S_NumWebPurchases + 
-2.47698404964319 * S_NumWebVisitsMonth + -0.6995834208607 * S_RFMstat + -0.25646177956568 * 
S_RMntFrq + 1.07962222419254 * S_Recency + 0.63257022999179 * S_Teenhome ;
2404214   +   H1x1_3  =     2.21390028099752 * S_AcceptedCmpTotal
2404215   +          +     0.05331556426178 * S_Age  +    -0.65514579137956 * S_Frq
2404216   +          +     0.64307304324121 * S_Income  +    -0.74572098598993 *
2404217   +        S_Kidhome  +     0.72146088814601 * S_Mnt  +    -0.35292583888573 *
2404218   +        S_MntFishProducts  +    -0.60011862194755 * S_MntFruits
2404219   +          +     0.41187011131735 * S_MntGoldProds  +     6.59297713742725 *
2404220   +        S_MntMeatProducts  +    -0.24427365286575 * S_MntSweetProducts
2404221   +          +    -2.72258930476853 * S_MntWines  +     0.14880721485001 *
2404222   +        S_MonthsAsCustomer  +     1.43710120897606 * S_NumCatalogPurchases
2404223   +          +      1.8907968580473 * S_NumDealsPurchases
2404224   +          +     0.01244124801764 * S_NumDistPurchases
2404225   +          +    -2.34409118104622 * S_NumStorePurchases
2404226   +          +    -1.80820043087435 * S_NumWebPurchases
2404227   +          +     2.40219682136039 * S_NumWebVisitsMonth
2404228   +          +     0.64272295101175 * S_RFMstat  +    -2.37583346151401 *
2404229   +        S_RMntFrq  +    -2.05893311376628 * S_Recency
2404230   +          +    -0.09539892763273 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 2.21390028099752 * S_AcceptedCmpTotal + 0.05331556426178 * 
S_Age + -0.65514579137956 * S_Frq + 0.64307304324121 * S_Income + -0.74572098598993 * 
S_Kidhome + 0.72146088814601 * S_Mnt + -0.35292583888573 * S_MntFishProducts + 
-0.60011862194755 * S_MntFruits + 0.41187011131735 * S_MntGoldProds + 6.59297713742725 * 
S_MntMeatProducts + -0.24427365286575 * S_MntSweetProducts + -2.72258930476853 * S_MntWines + 
0.14880721485001 * S_MonthsAsCustomer + 1.43710120897606 * S_NumCatalogPurchases + 
1.8907968580473 * S_NumDealsPurchases + 0.01244124801764 * S_NumDistPurchases + 
-2.34409118104622 * S_NumStorePurchases + -1.80820043087435 * S_NumWebPurchases + 
2.40219682136039 * S_NumWebVisitsMonth + 0.64272295101175 * S_RFMstat + -2.37583346151401 * 
S_RMntFrq + -2.05893311376628 * S_Recency + -0.09539892763273 * S_Teenhome ;
2404231   +   H1x1_4  =     0.39967052173479 * S_AcceptedCmpTotal
2404232   +          +    -0.07923444459672 * S_Age  +     0.62339138041893 * S_Frq
2404233   +          +     1.61789948058771 * S_Income  +     -1.4543646851274 *
2404234   +        S_Kidhome  +      0.0674362517919 * S_Mnt  +    -0.01747401903722 *
2404235   +        S_MntFishProducts  +     0.35122931976599 * S_MntFruits
2404236   +          +     0.49479569666837 * S_MntGoldProds  +     0.96598079382568 *
2404237   +        S_MntMeatProducts  +     0.00966238843619 * S_MntSweetProducts
2404238   +          +    -1.04781861730336 * S_MntWines  +    -0.60232527705864 *
2404239   +        S_MonthsAsCustomer  +     1.64183850526139 * S_NumCatalogPurchases
2404240   +          +     0.28209537604198 * S_NumDealsPurchases
2404241   +          +      0.6450277971767 * S_NumDistPurchases
2404242   +          +     0.85050092520609 * S_NumStorePurchases
2404243   +          +    -0.53920307215941 * S_NumWebPurchases
2404244   +          +     3.01106015100147 * S_NumWebVisitsMonth
2404245   +          +     0.35454480730832 * S_RFMstat  +     2.44126135489059 *
2404246   +        S_RMntFrq  +    -3.15497765450512 * S_Recency
2404247   +          +    -1.52912100940198 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.39967052173479 * S_AcceptedCmpTotal + -0.07923444459672 * 
S_Age + 0.62339138041893 * S_Frq + 1.61789948058771 * S_Income + -1.4543646851274 * S_Kidhome 
+ 0.0674362517919 * S_Mnt + -0.01747401903722 * S_MntFishProducts + 0.35122931976599 * 
S_MntFruits + 0.49479569666837 * S_MntGoldProds + 0.96598079382568 * S_MntMeatProducts + 
0.00966238843619 * S_MntSweetProducts + -1.04781861730336 * S_MntWines + -0.60232527705864 * 
S_MonthsAsCustomer + 1.64183850526139 * S_NumCatalogPurchases + 0.28209537604198 * 
S_NumDealsPurchases + 0.6450277971767 * S_NumDistPurchases + 0.85050092520609 * 
S_NumStorePurchases + -0.53920307215941 * S_NumWebPurchases + 3.01106015100147 * 
S_NumWebVisitsMonth + 0.35454480730832 * S_RFMstat + 2.44126135489059 * S_RMntFrq + 
-3.15497765450512 * S_Recency + -1.52912100940198 * S_Teenhome ;
2404248   +   H1x1_5  =    -1.36246601888598 * S_AcceptedCmpTotal
2404249   +          +     0.18494970680372 * S_Age  +    -0.48239316237012 * S_Frq
2404250   +          +    -0.07754710635082 * S_Income  +    -1.12988783865284 *
2404251   +        S_Kidhome  +    -0.99389820487435 * S_Mnt  +     0.97730928948588 *
2404252   +        S_MntFishProducts  +     0.22400827772102 * S_MntFruits
2404253   +          +     0.74486626223136 * S_MntGoldProds  +    -5.09299340099429 *
2404254   +        S_MntMeatProducts  +     -0.9293665551505 * S_MntSweetProducts
2404255   +          +     2.05621056740754 * S_MntWines  +     0.13751326047818 *
2404256   +        S_MonthsAsCustomer  +    -0.78748700520409 * S_NumCatalogPurchases
2404257   +          +    -0.36642526324451 * S_NumDealsPurchases
2404258   +          +     -0.6091014843932 * S_NumDistPurchases
2404259   +          +    -0.21154626182088 * S_NumStorePurchases
2404260   +          +    -0.10361347071364 * S_NumWebPurchases
2404261   +          +     1.36358817627784 * S_NumWebVisitsMonth
2404262   +          +    -1.12999319551924 * S_RFMstat  +    -0.19491430019245 *
2404263   +        S_RMntFrq  +    -1.04649498091784 * S_Recency
2404264   +          +     0.17452738843544 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.36246601888598 * S_AcceptedCmpTotal + 0.18494970680372 * 
S_Age + -0.48239316237012 * S_Frq + -0.07754710635082 * S_Income + -1.12988783865284 * 
S_Kidhome + -0.99389820487435 * S_Mnt + 0.97730928948588 * S_MntFishProducts + 
0.22400827772102 * S_MntFruits + 0.74486626223136 * S_MntGoldProds + -5.09299340099429 * 
S_MntMeatProducts + -0.9293665551505 * S_MntSweetProducts + 2.05621056740754 * S_MntWines + 
0.13751326047818 * S_MonthsAsCustomer + -0.78748700520409 * S_NumCatalogPurchases + 
-0.36642526324451 * S_NumDealsPurchases + -0.6091014843932 * S_NumDistPurchases + 
-0.21154626182088 * S_NumStorePurchases + -0.10361347071364 * S_NumWebPurchases + 
1.36358817627784 * S_NumWebVisitsMonth + -1.12999319551924 * S_RFMstat + -0.19491430019245 * 
S_RMntFrq + -1.04649498091784 * S_Recency + 0.17452738843544 * S_Teenhome ;
2404265   +   H1x1_6  =    -0.61844696407508 * S_AcceptedCmpTotal
2404266   +          +    -0.13181297602063 * S_Age  +        0.68456903056 * S_Frq
2404267   +          +    -0.34991774042788 * S_Income  +     1.46159955002315 *
2404268   +        S_Kidhome  +     0.21200077233877 * S_Mnt  +    -1.25754094670769 *
2404269   +        S_MntFishProducts  +    -0.09204195787339 * S_MntFruits
2404270   +          +     0.30860507694466 * S_MntGoldProds  +     2.47956356836605 *
2404271   +        S_MntMeatProducts  +     0.40882561010395 * S_MntSweetProducts
2404272   +          +    -0.31319819026957 * S_MntWines  +    -0.35678594664106 *
2404273   +        S_MonthsAsCustomer  +     0.01690494248971 * S_NumCatalogPurchases
2404274   +          +    -0.14868505161718 * S_NumDealsPurchases
2404275   +          +    -0.08395384711805 * S_NumDistPurchases
2404276   +          +     0.60525238179245 * S_NumStorePurchases
2404277   +          +     0.04555100214276 * S_NumWebPurchases
2404278   +          +    -2.31888436784305 * S_NumWebVisitsMonth
2404279   +          +     0.04533094777373 * S_RFMstat  +     1.45047684433196 *
2404280   +        S_RMntFrq  +     3.02439474266744 * S_Recency
2404281   +          +     1.00458920115313 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -0.61844696407508 * S_AcceptedCmpTotal + -0.13181297602063 * 
S_Age + 0.68456903056 * S_Frq + -0.34991774042788 * S_Income + 1.46159955002315 * S_Kidhome + 
0.21200077233877 * S_Mnt + -1.25754094670769 * S_MntFishProducts + -0.09204195787339 * 
S_MntFruits + 0.30860507694466 * S_MntGoldProds + 2.47956356836605 * S_MntMeatProducts + 
0.40882561010395 * S_MntSweetProducts + -0.31319819026957 * S_MntWines + -0.35678594664106 * 
S_MonthsAsCustomer + 0.01690494248971 * S_NumCatalogPurchases + -0.14868505161718 * 
S_NumDealsPurchases + -0.08395384711805 * S_NumDistPurchases + 0.60525238179245 * 
S_NumStorePurchases + 0.04555100214276 * S_NumWebPurchases + -2.31888436784305 * 
S_NumWebVisitsMonth + 0.04533094777373 * S_RFMstat + 1.45047684433196 * S_RMntFrq + 
3.02439474266744 * S_Recency + 1.00458920115313 * S_Teenhome ;
2404282   +   H1x1_1  = H1x1_1  +     1.44647846478949 * AcceptedCmp10
2404283   +          +     0.96385529143297 * AcceptedCmp20  +     0.80013060089317 *
2404284   +        AcceptedCmp30  +     1.84770198014032 * AcceptedCmp40
2404285   +          +     0.80401446607714 * AcceptedCmp50  +     0.54049538978821 *
2404286   +        Complain0  +     0.10087163212641 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 1.44647846478949 * AcceptedCmp10 + 0.96385529143297 * 
AcceptedCmp20 + 0.80013060089317 * AcceptedCmp30 + 1.84770198014032 * AcceptedCmp40 + 
0.80401446607714 * AcceptedCmp50 + 0.54049538978821 * Complain0 + 0.10087163212641 * 
HigherEducationBinary0 ;
2404287   +   H1x1_2  = H1x1_2  +    -1.68777270512099 * AcceptedCmp10
2404288   +          +     0.54885195015877 * AcceptedCmp20  +    -0.90402264974928 *
2404289   +        AcceptedCmp30  +    -0.42358682267334 * AcceptedCmp40
2404290   +          +     0.87016183962004 * AcceptedCmp50  +     0.42082407002478 *
2404291   +        Complain0  +    -0.37999025234308 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -1.68777270512099 * AcceptedCmp10 + 0.54885195015877 * 
AcceptedCmp20 + -0.90402264974928 * AcceptedCmp30 + -0.42358682267334 * AcceptedCmp40 + 
0.87016183962004 * AcceptedCmp50 + 0.42082407002478 * Complain0 + -0.37999025234308 * 
HigherEducationBinary0 ;
2404292   +   H1x1_3  = H1x1_3  +    -0.40437631159129 * AcceptedCmp10
2404293   +          +      0.0972205308159 * AcceptedCmp20  +     0.81983130325412 *
2404294   +        AcceptedCmp30  +     0.11521626741585 * AcceptedCmp40
2404295   +          +    -0.67384158900854 * AcceptedCmp50  +    -0.08888648111628 *
2404296   +        Complain0  +    -0.12489144574555 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.40437631159129 * AcceptedCmp10 + 0.0972205308159 * 
AcceptedCmp20 + 0.81983130325412 * AcceptedCmp30 + 0.11521626741585 * AcceptedCmp40 + 
-0.67384158900854 * AcceptedCmp50 + -0.08888648111628 * Complain0 + -0.12489144574555 * 
HigherEducationBinary0 ;
2404297   +   H1x1_4  = H1x1_4  +    -0.11861456940351 * AcceptedCmp10
2404298   +          +    -0.84401831403342 * AcceptedCmp20  +    -0.99900514370547 *
2404299   +        AcceptedCmp30  +     0.03311277744337 * AcceptedCmp40
2404300   +          +    -0.89369182681709 * AcceptedCmp50  +    -0.46321923883787 *
2404301   +        Complain0  +     0.73698890563732 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.11861456940351 * AcceptedCmp10 + -0.84401831403342 
* AcceptedCmp20 + -0.99900514370547 * AcceptedCmp30 + 0.03311277744337 * AcceptedCmp40 + 
-0.89369182681709 * AcceptedCmp50 + -0.46321923883787 * Complain0 + 0.73698890563732 * 
HigherEducationBinary0 ;
2404302   +   H1x1_5  = H1x1_5  +     1.36740346673871 * AcceptedCmp10
2404303   +          +    -0.09307995102939 * AcceptedCmp20  +    -0.99727975675265 *
2404304   +        AcceptedCmp30  +    -1.64006559974507 * AcceptedCmp40
2404305   +          +    -0.12164496778613 * AcceptedCmp50  +    -0.20852398947217 *
2404306   +        Complain0  +    -0.12903157145588 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 1.36740346673871 * AcceptedCmp10 + -0.09307995102939 * 
AcceptedCmp20 + -0.99727975675265 * AcceptedCmp30 + -1.64006559974507 * AcceptedCmp40 + 
-0.12164496778613 * AcceptedCmp50 + -0.20852398947217 * Complain0 + -0.12903157145588 * 
HigherEducationBinary0 ;
2404307   +   H1x1_6  = H1x1_6  +    -0.18375336439178 * AcceptedCmp10
2404308   +          +    -0.61320886099742 * AcceptedCmp20  +     1.46384578641555 *
2404309   +        AcceptedCmp30  +     1.07211075480456 * AcceptedCmp40
2404310   +          +      0.1814894663676 * AcceptedCmp50  +     0.61050756961671 *
2404311   +        Complain0  +     0.18598381049052 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + -0.18375336439178 * AcceptedCmp10 + -0.61320886099742 
* AcceptedCmp20 + 1.46384578641555 * AcceptedCmp30 + 1.07211075480456 * AcceptedCmp40 + 
0.1814894663676 * AcceptedCmp50 + 0.61050756961671 * Complain0 + 0.18598381049052 * 
HigherEducationBinary0 ;
2404312   +   H1x1_1  = H1x1_1  +    -0.85219855086228 * Education2n_Cycle
2404313   +          +     0.72409647993559 * EducationBasic  +    -1.69896726220399 *
2404314   +        EducationGraduation  +     0.96924197858068 * EducationMaster
2404315   +          +     -0.7180104021039 * Marital_StatusDivorced
2404316   +          +      0.5957373170744 * Marital_StatusMarried
2404317   +          +    -0.86183942803988 * Marital_StatusSingle
2404318   +          +     0.92994743994713 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.85219855086228 * Education2n_Cycle + 
0.72409647993559 * EducationBasic + -1.69896726220399 * EducationGraduation + 0.96924197858068 
* EducationMaster + -0.7180104021039 * Marital_StatusDivorced + 0.5957373170744 * 
Marital_StatusMarried + -0.86183942803988 * Marital_StatusSingle + 0.92994743994713 * 
Marital_StatusTogether ;
2404319   +   H1x1_2  = H1x1_2  +    -0.29863788783823 * Education2n_Cycle
2404320   +          +    -0.03492398661463 * EducationBasic  +     1.96491183828121 *
2404321   +        EducationGraduation  +    -1.23733321574678 * EducationMaster
2404322   +          +     0.84772700244021 * Marital_StatusDivorced
2404323   +          +    -0.37049970188511 * Marital_StatusMarried
2404324   +          +     1.54291641732063 * Marital_StatusSingle
2404325   +          +      0.2036514883055 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.29863788783823 * Education2n_Cycle + 
-0.03492398661463 * EducationBasic + 1.96491183828121 * EducationGraduation + 
-1.23733321574678 * EducationMaster + 0.84772700244021 * Marital_StatusDivorced + 
-0.37049970188511 * Marital_StatusMarried + 1.54291641732063 * Marital_StatusSingle + 
0.2036514883055 * Marital_StatusTogether ;
2404326   +   H1x1_3  = H1x1_3  +     0.21600870420184 * Education2n_Cycle
2404327   +          +    -0.41247138958506 * EducationBasic  +    -0.04710356650237 *
2404328   +        EducationGraduation  +     0.02093123351397 * EducationMaster
2404329   +          +     0.73222548496385 * Marital_StatusDivorced
2404330   +          +    -0.50102202656102 * Marital_StatusMarried
2404331   +          +    -0.07207130428422 * Marital_StatusSingle
2404332   +          +     0.17349558515949 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.21600870420184 * Education2n_Cycle + 
-0.41247138958506 * EducationBasic + -0.04710356650237 * EducationGraduation + 
0.02093123351397 * EducationMaster + 0.73222548496385 * Marital_StatusDivorced + 
-0.50102202656102 * Marital_StatusMarried + -0.07207130428422 * Marital_StatusSingle + 
0.17349558515949 * Marital_StatusTogether ;
2404333   +   H1x1_4  = H1x1_4  +    -0.26695942691152 * Education2n_Cycle
2404334   +          +     0.08346486410021 * EducationBasic  +    -1.19880044804188 *
2404335   +        EducationGraduation  +     0.65366032471107 * EducationMaster
2404336   +          +     0.25894719464799 * Marital_StatusDivorced
2404337   +          +    -1.95576501275834 * Marital_StatusMarried
2404338   +          +     2.65422185276746 * Marital_StatusSingle
2404339   +          +    -3.75373924980398 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.26695942691152 * Education2n_Cycle + 
0.08346486410021 * EducationBasic + -1.19880044804188 * EducationGraduation + 0.65366032471107 
* EducationMaster + 0.25894719464799 * Marital_StatusDivorced + -1.95576501275834 * 
Marital_StatusMarried + 2.65422185276746 * Marital_StatusSingle + -3.75373924980398 * 
Marital_StatusTogether ;
2404340   +   H1x1_5  = H1x1_5  +     0.17586479935526 * Education2n_Cycle
2404341   +          +    -0.60926722758624 * EducationBasic  +    -0.09613529218096 *
2404342   +        EducationGraduation  +    -0.28683119112285 * EducationMaster
2404343   +          +     0.60936191204707 * Marital_StatusDivorced
2404344   +          +    -0.52190111190458 * Marital_StatusMarried
2404345   +          +    -0.60982305233136 * Marital_StatusSingle
2404346   +          +     0.44659686388318 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 0.17586479935526 * Education2n_Cycle + 
-0.60926722758624 * EducationBasic + -0.09613529218096 * EducationGraduation + 
-0.28683119112285 * EducationMaster + 0.60936191204707 * Marital_StatusDivorced + 
-0.52190111190458 * Marital_StatusMarried + -0.60982305233136 * Marital_StatusSingle + 
0.44659686388318 * Marital_StatusTogether ;
2404347   +   H1x1_6  = H1x1_6  +     0.16067502362228 * Education2n_Cycle
2404348   +          +     0.18937855703296 * EducationBasic  +     0.06386817095607 *
2404349   +        EducationGraduation  +     0.51538853297606 * EducationMaster
2404350   +          +    -1.44614502228294 * Marital_StatusDivorced
2404351   +          +      2.9001493892928 * Marital_StatusMarried
2404352   +          +    -2.60467399972513 * Marital_StatusSingle
2404353   +          +     2.31815156650258 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + 0.16067502362228 * Education2n_Cycle + 
0.18937855703296 * EducationBasic + 0.06386817095607 * EducationGraduation + 0.51538853297606 
* EducationMaster + -1.44614502228294 * Marital_StatusDivorced + 2.9001493892928 * 
Marital_StatusMarried + -2.60467399972513 * Marital_StatusSingle + 2.31815156650258 * 
Marital_StatusTogether ;
2404354   +   H1x1_1  =     2.01245018737649 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 2.01245018737649 + H1x1_1 ;
2404355   +   H1x1_2  =    -0.13724223857423 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.13724223857423 + H1x1_2 ;
2404356   +   H1x1_3  =     0.82934879006547 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.82934879006547 + H1x1_3 ;
2404357   +   H1x1_4  =    -0.21545557935699 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.21545557935699 + H1x1_4 ;
2404358   +   H1x1_5  =     0.44835497486542 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.44835497486542 + H1x1_5 ;
2404359   +   H1x1_6  =     0.11792774897936 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0.11792774897936 + H1x1_6 ;
2404360   +   H1x1_7  = 0;
MPRINT(EM_DIAGRAM):   H1x1_7 = 0;
2404361   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 , H1x1_7
2404362   +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 , 
H1x1_7 );
2404363   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2404364   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
2404365   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
2404366   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
2404367   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
2404368   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
2404369   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
2404370   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
2404371   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
2404372   +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
2404373   +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
2404374   +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
2404375   +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
2404376   +   H1x1_7  = EXP(H1x1_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_7 = EXP(H1x1_7 - _MAX_);
2404377   +   _SUM_ = _SUM_ + H1x1_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_7 ;
2404378   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
2404379   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
2404380   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
2404381   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
2404382   +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
2404383   +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
2404384   +   H1x1_7  = H1x1_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_7 = H1x1_7 / _SUM_;
2404385   +END;
MPRINT(EM_DIAGRAM):   END;
2404386   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2404387   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2404388   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2404389   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2404390   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2404391   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
2404392   +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
2404393   +   H1x1_7  = .;
MPRINT(EM_DIAGRAM):   H1x1_7 = .;
2404394   +END;
MPRINT(EM_DIAGRAM):   END;
2404395   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2404396   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
2404397   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2404398   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2404399   +   H1x2_1  =    -0.51245281628488 * S_AcceptedCmpTotal
2404400   +          +     0.29586551487242 * S_Age  +     1.34531593814589 * S_Frq
2404401   +          +     1.40753230099536 * S_Income  +    -1.01979935776675 *
2404402   +        S_Kidhome  +      1.0655533203194 * S_Mnt  +     0.74171867275429 *
2404403   +        S_MntFishProducts  +    -0.77881282886264 * S_MntFruits
2404404   +          +    -0.58546798489474 * S_MntGoldProds  +     0.93410444049208 *
2404405   +        S_MntMeatProducts  +     1.10536507959221 * S_MntSweetProducts
2404406   +          +     2.08723894920384 * S_MntWines  +    -0.64437193401661 *
2404407   +        S_MonthsAsCustomer  +     1.49880648713252 * S_NumCatalogPurchases
2404408   +          +    -0.46483717253931 * S_NumDealsPurchases
2404409   +          +    -0.53329008421157 * S_NumDistPurchases
2404410   +          +      0.2490774300193 * S_NumStorePurchases
2404411   +          +    -0.82755150673885 * S_NumWebPurchases
2404412   +          +     0.04007223822389 * S_NumWebVisitsMonth
2404413   +          +    -0.21044923749124 * S_RFMstat  +     0.27791352512351 *
2404414   +        S_RMntFrq  +     0.43434806411249 * S_Recency
2404415   +          +    -1.25974784572932 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.51245281628488 * S_AcceptedCmpTotal + 0.29586551487242 * 
S_Age + 1.34531593814589 * S_Frq + 1.40753230099536 * S_Income + -1.01979935776675 * S_Kidhome 
+ 1.0655533203194 * S_Mnt + 0.74171867275429 * S_MntFishProducts + -0.77881282886264 * 
S_MntFruits + -0.58546798489474 * S_MntGoldProds + 0.93410444049208 * S_MntMeatProducts + 
1.10536507959221 * S_MntSweetProducts + 2.08723894920384 * S_MntWines + -0.64437193401661 * 
S_MonthsAsCustomer + 1.49880648713252 * S_NumCatalogPurchases + -0.46483717253931 * 
S_NumDealsPurchases + -0.53329008421157 * S_NumDistPurchases + 0.2490774300193 * 
S_NumStorePurchases + -0.82755150673885 * S_NumWebPurchases + 0.04007223822389 * 
S_NumWebVisitsMonth + -0.21044923749124 * S_RFMstat + 0.27791352512351 * S_RMntFrq + 
0.43434806411249 * S_Recency + -1.25974784572932 * S_Teenhome ;
2404416   +   H1x2_2  =     0.30117516029562 * S_AcceptedCmpTotal
2404417   +          +     0.16042149118905 * S_Age  +    -2.59350323749407 * S_Frq
2404418   +          +    -0.29940842910223 * S_Income  +    -0.09168883019219 *
2404419   +        S_Kidhome  +    -0.39758312303322 * S_Mnt  +     -0.4138816285287 *
2404420   +        S_MntFishProducts  +        0.18555623351 * S_MntFruits
2404421   +          +    -0.28024159914959 * S_MntGoldProds  +     1.08084875123781 *
2404422   +        S_MntMeatProducts  +     0.29032828446632 * S_MntSweetProducts
2404423   +          +     0.47556687393839 * S_MntWines  +    -0.89795441591329 *
2404424   +        S_MonthsAsCustomer  +    -0.47081176716106 * S_NumCatalogPurchases
2404425   +          +     0.75855101382458 * S_NumDealsPurchases
2404426   +          +     1.61754951768262 * S_NumDistPurchases
2404427   +          +    -0.48146714929729 * S_NumStorePurchases
2404428   +          +    -0.76460728035552 * S_NumWebPurchases
2404429   +          +    -0.71146787112442 * S_NumWebVisitsMonth
2404430   +          +     0.42381866124588 * S_RFMstat  +     -0.3894818400451 *
2404431   +        S_RMntFrq  +    -0.01528916550509 * S_Recency
2404432   +          +     0.38823136254948 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.30117516029562 * S_AcceptedCmpTotal + 0.16042149118905 * 
S_Age + -2.59350323749407 * S_Frq + -0.29940842910223 * S_Income + -0.09168883019219 * 
S_Kidhome + -0.39758312303322 * S_Mnt + -0.4138816285287 * S_MntFishProducts + 0.18555623351 * 
S_MntFruits + -0.28024159914959 * S_MntGoldProds + 1.08084875123781 * S_MntMeatProducts + 
0.29032828446632 * S_MntSweetProducts + 0.47556687393839 * S_MntWines + -0.89795441591329 * 
S_MonthsAsCustomer + -0.47081176716106 * S_NumCatalogPurchases + 0.75855101382458 * 
S_NumDealsPurchases + 1.61754951768262 * S_NumDistPurchases + -0.48146714929729 * 
S_NumStorePurchases + -0.76460728035552 * S_NumWebPurchases + -0.71146787112442 * 
S_NumWebVisitsMonth + 0.42381866124588 * S_RFMstat + -0.3894818400451 * S_RMntFrq + 
-0.01528916550509 * S_Recency + 0.38823136254948 * S_Teenhome ;
2404433   +   H1x2_3  =    -1.28283712556699 * S_AcceptedCmpTotal
2404434   +          +    -0.62214066983867 * S_Age  +      0.0675653313166 * S_Frq
2404435   +          +     0.77098495841918 * S_Income  +    -1.36225954388119 *
2404436   +        S_Kidhome  +      0.0552831076081 * S_Mnt  +    -0.21387512812296 *
2404437   +        S_MntFishProducts  +    -1.14715718471691 * S_MntFruits
2404438   +          +    -1.15507787000433 * S_MntGoldProds  +     0.87571107504211 *
2404439   +        S_MntMeatProducts  +     0.28274178198443 * S_MntSweetProducts
2404440   +          +     0.23070204507311 * S_MntWines  +    -1.88342889522874 *
2404441   +        S_MonthsAsCustomer  +    -0.19127945486903 * S_NumCatalogPurchases
2404442   +          +     0.75255317965748 * S_NumDealsPurchases
2404443   +          +     1.34900588315783 * S_NumDistPurchases
2404444   +          +    -0.17717469778048 * S_NumStorePurchases
2404445   +          +    -0.01560551546553 * S_NumWebPurchases
2404446   +          +     1.24315988674343 * S_NumWebVisitsMonth
2404447   +          +     2.23854910235018 * S_RFMstat  +     0.55516131558838 *
2404448   +        S_RMntFrq  +    -2.01558015490584 * S_Recency
2404449   +          +     1.34178435587014 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -1.28283712556699 * S_AcceptedCmpTotal + -0.62214066983867 * 
S_Age + 0.0675653313166 * S_Frq + 0.77098495841918 * S_Income + -1.36225954388119 * S_Kidhome 
+ 0.0552831076081 * S_Mnt + -0.21387512812296 * S_MntFishProducts + -1.14715718471691 * 
S_MntFruits + -1.15507787000433 * S_MntGoldProds + 0.87571107504211 * S_MntMeatProducts + 
0.28274178198443 * S_MntSweetProducts + 0.23070204507311 * S_MntWines + -1.88342889522874 * 
S_MonthsAsCustomer + -0.19127945486903 * S_NumCatalogPurchases + 0.75255317965748 * 
S_NumDealsPurchases + 1.34900588315783 * S_NumDistPurchases + -0.17717469778048 * 
S_NumStorePurchases + -0.01560551546553 * S_NumWebPurchases + 1.24315988674343 * 
S_NumWebVisitsMonth + 2.23854910235018 * S_RFMstat + 0.55516131558838 * S_RMntFrq + 
-2.01558015490584 * S_Recency + 1.34178435587014 * S_Teenhome ;
2404450   +   H1x2_4  =     1.35706411211536 * S_AcceptedCmpTotal
2404451   +          +    -0.73374940975123 * S_Age  +     2.10445428870671 * S_Frq
2404452   +          +    -1.60133766439775 * S_Income  +     0.02861907512789 *
2404453   +        S_Kidhome  +    -1.61837693250001 * S_Mnt  +       0.209751533263 *
2404454   +        S_MntFishProducts  +     1.82411973889656 * S_MntFruits
2404455   +          +     1.12172774431408 * S_MntGoldProds  +     1.09610288046573 *
2404456   +        S_MntMeatProducts  +    -0.86671874280949 * S_MntSweetProducts
2404457   +          +    -0.11602638812541 * S_MntWines  +    -0.30074020863435 *
2404458   +        S_MonthsAsCustomer  +     0.46044258716085 * S_NumCatalogPurchases
2404459   +          +    -1.71127148178768 * S_NumDealsPurchases
2404460   +          +    -1.77527355221308 * S_NumDistPurchases
2404461   +          +    -1.40009594349363 * S_NumStorePurchases
2404462   +          +    -0.46471012062697 * S_NumWebPurchases
2404463   +          +     0.04619891083228 * S_NumWebVisitsMonth
2404464   +          +     0.34715614649891 * S_RFMstat  +    -0.74983051176564 *
2404465   +        S_RMntFrq  +     0.84880186653433 * S_Recency
2404466   +          +     0.20218341857265 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 1.35706411211536 * S_AcceptedCmpTotal + -0.73374940975123 * 
S_Age + 2.10445428870671 * S_Frq + -1.60133766439775 * S_Income + 0.02861907512789 * S_Kidhome 
+ -1.61837693250001 * S_Mnt + 0.209751533263 * S_MntFishProducts + 1.82411973889656 * 
S_MntFruits + 1.12172774431408 * S_MntGoldProds + 1.09610288046573 * S_MntMeatProducts + 
-0.86671874280949 * S_MntSweetProducts + -0.11602638812541 * S_MntWines + -0.30074020863435 * 
S_MonthsAsCustomer + 0.46044258716085 * S_NumCatalogPurchases + -1.71127148178768 * 
S_NumDealsPurchases + -1.77527355221308 * S_NumDistPurchases + -1.40009594349363 * 
S_NumStorePurchases + -0.46471012062697 * S_NumWebPurchases + 0.04619891083228 * 
S_NumWebVisitsMonth + 0.34715614649891 * S_RFMstat + -0.74983051176564 * S_RMntFrq + 
0.84880186653433 * S_Recency + 0.20218341857265 * S_Teenhome ;
2404467   +   H1x2_5  =     1.79452363233333 * S_AcceptedCmpTotal
2404468   +          +     1.70826835028511 * S_Age  +     0.08241717907016 * S_Frq
2404469   +          +    -1.15275600314196 * S_Income  +     0.87736096074094 *
2404470   +        S_Kidhome  +     0.90821427722502 * S_Mnt  +    -0.84055732556964 *
2404471   +        S_MntFishProducts  +    -0.74245639083939 * S_MntFruits
2404472   +          +     0.00204325095854 * S_MntGoldProds  +     0.37597102500134 *
2404473   +        S_MntMeatProducts  +     0.28586076288454 * S_MntSweetProducts
2404474   +          +    -1.38194310174269 * S_MntWines  +     0.10286181254259 *
2404475   +        S_MonthsAsCustomer  +    -0.82469018226034 * S_NumCatalogPurchases
2404476   +          +    -0.22204470395056 * S_NumDealsPurchases
2404477   +          +    -1.74490476011984 * S_NumDistPurchases
2404478   +          +     1.93538420108324 * S_NumStorePurchases
2404479   +          +     1.04892631742152 * S_NumWebPurchases
2404480   +          +     1.50717841566047 * S_NumWebVisitsMonth
2404481   +          +     0.61249250909375 * S_RFMstat  +    -0.54764212165911 *
2404482   +        S_RMntFrq  +      1.9918829185386 * S_Recency
2404483   +          +     0.64908540313947 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.79452363233333 * S_AcceptedCmpTotal + 1.70826835028511 * 
S_Age + 0.08241717907016 * S_Frq + -1.15275600314196 * S_Income + 0.87736096074094 * S_Kidhome 
+ 0.90821427722502 * S_Mnt + -0.84055732556964 * S_MntFishProducts + -0.74245639083939 * 
S_MntFruits + 0.00204325095854 * S_MntGoldProds + 0.37597102500134 * S_MntMeatProducts + 
0.28586076288454 * S_MntSweetProducts + -1.38194310174269 * S_MntWines + 0.10286181254259 * 
S_MonthsAsCustomer + -0.82469018226034 * S_NumCatalogPurchases + -0.22204470395056 * 
S_NumDealsPurchases + -1.74490476011984 * S_NumDistPurchases + 1.93538420108324 * 
S_NumStorePurchases + 1.04892631742152 * S_NumWebPurchases + 1.50717841566047 * 
S_NumWebVisitsMonth + 0.61249250909375 * S_RFMstat + -0.54764212165911 * S_RMntFrq + 
1.9918829185386 * S_Recency + 0.64908540313947 * S_Teenhome ;
2404484   +   H1x2_6  =     1.38705263280369 * S_AcceptedCmpTotal
2404485   +          +    -0.70531523704191 * S_Age  +     0.59125500807205 * S_Frq
2404486   +          +     0.89549490842249 * S_Income  +     1.07240562425698 *
2404487   +        S_Kidhome  +    -0.25050185694258 * S_Mnt  +    -0.77552207934024 *
2404488   +        S_MntFishProducts  +     0.18087757744856 * S_MntFruits
2404489   +          +    -1.37618517481144 * S_MntGoldProds  +      0.6557488228355 *
2404490   +        S_MntMeatProducts  +    -1.40834207395949 * S_MntSweetProducts
2404491   +          +    -0.76196689750388 * S_MntWines  +     0.85144735274506 *
2404492   +        S_MonthsAsCustomer  +     0.66349954778428 * S_NumCatalogPurchases
2404493   +          +    -0.94690420785776 * S_NumDealsPurchases
2404494   +          +     1.87932706342204 * S_NumDistPurchases
2404495   +          +     0.31232717416487 * S_NumStorePurchases
2404496   +          +     1.51889492693355 * S_NumWebPurchases
2404497   +          +     0.04376853689795 * S_NumWebVisitsMonth
2404498   +          +    -2.53979043374029 * S_RFMstat  +     1.33915580029494 *
2404499   +        S_RMntFrq  +    -1.21983510008829 * S_Recency
2404500   +          +     0.36122230024433 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_6 = 1.38705263280369 * S_AcceptedCmpTotal + -0.70531523704191 * 
S_Age + 0.59125500807205 * S_Frq + 0.89549490842249 * S_Income + 1.07240562425698 * S_Kidhome 
+ -0.25050185694258 * S_Mnt + -0.77552207934024 * S_MntFishProducts + 0.18087757744856 * 
S_MntFruits + -1.37618517481144 * S_MntGoldProds + 0.6557488228355 * S_MntMeatProducts + 
-1.40834207395949 * S_MntSweetProducts + -0.76196689750388 * S_MntWines + 0.85144735274506 * 
S_MonthsAsCustomer + 0.66349954778428 * S_NumCatalogPurchases + -0.94690420785776 * 
S_NumDealsPurchases + 1.87932706342204 * S_NumDistPurchases + 0.31232717416487 * 
S_NumStorePurchases + 1.51889492693355 * S_NumWebPurchases + 0.04376853689795 * 
S_NumWebVisitsMonth + -2.53979043374029 * S_RFMstat + 1.33915580029494 * S_RMntFrq + 
-1.21983510008829 * S_Recency + 0.36122230024433 * S_Teenhome ;
2404501   +   H1x2_1  = H1x2_1  +     1.89852147155601 * AcceptedCmp10
2404502   +          +     0.03501265764204 * AcceptedCmp20  +    -0.45070218241239 *
2404503   +        AcceptedCmp30  +    -1.27257966336041 * AcceptedCmp40
2404504   +          +     0.86175125820023 * AcceptedCmp50  +     1.42864024461581 *
2404505   +        Complain0  +     0.34417315915901 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 1.89852147155601 * AcceptedCmp10 + 0.03501265764204 * 
AcceptedCmp20 + -0.45070218241239 * AcceptedCmp30 + -1.27257966336041 * AcceptedCmp40 + 
0.86175125820023 * AcceptedCmp50 + 1.42864024461581 * Complain0 + 0.34417315915901 * 
HigherEducationBinary0 ;
2404506   +   H1x2_2  = H1x2_2  +     0.41672679168374 * AcceptedCmp10
2404507   +          +     0.10769233314512 * AcceptedCmp20  +     0.42374549876289 *
2404508   +        AcceptedCmp30  +     0.65697535989046 * AcceptedCmp40
2404509   +          +     1.49817201460948 * AcceptedCmp50  +     0.46039378640249 *
2404510   +        Complain0  +     1.34709525059573 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.41672679168374 * AcceptedCmp10 + 0.10769233314512 * 
AcceptedCmp20 + 0.42374549876289 * AcceptedCmp30 + 0.65697535989046 * AcceptedCmp40 + 
1.49817201460948 * AcceptedCmp50 + 0.46039378640249 * Complain0 + 1.34709525059573 * 
HigherEducationBinary0 ;
2404511   +   H1x2_3  = H1x2_3  +     0.75388522027745 * AcceptedCmp10
2404512   +          +     2.63069611253058 * AcceptedCmp20  +     0.30907626174766 *
2404513   +        AcceptedCmp30  +     1.10100873408666 * AcceptedCmp40
2404514   +          +    -1.08824297693055 * AcceptedCmp50  +     1.05059014395924 *
2404515   +        Complain0  +     0.67869922391732 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.75388522027745 * AcceptedCmp10 + 2.63069611253058 * 
AcceptedCmp20 + 0.30907626174766 * AcceptedCmp30 + 1.10100873408666 * AcceptedCmp40 + 
-1.08824297693055 * AcceptedCmp50 + 1.05059014395924 * Complain0 + 0.67869922391732 * 
HigherEducationBinary0 ;
2404516   +   H1x2_4  = H1x2_4  +    -0.22033664091288 * AcceptedCmp10
2404517   +          +     1.34914301916376 * AcceptedCmp20  +    -0.91465085581504 *
2404518   +        AcceptedCmp30  +    -0.19686441685837 * AcceptedCmp40
2404519   +          +     0.10683331864009 * AcceptedCmp50  +    -0.00754824810979 *
2404520   +        Complain0  +     1.52033864172921 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -0.22033664091288 * AcceptedCmp10 + 1.34914301916376 * 
AcceptedCmp20 + -0.91465085581504 * AcceptedCmp30 + -0.19686441685837 * AcceptedCmp40 + 
0.10683331864009 * AcceptedCmp50 + -0.00754824810979 * Complain0 + 1.52033864172921 * 
HigherEducationBinary0 ;
2404521   +   H1x2_5  = H1x2_5  +     0.83049886541915 * AcceptedCmp10
2404522   +          +    -0.74079162208987 * AcceptedCmp20  +    -0.67792505698297 *
2404523   +        AcceptedCmp30  +     0.07081190269168 * AcceptedCmp40
2404524   +          +     0.18720033568684 * AcceptedCmp50  +      2.6531318197812 *
2404525   +        Complain0  +     0.89741230471087 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.83049886541915 * AcceptedCmp10 + -0.74079162208987 * 
AcceptedCmp20 + -0.67792505698297 * AcceptedCmp30 + 0.07081190269168 * AcceptedCmp40 + 
0.18720033568684 * AcceptedCmp50 + 2.6531318197812 * Complain0 + 0.89741230471087 * 
HigherEducationBinary0 ;
2404526   +   H1x2_6  = H1x2_6  +    -0.56781516290501 * AcceptedCmp10
2404527   +          +    -1.51874938874937 * AcceptedCmp20  +     1.28621778326033 *
2404528   +        AcceptedCmp30  +    -0.68769482686243 * AcceptedCmp40
2404529   +          +     0.35592893389946 * AcceptedCmp50  +    -1.30827608061077 *
2404530   +        Complain0  +     0.32980103195099 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + -0.56781516290501 * AcceptedCmp10 + -1.51874938874937 
* AcceptedCmp20 + 1.28621778326033 * AcceptedCmp30 + -0.68769482686243 * AcceptedCmp40 + 
0.35592893389946 * AcceptedCmp50 + -1.30827608061077 * Complain0 + 0.32980103195099 * 
HigherEducationBinary0 ;
2404531   +   H1x2_1  = H1x2_1  +     -1.3799101073197 * Education2n_Cycle
2404532   +          +     0.02501135207931 * EducationBasic  +     1.13490660748682 *
2404533   +        EducationGraduation  +    -0.11344307008943 * EducationMaster
2404534   +          +     0.56030871857835 * Marital_StatusDivorced
2404535   +          +    -1.22448534379831 * Marital_StatusMarried
2404536   +          +     0.78141783495855 * Marital_StatusSingle
2404537   +          +    -1.35807438297575 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -1.3799101073197 * Education2n_Cycle + 
0.02501135207931 * EducationBasic + 1.13490660748682 * EducationGraduation + -0.11344307008943 
* EducationMaster + 0.56030871857835 * Marital_StatusDivorced + -1.22448534379831 * 
Marital_StatusMarried + 0.78141783495855 * Marital_StatusSingle + -1.35807438297575 * 
Marital_StatusTogether ;
2404538   +   H1x2_2  = H1x2_2  +    -0.29912132201198 * Education2n_Cycle
2404539   +          +    -0.97227735746604 * EducationBasic  +     1.05541395347718 *
2404540   +        EducationGraduation  +     0.69607179798453 * EducationMaster
2404541   +          +    -2.63452071552997 * Marital_StatusDivorced
2404542   +          +     0.61829054779121 * Marital_StatusMarried
2404543   +          +    -2.20743370246315 * Marital_StatusSingle
2404544   +          +     0.56930072654252 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.29912132201198 * Education2n_Cycle + 
-0.97227735746604 * EducationBasic + 1.05541395347718 * EducationGraduation + 0.69607179798453 
* EducationMaster + -2.63452071552997 * Marital_StatusDivorced + 0.61829054779121 * 
Marital_StatusMarried + -2.20743370246315 * Marital_StatusSingle + 0.56930072654252 * 
Marital_StatusTogether ;
2404545   +   H1x2_3  = H1x2_3  +     0.65046688904352 * Education2n_Cycle
2404546   +          +     0.03854232912474 * EducationBasic  +     0.59545004622858 *
2404547   +        EducationGraduation  +    -1.68638824011899 * EducationMaster
2404548   +          +      -1.454102516731 * Marital_StatusDivorced
2404549   +          +     0.71488291465759 * Marital_StatusMarried
2404550   +          +     0.96038830049792 * Marital_StatusSingle
2404551   +          +    -0.85244216490853 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.65046688904352 * Education2n_Cycle + 
0.03854232912474 * EducationBasic + 0.59545004622858 * EducationGraduation + -1.68638824011899 
* EducationMaster + -1.454102516731 * Marital_StatusDivorced + 0.71488291465759 * 
Marital_StatusMarried + 0.96038830049792 * Marital_StatusSingle + -0.85244216490853 * 
Marital_StatusTogether ;
2404552   +   H1x2_4  = H1x2_4  +     0.37430673318658 * Education2n_Cycle
2404553   +          +    -0.25373979771478 * EducationBasic  +    -1.65617377693247 *
2404554   +        EducationGraduation  +    -1.12481097095571 * EducationMaster
2404555   +          +    -0.01160394891598 * Marital_StatusDivorced
2404556   +          +    -1.09054636482951 * Marital_StatusMarried
2404557   +          +      0.7793855479379 * Marital_StatusSingle
2404558   +          +    -0.40649435490654 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.37430673318658 * Education2n_Cycle + 
-0.25373979771478 * EducationBasic + -1.65617377693247 * EducationGraduation + 
-1.12481097095571 * EducationMaster + -0.01160394891598 * Marital_StatusDivorced + 
-1.09054636482951 * Marital_StatusMarried + 0.7793855479379 * Marital_StatusSingle + 
-0.40649435490654 * Marital_StatusTogether ;
2404559   +   H1x2_5  = H1x2_5  +     -0.1016827992735 * Education2n_Cycle
2404560   +          +     1.07194596228219 * EducationBasic  +    -1.05800808905557 *
2404561   +        EducationGraduation  +     0.09666597691691 * EducationMaster
2404562   +          +    -0.73414854875115 * Marital_StatusDivorced
2404563   +          +     0.46421425621114 * Marital_StatusMarried
2404564   +          +    -0.54512730625469 * Marital_StatusSingle
2404565   +          +     0.76568726267448 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + -0.1016827992735 * Education2n_Cycle + 
1.07194596228219 * EducationBasic + -1.05800808905557 * EducationGraduation + 0.09666597691691 
* EducationMaster + -0.73414854875115 * Marital_StatusDivorced + 0.46421425621114 * 
Marital_StatusMarried + -0.54512730625469 * Marital_StatusSingle + 0.76568726267448 * 
Marital_StatusTogether ;
2404566   +   H1x2_6  = H1x2_6  +    -1.15957084181454 * Education2n_Cycle
2404567   +          +     0.00847667341235 * EducationBasic  +    -1.58463832529749 *
2404568   +        EducationGraduation  +     0.56518194582557 * EducationMaster
2404569   +          +     0.25131188683384 * Marital_StatusDivorced
2404570   +          +     2.38279806963807 * Marital_StatusMarried
2404571   +          +     0.28897706448348 * Marital_StatusSingle
2404572   +          +     0.89118497255856 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + -1.15957084181454 * Education2n_Cycle + 
0.00847667341235 * EducationBasic + -1.58463832529749 * EducationGraduation + 0.56518194582557 
* EducationMaster + 0.25131188683384 * Marital_StatusDivorced + 2.38279806963807 * 
Marital_StatusMarried + 0.28897706448348 * Marital_StatusSingle + 0.89118497255856 * 
Marital_StatusTogether ;
2404573   +   H1x2_1  =    -1.58113759763481 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -1.58113759763481 + H1x2_1 ;
2404574   +   H1x2_2  =    -1.19307731012977 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -1.19307731012977 + H1x2_2 ;
2404575   +   H1x2_3  =     0.35767811974231 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = 0.35767811974231 + H1x2_3 ;
2404576   +   H1x2_4  =    -0.20241610577527 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.20241610577527 + H1x2_4 ;
2404577   +   H1x2_5  =     0.30120348602955 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 0.30120348602955 + H1x2_5 ;
2404578   +   H1x2_6  =     1.04145053611779 + H1x2_6 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = 1.04145053611779 + H1x2_6 ;
2404579   +   H1x2_7  = 0;
MPRINT(EM_DIAGRAM):   H1x2_7 = 0;
2404580   +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 , H1x2_7
2404581   +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 , 
H1x2_7 );
2404582   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2404583   +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
2404584   +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
2404585   +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
2404586   +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
2404587   +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
2404588   +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
2404589   +   H1x2_4  = EXP(H1x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(H1x2_4 - _MAX_);
2404590   +   _SUM_ = _SUM_ + H1x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_4 ;
2404591   +   H1x2_5  = EXP(H1x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(H1x2_5 - _MAX_);
2404592   +   _SUM_ = _SUM_ + H1x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_5 ;
2404593   +   H1x2_6  = EXP(H1x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(H1x2_6 - _MAX_);
2404594   +   _SUM_ = _SUM_ + H1x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_6 ;
2404595   +   H1x2_7  = EXP(H1x2_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_7 = EXP(H1x2_7 - _MAX_);
2404596   +   _SUM_ = _SUM_ + H1x2_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_7 ;
2404597   +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
2404598   +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
2404599   +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
2404600   +   H1x2_4  = H1x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 / _SUM_;
2404601   +   H1x2_5  = H1x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 / _SUM_;
2404602   +   H1x2_6  = H1x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 / _SUM_;
2404603   +   H1x2_7  = H1x2_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_7 = H1x2_7 / _SUM_;
2404604   +END;
MPRINT(EM_DIAGRAM):   END;
2404605   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2404606   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
2404607   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
2404608   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
2404609   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
2404610   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
2404611   +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
2404612   +   H1x2_7  = .;
MPRINT(EM_DIAGRAM):   H1x2_7 = .;
2404613   +END;
MPRINT(EM_DIAGRAM):   END;
2404614   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2404615   +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
2404616   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2404617   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2404618   +   H1x3_1  =    -0.17891338426869 * S_AcceptedCmpTotal
2404619   +          +     0.25935021287808 * S_Age  +     -0.4211584261256 * S_Frq
2404620   +          +    -1.91007620895221 * S_Income  +     0.38954955842314 *
2404621   +        S_Kidhome  +     0.07674351412771 * S_Mnt  +    -0.00193662324959 *
2404622   +        S_MntFishProducts  +    -0.05912563364557 * S_MntFruits
2404623   +          +     0.34447908349796 * S_MntGoldProds  +      1.8146796379351 *
2404624   +        S_MntMeatProducts  +    -0.28617584915758 * S_MntSweetProducts
2404625   +          +    -0.25003395507837 * S_MntWines  +     2.70698456342857 *
2404626   +        S_MonthsAsCustomer  +     0.61560315312621 * S_NumCatalogPurchases
2404627   +          +     1.11855402225797 * S_NumDealsPurchases
2404628   +          +     0.39150287442005 * S_NumDistPurchases
2404629   +          +     0.00160244551627 * S_NumStorePurchases
2404630   +          +     1.54380043731879 * S_NumWebPurchases
2404631   +          +      0.6462755347813 * S_NumWebVisitsMonth
2404632   +          +      0.3712356571744 * S_RFMstat  +     0.31930000498313 *
2404633   +        S_RMntFrq  +     0.91533450209744 * S_Recency
2404634   +          +    -1.15144971921837 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_1 = -0.17891338426869 * S_AcceptedCmpTotal + 0.25935021287808 * 
S_Age + -0.4211584261256 * S_Frq + -1.91007620895221 * S_Income + 0.38954955842314 * S_Kidhome 
+ 0.07674351412771 * S_Mnt + -0.00193662324959 * S_MntFishProducts + -0.05912563364557 * 
S_MntFruits + 0.34447908349796 * S_MntGoldProds + 1.8146796379351 * S_MntMeatProducts + 
-0.28617584915758 * S_MntSweetProducts + -0.25003395507837 * S_MntWines + 2.70698456342857 * 
S_MonthsAsCustomer + 0.61560315312621 * S_NumCatalogPurchases + 1.11855402225797 * 
S_NumDealsPurchases + 0.39150287442005 * S_NumDistPurchases + 0.00160244551627 * 
S_NumStorePurchases + 1.54380043731879 * S_NumWebPurchases + 0.6462755347813 * 
S_NumWebVisitsMonth + 0.3712356571744 * S_RFMstat + 0.31930000498313 * S_RMntFrq + 
0.91533450209744 * S_Recency + -1.15144971921837 * S_Teenhome ;
2404635   +   H1x3_2  =     0.70342217458269 * S_AcceptedCmpTotal
2404636   +          +     1.00269567168731 * S_Age  +     0.28237778780972 * S_Frq
2404637   +          +     1.85610950568833 * S_Income  +    -0.88627540559449 *
2404638   +        S_Kidhome  +      -0.681406495446 * S_Mnt  +    -0.52884566607488 *
2404639   +        S_MntFishProducts  +    -1.55540056999822 * S_MntFruits
2404640   +          +    -0.86530238267543 * S_MntGoldProds  +     0.50288889191395 *
2404641   +        S_MntMeatProducts  +     0.42795025747297 * S_MntSweetProducts
2404642   +          +     1.65622561769832 * S_MntWines  +    -0.40506757052255 *
2404643   +        S_MonthsAsCustomer  +    -0.45283667973478 * S_NumCatalogPurchases
2404644   +          +     0.01911815525287 * S_NumDealsPurchases
2404645   +          +    -1.07196707915227 * S_NumDistPurchases
2404646   +          +      0.6452048321682 * S_NumStorePurchases
2404647   +          +    -0.15818575353955 * S_NumWebPurchases
2404648   +          +    -0.82586162051382 * S_NumWebVisitsMonth
2404649   +          +     0.35914598433318 * S_RFMstat  +     0.14754646817335 *
2404650   +        S_RMntFrq  +     0.23398669008843 * S_Recency
2404651   +          +      0.1494741245474 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_2 = 0.70342217458269 * S_AcceptedCmpTotal + 1.00269567168731 * 
S_Age + 0.28237778780972 * S_Frq + 1.85610950568833 * S_Income + -0.88627540559449 * S_Kidhome 
+ -0.681406495446 * S_Mnt + -0.52884566607488 * S_MntFishProducts + -1.55540056999822 * 
S_MntFruits + -0.86530238267543 * S_MntGoldProds + 0.50288889191395 * S_MntMeatProducts + 
0.42795025747297 * S_MntSweetProducts + 1.65622561769832 * S_MntWines + -0.40506757052255 * 
S_MonthsAsCustomer + -0.45283667973478 * S_NumCatalogPurchases + 0.01911815525287 * 
S_NumDealsPurchases + -1.07196707915227 * S_NumDistPurchases + 0.6452048321682 * 
S_NumStorePurchases + -0.15818575353955 * S_NumWebPurchases + -0.82586162051382 * 
S_NumWebVisitsMonth + 0.35914598433318 * S_RFMstat + 0.14754646817335 * S_RMntFrq + 
0.23398669008843 * S_Recency + 0.1494741245474 * S_Teenhome ;
2404652   +   H1x3_3  =     0.54929571619315 * S_AcceptedCmpTotal
2404653   +          +      -0.751329127583 * S_Age  +    -0.94592306727941 * S_Frq
2404654   +          +    -1.17625421122138 * S_Income  +     0.74760015734698 *
2404655   +        S_Kidhome  +    -1.31055967085841 * S_Mnt  +     -0.5844789069547 *
2404656   +        S_MntFishProducts  +     0.29563811382096 * S_MntFruits
2404657   +          +      2.0486671645084 * S_MntGoldProds  +      0.4596153519541 *
2404658   +        S_MntMeatProducts  +     0.43182048706593 * S_MntSweetProducts
2404659   +          +     0.06319773540648 * S_MntWines  +     -0.9320658068644 *
2404660   +        S_MonthsAsCustomer  +     0.97208201647088 * S_NumCatalogPurchases
2404661   +          +     1.56893739271853 * S_NumDealsPurchases
2404662   +          +      0.6745865425238 * S_NumDistPurchases
2404663   +          +    -0.26848765783548 * S_NumStorePurchases
2404664   +          +     0.79227081430227 * S_NumWebPurchases
2404665   +          +     0.83054874267768 * S_NumWebVisitsMonth
2404666   +          +    -0.28363014203077 * S_RFMstat  +    -0.71879552423951 *
2404667   +        S_RMntFrq  +     0.80917480816898 * S_Recency
2404668   +          +    -0.52052715034272 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_3 = 0.54929571619315 * S_AcceptedCmpTotal + -0.751329127583 * S_Age 
+ -0.94592306727941 * S_Frq + -1.17625421122138 * S_Income + 0.74760015734698 * S_Kidhome + 
-1.31055967085841 * S_Mnt + -0.5844789069547 * S_MntFishProducts + 0.29563811382096 * 
S_MntFruits + 2.0486671645084 * S_MntGoldProds + 0.4596153519541 * S_MntMeatProducts + 
0.43182048706593 * S_MntSweetProducts + 0.06319773540648 * S_MntWines + -0.9320658068644 * 
S_MonthsAsCustomer + 0.97208201647088 * S_NumCatalogPurchases + 1.56893739271853 * 
S_NumDealsPurchases + 0.6745865425238 * S_NumDistPurchases + -0.26848765783548 * 
S_NumStorePurchases + 0.79227081430227 * S_NumWebPurchases + 0.83054874267768 * 
S_NumWebVisitsMonth + -0.28363014203077 * S_RFMstat + -0.71879552423951 * S_RMntFrq + 
0.80917480816898 * S_Recency + -0.52052715034272 * S_Teenhome ;
2404669   +   H1x3_4  =     1.71480641781959 * S_AcceptedCmpTotal
2404670   +          +    -0.98495603767618 * S_Age  +     -0.0459665945886 * S_Frq
2404671   +          +     1.19396539246615 * S_Income  +     0.51326452746824 *
2404672   +        S_Kidhome  +    -0.22663230333642 * S_Mnt  +     0.27256846012963 *
2404673   +        S_MntFishProducts  +    -0.50661455153622 * S_MntFruits
2404674   +          +     -0.3498057126965 * S_MntGoldProds  +    -2.87000075082987 *
2404675   +        S_MntMeatProducts  +    -0.09413391100844 * S_MntSweetProducts
2404676   +          +     1.15010664811376 * S_MntWines  +    -0.48501392658783 *
2404677   +        S_MonthsAsCustomer  +      0.2688077310392 * S_NumCatalogPurchases
2404678   +          +    -0.23954856030467 * S_NumDealsPurchases
2404679   +          +    -1.61914390483829 * S_NumDistPurchases
2404680   +          +      -1.014570623016 * S_NumStorePurchases
2404681   +          +    -0.36828642098701 * S_NumWebPurchases
2404682   +          +    -0.04976922659227 * S_NumWebVisitsMonth
2404683   +          +     0.87811344320757 * S_RFMstat  +    -1.70999928232532 *
2404684   +        S_RMntFrq  +    -0.40880481304369 * S_Recency
2404685   +          +     0.75806578113158 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_4 = 1.71480641781959 * S_AcceptedCmpTotal + -0.98495603767618 * 
S_Age + -0.0459665945886 * S_Frq + 1.19396539246615 * S_Income + 0.51326452746824 * S_Kidhome 
+ -0.22663230333642 * S_Mnt + 0.27256846012963 * S_MntFishProducts + -0.50661455153622 * 
S_MntFruits + -0.3498057126965 * S_MntGoldProds + -2.87000075082987 * S_MntMeatProducts + 
-0.09413391100844 * S_MntSweetProducts + 1.15010664811376 * S_MntWines + -0.48501392658783 * 
S_MonthsAsCustomer + 0.2688077310392 * S_NumCatalogPurchases + -0.23954856030467 * 
S_NumDealsPurchases + -1.61914390483829 * S_NumDistPurchases + -1.014570623016 * 
S_NumStorePurchases + -0.36828642098701 * S_NumWebPurchases + -0.04976922659227 * 
S_NumWebVisitsMonth + 0.87811344320757 * S_RFMstat + -1.70999928232532 * S_RMntFrq + 
-0.40880481304369 * S_Recency + 0.75806578113158 * S_Teenhome ;
2404686   +   H1x3_5  =    -0.35033091531835 * S_AcceptedCmpTotal
2404687   +          +    -1.18148775203733 * S_Age  +    -0.17374293038138 * S_Frq
2404688   +          +    -0.36680516767012 * S_Income  +     0.57186890691757 *
2404689   +        S_Kidhome  +    -0.02612042491922 * S_Mnt  +     0.84551697375819 *
2404690   +        S_MntFishProducts  +     0.44255296354709 * S_MntFruits
2404691   +          +    -1.35259485807243 * S_MntGoldProds  +      0.3377329409199 *
2404692   +        S_MntMeatProducts  +    -1.06135100840202 * S_MntSweetProducts
2404693   +          +     0.15771394796649 * S_MntWines  +     1.55754960780486 *
2404694   +        S_MonthsAsCustomer  +    -0.76896921785988 * S_NumCatalogPurchases
2404695   +          +     1.00094082424204 * S_NumDealsPurchases
2404696   +          +      0.2724785290725 * S_NumDistPurchases
2404697   +          +     0.13170237783486 * S_NumStorePurchases
2404698   +          +    -1.31447792523743 * S_NumWebPurchases
2404699   +          +    -0.09121088371438 * S_NumWebVisitsMonth
2404700   +          +     1.46860488573551 * S_RFMstat  +     0.46491504994651 *
2404701   +        S_RMntFrq  +      0.6767512513985 * S_Recency
2404702   +          +    -1.74995034763966 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_5 = -0.35033091531835 * S_AcceptedCmpTotal + -1.18148775203733 * 
S_Age + -0.17374293038138 * S_Frq + -0.36680516767012 * S_Income + 0.57186890691757 * 
S_Kidhome + -0.02612042491922 * S_Mnt + 0.84551697375819 * S_MntFishProducts + 
0.44255296354709 * S_MntFruits + -1.35259485807243 * S_MntGoldProds + 0.3377329409199 * 
S_MntMeatProducts + -1.06135100840202 * S_MntSweetProducts + 0.15771394796649 * S_MntWines + 
1.55754960780486 * S_MonthsAsCustomer + -0.76896921785988 * S_NumCatalogPurchases + 
1.00094082424204 * S_NumDealsPurchases + 0.2724785290725 * S_NumDistPurchases + 
0.13170237783486 * S_NumStorePurchases + -1.31447792523743 * S_NumWebPurchases + 
-0.09121088371438 * S_NumWebVisitsMonth + 1.46860488573551 * S_RFMstat + 0.46491504994651 * 
S_RMntFrq + 0.6767512513985 * S_Recency + -1.74995034763966 * S_Teenhome ;
2404703   +   H1x3_6  =     1.05520309715672 * S_AcceptedCmpTotal
2404704   +          +    -1.05930507843633 * S_Age  +     0.07032294102853 * S_Frq
2404705   +          +    -0.05932294137503 * S_Income  +    -1.47206442598932 *
2404706   +        S_Kidhome  +     0.56661112816398 * S_Mnt  +    -0.11340132210258 *
2404707   +        S_MntFishProducts  +    -0.32177484313741 * S_MntFruits
2404708   +          +    -0.32378384178804 * S_MntGoldProds  +     0.00540737819175 *
2404709   +        S_MntMeatProducts  +     0.14834467568566 * S_MntSweetProducts
2404710   +          +    -0.95841169333668 * S_MntWines  +    -0.62902099823048 *
2404711   +        S_MonthsAsCustomer  +    -0.67434201898155 * S_NumCatalogPurchases
2404712   +          +    -0.73198872336344 * S_NumDealsPurchases
2404713   +          +     0.29368958872361 * S_NumDistPurchases
2404714   +          +     1.52772046446908 * S_NumStorePurchases
2404715   +          +    -1.75065469134874 * S_NumWebPurchases
2404716   +          +      0.0264954621772 * S_NumWebVisitsMonth
2404717   +          +    -0.88054137065815 * S_RFMstat  +     0.70371760194946 *
2404718   +        S_RMntFrq  +     1.14219878739476 * S_Recency
2404719   +          +    -1.15240998118906 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_6 = 1.05520309715672 * S_AcceptedCmpTotal + -1.05930507843633 * 
S_Age + 0.07032294102853 * S_Frq + -0.05932294137503 * S_Income + -1.47206442598932 * 
S_Kidhome + 0.56661112816398 * S_Mnt + -0.11340132210258 * S_MntFishProducts + 
-0.32177484313741 * S_MntFruits + -0.32378384178804 * S_MntGoldProds + 0.00540737819175 * 
S_MntMeatProducts + 0.14834467568566 * S_MntSweetProducts + -0.95841169333668 * S_MntWines + 
-0.62902099823048 * S_MonthsAsCustomer + -0.67434201898155 * S_NumCatalogPurchases + 
-0.73198872336344 * S_NumDealsPurchases + 0.29368958872361 * S_NumDistPurchases + 
1.52772046446908 * S_NumStorePurchases + -1.75065469134874 * S_NumWebPurchases + 
0.0264954621772 * S_NumWebVisitsMonth + -0.88054137065815 * S_RFMstat + 0.70371760194946 * 
S_RMntFrq + 1.14219878739476 * S_Recency + -1.15240998118906 * S_Teenhome ;
2404720   +   H1x3_1  = H1x3_1  +     0.60800466481517 * AcceptedCmp10
2404721   +          +     0.33187245535701 * AcceptedCmp20  +    -0.13888343551044 *
2404722   +        AcceptedCmp30  +     0.93663925029857 * AcceptedCmp40
2404723   +          +     1.09340622621085 * AcceptedCmp50  +    -0.49132743156126 *
2404724   +        Complain0  +     0.45196197584946 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 0.60800466481517 * AcceptedCmp10 + 0.33187245535701 * 
AcceptedCmp20 + -0.13888343551044 * AcceptedCmp30 + 0.93663925029857 * AcceptedCmp40 + 
1.09340622621085 * AcceptedCmp50 + -0.49132743156126 * Complain0 + 0.45196197584946 * 
HigherEducationBinary0 ;
2404725   +   H1x3_2  = H1x3_2  +     1.40275485940553 * AcceptedCmp10
2404726   +          +    -0.15035102140746 * AcceptedCmp20  +    -0.53574064147206 *
2404727   +        AcceptedCmp30  +    -1.67324904853563 * AcceptedCmp40
2404728   +          +     0.05636486780046 * AcceptedCmp50  +    -0.39032867538703 *
2404729   +        Complain0  +    -0.74980603736258 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + 1.40275485940553 * AcceptedCmp10 + -0.15035102140746 * 
AcceptedCmp20 + -0.53574064147206 * AcceptedCmp30 + -1.67324904853563 * AcceptedCmp40 + 
0.05636486780046 * AcceptedCmp50 + -0.39032867538703 * Complain0 + -0.74980603736258 * 
HigherEducationBinary0 ;
2404730   +   H1x3_3  = H1x3_3  +     0.26722647672682 * AcceptedCmp10
2404731   +          +      0.6216449242511 * AcceptedCmp20  +     0.76635966126463 *
2404732   +        AcceptedCmp30  +    -2.48978919706551 * AcceptedCmp40
2404733   +          +     0.98619070514978 * AcceptedCmp50  +    -0.19244215041297 *
2404734   +        Complain0  +    -1.19045127506692 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 + 0.26722647672682 * AcceptedCmp10 + 0.6216449242511 * 
AcceptedCmp20 + 0.76635966126463 * AcceptedCmp30 + -2.48978919706551 * AcceptedCmp40 + 
0.98619070514978 * AcceptedCmp50 + -0.19244215041297 * Complain0 + -1.19045127506692 * 
HigherEducationBinary0 ;
2404735   +   H1x3_4  = H1x3_4  +    -1.73915810074841 * AcceptedCmp10
2404736   +          +     0.72244354389321 * AcceptedCmp20  +     1.07200246076684 *
2404737   +        AcceptedCmp30  +     0.24242315318429 * AcceptedCmp40
2404738   +          +     0.48717202781909 * AcceptedCmp50  +    -1.18600714935645 *
2404739   +        Complain0  +     -1.0752062632729 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 + -1.73915810074841 * AcceptedCmp10 + 0.72244354389321 * 
AcceptedCmp20 + 1.07200246076684 * AcceptedCmp30 + 0.24242315318429 * AcceptedCmp40 + 
0.48717202781909 * AcceptedCmp50 + -1.18600714935645 * Complain0 + -1.0752062632729 * 
HigherEducationBinary0 ;
2404740   +   H1x3_5  = H1x3_5  +     1.07972020322696 * AcceptedCmp10
2404741   +          +     0.38275266830165 * AcceptedCmp20  +     0.45959913551609 *
2404742   +        AcceptedCmp30  +    -0.30891288234597 * AcceptedCmp40
2404743   +          +    -0.35568820567134 * AcceptedCmp50  +     -1.8045223309162 *
2404744   +        Complain0  +    -0.29380313969195 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 + 1.07972020322696 * AcceptedCmp10 + 0.38275266830165 * 
AcceptedCmp20 + 0.45959913551609 * AcceptedCmp30 + -0.30891288234597 * AcceptedCmp40 + 
-0.35568820567134 * AcceptedCmp50 + -1.8045223309162 * Complain0 + -0.29380313969195 * 
HigherEducationBinary0 ;
2404745   +   H1x3_6  = H1x3_6  +    -2.40002597755125 * AcceptedCmp10
2404746   +          +     0.61725427642794 * AcceptedCmp20  +      1.3438972982524 *
2404747   +        AcceptedCmp30  +    -0.66766212489049 * AcceptedCmp40
2404748   +          +     1.10709227053258 * AcceptedCmp50  +    -0.98301865424423 *
2404749   +        Complain0  +     0.83512874944952 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_6 = H1x3_6 + -2.40002597755125 * AcceptedCmp10 + 0.61725427642794 * 
AcceptedCmp20 + 1.3438972982524 * AcceptedCmp30 + -0.66766212489049 * AcceptedCmp40 + 
1.10709227053258 * AcceptedCmp50 + -0.98301865424423 * Complain0 + 0.83512874944952 * 
HigherEducationBinary0 ;
2404750   +   H1x3_1  = H1x3_1  +    -0.49604077640433 * Education2n_Cycle
2404751   +          +    -0.60803139475446 * EducationBasic  +     0.39029834300888 *
2404752   +        EducationGraduation  +     1.49476669226441 * EducationMaster
2404753   +          +     0.32207432513904 * Marital_StatusDivorced
2404754   +          +      0.6397913221395 * Marital_StatusMarried
2404755   +          +    -0.25330032559918 * Marital_StatusSingle
2404756   +          +      0.6826963146507 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + -0.49604077640433 * Education2n_Cycle + 
-0.60803139475446 * EducationBasic + 0.39029834300888 * EducationGraduation + 1.49476669226441 
* EducationMaster + 0.32207432513904 * Marital_StatusDivorced + 0.6397913221395 * 
Marital_StatusMarried + -0.25330032559918 * Marital_StatusSingle + 0.6826963146507 * 
Marital_StatusTogether ;
2404757   +   H1x3_2  = H1x3_2  +     0.70727271276171 * Education2n_Cycle
2404758   +          +    -0.74539861835467 * EducationBasic  +    -1.09813520505203 *
2404759   +        EducationGraduation  +      0.0913616986494 * EducationMaster
2404760   +          +     0.79430904713493 * Marital_StatusDivorced
2404761   +          +     2.54456429102799 * Marital_StatusMarried
2404762   +          +     0.59410742352499 * Marital_StatusSingle
2404763   +          +     0.62339810371964 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + 0.70727271276171 * Education2n_Cycle + 
-0.74539861835467 * EducationBasic + -1.09813520505203 * EducationGraduation + 0.0913616986494 
* EducationMaster + 0.79430904713493 * Marital_StatusDivorced + 2.54456429102799 * 
Marital_StatusMarried + 0.59410742352499 * Marital_StatusSingle + 0.62339810371964 * 
Marital_StatusTogether ;
2404764   +   H1x3_3  = H1x3_3  +     0.41739931776571 * Education2n_Cycle
2404765   +          +     0.90042318812458 * EducationBasic  +    -0.30863999735161 *
2404766   +        EducationGraduation  +    -0.07080985966069 * EducationMaster
2404767   +          +    -0.43081775693595 * Marital_StatusDivorced
2404768   +          +    -0.78485102174552 * Marital_StatusMarried
2404769   +          +    -1.56581090110813 * Marital_StatusSingle
2404770   +          +     1.31552735466691 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 + 0.41739931776571 * Education2n_Cycle + 
0.90042318812458 * EducationBasic + -0.30863999735161 * EducationGraduation + 
-0.07080985966069 * EducationMaster + -0.43081775693595 * Marital_StatusDivorced + 
-0.78485102174552 * Marital_StatusMarried + -1.56581090110813 * Marital_StatusSingle + 
1.31552735466691 * Marital_StatusTogether ;
2404771   +   H1x3_4  = H1x3_4  +    -1.03450070870223 * Education2n_Cycle
2404772   +          +     0.12962104594991 * EducationBasic  +    -2.08320982697158 *
2404773   +        EducationGraduation  +     1.01633562820676 * EducationMaster
2404774   +          +     0.38226706522151 * Marital_StatusDivorced
2404775   +          +     0.96666958079914 * Marital_StatusMarried
2404776   +          +    -0.07771259761555 * Marital_StatusSingle
2404777   +          +    -0.15667080607342 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 + -1.03450070870223 * Education2n_Cycle + 
0.12962104594991 * EducationBasic + -2.08320982697158 * EducationGraduation + 1.01633562820676 
* EducationMaster + 0.38226706522151 * Marital_StatusDivorced + 0.96666958079914 * 
Marital_StatusMarried + -0.07771259761555 * Marital_StatusSingle + -0.15667080607342 * 
Marital_StatusTogether ;
2404778   +   H1x3_5  = H1x3_5  +     0.42350784953316 * Education2n_Cycle
2404779   +          +    -0.47409869250049 * EducationBasic  +     0.22752853959532 *
2404780   +        EducationGraduation  +     0.05813076059598 * EducationMaster
2404781   +          +    -0.38325393606947 * Marital_StatusDivorced
2404782   +          +    -1.43303056163299 * Marital_StatusMarried
2404783   +          +     0.11571941757387 * Marital_StatusSingle
2404784   +          +     0.42633042000729 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 + 0.42350784953316 * Education2n_Cycle + 
-0.47409869250049 * EducationBasic + 0.22752853959532 * EducationGraduation + 0.05813076059598 
* EducationMaster + -0.38325393606947 * Marital_StatusDivorced + -1.43303056163299 * 
Marital_StatusMarried + 0.11571941757387 * Marital_StatusSingle + 0.42633042000729 * 
Marital_StatusTogether ;
2404785   +   H1x3_6  = H1x3_6  +     1.11214831415741 * Education2n_Cycle
2404786   +          +      0.8877309144454 * EducationBasic  +     0.87390674413956 *
2404787   +        EducationGraduation  +     0.90837023676142 * EducationMaster
2404788   +          +    -0.36491799765765 * Marital_StatusDivorced
2404789   +          +     0.14142786767503 * Marital_StatusMarried
2404790   +          +     0.22643970468805 * Marital_StatusSingle
2404791   +          +     0.74162870756295 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_6 = H1x3_6 + 1.11214831415741 * Education2n_Cycle + 0.8877309144454 
* EducationBasic + 0.87390674413956 * EducationGraduation + 0.90837023676142 * EducationMaster 
+ -0.36491799765765 * Marital_StatusDivorced + 0.14142786767503 * Marital_StatusMarried + 
0.22643970468805 * Marital_StatusSingle + 0.74162870756295 * Marital_StatusTogether ;
2404792   +   H1x3_1  =        0.17121674502 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.17121674502 + H1x3_1 ;
2404793   +   H1x3_2  =    -0.07858073871761 + H1x3_2 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = -0.07858073871761 + H1x3_2 ;
2404794   +   H1x3_3  =     -0.1687483376367 + H1x3_3 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = -0.1687483376367 + H1x3_3 ;
2404795   +   H1x3_4  =     0.92501573900148 + H1x3_4 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = 0.92501573900148 + H1x3_4 ;
2404796   +   H1x3_5  =    -0.04765930254307 + H1x3_5 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = -0.04765930254307 + H1x3_5 ;
2404797   +   H1x3_6  =     0.29532221854366 + H1x3_6 ;
MPRINT(EM_DIAGRAM):   H1x3_6 = 0.29532221854366 + H1x3_6 ;
2404798   +   H1x3_7  = 0;
MPRINT(EM_DIAGRAM):   H1x3_7 = 0;
2404799   +   _MAX_ = MAX (H1x3_1 , H1x3_2 , H1x3_3 , H1x3_4 , H1x3_5 , H1x3_6 , H1x3_7
2404800   +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x3_1 , H1x3_2 , H1x3_3 , H1x3_4 , H1x3_5 , H1x3_6 , 
H1x3_7 );
2404801   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2404802   +   H1x3_1  = EXP(H1x3_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_1 = EXP(H1x3_1 - _MAX_);
2404803   +   _SUM_ = _SUM_ + H1x3_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_1 ;
2404804   +   H1x3_2  = EXP(H1x3_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_2 = EXP(H1x3_2 - _MAX_);
2404805   +   _SUM_ = _SUM_ + H1x3_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_2 ;
2404806   +   H1x3_3  = EXP(H1x3_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_3 = EXP(H1x3_3 - _MAX_);
2404807   +   _SUM_ = _SUM_ + H1x3_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_3 ;
2404808   +   H1x3_4  = EXP(H1x3_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_4 = EXP(H1x3_4 - _MAX_);
2404809   +   _SUM_ = _SUM_ + H1x3_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_4 ;
2404810   +   H1x3_5  = EXP(H1x3_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_5 = EXP(H1x3_5 - _MAX_);
2404811   +   _SUM_ = _SUM_ + H1x3_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_5 ;
2404812   +   H1x3_6  = EXP(H1x3_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_6 = EXP(H1x3_6 - _MAX_);
2404813   +   _SUM_ = _SUM_ + H1x3_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_6 ;
2404814   +   H1x3_7  = EXP(H1x3_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_7 = EXP(H1x3_7 - _MAX_);
2404815   +   _SUM_ = _SUM_ + H1x3_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_7 ;
2404816   +   H1x3_1  = H1x3_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 / _SUM_;
2404817   +   H1x3_2  = H1x3_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 / _SUM_;
2404818   +   H1x3_3  = H1x3_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 / _SUM_;
2404819   +   H1x3_4  = H1x3_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 / _SUM_;
2404820   +   H1x3_5  = H1x3_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 / _SUM_;
2404821   +   H1x3_6  = H1x3_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_6 = H1x3_6 / _SUM_;
2404822   +   H1x3_7  = H1x3_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_7 = H1x3_7 / _SUM_;
2404823   +END;
MPRINT(EM_DIAGRAM):   END;
2404824   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2404825   +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
2404826   +   H1x3_2  = .;
MPRINT(EM_DIAGRAM):   H1x3_2 = .;
2404827   +   H1x3_3  = .;
MPRINT(EM_DIAGRAM):   H1x3_3 = .;
2404828   +   H1x3_4  = .;
MPRINT(EM_DIAGRAM):   H1x3_4 = .;
2404829   +   H1x3_5  = .;
MPRINT(EM_DIAGRAM):   H1x3_5 = .;
2404830   +   H1x3_6  = .;
MPRINT(EM_DIAGRAM):   H1x3_6 = .;
2404831   +   H1x3_7  = .;
MPRINT(EM_DIAGRAM):   H1x3_7 = .;
2404832   +END;
MPRINT(EM_DIAGRAM):   END;
2404833   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2404834   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
2404835   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2404836   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2404837   +   H2x1_1  =    -0.59397690687549 * H1x1_1  +     0.10790242485513 * H1x1_2
2404838   +          +     1.34957997338147 * H1x1_3  +     0.98783879769831 * H1x1_4
2404839   +          +    -1.73131698691915 * H1x1_5  +    -0.04920424431591 * H1x1_6
2404840   +          +    -0.75229173661277 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -0.59397690687549 * H1x1_1 + 0.10790242485513 * H1x1_2 + 
1.34957997338147 * H1x1_3 + 0.98783879769831 * H1x1_4 + -1.73131698691915 * H1x1_5 + 
-0.04920424431591 * H1x1_6 + -0.75229173661277 * H1x1_7 ;
2404841   +   H2x1_2  =    -0.98729009516736 * H1x1_1  +     0.08491210993613 * H1x1_2
2404842   +          +     0.08027654554575 * H1x1_3  +     0.06189432860142 * H1x1_4
2404843   +          +    -1.23526842489276 * H1x1_5  +    -0.17600169070197 * H1x1_6
2404844   +          +     0.70746372975481 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -0.98729009516736 * H1x1_1 + 0.08491210993613 * H1x1_2 + 
0.08027654554575 * H1x1_3 + 0.06189432860142 * H1x1_4 + -1.23526842489276 * H1x1_5 + 
-0.17600169070197 * H1x1_6 + 0.70746372975481 * H1x1_7 ;
2404845   +   H2x1_3  =    -0.91861478701429 * H1x1_1  +     0.18513565366261 * H1x1_2
2404846   +          +    -0.18629587955963 * H1x1_3  +     0.76802660507034 * H1x1_4
2404847   +          +    -0.47979525657638 * H1x1_5  +     0.06968142422923 * H1x1_6
2404848   +          +     2.18264864713501 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -0.91861478701429 * H1x1_1 + 0.18513565366261 * H1x1_2 + 
-0.18629587955963 * H1x1_3 + 0.76802660507034 * H1x1_4 + -0.47979525657638 * H1x1_5 + 
0.06968142422923 * H1x1_6 + 2.18264864713501 * H1x1_7 ;
2404849   +   H2x1_4  =     1.02774363171853 * H1x1_1  +     1.08006636098136 * H1x1_2
2404850   +          +    -2.27078540572539 * H1x1_3  +    -0.54968089382258 * H1x1_4
2404851   +          +     2.11477012099075 * H1x1_5  +     1.91368944483056 * H1x1_6
2404852   +          +     0.22313799249268 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.02774363171853 * H1x1_1 + 1.08006636098136 * H1x1_2 + 
-2.27078540572539 * H1x1_3 + -0.54968089382258 * H1x1_4 + 2.11477012099075 * H1x1_5 + 
1.91368944483056 * H1x1_6 + 0.22313799249268 * H1x1_7 ;
2404853   +   H2x1_5  =    -1.06933000183778 * H1x1_1  +     0.73081558484415 * H1x1_2
2404854   +          +    -0.78012012951065 * H1x1_3  +     0.81916081920412 * H1x1_4
2404855   +          +    -1.46358608086032 * H1x1_5  +     1.83492870022704 * H1x1_6
2404856   +          +     0.75554005406859 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -1.06933000183778 * H1x1_1 + 0.73081558484415 * H1x1_2 + 
-0.78012012951065 * H1x1_3 + 0.81916081920412 * H1x1_4 + -1.46358608086032 * H1x1_5 + 
1.83492870022704 * H1x1_6 + 0.75554005406859 * H1x1_7 ;
2404857   +   H2x1_6  =    -2.28576277725334 * H1x1_1  +    -0.32249555333061 * H1x1_2
2404858   +          +     3.41388795688866 * H1x1_3  +     3.30305437699117 * H1x1_4
2404859   +          +    -1.49237136034665 * H1x1_5  +    -1.64329313023006 * H1x1_6
2404860   +          +     3.08746595768905 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = -2.28576277725334 * H1x1_1 + -0.32249555333061 * H1x1_2 + 
3.41388795688866 * H1x1_3 + 3.30305437699117 * H1x1_4 + -1.49237136034665 * H1x1_5 + 
-1.64329313023006 * H1x1_6 + 3.08746595768905 * H1x1_7 ;
2404861   +   H2x1_1  = H2x1_1  +    -2.56424783943845 * H1x2_1
2404862   +          +    -1.00213973107436 * H1x2_2  +    -0.47445930434013 * H1x2_3
2404863   +          +    -1.62372689856618 * H1x2_4  +     -1.1856250348479 * H1x2_5
2404864   +          +     0.04266758405533 * H1x2_6  +    -0.60071538153471 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -2.56424783943845 * H1x2_1 + -1.00213973107436 * 
H1x2_2 + -0.47445930434013 * H1x2_3 + -1.62372689856618 * H1x2_4 + -1.1856250348479 * H1x2_5 + 
0.04266758405533 * H1x2_6 + -0.60071538153471 * H1x2_7 ;
2404865   +   H2x1_2  = H2x1_2  +     0.00935939453146 * H1x2_1
2404866   +          +     0.55542862749222 * H1x2_2  +     -0.6066128025675 * H1x2_3
2404867   +          +    -0.53196514301497 * H1x2_4  +    -1.40549473181231 * H1x2_5
2404868   +          +    -0.08595621526876 * H1x2_6  +    -1.03953618328756 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.00935939453146 * H1x2_1 + 0.55542862749222 * H1x2_2 
+ -0.6066128025675 * H1x2_3 + -0.53196514301497 * H1x2_4 + -1.40549473181231 * H1x2_5 + 
-0.08595621526876 * H1x2_6 + -1.03953618328756 * H1x2_7 ;
2404869   +   H2x1_3  = H2x1_3  +    -1.41069312035355 * H1x2_1
2404870   +          +     0.56124490780446 * H1x2_2  +    -0.00472279335297 * H1x2_3
2404871   +          +    -1.10441771442377 * H1x2_4  +    -0.27090019786185 * H1x2_5
2404872   +          +    -0.15206855618217 * H1x2_6  +     -1.6035395520507 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -1.41069312035355 * H1x2_1 + 0.56124490780446 * H1x2_2 
+ -0.00472279335297 * H1x2_3 + -1.10441771442377 * H1x2_4 + -0.27090019786185 * H1x2_5 + 
-0.15206855618217 * H1x2_6 + -1.6035395520507 * H1x2_7 ;
2404873   +   H2x1_4  = H2x1_4  +    -0.55045399339183 * H1x2_1
2404874   +          +     0.02477552373088 * H1x2_2  +     0.19400769235958 * H1x2_3
2404875   +          +    -0.38264537483702 * H1x2_4  +     0.63479720884458 * H1x2_5
2404876   +          +    -0.60194629301645 * H1x2_6  +    -0.83490097285651 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + -0.55045399339183 * H1x2_1 + 0.02477552373088 * H1x2_2 
+ 0.19400769235958 * H1x2_3 + -0.38264537483702 * H1x2_4 + 0.63479720884458 * H1x2_5 + 
-0.60194629301645 * H1x2_6 + -0.83490097285651 * H1x2_7 ;
2404877   +   H2x1_5  = H2x1_5  +    -1.03176133074695 * H1x2_1
2404878   +          +    -0.59926889064506 * H1x2_2  +    -1.07077012847053 * H1x2_3
2404879   +          +    -1.18998920291096 * H1x2_4  +     0.39150574258439 * H1x2_5
2404880   +          +     0.05580574741832 * H1x2_6  +    -0.32272109045259 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + -1.03176133074695 * H1x2_1 + -0.59926889064506 * 
H1x2_2 + -1.07077012847053 * H1x2_3 + -1.18998920291096 * H1x2_4 + 0.39150574258439 * H1x2_5 + 
0.05580574741832 * H1x2_6 + -0.32272109045259 * H1x2_7 ;
2404881   +   H2x1_6  = H2x1_6  +    -0.61952040538587 * H1x2_1
2404882   +          +     0.35510185028829 * H1x2_2  +    -0.23901935720129 * H1x2_3
2404883   +          +     0.31752417497209 * H1x2_4  +    -1.20101515562967 * H1x2_5
2404884   +          +     0.95004398218762 * H1x2_6  +    -0.60363955740244 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + -0.61952040538587 * H1x2_1 + 0.35510185028829 * H1x2_2 
+ -0.23901935720129 * H1x2_3 + 0.31752417497209 * H1x2_4 + -1.20101515562967 * H1x2_5 + 
0.95004398218762 * H1x2_6 + -0.60363955740244 * H1x2_7 ;
2404885   +   H2x1_1  = H2x1_1  +     0.74378922258523 * H1x3_1
2404886   +          +      0.4693103426831 * H1x3_2  +     0.82071786194731 * H1x3_3
2404887   +          +     0.46432194238141 * H1x3_4  +    -1.39760250161206 * H1x3_5
2404888   +          +     0.68725250578779 * H1x3_6  +    -0.98986331205144 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 0.74378922258523 * H1x3_1 + 0.4693103426831 * H1x3_2 + 
0.82071786194731 * H1x3_3 + 0.46432194238141 * H1x3_4 + -1.39760250161206 * H1x3_5 + 
0.68725250578779 * H1x3_6 + -0.98986331205144 * H1x3_7 ;
2404889   +   H2x1_2  = H2x1_2  +     0.48406734142754 * H1x3_1
2404890   +          +     1.24032575331626 * H1x3_2  +     0.10072816620895 * H1x3_3
2404891   +          +     -2.4915795108808 * H1x3_4  +    -1.20085587739472 * H1x3_5
2404892   +          +     2.57480977795816 * H1x3_6  +    -0.36127801521801 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.48406734142754 * H1x3_1 + 1.24032575331626 * H1x3_2 
+ 0.10072816620895 * H1x3_3 + -2.4915795108808 * H1x3_4 + -1.20085587739472 * H1x3_5 + 
2.57480977795816 * H1x3_6 + -0.36127801521801 * H1x3_7 ;
2404893   +   H2x1_3  = H2x1_3  +    -0.29392518978638 * H1x3_1
2404894   +          +     0.02884163093827 * H1x3_2  +     -0.7595494999576 * H1x3_3
2404895   +          +     0.32536537321799 * H1x3_4  +    -0.01283695014976 * H1x3_5
2404896   +          +     0.76895275927405 * H1x3_6  +     -0.2802859993784 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -0.29392518978638 * H1x3_1 + 0.02884163093827 * H1x3_2 
+ -0.7595494999576 * H1x3_3 + 0.32536537321799 * H1x3_4 + -0.01283695014976 * H1x3_5 + 
0.76895275927405 * H1x3_6 + -0.2802859993784 * H1x3_7 ;
2404897   +   H2x1_4  = H2x1_4  +     2.19833784150068 * H1x3_1
2404898   +          +     0.25528651098746 * H1x3_2  +    -0.72296156297186 * H1x3_3
2404899   +          +    -0.14360138590872 * H1x3_4  +     0.77657569331577 * H1x3_5
2404900   +          +    -1.57969278343415 * H1x3_6  +    -0.92288304588247 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 2.19833784150068 * H1x3_1 + 0.25528651098746 * H1x3_2 
+ -0.72296156297186 * H1x3_3 + -0.14360138590872 * H1x3_4 + 0.77657569331577 * H1x3_5 + 
-1.57969278343415 * H1x3_6 + -0.92288304588247 * H1x3_7 ;
2404901   +   H2x1_5  = H2x1_5  +     2.11753865409831 * H1x3_1
2404902   +          +     0.83654766112935 * H1x3_2  +     0.97472534941535 * H1x3_3
2404903   +          +     1.35030042962655 * H1x3_4  +     1.24680664824079 * H1x3_5
2404904   +          +     0.19234112612264 * H1x3_6  +    -0.90680244689294 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 2.11753865409831 * H1x3_1 + 0.83654766112935 * H1x3_2 
+ 0.97472534941535 * H1x3_3 + 1.35030042962655 * H1x3_4 + 1.24680664824079 * H1x3_5 + 
0.19234112612264 * H1x3_6 + -0.90680244689294 * H1x3_7 ;
2404905   +   H2x1_6  = H2x1_6  +     2.07923724911848 * H1x3_1
2404906   +          +     1.62526758922217 * H1x3_2  +    -0.68837627923045 * H1x3_3
2404907   +          +    -0.21127837456631 * H1x3_4  +    -1.47138526111866 * H1x3_5
2404908   +          +    -0.52275521204408 * H1x3_6  +    -0.36639952580044 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + 2.07923724911848 * H1x3_1 + 1.62526758922217 * H1x3_2 
+ -0.68837627923045 * H1x3_3 + -0.21127837456631 * H1x3_4 + -1.47138526111866 * H1x3_5 + 
-0.52275521204408 * H1x3_6 + -0.36639952580044 * H1x3_7 ;
2404909   +   H2x1_1  =    -1.05059672372056 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -1.05059672372056 + H2x1_1 ;
2404910   +   H2x1_2  =    -1.18404209429335 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -1.18404209429335 + H2x1_2 ;
2404911   +   H2x1_3  =    -0.76285494175137 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -0.76285494175137 + H2x1_3 ;
2404912   +   H2x1_4  =     2.22362261707253 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 2.22362261707253 + H2x1_4 ;
2404913   +   H2x1_5  =    -0.98793149966854 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -0.98793149966854 + H2x1_5 ;
2404914   +   H2x1_6  =     1.51370254076672 + H2x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.51370254076672 + H2x1_6 ;
2404915   +   H2x1_7  = 0;
MPRINT(EM_DIAGRAM):   H2x1_7 = 0;
2404916   +   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 , H2x1_6 , H2x1_7
2404917   +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 , H2x1_6 , 
H2x1_7 );
2404918   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2404919   +   H2x1_1  = EXP(H2x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_1 = EXP(H2x1_1 - _MAX_);
2404920   +   _SUM_ = _SUM_ + H2x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_1 ;
2404921   +   H2x1_2  = EXP(H2x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_2 = EXP(H2x1_2 - _MAX_);
2404922   +   _SUM_ = _SUM_ + H2x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_2 ;
2404923   +   H2x1_3  = EXP(H2x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_3 = EXP(H2x1_3 - _MAX_);
2404924   +   _SUM_ = _SUM_ + H2x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_3 ;
2404925   +   H2x1_4  = EXP(H2x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_4 = EXP(H2x1_4 - _MAX_);
2404926   +   _SUM_ = _SUM_ + H2x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_4 ;
2404927   +   H2x1_5  = EXP(H2x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_5 = EXP(H2x1_5 - _MAX_);
2404928   +   _SUM_ = _SUM_ + H2x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_5 ;
2404929   +   H2x1_6  = EXP(H2x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_6 = EXP(H2x1_6 - _MAX_);
2404930   +   _SUM_ = _SUM_ + H2x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_6 ;
2404931   +   H2x1_7  = EXP(H2x1_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_7 = EXP(H2x1_7 - _MAX_);
2404932   +   _SUM_ = _SUM_ + H2x1_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_7 ;
2404933   +   H2x1_1  = H2x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 / _SUM_;
2404934   +   H2x1_2  = H2x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 / _SUM_;
2404935   +   H2x1_3  = H2x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 / _SUM_;
2404936   +   H2x1_4  = H2x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 / _SUM_;
2404937   +   H2x1_5  = H2x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 / _SUM_;
2404938   +   H2x1_6  = H2x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 / _SUM_;
2404939   +   H2x1_7  = H2x1_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_7 = H2x1_7 / _SUM_;
2404940   +END;
MPRINT(EM_DIAGRAM):   END;
2404941   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2404942   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
2404943   +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
2404944   +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
2404945   +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
2404946   +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
2404947   +   H2x1_6  = .;
MPRINT(EM_DIAGRAM):   H2x1_6 = .;
2404948   +   H2x1_7  = .;
MPRINT(EM_DIAGRAM):   H2x1_7 = .;
2404949   +END;
MPRINT(EM_DIAGRAM):   END;
2404950   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2404951   +*** Writing the Node H2x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x2_ ;
2404952   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2404953   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2404954   +   H2x2_1  =    -0.47079896252387 * H1x1_1  +      0.6132734714958 * H1x1_2
2404955   +          +     1.50300753820512 * H1x1_3  +     -0.1812621169129 * H1x1_4
2404956   +          +    -0.18531614991208 * H1x1_5  +     -0.2905105845089 * H1x1_6
2404957   +          +     1.33158539183491 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = -0.47079896252387 * H1x1_1 + 0.6132734714958 * H1x1_2 + 
1.50300753820512 * H1x1_3 + -0.1812621169129 * H1x1_4 + -0.18531614991208 * H1x1_5 + 
-0.2905105845089 * H1x1_6 + 1.33158539183491 * H1x1_7 ;
2404958   +   H2x2_2  =    -1.90834701790953 * H1x1_1  +      0.6177658514697 * H1x1_2
2404959   +          +     0.36465199316418 * H1x1_3  +     0.85911870587838 * H1x1_4
2404960   +          +     0.02147610114602 * H1x1_5  +     0.32326590534391 * H1x1_6
2404961   +          +    -1.04241581652278 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = -1.90834701790953 * H1x1_1 + 0.6177658514697 * H1x1_2 + 
0.36465199316418 * H1x1_3 + 0.85911870587838 * H1x1_4 + 0.02147610114602 * H1x1_5 + 
0.32326590534391 * H1x1_6 + -1.04241581652278 * H1x1_7 ;
2404962   +   H2x2_3  =       0.471130277999 * H1x1_1  +     0.96694465336161 * H1x1_2
2404963   +          +       0.141582035067 * H1x1_3  +     0.53325844993783 * H1x1_4
2404964   +          +     -0.0659115060565 * H1x1_5  +     0.38141753021852 * H1x1_6
2404965   +          +    -1.14139437080586 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = 0.471130277999 * H1x1_1 + 0.96694465336161 * H1x1_2 + 
0.141582035067 * H1x1_3 + 0.53325844993783 * H1x1_4 + -0.0659115060565 * H1x1_5 + 
0.38141753021852 * H1x1_6 + -1.14139437080586 * H1x1_7 ;
2404966   +   H2x2_4  =     0.97070926632973 * H1x1_1  +    -0.13619191199121 * H1x1_2
2404967   +          +       0.111155554391 * H1x1_3  +    -0.50119055939436 * H1x1_4
2404968   +          +     -0.4478264228864 * H1x1_5  +    -0.07373167561096 * H1x1_6
2404969   +          +    -0.48838853015257 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = 0.97070926632973 * H1x1_1 + -0.13619191199121 * H1x1_2 + 
0.111155554391 * H1x1_3 + -0.50119055939436 * H1x1_4 + -0.4478264228864 * H1x1_5 + 
-0.07373167561096 * H1x1_6 + -0.48838853015257 * H1x1_7 ;
2404970   +   H2x2_5  =    -0.97151785477215 * H1x1_1  +     0.21189203541458 * H1x1_2
2404971   +          +    -0.19596886882434 * H1x1_3  +      1.3474130560719 * H1x1_4
2404972   +          +     1.73119417991798 * H1x1_5  +    -0.03726270753922 * H1x1_6
2404973   +          +    -1.41850405567364 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = -0.97151785477215 * H1x1_1 + 0.21189203541458 * H1x1_2 + 
-0.19596886882434 * H1x1_3 + 1.3474130560719 * H1x1_4 + 1.73119417991798 * H1x1_5 + 
-0.03726270753922 * H1x1_6 + -1.41850405567364 * H1x1_7 ;
2404974   +   H2x2_6  =     0.64188298957992 * H1x1_1  +     0.87835723870887 * H1x1_2
2404975   +          +     0.65705195530326 * H1x1_3  +    -1.37039626769544 * H1x1_4
2404976   +          +    -0.32238737127781 * H1x1_5  +     0.33986547881641 * H1x1_6
2404977   +          +    -0.39788950643812 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = 0.64188298957992 * H1x1_1 + 0.87835723870887 * H1x1_2 + 
0.65705195530326 * H1x1_3 + -1.37039626769544 * H1x1_4 + -0.32238737127781 * H1x1_5 + 
0.33986547881641 * H1x1_6 + -0.39788950643812 * H1x1_7 ;
2404978   +   H2x2_1  = H2x2_1  +    -0.69934298550944 * H1x2_1
2404979   +          +    -0.34972890643898 * H1x2_2  +     0.13067071374168 * H1x2_3
2404980   +          +    -0.35163870866778 * H1x2_4  +     0.68739106758866 * H1x2_5
2404981   +          +    -0.13482628170329 * H1x2_6  +    -0.03659282127619 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -0.69934298550944 * H1x2_1 + -0.34972890643898 * 
H1x2_2 + 0.13067071374168 * H1x2_3 + -0.35163870866778 * H1x2_4 + 0.68739106758866 * H1x2_5 + 
-0.13482628170329 * H1x2_6 + -0.03659282127619 * H1x2_7 ;
2404982   +   H2x2_2  = H2x2_2  +    -0.16537065948373 * H1x2_1
2404983   +          +     1.88602375412723 * H1x2_2  +     0.00246313998608 * H1x2_3
2404984   +          +    -0.38678545162214 * H1x2_4  +     1.62314892910576 * H1x2_5
2404985   +          +     1.14369813266427 * H1x2_6  +    -0.04547589616076 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + -0.16537065948373 * H1x2_1 + 1.88602375412723 * H1x2_2 
+ 0.00246313998608 * H1x2_3 + -0.38678545162214 * H1x2_4 + 1.62314892910576 * H1x2_5 + 
1.14369813266427 * H1x2_6 + -0.04547589616076 * H1x2_7 ;
2404986   +   H2x2_3  = H2x2_3  +     0.25040248389011 * H1x2_1
2404987   +          +    -1.56534319969402 * H1x2_2  +     0.07686150326519 * H1x2_3
2404988   +          +     -0.9279505919723 * H1x2_4  +    -0.40426942169792 * H1x2_5
2404989   +          +      0.0625082015929 * H1x2_6  +    -1.06140294711643 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + 0.25040248389011 * H1x2_1 + -1.56534319969402 * H1x2_2 
+ 0.07686150326519 * H1x2_3 + -0.9279505919723 * H1x2_4 + -0.40426942169792 * H1x2_5 + 
0.0625082015929 * H1x2_6 + -1.06140294711643 * H1x2_7 ;
2404990   +   H2x2_4  = H2x2_4  +     -0.4384763018657 * H1x2_1
2404991   +          +    -1.45966734038116 * H1x2_2  +      -2.034771072409 * H1x2_3
2404992   +          +    -0.09055740067076 * H1x2_4  +     1.51504299287048 * H1x2_5
2404993   +          +     0.15439799867788 * H1x2_6  +    -1.11828371545771 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + -0.4384763018657 * H1x2_1 + -1.45966734038116 * H1x2_2 
+ -2.034771072409 * H1x2_3 + -0.09055740067076 * H1x2_4 + 1.51504299287048 * H1x2_5 + 
0.15439799867788 * H1x2_6 + -1.11828371545771 * H1x2_7 ;
2404994   +   H2x2_5  = H2x2_5  +     1.25750321874643 * H1x2_1
2404995   +          +    -0.65639925770112 * H1x2_2  +     -1.7659580690496 * H1x2_3
2404996   +          +       0.375442412611 * H1x2_4  +     0.00802128415855 * H1x2_5
2404997   +          +     0.75342656671485 * H1x2_6  +     1.64939805941174 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 + 1.25750321874643 * H1x2_1 + -0.65639925770112 * H1x2_2 
+ -1.7659580690496 * H1x2_3 + 0.375442412611 * H1x2_4 + 0.00802128415855 * H1x2_5 + 
0.75342656671485 * H1x2_6 + 1.64939805941174 * H1x2_7 ;
2404998   +   H2x2_6  = H2x2_6  +     1.32293752617916 * H1x2_1
2404999   +          +     0.48969975153948 * H1x2_2  +    -0.72928783660254 * H1x2_3
2405000   +          +     0.84727905047749 * H1x2_4  +     0.04670520107938 * H1x2_5
2405001   +          +     2.02862934142232 * H1x2_6  +    -0.56510756043393 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = H2x2_6 + 1.32293752617916 * H1x2_1 + 0.48969975153948 * H1x2_2 
+ -0.72928783660254 * H1x2_3 + 0.84727905047749 * H1x2_4 + 0.04670520107938 * H1x2_5 + 
2.02862934142232 * H1x2_6 + -0.56510756043393 * H1x2_7 ;
2405002   +   H2x2_1  = H2x2_1  +       1.744725276854 * H1x3_1
2405003   +          +     0.13060858789431 * H1x3_2  +    -0.96737787454303 * H1x3_3
2405004   +          +    -0.33966254732699 * H1x3_4  +     2.39360262119688 * H1x3_5
2405005   +          +     2.58016170780679 * H1x3_6  +    -0.61611732156494 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + 1.744725276854 * H1x3_1 + 0.13060858789431 * H1x3_2 + 
-0.96737787454303 * H1x3_3 + -0.33966254732699 * H1x3_4 + 2.39360262119688 * H1x3_5 + 
2.58016170780679 * H1x3_6 + -0.61611732156494 * H1x3_7 ;
2405006   +   H2x2_2  = H2x2_2  +    -0.81180308935434 * H1x3_1
2405007   +          +    -1.15566778124471 * H1x3_2  +     0.08550916456261 * H1x3_3
2405008   +          +     0.54919117407314 * H1x3_4  +     0.18927188150893 * H1x3_5
2405009   +          +    -0.15464567766004 * H1x3_6  +     0.22152383228096 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + -0.81180308935434 * H1x3_1 + -1.15566778124471 * 
H1x3_2 + 0.08550916456261 * H1x3_3 + 0.54919117407314 * H1x3_4 + 0.18927188150893 * H1x3_5 + 
-0.15464567766004 * H1x3_6 + 0.22152383228096 * H1x3_7 ;
2405010   +   H2x2_3  = H2x2_3  +    -0.57155391194888 * H1x3_1
2405011   +          +    -0.80109748621438 * H1x3_2  +     -1.0755749661031 * H1x3_3
2405012   +          +     1.03082070302539 * H1x3_4  +    -2.00320570042417 * H1x3_5
2405013   +          +    -1.96298435256616 * H1x3_6  +     1.02097262601001 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + -0.57155391194888 * H1x3_1 + -0.80109748621438 * 
H1x3_2 + -1.0755749661031 * H1x3_3 + 1.03082070302539 * H1x3_4 + -2.00320570042417 * H1x3_5 + 
-1.96298435256616 * H1x3_6 + 1.02097262601001 * H1x3_7 ;
2405014   +   H2x2_4  = H2x2_4  +     0.24801772968599 * H1x3_1
2405015   +          +    -2.13175914157416 * H1x3_2  +    -0.52172370749235 * H1x3_3
2405016   +          +     2.04158456409986 * H1x3_4  +     1.02332318578438 * H1x3_5
2405017   +          +      -0.428263055638 * H1x3_6  +    -0.10602300040145 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + 0.24801772968599 * H1x3_1 + -2.13175914157416 * H1x3_2 
+ -0.52172370749235 * H1x3_3 + 2.04158456409986 * H1x3_4 + 1.02332318578438 * H1x3_5 + 
-0.428263055638 * H1x3_6 + -0.10602300040145 * H1x3_7 ;
2405018   +   H2x2_5  = H2x2_5  +    -1.00177979562809 * H1x3_1
2405019   +          +    -0.45285333413007 * H1x3_2  +    -0.35882884863392 * H1x3_3
2405020   +          +     0.23001711273663 * H1x3_4  +     0.77235765656369 * H1x3_5
2405021   +          +    -0.04383242140243 * H1x3_6  +    -0.25926963615252 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 + -1.00177979562809 * H1x3_1 + -0.45285333413007 * 
H1x3_2 + -0.35882884863392 * H1x3_3 + 0.23001711273663 * H1x3_4 + 0.77235765656369 * H1x3_5 + 
-0.04383242140243 * H1x3_6 + -0.25926963615252 * H1x3_7 ;
2405022   +   H2x2_6  = H2x2_6  +     0.84797826043534 * H1x3_1
2405023   +          +    -0.46927154831713 * H1x3_2  +    -1.09865845985096 * H1x3_3
2405024   +          +     0.59699123454307 * H1x3_4  +     1.59564014754161 * H1x3_5
2405025   +          +     1.33413776227036 * H1x3_6  +     0.33047800872361 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = H2x2_6 + 0.84797826043534 * H1x3_1 + -0.46927154831713 * H1x3_2 
+ -1.09865845985096 * H1x3_3 + 0.59699123454307 * H1x3_4 + 1.59564014754161 * H1x3_5 + 
1.33413776227036 * H1x3_6 + 0.33047800872361 * H1x3_7 ;
2405026   +   H2x2_1  =    -3.05344936388855 + H2x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = -3.05344936388855 + H2x2_1 ;
2405027   +   H2x2_2  =     0.31382645894355 + H2x2_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = 0.31382645894355 + H2x2_2 ;
2405028   +   H2x2_3  =     0.31718668306888 + H2x2_3 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = 0.31718668306888 + H2x2_3 ;
2405029   +   H2x2_4  =    -0.72340666209054 + H2x2_4 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = -0.72340666209054 + H2x2_4 ;
2405030   +   H2x2_5  =    -0.59585228872544 + H2x2_5 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = -0.59585228872544 + H2x2_5 ;
2405031   +   H2x2_6  =    -1.34027540207713 + H2x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = -1.34027540207713 + H2x2_6 ;
2405032   +   H2x2_7  = 0;
MPRINT(EM_DIAGRAM):   H2x2_7 = 0;
2405033   +   _MAX_ = MAX (H2x2_1 , H2x2_2 , H2x2_3 , H2x2_4 , H2x2_5 , H2x2_6 , H2x2_7
2405034   +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x2_1 , H2x2_2 , H2x2_3 , H2x2_4 , H2x2_5 , H2x2_6 , 
H2x2_7 );
2405035   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2405036   +   H2x2_1  = EXP(H2x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_1 = EXP(H2x2_1 - _MAX_);
2405037   +   _SUM_ = _SUM_ + H2x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_1 ;
2405038   +   H2x2_2  = EXP(H2x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_2 = EXP(H2x2_2 - _MAX_);
2405039   +   _SUM_ = _SUM_ + H2x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_2 ;
2405040   +   H2x2_3  = EXP(H2x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_3 = EXP(H2x2_3 - _MAX_);
2405041   +   _SUM_ = _SUM_ + H2x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_3 ;
2405042   +   H2x2_4  = EXP(H2x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_4 = EXP(H2x2_4 - _MAX_);
2405043   +   _SUM_ = _SUM_ + H2x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_4 ;
2405044   +   H2x2_5  = EXP(H2x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_5 = EXP(H2x2_5 - _MAX_);
2405045   +   _SUM_ = _SUM_ + H2x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_5 ;
2405046   +   H2x2_6  = EXP(H2x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_6 = EXP(H2x2_6 - _MAX_);
2405047   +   _SUM_ = _SUM_ + H2x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_6 ;
2405048   +   H2x2_7  = EXP(H2x2_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_7 = EXP(H2x2_7 - _MAX_);
2405049   +   _SUM_ = _SUM_ + H2x2_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_7 ;
2405050   +   H2x2_1  = H2x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 / _SUM_;
2405051   +   H2x2_2  = H2x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 / _SUM_;
2405052   +   H2x2_3  = H2x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 / _SUM_;
2405053   +   H2x2_4  = H2x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 / _SUM_;
2405054   +   H2x2_5  = H2x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 / _SUM_;
2405055   +   H2x2_6  = H2x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_6 = H2x2_6 / _SUM_;
2405056   +   H2x2_7  = H2x2_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_7 = H2x2_7 / _SUM_;
2405057   +END;
MPRINT(EM_DIAGRAM):   END;
2405058   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2405059   +   H2x2_1  = .;
MPRINT(EM_DIAGRAM):   H2x2_1 = .;
2405060   +   H2x2_2  = .;
MPRINT(EM_DIAGRAM):   H2x2_2 = .;
2405061   +   H2x2_3  = .;
MPRINT(EM_DIAGRAM):   H2x2_3 = .;
2405062   +   H2x2_4  = .;
MPRINT(EM_DIAGRAM):   H2x2_4 = .;
2405063   +   H2x2_5  = .;
MPRINT(EM_DIAGRAM):   H2x2_5 = .;
2405064   +   H2x2_6  = .;
MPRINT(EM_DIAGRAM):   H2x2_6 = .;
2405065   +   H2x2_7  = .;
MPRINT(EM_DIAGRAM):   H2x2_7 = .;
2405066   +END;
MPRINT(EM_DIAGRAM):   END;
2405067   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2405068   +*** Writing the Node H3x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x1_ ;
2405069   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2405070   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2405071   +   H3x1_1  =    -0.39436867680464 * H2x1_1  +    -0.20604911710368 * H2x1_2
2405072   +          +     0.29458107927185 * H2x1_3  +     0.66102662477481 * H2x1_4
2405073   +          +     0.62143406345506 * H2x1_5  +     2.63969484891539 * H2x1_6
2405074   +          +     2.03785323055294 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = -0.39436867680464 * H2x1_1 + -0.20604911710368 * H2x1_2 + 
0.29458107927185 * H2x1_3 + 0.66102662477481 * H2x1_4 + 0.62143406345506 * H2x1_5 + 
2.63969484891539 * H2x1_6 + 2.03785323055294 * H2x1_7 ;
2405075   +   H3x1_2  =     0.14668618790671 * H2x1_1  +     0.53251535375334 * H2x1_2
2405076   +          +     1.73802487245889 * H2x1_3  +    -0.48818058655944 * H2x1_4
2405077   +          +     -0.6987810213409 * H2x1_5  +     1.61216865707221 * H2x1_6
2405078   +          +     0.02086486846601 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = 0.14668618790671 * H2x1_1 + 0.53251535375334 * H2x1_2 + 
1.73802487245889 * H2x1_3 + -0.48818058655944 * H2x1_4 + -0.6987810213409 * H2x1_5 + 
1.61216865707221 * H2x1_6 + 0.02086486846601 * H2x1_7 ;
2405079   +   H3x1_3  =    -1.14054963328594 * H2x1_1  +    -0.75433574423253 * H2x1_2
2405080   +          +     0.06268113862558 * H2x1_3  +     -0.3981826777811 * H2x1_4
2405081   +          +    -0.04081627474016 * H2x1_5  +    -0.18547979458266 * H2x1_6
2405082   +          +     0.40248247309716 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = -1.14054963328594 * H2x1_1 + -0.75433574423253 * H2x1_2 + 
0.06268113862558 * H2x1_3 + -0.3981826777811 * H2x1_4 + -0.04081627474016 * H2x1_5 + 
-0.18547979458266 * H2x1_6 + 0.40248247309716 * H2x1_7 ;
2405083   +   H3x1_4  =    -0.41046431364634 * H2x1_1  +     0.53558649664528 * H2x1_2
2405084   +          +     0.25426413492282 * H2x1_3  +     2.32537388539524 * H2x1_4
2405085   +          +    -0.95624400041487 * H2x1_5  +     -2.1423043357326 * H2x1_6
2405086   +          +     0.70189203885946 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = -0.41046431364634 * H2x1_1 + 0.53558649664528 * H2x1_2 + 
0.25426413492282 * H2x1_3 + 2.32537388539524 * H2x1_4 + -0.95624400041487 * H2x1_5 + 
-2.1423043357326 * H2x1_6 + 0.70189203885946 * H2x1_7 ;
2405087   +   H3x1_5  =    -0.21139932639331 * H2x1_1  +      0.8853172209881 * H2x1_2
2405088   +          +    -0.23025284278478 * H2x1_3  +     1.30433450594503 * H2x1_4
2405089   +          +     1.26145590014333 * H2x1_5  +     0.63126627865104 * H2x1_6
2405090   +          +    -1.88455429451452 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = -0.21139932639331 * H2x1_1 + 0.8853172209881 * H2x1_2 + 
-0.23025284278478 * H2x1_3 + 1.30433450594503 * H2x1_4 + 1.26145590014333 * H2x1_5 + 
0.63126627865104 * H2x1_6 + -1.88455429451452 * H2x1_7 ;
2405091   +   H3x1_6  =     0.99645242104414 * H2x1_1  +    -0.17835964967148 * H2x1_2
2405092   +          +     0.06539648561603 * H2x1_3  +     0.97412284078325 * H2x1_4
2405093   +          +     -1.3247680635275 * H2x1_5  +      0.8723025918678 * H2x1_6
2405094   +          +    -0.04328836172134 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_6 = 0.99645242104414 * H2x1_1 + -0.17835964967148 * H2x1_2 + 
0.06539648561603 * H2x1_3 + 0.97412284078325 * H2x1_4 + -1.3247680635275 * H2x1_5 + 
0.8723025918678 * H2x1_6 + -0.04328836172134 * H2x1_7 ;
2405095   +   H3x1_7  =     2.66887548952929 * H2x1_1  +    -0.86289888310949 * H2x1_2
2405096   +          +     1.58137421487648 * H2x1_3  +    -1.37105839507635 * H2x1_4
2405097   +          +    -0.65069986041129 * H2x1_5  +     2.50322156288062 * H2x1_6
2405098   +          +     0.75157328436087 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_7 = 2.66887548952929 * H2x1_1 + -0.86289888310949 * H2x1_2 + 
1.58137421487648 * H2x1_3 + -1.37105839507635 * H2x1_4 + -0.65069986041129 * H2x1_5 + 
2.50322156288062 * H2x1_6 + 0.75157328436087 * H2x1_7 ;
2405099   +   H3x1_1  = H3x1_1  +     1.55317132694755 * H2x2_1
2405100   +          +     1.75656976582641 * H2x2_2  +    -1.25361089552085 * H2x2_3
2405101   +          +    -0.52984461837677 * H2x2_4  +     1.29915117873447 * H2x2_5
2405102   +          +    -1.03942372926622 * H2x2_6  +     0.13722887717178 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + 1.55317132694755 * H2x2_1 + 1.75656976582641 * H2x2_2 
+ -1.25361089552085 * H2x2_3 + -0.52984461837677 * H2x2_4 + 1.29915117873447 * H2x2_5 + 
-1.03942372926622 * H2x2_6 + 0.13722887717178 * H2x2_7 ;
2405103   +   H3x1_2  = H3x1_2  +     0.88902418392614 * H2x2_1
2405104   +          +     1.35198205638356 * H2x2_2  +     1.49845421410078 * H2x2_3
2405105   +          +    -1.22318137674998 * H2x2_4  +     1.03485654068494 * H2x2_5
2405106   +          +    -0.88760495649169 * H2x2_6  +    -1.94135868960024 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = H3x1_2 + 0.88902418392614 * H2x2_1 + 1.35198205638356 * H2x2_2 
+ 1.49845421410078 * H2x2_3 + -1.22318137674998 * H2x2_4 + 1.03485654068494 * H2x2_5 + 
-0.88760495649169 * H2x2_6 + -1.94135868960024 * H2x2_7 ;
2405107   +   H3x1_3  = H3x1_3  +     -0.5232166311723 * H2x2_1
2405108   +          +    -0.49154441995792 * H2x2_2  +     1.21222773866672 * H2x2_3
2405109   +          +     0.88954765096374 * H2x2_4  +     0.32666743913318 * H2x2_5
2405110   +          +     1.26201705110892 * H2x2_6  +    -2.46564869578322 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = H3x1_3 + -0.5232166311723 * H2x2_1 + -0.49154441995792 * H2x2_2 
+ 1.21222773866672 * H2x2_3 + 0.88954765096374 * H2x2_4 + 0.32666743913318 * H2x2_5 + 
1.26201705110892 * H2x2_6 + -2.46564869578322 * H2x2_7 ;
2405111   +   H3x1_4  = H3x1_4  +     0.93897688204524 * H2x2_1
2405112   +          +    -0.56396325682963 * H2x2_2  +     0.60312223662348 * H2x2_3
2405113   +          +     0.05506195666559 * H2x2_4  +    -1.19478701476792 * H2x2_5
2405114   +          +     1.11111060864544 * H2x2_6  +     0.07602420470068 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = H3x1_4 + 0.93897688204524 * H2x2_1 + -0.56396325682963 * H2x2_2 
+ 0.60312223662348 * H2x2_3 + 0.05506195666559 * H2x2_4 + -1.19478701476792 * H2x2_5 + 
1.11111060864544 * H2x2_6 + 0.07602420470068 * H2x2_7 ;
2405115   +   H3x1_5  = H3x1_5  +    -2.04067007195299 * H2x2_1
2405116   +          +    -0.24511447740547 * H2x2_2  +      1.1403782608351 * H2x2_3
2405117   +          +     0.28313253531571 * H2x2_4  +    -0.31001305293935 * H2x2_5
2405118   +          +     1.43972694265244 * H2x2_6  +     0.27081966717726 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = H3x1_5 + -2.04067007195299 * H2x2_1 + -0.24511447740547 * 
H2x2_2 + 1.1403782608351 * H2x2_3 + 0.28313253531571 * H2x2_4 + -0.31001305293935 * H2x2_5 + 
1.43972694265244 * H2x2_6 + 0.27081966717726 * H2x2_7 ;
2405119   +   H3x1_6  = H3x1_6  +     1.53918759970091 * H2x2_1
2405120   +          +    -1.36834652818881 * H2x2_2  +    -0.97354088259421 * H2x2_3
2405121   +          +     0.73052173697294 * H2x2_4  +     1.34716412811946 * H2x2_5
2405122   +          +     1.66261041249676 * H2x2_6  +    -0.99719318696356 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_6 = H3x1_6 + 1.53918759970091 * H2x2_1 + -1.36834652818881 * H2x2_2 
+ -0.97354088259421 * H2x2_3 + 0.73052173697294 * H2x2_4 + 1.34716412811946 * H2x2_5 + 
1.66261041249676 * H2x2_6 + -0.99719318696356 * H2x2_7 ;
2405123   +   H3x1_7  = H3x1_7  +     1.11994694673604 * H2x2_1
2405124   +          +     -1.6803356528873 * H2x2_2  +    -0.12962793678977 * H2x2_3
2405125   +          +    -0.71896094589725 * H2x2_4  +     0.46037684620833 * H2x2_5
2405126   +          +     0.25911483872618 * H2x2_6  +     1.00876479730932 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_7 = H3x1_7 + 1.11994694673604 * H2x2_1 + -1.6803356528873 * H2x2_2 
+ -0.12962793678977 * H2x2_3 + -0.71896094589725 * H2x2_4 + 0.46037684620833 * H2x2_5 + 
0.25911483872618 * H2x2_6 + 1.00876479730932 * H2x2_7 ;
2405127   +   H3x1_1  =     1.52228889950912 + H3x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 1.52228889950912 + H3x1_1 ;
2405128   +   H3x1_2  =    -0.46625781761332 + H3x1_2 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = -0.46625781761332 + H3x1_2 ;
2405129   +   H3x1_3  =     0.11008388635615 + H3x1_3 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = 0.11008388635615 + H3x1_3 ;
2405130   +   H3x1_4  =    -0.38333236869719 + H3x1_4 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = -0.38333236869719 + H3x1_4 ;
2405131   +   H3x1_5  =    -1.36620648378402 + H3x1_5 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = -1.36620648378402 + H3x1_5 ;
2405132   +   H3x1_6  =     0.41780608126276 + H3x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_6 = 0.41780608126276 + H3x1_6 ;
2405133   +   H3x1_7  =    -0.69490040783623 + H3x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_7 = -0.69490040783623 + H3x1_7 ;
2405134   +   H3x1_1  = SIN(H3x1_1 );
MPRINT(EM_DIAGRAM):   H3x1_1 = SIN(H3x1_1 );
2405135   +   H3x1_2  = SIN(H3x1_2 );
MPRINT(EM_DIAGRAM):   H3x1_2 = SIN(H3x1_2 );
2405136   +   H3x1_3  = SIN(H3x1_3 );
MPRINT(EM_DIAGRAM):   H3x1_3 = SIN(H3x1_3 );
2405137   +   H3x1_4  = SIN(H3x1_4 );
MPRINT(EM_DIAGRAM):   H3x1_4 = SIN(H3x1_4 );
2405138   +   H3x1_5  = SIN(H3x1_5 );
MPRINT(EM_DIAGRAM):   H3x1_5 = SIN(H3x1_5 );
2405139   +   H3x1_6  = SIN(H3x1_6 );
MPRINT(EM_DIAGRAM):   H3x1_6 = SIN(H3x1_6 );
2405140   +   H3x1_7  = SIN(H3x1_7 );
MPRINT(EM_DIAGRAM):   H3x1_7 = SIN(H3x1_7 );
2405141   +END;
MPRINT(EM_DIAGRAM):   END;
2405142   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2405143   +   H3x1_1  = .;
MPRINT(EM_DIAGRAM):   H3x1_1 = .;
2405144   +   H3x1_2  = .;
MPRINT(EM_DIAGRAM):   H3x1_2 = .;
2405145   +   H3x1_3  = .;
MPRINT(EM_DIAGRAM):   H3x1_3 = .;
2405146   +   H3x1_4  = .;
MPRINT(EM_DIAGRAM):   H3x1_4 = .;
2405147   +   H3x1_5  = .;
MPRINT(EM_DIAGRAM):   H3x1_5 = .;
2405148   +   H3x1_6  = .;
MPRINT(EM_DIAGRAM):   H3x1_6 = .;
2405149   +   H3x1_7  = .;
MPRINT(EM_DIAGRAM):   H3x1_7 = .;
2405150   +END;
MPRINT(EM_DIAGRAM):   END;
2405151   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2405152   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2405153   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2405154   +
2405155   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2405156   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2405157   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2405158   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2405159   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2405160   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2405161   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2405162   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2405163   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2405164   +end;
MPRINT(EM_DIAGRAM):   end;
2405165   +else do;
MPRINT(EM_DIAGRAM):   else do;
2405166   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2405167   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2405168   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2405169   +   end;
MPRINT(EM_DIAGRAM):   end;
2405170   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2405171   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2405172   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2405173   +   end;
MPRINT(EM_DIAGRAM):   end;
2405174   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2405175   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2405176   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2405177   +   end;
MPRINT(EM_DIAGRAM):   end;
2405178   +end;
MPRINT(EM_DIAGRAM):   end;
2405179   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2405180   +   P_DepVar1  =    -2.07102874283902 * H3x1_1  +     2.04799607124649 * H3x1_2
2405181   +          +    -0.05444449856749 * H3x1_3  +    -3.76440287030853 * H3x1_4
2405182   +          +    -0.62776678498994 * H3x1_5  +    -1.00383135301243 * H3x1_6
2405183   +          +     2.26027843968818 * H3x1_7 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.07102874283902 * H3x1_1 + 2.04799607124649 * H3x1_2 + 
-0.05444449856749 * H3x1_3 + -3.76440287030853 * H3x1_4 + -0.62776678498994 * H3x1_5 + 
-1.00383135301243 * H3x1_6 + 2.26027843968818 * H3x1_7 ;
2405184   +   P_DepVar1  =     0.51137297979162 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.51137297979162 + P_DepVar1 ;
2405185   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2405186   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2405187   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2405188   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2405189   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2405190   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2405191   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2405192   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2405193   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2405194   +END;
MPRINT(EM_DIAGRAM):   END;
2405195   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2405196   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2405197   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2405198   +END;
MPRINT(EM_DIAGRAM):   END;
2405199   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2405200   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2405201   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2405202   +END;
MPRINT(EM_DIAGRAM):   END;
2405203   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2405204   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2405205   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2405206   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2405207   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2405208   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2405209   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2405210   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2405211   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2405212   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2405213   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2405214   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2405215   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2405216   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2405217   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2405218   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2405219   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2405220   +END;
MPRINT(EM_DIAGRAM):   END;
2405221   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2405222   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2405223   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2405224   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2405225   +* Renaming variables for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural12;
2405226   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2405227   +* Renaming Posterior variables for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural12;
2405228   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2405229   +drop AutoNeural12_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_P_DepVar1;
2405230   +AutoNeural12_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural12_P_DepVar1 = P_DepVar1;
2405231   +drop AutoNeural12_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_P_DepVar0;
2405232   +AutoNeural12_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural12_P_DepVar0 = P_DepVar0;
2405233   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2405234   +* Renaming Into variables for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for AutoNeural12;
2405235   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2405236   +length AutoNeural12_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length AutoNeural12_I_DepVar $32;
2405237   +drop AutoNeural12_I_DepVar;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_I_DepVar;
2405238   +AutoNeural12_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   AutoNeural12_I_DepVar = I_DepVar;
2405239   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2405240   +* Renaming _WARN_ variable for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural12;
2405241   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2405242   +length AutoNeural12_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural12_WARN_ $4;
2405243   +drop AutoNeural12_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_WARN_;
2405244   +AutoNeural12_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural12_WARN_ = _WARN_;
2405245   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2405246   +* Ensmbl44: Voting to produce predicted target;
MPRINT(EM_DIAGRAM):   * Ensmbl44: Voting to produce predicted target;
2405247   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2405248   +array Ensmbl44_post{2} _temporary_;
MPRINT(EM_DIAGRAM):   array Ensmbl44_post{2} _temporary_;
2405249   +array Ensmbl44_count{2} _temporary_;
MPRINT(EM_DIAGRAM):   array Ensmbl44_count{2} _temporary_;
2405250   +array Ensmbl44_level{2} $32 _temporary_ (
2405251   +"1"
2405252   +"0"
2405253   +);
MPRINT(EM_DIAGRAM):   array Ensmbl44_level{2} $32 _temporary_ ( "1" "0" );
2405254   +do i=1 to 2;
MPRINT(EM_DIAGRAM):   do i=1 to 2;
2405255   +Ensmbl44_post{i} = 0;
MPRINT(EM_DIAGRAM):   Ensmbl44_post{i} = 0;
2405256   +Ensmbl44_count{i} = 0;
MPRINT(EM_DIAGRAM):   Ensmbl44_count{i} = 0;
2405257   +end;
MPRINT(EM_DIAGRAM):   end;
2405258   +if AutoNeural9_I_DepVar = Ensmbl44_level{1} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural9_I_DepVar = Ensmbl44_level{1} then do;
2405259   +Ensmbl44_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl44_count{1} + 1;
2405260   +Ensmbl44_post{1}=Ensmbl44_post{1}+ AutoNeural9_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl44_post{1}=Ensmbl44_post{1}+ AutoNeural9_P_DepVar1;
2405261   +end;
MPRINT(EM_DIAGRAM):   end;
2405262   +if AutoNeural11_I_DepVar = Ensmbl44_level{1} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural11_I_DepVar = Ensmbl44_level{1} then do;
2405263   +Ensmbl44_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl44_count{1} + 1;
2405264   +Ensmbl44_post{1}=Ensmbl44_post{1}+ AutoNeural11_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl44_post{1}=Ensmbl44_post{1}+ AutoNeural11_P_DepVar1;
2405265   +end;
MPRINT(EM_DIAGRAM):   end;
2405266   +if AutoNeural12_I_DepVar = Ensmbl44_level{1} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural12_I_DepVar = Ensmbl44_level{1} then do;
2405267   +Ensmbl44_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl44_count{1} + 1;
2405268   +Ensmbl44_post{1}=Ensmbl44_post{1}+ AutoNeural12_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl44_post{1}=Ensmbl44_post{1}+ AutoNeural12_P_DepVar1;
2405269   +end;
MPRINT(EM_DIAGRAM):   end;
2405270   +if AutoNeural9_I_DepVar = Ensmbl44_level{2} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural9_I_DepVar = Ensmbl44_level{2} then do;
2405271   +Ensmbl44_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl44_count{2} + 1;
2405272   +Ensmbl44_post{2}=Ensmbl44_post{2}+ AutoNeural9_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl44_post{2}=Ensmbl44_post{2}+ AutoNeural9_P_DepVar0;
2405273   +end;
MPRINT(EM_DIAGRAM):   end;
2405274   +if AutoNeural11_I_DepVar = Ensmbl44_level{2} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural11_I_DepVar = Ensmbl44_level{2} then do;
2405275   +Ensmbl44_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl44_count{2} + 1;
2405276   +Ensmbl44_post{2}=Ensmbl44_post{2}+ AutoNeural11_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl44_post{2}=Ensmbl44_post{2}+ AutoNeural11_P_DepVar0;
2405277   +end;
MPRINT(EM_DIAGRAM):   end;
2405278   +if AutoNeural12_I_DepVar = Ensmbl44_level{2} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural12_I_DepVar = Ensmbl44_level{2} then do;
2405279   +Ensmbl44_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl44_count{2} + 1;
2405280   +Ensmbl44_post{2}=Ensmbl44_post{2}+ AutoNeural12_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl44_post{2}=Ensmbl44_post{2}+ AutoNeural12_P_DepVar0;
2405281   +end;
MPRINT(EM_DIAGRAM):   end;
2405282   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2405283   +* Ensmbl44: Determine Into Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl44: Determine Into Variable;
2405284   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2405285   +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set. 
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the 
         length of a character variable.
2405286   +drop i vote_count vote_post;
MPRINT(EM_DIAGRAM):   drop i vote_count vote_post;
2405287   +vote_count = max(
2405288   +Ensmbl44_count{1} ,
2405289   +Ensmbl44_count{2}
2405290   +);
MPRINT(EM_DIAGRAM):   vote_count = max( Ensmbl44_count{1} , Ensmbl44_count{2} );
2405291   +do i=1 to 2;
MPRINT(EM_DIAGRAM):   do i=1 to 2;
2405292   +if Ensmbl44_count{i}=vote_count and Ensmbl44_post{i}>vote_post then do;
MPRINT(EM_DIAGRAM):   if Ensmbl44_count{i}=vote_count and Ensmbl44_post{i}>vote_post then do;
2405293   +I_DepVar = Ensmbl44_level{i};
MPRINT(EM_DIAGRAM):   I_DepVar = Ensmbl44_level{i};
2405294   +vote_post = Ensmbl44_count{i};
MPRINT(EM_DIAGRAM):   vote_post = Ensmbl44_count{i};
2405295   +end;
MPRINT(EM_DIAGRAM):   end;
2405296   +end;
MPRINT(EM_DIAGRAM):   end;
2405297   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2405298   +* Ensmbl44: Compute posterior vars using models predicting the chosen level;
MPRINT(EM_DIAGRAM):   * Ensmbl44: Compute posterior vars using models predicting the chosen 
level;
2405299   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2405300   +P_DepVar1 = 0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0;
2405301   +P_DepVar0 = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2405302   +if I_DepVar = AutoNeural9_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = AutoNeural9_I_DepVar then do;
2405303   +P_DEPVAR1 = P_DEPVAR1 + AutoNeural9_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + AutoNeural9_P_DepVar1;
2405304   +P_DEPVAR0 = P_DEPVAR0 + AutoNeural9_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + AutoNeural9_P_DepVar0;
2405305   +end;
MPRINT(EM_DIAGRAM):   end;
2405306   +if I_DepVar = AutoNeural11_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = AutoNeural11_I_DepVar then do;
2405307   +P_DEPVAR1 = P_DEPVAR1 + AutoNeural11_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + AutoNeural11_P_DepVar1;
2405308   +P_DEPVAR0 = P_DEPVAR0 + AutoNeural11_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + AutoNeural11_P_DepVar0;
2405309   +end;
MPRINT(EM_DIAGRAM):   end;
2405310   +if I_DepVar = AutoNeural12_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = AutoNeural12_I_DepVar then do;
2405311   +P_DEPVAR1 = P_DEPVAR1 + AutoNeural12_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + AutoNeural12_P_DepVar1;
2405312   +P_DEPVAR0 = P_DEPVAR0 + AutoNeural12_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + AutoNeural12_P_DepVar0;
2405313   +end;
MPRINT(EM_DIAGRAM):   end;
2405314   +* Ensmbl44: Averaging posterior;
MPRINT(EM_DIAGRAM):   * Ensmbl44: Averaging posterior;
2405315   +P_DepVar1 = P_DepVar1/vote_count;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1/vote_count;
2405316   +P_DepVar0 = P_DepVar0/vote_count;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0/vote_count;
2405317   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2405318   +* Ensmbl44: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   * Ensmbl44: Producing Unformatted variable;
2405319   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2405320   +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
2405321   +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
2405322   +else
2405323   +if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
2405324   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2405325   +* Ensmbl44: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl44: Computing _WARN_ Variable;
2405326   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2405327   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
2405328   +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
2405329   +_WARN_ = '';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
2405330   +if index(AUTONEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
2405330  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
2405331   +if index(AUTONEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
2405331  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
2405332   +if index(AUTONEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
2405332  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
2405333   +if index(AUTONEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
2405333  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
2405334   +if index(AUTONEURAL11_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
2405334  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
2405335   +if index(AUTONEURAL11_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
2405335  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
2405336   +if index(AUTONEURAL11_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
2405336  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
2405337   +if index(AUTONEURAL11_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
2405337  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
2405338   +if index(AUTONEURAL12_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
2405338  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
2405339   +if index(AUTONEURAL12_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
2405339  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
2405340   +if index(AUTONEURAL12_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
2405340  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
2405341   +if index(AUTONEURAL12_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
2405341  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
2405342   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2405343   +* Ensmbl44: Computing Residual Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl44: Computing Residual Vars;
2405344   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2405345   +if
2405346   +F_DepVar NE '1'
2405347   +AND F_DepVar NE '0'
2405348   +then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE '1' AND F_DepVar NE '0' then do;
2405349   +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
2405350   +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
2405351   +end;
MPRINT(EM_DIAGRAM):   end;
2405352   +else do;
MPRINT(EM_DIAGRAM):   else do;
2405353   +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
2405354   +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
2405355   +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
2405356   +WHEN('1') R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN('1') R_DepVar1 = R_DepVar1 +1;
2405357   +WHEN('0') R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN('0') R_DepVar0 = R_DepVar0 +1;
2405358   +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
2405359   +END;
MPRINT(EM_DIAGRAM):   END;
2405360   +END;
MPRINT(EM_DIAGRAM):   END;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2405361    run;

NOTE: DATA STEP view saved on file EMWS8.ENSMBL44_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.AUTONEURAL9_VALIDATE.VIEW used (Total process time):
      real time           0.13 seconds
      cpu time            0.14 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.14 seconds
      cpu time            0.15 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2405362    quit;
2405363    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
MPRINT(EM_DIAGRAM):   
MPRINT(CALFITSTATSNOMINAL):   data _tmpTrainFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_ 
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.Ensmbl44_TRAIN end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_ 
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Train: Target Variable" _NOBS_= "Train: Sum of 
Frequencies" _SSE_= "Train: Sum of Squared Errors" _MAX_= "Train: Maximum Absolute Error" 
_DIV_ = "Train: Divisor for ASE" _WRONG_= "Train: Number of Wrong Classifications" _DISF_= 
"Train: Frequency of Classified Cases" _MISC_= "Train: Misclassification Rate" _ASE_ = "Train: 
Average Squared Error" _RASE_ = "Train: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_ 
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl44_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set _tmpTrainFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   
MPRINT(CALFITSTATSNOMINAL):   data _tmpValidFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_ 
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.Ensmbl44_VALIDATE end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_ 
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Valid: Target Variable" _NOBS_= "Valid: Sum of 
Frequencies" _SSE_= "Valid: Sum of Squared Errors" _MAX_= "Valid: Maximum Absolute Error" 
_DIV_ = "Valid: Divisor for ASE" _WRONG_= "Valid: Number of Wrong Classifications" _DISF_= 
"Valid: Frequency of Classified Cases" _MISC_= "Valid: Misclassification Rate" _ASE_ = "Valid: 
Average Squared Error" _RASE_ = "Valid: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_ 
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _tmpdata_(DROP= TARGET);
MPRINT(EM_DIAGRAM):   set _tmpValidFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _tmpdata_;
MPRINT(EM_DIAGRAM):   set _tmpdata_;
MPRINT(EM_DIAGRAM):   rename _ASE_=_VASE_;
MPRINT(EM_DIAGRAM):   rename _DIV_=_VDIV_;
MPRINT(EM_DIAGRAM):   rename _MAX_=_VMAX_;
MPRINT(EM_DIAGRAM):   rename _NOBS_=_VNOBS_;
MPRINT(EM_DIAGRAM):   rename _RASE_=_VRASE_;
MPRINT(EM_DIAGRAM):   rename _SSE_=_VSSE_;
MPRINT(EM_DIAGRAM):   rename _DISF_=_VDISF_;
MPRINT(EM_DIAGRAM):   rename _MISC_=_VMISC_;
MPRINT(EM_DIAGRAM):   rename _WRONG_=_VWRONG_;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl44_EMOUTFIT;
MPRINT(EM_DIAGRAM):   merge EMWS8.Ensmbl44_EMOUTFIT _tmpdata_;
MPRINT(EM_DIAGRAM):   run;
2405423    filename _pref
2405423  ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural9\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural9\EMPUBLISHSCORE.sas";
2405424    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2405425    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural9\EMPUBLISHSCORE.sas.
2405426   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2405427   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2405428   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2405429   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2405430   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2405431   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2405432   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2405433   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2405434   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2405435   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2405436   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2405437   +LENGTH _WARN_ $4
2405438   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
2405439   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2405440   +
2405441   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2405442   +
2405443   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2405444   +
2405445   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2405446   +
2405447   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2405448   +
2405449   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2405450   +
2405451   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2405452   +
2405453   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2405454   +
2405455   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2405456   +
2405457   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2405458   +
2405459   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2405460   +
2405461   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2405462   +
2405463   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2405464   +
2405465   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2405466   +
2405467   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2405468   +
2405469   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2405470   +
2405471   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2405472   +
2405473   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2405474   +
2405475   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2405476   +
2405477   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2405478   +
2405479   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2405480   +
2405481   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2405482   +
2405483   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2405484   +
2405485   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2405486   +
2405487   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2405488   +
2405489   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2405490   +
2405491   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2405492   +
2405493   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2405494   +
2405495   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2405496   +
2405497   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2405498   +
2405499   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2405500   +
2405501   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2405502   +
2405503   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2405504   +
2405505   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2405506   +
2405507   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2405508   +
2405509   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2405510   +
2405511   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2405512   +
2405513   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2405514   +
2405515   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2405516   +
2405517   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2405518   +
2405519   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2405520   +
2405521   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2405522   +
2405523   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2405524   +
2405525   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2405526   +
2405527   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2405528   +
2405529   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2405530   +
2405531   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2405532   +
2405533   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2405534   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2405535   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2405536   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2405537   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2405538   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2405539   +end;
MPRINT(EM_DIAGRAM):   end;
2405540   +else do;
MPRINT(EM_DIAGRAM):   else do;
2405541   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2405542   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2405543   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2405544   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2405545   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2405546   +   end;
MPRINT(EM_DIAGRAM):   end;
2405547   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2405548   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2405549   +   end;
MPRINT(EM_DIAGRAM):   end;
2405550   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2405551   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2405552   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2405553   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2405554   +   end;
MPRINT(EM_DIAGRAM):   end;
2405555   +end;
MPRINT(EM_DIAGRAM):   end;
2405556   +
2405557   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2405558   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2405559   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2405560   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2405561   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2405562   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2405563   +end;
MPRINT(EM_DIAGRAM):   end;
2405564   +else do;
MPRINT(EM_DIAGRAM):   else do;
2405565   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2405566   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2405567   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2405568   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2405569   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2405570   +   end;
MPRINT(EM_DIAGRAM):   end;
2405571   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2405572   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2405573   +   end;
MPRINT(EM_DIAGRAM):   end;
2405574   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2405575   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2405576   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2405577   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2405578   +   end;
MPRINT(EM_DIAGRAM):   end;
2405579   +end;
MPRINT(EM_DIAGRAM):   end;
2405580   +
2405581   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2405582   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2405583   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2405584   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2405585   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2405586   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2405587   +end;
MPRINT(EM_DIAGRAM):   end;
2405588   +else do;
MPRINT(EM_DIAGRAM):   else do;
2405589   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2405590   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2405591   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2405592   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2405593   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2405594   +   end;
MPRINT(EM_DIAGRAM):   end;
2405595   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2405596   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2405597   +   end;
MPRINT(EM_DIAGRAM):   end;
2405598   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2405599   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2405600   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2405601   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2405602   +   end;
MPRINT(EM_DIAGRAM):   end;
2405603   +end;
MPRINT(EM_DIAGRAM):   end;
2405604   +
2405605   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2405606   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2405607   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2405608   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2405609   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2405610   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2405611   +end;
MPRINT(EM_DIAGRAM):   end;
2405612   +else do;
MPRINT(EM_DIAGRAM):   else do;
2405613   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2405614   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2405615   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2405616   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2405617   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2405618   +   end;
MPRINT(EM_DIAGRAM):   end;
2405619   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2405620   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2405621   +   end;
MPRINT(EM_DIAGRAM):   end;
2405622   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2405623   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2405624   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2405625   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2405626   +   end;
MPRINT(EM_DIAGRAM):   end;
2405627   +end;
MPRINT(EM_DIAGRAM):   end;
2405628   +
2405629   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2405630   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2405631   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2405632   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2405633   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2405634   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2405635   +end;
MPRINT(EM_DIAGRAM):   end;
2405636   +else do;
MPRINT(EM_DIAGRAM):   else do;
2405637   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2405638   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2405639   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2405640   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2405641   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2405642   +   end;
MPRINT(EM_DIAGRAM):   end;
2405643   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2405644   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2405645   +   end;
MPRINT(EM_DIAGRAM):   end;
2405646   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2405647   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2405648   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2405649   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2405650   +   end;
MPRINT(EM_DIAGRAM):   end;
2405651   +end;
MPRINT(EM_DIAGRAM):   end;
2405652   +
2405653   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2405654   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2405655   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2405656   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2405657   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2405658   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2405659   +end;
MPRINT(EM_DIAGRAM):   end;
2405660   +else do;
MPRINT(EM_DIAGRAM):   else do;
2405661   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2405662   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2405663   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2405664   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2405665   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2405666   +   end;
MPRINT(EM_DIAGRAM):   end;
2405667   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2405668   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2405669   +   end;
MPRINT(EM_DIAGRAM):   end;
2405670   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2405671   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2405672   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2405673   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2405674   +   end;
MPRINT(EM_DIAGRAM):   end;
2405675   +end;
MPRINT(EM_DIAGRAM):   end;
2405676   +
2405677   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2405678   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2405679   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2405680   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2405681   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2405682   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2405683   +end;
MPRINT(EM_DIAGRAM):   end;
2405684   +else do;
MPRINT(EM_DIAGRAM):   else do;
2405685   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2405686   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2405687   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2405688   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2405689   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2405690   +   end;
MPRINT(EM_DIAGRAM):   end;
2405691   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2405692   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2405693   +   end;
MPRINT(EM_DIAGRAM):   end;
2405694   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2405695   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2405696   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2405697   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2405698   +   end;
MPRINT(EM_DIAGRAM):   end;
2405699   +end;
MPRINT(EM_DIAGRAM):   end;
2405700   +
2405701   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2405702   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
2405703   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2405704   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2405705   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2405706   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2405707   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2405708   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2405709   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2405710   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2405711   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2405712   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2405713   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2405714   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2405715   +end;
MPRINT(EM_DIAGRAM):   end;
2405716   +else do;
MPRINT(EM_DIAGRAM):   else do;
2405717   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2405718   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2405719   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2405720   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2405721   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2405722   +   end;
MPRINT(EM_DIAGRAM):   end;
2405723   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2405724   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2405725   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2405726   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2405727   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2405728   +   end;
MPRINT(EM_DIAGRAM):   end;
2405729   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2405730   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2405731   +   end;
MPRINT(EM_DIAGRAM):   end;
2405732   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2405733   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2405734   +   end;
MPRINT(EM_DIAGRAM):   end;
2405735   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2405736   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2405737   +   end;
MPRINT(EM_DIAGRAM):   end;
2405738   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2405739   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2405740   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2405741   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2405742   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2405743   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2405744   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2405745   +   end;
MPRINT(EM_DIAGRAM):   end;
2405746   +end;
MPRINT(EM_DIAGRAM):   end;
2405747   +
2405748   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2405749   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2405750   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
2405751   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2405752   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2405753   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2405754   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2405755   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2405756   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2405757   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2405758   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2405759   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2405760   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2405761   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2405762   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2405763   +end;
MPRINT(EM_DIAGRAM):   end;
2405764   +else do;
MPRINT(EM_DIAGRAM):   else do;
2405765   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2405766   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2405767   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2405768   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2405769   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2405770   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2405771   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2405772   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2405773   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2405774   +         end;
MPRINT(EM_DIAGRAM):   end;
2405775   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2405776   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2405777   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2405778   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2405779   +            end;
MPRINT(EM_DIAGRAM):   end;
2405780   +         end;
MPRINT(EM_DIAGRAM):   end;
2405781   +      end;
MPRINT(EM_DIAGRAM):   end;
2405782   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2405783   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2405784   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2405785   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2405786   +         end;
MPRINT(EM_DIAGRAM):   end;
2405787   +      end;
MPRINT(EM_DIAGRAM):   end;
2405788   +   end;
MPRINT(EM_DIAGRAM):   end;
2405789   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2405790   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2405791   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2405792   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2405793   +      end;
MPRINT(EM_DIAGRAM):   end;
2405794   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2405795   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2405796   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2405797   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2405798   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2405799   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2405800   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2405801   +         end;
MPRINT(EM_DIAGRAM):   end;
2405802   +      end;
MPRINT(EM_DIAGRAM):   end;
2405803   +   end;
MPRINT(EM_DIAGRAM):   end;
2405804   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2405805   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2405806   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2405807   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2405808   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2405809   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2405810   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2405811   +   end;
MPRINT(EM_DIAGRAM):   end;
2405812   +end;
MPRINT(EM_DIAGRAM):   end;
2405813   +
2405814   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2405815   +*** Checking missing input Interval
2405816   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2405817   +
2405818   +IF NMISS(
2405819   +   AcceptedCmpTotal ,
2405820   +   Age ,
2405821   +   Frq ,
2405822   +   Income ,
2405823   +   Kidhome ,
2405824   +   Mnt ,
2405825   +   MntFishProducts ,
2405826   +   MntFruits ,
2405827   +   MntGoldProds ,
2405828   +   MntMeatProducts ,
2405829   +   MntSweetProducts ,
2405830   +   MntWines ,
2405831   +   MonthsAsCustomer ,
2405832   +   NumCatalogPurchases ,
2405833   +   NumDealsPurchases ,
2405834   +   NumDistPurchases ,
2405835   +   NumStorePurchases ,
2405836   +   NumWebPurchases ,
2405837   +   NumWebVisitsMonth ,
2405838   +   RFMstat ,
2405839   +   RMntFrq ,
2405840   +   Recency ,
2405841   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
2405842   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2405843   +
2405844   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2405845   +END;
MPRINT(EM_DIAGRAM):   END;
2405846   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2405847   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2405848   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2405849   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2405850   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2405851   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2405852   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2405853   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2405854   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2405855   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2405856   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2405857   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2405858   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2405859   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2405860   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2405861   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2405862   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2405863   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2405864   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2405865   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2405866   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2405867   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2405868   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
2405869   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2405870   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2405871   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2405872   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2405873   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2405874   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2405875   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2405876   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2405877   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2405878   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2405879   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2405880   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2405881   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2405882   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2405883   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2405884   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2405885   +END;
MPRINT(EM_DIAGRAM):   END;
2405886   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2405887   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2405888   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2405889   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2405890   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2405891   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2405892   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2405893   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2405894   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2405895   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2405896   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2405897   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2405898   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2405899   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2405900   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2405901   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2405902   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2405903   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2405904   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2405905   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2405906   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2405907   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2405908   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
2405909   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2405910   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2405911   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2405912   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2405913   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2405914   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2405915   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2405916   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2405917   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2405918   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2405919   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
2405920   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2405921   +   ELSE S_NumCatalogPurchases
2405922   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2405923   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2405924   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2405925   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2405926   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2405927   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2405928   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2405929   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2405930   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2405931   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2405932   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2405933   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2405934   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2405935   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2405936   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2405937   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2405938   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2405939   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2405940   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2405941   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2405942   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2405943   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2405944   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2405945   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2405946   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2405947   +END;
MPRINT(EM_DIAGRAM):   END;
2405948   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2405949   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2405950   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2405951   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2405952   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2405953   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2405954   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2405955   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2405956   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2405957   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2405958   +   H1x1_1  =    -0.78941671657664 * S_AcceptedCmpTotal
2405959   +          +     0.31767378900448 * S_Age  +      -0.450304150539 * S_Frq
2405960   +          +     0.13641886985589 * S_Income  +    -0.76390352240561 *
2405961   +        S_Kidhome  +    -0.84654868800943 * S_Mnt  +     0.96945558052651 *
2405962   +        S_MntFishProducts  +     0.16268958674432 * S_MntFruits
2405963   +          +     0.02144447788014 * S_MntGoldProds  +    -3.75090210449464 *
2405964   +        S_MntMeatProducts  +    -0.22086629229442 * S_MntSweetProducts
2405965   +          +      0.8352178457402 * S_MntWines  +     0.16493907873466 *
2405966   +        S_MonthsAsCustomer  +    -1.54607390993048 * S_NumCatalogPurchases
2405967   +          +    -1.12130210731541 * S_NumDealsPurchases
2405968   +          +    -0.12343505299726 * S_NumDistPurchases
2405969   +          +     0.11863092868196 * S_NumStorePurchases
2405970   +          +       0.583917993314 * S_NumWebPurchases
2405971   +          +     0.75529732848146 * S_NumWebVisitsMonth
2405972   +          +    -0.49784215446785 * S_RFMstat  +     0.40580477815146 *
2405973   +        S_RMntFrq  +    -0.95519170979342 * S_Recency
2405974   +          +    -0.44895196625502 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.78941671657664 * S_AcceptedCmpTotal + 0.31767378900448 * 
S_Age + -0.450304150539 * S_Frq + 0.13641886985589 * S_Income + -0.76390352240561 * S_Kidhome 
+ -0.84654868800943 * S_Mnt + 0.96945558052651 * S_MntFishProducts + 0.16268958674432 * 
S_MntFruits + 0.02144447788014 * S_MntGoldProds + -3.75090210449464 * S_MntMeatProducts + 
-0.22086629229442 * S_MntSweetProducts + 0.8352178457402 * S_MntWines + 0.16493907873466 * 
S_MonthsAsCustomer + -1.54607390993048 * S_NumCatalogPurchases + -1.12130210731541 * 
S_NumDealsPurchases + -0.12343505299726 * S_NumDistPurchases + 0.11863092868196 * 
S_NumStorePurchases + 0.583917993314 * S_NumWebPurchases + 0.75529732848146 * 
S_NumWebVisitsMonth + -0.49784215446785 * S_RFMstat + 0.40580477815146 * S_RMntFrq + 
-0.95519170979342 * S_Recency + -0.44895196625502 * S_Teenhome ;
2405975   +   H1x1_2  =    -0.22984864633102 * S_AcceptedCmpTotal
2405976   +          +     0.08901810463204 * S_Age  +    -0.13007664741542 * S_Frq
2405977   +          +    -0.64174617524704 * S_Income  +     0.26599968715733 *
2405978   +        S_Kidhome  +     0.57486260655125 * S_Mnt  +    -0.56033337110694 *
2405979   +        S_MntFishProducts  +     0.16060716517673 * S_MntFruits
2405980   +          +      0.4349197289782 * S_MntGoldProds  +     1.41079767517969 *
2405981   +        S_MntMeatProducts  +      0.0615730534741 * S_MntSweetProducts
2405982   +          +    -0.09057901886639 * S_MntWines  +     0.20260454891291 *
2405983   +        S_MonthsAsCustomer  +    -1.17048742280721 * S_NumCatalogPurchases
2405984   +          +    -0.84113790640734 * S_NumDealsPurchases
2405985   +          +    -0.10512672747147 * S_NumDistPurchases
2405986   +          +     0.07268711782494 * S_NumStorePurchases
2405987   +          +     0.57578331257439 * S_NumWebPurchases
2405988   +          +    -1.34334433506558 * S_NumWebVisitsMonth
2405989   +          +     0.50079465494904 * S_RFMstat  +     0.77329849238514 *
2405990   +        S_RMntFrq  +      1.2759588366983 * S_Recency
2405991   +          +     0.17722493443222 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.22984864633102 * S_AcceptedCmpTotal + 0.08901810463204 * 
S_Age + -0.13007664741542 * S_Frq + -0.64174617524704 * S_Income + 0.26599968715733 * 
S_Kidhome + 0.57486260655125 * S_Mnt + -0.56033337110694 * S_MntFishProducts + 
0.16060716517673 * S_MntFruits + 0.4349197289782 * S_MntGoldProds + 1.41079767517969 * 
S_MntMeatProducts + 0.0615730534741 * S_MntSweetProducts + -0.09057901886639 * S_MntWines + 
0.20260454891291 * S_MonthsAsCustomer + -1.17048742280721 * S_NumCatalogPurchases + 
-0.84113790640734 * S_NumDealsPurchases + -0.10512672747147 * S_NumDistPurchases + 
0.07268711782494 * S_NumStorePurchases + 0.57578331257439 * S_NumWebPurchases + 
-1.34334433506558 * S_NumWebVisitsMonth + 0.50079465494904 * S_RFMstat + 0.77329849238514 * 
S_RMntFrq + 1.2759588366983 * S_Recency + 0.17722493443222 * S_Teenhome ;
2405992   +   H1x1_3  =      1.1751297152411 * S_AcceptedCmpTotal
2405993   +          +     0.14380060376858 * S_Age  +    -0.90459868540245 * S_Frq
2405994   +          +     0.65570498233801 * S_Income  +    -0.66078213466597 *
2405995   +        S_Kidhome  +      0.5364727654141 * S_Mnt  +    -0.56452823521458 *
2405996   +        S_MntFishProducts  +     0.11401811215013 * S_MntFruits
2405997   +          +     0.42809239636494 * S_MntGoldProds  +     3.28485519579047 *
2405998   +        S_MntMeatProducts  +    -0.10959477301368 * S_MntSweetProducts
2405999   +          +     -0.5779524716069 * S_MntWines  +     0.08256957915579 *
2406000   +        S_MonthsAsCustomer  +     0.48195221766948 * S_NumCatalogPurchases
2406001   +          +     0.45924983504762 * S_NumDealsPurchases
2406002   +          +    -0.25508041581692 * S_NumDistPurchases
2406003   +          +    -1.34901283858526 * S_NumStorePurchases
2406004   +          +    -0.86388975031663 * S_NumWebPurchases
2406005   +          +     1.86136110391797 * S_NumWebVisitsMonth
2406006   +          +     0.39724376701426 * S_RFMstat  +    -1.08648755949459 *
2406007   +        S_RMntFrq  +    -2.06955456943047 * S_Recency
2406008   +          +     -0.6524420065858 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.1751297152411 * S_AcceptedCmpTotal + 0.14380060376858 * S_Age 
+ -0.90459868540245 * S_Frq + 0.65570498233801 * S_Income + -0.66078213466597 * S_Kidhome + 
0.5364727654141 * S_Mnt + -0.56452823521458 * S_MntFishProducts + 0.11401811215013 * 
S_MntFruits + 0.42809239636494 * S_MntGoldProds + 3.28485519579047 * S_MntMeatProducts + 
-0.10959477301368 * S_MntSweetProducts + -0.5779524716069 * S_MntWines + 0.08256957915579 * 
S_MonthsAsCustomer + 0.48195221766948 * S_NumCatalogPurchases + 0.45924983504762 * 
S_NumDealsPurchases + -0.25508041581692 * S_NumDistPurchases + -1.34901283858526 * 
S_NumStorePurchases + -0.86388975031663 * S_NumWebPurchases + 1.86136110391797 * 
S_NumWebVisitsMonth + 0.39724376701426 * S_RFMstat + -1.08648755949459 * S_RMntFrq + 
-2.06955456943047 * S_Recency + -0.6524420065858 * S_Teenhome ;
2406009   +   H1x1_1  = H1x1_1  +     0.80545309346785 * AcceptedCmp10
2406010   +          +    -0.33518398776018 * AcceptedCmp20  +    -0.58961939502901 *
2406011   +        AcceptedCmp30  +    -0.89675052404295 * AcceptedCmp40
2406012   +          +     0.75506592249683 * AcceptedCmp50  +    -0.07335613460961 *
2406013   +        Complain0  +     0.34255762261501 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.80545309346785 * AcceptedCmp10 + -0.33518398776018 * 
AcceptedCmp20 + -0.58961939502901 * AcceptedCmp30 + -0.89675052404295 * AcceptedCmp40 + 
0.75506592249683 * AcceptedCmp50 + -0.07335613460961 * Complain0 + 0.34255762261501 * 
HigherEducationBinary0 ;
2406014   +   H1x1_2  = H1x1_2  +    -0.17834267108797 * AcceptedCmp10
2406015   +          +    -0.54414628806984 * AcceptedCmp20  +      0.8037591997808 *
2406016   +        AcceptedCmp30  +     0.37789561997689 * AcceptedCmp40
2406017   +          +    -1.39910847665731 * AcceptedCmp50  +    -0.44783176263268 *
2406018   +        Complain0  +     0.36763760090773 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.17834267108797 * AcceptedCmp10 + -0.54414628806984 
* AcceptedCmp20 + 0.8037591997808 * AcceptedCmp30 + 0.37789561997689 * AcceptedCmp40 + 
-1.39910847665731 * AcceptedCmp50 + -0.44783176263268 * Complain0 + 0.36763760090773 * 
HigherEducationBinary0 ;
2406019   +   H1x1_3  = H1x1_3  +    -0.20323890063703 * AcceptedCmp10
2406020   +          +    -0.08537895761507 * AcceptedCmp20  +     0.22533818089504 *
2406021   +        AcceptedCmp30  +    -0.22195995100127 * AcceptedCmp40
2406022   +          +    -2.01371926977123 * AcceptedCmp50  +    -0.17097719978842 *
2406023   +        Complain0  +     0.34016905753094 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.20323890063703 * AcceptedCmp10 + -0.08537895761507 
* AcceptedCmp20 + 0.22533818089504 * AcceptedCmp30 + -0.22195995100127 * AcceptedCmp40 + 
-2.01371926977123 * AcceptedCmp50 + -0.17097719978842 * Complain0 + 0.34016905753094 * 
HigherEducationBinary0 ;
2406024   +   H1x1_1  = H1x1_1  +    -0.03394180683805 * Education2n_Cycle
2406025   +          +    -0.38224926448988 * EducationBasic  +    -0.42512289883041 *
2406026   +        EducationGraduation  +    -0.59708578424036 * EducationMaster
2406027   +          +     0.48853068455666 * Marital_StatusDivorced
2406028   +          +    -0.54903474026465 * Marital_StatusMarried
2406029   +          +    -0.34079188373939 * Marital_StatusSingle
2406030   +          +    -0.64602969938868 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.03394180683805 * Education2n_Cycle + 
-0.38224926448988 * EducationBasic + -0.42512289883041 * EducationGraduation + 
-0.59708578424036 * EducationMaster + 0.48853068455666 * Marital_StatusDivorced + 
-0.54903474026465 * Marital_StatusMarried + -0.34079188373939 * Marital_StatusSingle + 
-0.64602969938868 * Marital_StatusTogether ;
2406031   +   H1x1_2  = H1x1_2  +    -0.26170943801998 * Education2n_Cycle
2406032   +          +     0.06893871459175 * EducationBasic  +    -0.84123174187664 *
2406033   +        EducationGraduation  +     0.19038549912088 * EducationMaster
2406034   +          +    -1.03547689902027 * Marital_StatusDivorced
2406035   +          +     2.42164864610471 * Marital_StatusMarried
2406036   +          +    -1.95342561304942 * Marital_StatusSingle
2406037   +          +      2.1397185142046 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.26170943801998 * Education2n_Cycle + 
0.06893871459175 * EducationBasic + -0.84123174187664 * EducationGraduation + 0.19038549912088 
* EducationMaster + -1.03547689902027 * Marital_StatusDivorced + 2.42164864610471 * 
Marital_StatusMarried + -1.95342561304942 * Marital_StatusSingle + 2.1397185142046 * 
Marital_StatusTogether ;
2406038   +   H1x1_3  = H1x1_3  +    -0.04236694810886 * Education2n_Cycle
2406039   +          +    -0.57404276980591 * EducationBasic  +     -0.1441989834351 *
2406040   +        EducationGraduation  +    -0.31867831184924 * EducationMaster
2406041   +          +      0.4337638747935 * Marital_StatusDivorced
2406042   +          +    -0.38508657017615 * Marital_StatusMarried
2406043   +          +     -0.0160269708326 * Marital_StatusSingle
2406044   +          +    -0.57491004270903 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.04236694810886 * Education2n_Cycle + 
-0.57404276980591 * EducationBasic + -0.1441989834351 * EducationGraduation + 
-0.31867831184924 * EducationMaster + 0.4337638747935 * Marital_StatusDivorced + 
-0.38508657017615 * Marital_StatusMarried + -0.0160269708326 * Marital_StatusSingle + 
-0.57491004270903 * Marital_StatusTogether ;
2406045   +   H1x1_1  =    -0.53426188790968 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.53426188790968 + H1x1_1 ;
2406046   +   H1x1_2  =     0.98557066823746 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.98557066823746 + H1x1_2 ;
2406047   +   H1x1_3  =     1.81937688438175 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.81937688438175 + H1x1_3 ;
2406048   +   H1x1_4  = 0;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0;
2406049   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
2406050   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2406051   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
2406052   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
2406053   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
2406054   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
2406055   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
2406056   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
2406057   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
2406058   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
2406059   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
2406060   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
2406061   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
2406062   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
2406063   +END;
MPRINT(EM_DIAGRAM):   END;
2406064   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2406065   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2406066   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2406067   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2406068   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2406069   +END;
MPRINT(EM_DIAGRAM):   END;
2406070   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2406071   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2406072   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2406073   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2406074   +   P_DepVar1  =    -3.43702380277695 * H1x1_1  +    -7.14235896425537 * H1x1_2
2406075   +          +     10.8296305415538 * H1x1_3  +    -2.20824183229369 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.43702380277695 * H1x1_1 + -7.14235896425537 * H1x1_2 + 
10.8296305415538 * H1x1_3 + -2.20824183229369 * H1x1_4 ;
2406076   +   P_DepVar1  =    -3.68304614366462 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.68304614366462 + P_DepVar1 ;
2406077   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2406078   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2406079   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2406080   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2406081   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2406082   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2406083   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2406084   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2406085   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2406086   +END;
MPRINT(EM_DIAGRAM):   END;
2406087   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2406088   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2406089   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2406090   +END;
MPRINT(EM_DIAGRAM):   END;
2406091   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2406092   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2406093   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2406094   +END;
MPRINT(EM_DIAGRAM):   END;
2406095   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2406096   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2406097   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2406098   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2406099   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2406100   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2406101   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2406102   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2406103   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2406104   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2406105   +END;
MPRINT(EM_DIAGRAM):   END;
2406106   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2406107   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2406108   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2406109   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2406110    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2406111    quit;
2406112    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2406113    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2406114    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2406115    retain ID 2 Node "AutoNeural9";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural9";
2406116    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2406117    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2632 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2632 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2406118    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2406119    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2406120    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2632 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2632 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2406121    proc sort data=EMWS8.AutoNeural9_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural9_variableset out=_temp2(keep=NAME 
CREATOR);
2406122    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2406123    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL9_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2406124    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2406125    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2406126    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2406127    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2406128    proc contents data=EMWS8.AutoNeural9_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural9_train out=_meta(keep=NAME) noprint;
2406129    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 57 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

2406130    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2406131    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2406132    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 57 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 57 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2406133    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2406134    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2406135    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2406136    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 57 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 57 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2406137    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2406138    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2406138  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1551 rows and 5 columns.

2406139    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2406140    proc append base=EMWS8.Ensmbl44_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl44_FCMP data=_tempx;
2406141    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL44_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1551 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL44_FCMP has 1551 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2406142    filename _pref
2406142  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
2406143    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2406144    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
2406145   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2406146   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
2406147   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2406148   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
2406149   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
2406150   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2406151    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2406152    quit;
2406153    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2406154    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2406155    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2406156    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
2406157    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2406158    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2406159    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2406160    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2406161    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2406162    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
2406163    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2406164    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2406165    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2406166    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2406167    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2406168    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2406169    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
2406170    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

2406171    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2406172    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2406173    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2406174    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2406175    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2406176    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2406177    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2406178    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2406179    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2406179  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

2406180    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2406181    proc append base=EMWS8.Ensmbl44_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl44_FCMP data=_tempx;
2406182    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL44_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL44_FCMP has 1555 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2406183    filename _pref
2406183  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
2406184    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2406185    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
2406186   +
2406187   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
2406188   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
2406188  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
2406189   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
2406190   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
2406191   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
2406192   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
2406193   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2406194    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2406195    quit;
2406196    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2406197    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2406198    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2406199    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
2406200    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2406201    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2406202    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2406203    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2406204    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2406205    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
2406206    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2406207    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2406208    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2406209    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2406210    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2406211    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2406212    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
2406213    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2406214    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2406215    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2406216    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2406217    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2406218    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2406219    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2406220    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2406221    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2406222    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2406222  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

2406223    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2406224    proc append base=EMWS8.Ensmbl44_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl44_FCMP data=_tempx;
2406225    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL44_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL44_FCMP has 1594 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2406226    filename _pref
2406226  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
2406227    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2406228    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
2406229   +
2406230   +
2406231   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
2406232   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
2406233   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
2406234   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
2406235   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
2406236   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2406237   +
2406238   +
2406239   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
2406240   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
2406241   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
2406242   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
2406243   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
2406244   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2406245   +
2406246   +
2406247   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
2406248   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
2406249   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
2406250   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
2406251   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
2406252   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2406253   +
2406254   +
2406255   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
2406256   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
2406257   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
2406258   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
2406259   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
2406260   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2406261   +
2406262   +
2406263   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
2406264   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
2406265   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
2406266   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
2406267   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
2406268   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2406269   +
2406270   +
2406271   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
2406272   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
2406273   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
2406274   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
2406275   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
2406276   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2406277   +
2406278   +
2406279   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
2406280   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
2406281   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
2406282   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
2406283   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
2406284   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
The SAS System

MPRINT(EM_DIAGRAM):  ;
2406285   +
2406286   +
2406287   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
2406288   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
2406289   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
2406290   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
2406291   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
2406292   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2406293   +if
2406294   +_FILTERNORM1 not in ( '.')
2406295   + and
2406296   +_FILTERNORM2 not in ( '.')
2406297   + and
2406298   +_FILTERNORM3 not in ( '.')
2406299   + and
2406300   +_FILTERNORM4 not in ( '.')
2406301   + and
2406302   +_FILTERNORM5 not in ( '.')
2406303   + and
2406304   +_FILTERNORM6 not in ( '.')
2406305   + and
2406306   +_FILTERNORM7 not in ( ' ')
2406307   + and
2406308   +_FILTERNORM8 not in ( ' ')
2406309   +and
2406310   +( Dt_Customer ne .)
2406311   +and ( Income ne . and (Income<=107000))
2406312   +and ( Kidhome ne .)
2406313   +and ( MntFishProducts ne .)
2406314   +and ( MntFruits ne .)
2406315   +and ( MntGoldProds ne .)
2406316   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
2406317   +and ( MntSweetProducts ne .)
2406318   +and ( MntWines ne .)
2406319   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
2406320   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
2406321   +and ( NumStorePurchases ne .)
2406322   +and ( NumWebPurchases ne .)
2406323   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
2406324   +and ( Recency ne .)
2406325   +and ( Teenhome ne .)
2406326   +and ( Year_Birth ne .)
2406327   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
2406328   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
2406329   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
2406330   +end;
MPRINT(EM_DIAGRAM):   end;
2406331   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
2406332   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2406333    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2406334    quit;
2406335    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2406336    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2406337    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2406338    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
2406339    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2406340    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2406341    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2406342    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2406343    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2406344    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
2406345    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2406346    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2406347    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2406348    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2406349    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2406350    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2406351    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
2406352    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

2406353    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2406354    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2406355    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2406356    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2406357    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2406358    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2406359    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2406360    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2406361    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2406361  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

2406362    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2406363    proc append base=EMWS8.Ensmbl44_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl44_FCMP data=_tempx;
2406364    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL44_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL44_FCMP has 1660 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2406365    %macro varDept(fcmpdata=,id=);
2406366    %global nobs&id scoreFlag&id;
2406367    %let scoreFlag&id = 0;
2406368    %if &id=1 or ^&fcmpStart %then %do;
2406369    proc sort data=&fcmpdata out=_temp&id nodupkey;
2406370    by NAME;
2406371    where id=&id and LHS in( %let j=1;
2406372    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
2406373    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
2406374    "&var" %let j = %eval(&j+1);
2406375    %end;
2406376    );
2406377    run;
2406378    %let dsid = %sysfunc(open(_temp&id));
2406379    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2406380    %let dsid = %sysfunc(close(&dsid));
2406381    %if &&nobs&id %then %do;
2406382    %let scoreFlag&id = 1;
2406383    %let fcmpStart = 1;
2406384    %end;
2406385    %else %let fcmpStart = 0;
2406386    %end;
2406387    %else %do;
2406388    proc sort data=&fcmpdata out=_tempid;
2406389    where id=&id;
2406390    by LHS;
2406391    run;
2406392    %let dsid = %sysfunc(open(_tempid));
2406393    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2406394    %let dsid = %sysfunc(close(&dsid));
2406395    %if ^&&nobs&id %then %do;
2406396    proc datasets lib=work nolist;
2406397    delete _tempid;
2406398    run;
2406399    quit;
2406400    %end;
2406401    %else %do;
2406402    data _tempAll;
2406403    set %let j=%eval(&id-1);
2406404    %do x=1 %to &j;
2406405    %if &&nobs&x %then %do;
2406406    _temp&x %end;
2406407    %end;
2406408    ;
2406409    run;
2406410    proc sql;
2406411    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
2406411  ! work._tempid p2 where p.name=p2.lhs;
2406412    quit;
2406413    data _temp&id;
2406414    set _temp&id;
2406415    where LHS ne '' and NAME ne '' and Node ne '';
2406416    run;
2406417    proc datasets lib=work nolist;
2406418    delete _tempAll;
2406419    run;
2406420    %let dsid = %sysfunc(open(_temp&id));
2406421    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2406422    %let dsid = %sysfunc(close(&dsid));
2406423    %if ^&&nobs&id %then %do;
2406424    proc datasets lib=work nolist;
2406425    delete _temp&id;
2406426    run;
2406427    quit;
2406428    %end;
2406429    %else %do;
2406430    %let scoreFlag&id = 1;
2406431    data _temp&id;
2406432    set _temp&id;
2406433    where LHS ne NAME and node ne '';
2406434    run;
2406435    %let dsid = %sysfunc(open(_temp&id));
2406436    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2406437    %let dsid = %sysfunc(close(&dsid));
2406438    %if ^&&nobs&id %then %do;
2406439    proc datasets lib=work nolist;
2406440    delete _temp&id;
2406441    run;
2406442    quit;
2406443    %end;
2406444    %else %do;
2406445    proc sort data=_temp&id nodupkey;
2406446    by LHS NAME;
2406447    run;
2406448    %end;
2406449    %end;
2406450    %end;
2406451    %end;
2406452    %mend varDept;
2406453    %macro optCode(outdata=fcmpdata);
2406454    %global fcmpStart;
2406455    %let fcmpStart = 0;
2406456    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
2406457    %let NumNodes=9;
2406458    %do k=1 %to &NumNodes;
2406459    %vardept(fcmpdata=&outdata, id=&k);
2406460    %end;
2406461    %mend optCode;
2406462    %optcode(outData=EMWS8.Ensmbl44_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl44_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL44_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl44_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 146 observations read from the data set EMWS8.ENSMBL44_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 108 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 38 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl44_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL44_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl44_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL44_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl44_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL44_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 38 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 38 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl44_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL44_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 38 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 42 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl44_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL44_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 38 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 81 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl44_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL44_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl44_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL44_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

2406463    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
2406464    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
2406465    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
2406466    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2406467    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
2406468    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
2406469    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
2406470    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2406471    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2406472    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
2406472  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.

2406473    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

2406474    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
2406475    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
2406476    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2406477    filename _pref
2406477  ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural11\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural11\EMPUBLISHSCORE.sas";
2406478    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2406479    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural11\EMPUBLISHSCORE.sas.
2406480   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2406481   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2406482   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2406483   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2406484   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2406485   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2406486   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2406487   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2406488   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2406489   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2406490   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2406491   +LENGTH _WARN_ $4
2406492   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
2406493   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2406494   +
2406495   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2406496   +
2406497   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2406498   +
2406499   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2406500   +
2406501   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2406502   +
2406503   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2406504   +
2406505   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2406506   +
2406507   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2406508   +
2406509   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2406510   +
2406511   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2406512   +
2406513   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2406514   +
2406515   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2406516   +
2406517   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2406518   +
2406519   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2406520   +
2406521   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2406522   +
2406523   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2406524   +
2406525   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2406526   +
2406527   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2406528   +
2406529   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2406530   +
2406531   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2406532   +
2406533   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2406534   +
2406535   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2406536   +
2406537   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2406538   +
2406539   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2406540   +
2406541   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2406542   +
2406543   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2406544   +
2406545   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2406546   +
2406547   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2406548   +
2406549   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2406550   +
2406551   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2406552   +
2406553   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2406554   +
2406555   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2406556   +
2406557   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2406558   +
2406559   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2406560   +
2406561   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2406562   +
2406563   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2406564   +
2406565   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2406566   +
2406567   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2406568   +
2406569   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2406570   +
2406571   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2406572   +
2406573   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2406574   +
2406575   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2406576   +
2406577   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
2406578   +
2406579   +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
2406580   +
2406581   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
2406582   +
2406583   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
2406584   +
2406585   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
2406586   +
2406587   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
2406588   +
2406589   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
2406590   +
2406591   +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
2406592   +
2406593   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
2406594   +
2406595   +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
2406596   +
2406597   +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
2406598   +
2406599   +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
2406600   +
2406601   +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
2406602   +
2406603   +      label H2x1_6 = 'Hidden: H2x1_=6' ;
MPRINT(EM_DIAGRAM):   label H2x1_6 = 'Hidden: H2x1_=6' ;
2406604   +
2406605   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2406606   +
2406607   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2406608   +
2406609   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2406610   +
2406611   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2406612   +
2406613   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2406614   +
2406615   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2406616   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2406617   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2406618   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2406619   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2406620   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2406621   +end;
MPRINT(EM_DIAGRAM):   end;
2406622   +else do;
MPRINT(EM_DIAGRAM):   else do;
2406623   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2406624   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2406625   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2406626   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2406627   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2406628   +   end;
MPRINT(EM_DIAGRAM):   end;
2406629   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2406630   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2406631   +   end;
MPRINT(EM_DIAGRAM):   end;
2406632   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2406633   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2406634   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2406635   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2406636   +   end;
MPRINT(EM_DIAGRAM):   end;
2406637   +end;
MPRINT(EM_DIAGRAM):   end;
2406638   +
2406639   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2406640   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2406641   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2406642   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2406643   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2406644   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2406645   +end;
MPRINT(EM_DIAGRAM):   end;
2406646   +else do;
MPRINT(EM_DIAGRAM):   else do;
2406647   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2406648   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2406649   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2406650   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2406651   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2406652   +   end;
MPRINT(EM_DIAGRAM):   end;
2406653   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2406654   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2406655   +   end;
MPRINT(EM_DIAGRAM):   end;
2406656   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2406657   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2406658   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2406659   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2406660   +   end;
MPRINT(EM_DIAGRAM):   end;
2406661   +end;
MPRINT(EM_DIAGRAM):   end;
2406662   +
2406663   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2406664   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2406665   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2406666   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2406667   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2406668   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2406669   +end;
MPRINT(EM_DIAGRAM):   end;
2406670   +else do;
MPRINT(EM_DIAGRAM):   else do;
2406671   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2406672   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2406673   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2406674   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2406675   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2406676   +   end;
MPRINT(EM_DIAGRAM):   end;
2406677   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2406678   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2406679   +   end;
MPRINT(EM_DIAGRAM):   end;
2406680   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2406681   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2406682   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2406683   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2406684   +   end;
MPRINT(EM_DIAGRAM):   end;
2406685   +end;
MPRINT(EM_DIAGRAM):   end;
2406686   +
2406687   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2406688   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2406689   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2406690   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2406691   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2406692   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2406693   +end;
MPRINT(EM_DIAGRAM):   end;
2406694   +else do;
MPRINT(EM_DIAGRAM):   else do;
2406695   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2406696   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2406697   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2406698   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2406699   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2406700   +   end;
MPRINT(EM_DIAGRAM):   end;
2406701   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2406702   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2406703   +   end;
MPRINT(EM_DIAGRAM):   end;
2406704   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2406705   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2406706   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2406707   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2406708   +   end;
MPRINT(EM_DIAGRAM):   end;
2406709   +end;
MPRINT(EM_DIAGRAM):   end;
2406710   +
2406711   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2406712   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2406713   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2406714   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2406715   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2406716   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2406717   +end;
MPRINT(EM_DIAGRAM):   end;
2406718   +else do;
MPRINT(EM_DIAGRAM):   else do;
2406719   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2406720   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2406721   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2406722   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2406723   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2406724   +   end;
MPRINT(EM_DIAGRAM):   end;
2406725   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2406726   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2406727   +   end;
MPRINT(EM_DIAGRAM):   end;
2406728   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2406729   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2406730   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2406731   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2406732   +   end;
MPRINT(EM_DIAGRAM):   end;
2406733   +end;
MPRINT(EM_DIAGRAM):   end;
2406734   +
2406735   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2406736   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2406737   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2406738   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2406739   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2406740   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2406741   +end;
MPRINT(EM_DIAGRAM):   end;
2406742   +else do;
MPRINT(EM_DIAGRAM):   else do;
2406743   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2406744   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2406745   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2406746   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2406747   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2406748   +   end;
MPRINT(EM_DIAGRAM):   end;
2406749   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2406750   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2406751   +   end;
MPRINT(EM_DIAGRAM):   end;
2406752   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2406753   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2406754   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2406755   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2406756   +   end;
MPRINT(EM_DIAGRAM):   end;
2406757   +end;
MPRINT(EM_DIAGRAM):   end;
2406758   +
2406759   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2406760   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2406761   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2406762   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2406763   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2406764   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2406765   +end;
MPRINT(EM_DIAGRAM):   end;
2406766   +else do;
MPRINT(EM_DIAGRAM):   else do;
2406767   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2406768   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2406769   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2406770   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2406771   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2406772   +   end;
MPRINT(EM_DIAGRAM):   end;
2406773   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2406774   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2406775   +   end;
MPRINT(EM_DIAGRAM):   end;
2406776   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2406777   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2406778   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2406779   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2406780   +   end;
MPRINT(EM_DIAGRAM):   end;
2406781   +end;
MPRINT(EM_DIAGRAM):   end;
2406782   +
2406783   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2406784   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
2406785   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2406786   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2406787   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2406788   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2406789   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2406790   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2406791   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2406792   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2406793   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2406794   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2406795   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2406796   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2406797   +end;
MPRINT(EM_DIAGRAM):   end;
2406798   +else do;
MPRINT(EM_DIAGRAM):   else do;
2406799   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2406800   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2406801   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2406802   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2406803   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2406804   +   end;
MPRINT(EM_DIAGRAM):   end;
2406805   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2406806   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2406807   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2406808   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2406809   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2406810   +   end;
MPRINT(EM_DIAGRAM):   end;
2406811   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2406812   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2406813   +   end;
MPRINT(EM_DIAGRAM):   end;
2406814   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2406815   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2406816   +   end;
MPRINT(EM_DIAGRAM):   end;
2406817   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2406818   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2406819   +   end;
MPRINT(EM_DIAGRAM):   end;
2406820   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2406821   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2406822   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2406823   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2406824   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2406825   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2406826   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2406827   +   end;
MPRINT(EM_DIAGRAM):   end;
2406828   +end;
MPRINT(EM_DIAGRAM):   end;
2406829   +
2406830   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2406831   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2406832   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
2406833   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2406834   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2406835   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2406836   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2406837   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2406838   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2406839   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2406840   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2406841   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2406842   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2406843   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2406844   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2406845   +end;
MPRINT(EM_DIAGRAM):   end;
2406846   +else do;
MPRINT(EM_DIAGRAM):   else do;
2406847   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2406848   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2406849   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2406850   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2406851   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2406852   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2406853   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2406854   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2406855   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2406856   +         end;
MPRINT(EM_DIAGRAM):   end;
2406857   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2406858   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2406859   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2406860   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2406861   +            end;
MPRINT(EM_DIAGRAM):   end;
2406862   +         end;
MPRINT(EM_DIAGRAM):   end;
2406863   +      end;
MPRINT(EM_DIAGRAM):   end;
2406864   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2406865   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2406866   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2406867   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2406868   +         end;
MPRINT(EM_DIAGRAM):   end;
2406869   +      end;
MPRINT(EM_DIAGRAM):   end;
2406870   +   end;
MPRINT(EM_DIAGRAM):   end;
2406871   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2406872   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2406873   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2406874   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2406875   +      end;
MPRINT(EM_DIAGRAM):   end;
2406876   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2406877   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2406878   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2406879   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2406880   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2406881   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2406882   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2406883   +         end;
MPRINT(EM_DIAGRAM):   end;
2406884   +      end;
MPRINT(EM_DIAGRAM):   end;
2406885   +   end;
MPRINT(EM_DIAGRAM):   end;
2406886   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2406887   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2406888   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2406889   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2406890   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2406891   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2406892   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2406893   +   end;
MPRINT(EM_DIAGRAM):   end;
2406894   +end;
MPRINT(EM_DIAGRAM):   end;
2406895   +
2406896   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2406897   +*** Checking missing input Interval
2406898   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2406899   +
2406900   +IF NMISS(
2406901   +   AcceptedCmpTotal ,
2406902   +   Age ,
2406903   +   Frq ,
2406904   +   Income ,
2406905   +   Kidhome ,
2406906   +   Mnt ,
2406907   +   MntFishProducts ,
2406908   +   MntFruits ,
2406909   +   MntGoldProds ,
2406910   +   MntMeatProducts ,
2406911   +   MntSweetProducts ,
2406912   +   MntWines ,
2406913   +   MonthsAsCustomer ,
2406914   +   NumCatalogPurchases ,
2406915   +   NumDealsPurchases ,
2406916   +   NumDistPurchases ,
2406917   +   NumStorePurchases ,
2406918   +   NumWebPurchases ,
2406919   +   NumWebVisitsMonth ,
2406920   +   RFMstat ,
2406921   +   RMntFrq ,
2406922   +   Recency ,
2406923   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
2406924   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2406925   +
2406926   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2406927   +END;
MPRINT(EM_DIAGRAM):   END;
2406928   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2406929   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2406930   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2406931   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2406932   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2406933   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2406934   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2406935   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2406936   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2406937   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2406938   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2406939   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2406940   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2406941   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2406942   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2406943   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2406944   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2406945   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2406946   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2406947   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2406948   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2406949   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2406950   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
2406951   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2406952   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2406953   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2406954   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2406955   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2406956   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2406957   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2406958   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2406959   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2406960   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2406961   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2406962   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2406963   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2406964   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2406965   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2406966   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2406967   +END;
MPRINT(EM_DIAGRAM):   END;
2406968   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2406969   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2406970   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2406971   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2406972   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2406973   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2406974   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2406975   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2406976   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2406977   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2406978   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2406979   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2406980   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2406981   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2406982   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2406983   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2406984   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2406985   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2406986   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2406987   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2406988   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2406989   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2406990   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
2406991   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2406992   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2406993   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2406994   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2406995   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2406996   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2406997   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2406998   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2406999   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2407000   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2407001   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
2407002   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2407003   +   ELSE S_NumCatalogPurchases
2407004   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2407005   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2407006   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2407007   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2407008   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2407009   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2407010   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2407011   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2407012   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2407013   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2407014   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2407015   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2407016   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2407017   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2407018   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2407019   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2407020   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2407021   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2407022   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2407023   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2407024   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2407025   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2407026   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2407027   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2407028   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2407029   +END;
MPRINT(EM_DIAGRAM):   END;
2407030   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2407031   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2407032   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2407033   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2407034   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2407035   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2407036   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2407037   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2407038   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2407039   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2407040   +   H1x1_1  =     0.16786131610493 * S_AcceptedCmpTotal
2407041   +          +     0.08150129707008 * S_Age  +    -0.00076335149511 * S_Frq
2407042   +          +     2.37648351383272 * S_Income  +    -1.63260278456818 *
2407043   +        S_Kidhome  +     -0.6720941090663 * S_Mnt  +    -0.03176174297509 *
2407044   +        S_MntFishProducts  +    -0.03796990721617 * S_MntFruits
2407045   +          +    -0.17020485447842 * S_MntGoldProds  +      0.7709093878281 *
2407046   +        S_MntMeatProducts  +    -0.26168538456938 * S_MntSweetProducts
2407047   +          +    -1.36275284328546 * S_MntWines  +    -0.30344694826738 *
2407048   +        S_MonthsAsCustomer  +     1.68662611500615 * S_NumCatalogPurchases
2407049   +          +     1.32037113020393 * S_NumDealsPurchases
2407050   +          +     0.42879249227132 * S_NumDistPurchases
2407051   +          +    -0.89190172778783 * S_NumStorePurchases
2407052   +          +    -0.87975442613962 * S_NumWebPurchases
2407053   +          +     2.98977282825831 * S_NumWebVisitsMonth
2407054   +          +     0.16388418187981 * S_RFMstat  +     0.63858980984599 *
2407055   +        S_RMntFrq  +    -2.53833222281652 * S_Recency
2407056   +          +    -2.72141665283523 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.16786131610493 * S_AcceptedCmpTotal + 0.08150129707008 * 
S_Age + -0.00076335149511 * S_Frq + 2.37648351383272 * S_Income + -1.63260278456818 * 
S_Kidhome + -0.6720941090663 * S_Mnt + -0.03176174297509 * S_MntFishProducts + 
-0.03796990721617 * S_MntFruits + -0.17020485447842 * S_MntGoldProds + 0.7709093878281 * 
S_MntMeatProducts + -0.26168538456938 * S_MntSweetProducts + -1.36275284328546 * S_MntWines + 
-0.30344694826738 * S_MonthsAsCustomer + 1.68662611500615 * S_NumCatalogPurchases + 
1.32037113020393 * S_NumDealsPurchases + 0.42879249227132 * S_NumDistPurchases + 
-0.89190172778783 * S_NumStorePurchases + -0.87975442613962 * S_NumWebPurchases + 
2.98977282825831 * S_NumWebVisitsMonth + 0.16388418187981 * S_RFMstat + 0.63858980984599 * 
S_RMntFrq + -2.53833222281652 * S_Recency + -2.72141665283523 * S_Teenhome ;
2407057   +   H1x1_2  =    -1.16140709294501 * S_AcceptedCmpTotal
2407058   +          +    -0.87210661607894 * S_Age  +    -0.15365607228782 * S_Frq
2407059   +          +    -1.14855351318782 * S_Income  +     -0.3792851632462 *
2407060   +        S_Kidhome  +    -1.20412080219233 * S_Mnt  +     0.98615533034973 *
2407061   +        S_MntFishProducts  +     0.44541456963703 * S_MntFruits
2407062   +          +    -0.86465923336111 * S_MntGoldProds  +    -5.15063925950455 *
2407063   +        S_MntMeatProducts  +     0.54937255903381 * S_MntSweetProducts
2407064   +          +      1.1566197343428 * S_MntWines  +     1.05956341559861 *
2407065   +        S_MonthsAsCustomer  +    -1.51353620179805 * S_NumCatalogPurchases
2407066   +          +    -1.16737670931605 * S_NumDealsPurchases
2407067   +          +     0.08205195039242 * S_NumDistPurchases
2407068   +          +    -0.65367044520084 * S_NumStorePurchases
2407069   +          +     2.39693083674757 * S_NumWebPurchases
2407070   +          +     0.18432526469897 * S_NumWebVisitsMonth
2407071   +          +    -0.81660690569703 * S_RFMstat  +      0.2679378370467 *
2407072   +        S_RMntFrq  +    -0.12214066685673 * S_Recency
2407073   +          +     1.80138107382539 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -1.16140709294501 * S_AcceptedCmpTotal + -0.87210661607894 * 
S_Age + -0.15365607228782 * S_Frq + -1.14855351318782 * S_Income + -0.3792851632462 * 
S_Kidhome + -1.20412080219233 * S_Mnt + 0.98615533034973 * S_MntFishProducts + 
0.44541456963703 * S_MntFruits + -0.86465923336111 * S_MntGoldProds + -5.15063925950455 * 
S_MntMeatProducts + 0.54937255903381 * S_MntSweetProducts + 1.1566197343428 * S_MntWines + 
1.05956341559861 * S_MonthsAsCustomer + -1.51353620179805 * S_NumCatalogPurchases + 
-1.16737670931605 * S_NumDealsPurchases + 0.08205195039242 * S_NumDistPurchases + 
-0.65367044520084 * S_NumStorePurchases + 2.39693083674757 * S_NumWebPurchases + 
0.18432526469897 * S_NumWebVisitsMonth + -0.81660690569703 * S_RFMstat + 0.2679378370467 * 
S_RMntFrq + -0.12214066685673 * S_Recency + 1.80138107382539 * S_Teenhome ;
2407074   +   H1x1_3  =      2.0905555295419 * S_AcceptedCmpTotal
2407075   +          +    -0.23515107640805 * S_Age  +    -0.34980320997139 * S_Frq
2407076   +          +     0.96612788543649 * S_Income  +    -0.57035066115881 *
2407077   +        S_Kidhome  +     0.22762934410578 * S_Mnt  +    -0.52536382903021 *
2407078   +        S_MntFishProducts  +    -1.18451511831956 * S_MntFruits
2407079   +          +     0.15600368092559 * S_MntGoldProds  +     2.66964572205551 *
2407080   +        S_MntMeatProducts  +    -0.66381928008493 * S_MntSweetProducts
2407081   +          +    -1.34669953562975 * S_MntWines  +     1.35404821514849 *
2407082   +        S_MonthsAsCustomer  +     1.74839628716461 * S_NumCatalogPurchases
2407083   +          +     0.76616480025024 * S_NumDealsPurchases
2407084   +          +     0.42823368706255 * S_NumDistPurchases
2407085   +          +    -1.16998364854907 * S_NumStorePurchases
2407086   +          +     -1.0841896541746 * S_NumWebPurchases
2407087   +          +     2.74837744375079 * S_NumWebVisitsMonth
2407088   +          +    -0.12893804494501 * S_RFMstat  +    -0.62922223536042 *
2407089   +        S_RMntFrq  +    -5.13438280616518 * S_Recency
2407090   +          +    -0.03717013845941 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 2.0905555295419 * S_AcceptedCmpTotal + -0.23515107640805 * 
S_Age + -0.34980320997139 * S_Frq + 0.96612788543649 * S_Income + -0.57035066115881 * 
S_Kidhome + 0.22762934410578 * S_Mnt + -0.52536382903021 * S_MntFishProducts + 
-1.18451511831956 * S_MntFruits + 0.15600368092559 * S_MntGoldProds + 2.66964572205551 * 
S_MntMeatProducts + -0.66381928008493 * S_MntSweetProducts + -1.34669953562975 * S_MntWines + 
1.35404821514849 * S_MonthsAsCustomer + 1.74839628716461 * S_NumCatalogPurchases + 
0.76616480025024 * S_NumDealsPurchases + 0.42823368706255 * S_NumDistPurchases + 
-1.16998364854907 * S_NumStorePurchases + -1.0841896541746 * S_NumWebPurchases + 
2.74837744375079 * S_NumWebVisitsMonth + -0.12893804494501 * S_RFMstat + -0.62922223536042 * 
S_RMntFrq + -5.13438280616518 * S_Recency + -0.03717013845941 * S_Teenhome ;
2407091   +   H1x1_4  =     0.00721395593412 * S_AcceptedCmpTotal
2407092   +          +    -0.01540387767211 * S_Age  +    -0.84860703860633 * S_Frq
2407093   +          +    -1.02288627805121 * S_Income  +    -1.09101870516967 *
2407094   +        S_Kidhome  +    -0.49364597366691 * S_Mnt  +    -0.46832600024559 *
2407095   +        S_MntFishProducts  +     0.18419647776638 * S_MntFruits
2407096   +          +     0.08548650236624 * S_MntGoldProds  +      3.4353205628246 *
2407097   +        S_MntMeatProducts  +    -0.34836704949861 * S_MntSweetProducts
2407098   +          +    -2.43294028965601 * S_MntWines  +       -0.52018014955 *
2407099   +        S_MonthsAsCustomer  +     0.64700842330282 * S_NumCatalogPurchases
2407100   +          +     0.78421010501058 * S_NumDealsPurchases
2407101   +          +     0.01075885160671 * S_NumDistPurchases
2407102   +          +    -1.99395040717832 * S_NumStorePurchases
2407103   +          +    -1.02908330834262 * S_NumWebPurchases
2407104   +          +     2.79163466516477 * S_NumWebVisitsMonth
2407105   +          +    -0.02537920152644 * S_RFMstat  +    -0.42457000565561 *
2407106   +        S_RMntFrq  +     -2.0907247135068 * S_Recency
2407107   +          +     0.74119954026621 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.00721395593412 * S_AcceptedCmpTotal + -0.01540387767211 * 
S_Age + -0.84860703860633 * S_Frq + -1.02288627805121 * S_Income + -1.09101870516967 * 
S_Kidhome + -0.49364597366691 * S_Mnt + -0.46832600024559 * S_MntFishProducts + 
0.18419647776638 * S_MntFruits + 0.08548650236624 * S_MntGoldProds + 3.4353205628246 * 
S_MntMeatProducts + -0.34836704949861 * S_MntSweetProducts + -2.43294028965601 * S_MntWines + 
-0.52018014955 * S_MonthsAsCustomer + 0.64700842330282 * S_NumCatalogPurchases + 
0.78421010501058 * S_NumDealsPurchases + 0.01075885160671 * S_NumDistPurchases + 
-1.99395040717832 * S_NumStorePurchases + -1.02908330834262 * S_NumWebPurchases + 
2.79163466516477 * S_NumWebVisitsMonth + -0.02537920152644 * S_RFMstat + -0.42457000565561 * 
S_RMntFrq + -2.0907247135068 * S_Recency + 0.74119954026621 * S_Teenhome ;
2407108   +   H1x1_5  =    -1.61701205426558 * S_AcceptedCmpTotal
2407109   +          +     0.08257295395479 * S_Age  +    -0.68185680658717 * S_Frq
2407110   +          +    -1.39465125759406 * S_Income  +    -1.25029109577242 *
2407111   +        S_Kidhome  +    -1.09090107886966 * S_Mnt  +     1.64350195586938 *
2407112   +        S_MntFishProducts  +      0.5087421773332 * S_MntFruits
2407113   +          +      0.4047616469084 * S_MntGoldProds  +    -7.16241250715453 *
2407114   +        S_MntMeatProducts  +    -0.92562420397097 * S_MntSweetProducts
2407115   +          +     1.87307481667927 * S_MntWines  +    -0.53417946416471 *
2407116   +        S_MonthsAsCustomer  +    -1.53123660652072 * S_NumCatalogPurchases
2407117   +          +    -1.04219068390022 * S_NumDealsPurchases
2407118   +          +    -0.45770204483973 * S_NumDistPurchases
2407119   +          +    -0.04941442229195 * S_NumStorePurchases
2407120   +          +     0.67187353161183 * S_NumWebPurchases
2407121   +          +     2.01907760553871 * S_NumWebVisitsMonth
2407122   +          +    -1.68329765100269 * S_RFMstat  +     0.29244142334331 *
2407123   +        S_RMntFrq  +    -1.12913051410394 * S_Recency
2407124   +          +     0.43082751824484 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.61701205426558 * S_AcceptedCmpTotal + 0.08257295395479 * 
S_Age + -0.68185680658717 * S_Frq + -1.39465125759406 * S_Income + -1.25029109577242 * 
S_Kidhome + -1.09090107886966 * S_Mnt + 1.64350195586938 * S_MntFishProducts + 0.5087421773332 
* S_MntFruits + 0.4047616469084 * S_MntGoldProds + -7.16241250715453 * S_MntMeatProducts + 
-0.92562420397097 * S_MntSweetProducts + 1.87307481667927 * S_MntWines + -0.53417946416471 * 
S_MonthsAsCustomer + -1.53123660652072 * S_NumCatalogPurchases + -1.04219068390022 * 
S_NumDealsPurchases + -0.45770204483973 * S_NumDistPurchases + -0.04941442229195 * 
S_NumStorePurchases + 0.67187353161183 * S_NumWebPurchases + 2.01907760553871 * 
S_NumWebVisitsMonth + -1.68329765100269 * S_RFMstat + 0.29244142334331 * S_RMntFrq + 
-1.12913051410394 * S_Recency + 0.43082751824484 * S_Teenhome ;
2407125   +   H1x1_1  = H1x1_1  +    -0.44646416045725 * AcceptedCmp10
2407126   +          +    -0.51992887099168 * AcceptedCmp20  +    -1.12974688442196 *
2407127   +        AcceptedCmp30  +    -0.25247614927616 * AcceptedCmp40
2407128   +          +     -1.0839587453165 * AcceptedCmp50  +    -0.37542128912082 *
2407129   +        Complain0  +     0.50509109375746 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.44646416045725 * AcceptedCmp10 + -0.51992887099168 
* AcceptedCmp20 + -1.12974688442196 * AcceptedCmp30 + -0.25247614927616 * AcceptedCmp40 + 
-1.0839587453165 * AcceptedCmp50 + -0.37542128912082 * Complain0 + 0.50509109375746 * 
HigherEducationBinary0 ;
2407130   +   H1x1_2  = H1x1_2  +     1.41785862418118 * AcceptedCmp10
2407131   +          +     0.14869386732553 * AcceptedCmp20  +    -0.34292007253529 *
2407132   +        AcceptedCmp30  +    -0.46450669830265 * AcceptedCmp40
2407133   +          +    -0.84675597945703 * AcceptedCmp50  +     -0.0664649548734 *
2407134   +        Complain0  +    -0.45532665777266 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 1.41785862418118 * AcceptedCmp10 + 0.14869386732553 * 
AcceptedCmp20 + -0.34292007253529 * AcceptedCmp30 + -0.46450669830265 * AcceptedCmp40 + 
-0.84675597945703 * AcceptedCmp50 + -0.0664649548734 * Complain0 + -0.45532665777266 * 
HigherEducationBinary0 ;
2407135   +   H1x1_3  = H1x1_3  +    -0.77549230890552 * AcceptedCmp10
2407136   +          +    -1.36005205352388 * AcceptedCmp20  +    -0.77268925112364 *
2407137   +        AcceptedCmp30  +    -1.48651970256564 * AcceptedCmp40
2407138   +          +    -1.49771960438108 * AcceptedCmp50  +     0.05855673938529 *
2407139   +        Complain0  +      0.5650947463497 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.77549230890552 * AcceptedCmp10 + -1.36005205352388 
* AcceptedCmp20 + -0.77268925112364 * AcceptedCmp30 + -1.48651970256564 * AcceptedCmp40 + 
-1.49771960438108 * AcceptedCmp50 + 0.05855673938529 * Complain0 + 0.5650947463497 * 
HigherEducationBinary0 ;
2407140   +   H1x1_4  = H1x1_4  +    -0.67577364181798 * AcceptedCmp10
2407141   +          +    -0.90920539880387 * AcceptedCmp20  +    -0.10856872028934 *
2407142   +        AcceptedCmp30  +    -0.17408320421731 * AcceptedCmp40
2407143   +          +    -0.40718112138881 * AcceptedCmp50  +    -1.15772819875829 *
2407144   +        Complain0  +    -0.63688652305256 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.67577364181798 * AcceptedCmp10 + -0.90920539880387 
* AcceptedCmp20 + -0.10856872028934 * AcceptedCmp30 + -0.17408320421731 * AcceptedCmp40 + 
-0.40718112138881 * AcceptedCmp50 + -1.15772819875829 * Complain0 + -0.63688652305256 * 
HigherEducationBinary0 ;
2407145   +   H1x1_5  = H1x1_5  +      -0.257461635853 * AcceptedCmp10
2407146   +          +    -0.53931888306725 * AcceptedCmp20  +    -0.18314917937273 *
2407147   +        AcceptedCmp30  +    -0.63373606551928 * AcceptedCmp40
2407148   +          +    -0.22117496766649 * AcceptedCmp50  +    -0.96313784449205 *
2407149   +        Complain0  +    -0.42031825118642 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.257461635853 * AcceptedCmp10 + -0.53931888306725 * 
AcceptedCmp20 + -0.18314917937273 * AcceptedCmp30 + -0.63373606551928 * AcceptedCmp40 + 
-0.22117496766649 * AcceptedCmp50 + -0.96313784449205 * Complain0 + -0.42031825118642 * 
HigherEducationBinary0 ;
2407150   +   H1x1_1  = H1x1_1  +    -0.61947659516101 * Education2n_Cycle
2407151   +          +     0.35542867116569 * EducationBasic  +    -0.40115062807285 *
2407152   +        EducationGraduation  +     0.09596442360106 * EducationMaster
2407153   +          +     2.58907527032049 * Marital_StatusDivorced
2407154   +          +    -2.45549008158921 * Marital_StatusMarried
2407155   +          +     2.56223650840768 * Marital_StatusSingle
2407156   +          +    -2.57680442835747 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.61947659516101 * Education2n_Cycle + 
0.35542867116569 * EducationBasic + -0.40115062807285 * EducationGraduation + 0.09596442360106 
* EducationMaster + 2.58907527032049 * Marital_StatusDivorced + -2.45549008158921 * 
Marital_StatusMarried + 2.56223650840768 * Marital_StatusSingle + -2.57680442835747 * 
Marital_StatusTogether ;
2407157   +   H1x1_2  = H1x1_2  +    -0.89996232033524 * Education2n_Cycle
2407158   +          +     0.51901949778729 * EducationBasic  +     0.48428543845596 *
2407159   +        EducationGraduation  +     0.29249899969052 * EducationMaster
2407160   +          +     0.83917299191368 * Marital_StatusDivorced
2407161   +          +    -0.62624692699191 * Marital_StatusMarried
2407162   +          +    -0.22585060624911 * Marital_StatusSingle
2407163   +          +    -1.13600554287291 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.89996232033524 * Education2n_Cycle + 
0.51901949778729 * EducationBasic + 0.48428543845596 * EducationGraduation + 0.29249899969052 
* EducationMaster + 0.83917299191368 * Marital_StatusDivorced + -0.62624692699191 * 
Marital_StatusMarried + -0.22585060624911 * Marital_StatusSingle + -1.13600554287291 * 
Marital_StatusTogether ;
2407164   +   H1x1_3  = H1x1_3  +    -0.14267095105584 * Education2n_Cycle
2407165   +          +    -0.02301358792856 * EducationBasic  +     0.52040244367562 *
2407166   +        EducationGraduation  +     -1.3163356801876 * EducationMaster
2407167   +          +    -0.65063506696715 * Marital_StatusDivorced
2407168   +          +    -2.37495865381256 * Marital_StatusMarried
2407169   +          +    -0.54954654146904 * Marital_StatusSingle
2407170   +          +    -2.20184943463859 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.14267095105584 * Education2n_Cycle + 
-0.02301358792856 * EducationBasic + 0.52040244367562 * EducationGraduation + -1.3163356801876 
* EducationMaster + -0.65063506696715 * Marital_StatusDivorced + -2.37495865381256 * 
Marital_StatusMarried + -0.54954654146904 * Marital_StatusSingle + -2.20184943463859 * 
Marital_StatusTogether ;
2407171   +   H1x1_4  = H1x1_4  +     0.07824072331908 * Education2n_Cycle
2407172   +          +    -0.70728597193571 * EducationBasic  +    -0.08522817414387 *
2407173   +        EducationGraduation  +     0.07916018399549 * EducationMaster
2407174   +          +     0.16185824798364 * Marital_StatusDivorced
2407175   +          +    -0.08142416735136 * Marital_StatusMarried
2407176   +          +    -0.20392270385969 * Marital_StatusSingle
2407177   +          +    -0.16702436233017 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.07824072331908 * Education2n_Cycle + 
-0.70728597193571 * EducationBasic + -0.08522817414387 * EducationGraduation + 
0.07916018399549 * EducationMaster + 0.16185824798364 * Marital_StatusDivorced + 
-0.08142416735136 * Marital_StatusMarried + -0.20392270385969 * Marital_StatusSingle + 
-0.16702436233017 * Marital_StatusTogether ;
2407178   +   H1x1_5  = H1x1_5  +    -0.24374540557838 * Education2n_Cycle
2407179   +          +    -0.69820143786999 * EducationBasic  +    -0.60198982003005 *
2407180   +        EducationGraduation  +     0.28107355175103 * EducationMaster
2407181   +          +      -0.516522631078 * Marital_StatusDivorced
2407182   +          +    -0.61661247789976 * Marital_StatusMarried
2407183   +          +    -0.99533130308294 * Marital_StatusSingle
2407184   +          +    -0.36897004084592 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.24374540557838 * Education2n_Cycle + 
-0.69820143786999 * EducationBasic + -0.60198982003005 * EducationGraduation + 
0.28107355175103 * EducationMaster + -0.516522631078 * Marital_StatusDivorced + 
-0.61661247789976 * Marital_StatusMarried + -0.99533130308294 * Marital_StatusSingle + 
-0.36897004084592 * Marital_StatusTogether ;
2407185   +   H1x1_1  =    -2.48464133714558 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -2.48464133714558 + H1x1_1 ;
2407186   +   H1x1_2  =    -1.27353840480002 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -1.27353840480002 + H1x1_2 ;
2407187   +   H1x1_3  =    -1.74000879961851 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.74000879961851 + H1x1_3 ;
2407188   +   H1x1_4  =    -0.38838285632991 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.38838285632991 + H1x1_4 ;
2407189   +   H1x1_5  =    -0.14124488553728 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.14124488553728 + H1x1_5 ;
2407190   +   H1x1_6  = 0;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0;
2407191   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
2407192   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2407193   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
2407194   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
2407195   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
2407196   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
2407197   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
2407198   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
2407199   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
2407200   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
2407201   +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
2407202   +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
2407203   +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
2407204   +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
2407205   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
2407206   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
2407207   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
2407208   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
2407209   +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
2407210   +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
2407211   +END;
MPRINT(EM_DIAGRAM):   END;
2407212   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2407213   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2407214   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2407215   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2407216   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2407217   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
2407218   +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
2407219   +END;
MPRINT(EM_DIAGRAM):   END;
2407220   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2407221   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
2407222   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2407223   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2407224   +   H1x2_1  =     0.48404108721156 * S_AcceptedCmpTotal
2407225   +          +    -0.27070568741648 * S_Age  +    -0.78729393257177 * S_Frq
2407226   +          +    -0.22841203379079 * S_Income  +      1.7948359601764 *
2407227   +        S_Kidhome  +     0.16415271082275 * S_Mnt  +     0.68709045116477 *
2407228   +        S_MntFishProducts  +     1.40499150479431 * S_MntFruits
2407229   +          +     1.76690927096327 * S_MntGoldProds  +    -0.47805967324795 *
2407230   +        S_MntMeatProducts  +    -1.98462171861386 * S_MntSweetProducts
2407231   +          +     0.17732042205332 * S_MntWines  +    -2.68647979937092 *
2407232   +        S_MonthsAsCustomer  +     0.66724634672152 * S_NumCatalogPurchases
2407233   +          +    -0.03801022287706 * S_NumDealsPurchases
2407234   +          +    -1.50723574966419 * S_NumDistPurchases
2407235   +          +    -0.21514545448485 * S_NumStorePurchases
2407236   +          +    -0.50179555233865 * S_NumWebPurchases
2407237   +          +    -0.68226572560161 * S_NumWebVisitsMonth
2407238   +          +    -1.16287961930374 * S_RFMstat  +    -0.10835316604382 *
2407239   +        S_RMntFrq  +     0.78178939203913 * S_Recency
2407240   +          +     0.99430928489958 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.48404108721156 * S_AcceptedCmpTotal + -0.27070568741648 * 
S_Age + -0.78729393257177 * S_Frq + -0.22841203379079 * S_Income + 1.7948359601764 * S_Kidhome 
+ 0.16415271082275 * S_Mnt + 0.68709045116477 * S_MntFishProducts + 1.40499150479431 * 
S_MntFruits + 1.76690927096327 * S_MntGoldProds + -0.47805967324795 * S_MntMeatProducts + 
-1.98462171861386 * S_MntSweetProducts + 0.17732042205332 * S_MntWines + -2.68647979937092 * 
S_MonthsAsCustomer + 0.66724634672152 * S_NumCatalogPurchases + -0.03801022287706 * 
S_NumDealsPurchases + -1.50723574966419 * S_NumDistPurchases + -0.21514545448485 * 
S_NumStorePurchases + -0.50179555233865 * S_NumWebPurchases + -0.68226572560161 * 
S_NumWebVisitsMonth + -1.16287961930374 * S_RFMstat + -0.10835316604382 * S_RMntFrq + 
0.78178939203913 * S_Recency + 0.99430928489958 * S_Teenhome ;
2407241   +   H1x2_2  =    -0.36352858735119 * S_AcceptedCmpTotal
2407242   +          +    -0.57224467079409 * S_Age  +    -1.50170848997829 * S_Frq
2407243   +          +    -0.38902839025885 * S_Income  +     -1.1798795668612 *
2407244   +        S_Kidhome  +     -0.1290183198617 * S_Mnt  +     0.76723261406072 *
2407245   +        S_MntFishProducts  +     -0.2940014517298 * S_MntFruits
2407246   +          +     1.10823983171432 * S_MntGoldProds  +    -0.31483479967732 *
2407247   +        S_MntMeatProducts  +     1.52044892546638 * S_MntSweetProducts
2407248   +          +     0.93667207634948 * S_MntWines  +     1.38654947651763 *
2407249   +        S_MonthsAsCustomer  +     0.60618457384701 * S_NumCatalogPurchases
2407250   +          +     0.70551335536975 * S_NumDealsPurchases
2407251   +          +     0.02824488988803 * S_NumDistPurchases
2407252   +          +    -0.47958123842808 * S_NumStorePurchases
2407253   +          +     1.04559003239583 * S_NumWebPurchases
2407254   +          +    -0.58386087813772 * S_NumWebVisitsMonth
2407255   +          +     0.30550498646512 * S_RFMstat  +     0.30157778523343 *
2407256   +        S_RMntFrq  +    -0.05848082255965 * S_Recency
2407257   +          +     1.93017367885145 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.36352858735119 * S_AcceptedCmpTotal + -0.57224467079409 * 
S_Age + -1.50170848997829 * S_Frq + -0.38902839025885 * S_Income + -1.1798795668612 * 
S_Kidhome + -0.1290183198617 * S_Mnt + 0.76723261406072 * S_MntFishProducts + -0.2940014517298 
* S_MntFruits + 1.10823983171432 * S_MntGoldProds + -0.31483479967732 * S_MntMeatProducts + 
1.52044892546638 * S_MntSweetProducts + 0.93667207634948 * S_MntWines + 1.38654947651763 * 
S_MonthsAsCustomer + 0.60618457384701 * S_NumCatalogPurchases + 0.70551335536975 * 
S_NumDealsPurchases + 0.02824488988803 * S_NumDistPurchases + -0.47958123842808 * 
S_NumStorePurchases + 1.04559003239583 * S_NumWebPurchases + -0.58386087813772 * 
S_NumWebVisitsMonth + 0.30550498646512 * S_RFMstat + 0.30157778523343 * S_RMntFrq + 
-0.05848082255965 * S_Recency + 1.93017367885145 * S_Teenhome ;
2407258   +   H1x2_3  =    -1.42573562358231 * S_AcceptedCmpTotal
2407259   +          +    -1.32139459670271 * S_Age  +    -0.65089374259133 * S_Frq
2407260   +          +     0.40762251828155 * S_Income  +     0.07844400105703 *
2407261   +        S_Kidhome  +     0.50965373569965 * S_Mnt  +     0.16029734923155 *
2407262   +        S_MntFishProducts  +     0.09920766855666 * S_MntFruits
2407263   +          +     1.72613699296152 * S_MntGoldProds  +    -0.05634715837952 *
2407264   +        S_MntMeatProducts  +    -0.46288044931269 * S_MntSweetProducts
2407265   +          +    -1.56275217321856 * S_MntWines  +     0.47573724745363 *
2407266   +        S_MonthsAsCustomer  +     0.24362096681468 * S_NumCatalogPurchases
2407267   +          +    -0.28907339261907 * S_NumDealsPurchases
2407268   +          +     0.04310505858352 * S_NumDistPurchases
2407269   +          +    -0.99594604666889 * S_NumStorePurchases
2407270   +          +    -0.58870940220114 * S_NumWebPurchases
2407271   +          +     0.84018399925148 * S_NumWebVisitsMonth
2407272   +          +    -0.19517311010454 * S_RFMstat  +     -0.3463233802461 *
2407273   +        S_RMntFrq  +    -1.47730936960999 * S_Recency
2407274   +          +    -0.88597688046705 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -1.42573562358231 * S_AcceptedCmpTotal + -1.32139459670271 * 
S_Age + -0.65089374259133 * S_Frq + 0.40762251828155 * S_Income + 0.07844400105703 * S_Kidhome 
+ 0.50965373569965 * S_Mnt + 0.16029734923155 * S_MntFishProducts + 0.09920766855666 * 
S_MntFruits + 1.72613699296152 * S_MntGoldProds + -0.05634715837952 * S_MntMeatProducts + 
-0.46288044931269 * S_MntSweetProducts + -1.56275217321856 * S_MntWines + 0.47573724745363 * 
S_MonthsAsCustomer + 0.24362096681468 * S_NumCatalogPurchases + -0.28907339261907 * 
S_NumDealsPurchases + 0.04310505858352 * S_NumDistPurchases + -0.99594604666889 * 
S_NumStorePurchases + -0.58870940220114 * S_NumWebPurchases + 0.84018399925148 * 
S_NumWebVisitsMonth + -0.19517311010454 * S_RFMstat + -0.3463233802461 * S_RMntFrq + 
-1.47730936960999 * S_Recency + -0.88597688046705 * S_Teenhome ;
2407275   +   H1x2_4  =     0.11016580381662 * S_AcceptedCmpTotal
2407276   +          +     0.30908576425954 * S_Age  +     0.34179480828109 * S_Frq
2407277   +          +     0.40584056795753 * S_Income  +    -0.45712899846476 *
2407278   +        S_Kidhome  +     1.12080510316382 * S_Mnt  +     0.48988466623601 *
2407279   +        S_MntFishProducts  +    -0.33589219598754 * S_MntFruits
2407280   +          +     0.89305356089927 * S_MntGoldProds  +    -2.00512215642683 *
2407281   +        S_MntMeatProducts  +     1.10859074670332 * S_MntSweetProducts
2407282   +          +     -1.0064133988839 * S_MntWines  +      0.7768603559605 *
2407283   +        S_MonthsAsCustomer  +     0.97922554259242 * S_NumCatalogPurchases
2407284   +          +     0.52917289878604 * S_NumDealsPurchases
2407285   +          +     0.30974142545809 * S_NumDistPurchases
2407286   +          +    -0.36081450643799 * S_NumStorePurchases
2407287   +          +    -0.28418053386759 * S_NumWebPurchases
2407288   +          +    -0.80759462497096 * S_NumWebVisitsMonth
2407289   +          +    -1.12633439579018 * S_RFMstat  +    -0.14662678398603 *
2407290   +        S_RMntFrq  +    -0.02418118976368 * S_Recency
2407291   +          +    -0.46548253671298 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.11016580381662 * S_AcceptedCmpTotal + 0.30908576425954 * 
S_Age + 0.34179480828109 * S_Frq + 0.40584056795753 * S_Income + -0.45712899846476 * S_Kidhome 
+ 1.12080510316382 * S_Mnt + 0.48988466623601 * S_MntFishProducts + -0.33589219598754 * 
S_MntFruits + 0.89305356089927 * S_MntGoldProds + -2.00512215642683 * S_MntMeatProducts + 
1.10859074670332 * S_MntSweetProducts + -1.0064133988839 * S_MntWines + 0.7768603559605 * 
S_MonthsAsCustomer + 0.97922554259242 * S_NumCatalogPurchases + 0.52917289878604 * 
S_NumDealsPurchases + 0.30974142545809 * S_NumDistPurchases + -0.36081450643799 * 
S_NumStorePurchases + -0.28418053386759 * S_NumWebPurchases + -0.80759462497096 * 
S_NumWebVisitsMonth + -1.12633439579018 * S_RFMstat + -0.14662678398603 * S_RMntFrq + 
-0.02418118976368 * S_Recency + -0.46548253671298 * S_Teenhome ;
2407292   +   H1x2_5  =    -0.55551536908819 * S_AcceptedCmpTotal
2407293   +          +    -0.09163465220674 * S_Age  +    -0.35937602626275 * S_Frq
2407294   +          +     0.61145646041534 * S_Income  +     0.28920493959955 *
2407295   +        S_Kidhome  +     0.71661843805688 * S_Mnt  +     0.25254041554237 *
2407296   +        S_MntFishProducts  +    -0.38704785732563 * S_MntFruits
2407297   +          +    -0.16912995068939 * S_MntGoldProds  +     0.21440191729631 *
2407298   +        S_MntMeatProducts  +    -0.49507693220329 * S_MntSweetProducts
2407299   +          +      0.3153765288287 * S_MntWines  +    -0.15329574285112 *
2407300   +        S_MonthsAsCustomer  +     1.28722879296429 * S_NumCatalogPurchases
2407301   +          +    -0.47500053723253 * S_NumDealsPurchases
2407302   +          +     0.41421086319635 * S_NumDistPurchases
2407303   +          +     0.69664835428137 * S_NumStorePurchases
2407304   +          +     0.66359306812968 * S_NumWebPurchases
2407305   +          +     0.77931462528741 * S_NumWebVisitsMonth
2407306   +          +     0.05868786291548 * S_RFMstat  +     0.77672802649379 *
2407307   +        S_RMntFrq  +    -1.91226042675868 * S_Recency
2407308   +          +     1.79227856637688 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.55551536908819 * S_AcceptedCmpTotal + -0.09163465220674 * 
S_Age + -0.35937602626275 * S_Frq + 0.61145646041534 * S_Income + 0.28920493959955 * S_Kidhome 
+ 0.71661843805688 * S_Mnt + 0.25254041554237 * S_MntFishProducts + -0.38704785732563 * 
S_MntFruits + -0.16912995068939 * S_MntGoldProds + 0.21440191729631 * S_MntMeatProducts + 
-0.49507693220329 * S_MntSweetProducts + 0.3153765288287 * S_MntWines + -0.15329574285112 * 
S_MonthsAsCustomer + 1.28722879296429 * S_NumCatalogPurchases + -0.47500053723253 * 
S_NumDealsPurchases + 0.41421086319635 * S_NumDistPurchases + 0.69664835428137 * 
S_NumStorePurchases + 0.66359306812968 * S_NumWebPurchases + 0.77931462528741 * 
S_NumWebVisitsMonth + 0.05868786291548 * S_RFMstat + 0.77672802649379 * S_RMntFrq + 
-1.91226042675868 * S_Recency + 1.79227856637688 * S_Teenhome ;
2407309   +   H1x2_1  = H1x2_1  +     1.13471289065691 * AcceptedCmp10
2407310   +          +     0.65974383309652 * AcceptedCmp20  +    -1.87292531678796 *
2407311   +        AcceptedCmp30  +      -1.353797047409 * AcceptedCmp40
2407312   +          +     0.20616786486771 * AcceptedCmp50  +    -0.38264326101775 *
2407313   +        Complain0  +    -0.17807638061615 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 1.13471289065691 * AcceptedCmp10 + 0.65974383309652 * 
AcceptedCmp20 + -1.87292531678796 * AcceptedCmp30 + -1.353797047409 * AcceptedCmp40 + 
0.20616786486771 * AcceptedCmp50 + -0.38264326101775 * Complain0 + -0.17807638061615 * 
HigherEducationBinary0 ;
2407314   +   H1x2_2  = H1x2_2  +     1.21347348622419 * AcceptedCmp10
2407315   +          +    -0.25372740217388 * AcceptedCmp20  +     1.86937589112006 *
2407316   +        AcceptedCmp30  +    -0.04754722838516 * AcceptedCmp40
2407317   +          +    -0.08078800460742 * AcceptedCmp50  +     1.62387969342769 *
2407318   +        Complain0  +    -0.78004732229344 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 1.21347348622419 * AcceptedCmp10 + -0.25372740217388 * 
AcceptedCmp20 + 1.86937589112006 * AcceptedCmp30 + -0.04754722838516 * AcceptedCmp40 + 
-0.08078800460742 * AcceptedCmp50 + 1.62387969342769 * Complain0 + -0.78004732229344 * 
HigherEducationBinary0 ;
2407319   +   H1x2_3  = H1x2_3  +    -0.02152665189186 * AcceptedCmp10
2407320   +          +     0.57207081192818 * AcceptedCmp20  +      0.6212177562119 *
2407321   +        AcceptedCmp30  +    -0.73691462528053 * AcceptedCmp40
2407322   +          +    -0.35326427815838 * AcceptedCmp50  +     0.14875513793176 *
2407323   +        Complain0  +    -0.13978395235915 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -0.02152665189186 * AcceptedCmp10 + 0.57207081192818 * 
AcceptedCmp20 + 0.6212177562119 * AcceptedCmp30 + -0.73691462528053 * AcceptedCmp40 + 
-0.35326427815838 * AcceptedCmp50 + 0.14875513793176 * Complain0 + -0.13978395235915 * 
HigherEducationBinary0 ;
2407324   +   H1x2_4  = H1x2_4  +     0.87315450122595 * AcceptedCmp10
2407325   +          +      0.7868322457627 * AcceptedCmp20  +    -0.23332719513906 *
2407326   +        AcceptedCmp30  +    -0.68817918979928 * AcceptedCmp40
2407327   +          +    -0.57204462412445 * AcceptedCmp50  +    -0.86223238269616 *
2407328   +        Complain0  +     -0.3126348645458 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.87315450122595 * AcceptedCmp10 + 0.7868322457627 * 
AcceptedCmp20 + -0.23332719513906 * AcceptedCmp30 + -0.68817918979928 * AcceptedCmp40 + 
-0.57204462412445 * AcceptedCmp50 + -0.86223238269616 * Complain0 + -0.3126348645458 * 
HigherEducationBinary0 ;
2407329   +   H1x2_5  = H1x2_5  +     0.29282165496733 * AcceptedCmp10
2407330   +          +     1.51708756092369 * AcceptedCmp20  +     1.20268215158483 *
2407331   +        AcceptedCmp30  +     0.30521477351547 * AcceptedCmp40
2407332   +          +    -0.58691162701837 * AcceptedCmp50  +     0.75641665624817 *
2407333   +        Complain0  +      0.7018761099345 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.29282165496733 * AcceptedCmp10 + 1.51708756092369 * 
AcceptedCmp20 + 1.20268215158483 * AcceptedCmp30 + 0.30521477351547 * AcceptedCmp40 + 
-0.58691162701837 * AcceptedCmp50 + 0.75641665624817 * Complain0 + 0.7018761099345 * 
HigherEducationBinary0 ;
2407334   +   H1x2_1  = H1x2_1  +    -0.68955031483686 * Education2n_Cycle
2407335   +          +    -1.63162976419312 * EducationBasic  +     1.58569020932253 *
2407336   +        EducationGraduation  +     0.89392741557091 * EducationMaster
2407337   +          +    -1.34742914042312 * Marital_StatusDivorced
2407338   +          +    -0.75378934918763 * Marital_StatusMarried
2407339   +          +    -1.85411678929217 * Marital_StatusSingle
2407340   +          +     0.34579160965376 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.68955031483686 * Education2n_Cycle + 
-1.63162976419312 * EducationBasic + 1.58569020932253 * EducationGraduation + 0.89392741557091 
* EducationMaster + -1.34742914042312 * Marital_StatusDivorced + -0.75378934918763 * 
Marital_StatusMarried + -1.85411678929217 * Marital_StatusSingle + 0.34579160965376 * 
Marital_StatusTogether ;
2407341   +   H1x2_2  = H1x2_2  +     0.91842441316819 * Education2n_Cycle
2407342   +          +    -0.10372785737624 * EducationBasic  +     1.79022097342125 *
2407343   +        EducationGraduation  +      1.4602485898642 * EducationMaster
2407344   +          +     0.47958659206261 * Marital_StatusDivorced
2407345   +          +     -0.9665584294045 * Marital_StatusMarried
2407346   +          +      0.9733784530538 * Marital_StatusSingle
2407347   +          +     0.19258101270915 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.91842441316819 * Education2n_Cycle + 
-0.10372785737624 * EducationBasic + 1.79022097342125 * EducationGraduation + 1.4602485898642 
* EducationMaster + 0.47958659206261 * Marital_StatusDivorced + -0.9665584294045 * 
Marital_StatusMarried + 0.9733784530538 * Marital_StatusSingle + 0.19258101270915 * 
Marital_StatusTogether ;
2407348   +   H1x2_3  = H1x2_3  +     1.26817216331303 * Education2n_Cycle
2407349   +          +    -1.60153781162075 * EducationBasic  +    -0.32068567398782 *
2407350   +        EducationGraduation  +     1.49772418974753 * EducationMaster
2407351   +          +    -0.56894207908284 * Marital_StatusDivorced
2407352   +          +    -0.96715106987195 * Marital_StatusMarried
2407353   +          +     1.18678144721443 * Marital_StatusSingle
2407354   +          +     1.05940264255347 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 1.26817216331303 * Education2n_Cycle + 
-1.60153781162075 * EducationBasic + -0.32068567398782 * EducationGraduation + 
1.49772418974753 * EducationMaster + -0.56894207908284 * Marital_StatusDivorced + 
-0.96715106987195 * Marital_StatusMarried + 1.18678144721443 * Marital_StatusSingle + 
1.05940264255347 * Marital_StatusTogether ;
2407355   +   H1x2_4  = H1x2_4  +    -1.19824707240276 * Education2n_Cycle
2407356   +          +     0.43905907692169 * EducationBasic  +    -1.18279972023424 *
2407357   +        EducationGraduation  +    -2.01250798855133 * EducationMaster
2407358   +          +     -0.6061959224661 * Marital_StatusDivorced
2407359   +          +     0.03495844244684 * Marital_StatusMarried
2407360   +          +    -0.63896361063244 * Marital_StatusSingle
2407361   +          +     0.74357887057422 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -1.19824707240276 * Education2n_Cycle + 
0.43905907692169 * EducationBasic + -1.18279972023424 * EducationGraduation + 
-2.01250798855133 * EducationMaster + -0.6061959224661 * Marital_StatusDivorced + 
0.03495844244684 * Marital_StatusMarried + -0.63896361063244 * Marital_StatusSingle + 
0.74357887057422 * Marital_StatusTogether ;
2407362   +   H1x2_5  = H1x2_5  +     -0.6530237200396 * Education2n_Cycle
2407363   +          +     0.90062473169279 * EducationBasic  +    -3.01933913602199 *
2407364   +        EducationGraduation  +     -0.1598988619204 * EducationMaster
2407365   +          +     0.82178907301319 * Marital_StatusDivorced
2407366   +          +     1.69543553114589 * Marital_StatusMarried
2407367   +          +     -2.1272067363559 * Marital_StatusSingle
2407368   +          +     0.24274508474634 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + -0.6530237200396 * Education2n_Cycle + 
0.90062473169279 * EducationBasic + -3.01933913602199 * EducationGraduation + -0.1598988619204 
* EducationMaster + 0.82178907301319 * Marital_StatusDivorced + 1.69543553114589 * 
Marital_StatusMarried + -2.1272067363559 * Marital_StatusSingle + 0.24274508474634 * 
Marital_StatusTogether ;
2407369   +   H1x2_1  =     0.30842509451224 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.30842509451224 + H1x2_1 ;
2407370   +   H1x2_2  =     1.79200699407075 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 1.79200699407075 + H1x2_2 ;
2407371   +   H1x2_3  =     0.66706944906809 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = 0.66706944906809 + H1x2_3 ;
2407372   +   H1x2_4  =     -0.7356254138015 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.7356254138015 + H1x2_4 ;
2407373   +   H1x2_5  =    -0.68066575174095 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.68066575174095 + H1x2_5 ;
2407374   +   H1x2_6  = 0;
MPRINT(EM_DIAGRAM):   H1x2_6 = 0;
2407375   +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
2407376   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2407377   +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
2407378   +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
2407379   +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
2407380   +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
2407381   +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
2407382   +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
2407383   +   H1x2_4  = EXP(H1x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(H1x2_4 - _MAX_);
2407384   +   _SUM_ = _SUM_ + H1x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_4 ;
2407385   +   H1x2_5  = EXP(H1x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(H1x2_5 - _MAX_);
2407386   +   _SUM_ = _SUM_ + H1x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_5 ;
2407387   +   H1x2_6  = EXP(H1x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(H1x2_6 - _MAX_);
2407388   +   _SUM_ = _SUM_ + H1x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_6 ;
2407389   +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
2407390   +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
2407391   +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
2407392   +   H1x2_4  = H1x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 / _SUM_;
2407393   +   H1x2_5  = H1x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 / _SUM_;
2407394   +   H1x2_6  = H1x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 / _SUM_;
2407395   +END;
MPRINT(EM_DIAGRAM):   END;
2407396   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2407397   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
2407398   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
2407399   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
2407400   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
2407401   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
2407402   +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
2407403   +END;
MPRINT(EM_DIAGRAM):   END;
2407404   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2407405   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
2407406   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2407407   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2407408   +   H2x1_1  =      0.7656278374321 * H1x1_1  +     1.18988619460831 * H1x1_2
2407409   +          +    -0.68458045558713 * H1x1_3  +     0.49093980591245 * H1x1_4
2407410   +          +    -1.27959429919804 * H1x1_5  +    -1.38760297105319 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 0.7656278374321 * H1x1_1 + 1.18988619460831 * H1x1_2 + 
-0.68458045558713 * H1x1_3 + 0.49093980591245 * H1x1_4 + -1.27959429919804 * H1x1_5 + 
-1.38760297105319 * H1x1_6 ;
2407411   +   H2x1_2  =    -1.48941810274544 * H1x1_1  +     1.75443095464294 * H1x1_2
2407412   +          +    -1.63478694878031 * H1x1_3  +    -0.69296364459258 * H1x1_4
2407413   +          +     3.14007823471691 * H1x1_5  +     2.71965753640902 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -1.48941810274544 * H1x1_1 + 1.75443095464294 * H1x1_2 + 
-1.63478694878031 * H1x1_3 + -0.69296364459258 * H1x1_4 + 3.14007823471691 * H1x1_5 + 
2.71965753640902 * H1x1_6 ;
2407414   +   H2x1_3  =     1.07426996100463 * H1x1_1  +    -1.76796943416489 * H1x1_2
2407415   +          +    -0.11946940948224 * H1x1_3  +     1.25457449221991 * H1x1_4
2407416   +          +     -1.4079980040852 * H1x1_5  +    -0.94725163293394 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.07426996100463 * H1x1_1 + -1.76796943416489 * H1x1_2 + 
-0.11946940948224 * H1x1_3 + 1.25457449221991 * H1x1_4 + -1.4079980040852 * H1x1_5 + 
-0.94725163293394 * H1x1_6 ;
2407417   +   H2x1_4  =    -0.00078893231548 * H1x1_1  +     0.06396324179717 * H1x1_2
2407418   +          +    -0.13674165204668 * H1x1_3  +    -0.26576379023249 * H1x1_4
2407419   +          +     0.44513643867194 * H1x1_5  +     0.66585878141635 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -0.00078893231548 * H1x1_1 + 0.06396324179717 * H1x1_2 + 
-0.13674165204668 * H1x1_3 + -0.26576379023249 * H1x1_4 + 0.44513643867194 * H1x1_5 + 
0.66585878141635 * H1x1_6 ;
2407420   +   H2x1_5  =     -2.8467581879118 * H1x1_1  +     2.94182061339515 * H1x1_2
2407421   +          +    -3.43021438685063 * H1x1_3  +    -4.00045607730935 * H1x1_4
2407422   +          +     3.09230566797337 * H1x1_5  +     3.57592566919388 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -2.8467581879118 * H1x1_1 + 2.94182061339515 * H1x1_2 + 
-3.43021438685063 * H1x1_3 + -4.00045607730935 * H1x1_4 + 3.09230566797337 * H1x1_5 + 
3.57592566919388 * H1x1_6 ;
2407423   +   H2x1_6  =    -0.29912975132561 * H1x1_1  +     0.25554634262501 * H1x1_2
2407424   +          +    -0.62666868576544 * H1x1_3  +     1.54567563696489 * H1x1_4
2407425   +          +     1.87530466579189 * H1x1_5  +    -0.32006241006585 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = -0.29912975132561 * H1x1_1 + 0.25554634262501 * H1x1_2 + 
-0.62666868576544 * H1x1_3 + 1.54567563696489 * H1x1_4 + 1.87530466579189 * H1x1_5 + 
-0.32006241006585 * H1x1_6 ;
2407426   +   H2x1_1  = H2x1_1  +    -0.53923803948063 * H1x2_1
2407427   +          +    -0.14551996067575 * H1x2_2  +     1.15730137448351 * H1x2_3
2407428   +          +     0.02585401686791 * H1x2_4  +     -0.9274056409194 * H1x2_5
2407429   +          +    -0.07237646966438 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -0.53923803948063 * H1x2_1 + -0.14551996067575 * 
H1x2_2 + 1.15730137448351 * H1x2_3 + 0.02585401686791 * H1x2_4 + -0.9274056409194 * H1x2_5 + 
-0.07237646966438 * H1x2_6 ;
2407430   +   H2x1_2  = H2x1_2  +     -0.1441321293455 * H1x2_1
2407431   +          +    -0.53271770203833 * H1x2_2  +    -2.80064282115477 * H1x2_3
2407432   +          +    -1.05759395901612 * H1x2_4  +    -0.55127059339304 * H1x2_5
2407433   +          +     0.35471332651631 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -0.1441321293455 * H1x2_1 + -0.53271770203833 * H1x2_2 
+ -2.80064282115477 * H1x2_3 + -1.05759395901612 * H1x2_4 + -0.55127059339304 * H1x2_5 + 
0.35471332651631 * H1x2_6 ;
2407434   +   H2x1_3  = H2x1_3  +     -0.5351190580444 * H1x2_1
2407435   +          +    -0.02107048725988 * H1x2_2  +    -0.83389437376968 * H1x2_3
2407436   +          +    -0.80183937400902 * H1x2_4  +    -0.66588385104453 * H1x2_5
2407437   +          +      0.5218140468737 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -0.5351190580444 * H1x2_1 + -0.02107048725988 * H1x2_2 
+ -0.83389437376968 * H1x2_3 + -0.80183937400902 * H1x2_4 + -0.66588385104453 * H1x2_5 + 
0.5218140468737 * H1x2_6 ;
2407438   +   H2x1_4  = H2x1_4  +     1.89050022127485 * H1x2_1
2407439   +          +     -2.6557601537516 * H1x2_2  +     0.99126360053411 * H1x2_3
2407440   +          +    -0.44091776054792 * H1x2_4  +    -1.48547403065153 * H1x2_5
2407441   +          +    -0.67920869444907 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 1.89050022127485 * H1x2_1 + -2.6557601537516 * H1x2_2 
+ 0.99126360053411 * H1x2_3 + -0.44091776054792 * H1x2_4 + -1.48547403065153 * H1x2_5 + 
-0.67920869444907 * H1x2_6 ;
2407442   +   H2x1_5  = H2x1_5  +      0.2827883572995 * H1x2_1
2407443   +          +    -0.68177519072226 * H1x2_2  +    -1.62062483607713 * H1x2_3
2407444   +          +     0.24454579481466 * H1x2_4  +    -0.07591553404219 * H1x2_5
2407445   +          +      1.1175989027563 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 0.2827883572995 * H1x2_1 + -0.68177519072226 * H1x2_2 
+ -1.62062483607713 * H1x2_3 + 0.24454579481466 * H1x2_4 + -0.07591553404219 * H1x2_5 + 
1.1175989027563 * H1x2_6 ;
2407446   +   H2x1_6  = H2x1_6  +    -0.00603649892235 * H1x2_1
2407447   +          +    -1.39053357060307 * H1x2_2  +    -1.34023350990878 * H1x2_3
2407448   +          +    -0.76811804565852 * H1x2_4  +    -1.40869786147662 * H1x2_5
2407449   +          +     1.54589390085972 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + -0.00603649892235 * H1x2_1 + -1.39053357060307 * 
H1x2_2 + -1.34023350990878 * H1x2_3 + -0.76811804565852 * H1x2_4 + -1.40869786147662 * H1x2_5 
+ 1.54589390085972 * H1x2_6 ;
2407450   +   H2x1_1  =     0.47873396703524 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 0.47873396703524 + H2x1_1 ;
2407451   +   H2x1_2  =     -0.0000340630035 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -0.0000340630035 + H2x1_2 ;
2407452   +   H2x1_3  =     0.35556259592214 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 0.35556259592214 + H2x1_3 ;
2407453   +   H2x1_4  =     1.01896219314016 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.01896219314016 + H2x1_4 ;
2407454   +   H2x1_5  =     0.72195082860145 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = 0.72195082860145 + H2x1_5 ;
2407455   +   H2x1_6  =     0.24171639764515 + H2x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 0.24171639764515 + H2x1_6 ;
2407456   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2407457   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2407458   +   H2x1_1  = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
2407459   +   H2x1_2  = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
2407460   +   H2x1_3  = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
2407461   +   H2x1_4  = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
2407462   +   H2x1_5  = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_5 = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
2407463   +   H2x1_6  = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
2407464   +END;
MPRINT(EM_DIAGRAM):   END;
2407465   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2407466   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
2407467   +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
2407468   +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
2407469   +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
2407470   +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
2407471   +   H2x1_6  = .;
MPRINT(EM_DIAGRAM):   H2x1_6 = .;
2407472   +END;
MPRINT(EM_DIAGRAM):   END;
2407473   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2407474   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2407475   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2407476   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2407477   +   P_DepVar1  =     7.13056975005701 * H2x1_1  +    -9.26714696465882 * H2x1_2
2407478   +          +     9.36351037194964 * H2x1_3  +     2.76582940055979 * H2x1_4
2407479   +          +    -20.1354182036801 * H2x1_5  +     1.54726164498938 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 7.13056975005701 * H2x1_1 + -9.26714696465882 * H2x1_2 + 
9.36351037194964 * H2x1_3 + 2.76582940055979 * H2x1_4 + -20.1354182036801 * H2x1_5 + 
1.54726164498938 * H2x1_6 ;
2407480   +   P_DepVar1  =     5.03726079820845 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 5.03726079820845 + P_DepVar1 ;
2407481   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2407482   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2407483   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2407484   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2407485   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2407486   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2407487   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2407488   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2407489   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2407490   +END;
MPRINT(EM_DIAGRAM):   END;
2407491   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2407492   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2407493   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2407494   +END;
MPRINT(EM_DIAGRAM):   END;
2407495   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2407496   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2407497   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2407498   +END;
MPRINT(EM_DIAGRAM):   END;
2407499   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2407500   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2407501   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2407502   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2407503   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2407504   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2407505   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2407506   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2407507   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2407508   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2407509   +END;
MPRINT(EM_DIAGRAM):   END;
2407510   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2407511   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2407512   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2407513   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2407514    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2407515    quit;
2407516    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2407517    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2407518    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2407519    retain ID 2 Node "AutoNeural11";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural11";
2407520    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2407521    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 6523 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 6523 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2407522    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2407523    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2407524    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 6523 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 6523 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2407525    proc sort data=EMWS8.AutoNeural11_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural11_variableset out=_temp2(keep=NAME 
CREATOR);
2407526    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2407527    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL11_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2407528    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2407529    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2407530    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2407531    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2407532    proc contents data=EMWS8.AutoNeural11_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural11_train out=_meta(keep=NAME) noprint;
2407533    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 71 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

2407534    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2407535    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2407536    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 71 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 71 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2407537    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2407538    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2407539    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2407540    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 71 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 71 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2407541    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2407542    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2407542  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 3291 rows and 5 columns.

2407543    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2407544    proc append base=EMWS8.Ensmbl44_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl44_FCMP data=_tempx;
2407545    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL44_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 3291 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL44_FCMP has 3291 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2407546    filename _pref
2407546  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
2407547    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2407548    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
2407549   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2407550   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
2407551   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2407552   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
2407553   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
2407554   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2407555    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2407556    quit;
2407557    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2407558    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2407559    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2407560    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
2407561    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2407562    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2407563    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2407564    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2407565    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2407566    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
2407567    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2407568    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2407569    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2407570    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2407571    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2407572    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2407573    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
2407574    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

2407575    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2407576    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2407577    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2407578    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2407579    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2407580    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2407581    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2407582    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2407583    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2407583  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

2407584    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2407585    proc append base=EMWS8.Ensmbl44_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl44_FCMP data=_tempx;
2407586    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL44_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL44_FCMP has 3295 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2407587    filename _pref
2407587  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
2407588    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2407589    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
2407590   +
2407591   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
2407592   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
2407592  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
2407593   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
2407594   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
2407595   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
2407596   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
2407597   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2407598    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2407599    quit;
2407600    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2407601    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2407602    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2407603    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
2407604    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2407605    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2407606    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2407607    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2407608    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2407609    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
2407610    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2407611    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2407612    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2407613    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2407614    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2407615    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2407616    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
2407617    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2407618    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2407619    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2407620    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2407621    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2407622    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2407623    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2407624    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2407625    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2407626    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2407626  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

2407627    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2407628    proc append base=EMWS8.Ensmbl44_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl44_FCMP data=_tempx;
2407629    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL44_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL44_FCMP has 3334 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2407630    filename _pref
2407630  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
2407631    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2407632    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
2407633   +
2407634   +
2407635   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
2407636   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
2407637   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
2407638   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
2407639   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
2407640   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2407641   +
2407642   +
2407643   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
2407644   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
2407645   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
2407646   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
2407647   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
2407648   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2407649   +
2407650   +
2407651   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
2407652   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
2407653   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
2407654   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
2407655   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
2407656   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2407657   +
2407658   +
2407659   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
2407660   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
2407661   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
2407662   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
2407663   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
2407664   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2407665   +
2407666   +
2407667   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
2407668   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
2407669   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
2407670   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
2407671   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
2407672   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2407673   +
2407674   +
2407675   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
2407676   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
2407677   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
2407678   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
2407679   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
2407680   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2407681   +
2407682   +
2407683   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
2407684   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
2407685   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
2407686   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
2407687   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
2407688   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2407689   +
2407690   +
2407691   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
2407692   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
2407693   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
2407694   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
2407695   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
2407696   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2407697   +if
2407698   +_FILTERNORM1 not in ( '.')
2407699   + and
2407700   +_FILTERNORM2 not in ( '.')
2407701   + and
2407702   +_FILTERNORM3 not in ( '.')
2407703   + and
2407704   +_FILTERNORM4 not in ( '.')
2407705   + and
2407706   +_FILTERNORM5 not in ( '.')
2407707   + and
2407708   +_FILTERNORM6 not in ( '.')
2407709   + and
2407710   +_FILTERNORM7 not in ( ' ')
2407711   + and
2407712   +_FILTERNORM8 not in ( ' ')
2407713   +and
2407714   +( Dt_Customer ne .)
2407715   +and ( Income ne . and (Income<=107000))
2407716   +and ( Kidhome ne .)
2407717   +and ( MntFishProducts ne .)
2407718   +and ( MntFruits ne .)
2407719   +and ( MntGoldProds ne .)
2407720   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
2407721   +and ( MntSweetProducts ne .)
2407722   +and ( MntWines ne .)
2407723   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
2407724   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
2407725   +and ( NumStorePurchases ne .)
2407726   +and ( NumWebPurchases ne .)
2407727   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
2407728   +and ( Recency ne .)
2407729   +and ( Teenhome ne .)
2407730   +and ( Year_Birth ne .)
2407731   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
2407732   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
2407733   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
2407734   +end;
MPRINT(EM_DIAGRAM):   end;
2407735   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
2407736   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2407737    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2407738    quit;
2407739    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2407740    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2407741    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2407742    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
2407743    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2407744    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2407745    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2407746    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2407747    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2407748    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
2407749    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2407750    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2407751    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2407752    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2407753    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2407754    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2407755    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
2407756    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

2407757    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2407758    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2407759    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2407760    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2407761    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2407762    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2407763    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2407764    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2407765    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2407765  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

2407766    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2407767    proc append base=EMWS8.Ensmbl44_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl44_FCMP data=_tempx;
2407768    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL44_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL44_FCMP has 3400 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2407769    %macro varDept(fcmpdata=,id=);
2407770    %global nobs&id scoreFlag&id;
2407771    %let scoreFlag&id = 0;
2407772    %if &id=1 or ^&fcmpStart %then %do;
2407773    proc sort data=&fcmpdata out=_temp&id nodupkey;
2407774    by NAME;
2407775    where id=&id and LHS in( %let j=1;
2407776    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
2407777    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
2407778    "&var" %let j = %eval(&j+1);
2407779    %end;
2407780    );
2407781    run;
2407782    %let dsid = %sysfunc(open(_temp&id));
2407783    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2407784    %let dsid = %sysfunc(close(&dsid));
2407785    %if &&nobs&id %then %do;
2407786    %let scoreFlag&id = 1;
2407787    %let fcmpStart = 1;
2407788    %end;
2407789    %else %let fcmpStart = 0;
2407790    %end;
2407791    %else %do;
2407792    proc sort data=&fcmpdata out=_tempid;
2407793    where id=&id;
2407794    by LHS;
2407795    run;
2407796    %let dsid = %sysfunc(open(_tempid));
2407797    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2407798    %let dsid = %sysfunc(close(&dsid));
2407799    %if ^&&nobs&id %then %do;
2407800    proc datasets lib=work nolist;
2407801    delete _tempid;
2407802    run;
2407803    quit;
2407804    %end;
2407805    %else %do;
2407806    data _tempAll;
2407807    set %let j=%eval(&id-1);
2407808    %do x=1 %to &j;
2407809    %if &&nobs&x %then %do;
2407810    _temp&x %end;
2407811    %end;
2407812    ;
2407813    run;
2407814    proc sql;
2407815    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
2407815  ! work._tempid p2 where p.name=p2.lhs;
2407816    quit;
2407817    data _temp&id;
2407818    set _temp&id;
2407819    where LHS ne '' and NAME ne '' and Node ne '';
2407820    run;
2407821    proc datasets lib=work nolist;
2407822    delete _tempAll;
2407823    run;
2407824    %let dsid = %sysfunc(open(_temp&id));
2407825    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2407826    %let dsid = %sysfunc(close(&dsid));
2407827    %if ^&&nobs&id %then %do;
2407828    proc datasets lib=work nolist;
2407829    delete _temp&id;
2407830    run;
2407831    quit;
2407832    %end;
2407833    %else %do;
2407834    %let scoreFlag&id = 1;
2407835    data _temp&id;
2407836    set _temp&id;
2407837    where LHS ne NAME and node ne '';
2407838    run;
2407839    %let dsid = %sysfunc(open(_temp&id));
2407840    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2407841    %let dsid = %sysfunc(close(&dsid));
2407842    %if ^&&nobs&id %then %do;
2407843    proc datasets lib=work nolist;
2407844    delete _temp&id;
2407845    run;
2407846    quit;
2407847    %end;
2407848    %else %do;
2407849    proc sort data=_temp&id nodupkey;
2407850    by LHS NAME;
2407851    run;
2407852    %end;
2407853    %end;
2407854    %end;
2407855    %end;
2407856    %mend varDept;
2407857    %macro optCode(outdata=fcmpdata);
2407858    %global fcmpStart;
2407859    %let fcmpStart = 0;
2407860    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
2407861    %let NumNodes=9;
2407862    %do k=1 %to &NumNodes;
2407863    %vardept(fcmpdata=&outdata, id=&k);
2407864    %end;
2407865    %mend optCode;
2407866    %optcode(outData=EMWS8.Ensmbl44_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl44_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL44_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl44_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 188 observations read from the data set EMWS8.ENSMBL44_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 136 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 52 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl44_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL44_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl44_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL44_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl44_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL44_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 52 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 52 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl44_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL44_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 52 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 56 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl44_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL44_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 52 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 95 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl44_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL44_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl44_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL44_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.06 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

2407867    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
2407868    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
2407869    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
2407870    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2407871    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
2407872    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
2407873    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
2407874    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2407875    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2407876    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
2407876  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.

2407877    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

2407878    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
2407879    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
2407880    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2407881    filename _pref
2407881  ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural12\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural12\EMPUBLISHSCORE.sas";
2407882    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2407883    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural12\EMPUBLISHSCORE.sas.
2407884   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2407885   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2407886   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2407887   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2407888   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2407889   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2407890   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2407891   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2407892   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2407893   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2407894   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2407895   +LENGTH _WARN_ $4
2407896   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
2407897   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2407898   +
2407899   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2407900   +
2407901   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2407902   +
2407903   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2407904   +
2407905   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2407906   +
2407907   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2407908   +
2407909   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2407910   +
2407911   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2407912   +
2407913   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2407914   +
2407915   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2407916   +
2407917   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2407918   +
2407919   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2407920   +
2407921   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2407922   +
2407923   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2407924   +
2407925   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2407926   +
2407927   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2407928   +
2407929   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2407930   +
2407931   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2407932   +
2407933   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2407934   +
2407935   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2407936   +
2407937   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2407938   +
2407939   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2407940   +
2407941   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2407942   +
2407943   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2407944   +
2407945   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2407946   +
2407947   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2407948   +
2407949   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2407950   +
2407951   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2407952   +
2407953   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2407954   +
2407955   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2407956   +
2407957   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2407958   +
2407959   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2407960   +
2407961   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2407962   +
2407963   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2407964   +
2407965   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2407966   +
2407967   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2407968   +
2407969   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2407970   +
2407971   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2407972   +
2407973   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2407974   +
2407975   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2407976   +
2407977   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2407978   +
2407979   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2407980   +
2407981   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
2407982   +
2407983   +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
2407984   +
2407985   +      label H1x1_7 = 'Hidden: H1x1_=7' ;
MPRINT(EM_DIAGRAM):   label H1x1_7 = 'Hidden: H1x1_=7' ;
2407986   +
2407987   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
2407988   +
2407989   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
2407990   +
2407991   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
2407992   +
2407993   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
2407994   +
2407995   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
2407996   +
2407997   +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
2407998   +
2407999   +      label H1x2_7 = 'Hidden: H1x2_=7' ;
MPRINT(EM_DIAGRAM):   label H1x2_7 = 'Hidden: H1x2_=7' ;
2408000   +
2408001   +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
2408002   +
2408003   +      label H1x3_2 = 'Hidden: H1x3_=2' ;
MPRINT(EM_DIAGRAM):   label H1x3_2 = 'Hidden: H1x3_=2' ;
2408004   +
2408005   +      label H1x3_3 = 'Hidden: H1x3_=3' ;
MPRINT(EM_DIAGRAM):   label H1x3_3 = 'Hidden: H1x3_=3' ;
2408006   +
2408007   +      label H1x3_4 = 'Hidden: H1x3_=4' ;
MPRINT(EM_DIAGRAM):   label H1x3_4 = 'Hidden: H1x3_=4' ;
2408008   +
2408009   +      label H1x3_5 = 'Hidden: H1x3_=5' ;
MPRINT(EM_DIAGRAM):   label H1x3_5 = 'Hidden: H1x3_=5' ;
2408010   +
2408011   +      label H1x3_6 = 'Hidden: H1x3_=6' ;
MPRINT(EM_DIAGRAM):   label H1x3_6 = 'Hidden: H1x3_=6' ;
2408012   +
2408013   +      label H1x3_7 = 'Hidden: H1x3_=7' ;
MPRINT(EM_DIAGRAM):   label H1x3_7 = 'Hidden: H1x3_=7' ;
2408014   +
2408015   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
2408016   +
2408017   +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
2408018   +
2408019   +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
2408020   +
2408021   +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
2408022   +
2408023   +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
2408024   +
2408025   +      label H2x1_6 = 'Hidden: H2x1_=6' ;
MPRINT(EM_DIAGRAM):   label H2x1_6 = 'Hidden: H2x1_=6' ;
2408026   +
2408027   +      label H2x1_7 = 'Hidden: H2x1_=7' ;
MPRINT(EM_DIAGRAM):   label H2x1_7 = 'Hidden: H2x1_=7' ;
2408028   +
2408029   +      label H2x2_1 = 'Hidden: H2x2_=1' ;
MPRINT(EM_DIAGRAM):   label H2x2_1 = 'Hidden: H2x2_=1' ;
2408030   +
2408031   +      label H2x2_2 = 'Hidden: H2x2_=2' ;
MPRINT(EM_DIAGRAM):   label H2x2_2 = 'Hidden: H2x2_=2' ;
2408032   +
2408033   +      label H2x2_3 = 'Hidden: H2x2_=3' ;
MPRINT(EM_DIAGRAM):   label H2x2_3 = 'Hidden: H2x2_=3' ;
2408034   +
2408035   +      label H2x2_4 = 'Hidden: H2x2_=4' ;
MPRINT(EM_DIAGRAM):   label H2x2_4 = 'Hidden: H2x2_=4' ;
2408036   +
2408037   +      label H2x2_5 = 'Hidden: H2x2_=5' ;
MPRINT(EM_DIAGRAM):   label H2x2_5 = 'Hidden: H2x2_=5' ;
2408038   +
2408039   +      label H2x2_6 = 'Hidden: H2x2_=6' ;
MPRINT(EM_DIAGRAM):   label H2x2_6 = 'Hidden: H2x2_=6' ;
2408040   +
2408041   +      label H2x2_7 = 'Hidden: H2x2_=7' ;
MPRINT(EM_DIAGRAM):   label H2x2_7 = 'Hidden: H2x2_=7' ;
2408042   +
2408043   +      label H3x1_1 = 'Hidden: H3x1_=1' ;
MPRINT(EM_DIAGRAM):   label H3x1_1 = 'Hidden: H3x1_=1' ;
2408044   +
2408045   +      label H3x1_2 = 'Hidden: H3x1_=2' ;
MPRINT(EM_DIAGRAM):   label H3x1_2 = 'Hidden: H3x1_=2' ;
2408046   +
2408047   +      label H3x1_3 = 'Hidden: H3x1_=3' ;
MPRINT(EM_DIAGRAM):   label H3x1_3 = 'Hidden: H3x1_=3' ;
2408048   +
2408049   +      label H3x1_4 = 'Hidden: H3x1_=4' ;
MPRINT(EM_DIAGRAM):   label H3x1_4 = 'Hidden: H3x1_=4' ;
2408050   +
2408051   +      label H3x1_5 = 'Hidden: H3x1_=5' ;
MPRINT(EM_DIAGRAM):   label H3x1_5 = 'Hidden: H3x1_=5' ;
2408052   +
2408053   +      label H3x1_6 = 'Hidden: H3x1_=6' ;
MPRINT(EM_DIAGRAM):   label H3x1_6 = 'Hidden: H3x1_=6' ;
2408054   +
2408055   +      label H3x1_7 = 'Hidden: H3x1_=7' ;
MPRINT(EM_DIAGRAM):   label H3x1_7 = 'Hidden: H3x1_=7' ;
2408056   +
2408057   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2408058   +
2408059   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2408060   +
2408061   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2408062   +
2408063   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2408064   +
2408065   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2408066   +
2408067   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2408068   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2408069   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2408070   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2408071   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2408072   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2408073   +end;
MPRINT(EM_DIAGRAM):   end;
2408074   +else do;
MPRINT(EM_DIAGRAM):   else do;
2408075   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2408076   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2408077   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2408078   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2408079   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2408080   +   end;
MPRINT(EM_DIAGRAM):   end;
2408081   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2408082   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2408083   +   end;
MPRINT(EM_DIAGRAM):   end;
2408084   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2408085   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2408086   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2408087   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2408088   +   end;
MPRINT(EM_DIAGRAM):   end;
2408089   +end;
MPRINT(EM_DIAGRAM):   end;
2408090   +
2408091   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2408092   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2408093   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2408094   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2408095   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2408096   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2408097   +end;
MPRINT(EM_DIAGRAM):   end;
2408098   +else do;
MPRINT(EM_DIAGRAM):   else do;
2408099   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2408100   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2408101   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2408102   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2408103   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2408104   +   end;
MPRINT(EM_DIAGRAM):   end;
2408105   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2408106   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2408107   +   end;
MPRINT(EM_DIAGRAM):   end;
2408108   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2408109   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2408110   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2408111   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2408112   +   end;
MPRINT(EM_DIAGRAM):   end;
2408113   +end;
MPRINT(EM_DIAGRAM):   end;
2408114   +
2408115   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2408116   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2408117   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2408118   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2408119   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2408120   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2408121   +end;
MPRINT(EM_DIAGRAM):   end;
2408122   +else do;
MPRINT(EM_DIAGRAM):   else do;
2408123   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2408124   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2408125   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2408126   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2408127   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2408128   +   end;
MPRINT(EM_DIAGRAM):   end;
2408129   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2408130   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2408131   +   end;
MPRINT(EM_DIAGRAM):   end;
2408132   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2408133   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2408134   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2408135   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2408136   +   end;
MPRINT(EM_DIAGRAM):   end;
2408137   +end;
MPRINT(EM_DIAGRAM):   end;
2408138   +
2408139   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2408140   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2408141   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2408142   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2408143   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2408144   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2408145   +end;
MPRINT(EM_DIAGRAM):   end;
2408146   +else do;
MPRINT(EM_DIAGRAM):   else do;
2408147   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2408148   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2408149   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2408150   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2408151   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2408152   +   end;
MPRINT(EM_DIAGRAM):   end;
2408153   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2408154   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2408155   +   end;
MPRINT(EM_DIAGRAM):   end;
2408156   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2408157   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2408158   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2408159   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2408160   +   end;
MPRINT(EM_DIAGRAM):   end;
2408161   +end;
MPRINT(EM_DIAGRAM):   end;
2408162   +
2408163   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2408164   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2408165   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2408166   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2408167   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2408168   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2408169   +end;
MPRINT(EM_DIAGRAM):   end;
2408170   +else do;
MPRINT(EM_DIAGRAM):   else do;
2408171   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2408172   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2408173   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2408174   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2408175   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2408176   +   end;
MPRINT(EM_DIAGRAM):   end;
2408177   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2408178   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2408179   +   end;
MPRINT(EM_DIAGRAM):   end;
2408180   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2408181   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2408182   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2408183   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2408184   +   end;
MPRINT(EM_DIAGRAM):   end;
2408185   +end;
MPRINT(EM_DIAGRAM):   end;
2408186   +
2408187   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2408188   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2408189   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2408190   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2408191   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2408192   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2408193   +end;
MPRINT(EM_DIAGRAM):   end;
2408194   +else do;
MPRINT(EM_DIAGRAM):   else do;
2408195   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2408196   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2408197   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2408198   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2408199   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2408200   +   end;
MPRINT(EM_DIAGRAM):   end;
2408201   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2408202   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2408203   +   end;
MPRINT(EM_DIAGRAM):   end;
2408204   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2408205   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2408206   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2408207   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2408208   +   end;
MPRINT(EM_DIAGRAM):   end;
2408209   +end;
MPRINT(EM_DIAGRAM):   end;
2408210   +
2408211   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2408212   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2408213   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2408214   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2408215   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2408216   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2408217   +end;
MPRINT(EM_DIAGRAM):   end;
2408218   +else do;
MPRINT(EM_DIAGRAM):   else do;
2408219   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2408220   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2408221   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2408222   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2408223   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2408224   +   end;
MPRINT(EM_DIAGRAM):   end;
2408225   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2408226   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2408227   +   end;
MPRINT(EM_DIAGRAM):   end;
2408228   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2408229   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2408230   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2408231   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2408232   +   end;
MPRINT(EM_DIAGRAM):   end;
2408233   +end;
MPRINT(EM_DIAGRAM):   end;
2408234   +
2408235   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2408236   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
2408237   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2408238   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2408239   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2408240   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2408241   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2408242   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2408243   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2408244   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2408245   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2408246   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2408247   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2408248   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2408249   +end;
MPRINT(EM_DIAGRAM):   end;
2408250   +else do;
MPRINT(EM_DIAGRAM):   else do;
2408251   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2408252   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2408253   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2408254   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2408255   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2408256   +   end;
MPRINT(EM_DIAGRAM):   end;
2408257   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2408258   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2408259   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2408260   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2408261   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2408262   +   end;
MPRINT(EM_DIAGRAM):   end;
2408263   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2408264   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2408265   +   end;
MPRINT(EM_DIAGRAM):   end;
2408266   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2408267   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2408268   +   end;
MPRINT(EM_DIAGRAM):   end;
2408269   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2408270   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2408271   +   end;
MPRINT(EM_DIAGRAM):   end;
2408272   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2408273   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2408274   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2408275   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2408276   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2408277   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2408278   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2408279   +   end;
MPRINT(EM_DIAGRAM):   end;
2408280   +end;
MPRINT(EM_DIAGRAM):   end;
2408281   +
2408282   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2408283   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2408284   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
2408285   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2408286   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2408287   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2408288   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2408289   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2408290   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2408291   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2408292   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2408293   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2408294   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2408295   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2408296   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2408297   +end;
MPRINT(EM_DIAGRAM):   end;
2408298   +else do;
MPRINT(EM_DIAGRAM):   else do;
2408299   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2408300   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2408301   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2408302   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2408303   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2408304   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2408305   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2408306   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2408307   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2408308   +         end;
MPRINT(EM_DIAGRAM):   end;
2408309   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2408310   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2408311   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2408312   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2408313   +            end;
MPRINT(EM_DIAGRAM):   end;
2408314   +         end;
MPRINT(EM_DIAGRAM):   end;
2408315   +      end;
MPRINT(EM_DIAGRAM):   end;
2408316   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2408317   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2408318   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2408319   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2408320   +         end;
MPRINT(EM_DIAGRAM):   end;
2408321   +      end;
MPRINT(EM_DIAGRAM):   end;
2408322   +   end;
MPRINT(EM_DIAGRAM):   end;
2408323   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2408324   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2408325   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2408326   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2408327   +      end;
MPRINT(EM_DIAGRAM):   end;
2408328   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2408329   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2408330   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2408331   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2408332   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2408333   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2408334   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2408335   +         end;
MPRINT(EM_DIAGRAM):   end;
2408336   +      end;
MPRINT(EM_DIAGRAM):   end;
2408337   +   end;
MPRINT(EM_DIAGRAM):   end;
2408338   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2408339   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2408340   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2408341   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2408342   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2408343   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2408344   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2408345   +   end;
MPRINT(EM_DIAGRAM):   end;
2408346   +end;
MPRINT(EM_DIAGRAM):   end;
2408347   +
2408348   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2408349   +*** Checking missing input Interval
2408350   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2408351   +
2408352   +IF NMISS(
2408353   +   AcceptedCmpTotal ,
2408354   +   Age ,
2408355   +   Frq ,
2408356   +   Income ,
2408357   +   Kidhome ,
2408358   +   Mnt ,
2408359   +   MntFishProducts ,
2408360   +   MntFruits ,
2408361   +   MntGoldProds ,
2408362   +   MntMeatProducts ,
2408363   +   MntSweetProducts ,
2408364   +   MntWines ,
2408365   +   MonthsAsCustomer ,
2408366   +   NumCatalogPurchases ,
2408367   +   NumDealsPurchases ,
2408368   +   NumDistPurchases ,
2408369   +   NumStorePurchases ,
2408370   +   NumWebPurchases ,
2408371   +   NumWebVisitsMonth ,
2408372   +   RFMstat ,
2408373   +   RMntFrq ,
2408374   +   Recency ,
2408375   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
2408376   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2408377   +
2408378   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2408379   +END;
MPRINT(EM_DIAGRAM):   END;
2408380   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2408381   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2408382   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2408383   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2408384   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2408385   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2408386   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2408387   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2408388   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2408389   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2408390   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2408391   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2408392   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2408393   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2408394   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2408395   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2408396   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2408397   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2408398   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2408399   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2408400   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2408401   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2408402   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
2408403   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2408404   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2408405   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2408406   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2408407   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2408408   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2408409   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2408410   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2408411   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2408412   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2408413   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2408414   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2408415   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2408416   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2408417   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2408418   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2408419   +END;
MPRINT(EM_DIAGRAM):   END;
2408420   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2408421   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2408422   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2408423   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2408424   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2408425   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2408426   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2408427   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2408428   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2408429   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2408430   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2408431   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2408432   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2408433   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2408434   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2408435   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2408436   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2408437   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2408438   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2408439   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2408440   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2408441   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2408442   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
2408443   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2408444   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2408445   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2408446   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2408447   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2408448   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2408449   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2408450   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2408451   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2408452   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2408453   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
2408454   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2408455   +   ELSE S_NumCatalogPurchases
2408456   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2408457   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2408458   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2408459   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2408460   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2408461   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2408462   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2408463   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2408464   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2408465   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2408466   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2408467   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2408468   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2408469   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2408470   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2408471   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2408472   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2408473   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2408474   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2408475   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2408476   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2408477   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2408478   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2408479   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2408480   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2408481   +END;
MPRINT(EM_DIAGRAM):   END;
2408482   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2408483   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2408484   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2408485   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2408486   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2408487   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2408488   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2408489   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2408490   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2408491   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2408492   +   H1x1_1  =    -1.22979702388871 * S_AcceptedCmpTotal
2408493   +          +    -0.43104795266139 * S_Age  +     0.86889278443529 * S_Frq
2408494   +          +    -1.60769879195759 * S_Income  +     0.50863205564081 *
2408495   +        S_Kidhome  +     0.63485396330815 * S_Mnt  +     1.54715964931126 *
2408496   +        S_MntFishProducts  +     0.75185279130369 * S_MntFruits
2408497   +          +    -0.00997586610757 * S_MntGoldProds  +    -2.37203493907401 *
2408498   +        S_MntMeatProducts  +     0.38638626403468 * S_MntSweetProducts
2408499   +          +     2.26121903773395 * S_MntWines  +    -0.59651789183067 *
2408500   +        S_MonthsAsCustomer  +    -1.52699943820196 * S_NumCatalogPurchases
2408501   +          +    -1.18466001117424 * S_NumDealsPurchases
2408502   +          +     -0.1371252133567 * S_NumDistPurchases
2408503   +          +     1.92719775731123 * S_NumStorePurchases
2408504   +          +     1.23184249192116 * S_NumWebPurchases
2408505   +          +    -1.55583843197424 * S_NumWebVisitsMonth
2408506   +          +    -0.47773207532121 * S_RFMstat  +    -0.35513231558649 *
2408507   +        S_RMntFrq  +     1.63863392145333 * S_Recency
2408508   +          +     0.67173275608308 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.22979702388871 * S_AcceptedCmpTotal + -0.43104795266139 * 
S_Age + 0.86889278443529 * S_Frq + -1.60769879195759 * S_Income + 0.50863205564081 * S_Kidhome 
+ 0.63485396330815 * S_Mnt + 1.54715964931126 * S_MntFishProducts + 0.75185279130369 * 
S_MntFruits + -0.00997586610757 * S_MntGoldProds + -2.37203493907401 * S_MntMeatProducts + 
0.38638626403468 * S_MntSweetProducts + 2.26121903773395 * S_MntWines + -0.59651789183067 * 
S_MonthsAsCustomer + -1.52699943820196 * S_NumCatalogPurchases + -1.18466001117424 * 
S_NumDealsPurchases + -0.1371252133567 * S_NumDistPurchases + 1.92719775731123 * 
S_NumStorePurchases + 1.23184249192116 * S_NumWebPurchases + -1.55583843197424 * 
S_NumWebVisitsMonth + -0.47773207532121 * S_RFMstat + -0.35513231558649 * S_RMntFrq + 
1.63863392145333 * S_Recency + 0.67173275608308 * S_Teenhome ;
2408509   +   H1x1_2  =    -0.02716121128584 * S_AcceptedCmpTotal
2408510   +          +     0.11518566588792 * S_Age  +    -0.03446898150571 * S_Frq
2408511   +          +    -0.19022324523346 * S_Income  +     1.06549395713708 *
2408512   +        S_Kidhome  +    -0.75490876357951 * S_Mnt  +    -0.25515163712879 *
2408513   +        S_MntFishProducts  +    -0.33372388118122 * S_MntFruits
2408514   +          +    -1.35673933518218 * S_MntGoldProds  +    -2.95766948640442 *
2408515   +        S_MntMeatProducts  +      0.2681792093191 * S_MntSweetProducts
2408516   +          +     0.68376629766032 * S_MntWines  +     1.19853579057819 *
2408517   +        S_MonthsAsCustomer  +    -1.27282116370987 * S_NumCatalogPurchases
2408518   +          +     0.63616523425865 * S_NumDealsPurchases
2408519   +          +     0.45460056261546 * S_NumDistPurchases
2408520   +          +    -0.61009999017225 * S_NumStorePurchases
2408521   +          +     1.85193755731081 * S_NumWebPurchases
2408522   +          +    -2.47698404964319 * S_NumWebVisitsMonth
2408523   +          +     -0.6995834208607 * S_RFMstat  +    -0.25646177956568 *
2408524   +        S_RMntFrq  +     1.07962222419254 * S_Recency
2408525   +          +     0.63257022999179 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.02716121128584 * S_AcceptedCmpTotal + 0.11518566588792 * 
S_Age + -0.03446898150571 * S_Frq + -0.19022324523346 * S_Income + 1.06549395713708 * 
S_Kidhome + -0.75490876357951 * S_Mnt + -0.25515163712879 * S_MntFishProducts + 
-0.33372388118122 * S_MntFruits + -1.35673933518218 * S_MntGoldProds + -2.95766948640442 * 
S_MntMeatProducts + 0.2681792093191 * S_MntSweetProducts + 0.68376629766032 * S_MntWines + 
1.19853579057819 * S_MonthsAsCustomer + -1.27282116370987 * S_NumCatalogPurchases + 
0.63616523425865 * S_NumDealsPurchases + 0.45460056261546 * S_NumDistPurchases + 
-0.61009999017225 * S_NumStorePurchases + 1.85193755731081 * S_NumWebPurchases + 
-2.47698404964319 * S_NumWebVisitsMonth + -0.6995834208607 * S_RFMstat + -0.25646177956568 * 
S_RMntFrq + 1.07962222419254 * S_Recency + 0.63257022999179 * S_Teenhome ;
2408526   +   H1x1_3  =     2.21390028099752 * S_AcceptedCmpTotal
2408527   +          +     0.05331556426178 * S_Age  +    -0.65514579137956 * S_Frq
2408528   +          +     0.64307304324121 * S_Income  +    -0.74572098598993 *
2408529   +        S_Kidhome  +     0.72146088814601 * S_Mnt  +    -0.35292583888573 *
2408530   +        S_MntFishProducts  +    -0.60011862194755 * S_MntFruits
2408531   +          +     0.41187011131735 * S_MntGoldProds  +     6.59297713742725 *
2408532   +        S_MntMeatProducts  +    -0.24427365286575 * S_MntSweetProducts
2408533   +          +    -2.72258930476853 * S_MntWines  +     0.14880721485001 *
2408534   +        S_MonthsAsCustomer  +     1.43710120897606 * S_NumCatalogPurchases
2408535   +          +      1.8907968580473 * S_NumDealsPurchases
2408536   +          +     0.01244124801764 * S_NumDistPurchases
2408537   +          +    -2.34409118104622 * S_NumStorePurchases
2408538   +          +    -1.80820043087435 * S_NumWebPurchases
2408539   +          +     2.40219682136039 * S_NumWebVisitsMonth
2408540   +          +     0.64272295101175 * S_RFMstat  +    -2.37583346151401 *
2408541   +        S_RMntFrq  +    -2.05893311376628 * S_Recency
2408542   +          +    -0.09539892763273 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 2.21390028099752 * S_AcceptedCmpTotal + 0.05331556426178 * 
S_Age + -0.65514579137956 * S_Frq + 0.64307304324121 * S_Income + -0.74572098598993 * 
S_Kidhome + 0.72146088814601 * S_Mnt + -0.35292583888573 * S_MntFishProducts + 
-0.60011862194755 * S_MntFruits + 0.41187011131735 * S_MntGoldProds + 6.59297713742725 * 
S_MntMeatProducts + -0.24427365286575 * S_MntSweetProducts + -2.72258930476853 * S_MntWines + 
0.14880721485001 * S_MonthsAsCustomer + 1.43710120897606 * S_NumCatalogPurchases + 
1.8907968580473 * S_NumDealsPurchases + 0.01244124801764 * S_NumDistPurchases + 
-2.34409118104622 * S_NumStorePurchases + -1.80820043087435 * S_NumWebPurchases + 
2.40219682136039 * S_NumWebVisitsMonth + 0.64272295101175 * S_RFMstat + -2.37583346151401 * 
S_RMntFrq + -2.05893311376628 * S_Recency + -0.09539892763273 * S_Teenhome ;
2408543   +   H1x1_4  =     0.39967052173479 * S_AcceptedCmpTotal
2408544   +          +    -0.07923444459672 * S_Age  +     0.62339138041893 * S_Frq
2408545   +          +     1.61789948058771 * S_Income  +     -1.4543646851274 *
2408546   +        S_Kidhome  +      0.0674362517919 * S_Mnt  +    -0.01747401903722 *
2408547   +        S_MntFishProducts  +     0.35122931976599 * S_MntFruits
2408548   +          +     0.49479569666837 * S_MntGoldProds  +     0.96598079382568 *
2408549   +        S_MntMeatProducts  +     0.00966238843619 * S_MntSweetProducts
2408550   +          +    -1.04781861730336 * S_MntWines  +    -0.60232527705864 *
2408551   +        S_MonthsAsCustomer  +     1.64183850526139 * S_NumCatalogPurchases
2408552   +          +     0.28209537604198 * S_NumDealsPurchases
2408553   +          +      0.6450277971767 * S_NumDistPurchases
2408554   +          +     0.85050092520609 * S_NumStorePurchases
2408555   +          +    -0.53920307215941 * S_NumWebPurchases
2408556   +          +     3.01106015100147 * S_NumWebVisitsMonth
2408557   +          +     0.35454480730832 * S_RFMstat  +     2.44126135489059 *
2408558   +        S_RMntFrq  +    -3.15497765450512 * S_Recency
2408559   +          +    -1.52912100940198 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.39967052173479 * S_AcceptedCmpTotal + -0.07923444459672 * 
S_Age + 0.62339138041893 * S_Frq + 1.61789948058771 * S_Income + -1.4543646851274 * S_Kidhome 
+ 0.0674362517919 * S_Mnt + -0.01747401903722 * S_MntFishProducts + 0.35122931976599 * 
S_MntFruits + 0.49479569666837 * S_MntGoldProds + 0.96598079382568 * S_MntMeatProducts + 
0.00966238843619 * S_MntSweetProducts + -1.04781861730336 * S_MntWines + -0.60232527705864 * 
S_MonthsAsCustomer + 1.64183850526139 * S_NumCatalogPurchases + 0.28209537604198 * 
S_NumDealsPurchases + 0.6450277971767 * S_NumDistPurchases + 0.85050092520609 * 
S_NumStorePurchases + -0.53920307215941 * S_NumWebPurchases + 3.01106015100147 * 
S_NumWebVisitsMonth + 0.35454480730832 * S_RFMstat + 2.44126135489059 * S_RMntFrq + 
-3.15497765450512 * S_Recency + -1.52912100940198 * S_Teenhome ;
2408560   +   H1x1_5  =    -1.36246601888598 * S_AcceptedCmpTotal
2408561   +          +     0.18494970680372 * S_Age  +    -0.48239316237012 * S_Frq
2408562   +          +    -0.07754710635082 * S_Income  +    -1.12988783865284 *
2408563   +        S_Kidhome  +    -0.99389820487435 * S_Mnt  +     0.97730928948588 *
2408564   +        S_MntFishProducts  +     0.22400827772102 * S_MntFruits
2408565   +          +     0.74486626223136 * S_MntGoldProds  +    -5.09299340099429 *
2408566   +        S_MntMeatProducts  +     -0.9293665551505 * S_MntSweetProducts
2408567   +          +     2.05621056740754 * S_MntWines  +     0.13751326047818 *
2408568   +        S_MonthsAsCustomer  +    -0.78748700520409 * S_NumCatalogPurchases
2408569   +          +    -0.36642526324451 * S_NumDealsPurchases
2408570   +          +     -0.6091014843932 * S_NumDistPurchases
2408571   +          +    -0.21154626182088 * S_NumStorePurchases
2408572   +          +    -0.10361347071364 * S_NumWebPurchases
2408573   +          +     1.36358817627784 * S_NumWebVisitsMonth
2408574   +          +    -1.12999319551924 * S_RFMstat  +    -0.19491430019245 *
2408575   +        S_RMntFrq  +    -1.04649498091784 * S_Recency
2408576   +          +     0.17452738843544 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.36246601888598 * S_AcceptedCmpTotal + 0.18494970680372 * 
S_Age + -0.48239316237012 * S_Frq + -0.07754710635082 * S_Income + -1.12988783865284 * 
S_Kidhome + -0.99389820487435 * S_Mnt + 0.97730928948588 * S_MntFishProducts + 
0.22400827772102 * S_MntFruits + 0.74486626223136 * S_MntGoldProds + -5.09299340099429 * 
S_MntMeatProducts + -0.9293665551505 * S_MntSweetProducts + 2.05621056740754 * S_MntWines + 
0.13751326047818 * S_MonthsAsCustomer + -0.78748700520409 * S_NumCatalogPurchases + 
-0.36642526324451 * S_NumDealsPurchases + -0.6091014843932 * S_NumDistPurchases + 
-0.21154626182088 * S_NumStorePurchases + -0.10361347071364 * S_NumWebPurchases + 
1.36358817627784 * S_NumWebVisitsMonth + -1.12999319551924 * S_RFMstat + -0.19491430019245 * 
S_RMntFrq + -1.04649498091784 * S_Recency + 0.17452738843544 * S_Teenhome ;
2408577   +   H1x1_6  =    -0.61844696407508 * S_AcceptedCmpTotal
2408578   +          +    -0.13181297602063 * S_Age  +        0.68456903056 * S_Frq
2408579   +          +    -0.34991774042788 * S_Income  +     1.46159955002315 *
2408580   +        S_Kidhome  +     0.21200077233877 * S_Mnt  +    -1.25754094670769 *
2408581   +        S_MntFishProducts  +    -0.09204195787339 * S_MntFruits
2408582   +          +     0.30860507694466 * S_MntGoldProds  +     2.47956356836605 *
2408583   +        S_MntMeatProducts  +     0.40882561010395 * S_MntSweetProducts
2408584   +          +    -0.31319819026957 * S_MntWines  +    -0.35678594664106 *
2408585   +        S_MonthsAsCustomer  +     0.01690494248971 * S_NumCatalogPurchases
2408586   +          +    -0.14868505161718 * S_NumDealsPurchases
2408587   +          +    -0.08395384711805 * S_NumDistPurchases
2408588   +          +     0.60525238179245 * S_NumStorePurchases
2408589   +          +     0.04555100214276 * S_NumWebPurchases
2408590   +          +    -2.31888436784305 * S_NumWebVisitsMonth
2408591   +          +     0.04533094777373 * S_RFMstat  +     1.45047684433196 *
2408592   +        S_RMntFrq  +     3.02439474266744 * S_Recency
2408593   +          +     1.00458920115313 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -0.61844696407508 * S_AcceptedCmpTotal + -0.13181297602063 * 
S_Age + 0.68456903056 * S_Frq + -0.34991774042788 * S_Income + 1.46159955002315 * S_Kidhome + 
0.21200077233877 * S_Mnt + -1.25754094670769 * S_MntFishProducts + -0.09204195787339 * 
S_MntFruits + 0.30860507694466 * S_MntGoldProds + 2.47956356836605 * S_MntMeatProducts + 
0.40882561010395 * S_MntSweetProducts + -0.31319819026957 * S_MntWines + -0.35678594664106 * 
S_MonthsAsCustomer + 0.01690494248971 * S_NumCatalogPurchases + -0.14868505161718 * 
S_NumDealsPurchases + -0.08395384711805 * S_NumDistPurchases + 0.60525238179245 * 
S_NumStorePurchases + 0.04555100214276 * S_NumWebPurchases + -2.31888436784305 * 
S_NumWebVisitsMonth + 0.04533094777373 * S_RFMstat + 1.45047684433196 * S_RMntFrq + 
3.02439474266744 * S_Recency + 1.00458920115313 * S_Teenhome ;
2408594   +   H1x1_1  = H1x1_1  +     1.44647846478949 * AcceptedCmp10
2408595   +          +     0.96385529143297 * AcceptedCmp20  +     0.80013060089317 *
2408596   +        AcceptedCmp30  +     1.84770198014032 * AcceptedCmp40
2408597   +          +     0.80401446607714 * AcceptedCmp50  +     0.54049538978821 *
2408598   +        Complain0  +     0.10087163212641 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 1.44647846478949 * AcceptedCmp10 + 0.96385529143297 * 
AcceptedCmp20 + 0.80013060089317 * AcceptedCmp30 + 1.84770198014032 * AcceptedCmp40 + 
0.80401446607714 * AcceptedCmp50 + 0.54049538978821 * Complain0 + 0.10087163212641 * 
HigherEducationBinary0 ;
2408599   +   H1x1_2  = H1x1_2  +    -1.68777270512099 * AcceptedCmp10
2408600   +          +     0.54885195015877 * AcceptedCmp20  +    -0.90402264974928 *
2408601   +        AcceptedCmp30  +    -0.42358682267334 * AcceptedCmp40
2408602   +          +     0.87016183962004 * AcceptedCmp50  +     0.42082407002478 *
2408603   +        Complain0  +    -0.37999025234308 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -1.68777270512099 * AcceptedCmp10 + 0.54885195015877 * 
AcceptedCmp20 + -0.90402264974928 * AcceptedCmp30 + -0.42358682267334 * AcceptedCmp40 + 
0.87016183962004 * AcceptedCmp50 + 0.42082407002478 * Complain0 + -0.37999025234308 * 
HigherEducationBinary0 ;
2408604   +   H1x1_3  = H1x1_3  +    -0.40437631159129 * AcceptedCmp10
2408605   +          +      0.0972205308159 * AcceptedCmp20  +     0.81983130325412 *
2408606   +        AcceptedCmp30  +     0.11521626741585 * AcceptedCmp40
2408607   +          +    -0.67384158900854 * AcceptedCmp50  +    -0.08888648111628 *
2408608   +        Complain0  +    -0.12489144574555 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.40437631159129 * AcceptedCmp10 + 0.0972205308159 * 
AcceptedCmp20 + 0.81983130325412 * AcceptedCmp30 + 0.11521626741585 * AcceptedCmp40 + 
-0.67384158900854 * AcceptedCmp50 + -0.08888648111628 * Complain0 + -0.12489144574555 * 
HigherEducationBinary0 ;
2408609   +   H1x1_4  = H1x1_4  +    -0.11861456940351 * AcceptedCmp10
2408610   +          +    -0.84401831403342 * AcceptedCmp20  +    -0.99900514370547 *
2408611   +        AcceptedCmp30  +     0.03311277744337 * AcceptedCmp40
2408612   +          +    -0.89369182681709 * AcceptedCmp50  +    -0.46321923883787 *
2408613   +        Complain0  +     0.73698890563732 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.11861456940351 * AcceptedCmp10 + -0.84401831403342 
* AcceptedCmp20 + -0.99900514370547 * AcceptedCmp30 + 0.03311277744337 * AcceptedCmp40 + 
-0.89369182681709 * AcceptedCmp50 + -0.46321923883787 * Complain0 + 0.73698890563732 * 
HigherEducationBinary0 ;
2408614   +   H1x1_5  = H1x1_5  +     1.36740346673871 * AcceptedCmp10
2408615   +          +    -0.09307995102939 * AcceptedCmp20  +    -0.99727975675265 *
2408616   +        AcceptedCmp30  +    -1.64006559974507 * AcceptedCmp40
2408617   +          +    -0.12164496778613 * AcceptedCmp50  +    -0.20852398947217 *
2408618   +        Complain0  +    -0.12903157145588 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 1.36740346673871 * AcceptedCmp10 + -0.09307995102939 * 
AcceptedCmp20 + -0.99727975675265 * AcceptedCmp30 + -1.64006559974507 * AcceptedCmp40 + 
-0.12164496778613 * AcceptedCmp50 + -0.20852398947217 * Complain0 + -0.12903157145588 * 
HigherEducationBinary0 ;
2408619   +   H1x1_6  = H1x1_6  +    -0.18375336439178 * AcceptedCmp10
2408620   +          +    -0.61320886099742 * AcceptedCmp20  +     1.46384578641555 *
2408621   +        AcceptedCmp30  +     1.07211075480456 * AcceptedCmp40
2408622   +          +      0.1814894663676 * AcceptedCmp50  +     0.61050756961671 *
2408623   +        Complain0  +     0.18598381049052 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + -0.18375336439178 * AcceptedCmp10 + -0.61320886099742 
* AcceptedCmp20 + 1.46384578641555 * AcceptedCmp30 + 1.07211075480456 * AcceptedCmp40 + 
0.1814894663676 * AcceptedCmp50 + 0.61050756961671 * Complain0 + 0.18598381049052 * 
HigherEducationBinary0 ;
2408624   +   H1x1_1  = H1x1_1  +    -0.85219855086228 * Education2n_Cycle
2408625   +          +     0.72409647993559 * EducationBasic  +    -1.69896726220399 *
2408626   +        EducationGraduation  +     0.96924197858068 * EducationMaster
2408627   +          +     -0.7180104021039 * Marital_StatusDivorced
2408628   +          +      0.5957373170744 * Marital_StatusMarried
2408629   +          +    -0.86183942803988 * Marital_StatusSingle
2408630   +          +     0.92994743994713 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.85219855086228 * Education2n_Cycle + 
0.72409647993559 * EducationBasic + -1.69896726220399 * EducationGraduation + 0.96924197858068 
* EducationMaster + -0.7180104021039 * Marital_StatusDivorced + 0.5957373170744 * 
Marital_StatusMarried + -0.86183942803988 * Marital_StatusSingle + 0.92994743994713 * 
Marital_StatusTogether ;
2408631   +   H1x1_2  = H1x1_2  +    -0.29863788783823 * Education2n_Cycle
2408632   +          +    -0.03492398661463 * EducationBasic  +     1.96491183828121 *
2408633   +        EducationGraduation  +    -1.23733321574678 * EducationMaster
2408634   +          +     0.84772700244021 * Marital_StatusDivorced
2408635   +          +    -0.37049970188511 * Marital_StatusMarried
2408636   +          +     1.54291641732063 * Marital_StatusSingle
2408637   +          +      0.2036514883055 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.29863788783823 * Education2n_Cycle + 
-0.03492398661463 * EducationBasic + 1.96491183828121 * EducationGraduation + 
-1.23733321574678 * EducationMaster + 0.84772700244021 * Marital_StatusDivorced + 
-0.37049970188511 * Marital_StatusMarried + 1.54291641732063 * Marital_StatusSingle + 
0.2036514883055 * Marital_StatusTogether ;
2408638   +   H1x1_3  = H1x1_3  +     0.21600870420184 * Education2n_Cycle
2408639   +          +    -0.41247138958506 * EducationBasic  +    -0.04710356650237 *
2408640   +        EducationGraduation  +     0.02093123351397 * EducationMaster
2408641   +          +     0.73222548496385 * Marital_StatusDivorced
2408642   +          +    -0.50102202656102 * Marital_StatusMarried
2408643   +          +    -0.07207130428422 * Marital_StatusSingle
2408644   +          +     0.17349558515949 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.21600870420184 * Education2n_Cycle + 
-0.41247138958506 * EducationBasic + -0.04710356650237 * EducationGraduation + 
0.02093123351397 * EducationMaster + 0.73222548496385 * Marital_StatusDivorced + 
-0.50102202656102 * Marital_StatusMarried + -0.07207130428422 * Marital_StatusSingle + 
0.17349558515949 * Marital_StatusTogether ;
2408645   +   H1x1_4  = H1x1_4  +    -0.26695942691152 * Education2n_Cycle
2408646   +          +     0.08346486410021 * EducationBasic  +    -1.19880044804188 *
2408647   +        EducationGraduation  +     0.65366032471107 * EducationMaster
2408648   +          +     0.25894719464799 * Marital_StatusDivorced
2408649   +          +    -1.95576501275834 * Marital_StatusMarried
2408650   +          +     2.65422185276746 * Marital_StatusSingle
2408651   +          +    -3.75373924980398 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.26695942691152 * Education2n_Cycle + 
0.08346486410021 * EducationBasic + -1.19880044804188 * EducationGraduation + 0.65366032471107 
* EducationMaster + 0.25894719464799 * Marital_StatusDivorced + -1.95576501275834 * 
Marital_StatusMarried + 2.65422185276746 * Marital_StatusSingle + -3.75373924980398 * 
Marital_StatusTogether ;
2408652   +   H1x1_5  = H1x1_5  +     0.17586479935526 * Education2n_Cycle
2408653   +          +    -0.60926722758624 * EducationBasic  +    -0.09613529218096 *
2408654   +        EducationGraduation  +    -0.28683119112285 * EducationMaster
2408655   +          +     0.60936191204707 * Marital_StatusDivorced
2408656   +          +    -0.52190111190458 * Marital_StatusMarried
2408657   +          +    -0.60982305233136 * Marital_StatusSingle
2408658   +          +     0.44659686388318 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 0.17586479935526 * Education2n_Cycle + 
-0.60926722758624 * EducationBasic + -0.09613529218096 * EducationGraduation + 
-0.28683119112285 * EducationMaster + 0.60936191204707 * Marital_StatusDivorced + 
-0.52190111190458 * Marital_StatusMarried + -0.60982305233136 * Marital_StatusSingle + 
0.44659686388318 * Marital_StatusTogether ;
2408659   +   H1x1_6  = H1x1_6  +     0.16067502362228 * Education2n_Cycle
2408660   +          +     0.18937855703296 * EducationBasic  +     0.06386817095607 *
2408661   +        EducationGraduation  +     0.51538853297606 * EducationMaster
2408662   +          +    -1.44614502228294 * Marital_StatusDivorced
2408663   +          +      2.9001493892928 * Marital_StatusMarried
2408664   +          +    -2.60467399972513 * Marital_StatusSingle
2408665   +          +     2.31815156650258 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + 0.16067502362228 * Education2n_Cycle + 
0.18937855703296 * EducationBasic + 0.06386817095607 * EducationGraduation + 0.51538853297606 
* EducationMaster + -1.44614502228294 * Marital_StatusDivorced + 2.9001493892928 * 
Marital_StatusMarried + -2.60467399972513 * Marital_StatusSingle + 2.31815156650258 * 
Marital_StatusTogether ;
2408666   +   H1x1_1  =     2.01245018737649 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 2.01245018737649 + H1x1_1 ;
2408667   +   H1x1_2  =    -0.13724223857423 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.13724223857423 + H1x1_2 ;
2408668   +   H1x1_3  =     0.82934879006547 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.82934879006547 + H1x1_3 ;
2408669   +   H1x1_4  =    -0.21545557935699 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.21545557935699 + H1x1_4 ;
2408670   +   H1x1_5  =     0.44835497486542 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.44835497486542 + H1x1_5 ;
2408671   +   H1x1_6  =     0.11792774897936 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0.11792774897936 + H1x1_6 ;
2408672   +   H1x1_7  = 0;
MPRINT(EM_DIAGRAM):   H1x1_7 = 0;
2408673   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 , H1x1_7
2408674   +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 , 
H1x1_7 );
2408675   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2408676   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
2408677   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
2408678   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
2408679   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
2408680   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
2408681   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
2408682   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
2408683   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
2408684   +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
2408685   +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
2408686   +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
2408687   +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
2408688   +   H1x1_7  = EXP(H1x1_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_7 = EXP(H1x1_7 - _MAX_);
2408689   +   _SUM_ = _SUM_ + H1x1_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_7 ;
2408690   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
2408691   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
2408692   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
2408693   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
2408694   +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
2408695   +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
2408696   +   H1x1_7  = H1x1_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_7 = H1x1_7 / _SUM_;
2408697   +END;
MPRINT(EM_DIAGRAM):   END;
2408698   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2408699   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2408700   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2408701   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2408702   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2408703   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
2408704   +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
2408705   +   H1x1_7  = .;
MPRINT(EM_DIAGRAM):   H1x1_7 = .;
2408706   +END;
MPRINT(EM_DIAGRAM):   END;
2408707   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2408708   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
2408709   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2408710   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2408711   +   H1x2_1  =    -0.51245281628488 * S_AcceptedCmpTotal
2408712   +          +     0.29586551487242 * S_Age  +     1.34531593814589 * S_Frq
2408713   +          +     1.40753230099536 * S_Income  +    -1.01979935776675 *
2408714   +        S_Kidhome  +      1.0655533203194 * S_Mnt  +     0.74171867275429 *
2408715   +        S_MntFishProducts  +    -0.77881282886264 * S_MntFruits
2408716   +          +    -0.58546798489474 * S_MntGoldProds  +     0.93410444049208 *
2408717   +        S_MntMeatProducts  +     1.10536507959221 * S_MntSweetProducts
2408718   +          +     2.08723894920384 * S_MntWines  +    -0.64437193401661 *
2408719   +        S_MonthsAsCustomer  +     1.49880648713252 * S_NumCatalogPurchases
2408720   +          +    -0.46483717253931 * S_NumDealsPurchases
2408721   +          +    -0.53329008421157 * S_NumDistPurchases
2408722   +          +      0.2490774300193 * S_NumStorePurchases
2408723   +          +    -0.82755150673885 * S_NumWebPurchases
2408724   +          +     0.04007223822389 * S_NumWebVisitsMonth
2408725   +          +    -0.21044923749124 * S_RFMstat  +     0.27791352512351 *
2408726   +        S_RMntFrq  +     0.43434806411249 * S_Recency
2408727   +          +    -1.25974784572932 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.51245281628488 * S_AcceptedCmpTotal + 0.29586551487242 * 
S_Age + 1.34531593814589 * S_Frq + 1.40753230099536 * S_Income + -1.01979935776675 * S_Kidhome 
+ 1.0655533203194 * S_Mnt + 0.74171867275429 * S_MntFishProducts + -0.77881282886264 * 
S_MntFruits + -0.58546798489474 * S_MntGoldProds + 0.93410444049208 * S_MntMeatProducts + 
1.10536507959221 * S_MntSweetProducts + 2.08723894920384 * S_MntWines + -0.64437193401661 * 
S_MonthsAsCustomer + 1.49880648713252 * S_NumCatalogPurchases + -0.46483717253931 * 
S_NumDealsPurchases + -0.53329008421157 * S_NumDistPurchases + 0.2490774300193 * 
S_NumStorePurchases + -0.82755150673885 * S_NumWebPurchases + 0.04007223822389 * 
S_NumWebVisitsMonth + -0.21044923749124 * S_RFMstat + 0.27791352512351 * S_RMntFrq + 
0.43434806411249 * S_Recency + -1.25974784572932 * S_Teenhome ;
2408728   +   H1x2_2  =     0.30117516029562 * S_AcceptedCmpTotal
2408729   +          +     0.16042149118905 * S_Age  +    -2.59350323749407 * S_Frq
2408730   +          +    -0.29940842910223 * S_Income  +    -0.09168883019219 *
2408731   +        S_Kidhome  +    -0.39758312303322 * S_Mnt  +     -0.4138816285287 *
2408732   +        S_MntFishProducts  +        0.18555623351 * S_MntFruits
2408733   +          +    -0.28024159914959 * S_MntGoldProds  +     1.08084875123781 *
2408734   +        S_MntMeatProducts  +     0.29032828446632 * S_MntSweetProducts
2408735   +          +     0.47556687393839 * S_MntWines  +    -0.89795441591329 *
2408736   +        S_MonthsAsCustomer  +    -0.47081176716106 * S_NumCatalogPurchases
2408737   +          +     0.75855101382458 * S_NumDealsPurchases
2408738   +          +     1.61754951768262 * S_NumDistPurchases
2408739   +          +    -0.48146714929729 * S_NumStorePurchases
2408740   +          +    -0.76460728035552 * S_NumWebPurchases
2408741   +          +    -0.71146787112442 * S_NumWebVisitsMonth
2408742   +          +     0.42381866124588 * S_RFMstat  +     -0.3894818400451 *
2408743   +        S_RMntFrq  +    -0.01528916550509 * S_Recency
2408744   +          +     0.38823136254948 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.30117516029562 * S_AcceptedCmpTotal + 0.16042149118905 * 
S_Age + -2.59350323749407 * S_Frq + -0.29940842910223 * S_Income + -0.09168883019219 * 
S_Kidhome + -0.39758312303322 * S_Mnt + -0.4138816285287 * S_MntFishProducts + 0.18555623351 * 
S_MntFruits + -0.28024159914959 * S_MntGoldProds + 1.08084875123781 * S_MntMeatProducts + 
0.29032828446632 * S_MntSweetProducts + 0.47556687393839 * S_MntWines + -0.89795441591329 * 
S_MonthsAsCustomer + -0.47081176716106 * S_NumCatalogPurchases + 0.75855101382458 * 
S_NumDealsPurchases + 1.61754951768262 * S_NumDistPurchases + -0.48146714929729 * 
S_NumStorePurchases + -0.76460728035552 * S_NumWebPurchases + -0.71146787112442 * 
S_NumWebVisitsMonth + 0.42381866124588 * S_RFMstat + -0.3894818400451 * S_RMntFrq + 
-0.01528916550509 * S_Recency + 0.38823136254948 * S_Teenhome ;
2408745   +   H1x2_3  =    -1.28283712556699 * S_AcceptedCmpTotal
2408746   +          +    -0.62214066983867 * S_Age  +      0.0675653313166 * S_Frq
2408747   +          +     0.77098495841918 * S_Income  +    -1.36225954388119 *
2408748   +        S_Kidhome  +      0.0552831076081 * S_Mnt  +    -0.21387512812296 *
2408749   +        S_MntFishProducts  +    -1.14715718471691 * S_MntFruits
2408750   +          +    -1.15507787000433 * S_MntGoldProds  +     0.87571107504211 *
2408751   +        S_MntMeatProducts  +     0.28274178198443 * S_MntSweetProducts
2408752   +          +     0.23070204507311 * S_MntWines  +    -1.88342889522874 *
2408753   +        S_MonthsAsCustomer  +    -0.19127945486903 * S_NumCatalogPurchases
2408754   +          +     0.75255317965748 * S_NumDealsPurchases
2408755   +          +     1.34900588315783 * S_NumDistPurchases
2408756   +          +    -0.17717469778048 * S_NumStorePurchases
2408757   +          +    -0.01560551546553 * S_NumWebPurchases
2408758   +          +     1.24315988674343 * S_NumWebVisitsMonth
2408759   +          +     2.23854910235018 * S_RFMstat  +     0.55516131558838 *
2408760   +        S_RMntFrq  +    -2.01558015490584 * S_Recency
2408761   +          +     1.34178435587014 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -1.28283712556699 * S_AcceptedCmpTotal + -0.62214066983867 * 
S_Age + 0.0675653313166 * S_Frq + 0.77098495841918 * S_Income + -1.36225954388119 * S_Kidhome 
+ 0.0552831076081 * S_Mnt + -0.21387512812296 * S_MntFishProducts + -1.14715718471691 * 
S_MntFruits + -1.15507787000433 * S_MntGoldProds + 0.87571107504211 * S_MntMeatProducts + 
0.28274178198443 * S_MntSweetProducts + 0.23070204507311 * S_MntWines + -1.88342889522874 * 
S_MonthsAsCustomer + -0.19127945486903 * S_NumCatalogPurchases + 0.75255317965748 * 
S_NumDealsPurchases + 1.34900588315783 * S_NumDistPurchases + -0.17717469778048 * 
S_NumStorePurchases + -0.01560551546553 * S_NumWebPurchases + 1.24315988674343 * 
S_NumWebVisitsMonth + 2.23854910235018 * S_RFMstat + 0.55516131558838 * S_RMntFrq + 
-2.01558015490584 * S_Recency + 1.34178435587014 * S_Teenhome ;
2408762   +   H1x2_4  =     1.35706411211536 * S_AcceptedCmpTotal
2408763   +          +    -0.73374940975123 * S_Age  +     2.10445428870671 * S_Frq
2408764   +          +    -1.60133766439775 * S_Income  +     0.02861907512789 *
2408765   +        S_Kidhome  +    -1.61837693250001 * S_Mnt  +       0.209751533263 *
2408766   +        S_MntFishProducts  +     1.82411973889656 * S_MntFruits
2408767   +          +     1.12172774431408 * S_MntGoldProds  +     1.09610288046573 *
2408768   +        S_MntMeatProducts  +    -0.86671874280949 * S_MntSweetProducts
2408769   +          +    -0.11602638812541 * S_MntWines  +    -0.30074020863435 *
2408770   +        S_MonthsAsCustomer  +     0.46044258716085 * S_NumCatalogPurchases
2408771   +          +    -1.71127148178768 * S_NumDealsPurchases
2408772   +          +    -1.77527355221308 * S_NumDistPurchases
2408773   +          +    -1.40009594349363 * S_NumStorePurchases
2408774   +          +    -0.46471012062697 * S_NumWebPurchases
2408775   +          +     0.04619891083228 * S_NumWebVisitsMonth
2408776   +          +     0.34715614649891 * S_RFMstat  +    -0.74983051176564 *
2408777   +        S_RMntFrq  +     0.84880186653433 * S_Recency
2408778   +          +     0.20218341857265 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 1.35706411211536 * S_AcceptedCmpTotal + -0.73374940975123 * 
S_Age + 2.10445428870671 * S_Frq + -1.60133766439775 * S_Income + 0.02861907512789 * S_Kidhome 
+ -1.61837693250001 * S_Mnt + 0.209751533263 * S_MntFishProducts + 1.82411973889656 * 
S_MntFruits + 1.12172774431408 * S_MntGoldProds + 1.09610288046573 * S_MntMeatProducts + 
-0.86671874280949 * S_MntSweetProducts + -0.11602638812541 * S_MntWines + -0.30074020863435 * 
S_MonthsAsCustomer + 0.46044258716085 * S_NumCatalogPurchases + -1.71127148178768 * 
S_NumDealsPurchases + -1.77527355221308 * S_NumDistPurchases + -1.40009594349363 * 
S_NumStorePurchases + -0.46471012062697 * S_NumWebPurchases + 0.04619891083228 * 
S_NumWebVisitsMonth + 0.34715614649891 * S_RFMstat + -0.74983051176564 * S_RMntFrq + 
0.84880186653433 * S_Recency + 0.20218341857265 * S_Teenhome ;
2408779   +   H1x2_5  =     1.79452363233333 * S_AcceptedCmpTotal
2408780   +          +     1.70826835028511 * S_Age  +     0.08241717907016 * S_Frq
2408781   +          +    -1.15275600314196 * S_Income  +     0.87736096074094 *
2408782   +        S_Kidhome  +     0.90821427722502 * S_Mnt  +    -0.84055732556964 *
2408783   +        S_MntFishProducts  +    -0.74245639083939 * S_MntFruits
2408784   +          +     0.00204325095854 * S_MntGoldProds  +     0.37597102500134 *
2408785   +        S_MntMeatProducts  +     0.28586076288454 * S_MntSweetProducts
2408786   +          +    -1.38194310174269 * S_MntWines  +     0.10286181254259 *
2408787   +        S_MonthsAsCustomer  +    -0.82469018226034 * S_NumCatalogPurchases
2408788   +          +    -0.22204470395056 * S_NumDealsPurchases
2408789   +          +    -1.74490476011984 * S_NumDistPurchases
2408790   +          +     1.93538420108324 * S_NumStorePurchases
2408791   +          +     1.04892631742152 * S_NumWebPurchases
2408792   +          +     1.50717841566047 * S_NumWebVisitsMonth
2408793   +          +     0.61249250909375 * S_RFMstat  +    -0.54764212165911 *
2408794   +        S_RMntFrq  +      1.9918829185386 * S_Recency
2408795   +          +     0.64908540313947 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.79452363233333 * S_AcceptedCmpTotal + 1.70826835028511 * 
S_Age + 0.08241717907016 * S_Frq + -1.15275600314196 * S_Income + 0.87736096074094 * S_Kidhome 
+ 0.90821427722502 * S_Mnt + -0.84055732556964 * S_MntFishProducts + -0.74245639083939 * 
S_MntFruits + 0.00204325095854 * S_MntGoldProds + 0.37597102500134 * S_MntMeatProducts + 
0.28586076288454 * S_MntSweetProducts + -1.38194310174269 * S_MntWines + 0.10286181254259 * 
S_MonthsAsCustomer + -0.82469018226034 * S_NumCatalogPurchases + -0.22204470395056 * 
S_NumDealsPurchases + -1.74490476011984 * S_NumDistPurchases + 1.93538420108324 * 
S_NumStorePurchases + 1.04892631742152 * S_NumWebPurchases + 1.50717841566047 * 
S_NumWebVisitsMonth + 0.61249250909375 * S_RFMstat + -0.54764212165911 * S_RMntFrq + 
1.9918829185386 * S_Recency + 0.64908540313947 * S_Teenhome ;
2408796   +   H1x2_6  =     1.38705263280369 * S_AcceptedCmpTotal
2408797   +          +    -0.70531523704191 * S_Age  +     0.59125500807205 * S_Frq
2408798   +          +     0.89549490842249 * S_Income  +     1.07240562425698 *
2408799   +        S_Kidhome  +    -0.25050185694258 * S_Mnt  +    -0.77552207934024 *
2408800   +        S_MntFishProducts  +     0.18087757744856 * S_MntFruits
2408801   +          +    -1.37618517481144 * S_MntGoldProds  +      0.6557488228355 *
2408802   +        S_MntMeatProducts  +    -1.40834207395949 * S_MntSweetProducts
2408803   +          +    -0.76196689750388 * S_MntWines  +     0.85144735274506 *
2408804   +        S_MonthsAsCustomer  +     0.66349954778428 * S_NumCatalogPurchases
2408805   +          +    -0.94690420785776 * S_NumDealsPurchases
2408806   +          +     1.87932706342204 * S_NumDistPurchases
2408807   +          +     0.31232717416487 * S_NumStorePurchases
2408808   +          +     1.51889492693355 * S_NumWebPurchases
2408809   +          +     0.04376853689795 * S_NumWebVisitsMonth
2408810   +          +    -2.53979043374029 * S_RFMstat  +     1.33915580029494 *
2408811   +        S_RMntFrq  +    -1.21983510008829 * S_Recency
2408812   +          +     0.36122230024433 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_6 = 1.38705263280369 * S_AcceptedCmpTotal + -0.70531523704191 * 
S_Age + 0.59125500807205 * S_Frq + 0.89549490842249 * S_Income + 1.07240562425698 * S_Kidhome 
+ -0.25050185694258 * S_Mnt + -0.77552207934024 * S_MntFishProducts + 0.18087757744856 * 
S_MntFruits + -1.37618517481144 * S_MntGoldProds + 0.6557488228355 * S_MntMeatProducts + 
-1.40834207395949 * S_MntSweetProducts + -0.76196689750388 * S_MntWines + 0.85144735274506 * 
S_MonthsAsCustomer + 0.66349954778428 * S_NumCatalogPurchases + -0.94690420785776 * 
S_NumDealsPurchases + 1.87932706342204 * S_NumDistPurchases + 0.31232717416487 * 
S_NumStorePurchases + 1.51889492693355 * S_NumWebPurchases + 0.04376853689795 * 
S_NumWebVisitsMonth + -2.53979043374029 * S_RFMstat + 1.33915580029494 * S_RMntFrq + 
-1.21983510008829 * S_Recency + 0.36122230024433 * S_Teenhome ;
2408813   +   H1x2_1  = H1x2_1  +     1.89852147155601 * AcceptedCmp10
2408814   +          +     0.03501265764204 * AcceptedCmp20  +    -0.45070218241239 *
2408815   +        AcceptedCmp30  +    -1.27257966336041 * AcceptedCmp40
2408816   +          +     0.86175125820023 * AcceptedCmp50  +     1.42864024461581 *
2408817   +        Complain0  +     0.34417315915901 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 1.89852147155601 * AcceptedCmp10 + 0.03501265764204 * 
AcceptedCmp20 + -0.45070218241239 * AcceptedCmp30 + -1.27257966336041 * AcceptedCmp40 + 
0.86175125820023 * AcceptedCmp50 + 1.42864024461581 * Complain0 + 0.34417315915901 * 
HigherEducationBinary0 ;
2408818   +   H1x2_2  = H1x2_2  +     0.41672679168374 * AcceptedCmp10
2408819   +          +     0.10769233314512 * AcceptedCmp20  +     0.42374549876289 *
2408820   +        AcceptedCmp30  +     0.65697535989046 * AcceptedCmp40
2408821   +          +     1.49817201460948 * AcceptedCmp50  +     0.46039378640249 *
2408822   +        Complain0  +     1.34709525059573 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.41672679168374 * AcceptedCmp10 + 0.10769233314512 * 
AcceptedCmp20 + 0.42374549876289 * AcceptedCmp30 + 0.65697535989046 * AcceptedCmp40 + 
1.49817201460948 * AcceptedCmp50 + 0.46039378640249 * Complain0 + 1.34709525059573 * 
HigherEducationBinary0 ;
2408823   +   H1x2_3  = H1x2_3  +     0.75388522027745 * AcceptedCmp10
2408824   +          +     2.63069611253058 * AcceptedCmp20  +     0.30907626174766 *
2408825   +        AcceptedCmp30  +     1.10100873408666 * AcceptedCmp40
2408826   +          +    -1.08824297693055 * AcceptedCmp50  +     1.05059014395924 *
2408827   +        Complain0  +     0.67869922391732 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.75388522027745 * AcceptedCmp10 + 2.63069611253058 * 
AcceptedCmp20 + 0.30907626174766 * AcceptedCmp30 + 1.10100873408666 * AcceptedCmp40 + 
-1.08824297693055 * AcceptedCmp50 + 1.05059014395924 * Complain0 + 0.67869922391732 * 
HigherEducationBinary0 ;
2408828   +   H1x2_4  = H1x2_4  +    -0.22033664091288 * AcceptedCmp10
2408829   +          +     1.34914301916376 * AcceptedCmp20  +    -0.91465085581504 *
2408830   +        AcceptedCmp30  +    -0.19686441685837 * AcceptedCmp40
2408831   +          +     0.10683331864009 * AcceptedCmp50  +    -0.00754824810979 *
2408832   +        Complain0  +     1.52033864172921 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -0.22033664091288 * AcceptedCmp10 + 1.34914301916376 * 
AcceptedCmp20 + -0.91465085581504 * AcceptedCmp30 + -0.19686441685837 * AcceptedCmp40 + 
0.10683331864009 * AcceptedCmp50 + -0.00754824810979 * Complain0 + 1.52033864172921 * 
HigherEducationBinary0 ;
2408833   +   H1x2_5  = H1x2_5  +     0.83049886541915 * AcceptedCmp10
2408834   +          +    -0.74079162208987 * AcceptedCmp20  +    -0.67792505698297 *
2408835   +        AcceptedCmp30  +     0.07081190269168 * AcceptedCmp40
2408836   +          +     0.18720033568684 * AcceptedCmp50  +      2.6531318197812 *
2408837   +        Complain0  +     0.89741230471087 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.83049886541915 * AcceptedCmp10 + -0.74079162208987 * 
AcceptedCmp20 + -0.67792505698297 * AcceptedCmp30 + 0.07081190269168 * AcceptedCmp40 + 
0.18720033568684 * AcceptedCmp50 + 2.6531318197812 * Complain0 + 0.89741230471087 * 
HigherEducationBinary0 ;
2408838   +   H1x2_6  = H1x2_6  +    -0.56781516290501 * AcceptedCmp10
2408839   +          +    -1.51874938874937 * AcceptedCmp20  +     1.28621778326033 *
2408840   +        AcceptedCmp30  +    -0.68769482686243 * AcceptedCmp40
2408841   +          +     0.35592893389946 * AcceptedCmp50  +    -1.30827608061077 *
2408842   +        Complain0  +     0.32980103195099 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + -0.56781516290501 * AcceptedCmp10 + -1.51874938874937 
* AcceptedCmp20 + 1.28621778326033 * AcceptedCmp30 + -0.68769482686243 * AcceptedCmp40 + 
0.35592893389946 * AcceptedCmp50 + -1.30827608061077 * Complain0 + 0.32980103195099 * 
HigherEducationBinary0 ;
2408843   +   H1x2_1  = H1x2_1  +     -1.3799101073197 * Education2n_Cycle
2408844   +          +     0.02501135207931 * EducationBasic  +     1.13490660748682 *
2408845   +        EducationGraduation  +    -0.11344307008943 * EducationMaster
2408846   +          +     0.56030871857835 * Marital_StatusDivorced
2408847   +          +    -1.22448534379831 * Marital_StatusMarried
2408848   +          +     0.78141783495855 * Marital_StatusSingle
2408849   +          +    -1.35807438297575 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -1.3799101073197 * Education2n_Cycle + 
0.02501135207931 * EducationBasic + 1.13490660748682 * EducationGraduation + -0.11344307008943 
* EducationMaster + 0.56030871857835 * Marital_StatusDivorced + -1.22448534379831 * 
Marital_StatusMarried + 0.78141783495855 * Marital_StatusSingle + -1.35807438297575 * 
Marital_StatusTogether ;
2408850   +   H1x2_2  = H1x2_2  +    -0.29912132201198 * Education2n_Cycle
2408851   +          +    -0.97227735746604 * EducationBasic  +     1.05541395347718 *
2408852   +        EducationGraduation  +     0.69607179798453 * EducationMaster
2408853   +          +    -2.63452071552997 * Marital_StatusDivorced
2408854   +          +     0.61829054779121 * Marital_StatusMarried
2408855   +          +    -2.20743370246315 * Marital_StatusSingle
2408856   +          +     0.56930072654252 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.29912132201198 * Education2n_Cycle + 
-0.97227735746604 * EducationBasic + 1.05541395347718 * EducationGraduation + 0.69607179798453 
* EducationMaster + -2.63452071552997 * Marital_StatusDivorced + 0.61829054779121 * 
Marital_StatusMarried + -2.20743370246315 * Marital_StatusSingle + 0.56930072654252 * 
Marital_StatusTogether ;
2408857   +   H1x2_3  = H1x2_3  +     0.65046688904352 * Education2n_Cycle
2408858   +          +     0.03854232912474 * EducationBasic  +     0.59545004622858 *
2408859   +        EducationGraduation  +    -1.68638824011899 * EducationMaster
2408860   +          +      -1.454102516731 * Marital_StatusDivorced
2408861   +          +     0.71488291465759 * Marital_StatusMarried
2408862   +          +     0.96038830049792 * Marital_StatusSingle
2408863   +          +    -0.85244216490853 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.65046688904352 * Education2n_Cycle + 
0.03854232912474 * EducationBasic + 0.59545004622858 * EducationGraduation + -1.68638824011899 
* EducationMaster + -1.454102516731 * Marital_StatusDivorced + 0.71488291465759 * 
Marital_StatusMarried + 0.96038830049792 * Marital_StatusSingle + -0.85244216490853 * 
Marital_StatusTogether ;
2408864   +   H1x2_4  = H1x2_4  +     0.37430673318658 * Education2n_Cycle
2408865   +          +    -0.25373979771478 * EducationBasic  +    -1.65617377693247 *
2408866   +        EducationGraduation  +    -1.12481097095571 * EducationMaster
2408867   +          +    -0.01160394891598 * Marital_StatusDivorced
2408868   +          +    -1.09054636482951 * Marital_StatusMarried
2408869   +          +      0.7793855479379 * Marital_StatusSingle
2408870   +          +    -0.40649435490654 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.37430673318658 * Education2n_Cycle + 
-0.25373979771478 * EducationBasic + -1.65617377693247 * EducationGraduation + 
-1.12481097095571 * EducationMaster + -0.01160394891598 * Marital_StatusDivorced + 
-1.09054636482951 * Marital_StatusMarried + 0.7793855479379 * Marital_StatusSingle + 
-0.40649435490654 * Marital_StatusTogether ;
2408871   +   H1x2_5  = H1x2_5  +     -0.1016827992735 * Education2n_Cycle
2408872   +          +     1.07194596228219 * EducationBasic  +    -1.05800808905557 *
2408873   +        EducationGraduation  +     0.09666597691691 * EducationMaster
2408874   +          +    -0.73414854875115 * Marital_StatusDivorced
2408875   +          +     0.46421425621114 * Marital_StatusMarried
2408876   +          +    -0.54512730625469 * Marital_StatusSingle
2408877   +          +     0.76568726267448 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + -0.1016827992735 * Education2n_Cycle + 
1.07194596228219 * EducationBasic + -1.05800808905557 * EducationGraduation + 0.09666597691691 
* EducationMaster + -0.73414854875115 * Marital_StatusDivorced + 0.46421425621114 * 
Marital_StatusMarried + -0.54512730625469 * Marital_StatusSingle + 0.76568726267448 * 
Marital_StatusTogether ;
2408878   +   H1x2_6  = H1x2_6  +    -1.15957084181454 * Education2n_Cycle
2408879   +          +     0.00847667341235 * EducationBasic  +    -1.58463832529749 *
2408880   +        EducationGraduation  +     0.56518194582557 * EducationMaster
2408881   +          +     0.25131188683384 * Marital_StatusDivorced
2408882   +          +     2.38279806963807 * Marital_StatusMarried
2408883   +          +     0.28897706448348 * Marital_StatusSingle
2408884   +          +     0.89118497255856 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + -1.15957084181454 * Education2n_Cycle + 
0.00847667341235 * EducationBasic + -1.58463832529749 * EducationGraduation + 0.56518194582557 
* EducationMaster + 0.25131188683384 * Marital_StatusDivorced + 2.38279806963807 * 
Marital_StatusMarried + 0.28897706448348 * Marital_StatusSingle + 0.89118497255856 * 
Marital_StatusTogether ;
2408885   +   H1x2_1  =    -1.58113759763481 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -1.58113759763481 + H1x2_1 ;
2408886   +   H1x2_2  =    -1.19307731012977 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -1.19307731012977 + H1x2_2 ;
2408887   +   H1x2_3  =     0.35767811974231 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = 0.35767811974231 + H1x2_3 ;
2408888   +   H1x2_4  =    -0.20241610577527 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.20241610577527 + H1x2_4 ;
2408889   +   H1x2_5  =     0.30120348602955 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 0.30120348602955 + H1x2_5 ;
2408890   +   H1x2_6  =     1.04145053611779 + H1x2_6 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = 1.04145053611779 + H1x2_6 ;
2408891   +   H1x2_7  = 0;
MPRINT(EM_DIAGRAM):   H1x2_7 = 0;
2408892   +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 , H1x2_7
2408893   +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 , 
H1x2_7 );
2408894   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2408895   +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
2408896   +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
2408897   +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
2408898   +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
2408899   +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
2408900   +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
2408901   +   H1x2_4  = EXP(H1x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(H1x2_4 - _MAX_);
2408902   +   _SUM_ = _SUM_ + H1x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_4 ;
2408903   +   H1x2_5  = EXP(H1x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(H1x2_5 - _MAX_);
2408904   +   _SUM_ = _SUM_ + H1x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_5 ;
2408905   +   H1x2_6  = EXP(H1x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(H1x2_6 - _MAX_);
2408906   +   _SUM_ = _SUM_ + H1x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_6 ;
2408907   +   H1x2_7  = EXP(H1x2_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_7 = EXP(H1x2_7 - _MAX_);
2408908   +   _SUM_ = _SUM_ + H1x2_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_7 ;
2408909   +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
2408910   +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
2408911   +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
2408912   +   H1x2_4  = H1x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 / _SUM_;
2408913   +   H1x2_5  = H1x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 / _SUM_;
2408914   +   H1x2_6  = H1x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 / _SUM_;
2408915   +   H1x2_7  = H1x2_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_7 = H1x2_7 / _SUM_;
2408916   +END;
MPRINT(EM_DIAGRAM):   END;
2408917   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2408918   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
2408919   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
2408920   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
2408921   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
2408922   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
2408923   +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
2408924   +   H1x2_7  = .;
MPRINT(EM_DIAGRAM):   H1x2_7 = .;
2408925   +END;
MPRINT(EM_DIAGRAM):   END;
2408926   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2408927   +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
2408928   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2408929   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2408930   +   H1x3_1  =    -0.17891338426869 * S_AcceptedCmpTotal
2408931   +          +     0.25935021287808 * S_Age  +     -0.4211584261256 * S_Frq
2408932   +          +    -1.91007620895221 * S_Income  +     0.38954955842314 *
2408933   +        S_Kidhome  +     0.07674351412771 * S_Mnt  +    -0.00193662324959 *
2408934   +        S_MntFishProducts  +    -0.05912563364557 * S_MntFruits
2408935   +          +     0.34447908349796 * S_MntGoldProds  +      1.8146796379351 *
2408936   +        S_MntMeatProducts  +    -0.28617584915758 * S_MntSweetProducts
2408937   +          +    -0.25003395507837 * S_MntWines  +     2.70698456342857 *
2408938   +        S_MonthsAsCustomer  +     0.61560315312621 * S_NumCatalogPurchases
2408939   +          +     1.11855402225797 * S_NumDealsPurchases
2408940   +          +     0.39150287442005 * S_NumDistPurchases
2408941   +          +     0.00160244551627 * S_NumStorePurchases
2408942   +          +     1.54380043731879 * S_NumWebPurchases
2408943   +          +      0.6462755347813 * S_NumWebVisitsMonth
2408944   +          +      0.3712356571744 * S_RFMstat  +     0.31930000498313 *
2408945   +        S_RMntFrq  +     0.91533450209744 * S_Recency
2408946   +          +    -1.15144971921837 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_1 = -0.17891338426869 * S_AcceptedCmpTotal + 0.25935021287808 * 
S_Age + -0.4211584261256 * S_Frq + -1.91007620895221 * S_Income + 0.38954955842314 * S_Kidhome 
+ 0.07674351412771 * S_Mnt + -0.00193662324959 * S_MntFishProducts + -0.05912563364557 * 
S_MntFruits + 0.34447908349796 * S_MntGoldProds + 1.8146796379351 * S_MntMeatProducts + 
-0.28617584915758 * S_MntSweetProducts + -0.25003395507837 * S_MntWines + 2.70698456342857 * 
S_MonthsAsCustomer + 0.61560315312621 * S_NumCatalogPurchases + 1.11855402225797 * 
S_NumDealsPurchases + 0.39150287442005 * S_NumDistPurchases + 0.00160244551627 * 
S_NumStorePurchases + 1.54380043731879 * S_NumWebPurchases + 0.6462755347813 * 
S_NumWebVisitsMonth + 0.3712356571744 * S_RFMstat + 0.31930000498313 * S_RMntFrq + 
0.91533450209744 * S_Recency + -1.15144971921837 * S_Teenhome ;
2408947   +   H1x3_2  =     0.70342217458269 * S_AcceptedCmpTotal
2408948   +          +     1.00269567168731 * S_Age  +     0.28237778780972 * S_Frq
2408949   +          +     1.85610950568833 * S_Income  +    -0.88627540559449 *
2408950   +        S_Kidhome  +      -0.681406495446 * S_Mnt  +    -0.52884566607488 *
2408951   +        S_MntFishProducts  +    -1.55540056999822 * S_MntFruits
2408952   +          +    -0.86530238267543 * S_MntGoldProds  +     0.50288889191395 *
2408953   +        S_MntMeatProducts  +     0.42795025747297 * S_MntSweetProducts
2408954   +          +     1.65622561769832 * S_MntWines  +    -0.40506757052255 *
2408955   +        S_MonthsAsCustomer  +    -0.45283667973478 * S_NumCatalogPurchases
2408956   +          +     0.01911815525287 * S_NumDealsPurchases
2408957   +          +    -1.07196707915227 * S_NumDistPurchases
2408958   +          +      0.6452048321682 * S_NumStorePurchases
2408959   +          +    -0.15818575353955 * S_NumWebPurchases
2408960   +          +    -0.82586162051382 * S_NumWebVisitsMonth
2408961   +          +     0.35914598433318 * S_RFMstat  +     0.14754646817335 *
2408962   +        S_RMntFrq  +     0.23398669008843 * S_Recency
2408963   +          +      0.1494741245474 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_2 = 0.70342217458269 * S_AcceptedCmpTotal + 1.00269567168731 * 
S_Age + 0.28237778780972 * S_Frq + 1.85610950568833 * S_Income + -0.88627540559449 * S_Kidhome 
+ -0.681406495446 * S_Mnt + -0.52884566607488 * S_MntFishProducts + -1.55540056999822 * 
S_MntFruits + -0.86530238267543 * S_MntGoldProds + 0.50288889191395 * S_MntMeatProducts + 
0.42795025747297 * S_MntSweetProducts + 1.65622561769832 * S_MntWines + -0.40506757052255 * 
S_MonthsAsCustomer + -0.45283667973478 * S_NumCatalogPurchases + 0.01911815525287 * 
S_NumDealsPurchases + -1.07196707915227 * S_NumDistPurchases + 0.6452048321682 * 
S_NumStorePurchases + -0.15818575353955 * S_NumWebPurchases + -0.82586162051382 * 
S_NumWebVisitsMonth + 0.35914598433318 * S_RFMstat + 0.14754646817335 * S_RMntFrq + 
0.23398669008843 * S_Recency + 0.1494741245474 * S_Teenhome ;
2408964   +   H1x3_3  =     0.54929571619315 * S_AcceptedCmpTotal
2408965   +          +      -0.751329127583 * S_Age  +    -0.94592306727941 * S_Frq
2408966   +          +    -1.17625421122138 * S_Income  +     0.74760015734698 *
2408967   +        S_Kidhome  +    -1.31055967085841 * S_Mnt  +     -0.5844789069547 *
2408968   +        S_MntFishProducts  +     0.29563811382096 * S_MntFruits
2408969   +          +      2.0486671645084 * S_MntGoldProds  +      0.4596153519541 *
2408970   +        S_MntMeatProducts  +     0.43182048706593 * S_MntSweetProducts
2408971   +          +     0.06319773540648 * S_MntWines  +     -0.9320658068644 *
2408972   +        S_MonthsAsCustomer  +     0.97208201647088 * S_NumCatalogPurchases
2408973   +          +     1.56893739271853 * S_NumDealsPurchases
2408974   +          +      0.6745865425238 * S_NumDistPurchases
2408975   +          +    -0.26848765783548 * S_NumStorePurchases
2408976   +          +     0.79227081430227 * S_NumWebPurchases
2408977   +          +     0.83054874267768 * S_NumWebVisitsMonth
2408978   +          +    -0.28363014203077 * S_RFMstat  +    -0.71879552423951 *
2408979   +        S_RMntFrq  +     0.80917480816898 * S_Recency
2408980   +          +    -0.52052715034272 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_3 = 0.54929571619315 * S_AcceptedCmpTotal + -0.751329127583 * S_Age 
+ -0.94592306727941 * S_Frq + -1.17625421122138 * S_Income + 0.74760015734698 * S_Kidhome + 
-1.31055967085841 * S_Mnt + -0.5844789069547 * S_MntFishProducts + 0.29563811382096 * 
S_MntFruits + 2.0486671645084 * S_MntGoldProds + 0.4596153519541 * S_MntMeatProducts + 
0.43182048706593 * S_MntSweetProducts + 0.06319773540648 * S_MntWines + -0.9320658068644 * 
S_MonthsAsCustomer + 0.97208201647088 * S_NumCatalogPurchases + 1.56893739271853 * 
S_NumDealsPurchases + 0.6745865425238 * S_NumDistPurchases + -0.26848765783548 * 
S_NumStorePurchases + 0.79227081430227 * S_NumWebPurchases + 0.83054874267768 * 
S_NumWebVisitsMonth + -0.28363014203077 * S_RFMstat + -0.71879552423951 * S_RMntFrq + 
0.80917480816898 * S_Recency + -0.52052715034272 * S_Teenhome ;
2408981   +   H1x3_4  =     1.71480641781959 * S_AcceptedCmpTotal
2408982   +          +    -0.98495603767618 * S_Age  +     -0.0459665945886 * S_Frq
2408983   +          +     1.19396539246615 * S_Income  +     0.51326452746824 *
2408984   +        S_Kidhome  +    -0.22663230333642 * S_Mnt  +     0.27256846012963 *
2408985   +        S_MntFishProducts  +    -0.50661455153622 * S_MntFruits
2408986   +          +     -0.3498057126965 * S_MntGoldProds  +    -2.87000075082987 *
2408987   +        S_MntMeatProducts  +    -0.09413391100844 * S_MntSweetProducts
2408988   +          +     1.15010664811376 * S_MntWines  +    -0.48501392658783 *
2408989   +        S_MonthsAsCustomer  +      0.2688077310392 * S_NumCatalogPurchases
2408990   +          +    -0.23954856030467 * S_NumDealsPurchases
2408991   +          +    -1.61914390483829 * S_NumDistPurchases
2408992   +          +      -1.014570623016 * S_NumStorePurchases
2408993   +          +    -0.36828642098701 * S_NumWebPurchases
2408994   +          +    -0.04976922659227 * S_NumWebVisitsMonth
2408995   +          +     0.87811344320757 * S_RFMstat  +    -1.70999928232532 *
2408996   +        S_RMntFrq  +    -0.40880481304369 * S_Recency
2408997   +          +     0.75806578113158 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_4 = 1.71480641781959 * S_AcceptedCmpTotal + -0.98495603767618 * 
S_Age + -0.0459665945886 * S_Frq + 1.19396539246615 * S_Income + 0.51326452746824 * S_Kidhome 
+ -0.22663230333642 * S_Mnt + 0.27256846012963 * S_MntFishProducts + -0.50661455153622 * 
S_MntFruits + -0.3498057126965 * S_MntGoldProds + -2.87000075082987 * S_MntMeatProducts + 
-0.09413391100844 * S_MntSweetProducts + 1.15010664811376 * S_MntWines + -0.48501392658783 * 
S_MonthsAsCustomer + 0.2688077310392 * S_NumCatalogPurchases + -0.23954856030467 * 
S_NumDealsPurchases + -1.61914390483829 * S_NumDistPurchases + -1.014570623016 * 
S_NumStorePurchases + -0.36828642098701 * S_NumWebPurchases + -0.04976922659227 * 
S_NumWebVisitsMonth + 0.87811344320757 * S_RFMstat + -1.70999928232532 * S_RMntFrq + 
-0.40880481304369 * S_Recency + 0.75806578113158 * S_Teenhome ;
2408998   +   H1x3_5  =    -0.35033091531835 * S_AcceptedCmpTotal
2408999   +          +    -1.18148775203733 * S_Age  +    -0.17374293038138 * S_Frq
2409000   +          +    -0.36680516767012 * S_Income  +     0.57186890691757 *
2409001   +        S_Kidhome  +    -0.02612042491922 * S_Mnt  +     0.84551697375819 *
2409002   +        S_MntFishProducts  +     0.44255296354709 * S_MntFruits
2409003   +          +    -1.35259485807243 * S_MntGoldProds  +      0.3377329409199 *
2409004   +        S_MntMeatProducts  +    -1.06135100840202 * S_MntSweetProducts
2409005   +          +     0.15771394796649 * S_MntWines  +     1.55754960780486 *
2409006   +        S_MonthsAsCustomer  +    -0.76896921785988 * S_NumCatalogPurchases
2409007   +          +     1.00094082424204 * S_NumDealsPurchases
2409008   +          +      0.2724785290725 * S_NumDistPurchases
2409009   +          +     0.13170237783486 * S_NumStorePurchases
2409010   +          +    -1.31447792523743 * S_NumWebPurchases
2409011   +          +    -0.09121088371438 * S_NumWebVisitsMonth
2409012   +          +     1.46860488573551 * S_RFMstat  +     0.46491504994651 *
2409013   +        S_RMntFrq  +      0.6767512513985 * S_Recency
2409014   +          +    -1.74995034763966 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_5 = -0.35033091531835 * S_AcceptedCmpTotal + -1.18148775203733 * 
S_Age + -0.17374293038138 * S_Frq + -0.36680516767012 * S_Income + 0.57186890691757 * 
S_Kidhome + -0.02612042491922 * S_Mnt + 0.84551697375819 * S_MntFishProducts + 
0.44255296354709 * S_MntFruits + -1.35259485807243 * S_MntGoldProds + 0.3377329409199 * 
S_MntMeatProducts + -1.06135100840202 * S_MntSweetProducts + 0.15771394796649 * S_MntWines + 
1.55754960780486 * S_MonthsAsCustomer + -0.76896921785988 * S_NumCatalogPurchases + 
1.00094082424204 * S_NumDealsPurchases + 0.2724785290725 * S_NumDistPurchases + 
0.13170237783486 * S_NumStorePurchases + -1.31447792523743 * S_NumWebPurchases + 
-0.09121088371438 * S_NumWebVisitsMonth + 1.46860488573551 * S_RFMstat + 0.46491504994651 * 
S_RMntFrq + 0.6767512513985 * S_Recency + -1.74995034763966 * S_Teenhome ;
2409015   +   H1x3_6  =     1.05520309715672 * S_AcceptedCmpTotal
2409016   +          +    -1.05930507843633 * S_Age  +     0.07032294102853 * S_Frq
2409017   +          +    -0.05932294137503 * S_Income  +    -1.47206442598932 *
2409018   +        S_Kidhome  +     0.56661112816398 * S_Mnt  +    -0.11340132210258 *
2409019   +        S_MntFishProducts  +    -0.32177484313741 * S_MntFruits
2409020   +          +    -0.32378384178804 * S_MntGoldProds  +     0.00540737819175 *
2409021   +        S_MntMeatProducts  +     0.14834467568566 * S_MntSweetProducts
2409022   +          +    -0.95841169333668 * S_MntWines  +    -0.62902099823048 *
2409023   +        S_MonthsAsCustomer  +    -0.67434201898155 * S_NumCatalogPurchases
2409024   +          +    -0.73198872336344 * S_NumDealsPurchases
2409025   +          +     0.29368958872361 * S_NumDistPurchases
2409026   +          +     1.52772046446908 * S_NumStorePurchases
2409027   +          +    -1.75065469134874 * S_NumWebPurchases
2409028   +          +      0.0264954621772 * S_NumWebVisitsMonth
2409029   +          +    -0.88054137065815 * S_RFMstat  +     0.70371760194946 *
2409030   +        S_RMntFrq  +     1.14219878739476 * S_Recency
2409031   +          +    -1.15240998118906 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_6 = 1.05520309715672 * S_AcceptedCmpTotal + -1.05930507843633 * 
S_Age + 0.07032294102853 * S_Frq + -0.05932294137503 * S_Income + -1.47206442598932 * 
S_Kidhome + 0.56661112816398 * S_Mnt + -0.11340132210258 * S_MntFishProducts + 
-0.32177484313741 * S_MntFruits + -0.32378384178804 * S_MntGoldProds + 0.00540737819175 * 
S_MntMeatProducts + 0.14834467568566 * S_MntSweetProducts + -0.95841169333668 * S_MntWines + 
-0.62902099823048 * S_MonthsAsCustomer + -0.67434201898155 * S_NumCatalogPurchases + 
-0.73198872336344 * S_NumDealsPurchases + 0.29368958872361 * S_NumDistPurchases + 
1.52772046446908 * S_NumStorePurchases + -1.75065469134874 * S_NumWebPurchases + 
0.0264954621772 * S_NumWebVisitsMonth + -0.88054137065815 * S_RFMstat + 0.70371760194946 * 
S_RMntFrq + 1.14219878739476 * S_Recency + -1.15240998118906 * S_Teenhome ;
2409032   +   H1x3_1  = H1x3_1  +     0.60800466481517 * AcceptedCmp10
2409033   +          +     0.33187245535701 * AcceptedCmp20  +    -0.13888343551044 *
2409034   +        AcceptedCmp30  +     0.93663925029857 * AcceptedCmp40
2409035   +          +     1.09340622621085 * AcceptedCmp50  +    -0.49132743156126 *
2409036   +        Complain0  +     0.45196197584946 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 0.60800466481517 * AcceptedCmp10 + 0.33187245535701 * 
AcceptedCmp20 + -0.13888343551044 * AcceptedCmp30 + 0.93663925029857 * AcceptedCmp40 + 
1.09340622621085 * AcceptedCmp50 + -0.49132743156126 * Complain0 + 0.45196197584946 * 
HigherEducationBinary0 ;
2409037   +   H1x3_2  = H1x3_2  +     1.40275485940553 * AcceptedCmp10
2409038   +          +    -0.15035102140746 * AcceptedCmp20  +    -0.53574064147206 *
2409039   +        AcceptedCmp30  +    -1.67324904853563 * AcceptedCmp40
2409040   +          +     0.05636486780046 * AcceptedCmp50  +    -0.39032867538703 *
2409041   +        Complain0  +    -0.74980603736258 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + 1.40275485940553 * AcceptedCmp10 + -0.15035102140746 * 
AcceptedCmp20 + -0.53574064147206 * AcceptedCmp30 + -1.67324904853563 * AcceptedCmp40 + 
0.05636486780046 * AcceptedCmp50 + -0.39032867538703 * Complain0 + -0.74980603736258 * 
HigherEducationBinary0 ;
2409042   +   H1x3_3  = H1x3_3  +     0.26722647672682 * AcceptedCmp10
2409043   +          +      0.6216449242511 * AcceptedCmp20  +     0.76635966126463 *
2409044   +        AcceptedCmp30  +    -2.48978919706551 * AcceptedCmp40
2409045   +          +     0.98619070514978 * AcceptedCmp50  +    -0.19244215041297 *
2409046   +        Complain0  +    -1.19045127506692 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 + 0.26722647672682 * AcceptedCmp10 + 0.6216449242511 * 
AcceptedCmp20 + 0.76635966126463 * AcceptedCmp30 + -2.48978919706551 * AcceptedCmp40 + 
0.98619070514978 * AcceptedCmp50 + -0.19244215041297 * Complain0 + -1.19045127506692 * 
HigherEducationBinary0 ;
2409047   +   H1x3_4  = H1x3_4  +    -1.73915810074841 * AcceptedCmp10
2409048   +          +     0.72244354389321 * AcceptedCmp20  +     1.07200246076684 *
2409049   +        AcceptedCmp30  +     0.24242315318429 * AcceptedCmp40
2409050   +          +     0.48717202781909 * AcceptedCmp50  +    -1.18600714935645 *
2409051   +        Complain0  +     -1.0752062632729 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 + -1.73915810074841 * AcceptedCmp10 + 0.72244354389321 * 
AcceptedCmp20 + 1.07200246076684 * AcceptedCmp30 + 0.24242315318429 * AcceptedCmp40 + 
0.48717202781909 * AcceptedCmp50 + -1.18600714935645 * Complain0 + -1.0752062632729 * 
HigherEducationBinary0 ;
2409052   +   H1x3_5  = H1x3_5  +     1.07972020322696 * AcceptedCmp10
2409053   +          +     0.38275266830165 * AcceptedCmp20  +     0.45959913551609 *
2409054   +        AcceptedCmp30  +    -0.30891288234597 * AcceptedCmp40
2409055   +          +    -0.35568820567134 * AcceptedCmp50  +     -1.8045223309162 *
2409056   +        Complain0  +    -0.29380313969195 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 + 1.07972020322696 * AcceptedCmp10 + 0.38275266830165 * 
AcceptedCmp20 + 0.45959913551609 * AcceptedCmp30 + -0.30891288234597 * AcceptedCmp40 + 
-0.35568820567134 * AcceptedCmp50 + -1.8045223309162 * Complain0 + -0.29380313969195 * 
HigherEducationBinary0 ;
2409057   +   H1x3_6  = H1x3_6  +    -2.40002597755125 * AcceptedCmp10
2409058   +          +     0.61725427642794 * AcceptedCmp20  +      1.3438972982524 *
2409059   +        AcceptedCmp30  +    -0.66766212489049 * AcceptedCmp40
2409060   +          +     1.10709227053258 * AcceptedCmp50  +    -0.98301865424423 *
2409061   +        Complain0  +     0.83512874944952 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_6 = H1x3_6 + -2.40002597755125 * AcceptedCmp10 + 0.61725427642794 * 
AcceptedCmp20 + 1.3438972982524 * AcceptedCmp30 + -0.66766212489049 * AcceptedCmp40 + 
1.10709227053258 * AcceptedCmp50 + -0.98301865424423 * Complain0 + 0.83512874944952 * 
HigherEducationBinary0 ;
2409062   +   H1x3_1  = H1x3_1  +    -0.49604077640433 * Education2n_Cycle
2409063   +          +    -0.60803139475446 * EducationBasic  +     0.39029834300888 *
2409064   +        EducationGraduation  +     1.49476669226441 * EducationMaster
2409065   +          +     0.32207432513904 * Marital_StatusDivorced
2409066   +          +      0.6397913221395 * Marital_StatusMarried
2409067   +          +    -0.25330032559918 * Marital_StatusSingle
2409068   +          +      0.6826963146507 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + -0.49604077640433 * Education2n_Cycle + 
-0.60803139475446 * EducationBasic + 0.39029834300888 * EducationGraduation + 1.49476669226441 
* EducationMaster + 0.32207432513904 * Marital_StatusDivorced + 0.6397913221395 * 
Marital_StatusMarried + -0.25330032559918 * Marital_StatusSingle + 0.6826963146507 * 
Marital_StatusTogether ;
2409069   +   H1x3_2  = H1x3_2  +     0.70727271276171 * Education2n_Cycle
2409070   +          +    -0.74539861835467 * EducationBasic  +    -1.09813520505203 *
2409071   +        EducationGraduation  +      0.0913616986494 * EducationMaster
2409072   +          +     0.79430904713493 * Marital_StatusDivorced
2409073   +          +     2.54456429102799 * Marital_StatusMarried
2409074   +          +     0.59410742352499 * Marital_StatusSingle
2409075   +          +     0.62339810371964 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + 0.70727271276171 * Education2n_Cycle + 
-0.74539861835467 * EducationBasic + -1.09813520505203 * EducationGraduation + 0.0913616986494 
* EducationMaster + 0.79430904713493 * Marital_StatusDivorced + 2.54456429102799 * 
Marital_StatusMarried + 0.59410742352499 * Marital_StatusSingle + 0.62339810371964 * 
Marital_StatusTogether ;
2409076   +   H1x3_3  = H1x3_3  +     0.41739931776571 * Education2n_Cycle
2409077   +          +     0.90042318812458 * EducationBasic  +    -0.30863999735161 *
2409078   +        EducationGraduation  +    -0.07080985966069 * EducationMaster
2409079   +          +    -0.43081775693595 * Marital_StatusDivorced
2409080   +          +    -0.78485102174552 * Marital_StatusMarried
2409081   +          +    -1.56581090110813 * Marital_StatusSingle
2409082   +          +     1.31552735466691 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 + 0.41739931776571 * Education2n_Cycle + 
0.90042318812458 * EducationBasic + -0.30863999735161 * EducationGraduation + 
-0.07080985966069 * EducationMaster + -0.43081775693595 * Marital_StatusDivorced + 
-0.78485102174552 * Marital_StatusMarried + -1.56581090110813 * Marital_StatusSingle + 
1.31552735466691 * Marital_StatusTogether ;
2409083   +   H1x3_4  = H1x3_4  +    -1.03450070870223 * Education2n_Cycle
2409084   +          +     0.12962104594991 * EducationBasic  +    -2.08320982697158 *
2409085   +        EducationGraduation  +     1.01633562820676 * EducationMaster
2409086   +          +     0.38226706522151 * Marital_StatusDivorced
2409087   +          +     0.96666958079914 * Marital_StatusMarried
2409088   +          +    -0.07771259761555 * Marital_StatusSingle
2409089   +          +    -0.15667080607342 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 + -1.03450070870223 * Education2n_Cycle + 
0.12962104594991 * EducationBasic + -2.08320982697158 * EducationGraduation + 1.01633562820676 
* EducationMaster + 0.38226706522151 * Marital_StatusDivorced + 0.96666958079914 * 
Marital_StatusMarried + -0.07771259761555 * Marital_StatusSingle + -0.15667080607342 * 
Marital_StatusTogether ;
2409090   +   H1x3_5  = H1x3_5  +     0.42350784953316 * Education2n_Cycle
2409091   +          +    -0.47409869250049 * EducationBasic  +     0.22752853959532 *
2409092   +        EducationGraduation  +     0.05813076059598 * EducationMaster
2409093   +          +    -0.38325393606947 * Marital_StatusDivorced
2409094   +          +    -1.43303056163299 * Marital_StatusMarried
2409095   +          +     0.11571941757387 * Marital_StatusSingle
2409096   +          +     0.42633042000729 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 + 0.42350784953316 * Education2n_Cycle + 
-0.47409869250049 * EducationBasic + 0.22752853959532 * EducationGraduation + 0.05813076059598 
* EducationMaster + -0.38325393606947 * Marital_StatusDivorced + -1.43303056163299 * 
Marital_StatusMarried + 0.11571941757387 * Marital_StatusSingle + 0.42633042000729 * 
Marital_StatusTogether ;
2409097   +   H1x3_6  = H1x3_6  +     1.11214831415741 * Education2n_Cycle
2409098   +          +      0.8877309144454 * EducationBasic  +     0.87390674413956 *
2409099   +        EducationGraduation  +     0.90837023676142 * EducationMaster
2409100   +          +    -0.36491799765765 * Marital_StatusDivorced
2409101   +          +     0.14142786767503 * Marital_StatusMarried
2409102   +          +     0.22643970468805 * Marital_StatusSingle
2409103   +          +     0.74162870756295 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_6 = H1x3_6 + 1.11214831415741 * Education2n_Cycle + 0.8877309144454 
* EducationBasic + 0.87390674413956 * EducationGraduation + 0.90837023676142 * EducationMaster 
+ -0.36491799765765 * Marital_StatusDivorced + 0.14142786767503 * Marital_StatusMarried + 
0.22643970468805 * Marital_StatusSingle + 0.74162870756295 * Marital_StatusTogether ;
2409104   +   H1x3_1  =        0.17121674502 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.17121674502 + H1x3_1 ;
2409105   +   H1x3_2  =    -0.07858073871761 + H1x3_2 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = -0.07858073871761 + H1x3_2 ;
2409106   +   H1x3_3  =     -0.1687483376367 + H1x3_3 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = -0.1687483376367 + H1x3_3 ;
2409107   +   H1x3_4  =     0.92501573900148 + H1x3_4 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = 0.92501573900148 + H1x3_4 ;
2409108   +   H1x3_5  =    -0.04765930254307 + H1x3_5 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = -0.04765930254307 + H1x3_5 ;
2409109   +   H1x3_6  =     0.29532221854366 + H1x3_6 ;
MPRINT(EM_DIAGRAM):   H1x3_6 = 0.29532221854366 + H1x3_6 ;
2409110   +   H1x3_7  = 0;
MPRINT(EM_DIAGRAM):   H1x3_7 = 0;
2409111   +   _MAX_ = MAX (H1x3_1 , H1x3_2 , H1x3_3 , H1x3_4 , H1x3_5 , H1x3_6 , H1x3_7
2409112   +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x3_1 , H1x3_2 , H1x3_3 , H1x3_4 , H1x3_5 , H1x3_6 , 
H1x3_7 );
2409113   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2409114   +   H1x3_1  = EXP(H1x3_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_1 = EXP(H1x3_1 - _MAX_);
2409115   +   _SUM_ = _SUM_ + H1x3_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_1 ;
2409116   +   H1x3_2  = EXP(H1x3_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_2 = EXP(H1x3_2 - _MAX_);
2409117   +   _SUM_ = _SUM_ + H1x3_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_2 ;
2409118   +   H1x3_3  = EXP(H1x3_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_3 = EXP(H1x3_3 - _MAX_);
2409119   +   _SUM_ = _SUM_ + H1x3_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_3 ;
2409120   +   H1x3_4  = EXP(H1x3_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_4 = EXP(H1x3_4 - _MAX_);
2409121   +   _SUM_ = _SUM_ + H1x3_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_4 ;
2409122   +   H1x3_5  = EXP(H1x3_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_5 = EXP(H1x3_5 - _MAX_);
2409123   +   _SUM_ = _SUM_ + H1x3_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_5 ;
2409124   +   H1x3_6  = EXP(H1x3_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_6 = EXP(H1x3_6 - _MAX_);
2409125   +   _SUM_ = _SUM_ + H1x3_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_6 ;
2409126   +   H1x3_7  = EXP(H1x3_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_7 = EXP(H1x3_7 - _MAX_);
2409127   +   _SUM_ = _SUM_ + H1x3_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_7 ;
2409128   +   H1x3_1  = H1x3_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 / _SUM_;
2409129   +   H1x3_2  = H1x3_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 / _SUM_;
2409130   +   H1x3_3  = H1x3_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 / _SUM_;
2409131   +   H1x3_4  = H1x3_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 / _SUM_;
2409132   +   H1x3_5  = H1x3_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 / _SUM_;
2409133   +   H1x3_6  = H1x3_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_6 = H1x3_6 / _SUM_;
2409134   +   H1x3_7  = H1x3_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_7 = H1x3_7 / _SUM_;
2409135   +END;
MPRINT(EM_DIAGRAM):   END;
2409136   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2409137   +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
2409138   +   H1x3_2  = .;
MPRINT(EM_DIAGRAM):   H1x3_2 = .;
2409139   +   H1x3_3  = .;
MPRINT(EM_DIAGRAM):   H1x3_3 = .;
2409140   +   H1x3_4  = .;
MPRINT(EM_DIAGRAM):   H1x3_4 = .;
2409141   +   H1x3_5  = .;
MPRINT(EM_DIAGRAM):   H1x3_5 = .;
2409142   +   H1x3_6  = .;
MPRINT(EM_DIAGRAM):   H1x3_6 = .;
2409143   +   H1x3_7  = .;
MPRINT(EM_DIAGRAM):   H1x3_7 = .;
2409144   +END;
MPRINT(EM_DIAGRAM):   END;
2409145   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2409146   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
2409147   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2409148   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2409149   +   H2x1_1  =    -0.59397690687549 * H1x1_1  +     0.10790242485513 * H1x1_2
2409150   +          +     1.34957997338147 * H1x1_3  +     0.98783879769831 * H1x1_4
2409151   +          +    -1.73131698691915 * H1x1_5  +    -0.04920424431591 * H1x1_6
2409152   +          +    -0.75229173661277 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -0.59397690687549 * H1x1_1 + 0.10790242485513 * H1x1_2 + 
1.34957997338147 * H1x1_3 + 0.98783879769831 * H1x1_4 + -1.73131698691915 * H1x1_5 + 
-0.04920424431591 * H1x1_6 + -0.75229173661277 * H1x1_7 ;
2409153   +   H2x1_2  =    -0.98729009516736 * H1x1_1  +     0.08491210993613 * H1x1_2
2409154   +          +     0.08027654554575 * H1x1_3  +     0.06189432860142 * H1x1_4
2409155   +          +    -1.23526842489276 * H1x1_5  +    -0.17600169070197 * H1x1_6
2409156   +          +     0.70746372975481 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -0.98729009516736 * H1x1_1 + 0.08491210993613 * H1x1_2 + 
0.08027654554575 * H1x1_3 + 0.06189432860142 * H1x1_4 + -1.23526842489276 * H1x1_5 + 
-0.17600169070197 * H1x1_6 + 0.70746372975481 * H1x1_7 ;
2409157   +   H2x1_3  =    -0.91861478701429 * H1x1_1  +     0.18513565366261 * H1x1_2
2409158   +          +    -0.18629587955963 * H1x1_3  +     0.76802660507034 * H1x1_4
2409159   +          +    -0.47979525657638 * H1x1_5  +     0.06968142422923 * H1x1_6
2409160   +          +     2.18264864713501 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -0.91861478701429 * H1x1_1 + 0.18513565366261 * H1x1_2 + 
-0.18629587955963 * H1x1_3 + 0.76802660507034 * H1x1_4 + -0.47979525657638 * H1x1_5 + 
0.06968142422923 * H1x1_6 + 2.18264864713501 * H1x1_7 ;
2409161   +   H2x1_4  =     1.02774363171853 * H1x1_1  +     1.08006636098136 * H1x1_2
2409162   +          +    -2.27078540572539 * H1x1_3  +    -0.54968089382258 * H1x1_4
2409163   +          +     2.11477012099075 * H1x1_5  +     1.91368944483056 * H1x1_6
2409164   +          +     0.22313799249268 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.02774363171853 * H1x1_1 + 1.08006636098136 * H1x1_2 + 
-2.27078540572539 * H1x1_3 + -0.54968089382258 * H1x1_4 + 2.11477012099075 * H1x1_5 + 
1.91368944483056 * H1x1_6 + 0.22313799249268 * H1x1_7 ;
2409165   +   H2x1_5  =    -1.06933000183778 * H1x1_1  +     0.73081558484415 * H1x1_2
2409166   +          +    -0.78012012951065 * H1x1_3  +     0.81916081920412 * H1x1_4
2409167   +          +    -1.46358608086032 * H1x1_5  +     1.83492870022704 * H1x1_6
2409168   +          +     0.75554005406859 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -1.06933000183778 * H1x1_1 + 0.73081558484415 * H1x1_2 + 
-0.78012012951065 * H1x1_3 + 0.81916081920412 * H1x1_4 + -1.46358608086032 * H1x1_5 + 
1.83492870022704 * H1x1_6 + 0.75554005406859 * H1x1_7 ;
2409169   +   H2x1_6  =    -2.28576277725334 * H1x1_1  +    -0.32249555333061 * H1x1_2
2409170   +          +     3.41388795688866 * H1x1_3  +     3.30305437699117 * H1x1_4
2409171   +          +    -1.49237136034665 * H1x1_5  +    -1.64329313023006 * H1x1_6
2409172   +          +     3.08746595768905 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = -2.28576277725334 * H1x1_1 + -0.32249555333061 * H1x1_2 + 
3.41388795688866 * H1x1_3 + 3.30305437699117 * H1x1_4 + -1.49237136034665 * H1x1_5 + 
-1.64329313023006 * H1x1_6 + 3.08746595768905 * H1x1_7 ;
2409173   +   H2x1_1  = H2x1_1  +    -2.56424783943845 * H1x2_1
2409174   +          +    -1.00213973107436 * H1x2_2  +    -0.47445930434013 * H1x2_3
2409175   +          +    -1.62372689856618 * H1x2_4  +     -1.1856250348479 * H1x2_5
2409176   +          +     0.04266758405533 * H1x2_6  +    -0.60071538153471 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -2.56424783943845 * H1x2_1 + -1.00213973107436 * 
H1x2_2 + -0.47445930434013 * H1x2_3 + -1.62372689856618 * H1x2_4 + -1.1856250348479 * H1x2_5 + 
0.04266758405533 * H1x2_6 + -0.60071538153471 * H1x2_7 ;
2409177   +   H2x1_2  = H2x1_2  +     0.00935939453146 * H1x2_1
2409178   +          +     0.55542862749222 * H1x2_2  +     -0.6066128025675 * H1x2_3
2409179   +          +    -0.53196514301497 * H1x2_4  +    -1.40549473181231 * H1x2_5
2409180   +          +    -0.08595621526876 * H1x2_6  +    -1.03953618328756 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.00935939453146 * H1x2_1 + 0.55542862749222 * H1x2_2 
+ -0.6066128025675 * H1x2_3 + -0.53196514301497 * H1x2_4 + -1.40549473181231 * H1x2_5 + 
-0.08595621526876 * H1x2_6 + -1.03953618328756 * H1x2_7 ;
2409181   +   H2x1_3  = H2x1_3  +    -1.41069312035355 * H1x2_1
2409182   +          +     0.56124490780446 * H1x2_2  +    -0.00472279335297 * H1x2_3
2409183   +          +    -1.10441771442377 * H1x2_4  +    -0.27090019786185 * H1x2_5
2409184   +          +    -0.15206855618217 * H1x2_6  +     -1.6035395520507 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -1.41069312035355 * H1x2_1 + 0.56124490780446 * H1x2_2 
+ -0.00472279335297 * H1x2_3 + -1.10441771442377 * H1x2_4 + -0.27090019786185 * H1x2_5 + 
-0.15206855618217 * H1x2_6 + -1.6035395520507 * H1x2_7 ;
2409185   +   H2x1_4  = H2x1_4  +    -0.55045399339183 * H1x2_1
2409186   +          +     0.02477552373088 * H1x2_2  +     0.19400769235958 * H1x2_3
2409187   +          +    -0.38264537483702 * H1x2_4  +     0.63479720884458 * H1x2_5
2409188   +          +    -0.60194629301645 * H1x2_6  +    -0.83490097285651 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + -0.55045399339183 * H1x2_1 + 0.02477552373088 * H1x2_2 
+ 0.19400769235958 * H1x2_3 + -0.38264537483702 * H1x2_4 + 0.63479720884458 * H1x2_5 + 
-0.60194629301645 * H1x2_6 + -0.83490097285651 * H1x2_7 ;
2409189   +   H2x1_5  = H2x1_5  +    -1.03176133074695 * H1x2_1
2409190   +          +    -0.59926889064506 * H1x2_2  +    -1.07077012847053 * H1x2_3
2409191   +          +    -1.18998920291096 * H1x2_4  +     0.39150574258439 * H1x2_5
2409192   +          +     0.05580574741832 * H1x2_6  +    -0.32272109045259 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + -1.03176133074695 * H1x2_1 + -0.59926889064506 * 
H1x2_2 + -1.07077012847053 * H1x2_3 + -1.18998920291096 * H1x2_4 + 0.39150574258439 * H1x2_5 + 
0.05580574741832 * H1x2_6 + -0.32272109045259 * H1x2_7 ;
2409193   +   H2x1_6  = H2x1_6  +    -0.61952040538587 * H1x2_1
2409194   +          +     0.35510185028829 * H1x2_2  +    -0.23901935720129 * H1x2_3
2409195   +          +     0.31752417497209 * H1x2_4  +    -1.20101515562967 * H1x2_5
2409196   +          +     0.95004398218762 * H1x2_6  +    -0.60363955740244 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + -0.61952040538587 * H1x2_1 + 0.35510185028829 * H1x2_2 
+ -0.23901935720129 * H1x2_3 + 0.31752417497209 * H1x2_4 + -1.20101515562967 * H1x2_5 + 
0.95004398218762 * H1x2_6 + -0.60363955740244 * H1x2_7 ;
2409197   +   H2x1_1  = H2x1_1  +     0.74378922258523 * H1x3_1
2409198   +          +      0.4693103426831 * H1x3_2  +     0.82071786194731 * H1x3_3
2409199   +          +     0.46432194238141 * H1x3_4  +    -1.39760250161206 * H1x3_5
2409200   +          +     0.68725250578779 * H1x3_6  +    -0.98986331205144 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 0.74378922258523 * H1x3_1 + 0.4693103426831 * H1x3_2 + 
0.82071786194731 * H1x3_3 + 0.46432194238141 * H1x3_4 + -1.39760250161206 * H1x3_5 + 
0.68725250578779 * H1x3_6 + -0.98986331205144 * H1x3_7 ;
2409201   +   H2x1_2  = H2x1_2  +     0.48406734142754 * H1x3_1
2409202   +          +     1.24032575331626 * H1x3_2  +     0.10072816620895 * H1x3_3
2409203   +          +     -2.4915795108808 * H1x3_4  +    -1.20085587739472 * H1x3_5
2409204   +          +     2.57480977795816 * H1x3_6  +    -0.36127801521801 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.48406734142754 * H1x3_1 + 1.24032575331626 * H1x3_2 
+ 0.10072816620895 * H1x3_3 + -2.4915795108808 * H1x3_4 + -1.20085587739472 * H1x3_5 + 
2.57480977795816 * H1x3_6 + -0.36127801521801 * H1x3_7 ;
2409205   +   H2x1_3  = H2x1_3  +    -0.29392518978638 * H1x3_1
2409206   +          +     0.02884163093827 * H1x3_2  +     -0.7595494999576 * H1x3_3
2409207   +          +     0.32536537321799 * H1x3_4  +    -0.01283695014976 * H1x3_5
2409208   +          +     0.76895275927405 * H1x3_6  +     -0.2802859993784 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -0.29392518978638 * H1x3_1 + 0.02884163093827 * H1x3_2 
+ -0.7595494999576 * H1x3_3 + 0.32536537321799 * H1x3_4 + -0.01283695014976 * H1x3_5 + 
0.76895275927405 * H1x3_6 + -0.2802859993784 * H1x3_7 ;
2409209   +   H2x1_4  = H2x1_4  +     2.19833784150068 * H1x3_1
2409210   +          +     0.25528651098746 * H1x3_2  +    -0.72296156297186 * H1x3_3
2409211   +          +    -0.14360138590872 * H1x3_4  +     0.77657569331577 * H1x3_5
2409212   +          +    -1.57969278343415 * H1x3_6  +    -0.92288304588247 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 2.19833784150068 * H1x3_1 + 0.25528651098746 * H1x3_2 
+ -0.72296156297186 * H1x3_3 + -0.14360138590872 * H1x3_4 + 0.77657569331577 * H1x3_5 + 
-1.57969278343415 * H1x3_6 + -0.92288304588247 * H1x3_7 ;
2409213   +   H2x1_5  = H2x1_5  +     2.11753865409831 * H1x3_1
2409214   +          +     0.83654766112935 * H1x3_2  +     0.97472534941535 * H1x3_3
2409215   +          +     1.35030042962655 * H1x3_4  +     1.24680664824079 * H1x3_5
2409216   +          +     0.19234112612264 * H1x3_6  +    -0.90680244689294 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 2.11753865409831 * H1x3_1 + 0.83654766112935 * H1x3_2 
+ 0.97472534941535 * H1x3_3 + 1.35030042962655 * H1x3_4 + 1.24680664824079 * H1x3_5 + 
0.19234112612264 * H1x3_6 + -0.90680244689294 * H1x3_7 ;
2409217   +   H2x1_6  = H2x1_6  +     2.07923724911848 * H1x3_1
2409218   +          +     1.62526758922217 * H1x3_2  +    -0.68837627923045 * H1x3_3
2409219   +          +    -0.21127837456631 * H1x3_4  +    -1.47138526111866 * H1x3_5
2409220   +          +    -0.52275521204408 * H1x3_6  +    -0.36639952580044 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + 2.07923724911848 * H1x3_1 + 1.62526758922217 * H1x3_2 
+ -0.68837627923045 * H1x3_3 + -0.21127837456631 * H1x3_4 + -1.47138526111866 * H1x3_5 + 
-0.52275521204408 * H1x3_6 + -0.36639952580044 * H1x3_7 ;
2409221   +   H2x1_1  =    -1.05059672372056 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -1.05059672372056 + H2x1_1 ;
2409222   +   H2x1_2  =    -1.18404209429335 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -1.18404209429335 + H2x1_2 ;
2409223   +   H2x1_3  =    -0.76285494175137 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -0.76285494175137 + H2x1_3 ;
2409224   +   H2x1_4  =     2.22362261707253 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 2.22362261707253 + H2x1_4 ;
2409225   +   H2x1_5  =    -0.98793149966854 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -0.98793149966854 + H2x1_5 ;
2409226   +   H2x1_6  =     1.51370254076672 + H2x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.51370254076672 + H2x1_6 ;
2409227   +   H2x1_7  = 0;
MPRINT(EM_DIAGRAM):   H2x1_7 = 0;
2409228   +   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 , H2x1_6 , H2x1_7
2409229   +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 , H2x1_6 , 
H2x1_7 );
2409230   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2409231   +   H2x1_1  = EXP(H2x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_1 = EXP(H2x1_1 - _MAX_);
2409232   +   _SUM_ = _SUM_ + H2x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_1 ;
2409233   +   H2x1_2  = EXP(H2x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_2 = EXP(H2x1_2 - _MAX_);
2409234   +   _SUM_ = _SUM_ + H2x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_2 ;
2409235   +   H2x1_3  = EXP(H2x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_3 = EXP(H2x1_3 - _MAX_);
2409236   +   _SUM_ = _SUM_ + H2x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_3 ;
2409237   +   H2x1_4  = EXP(H2x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_4 = EXP(H2x1_4 - _MAX_);
2409238   +   _SUM_ = _SUM_ + H2x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_4 ;
2409239   +   H2x1_5  = EXP(H2x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_5 = EXP(H2x1_5 - _MAX_);
2409240   +   _SUM_ = _SUM_ + H2x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_5 ;
2409241   +   H2x1_6  = EXP(H2x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_6 = EXP(H2x1_6 - _MAX_);
2409242   +   _SUM_ = _SUM_ + H2x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_6 ;
2409243   +   H2x1_7  = EXP(H2x1_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_7 = EXP(H2x1_7 - _MAX_);
2409244   +   _SUM_ = _SUM_ + H2x1_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_7 ;
2409245   +   H2x1_1  = H2x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 / _SUM_;
2409246   +   H2x1_2  = H2x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 / _SUM_;
2409247   +   H2x1_3  = H2x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 / _SUM_;
2409248   +   H2x1_4  = H2x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 / _SUM_;
2409249   +   H2x1_5  = H2x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 / _SUM_;
2409250   +   H2x1_6  = H2x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 / _SUM_;
2409251   +   H2x1_7  = H2x1_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_7 = H2x1_7 / _SUM_;
2409252   +END;
MPRINT(EM_DIAGRAM):   END;
2409253   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2409254   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
2409255   +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
2409256   +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
2409257   +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
2409258   +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
2409259   +   H2x1_6  = .;
MPRINT(EM_DIAGRAM):   H2x1_6 = .;
2409260   +   H2x1_7  = .;
MPRINT(EM_DIAGRAM):   H2x1_7 = .;
2409261   +END;
MPRINT(EM_DIAGRAM):   END;
2409262   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2409263   +*** Writing the Node H2x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x2_ ;
2409264   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2409265   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2409266   +   H2x2_1  =    -0.47079896252387 * H1x1_1  +      0.6132734714958 * H1x1_2
2409267   +          +     1.50300753820512 * H1x1_3  +     -0.1812621169129 * H1x1_4
2409268   +          +    -0.18531614991208 * H1x1_5  +     -0.2905105845089 * H1x1_6
2409269   +          +     1.33158539183491 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = -0.47079896252387 * H1x1_1 + 0.6132734714958 * H1x1_2 + 
1.50300753820512 * H1x1_3 + -0.1812621169129 * H1x1_4 + -0.18531614991208 * H1x1_5 + 
-0.2905105845089 * H1x1_6 + 1.33158539183491 * H1x1_7 ;
2409270   +   H2x2_2  =    -1.90834701790953 * H1x1_1  +      0.6177658514697 * H1x1_2
2409271   +          +     0.36465199316418 * H1x1_3  +     0.85911870587838 * H1x1_4
2409272   +          +     0.02147610114602 * H1x1_5  +     0.32326590534391 * H1x1_6
2409273   +          +    -1.04241581652278 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = -1.90834701790953 * H1x1_1 + 0.6177658514697 * H1x1_2 + 
0.36465199316418 * H1x1_3 + 0.85911870587838 * H1x1_4 + 0.02147610114602 * H1x1_5 + 
0.32326590534391 * H1x1_6 + -1.04241581652278 * H1x1_7 ;
2409274   +   H2x2_3  =       0.471130277999 * H1x1_1  +     0.96694465336161 * H1x1_2
2409275   +          +       0.141582035067 * H1x1_3  +     0.53325844993783 * H1x1_4
2409276   +          +     -0.0659115060565 * H1x1_5  +     0.38141753021852 * H1x1_6
2409277   +          +    -1.14139437080586 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = 0.471130277999 * H1x1_1 + 0.96694465336161 * H1x1_2 + 
0.141582035067 * H1x1_3 + 0.53325844993783 * H1x1_4 + -0.0659115060565 * H1x1_5 + 
0.38141753021852 * H1x1_6 + -1.14139437080586 * H1x1_7 ;
2409278   +   H2x2_4  =     0.97070926632973 * H1x1_1  +    -0.13619191199121 * H1x1_2
2409279   +          +       0.111155554391 * H1x1_3  +    -0.50119055939436 * H1x1_4
2409280   +          +     -0.4478264228864 * H1x1_5  +    -0.07373167561096 * H1x1_6
2409281   +          +    -0.48838853015257 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = 0.97070926632973 * H1x1_1 + -0.13619191199121 * H1x1_2 + 
0.111155554391 * H1x1_3 + -0.50119055939436 * H1x1_4 + -0.4478264228864 * H1x1_5 + 
-0.07373167561096 * H1x1_6 + -0.48838853015257 * H1x1_7 ;
2409282   +   H2x2_5  =    -0.97151785477215 * H1x1_1  +     0.21189203541458 * H1x1_2
2409283   +          +    -0.19596886882434 * H1x1_3  +      1.3474130560719 * H1x1_4
2409284   +          +     1.73119417991798 * H1x1_5  +    -0.03726270753922 * H1x1_6
2409285   +          +    -1.41850405567364 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = -0.97151785477215 * H1x1_1 + 0.21189203541458 * H1x1_2 + 
-0.19596886882434 * H1x1_3 + 1.3474130560719 * H1x1_4 + 1.73119417991798 * H1x1_5 + 
-0.03726270753922 * H1x1_6 + -1.41850405567364 * H1x1_7 ;
2409286   +   H2x2_6  =     0.64188298957992 * H1x1_1  +     0.87835723870887 * H1x1_2
2409287   +          +     0.65705195530326 * H1x1_3  +    -1.37039626769544 * H1x1_4
2409288   +          +    -0.32238737127781 * H1x1_5  +     0.33986547881641 * H1x1_6
2409289   +          +    -0.39788950643812 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = 0.64188298957992 * H1x1_1 + 0.87835723870887 * H1x1_2 + 
0.65705195530326 * H1x1_3 + -1.37039626769544 * H1x1_4 + -0.32238737127781 * H1x1_5 + 
0.33986547881641 * H1x1_6 + -0.39788950643812 * H1x1_7 ;
2409290   +   H2x2_1  = H2x2_1  +    -0.69934298550944 * H1x2_1
2409291   +          +    -0.34972890643898 * H1x2_2  +     0.13067071374168 * H1x2_3
2409292   +          +    -0.35163870866778 * H1x2_4  +     0.68739106758866 * H1x2_5
2409293   +          +    -0.13482628170329 * H1x2_6  +    -0.03659282127619 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -0.69934298550944 * H1x2_1 + -0.34972890643898 * 
H1x2_2 + 0.13067071374168 * H1x2_3 + -0.35163870866778 * H1x2_4 + 0.68739106758866 * H1x2_5 + 
-0.13482628170329 * H1x2_6 + -0.03659282127619 * H1x2_7 ;
2409294   +   H2x2_2  = H2x2_2  +    -0.16537065948373 * H1x2_1
2409295   +          +     1.88602375412723 * H1x2_2  +     0.00246313998608 * H1x2_3
2409296   +          +    -0.38678545162214 * H1x2_4  +     1.62314892910576 * H1x2_5
2409297   +          +     1.14369813266427 * H1x2_6  +    -0.04547589616076 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + -0.16537065948373 * H1x2_1 + 1.88602375412723 * H1x2_2 
+ 0.00246313998608 * H1x2_3 + -0.38678545162214 * H1x2_4 + 1.62314892910576 * H1x2_5 + 
1.14369813266427 * H1x2_6 + -0.04547589616076 * H1x2_7 ;
2409298   +   H2x2_3  = H2x2_3  +     0.25040248389011 * H1x2_1
2409299   +          +    -1.56534319969402 * H1x2_2  +     0.07686150326519 * H1x2_3
2409300   +          +     -0.9279505919723 * H1x2_4  +    -0.40426942169792 * H1x2_5
2409301   +          +      0.0625082015929 * H1x2_6  +    -1.06140294711643 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + 0.25040248389011 * H1x2_1 + -1.56534319969402 * H1x2_2 
+ 0.07686150326519 * H1x2_3 + -0.9279505919723 * H1x2_4 + -0.40426942169792 * H1x2_5 + 
0.0625082015929 * H1x2_6 + -1.06140294711643 * H1x2_7 ;
2409302   +   H2x2_4  = H2x2_4  +     -0.4384763018657 * H1x2_1
2409303   +          +    -1.45966734038116 * H1x2_2  +      -2.034771072409 * H1x2_3
2409304   +          +    -0.09055740067076 * H1x2_4  +     1.51504299287048 * H1x2_5
2409305   +          +     0.15439799867788 * H1x2_6  +    -1.11828371545771 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + -0.4384763018657 * H1x2_1 + -1.45966734038116 * H1x2_2 
+ -2.034771072409 * H1x2_3 + -0.09055740067076 * H1x2_4 + 1.51504299287048 * H1x2_5 + 
0.15439799867788 * H1x2_6 + -1.11828371545771 * H1x2_7 ;
2409306   +   H2x2_5  = H2x2_5  +     1.25750321874643 * H1x2_1
2409307   +          +    -0.65639925770112 * H1x2_2  +     -1.7659580690496 * H1x2_3
2409308   +          +       0.375442412611 * H1x2_4  +     0.00802128415855 * H1x2_5
2409309   +          +     0.75342656671485 * H1x2_6  +     1.64939805941174 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 + 1.25750321874643 * H1x2_1 + -0.65639925770112 * H1x2_2 
+ -1.7659580690496 * H1x2_3 + 0.375442412611 * H1x2_4 + 0.00802128415855 * H1x2_5 + 
0.75342656671485 * H1x2_6 + 1.64939805941174 * H1x2_7 ;
2409310   +   H2x2_6  = H2x2_6  +     1.32293752617916 * H1x2_1
2409311   +          +     0.48969975153948 * H1x2_2  +    -0.72928783660254 * H1x2_3
2409312   +          +     0.84727905047749 * H1x2_4  +     0.04670520107938 * H1x2_5
2409313   +          +     2.02862934142232 * H1x2_6  +    -0.56510756043393 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = H2x2_6 + 1.32293752617916 * H1x2_1 + 0.48969975153948 * H1x2_2 
+ -0.72928783660254 * H1x2_3 + 0.84727905047749 * H1x2_4 + 0.04670520107938 * H1x2_5 + 
2.02862934142232 * H1x2_6 + -0.56510756043393 * H1x2_7 ;
2409314   +   H2x2_1  = H2x2_1  +       1.744725276854 * H1x3_1
2409315   +          +     0.13060858789431 * H1x3_2  +    -0.96737787454303 * H1x3_3
2409316   +          +    -0.33966254732699 * H1x3_4  +     2.39360262119688 * H1x3_5
2409317   +          +     2.58016170780679 * H1x3_6  +    -0.61611732156494 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + 1.744725276854 * H1x3_1 + 0.13060858789431 * H1x3_2 + 
-0.96737787454303 * H1x3_3 + -0.33966254732699 * H1x3_4 + 2.39360262119688 * H1x3_5 + 
2.58016170780679 * H1x3_6 + -0.61611732156494 * H1x3_7 ;
2409318   +   H2x2_2  = H2x2_2  +    -0.81180308935434 * H1x3_1
2409319   +          +    -1.15566778124471 * H1x3_2  +     0.08550916456261 * H1x3_3
2409320   +          +     0.54919117407314 * H1x3_4  +     0.18927188150893 * H1x3_5
2409321   +          +    -0.15464567766004 * H1x3_6  +     0.22152383228096 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + -0.81180308935434 * H1x3_1 + -1.15566778124471 * 
H1x3_2 + 0.08550916456261 * H1x3_3 + 0.54919117407314 * H1x3_4 + 0.18927188150893 * H1x3_5 + 
-0.15464567766004 * H1x3_6 + 0.22152383228096 * H1x3_7 ;
2409322   +   H2x2_3  = H2x2_3  +    -0.57155391194888 * H1x3_1
2409323   +          +    -0.80109748621438 * H1x3_2  +     -1.0755749661031 * H1x3_3
2409324   +          +     1.03082070302539 * H1x3_4  +    -2.00320570042417 * H1x3_5
2409325   +          +    -1.96298435256616 * H1x3_6  +     1.02097262601001 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + -0.57155391194888 * H1x3_1 + -0.80109748621438 * 
H1x3_2 + -1.0755749661031 * H1x3_3 + 1.03082070302539 * H1x3_4 + -2.00320570042417 * H1x3_5 + 
-1.96298435256616 * H1x3_6 + 1.02097262601001 * H1x3_7 ;
2409326   +   H2x2_4  = H2x2_4  +     0.24801772968599 * H1x3_1
2409327   +          +    -2.13175914157416 * H1x3_2  +    -0.52172370749235 * H1x3_3
2409328   +          +     2.04158456409986 * H1x3_4  +     1.02332318578438 * H1x3_5
2409329   +          +      -0.428263055638 * H1x3_6  +    -0.10602300040145 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + 0.24801772968599 * H1x3_1 + -2.13175914157416 * H1x3_2 
+ -0.52172370749235 * H1x3_3 + 2.04158456409986 * H1x3_4 + 1.02332318578438 * H1x3_5 + 
-0.428263055638 * H1x3_6 + -0.10602300040145 * H1x3_7 ;
2409330   +   H2x2_5  = H2x2_5  +    -1.00177979562809 * H1x3_1
2409331   +          +    -0.45285333413007 * H1x3_2  +    -0.35882884863392 * H1x3_3
2409332   +          +     0.23001711273663 * H1x3_4  +     0.77235765656369 * H1x3_5
2409333   +          +    -0.04383242140243 * H1x3_6  +    -0.25926963615252 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 + -1.00177979562809 * H1x3_1 + -0.45285333413007 * 
H1x3_2 + -0.35882884863392 * H1x3_3 + 0.23001711273663 * H1x3_4 + 0.77235765656369 * H1x3_5 + 
-0.04383242140243 * H1x3_6 + -0.25926963615252 * H1x3_7 ;
2409334   +   H2x2_6  = H2x2_6  +     0.84797826043534 * H1x3_1
2409335   +          +    -0.46927154831713 * H1x3_2  +    -1.09865845985096 * H1x3_3
2409336   +          +     0.59699123454307 * H1x3_4  +     1.59564014754161 * H1x3_5
2409337   +          +     1.33413776227036 * H1x3_6  +     0.33047800872361 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = H2x2_6 + 0.84797826043534 * H1x3_1 + -0.46927154831713 * H1x3_2 
+ -1.09865845985096 * H1x3_3 + 0.59699123454307 * H1x3_4 + 1.59564014754161 * H1x3_5 + 
1.33413776227036 * H1x3_6 + 0.33047800872361 * H1x3_7 ;
2409338   +   H2x2_1  =    -3.05344936388855 + H2x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = -3.05344936388855 + H2x2_1 ;
2409339   +   H2x2_2  =     0.31382645894355 + H2x2_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = 0.31382645894355 + H2x2_2 ;
2409340   +   H2x2_3  =     0.31718668306888 + H2x2_3 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = 0.31718668306888 + H2x2_3 ;
2409341   +   H2x2_4  =    -0.72340666209054 + H2x2_4 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = -0.72340666209054 + H2x2_4 ;
2409342   +   H2x2_5  =    -0.59585228872544 + H2x2_5 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = -0.59585228872544 + H2x2_5 ;
2409343   +   H2x2_6  =    -1.34027540207713 + H2x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = -1.34027540207713 + H2x2_6 ;
2409344   +   H2x2_7  = 0;
MPRINT(EM_DIAGRAM):   H2x2_7 = 0;
2409345   +   _MAX_ = MAX (H2x2_1 , H2x2_2 , H2x2_3 , H2x2_4 , H2x2_5 , H2x2_6 , H2x2_7
2409346   +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x2_1 , H2x2_2 , H2x2_3 , H2x2_4 , H2x2_5 , H2x2_6 , 
H2x2_7 );
2409347   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2409348   +   H2x2_1  = EXP(H2x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_1 = EXP(H2x2_1 - _MAX_);
2409349   +   _SUM_ = _SUM_ + H2x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_1 ;
2409350   +   H2x2_2  = EXP(H2x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_2 = EXP(H2x2_2 - _MAX_);
2409351   +   _SUM_ = _SUM_ + H2x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_2 ;
2409352   +   H2x2_3  = EXP(H2x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_3 = EXP(H2x2_3 - _MAX_);
2409353   +   _SUM_ = _SUM_ + H2x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_3 ;
2409354   +   H2x2_4  = EXP(H2x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_4 = EXP(H2x2_4 - _MAX_);
2409355   +   _SUM_ = _SUM_ + H2x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_4 ;
2409356   +   H2x2_5  = EXP(H2x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_5 = EXP(H2x2_5 - _MAX_);
2409357   +   _SUM_ = _SUM_ + H2x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_5 ;
2409358   +   H2x2_6  = EXP(H2x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_6 = EXP(H2x2_6 - _MAX_);
2409359   +   _SUM_ = _SUM_ + H2x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_6 ;
2409360   +   H2x2_7  = EXP(H2x2_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_7 = EXP(H2x2_7 - _MAX_);
2409361   +   _SUM_ = _SUM_ + H2x2_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_7 ;
2409362   +   H2x2_1  = H2x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 / _SUM_;
2409363   +   H2x2_2  = H2x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 / _SUM_;
2409364   +   H2x2_3  = H2x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 / _SUM_;
2409365   +   H2x2_4  = H2x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 / _SUM_;
2409366   +   H2x2_5  = H2x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 / _SUM_;
2409367   +   H2x2_6  = H2x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_6 = H2x2_6 / _SUM_;
2409368   +   H2x2_7  = H2x2_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_7 = H2x2_7 / _SUM_;
2409369   +END;
MPRINT(EM_DIAGRAM):   END;
2409370   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2409371   +   H2x2_1  = .;
MPRINT(EM_DIAGRAM):   H2x2_1 = .;
2409372   +   H2x2_2  = .;
MPRINT(EM_DIAGRAM):   H2x2_2 = .;
2409373   +   H2x2_3  = .;
MPRINT(EM_DIAGRAM):   H2x2_3 = .;
2409374   +   H2x2_4  = .;
MPRINT(EM_DIAGRAM):   H2x2_4 = .;
2409375   +   H2x2_5  = .;
MPRINT(EM_DIAGRAM):   H2x2_5 = .;
2409376   +   H2x2_6  = .;
MPRINT(EM_DIAGRAM):   H2x2_6 = .;
2409377   +   H2x2_7  = .;
MPRINT(EM_DIAGRAM):   H2x2_7 = .;
2409378   +END;
MPRINT(EM_DIAGRAM):   END;
2409379   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2409380   +*** Writing the Node H3x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x1_ ;
2409381   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2409382   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2409383   +   H3x1_1  =    -0.39436867680464 * H2x1_1  +    -0.20604911710368 * H2x1_2
2409384   +          +     0.29458107927185 * H2x1_3  +     0.66102662477481 * H2x1_4
2409385   +          +     0.62143406345506 * H2x1_5  +     2.63969484891539 * H2x1_6
2409386   +          +     2.03785323055294 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = -0.39436867680464 * H2x1_1 + -0.20604911710368 * H2x1_2 + 
0.29458107927185 * H2x1_3 + 0.66102662477481 * H2x1_4 + 0.62143406345506 * H2x1_5 + 
2.63969484891539 * H2x1_6 + 2.03785323055294 * H2x1_7 ;
2409387   +   H3x1_2  =     0.14668618790671 * H2x1_1  +     0.53251535375334 * H2x1_2
2409388   +          +     1.73802487245889 * H2x1_3  +    -0.48818058655944 * H2x1_4
2409389   +          +     -0.6987810213409 * H2x1_5  +     1.61216865707221 * H2x1_6
2409390   +          +     0.02086486846601 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = 0.14668618790671 * H2x1_1 + 0.53251535375334 * H2x1_2 + 
1.73802487245889 * H2x1_3 + -0.48818058655944 * H2x1_4 + -0.6987810213409 * H2x1_5 + 
1.61216865707221 * H2x1_6 + 0.02086486846601 * H2x1_7 ;
2409391   +   H3x1_3  =    -1.14054963328594 * H2x1_1  +    -0.75433574423253 * H2x1_2
2409392   +          +     0.06268113862558 * H2x1_3  +     -0.3981826777811 * H2x1_4
2409393   +          +    -0.04081627474016 * H2x1_5  +    -0.18547979458266 * H2x1_6
2409394   +          +     0.40248247309716 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = -1.14054963328594 * H2x1_1 + -0.75433574423253 * H2x1_2 + 
0.06268113862558 * H2x1_3 + -0.3981826777811 * H2x1_4 + -0.04081627474016 * H2x1_5 + 
-0.18547979458266 * H2x1_6 + 0.40248247309716 * H2x1_7 ;
2409395   +   H3x1_4  =    -0.41046431364634 * H2x1_1  +     0.53558649664528 * H2x1_2
2409396   +          +     0.25426413492282 * H2x1_3  +     2.32537388539524 * H2x1_4
2409397   +          +    -0.95624400041487 * H2x1_5  +     -2.1423043357326 * H2x1_6
2409398   +          +     0.70189203885946 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = -0.41046431364634 * H2x1_1 + 0.53558649664528 * H2x1_2 + 
0.25426413492282 * H2x1_3 + 2.32537388539524 * H2x1_4 + -0.95624400041487 * H2x1_5 + 
-2.1423043357326 * H2x1_6 + 0.70189203885946 * H2x1_7 ;
2409399   +   H3x1_5  =    -0.21139932639331 * H2x1_1  +      0.8853172209881 * H2x1_2
2409400   +          +    -0.23025284278478 * H2x1_3  +     1.30433450594503 * H2x1_4
2409401   +          +     1.26145590014333 * H2x1_5  +     0.63126627865104 * H2x1_6
2409402   +          +    -1.88455429451452 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = -0.21139932639331 * H2x1_1 + 0.8853172209881 * H2x1_2 + 
-0.23025284278478 * H2x1_3 + 1.30433450594503 * H2x1_4 + 1.26145590014333 * H2x1_5 + 
0.63126627865104 * H2x1_6 + -1.88455429451452 * H2x1_7 ;
2409403   +   H3x1_6  =     0.99645242104414 * H2x1_1  +    -0.17835964967148 * H2x1_2
2409404   +          +     0.06539648561603 * H2x1_3  +     0.97412284078325 * H2x1_4
2409405   +          +     -1.3247680635275 * H2x1_5  +      0.8723025918678 * H2x1_6
2409406   +          +    -0.04328836172134 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_6 = 0.99645242104414 * H2x1_1 + -0.17835964967148 * H2x1_2 + 
0.06539648561603 * H2x1_3 + 0.97412284078325 * H2x1_4 + -1.3247680635275 * H2x1_5 + 
0.8723025918678 * H2x1_6 + -0.04328836172134 * H2x1_7 ;
2409407   +   H3x1_7  =     2.66887548952929 * H2x1_1  +    -0.86289888310949 * H2x1_2
2409408   +          +     1.58137421487648 * H2x1_3  +    -1.37105839507635 * H2x1_4
2409409   +          +    -0.65069986041129 * H2x1_5  +     2.50322156288062 * H2x1_6
2409410   +          +     0.75157328436087 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_7 = 2.66887548952929 * H2x1_1 + -0.86289888310949 * H2x1_2 + 
1.58137421487648 * H2x1_3 + -1.37105839507635 * H2x1_4 + -0.65069986041129 * H2x1_5 + 
2.50322156288062 * H2x1_6 + 0.75157328436087 * H2x1_7 ;
2409411   +   H3x1_1  = H3x1_1  +     1.55317132694755 * H2x2_1
2409412   +          +     1.75656976582641 * H2x2_2  +    -1.25361089552085 * H2x2_3
2409413   +          +    -0.52984461837677 * H2x2_4  +     1.29915117873447 * H2x2_5
2409414   +          +    -1.03942372926622 * H2x2_6  +     0.13722887717178 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + 1.55317132694755 * H2x2_1 + 1.75656976582641 * H2x2_2 
+ -1.25361089552085 * H2x2_3 + -0.52984461837677 * H2x2_4 + 1.29915117873447 * H2x2_5 + 
-1.03942372926622 * H2x2_6 + 0.13722887717178 * H2x2_7 ;
2409415   +   H3x1_2  = H3x1_2  +     0.88902418392614 * H2x2_1
2409416   +          +     1.35198205638356 * H2x2_2  +     1.49845421410078 * H2x2_3
2409417   +          +    -1.22318137674998 * H2x2_4  +     1.03485654068494 * H2x2_5
2409418   +          +    -0.88760495649169 * H2x2_6  +    -1.94135868960024 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = H3x1_2 + 0.88902418392614 * H2x2_1 + 1.35198205638356 * H2x2_2 
+ 1.49845421410078 * H2x2_3 + -1.22318137674998 * H2x2_4 + 1.03485654068494 * H2x2_5 + 
-0.88760495649169 * H2x2_6 + -1.94135868960024 * H2x2_7 ;
2409419   +   H3x1_3  = H3x1_3  +     -0.5232166311723 * H2x2_1
2409420   +          +    -0.49154441995792 * H2x2_2  +     1.21222773866672 * H2x2_3
2409421   +          +     0.88954765096374 * H2x2_4  +     0.32666743913318 * H2x2_5
2409422   +          +     1.26201705110892 * H2x2_6  +    -2.46564869578322 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = H3x1_3 + -0.5232166311723 * H2x2_1 + -0.49154441995792 * H2x2_2 
+ 1.21222773866672 * H2x2_3 + 0.88954765096374 * H2x2_4 + 0.32666743913318 * H2x2_5 + 
1.26201705110892 * H2x2_6 + -2.46564869578322 * H2x2_7 ;
2409423   +   H3x1_4  = H3x1_4  +     0.93897688204524 * H2x2_1
2409424   +          +    -0.56396325682963 * H2x2_2  +     0.60312223662348 * H2x2_3
2409425   +          +     0.05506195666559 * H2x2_4  +    -1.19478701476792 * H2x2_5
2409426   +          +     1.11111060864544 * H2x2_6  +     0.07602420470068 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = H3x1_4 + 0.93897688204524 * H2x2_1 + -0.56396325682963 * H2x2_2 
+ 0.60312223662348 * H2x2_3 + 0.05506195666559 * H2x2_4 + -1.19478701476792 * H2x2_5 + 
1.11111060864544 * H2x2_6 + 0.07602420470068 * H2x2_7 ;
2409427   +   H3x1_5  = H3x1_5  +    -2.04067007195299 * H2x2_1
2409428   +          +    -0.24511447740547 * H2x2_2  +      1.1403782608351 * H2x2_3
2409429   +          +     0.28313253531571 * H2x2_4  +    -0.31001305293935 * H2x2_5
2409430   +          +     1.43972694265244 * H2x2_6  +     0.27081966717726 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = H3x1_5 + -2.04067007195299 * H2x2_1 + -0.24511447740547 * 
H2x2_2 + 1.1403782608351 * H2x2_3 + 0.28313253531571 * H2x2_4 + -0.31001305293935 * H2x2_5 + 
1.43972694265244 * H2x2_6 + 0.27081966717726 * H2x2_7 ;
2409431   +   H3x1_6  = H3x1_6  +     1.53918759970091 * H2x2_1
2409432   +          +    -1.36834652818881 * H2x2_2  +    -0.97354088259421 * H2x2_3
2409433   +          +     0.73052173697294 * H2x2_4  +     1.34716412811946 * H2x2_5
2409434   +          +     1.66261041249676 * H2x2_6  +    -0.99719318696356 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_6 = H3x1_6 + 1.53918759970091 * H2x2_1 + -1.36834652818881 * H2x2_2 
+ -0.97354088259421 * H2x2_3 + 0.73052173697294 * H2x2_4 + 1.34716412811946 * H2x2_5 + 
1.66261041249676 * H2x2_6 + -0.99719318696356 * H2x2_7 ;
2409435   +   H3x1_7  = H3x1_7  +     1.11994694673604 * H2x2_1
2409436   +          +     -1.6803356528873 * H2x2_2  +    -0.12962793678977 * H2x2_3
2409437   +          +    -0.71896094589725 * H2x2_4  +     0.46037684620833 * H2x2_5
2409438   +          +     0.25911483872618 * H2x2_6  +     1.00876479730932 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_7 = H3x1_7 + 1.11994694673604 * H2x2_1 + -1.6803356528873 * H2x2_2 
+ -0.12962793678977 * H2x2_3 + -0.71896094589725 * H2x2_4 + 0.46037684620833 * H2x2_5 + 
0.25911483872618 * H2x2_6 + 1.00876479730932 * H2x2_7 ;
2409439   +   H3x1_1  =     1.52228889950912 + H3x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 1.52228889950912 + H3x1_1 ;
2409440   +   H3x1_2  =    -0.46625781761332 + H3x1_2 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = -0.46625781761332 + H3x1_2 ;
2409441   +   H3x1_3  =     0.11008388635615 + H3x1_3 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = 0.11008388635615 + H3x1_3 ;
2409442   +   H3x1_4  =    -0.38333236869719 + H3x1_4 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = -0.38333236869719 + H3x1_4 ;
2409443   +   H3x1_5  =    -1.36620648378402 + H3x1_5 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = -1.36620648378402 + H3x1_5 ;
2409444   +   H3x1_6  =     0.41780608126276 + H3x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_6 = 0.41780608126276 + H3x1_6 ;
2409445   +   H3x1_7  =    -0.69490040783623 + H3x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_7 = -0.69490040783623 + H3x1_7 ;
2409446   +   H3x1_1  = SIN(H3x1_1 );
MPRINT(EM_DIAGRAM):   H3x1_1 = SIN(H3x1_1 );
2409447   +   H3x1_2  = SIN(H3x1_2 );
MPRINT(EM_DIAGRAM):   H3x1_2 = SIN(H3x1_2 );
2409448   +   H3x1_3  = SIN(H3x1_3 );
MPRINT(EM_DIAGRAM):   H3x1_3 = SIN(H3x1_3 );
2409449   +   H3x1_4  = SIN(H3x1_4 );
MPRINT(EM_DIAGRAM):   H3x1_4 = SIN(H3x1_4 );
2409450   +   H3x1_5  = SIN(H3x1_5 );
MPRINT(EM_DIAGRAM):   H3x1_5 = SIN(H3x1_5 );
2409451   +   H3x1_6  = SIN(H3x1_6 );
MPRINT(EM_DIAGRAM):   H3x1_6 = SIN(H3x1_6 );
2409452   +   H3x1_7  = SIN(H3x1_7 );
MPRINT(EM_DIAGRAM):   H3x1_7 = SIN(H3x1_7 );
2409453   +END;
MPRINT(EM_DIAGRAM):   END;
2409454   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2409455   +   H3x1_1  = .;
MPRINT(EM_DIAGRAM):   H3x1_1 = .;
2409456   +   H3x1_2  = .;
MPRINT(EM_DIAGRAM):   H3x1_2 = .;
2409457   +   H3x1_3  = .;
MPRINT(EM_DIAGRAM):   H3x1_3 = .;
2409458   +   H3x1_4  = .;
MPRINT(EM_DIAGRAM):   H3x1_4 = .;
2409459   +   H3x1_5  = .;
MPRINT(EM_DIAGRAM):   H3x1_5 = .;
2409460   +   H3x1_6  = .;
MPRINT(EM_DIAGRAM):   H3x1_6 = .;
2409461   +   H3x1_7  = .;
MPRINT(EM_DIAGRAM):   H3x1_7 = .;
2409462   +END;
MPRINT(EM_DIAGRAM):   END;
2409463   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2409464   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2409465   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2409466   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2409467   +   P_DepVar1  =    -2.07102874283902 * H3x1_1  +     2.04799607124649 * H3x1_2
2409468   +          +    -0.05444449856749 * H3x1_3  +    -3.76440287030853 * H3x1_4
2409469   +          +    -0.62776678498994 * H3x1_5  +    -1.00383135301243 * H3x1_6
2409470   +          +     2.26027843968818 * H3x1_7 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.07102874283902 * H3x1_1 + 2.04799607124649 * H3x1_2 + 
-0.05444449856749 * H3x1_3 + -3.76440287030853 * H3x1_4 + -0.62776678498994 * H3x1_5 + 
-1.00383135301243 * H3x1_6 + 2.26027843968818 * H3x1_7 ;
2409471   +   P_DepVar1  =     0.51137297979162 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.51137297979162 + P_DepVar1 ;
2409472   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2409473   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2409474   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2409475   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2409476   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2409477   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2409478   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2409479   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2409480   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2409481   +END;
MPRINT(EM_DIAGRAM):   END;
2409482   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2409483   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2409484   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2409485   +END;
MPRINT(EM_DIAGRAM):   END;
2409486   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2409487   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2409488   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2409489   +END;
MPRINT(EM_DIAGRAM):   END;
2409490   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2409491   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2409492   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2409493   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2409494   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2409495   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2409496   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2409497   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2409498   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2409499   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2409500   +END;
MPRINT(EM_DIAGRAM):   END;
2409501   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2409502   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2409503   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2409504   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2409505    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2409506    quit;
2409507    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2409508    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2409509    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2409510    retain ID 2 Node "AutoNeural12";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural12";
2409511    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2409512    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 16616 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 16616 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

2409513    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2409514    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2409515    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 16616 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 16616 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

2409516    proc sort data=EMWS8.AutoNeural12_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural12_variableset out=_temp2(keep=NAME 
CREATOR);
2409517    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2409518    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL12_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2409519    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2409520    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2409521    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2409522    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2409523    proc contents data=EMWS8.AutoNeural12_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural12_train out=_meta(keep=NAME) noprint;
2409524    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 95 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

2409525    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2409526    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2409527    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 95 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 95 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2409528    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2409529    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2409530    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2409531    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 95 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 95 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2409532    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2409533    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2409533  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 8011 rows and 5 columns.

2409534    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

2409535    proc append base=EMWS8.Ensmbl44_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl44_FCMP data=_tempx;
2409536    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL44_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 8011 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL44_FCMP has 8011 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2409537    filename _pref
2409537  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
2409538    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2409539    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
2409540   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2409541   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
2409542   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2409543   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
2409544   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
2409545   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2409546    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2409547    quit;
2409548    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2409549    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2409550    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2409551    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
2409552    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2409553    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2409554    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2409555    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2409556    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2409557    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
2409558    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2409559    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2409560    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2409561    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2409562    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2409563    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2409564    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
2409565    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

2409566    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2409567    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2409568    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2409569    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2409570    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2409571    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2409572    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2409573    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2409574    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2409574  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

2409575    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2409576    proc append base=EMWS8.Ensmbl44_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl44_FCMP data=_tempx;
2409577    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL44_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL44_FCMP has 8015 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2409578    filename _pref
2409578  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
2409579    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2409580    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
2409581   +
2409582   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
2409583   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
2409583  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
2409584   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
2409585   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
2409586   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
2409587   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
2409588   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2409589    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2409590    quit;
2409591    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2409592    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2409593    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2409594    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
2409595    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2409596    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2409597    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2409598    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2409599    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2409600    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
2409601    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2409602    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2409603    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2409604    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2409605    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2409606    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2409607    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
2409608    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2409609    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2409610    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2409611    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2409612    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2409613    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2409614    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2409615    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2409616    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2409617    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2409617  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

2409618    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2409619    proc append base=EMWS8.Ensmbl44_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl44_FCMP data=_tempx;
2409620    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL44_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL44_FCMP has 8054 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2409621    filename _pref
2409621  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
2409622    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2409623    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
2409624   +
2409625   +
2409626   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
2409627   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
2409628   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
2409629   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
2409630   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
2409631   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2409632   +
2409633   +
2409634   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
2409635   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
2409636   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
2409637   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
2409638   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
2409639   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2409640   +
2409641   +
2409642   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
2409643   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
2409644   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
2409645   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
2409646   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
2409647   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2409648   +
2409649   +
2409650   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
2409651   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
2409652   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
2409653   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
2409654   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
2409655   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2409656   +
2409657   +
2409658   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
2409659   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
2409660   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
2409661   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
2409662   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
2409663   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2409664   +
2409665   +
2409666   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
2409667   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
2409668   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
2409669   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
2409670   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
2409671   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2409672   +
2409673   +
2409674   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
2409675   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
2409676   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
2409677   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
2409678   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
2409679   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2409680   +
2409681   +
2409682   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
2409683   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
2409684   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
2409685   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
2409686   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
2409687   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2409688   +if
2409689   +_FILTERNORM1 not in ( '.')
2409690   + and
2409691   +_FILTERNORM2 not in ( '.')
2409692   + and
2409693   +_FILTERNORM3 not in ( '.')
2409694   + and
2409695   +_FILTERNORM4 not in ( '.')
2409696   + and
2409697   +_FILTERNORM5 not in ( '.')
2409698   + and
2409699   +_FILTERNORM6 not in ( '.')
2409700   + and
2409701   +_FILTERNORM7 not in ( ' ')
2409702   + and
2409703   +_FILTERNORM8 not in ( ' ')
2409704   +and
2409705   +( Dt_Customer ne .)
2409706   +and ( Income ne . and (Income<=107000))
2409707   +and ( Kidhome ne .)
2409708   +and ( MntFishProducts ne .)
2409709   +and ( MntFruits ne .)
2409710   +and ( MntGoldProds ne .)
2409711   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
2409712   +and ( MntSweetProducts ne .)
2409713   +and ( MntWines ne .)
2409714   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
2409715   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
2409716   +and ( NumStorePurchases ne .)
2409717   +and ( NumWebPurchases ne .)
2409718   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
2409719   +and ( Recency ne .)
2409720   +and ( Teenhome ne .)
2409721   +and ( Year_Birth ne .)
2409722   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
2409723   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
2409724   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
2409725   +end;
MPRINT(EM_DIAGRAM):   end;
2409726   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
2409727   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2409728    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2409729    quit;
2409730    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2409731    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2409732    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2409733    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
2409734    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2409735    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2409736    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2409737    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2409738    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2409739    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
2409740    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2409741    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2409742    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2409743    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2409744    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2409745    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2409746    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
2409747    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

2409748    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2409749    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2409750    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2409751    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2409752    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2409753    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2409754    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2409755    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2409756    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2409756  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

2409757    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2409758    proc append base=EMWS8.Ensmbl44_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl44_FCMP data=_tempx;
2409759    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL44_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL44_FCMP has 8120 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2409760    %macro varDept(fcmpdata=,id=);
2409761    %global nobs&id scoreFlag&id;
2409762    %let scoreFlag&id = 0;
2409763    %if &id=1 or ^&fcmpStart %then %do;
2409764    proc sort data=&fcmpdata out=_temp&id nodupkey;
2409765    by NAME;
2409766    where id=&id and LHS in( %let j=1;
2409767    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
2409768    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
2409769    "&var" %let j = %eval(&j+1);
2409770    %end;
2409771    );
2409772    run;
2409773    %let dsid = %sysfunc(open(_temp&id));
2409774    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2409775    %let dsid = %sysfunc(close(&dsid));
2409776    %if &&nobs&id %then %do;
2409777    %let scoreFlag&id = 1;
2409778    %let fcmpStart = 1;
2409779    %end;
2409780    %else %let fcmpStart = 0;
2409781    %end;
2409782    %else %do;
2409783    proc sort data=&fcmpdata out=_tempid;
2409784    where id=&id;
2409785    by LHS;
2409786    run;
2409787    %let dsid = %sysfunc(open(_tempid));
2409788    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2409789    %let dsid = %sysfunc(close(&dsid));
2409790    %if ^&&nobs&id %then %do;
2409791    proc datasets lib=work nolist;
2409792    delete _tempid;
2409793    run;
2409794    quit;
2409795    %end;
2409796    %else %do;
2409797    data _tempAll;
2409798    set %let j=%eval(&id-1);
2409799    %do x=1 %to &j;
2409800    %if &&nobs&x %then %do;
2409801    _temp&x %end;
2409802    %end;
2409803    ;
2409804    run;
2409805    proc sql;
2409806    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
2409806  ! work._tempid p2 where p.name=p2.lhs;
2409807    quit;
2409808    data _temp&id;
2409809    set _temp&id;
2409810    where LHS ne '' and NAME ne '' and Node ne '';
2409811    run;
2409812    proc datasets lib=work nolist;
2409813    delete _tempAll;
2409814    run;
2409815    %let dsid = %sysfunc(open(_temp&id));
2409816    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2409817    %let dsid = %sysfunc(close(&dsid));
2409818    %if ^&&nobs&id %then %do;
2409819    proc datasets lib=work nolist;
2409820    delete _temp&id;
2409821    run;
2409822    quit;
2409823    %end;
2409824    %else %do;
2409825    %let scoreFlag&id = 1;
2409826    data _temp&id;
2409827    set _temp&id;
2409828    where LHS ne NAME and node ne '';
2409829    run;
2409830    %let dsid = %sysfunc(open(_temp&id));
2409831    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2409832    %let dsid = %sysfunc(close(&dsid));
2409833    %if ^&&nobs&id %then %do;
2409834    proc datasets lib=work nolist;
2409835    delete _temp&id;
2409836    run;
2409837    quit;
2409838    %end;
2409839    %else %do;
2409840    proc sort data=_temp&id nodupkey;
2409841    by LHS NAME;
2409842    run;
2409843    %end;
2409844    %end;
2409845    %end;
2409846    %end;
2409847    %mend varDept;
2409848    %macro optCode(outdata=fcmpdata);
2409849    %global fcmpStart;
2409850    %let fcmpStart = 0;
2409851    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
2409852    %let NumNodes=9;
2409853    %do k=1 %to &NumNodes;
2409854    %vardept(fcmpdata=&outdata, id=&k);
2409855    %end;
2409856    %mend optCode;
2409857    %optcode(outData=EMWS8.Ensmbl44_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl44_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL44_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl44_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 260 observations read from the data set EMWS8.ENSMBL44_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 184 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 76 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl44_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL44_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl44_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL44_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl44_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL44_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 76 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 76 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl44_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL44_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 76 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 80 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl44_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL44_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 76 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 119 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl44_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL44_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl44_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL44_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

2409858    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
2409859    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
2409860    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
2409861    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2409862    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
2409863    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
2409864    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
2409865    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2409866    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2409867    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
2409867  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.

2409868    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

2409869    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
2409870    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
2409871    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.03 seconds
      

2409872    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
2409873    * Ensmbl44: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Ensmbl44: Computing metadata for TRAIN data;
2409874    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS8.ENSMBL44_TRAIN.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.07 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl44\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.Ensmbl44_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.Ensmbl44_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.Ensmbl44_TRAIN out=WORK.M0LN3_LU noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0LN3_LU;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M0LN3_LU(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = 
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0LN3_LU;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M0LN3_LU;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M1FMCQJA NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1FMCQJA;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M1FMCQJA;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M15TOQEQ(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M1FMCQJA;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1FMCQJA;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M1FMCQJA;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1FMCQJA;
MPRINT(EMADVISECOLUMNS):   set WORK.M1FMCQJA;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural9_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural9_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl44_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Ensmbl44";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "Ensmbl44";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "Ensmbl44";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "Ensmbl44";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "Ensmbl44";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "Ensmbl44";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "Ensmbl44";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "Ensmbl44";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Ensmbl44";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "Ensmbl44";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl44: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   if NAME in( "I_DepVar" "F_DepVar" "U_DepVar" "_WARN_" "P_DepVar1" 
"P_DepVar0" "R_DepVar1" "R_DepVar0" ) then CREATOR="Ensmbl44";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
2410194    data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
2410195    set EMWS8.Ensmbl44_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl44_EMINFO;
2410196    where DATA='Ensmbl44' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Ensmbl44' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 
'MODEL');
2410197    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.ENSMBL44_EMINFO.
      WHERE (DATA='Ensmbl44') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2410198    data EMWS8.Ensmbl44_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl44_EMINFO;
2410199    length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
2410200    input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
2410201    cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS8.ENSMBL44_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   run;
2410205    run;
2410206    data EMWS8.Ensmbl44_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl44_EMINFO;
2410207    set EMWS8.Ensmbl44_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl44_EMINFO WORK.MODELTEMP_INFO;
2410208    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.ENSMBL44_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.ENSMBL44_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2410209    proc sort data = EMWS8.Ensmbl44_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Ensmbl44_EMINFO NOTHREADS;
2410210    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
2410211    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.ENSMBL44_EMINFO.
NOTE: The data set EMWS8.ENSMBL44_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2410212    proc sort data = EMWS8.AutoNeural9_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.AutoNeural9_EMINFO OUT=WORK.SORTEDEMINFO 
NOTHREADS;
2410213    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
2410214    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set EMWS8.AUTONEURAL9_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2410215    proc sort data = EMWS8.Ensmbl44_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Ensmbl44_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
2410216    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
2410217    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.ENSMBL44_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2410218    data EMWS8.Ensmbl44_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl44_EMINFO;
2410219    merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
2410220    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
2410221    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.ENSMBL44_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2410222    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
2410223    delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
2410224    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
2410225    quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
      

NOTE: View EMWS8.ENSMBL44_TRAIN.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
      
NOTE: View EMWS8.ENSMBL44_VALIDATE.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
