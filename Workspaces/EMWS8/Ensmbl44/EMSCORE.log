MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "20. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17.39 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                20. April 2016
Time:                17.39 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O36EV5AO 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl44\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O36EV5AO new;
MPRINT(EM_DIAGRAM):   run;
2405745    filename emflow
2405745  ! "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl44\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl44\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl44: Scoring AUTONEURAL9_TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2405746    *------------------------------------------------------------*;
2405747    * Ensmbl44: Scoring AUTONEURAL9_TRAIN data;
2405748    *------------------------------------------------------------*;
2405749    data EMWS8.Ensmbl44_TRAIN
2405750    / view=EMWS8.Ensmbl44_TRAIN
2405751    ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl44_TRAIN / view=EMWS8.Ensmbl44_TRAIN ;
2405752    set EMWS8.AutoNeural9_TRAIN
2405753    ;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural9_TRAIN ;
2405754    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl44\EMFLOWSCORE.sas.
2405755   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2405756   +* Ensmbl44: Combine model for DepVar;
MPRINT(EM_DIAGRAM):   * Ensmbl44: Combine model for DepVar;
2405757   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2405758   +* Ensmbl44: Scoring Code of model 1 of 3;
MPRINT(EM_DIAGRAM):   * Ensmbl44: Scoring Code of model 1 of 3;
2405759   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2405760   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2405761   +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
2405762   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
2405763   +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
2405764   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2405765   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2405766   +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
2405767   +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
2405768   +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
2405769   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2405770   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2405771   +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
2405772   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
2405773   +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
2405774   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2405775   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2405776   +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
2405777   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
2405778   +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
2405779   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2405780   +
2405781   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
2405782   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
2405782  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
2405783   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
2405784   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
2405785   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
2405786   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
2405787   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
2405788   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2405789   +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
2405790   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
2405791   +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
2405792   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2405793   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2405794   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
2405795   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2405796   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
2405797   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
2405798   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
2405799   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2405800   +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
2405801   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
2405802   +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
2405803   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2405804   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2405805   +* TOOL: Metadata Node;
MPRINT(EM_DIAGRAM):   * TOOL: Metadata Node;
2405806   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
2405807   +* NODE: Meta;
MPRINT(EM_DIAGRAM):   * NODE: Meta;
2405808   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2405809   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2405810   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
2405811   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2405812   +* NODE: AutoNeural9;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural9;
2405813   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2405814   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2405815   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2405816   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2405817   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2405818   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2405819   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2405820   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2405821   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2405822   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2405823   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2405824   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2405825   +LENGTH _WARN_ $4
2405826   +      F_DepVar  $ 12
2405827   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2405828   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2405829   +
2405830   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2405831   +
2405832   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2405833   +
2405834   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2405835   +
2405836   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2405837   +
2405838   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2405839   +
2405840   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2405841   +
2405842   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2405843   +
2405844   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2405845   +
2405846   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2405847   +
2405848   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2405849   +
2405850   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2405851   +
2405852   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2405853   +
2405854   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2405855   +
2405856   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2405857   +
2405858   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2405859   +
2405860   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2405861   +
2405862   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2405863   +
2405864   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2405865   +
2405866   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2405867   +
2405868   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2405869   +
2405870   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2405871   +
2405872   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2405873   +
2405874   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2405875   +
2405876   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2405877   +
2405878   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2405879   +
2405880   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2405881   +
2405882   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2405883   +
2405884   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2405885   +
2405886   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2405887   +
2405888   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2405889   +
2405890   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2405891   +
2405892   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2405893   +
2405894   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2405895   +
2405896   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2405897   +
2405898   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2405899   +
2405900   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2405901   +
2405902   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2405903   +
2405904   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2405905   +
2405906   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2405907   +
2405908   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2405909   +
2405910   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2405911   +
2405912   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2405913   +
2405914   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2405915   +
2405916   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2405917   +
2405918   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2405919   +
2405920   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2405921   +
2405922   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2405923   +
2405924   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2405925   +
2405926   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2405927   +
2405928   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2405929   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2405930   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2405931   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2405932   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2405933   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2405934   +end;
MPRINT(EM_DIAGRAM):   end;
2405935   +else do;
MPRINT(EM_DIAGRAM):   else do;
2405936   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2405937   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2405938   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2405939   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2405940   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2405941   +   end;
MPRINT(EM_DIAGRAM):   end;
2405942   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2405943   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2405944   +   end;
MPRINT(EM_DIAGRAM):   end;
2405945   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2405946   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2405947   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2405948   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2405949   +   end;
MPRINT(EM_DIAGRAM):   end;
2405950   +end;
MPRINT(EM_DIAGRAM):   end;
2405951   +
2405952   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2405953   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2405954   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2405955   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2405956   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2405957   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2405958   +end;
MPRINT(EM_DIAGRAM):   end;
2405959   +else do;
MPRINT(EM_DIAGRAM):   else do;
2405960   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2405961   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2405962   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2405963   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2405964   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2405965   +   end;
MPRINT(EM_DIAGRAM):   end;
2405966   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2405967   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2405968   +   end;
MPRINT(EM_DIAGRAM):   end;
2405969   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2405970   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2405971   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2405972   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2405973   +   end;
MPRINT(EM_DIAGRAM):   end;
2405974   +end;
MPRINT(EM_DIAGRAM):   end;
2405975   +
2405976   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2405977   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2405978   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2405979   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2405980   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2405981   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2405982   +end;
MPRINT(EM_DIAGRAM):   end;
2405983   +else do;
MPRINT(EM_DIAGRAM):   else do;
2405984   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2405985   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2405986   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2405987   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2405988   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2405989   +   end;
MPRINT(EM_DIAGRAM):   end;
2405990   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2405991   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2405992   +   end;
MPRINT(EM_DIAGRAM):   end;
2405993   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2405994   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2405995   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2405996   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2405997   +   end;
MPRINT(EM_DIAGRAM):   end;
2405998   +end;
MPRINT(EM_DIAGRAM):   end;
2405999   +
2406000   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2406001   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2406002   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2406003   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2406004   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2406005   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2406006   +end;
MPRINT(EM_DIAGRAM):   end;
2406007   +else do;
MPRINT(EM_DIAGRAM):   else do;
2406008   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2406009   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2406010   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2406011   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2406012   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2406013   +   end;
MPRINT(EM_DIAGRAM):   end;
2406014   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2406015   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2406016   +   end;
MPRINT(EM_DIAGRAM):   end;
2406017   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2406018   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2406019   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2406020   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2406021   +   end;
MPRINT(EM_DIAGRAM):   end;
2406022   +end;
MPRINT(EM_DIAGRAM):   end;
2406023   +
2406024   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2406025   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2406026   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2406027   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2406028   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2406029   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2406030   +end;
MPRINT(EM_DIAGRAM):   end;
2406031   +else do;
MPRINT(EM_DIAGRAM):   else do;
2406032   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2406033   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2406034   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2406035   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2406036   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2406037   +   end;
MPRINT(EM_DIAGRAM):   end;
2406038   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2406039   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2406040   +   end;
MPRINT(EM_DIAGRAM):   end;
2406041   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2406042   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2406043   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2406044   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2406045   +   end;
MPRINT(EM_DIAGRAM):   end;
2406046   +end;
MPRINT(EM_DIAGRAM):   end;
2406047   +
2406048   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2406049   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2406050   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2406051   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2406052   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2406053   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2406054   +end;
MPRINT(EM_DIAGRAM):   end;
2406055   +else do;
MPRINT(EM_DIAGRAM):   else do;
2406056   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2406057   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2406058   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2406059   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2406060   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2406061   +   end;
MPRINT(EM_DIAGRAM):   end;
2406062   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2406063   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2406064   +   end;
MPRINT(EM_DIAGRAM):   end;
2406065   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2406066   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2406067   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2406068   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2406069   +   end;
MPRINT(EM_DIAGRAM):   end;
2406070   +end;
MPRINT(EM_DIAGRAM):   end;
2406071   +
2406072   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2406073   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2406074   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2406075   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2406076   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2406077   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2406078   +end;
MPRINT(EM_DIAGRAM):   end;
2406079   +else do;
MPRINT(EM_DIAGRAM):   else do;
2406080   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2406081   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2406082   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2406083   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2406084   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2406085   +   end;
MPRINT(EM_DIAGRAM):   end;
2406086   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2406087   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2406088   +   end;
MPRINT(EM_DIAGRAM):   end;
2406089   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2406090   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2406091   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2406092   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2406093   +   end;
MPRINT(EM_DIAGRAM):   end;
2406094   +end;
MPRINT(EM_DIAGRAM):   end;
2406095   +
2406096   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2406097   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
2406098   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2406099   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2406100   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2406101   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2406102   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2406103   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2406104   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2406105   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2406106   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2406107   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2406108   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2406109   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2406110   +end;
MPRINT(EM_DIAGRAM):   end;
2406111   +else do;
MPRINT(EM_DIAGRAM):   else do;
2406112   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2406113   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2406114   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2406115   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2406116   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2406117   +   end;
MPRINT(EM_DIAGRAM):   end;
2406118   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2406119   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2406120   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2406121   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2406122   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2406123   +   end;
MPRINT(EM_DIAGRAM):   end;
2406124   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2406125   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2406126   +   end;
MPRINT(EM_DIAGRAM):   end;
2406127   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2406128   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2406129   +   end;
MPRINT(EM_DIAGRAM):   end;
2406130   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2406131   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2406132   +   end;
MPRINT(EM_DIAGRAM):   end;
2406133   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2406134   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2406135   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2406136   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2406137   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2406138   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2406139   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2406140   +   end;
MPRINT(EM_DIAGRAM):   end;
2406141   +end;
MPRINT(EM_DIAGRAM):   end;
2406142   +
2406143   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2406144   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2406145   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
2406146   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2406147   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2406148   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2406149   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2406150   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2406151   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2406152   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2406153   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2406154   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2406155   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2406156   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2406157   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2406158   +end;
MPRINT(EM_DIAGRAM):   end;
2406159   +else do;
MPRINT(EM_DIAGRAM):   else do;
2406160   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2406161   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2406162   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2406163   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2406164   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2406165   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2406166   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2406167   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2406168   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2406169   +         end;
MPRINT(EM_DIAGRAM):   end;
2406170   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2406171   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2406172   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2406173   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2406174   +            end;
MPRINT(EM_DIAGRAM):   end;
2406175   +         end;
MPRINT(EM_DIAGRAM):   end;
2406176   +      end;
MPRINT(EM_DIAGRAM):   end;
2406177   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2406178   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2406179   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2406180   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2406181   +         end;
MPRINT(EM_DIAGRAM):   end;
2406182   +      end;
MPRINT(EM_DIAGRAM):   end;
2406183   +   end;
MPRINT(EM_DIAGRAM):   end;
2406184   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2406185   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2406186   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2406187   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2406188   +      end;
MPRINT(EM_DIAGRAM):   end;
2406189   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2406190   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2406191   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2406192   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2406193   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2406194   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2406195   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2406196   +         end;
MPRINT(EM_DIAGRAM):   end;
2406197   +      end;
MPRINT(EM_DIAGRAM):   end;
2406198   +   end;
MPRINT(EM_DIAGRAM):   end;
2406199   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2406200   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2406201   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2406202   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2406203   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2406204   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2406205   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2406206   +   end;
MPRINT(EM_DIAGRAM):   end;
2406207   +end;
MPRINT(EM_DIAGRAM):   end;
2406208   +
2406209   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2406210   +*** Checking missing input Interval
2406211   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2406212   +
2406213   +IF NMISS(
2406214   +   AcceptedCmpTotal ,
2406215   +   Age ,
2406216   +   Frq ,
2406217   +   Income ,
2406218   +   Kidhome ,
2406219   +   Mnt ,
2406220   +   MntFishProducts ,
2406221   +   MntFruits ,
2406222   +   MntGoldProds ,
2406223   +   MntMeatProducts ,
2406224   +   MntSweetProducts ,
2406225   +   MntWines ,
2406226   +   MonthsAsCustomer ,
2406227   +   NumCatalogPurchases ,
2406228   +   NumDealsPurchases ,
2406229   +   NumDistPurchases ,
2406230   +   NumStorePurchases ,
2406231   +   NumWebPurchases ,
2406232   +   NumWebVisitsMonth ,
2406233   +   RFMstat ,
2406234   +   RMntFrq ,
2406235   +   Recency ,
2406236   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
2406237   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2406238   +
2406239   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2406240   +END;
MPRINT(EM_DIAGRAM):   END;
2406241   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2406242   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2406243   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2406244   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2406245   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2406246   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2406247   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2406248   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2406249   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2406250   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2406251   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2406252   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2406253   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2406254   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2406255   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2406256   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2406257   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2406258   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2406259   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2406260   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2406261   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2406262   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2406263   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
2406264   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2406265   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2406266   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2406267   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2406268   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2406269   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2406270   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2406271   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2406272   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2406273   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2406274   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2406275   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2406276   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2406277   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2406278   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2406279   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2406280   +END;
MPRINT(EM_DIAGRAM):   END;
2406281   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2406282   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2406283   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2406284   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2406285   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2406286   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2406287   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2406288   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2406289   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2406290   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2406291   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2406292   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2406293   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2406294   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2406295   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2406296   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2406297   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2406298   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2406299   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2406300   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2406301   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2406302   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2406303   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
2406304   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2406305   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2406306   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2406307   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2406308   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2406309   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2406310   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2406311   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2406312   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2406313   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2406314   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
2406315   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2406316   +   ELSE S_NumCatalogPurchases
2406317   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2406318   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2406319   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2406320   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2406321   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2406322   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2406323   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2406324   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2406325   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2406326   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2406327   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2406328   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2406329   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2406330   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2406331   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2406332   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2406333   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2406334   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2406335   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2406336   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2406337   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2406338   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2406339   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2406340   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2406341   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2406342   +END;
MPRINT(EM_DIAGRAM):   END;
2406343   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2406344   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2406345   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2406346   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2406347   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2406348   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2406349   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2406350   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2406351   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2406352   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2406353   +   H1x1_1  =     -0.7790327388408 * S_AcceptedCmpTotal
2406354   +          +     0.32193739579856 * S_Age  +    -0.43875684835169 * S_Frq
2406355   +          +     0.13013240455049 * S_Income  +    -0.74127716462976 *
2406356   +        S_Kidhome  +    -0.86416600561474 * S_Mnt  +     0.94819226754442 *
2406357   +        S_MntFishProducts  +     0.15895119408799 * S_MntFruits
2406358   +          +     0.03658391935071 * S_MntGoldProds  +    -3.75052142292398 *
2406359   +        S_MntMeatProducts  +    -0.22192220883538 * S_MntSweetProducts
2406360   +          +     0.80534656860633 * S_MntWines  +     0.16144794241259 *
2406361   +        S_MonthsAsCustomer  +    -1.53040364803625 * S_NumCatalogPurchases
2406362   +          +    -1.09856598010056 * S_NumDealsPurchases
2406363   +          +    -0.10571850472514 * S_NumDistPurchases
2406364   +          +     0.11898210654227 * S_NumStorePurchases
2406365   +          +      0.5984912060231 * S_NumWebPurchases
2406366   +          +     0.78592531126942 * S_NumWebVisitsMonth
2406367   +          +    -0.50004686386273 * S_RFMstat  +     0.40804018151571 *
2406368   +        S_RMntFrq  +    -0.94753260620308 * S_Recency
2406369   +          +    -0.49604118088328 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.7790327388408 * S_AcceptedCmpTotal + 0.32193739579856 * 
S_Age + -0.43875684835169 * S_Frq + 0.13013240455049 * S_Income + -0.74127716462976 * 
S_Kidhome + -0.86416600561474 * S_Mnt + 0.94819226754442 * S_MntFishProducts + 
0.15895119408799 * S_MntFruits + 0.03658391935071 * S_MntGoldProds + -3.75052142292398 * 
S_MntMeatProducts + -0.22192220883538 * S_MntSweetProducts + 0.80534656860633 * S_MntWines + 
0.16144794241259 * S_MonthsAsCustomer + -1.53040364803625 * S_NumCatalogPurchases + 
-1.09856598010056 * S_NumDealsPurchases + -0.10571850472514 * S_NumDistPurchases + 
0.11898210654227 * S_NumStorePurchases + 0.5984912060231 * S_NumWebPurchases + 
0.78592531126942 * S_NumWebVisitsMonth + -0.50004686386273 * S_RFMstat + 0.40804018151571 * 
S_RMntFrq + -0.94753260620308 * S_Recency + -0.49604118088328 * S_Teenhome ;
2406370   +   H1x1_2  =    -0.22226926295489 * S_AcceptedCmpTotal
2406371   +          +     0.08523894206962 * S_Age  +    -0.13010378102207 * S_Frq
2406372   +          +    -0.61810906923536 * S_Income  +     0.26583917928045 *
2406373   +        S_Kidhome  +     0.57213479787981 * S_Mnt  +    -0.58077613046442 *
2406374   +        S_MntFishProducts  +      0.1530301493776 * S_MntFruits
2406375   +          +      0.4586167382631 * S_MntGoldProds  +     1.40179051129147 *
2406376   +        S_MntMeatProducts  +      0.0231413770297 * S_MntSweetProducts
2406377   +          +    -0.08483682112771 * S_MntWines  +     0.22891006905064 *
2406378   +        S_MonthsAsCustomer  +    -1.21866617917435 * S_NumCatalogPurchases
2406379   +          +    -0.84042044250624 * S_NumDealsPurchases
2406380   +          +    -0.10246261015488 * S_NumDistPurchases
2406381   +          +     0.06886149708824 * S_NumStorePurchases
2406382   +          +     0.63156910388199 * S_NumWebPurchases
2406383   +          +    -1.33032061845311 * S_NumWebVisitsMonth
2406384   +          +     0.51240040684649 * S_RFMstat  +     0.77604047421115 *
2406385   +        S_RMntFrq  +     1.27964260226958 * S_Recency
2406386   +          +     0.12022076571016 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.22226926295489 * S_AcceptedCmpTotal + 0.08523894206962 * 
S_Age + -0.13010378102207 * S_Frq + -0.61810906923536 * S_Income + 0.26583917928045 * 
S_Kidhome + 0.57213479787981 * S_Mnt + -0.58077613046442 * S_MntFishProducts + 0.1530301493776 
* S_MntFruits + 0.4586167382631 * S_MntGoldProds + 1.40179051129147 * S_MntMeatProducts + 
0.0231413770297 * S_MntSweetProducts + -0.08483682112771 * S_MntWines + 0.22891006905064 * 
S_MonthsAsCustomer + -1.21866617917435 * S_NumCatalogPurchases + -0.84042044250624 * 
S_NumDealsPurchases + -0.10246261015488 * S_NumDistPurchases + 0.06886149708824 * 
S_NumStorePurchases + 0.63156910388199 * S_NumWebPurchases + -1.33032061845311 * 
S_NumWebVisitsMonth + 0.51240040684649 * S_RFMstat + 0.77604047421115 * S_RMntFrq + 
1.27964260226958 * S_Recency + 0.12022076571016 * S_Teenhome ;
2406387   +   H1x1_3  =     1.19879097976404 * S_AcceptedCmpTotal
2406388   +          +     0.14973951999399 * S_Age  +    -0.90630756390399 * S_Frq
2406389   +          +     0.64934241358682 * S_Income  +    -0.66249532206724 *
2406390   +        S_Kidhome  +     0.54195490560813 * S_Mnt  +    -0.58497380565417 *
2406391   +        S_MntFishProducts  +     0.12409202833851 * S_MntFruits
2406392   +          +     0.44480061346561 * S_MntGoldProds  +     3.27513201048136 *
2406393   +        S_MntMeatProducts  +     -0.1256493054184 * S_MntSweetProducts
2406394   +          +    -0.56080685022301 * S_MntWines  +     0.08633469383177 *
2406395   +        S_MonthsAsCustomer  +     0.45482673505107 * S_NumCatalogPurchases
2406396   +          +     0.45393712455366 * S_NumDealsPurchases
2406397   +          +    -0.25292198053552 * S_NumDistPurchases
2406398   +          +    -1.35582215064749 * S_NumStorePurchases
2406399   +          +    -0.83132202302639 * S_NumWebPurchases
2406400   +          +     1.87116225272678 * S_NumWebVisitsMonth
2406401   +          +     0.39564162951481 * S_RFMstat  +    -1.08810221295144 *
2406402   +        S_RMntFrq  +    -2.07407859514648 * S_Recency
2406403   +          +     -0.6849099475723 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.19879097976404 * S_AcceptedCmpTotal + 0.14973951999399 * 
S_Age + -0.90630756390399 * S_Frq + 0.64934241358682 * S_Income + -0.66249532206724 * 
S_Kidhome + 0.54195490560813 * S_Mnt + -0.58497380565417 * S_MntFishProducts + 
0.12409202833851 * S_MntFruits + 0.44480061346561 * S_MntGoldProds + 3.27513201048136 * 
S_MntMeatProducts + -0.1256493054184 * S_MntSweetProducts + -0.56080685022301 * S_MntWines + 
0.08633469383177 * S_MonthsAsCustomer + 0.45482673505107 * S_NumCatalogPurchases + 
0.45393712455366 * S_NumDealsPurchases + -0.25292198053552 * S_NumDistPurchases + 
-1.35582215064749 * S_NumStorePurchases + -0.83132202302639 * S_NumWebPurchases + 
1.87116225272678 * S_NumWebVisitsMonth + 0.39564162951481 * S_RFMstat + -1.08810221295144 * 
S_RMntFrq + -2.07407859514648 * S_Recency + -0.6849099475723 * S_Teenhome ;
2406404   +   H1x1_1  = H1x1_1  +     0.81075414854045 * AcceptedCmp10
2406405   +          +    -0.33403710427327 * AcceptedCmp20  +    -0.62242387435975 *
2406406   +        AcceptedCmp30  +    -0.89439410552439 * AcceptedCmp40
2406407   +          +     0.77335976756467 * AcceptedCmp50  +    -0.08825784612626 *
2406408   +        Complain0  +      0.3404395194267 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.81075414854045 * AcceptedCmp10 + -0.33403710427327 * 
AcceptedCmp20 + -0.62242387435975 * AcceptedCmp30 + -0.89439410552439 * AcceptedCmp40 + 
0.77335976756467 * AcceptedCmp50 + -0.08825784612626 * Complain0 + 0.3404395194267 * 
HigherEducationBinary0 ;
2406409   +   H1x1_2  = H1x1_2  +    -0.16741179709566 * AcceptedCmp10
2406410   +          +    -0.53751033948061 * AcceptedCmp20  +     0.80285496945068 *
2406411   +        AcceptedCmp30  +     0.39379279966091 * AcceptedCmp40
2406412   +          +    -1.40366799083237 * AcceptedCmp50  +     -0.4265482924132 *
2406413   +        Complain0  +     0.37272103593422 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.16741179709566 * AcceptedCmp10 + -0.53751033948061 
* AcceptedCmp20 + 0.80285496945068 * AcceptedCmp30 + 0.39379279966091 * AcceptedCmp40 + 
-1.40366799083237 * AcceptedCmp50 + -0.4265482924132 * Complain0 + 0.37272103593422 * 
HigherEducationBinary0 ;
2406414   +   H1x1_3  = H1x1_3  +    -0.19417657656326 * AcceptedCmp10
2406415   +          +    -0.06547746897317 * AcceptedCmp20  +     0.21980739904513 *
2406416   +        AcceptedCmp30  +    -0.19452210052301 * AcceptedCmp40
2406417   +          +    -2.02403282278574 * AcceptedCmp50  +    -0.18250261144524 *
2406418   +        Complain0  +     0.34168103813312 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.19417657656326 * AcceptedCmp10 + -0.06547746897317 
* AcceptedCmp20 + 0.21980739904513 * AcceptedCmp30 + -0.19452210052301 * AcceptedCmp40 + 
-2.02403282278574 * AcceptedCmp50 + -0.18250261144524 * Complain0 + 0.34168103813312 * 
HigherEducationBinary0 ;
2406419   +   H1x1_1  = H1x1_1  +    -0.03956789621002 * Education2n_Cycle
2406420   +          +    -0.38372374638888 * EducationBasic  +     -0.4178927802606 *
2406421   +        EducationGraduation  +    -0.61278625923288 * EducationMaster
2406422   +          +      0.4695898100094 * Marital_StatusDivorced
2406423   +          +    -0.52137742289262 * Marital_StatusMarried
2406424   +          +    -0.32382086914936 * Marital_StatusSingle
2406425   +          +    -0.66163012672344 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.03956789621002 * Education2n_Cycle + 
-0.38372374638888 * EducationBasic + -0.4178927802606 * EducationGraduation + 
-0.61278625923288 * EducationMaster + 0.4695898100094 * Marital_StatusDivorced + 
-0.52137742289262 * Marital_StatusMarried + -0.32382086914936 * Marital_StatusSingle + 
-0.66163012672344 * Marital_StatusTogether ;
2406426   +   H1x1_2  = H1x1_2  +    -0.25832319223886 * Education2n_Cycle
2406427   +          +     0.05602860720141 * EducationBasic  +    -0.86282852488383 *
2406428   +        EducationGraduation  +     0.18916317018059 * EducationMaster
2406429   +          +    -1.04858218653238 * Marital_StatusDivorced
2406430   +          +     2.41098335093061 * Marital_StatusMarried
2406431   +          +    -1.94696044861334 * Marital_StatusSingle
2406432   +          +     2.16021514856437 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.25832319223886 * Education2n_Cycle + 
0.05602860720141 * EducationBasic + -0.86282852488383 * EducationGraduation + 0.18916317018059 
* EducationMaster + -1.04858218653238 * Marital_StatusDivorced + 2.41098335093061 * 
Marital_StatusMarried + -1.94696044861334 * Marital_StatusSingle + 2.16021514856437 * 
Marital_StatusTogether ;
2406433   +   H1x1_3  = H1x1_3  +    -0.05351872242069 * Education2n_Cycle
2406434   +          +    -0.56850783552841 * EducationBasic  +    -0.14880907057098 *
2406435   +        EducationGraduation  +    -0.32850851013319 * EducationMaster
2406436   +          +     0.42964114177062 * Marital_StatusDivorced
2406437   +          +    -0.38607635605816 * Marital_StatusMarried
2406438   +          +    -0.02157405407852 * Marital_StatusSingle
2406439   +          +    -0.59995619744527 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.05351872242069 * Education2n_Cycle + 
-0.56850783552841 * EducationBasic + -0.14880907057098 * EducationGraduation + 
-0.32850851013319 * EducationMaster + 0.42964114177062 * Marital_StatusDivorced + 
-0.38607635605816 * Marital_StatusMarried + -0.02157405407852 * Marital_StatusSingle + 
-0.59995619744527 * Marital_StatusTogether ;
2406440   +   H1x1_1  =    -0.53239337390307 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.53239337390307 + H1x1_1 ;
2406441   +   H1x1_2  =     0.99428677123948 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.99428677123948 + H1x1_2 ;
2406442   +   H1x1_3  =       1.835877082844 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.835877082844 + H1x1_3 ;
2406443   +   H1x1_4  = 0;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0;
2406444   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
2406445   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2406446   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
2406447   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
2406448   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
2406449   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
2406450   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
2406451   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
2406452   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
2406453   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
2406454   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
2406455   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
2406456   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
2406457   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
2406458   +END;
MPRINT(EM_DIAGRAM):   END;
2406459   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2406460   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2406461   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2406462   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2406463   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2406464   +END;
MPRINT(EM_DIAGRAM):   END;
2406465   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2406466   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2406467   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2406468   +
2406469   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2406470   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2406471   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2406472   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2406473   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2406474   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2406475   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2406476   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2406477   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2406478   +end;
MPRINT(EM_DIAGRAM):   end;
2406479   +else do;
MPRINT(EM_DIAGRAM):   else do;
2406480   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2406481   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2406482   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2406483   +   end;
MPRINT(EM_DIAGRAM):   end;
2406484   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2406485   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2406486   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2406487   +   end;
MPRINT(EM_DIAGRAM):   end;
2406488   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2406489   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2406490   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2406491   +   end;
MPRINT(EM_DIAGRAM):   end;
2406492   +end;
MPRINT(EM_DIAGRAM):   end;
2406493   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2406494   +   P_DepVar1  =    -3.41904253756965 * H1x1_1  +    -7.11204151517034 * H1x1_2
2406495   +          +     10.7909509395818 * H1x1_3  +    -2.20432578352426 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.41904253756965 * H1x1_1 + -7.11204151517034 * H1x1_2 + 
10.7909509395818 * H1x1_3 + -2.20432578352426 * H1x1_4 ;
2406496   +   P_DepVar1  =    -3.66951098257489 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.66951098257489 + P_DepVar1 ;
2406497   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2406498   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2406499   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2406500   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2406501   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2406502   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2406503   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2406504   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2406505   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2406506   +END;
MPRINT(EM_DIAGRAM):   END;
2406507   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2406508   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2406509   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2406510   +END;
MPRINT(EM_DIAGRAM):   END;
2406511   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2406512   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2406513   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2406514   +END;
MPRINT(EM_DIAGRAM):   END;
2406515   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2406516   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2406517   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2406518   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2406519   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2406520   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2406521   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2406522   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2406523   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2406524   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2406525   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2406526   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2406527   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2406528   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2406529   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2406530   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2406531   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2406532   +END;
MPRINT(EM_DIAGRAM):   END;
2406533   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2406534   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2406535   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2406536   +drop
2406537   +H1x1_1
2406538   +H1x1_2
2406539   +H1x1_3
2406540   +H1x1_4
2406541   +;
MPRINT(EM_DIAGRAM):   drop H1x1_1 H1x1_2 H1x1_3 H1x1_4 ;
2406542   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2406543   +* Renaming variables for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural9;
2406544   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2406545   +* Renaming Posterior variables for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural9;
2406546   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2406547   +drop AutoNeural9_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_P_DepVar1;
2406548   +AutoNeural9_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural9_P_DepVar1 = P_DepVar1;
2406549   +drop AutoNeural9_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_P_DepVar0;
2406550   +AutoNeural9_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural9_P_DepVar0 = P_DepVar0;
2406551   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2406552   +* Renaming Into variables for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for AutoNeural9;
2406553   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2406554   +length AutoNeural9_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length AutoNeural9_I_DepVar $32;
2406555   +drop AutoNeural9_I_DepVar;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_I_DepVar;
2406556   +AutoNeural9_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   AutoNeural9_I_DepVar = I_DepVar;
2406557   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2406558   +* Renaming _WARN_ variable for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural9;
2406559   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2406560   +length AutoNeural9_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural9_WARN_ $4;
2406561   +drop AutoNeural9_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_WARN_;
2406562   +AutoNeural9_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural9_WARN_ = _WARN_;
2406563   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2406564   +* Ensmbl44: Scoring Code of model 2 of 3;
MPRINT(EM_DIAGRAM):   * Ensmbl44: Scoring Code of model 2 of 3;
2406565   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2406566   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2406567   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
2406568   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2406569   +* NODE: AutoNeural11;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural11;
2406570   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2406571   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2406572   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2406573   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2406574   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2406575   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2406576   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2406577   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2406578   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2406579   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2406580   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2406581   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2406582   +LENGTH _WARN_ $4
2406583   +      F_DepVar  $ 12
2406584   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2406585   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2406586   +
2406587   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2406588   +
2406589   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2406590   +
2406591   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2406592   +
2406593   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2406594   +
2406595   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2406596   +
2406597   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2406598   +
2406599   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2406600   +
2406601   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2406602   +
2406603   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2406604   +
2406605   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2406606   +
2406607   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2406608   +
2406609   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2406610   +
2406611   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2406612   +
2406613   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2406614   +
2406615   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2406616   +
2406617   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2406618   +
2406619   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2406620   +
2406621   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2406622   +
2406623   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2406624   +
2406625   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2406626   +
2406627   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2406628   +
2406629   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2406630   +
2406631   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2406632   +
2406633   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2406634   +
2406635   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2406636   +
2406637   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2406638   +
2406639   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2406640   +
2406641   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2406642   +
2406643   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2406644   +
2406645   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2406646   +
2406647   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2406648   +
2406649   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2406650   +
2406651   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2406652   +
2406653   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2406654   +
2406655   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2406656   +
2406657   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2406658   +
2406659   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2406660   +
2406661   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2406662   +
2406663   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2406664   +
2406665   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2406666   +
2406667   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2406668   +
2406669   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
2406670   +
2406671   +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
2406672   +
2406673   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2406674   +
2406675   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2406676   +
2406677   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2406678   +
2406679   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2406680   +
2406681   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2406682   +
2406683   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2406684   +
2406685   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2406686   +
2406687   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2406688   +
2406689   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2406690   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2406691   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2406692   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2406693   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2406694   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2406695   +end;
MPRINT(EM_DIAGRAM):   end;
2406696   +else do;
MPRINT(EM_DIAGRAM):   else do;
2406697   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2406698   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2406699   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2406700   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2406701   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2406702   +   end;
MPRINT(EM_DIAGRAM):   end;
2406703   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2406704   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2406705   +   end;
MPRINT(EM_DIAGRAM):   end;
2406706   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2406707   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2406708   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2406709   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2406710   +   end;
MPRINT(EM_DIAGRAM):   end;
2406711   +end;
MPRINT(EM_DIAGRAM):   end;
2406712   +
2406713   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2406714   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2406715   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2406716   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2406717   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2406718   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2406719   +end;
MPRINT(EM_DIAGRAM):   end;
2406720   +else do;
MPRINT(EM_DIAGRAM):   else do;
2406721   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2406722   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2406723   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2406724   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2406725   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2406726   +   end;
MPRINT(EM_DIAGRAM):   end;
2406727   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2406728   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2406729   +   end;
MPRINT(EM_DIAGRAM):   end;
2406730   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2406731   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2406732   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2406733   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2406734   +   end;
MPRINT(EM_DIAGRAM):   end;
2406735   +end;
MPRINT(EM_DIAGRAM):   end;
2406736   +
2406737   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2406738   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2406739   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2406740   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2406741   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2406742   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2406743   +end;
MPRINT(EM_DIAGRAM):   end;
2406744   +else do;
MPRINT(EM_DIAGRAM):   else do;
2406745   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2406746   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2406747   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2406748   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2406749   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2406750   +   end;
MPRINT(EM_DIAGRAM):   end;
2406751   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2406752   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2406753   +   end;
MPRINT(EM_DIAGRAM):   end;
2406754   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2406755   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2406756   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2406757   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2406758   +   end;
MPRINT(EM_DIAGRAM):   end;
2406759   +end;
MPRINT(EM_DIAGRAM):   end;
2406760   +
2406761   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2406762   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2406763   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2406764   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2406765   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2406766   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2406767   +end;
MPRINT(EM_DIAGRAM):   end;
2406768   +else do;
MPRINT(EM_DIAGRAM):   else do;
2406769   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2406770   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2406771   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2406772   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2406773   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2406774   +   end;
MPRINT(EM_DIAGRAM):   end;
2406775   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2406776   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2406777   +   end;
MPRINT(EM_DIAGRAM):   end;
2406778   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2406779   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2406780   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2406781   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2406782   +   end;
MPRINT(EM_DIAGRAM):   end;
2406783   +end;
MPRINT(EM_DIAGRAM):   end;
2406784   +
2406785   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2406786   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2406787   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2406788   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2406789   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2406790   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2406791   +end;
MPRINT(EM_DIAGRAM):   end;
2406792   +else do;
MPRINT(EM_DIAGRAM):   else do;
2406793   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2406794   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2406795   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2406796   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2406797   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2406798   +   end;
MPRINT(EM_DIAGRAM):   end;
2406799   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2406800   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2406801   +   end;
MPRINT(EM_DIAGRAM):   end;
2406802   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2406803   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2406804   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2406805   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2406806   +   end;
MPRINT(EM_DIAGRAM):   end;
2406807   +end;
MPRINT(EM_DIAGRAM):   end;
2406808   +
2406809   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2406810   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2406811   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2406812   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2406813   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2406814   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2406815   +end;
MPRINT(EM_DIAGRAM):   end;
2406816   +else do;
MPRINT(EM_DIAGRAM):   else do;
2406817   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2406818   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2406819   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2406820   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2406821   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2406822   +   end;
MPRINT(EM_DIAGRAM):   end;
2406823   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2406824   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2406825   +   end;
MPRINT(EM_DIAGRAM):   end;
2406826   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2406827   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2406828   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2406829   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2406830   +   end;
MPRINT(EM_DIAGRAM):   end;
2406831   +end;
MPRINT(EM_DIAGRAM):   end;
2406832   +
2406833   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2406834   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2406835   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2406836   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2406837   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2406838   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2406839   +end;
MPRINT(EM_DIAGRAM):   end;
2406840   +else do;
MPRINT(EM_DIAGRAM):   else do;
2406841   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2406842   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2406843   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2406844   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2406845   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2406846   +   end;
MPRINT(EM_DIAGRAM):   end;
2406847   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2406848   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2406849   +   end;
MPRINT(EM_DIAGRAM):   end;
2406850   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2406851   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2406852   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2406853   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2406854   +   end;
MPRINT(EM_DIAGRAM):   end;
2406855   +end;
MPRINT(EM_DIAGRAM):   end;
2406856   +
2406857   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2406858   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
2406859   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2406860   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2406861   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2406862   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2406863   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2406864   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2406865   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2406866   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2406867   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2406868   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2406869   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2406870   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2406871   +end;
MPRINT(EM_DIAGRAM):   end;
2406872   +else do;
MPRINT(EM_DIAGRAM):   else do;
2406873   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2406874   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2406875   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2406876   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2406877   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2406878   +   end;
MPRINT(EM_DIAGRAM):   end;
2406879   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2406880   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2406881   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2406882   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2406883   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2406884   +   end;
MPRINT(EM_DIAGRAM):   end;
2406885   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2406886   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2406887   +   end;
MPRINT(EM_DIAGRAM):   end;
2406888   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2406889   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2406890   +   end;
MPRINT(EM_DIAGRAM):   end;
2406891   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2406892   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2406893   +   end;
MPRINT(EM_DIAGRAM):   end;
2406894   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2406895   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2406896   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2406897   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2406898   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2406899   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2406900   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2406901   +   end;
MPRINT(EM_DIAGRAM):   end;
2406902   +end;
MPRINT(EM_DIAGRAM):   end;
2406903   +
2406904   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2406905   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2406906   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
2406907   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2406908   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2406909   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2406910   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2406911   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2406912   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2406913   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2406914   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2406915   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2406916   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2406917   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2406918   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2406919   +end;
MPRINT(EM_DIAGRAM):   end;
2406920   +else do;
MPRINT(EM_DIAGRAM):   else do;
2406921   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2406922   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2406923   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2406924   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2406925   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2406926   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2406927   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2406928   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2406929   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2406930   +         end;
MPRINT(EM_DIAGRAM):   end;
2406931   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2406932   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2406933   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2406934   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2406935   +            end;
MPRINT(EM_DIAGRAM):   end;
2406936   +         end;
MPRINT(EM_DIAGRAM):   end;
2406937   +      end;
MPRINT(EM_DIAGRAM):   end;
2406938   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2406939   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2406940   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2406941   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2406942   +         end;
MPRINT(EM_DIAGRAM):   end;
2406943   +      end;
MPRINT(EM_DIAGRAM):   end;
2406944   +   end;
MPRINT(EM_DIAGRAM):   end;
2406945   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2406946   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2406947   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2406948   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2406949   +      end;
MPRINT(EM_DIAGRAM):   end;
2406950   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2406951   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2406952   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2406953   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2406954   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2406955   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2406956   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2406957   +         end;
MPRINT(EM_DIAGRAM):   end;
2406958   +      end;
MPRINT(EM_DIAGRAM):   end;
2406959   +   end;
MPRINT(EM_DIAGRAM):   end;
2406960   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2406961   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2406962   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2406963   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2406964   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2406965   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2406966   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2406967   +   end;
MPRINT(EM_DIAGRAM):   end;
2406968   +end;
MPRINT(EM_DIAGRAM):   end;
2406969   +
2406970   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2406971   +*** Checking missing input Interval
2406972   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2406973   +
2406974   +IF NMISS(
2406975   +   AcceptedCmpTotal ,
2406976   +   Age ,
2406977   +   Frq ,
2406978   +   Income ,
2406979   +   Kidhome ,
2406980   +   Mnt ,
2406981   +   MntFishProducts ,
2406982   +   MntFruits ,
2406983   +   MntGoldProds ,
2406984   +   MntMeatProducts ,
2406985   +   MntSweetProducts ,
2406986   +   MntWines ,
2406987   +   MonthsAsCustomer ,
2406988   +   NumCatalogPurchases ,
2406989   +   NumDealsPurchases ,
2406990   +   NumDistPurchases ,
2406991   +   NumStorePurchases ,
2406992   +   NumWebPurchases ,
2406993   +   NumWebVisitsMonth ,
2406994   +   RFMstat ,
2406995   +   RMntFrq ,
2406996   +   Recency ,
2406997   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
2406998   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2406999   +
2407000   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2407001   +END;
MPRINT(EM_DIAGRAM):   END;
2407002   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2407003   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2407004   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2407005   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2407006   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2407007   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2407008   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2407009   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2407010   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2407011   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2407012   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2407013   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2407014   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2407015   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2407016   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2407017   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2407018   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2407019   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2407020   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2407021   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2407022   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2407023   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2407024   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
2407025   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2407026   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2407027   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2407028   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2407029   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2407030   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2407031   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2407032   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2407033   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2407034   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2407035   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2407036   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2407037   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2407038   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2407039   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2407040   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2407041   +END;
MPRINT(EM_DIAGRAM):   END;
2407042   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2407043   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2407044   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2407045   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2407046   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2407047   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2407048   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2407049   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2407050   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2407051   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2407052   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2407053   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2407054   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2407055   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2407056   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2407057   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2407058   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2407059   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2407060   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2407061   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2407062   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2407063   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2407064   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
2407065   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2407066   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2407067   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2407068   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2407069   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2407070   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2407071   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2407072   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2407073   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2407074   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2407075   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
2407076   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2407077   +   ELSE S_NumCatalogPurchases
2407078   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2407079   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2407080   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2407081   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2407082   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2407083   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2407084   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2407085   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2407086   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2407087   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2407088   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2407089   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2407090   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2407091   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2407092   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2407093   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2407094   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2407095   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2407096   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2407097   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2407098   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2407099   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2407100   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2407101   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2407102   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2407103   +END;
MPRINT(EM_DIAGRAM):   END;
2407104   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2407105   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2407106   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2407107   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2407108   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2407109   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2407110   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2407111   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2407112   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2407113   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2407114   +   H1x1_1  =     0.08465472857554 * S_AcceptedCmpTotal
2407115   +          +     0.23104131534618 * S_Age  +     0.27646175976509 * S_Frq
2407116   +          +     0.45938840681203 * S_Income  +     0.09814900830666 *
2407117   +        S_Kidhome  +     0.23249430277518 * S_Mnt  +    -0.51905493105122 *
2407118   +        S_MntFishProducts  +    -0.07604226481078 * S_MntFruits
2407119   +          +     0.10100393832157 * S_MntGoldProds  +     1.56159221713858 *
2407120   +        S_MntMeatProducts  +     0.12166799382268 * S_MntSweetProducts
2407121   +          +    -0.63388816790524 * S_MntWines  +     0.00878303775585 *
2407122   +        S_MonthsAsCustomer  +     0.01990411233136 * S_NumCatalogPurchases
2407123   +          +     0.19770934886328 * S_NumDealsPurchases
2407124   +          +      0.0515215988111 * S_NumDistPurchases
2407125   +          +    -0.34569346346089 * S_NumStorePurchases
2407126   +          +    -0.27122293596124 * S_NumWebPurchases
2407127   +          +    -0.17061565609755 * S_NumWebVisitsMonth
2407128   +          +      0.1271178187502 * S_RFMstat  +     0.38306508975954 *
2407129   +        S_RMntFrq  +     0.05823588653853 * S_Recency
2407130   +          +    -0.03760117378617 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.08465472857554 * S_AcceptedCmpTotal + 0.23104131534618 * 
S_Age + 0.27646175976509 * S_Frq + 0.45938840681203 * S_Income + 0.09814900830666 * S_Kidhome 
+ 0.23249430277518 * S_Mnt + -0.51905493105122 * S_MntFishProducts + -0.07604226481078 * 
S_MntFruits + 0.10100393832157 * S_MntGoldProds + 1.56159221713858 * S_MntMeatProducts + 
0.12166799382268 * S_MntSweetProducts + -0.63388816790524 * S_MntWines + 0.00878303775585 * 
S_MonthsAsCustomer + 0.01990411233136 * S_NumCatalogPurchases + 0.19770934886328 * 
S_NumDealsPurchases + 0.0515215988111 * S_NumDistPurchases + -0.34569346346089 * 
S_NumStorePurchases + -0.27122293596124 * S_NumWebPurchases + -0.17061565609755 * 
S_NumWebVisitsMonth + 0.1271178187502 * S_RFMstat + 0.38306508975954 * S_RMntFrq + 
0.05823588653853 * S_Recency + -0.03760117378617 * S_Teenhome ;
2407131   +   H1x1_2  =     0.16564144258189 * S_AcceptedCmpTotal
2407132   +          +    -0.18930338067433 * S_Age  +    -0.23013558761757 * S_Frq
2407133   +          +     -0.1347135122598 * S_Income  +     0.04776498811407 *
2407134   +        S_Kidhome  +    -0.14940302068852 * S_Mnt  +    -0.13108691405604 *
2407135   +        S_MntFishProducts  +    -0.02561341150704 * S_MntFruits
2407136   +          +    -0.02022222891948 * S_MntGoldProds  +     0.80867688993093 *
2407137   +        S_MntMeatProducts  +    -0.08374488783635 * S_MntSweetProducts
2407138   +          +     -0.6719369441832 * S_MntWines  +    -0.14760035685198 *
2407139   +        S_MonthsAsCustomer  +      0.4007376271331 * S_NumCatalogPurchases
2407140   +          +     0.54308887602031 * S_NumDealsPurchases
2407141   +          +    -0.22507315320192 * S_NumDistPurchases
2407142   +          +    -0.79861387328361 * S_NumStorePurchases
2407143   +          +    -0.45467494002747 * S_NumWebPurchases
2407144   +          +      0.2119048824613 * S_NumWebVisitsMonth
2407145   +          +     0.30167662748678 * S_RFMstat  +     0.10712110659027 *
2407146   +        S_RMntFrq  +    -0.03061918029089 * S_Recency
2407147   +          +    -0.06096313113607 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.16564144258189 * S_AcceptedCmpTotal + -0.18930338067433 * 
S_Age + -0.23013558761757 * S_Frq + -0.1347135122598 * S_Income + 0.04776498811407 * S_Kidhome 
+ -0.14940302068852 * S_Mnt + -0.13108691405604 * S_MntFishProducts + -0.02561341150704 * 
S_MntFruits + -0.02022222891948 * S_MntGoldProds + 0.80867688993093 * S_MntMeatProducts + 
-0.08374488783635 * S_MntSweetProducts + -0.6719369441832 * S_MntWines + -0.14760035685198 * 
S_MonthsAsCustomer + 0.4007376271331 * S_NumCatalogPurchases + 0.54308887602031 * 
S_NumDealsPurchases + -0.22507315320192 * S_NumDistPurchases + -0.79861387328361 * 
S_NumStorePurchases + -0.45467494002747 * S_NumWebPurchases + 0.2119048824613 * 
S_NumWebVisitsMonth + 0.30167662748678 * S_RFMstat + 0.10712110659027 * S_RMntFrq + 
-0.03061918029089 * S_Recency + -0.06096313113607 * S_Teenhome ;
2407148   +   H1x1_3  =     0.02674875562898 * S_AcceptedCmpTotal
2407149   +          +    -0.19731891748843 * S_Age  +    -0.00753784701259 * S_Frq
2407150   +          +    -0.31764694608254 * S_Income  +     0.49525183733398 *
2407151   +        S_Kidhome  +     0.24623619243686 * S_Mnt  +     0.25904859702044 *
2407152   +        S_MntFishProducts  +     0.26153358982994 * S_MntFruits
2407153   +          +    -0.07223707213485 * S_MntGoldProds  +    -0.15192960471493 *
2407154   +        S_MntMeatProducts  +     0.08241128624385 * S_MntSweetProducts
2407155   +          +     0.62479763709054 * S_MntWines  +     0.03593742779349 *
2407156   +        S_MonthsAsCustomer  +     0.00825730323418 * S_NumCatalogPurchases
2407157   +          +     -0.0771083149302 * S_NumDealsPurchases
2407158   +          +     0.03403621221162 * S_NumDistPurchases
2407159   +          +     0.61303946422025 * S_NumStorePurchases
2407160   +          +     0.27126793634053 * S_NumWebPurchases
2407161   +          +     -0.9769688424222 * S_NumWebVisitsMonth
2407162   +          +     0.08832170040425 * S_RFMstat  +     0.13241491054212 *
2407163   +        S_RMntFrq  +     0.94872655811163 * S_Recency
2407164   +          +     0.22002222738147 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.02674875562898 * S_AcceptedCmpTotal + -0.19731891748843 * 
S_Age + -0.00753784701259 * S_Frq + -0.31764694608254 * S_Income + 0.49525183733398 * 
S_Kidhome + 0.24623619243686 * S_Mnt + 0.25904859702044 * S_MntFishProducts + 0.26153358982994 
* S_MntFruits + -0.07223707213485 * S_MntGoldProds + -0.15192960471493 * S_MntMeatProducts + 
0.08241128624385 * S_MntSweetProducts + 0.62479763709054 * S_MntWines + 0.03593742779349 * 
S_MonthsAsCustomer + 0.00825730323418 * S_NumCatalogPurchases + -0.0771083149302 * 
S_NumDealsPurchases + 0.03403621221162 * S_NumDistPurchases + 0.61303946422025 * 
S_NumStorePurchases + 0.27126793634053 * S_NumWebPurchases + -0.9769688424222 * 
S_NumWebVisitsMonth + 0.08832170040425 * S_RFMstat + 0.13241491054212 * S_RMntFrq + 
0.94872655811163 * S_Recency + 0.22002222738147 * S_Teenhome ;
2407165   +   H1x1_4  =     0.46328587348713 * S_AcceptedCmpTotal
2407166   +          +      -0.306946385792 * S_Age  +    -0.24247964225191 * S_Frq
2407167   +          +    -0.42968609314513 * S_Income  +    -0.08934431746158 *
2407168   +        S_Kidhome  +     0.15972194979558 * S_Mnt  +    -0.22174909818279 *
2407169   +        S_MntFishProducts  +    -0.23755215058744 * S_MntFruits
2407170   +          +      -0.124789433808 * S_MntGoldProds  +     0.50040173514144 *
2407171   +        S_MntMeatProducts  +     0.02850063230459 * S_MntSweetProducts
2407172   +          +     0.13427582671876 * S_MntWines  +     0.25569886862761 *
2407173   +        S_MonthsAsCustomer  +     0.34004201732149 * S_NumCatalogPurchases
2407174   +          +     0.29894603062327 * S_NumDealsPurchases
2407175   +          +     0.07614620530875 * S_NumDistPurchases
2407176   +          +     0.15402335009896 * S_NumStorePurchases
2407177   +          +     0.10615749096863 * S_NumWebPurchases
2407178   +          +     0.41962286816879 * S_NumWebVisitsMonth
2407179   +          +     0.00203630873093 * S_RFMstat  +     0.04736976805951 *
2407180   +        S_RMntFrq  +    -0.84751074132422 * S_Recency
2407181   +          +      0.2189023557249 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.46328587348713 * S_AcceptedCmpTotal + -0.306946385792 * S_Age 
+ -0.24247964225191 * S_Frq + -0.42968609314513 * S_Income + -0.08934431746158 * S_Kidhome + 
0.15972194979558 * S_Mnt + -0.22174909818279 * S_MntFishProducts + -0.23755215058744 * 
S_MntFruits + -0.124789433808 * S_MntGoldProds + 0.50040173514144 * S_MntMeatProducts + 
0.02850063230459 * S_MntSweetProducts + 0.13427582671876 * S_MntWines + 0.25569886862761 * 
S_MonthsAsCustomer + 0.34004201732149 * S_NumCatalogPurchases + 0.29894603062327 * 
S_NumDealsPurchases + 0.07614620530875 * S_NumDistPurchases + 0.15402335009896 * 
S_NumStorePurchases + 0.10615749096863 * S_NumWebPurchases + 0.41962286816879 * 
S_NumWebVisitsMonth + 0.00203630873093 * S_RFMstat + 0.04736976805951 * S_RMntFrq + 
-0.84751074132422 * S_Recency + 0.2189023557249 * S_Teenhome ;
2407182   +   H1x1_5  =    -0.32353341757368 * S_AcceptedCmpTotal
2407183   +          +     0.03233494925748 * S_Age  +    -0.21296093282526 * S_Frq
2407184   +          +    -0.33919081075007 * S_Income  +     0.08771362671573 *
2407185   +        S_Kidhome  +    -0.10797068838726 * S_Mnt  +    -0.19736358637985 *
2407186   +        S_MntFishProducts  +    -0.19679917231132 * S_MntFruits
2407187   +          +     0.07502386205588 * S_MntGoldProds  +    -0.50948750987247 *
2407188   +        S_MntMeatProducts  +     0.00413757018488 * S_MntSweetProducts
2407189   +          +      0.0788538305785 * S_MntWines  +    -0.02917052455021 *
2407190   +        S_MonthsAsCustomer  +    -0.53933514609821 * S_NumCatalogPurchases
2407191   +          +     0.14392502416642 * S_NumDealsPurchases
2407192   +          +    -0.10026304978633 * S_NumDistPurchases
2407193   +          +     -0.0588453022746 * S_NumStorePurchases
2407194   +          +     0.24799398610395 * S_NumWebPurchases
2407195   +          +    -0.52695548549717 * S_NumWebVisitsMonth
2407196   +          +     0.01855620452049 * S_RFMstat  +    -0.00189170766477 *
2407197   +        S_RMntFrq  +     0.51841177421912 * S_Recency
2407198   +          +     0.31491299720207 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.32353341757368 * S_AcceptedCmpTotal + 0.03233494925748 * 
S_Age + -0.21296093282526 * S_Frq + -0.33919081075007 * S_Income + 0.08771362671573 * 
S_Kidhome + -0.10797068838726 * S_Mnt + -0.19736358637985 * S_MntFishProducts + 
-0.19679917231132 * S_MntFruits + 0.07502386205588 * S_MntGoldProds + -0.50948750987247 * 
S_MntMeatProducts + 0.00413757018488 * S_MntSweetProducts + 0.0788538305785 * S_MntWines + 
-0.02917052455021 * S_MonthsAsCustomer + -0.53933514609821 * S_NumCatalogPurchases + 
0.14392502416642 * S_NumDealsPurchases + -0.10026304978633 * S_NumDistPurchases + 
-0.0588453022746 * S_NumStorePurchases + 0.24799398610395 * S_NumWebPurchases + 
-0.52695548549717 * S_NumWebVisitsMonth + 0.01855620452049 * S_RFMstat + -0.00189170766477 * 
S_RMntFrq + 0.51841177421912 * S_Recency + 0.31491299720207 * S_Teenhome ;
2407199   +   H1x1_6  =     -0.2113594539647 * S_AcceptedCmpTotal
2407200   +          +     -0.1052829531896 * S_Age  +     0.30802959734964 * S_Frq
2407201   +          +    -0.03112570586685 * S_Income  +     0.19129661263247 *
2407202   +        S_Kidhome  +     0.00533736622639 * S_Mnt  +    -0.06112703732925 *
2407203   +        S_MntFishProducts  +    -0.15875686512247 * S_MntFruits
2407204   +          +    -0.08040179272112 * S_MntGoldProds  +    -0.14462087536907 *
2407205   +        S_MntMeatProducts  +     0.21353582706121 * S_MntSweetProducts
2407206   +          +    -0.30180630737612 * S_MntWines  +    -0.11825033043182 *
2407207   +        S_MonthsAsCustomer  +     -0.2917393256645 * S_NumCatalogPurchases
2407208   +          +     0.08149600854964 * S_NumDealsPurchases
2407209   +          +     0.16873541613513 * S_NumDistPurchases
2407210   +          +    -0.20437343413446 * S_NumStorePurchases
2407211   +          +     -0.1671107527288 * S_NumWebPurchases
2407212   +          +     0.03677043100993 * S_NumWebVisitsMonth
2407213   +          +      0.0240516540488 * S_RFMstat  +     0.06155030856383 *
2407214   +        S_RMntFrq  +    -0.28802122451372 * S_Recency
2407215   +          +     0.06998878697307 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -0.2113594539647 * S_AcceptedCmpTotal + -0.1052829531896 * 
S_Age + 0.30802959734964 * S_Frq + -0.03112570586685 * S_Income + 0.19129661263247 * S_Kidhome 
+ 0.00533736622639 * S_Mnt + -0.06112703732925 * S_MntFishProducts + -0.15875686512247 * 
S_MntFruits + -0.08040179272112 * S_MntGoldProds + -0.14462087536907 * S_MntMeatProducts + 
0.21353582706121 * S_MntSweetProducts + -0.30180630737612 * S_MntWines + -0.11825033043182 * 
S_MonthsAsCustomer + -0.2917393256645 * S_NumCatalogPurchases + 0.08149600854964 * 
S_NumDealsPurchases + 0.16873541613513 * S_NumDistPurchases + -0.20437343413446 * 
S_NumStorePurchases + -0.1671107527288 * S_NumWebPurchases + 0.03677043100993 * 
S_NumWebVisitsMonth + 0.0240516540488 * S_RFMstat + 0.06155030856383 * S_RMntFrq + 
-0.28802122451372 * S_Recency + 0.06998878697307 * S_Teenhome ;
2407216   +   H1x1_1  = H1x1_1  +    -0.33641509021082 * AcceptedCmp10
2407217   +          +     0.03092292109435 * AcceptedCmp20  +    -0.23551187181907 *
2407218   +        AcceptedCmp30  +    -0.06694400005185 * AcceptedCmp40
2407219   +          +    -0.14203506237074 * AcceptedCmp50  +    -0.25866390496966 *
2407220   +        Complain0  +     0.19505921178308 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.33641509021082 * AcceptedCmp10 + 0.03092292109435 * 
AcceptedCmp20 + -0.23551187181907 * AcceptedCmp30 + -0.06694400005185 * AcceptedCmp40 + 
-0.14203506237074 * AcceptedCmp50 + -0.25866390496966 * Complain0 + 0.19505921178308 * 
HigherEducationBinary0 ;
2407221   +   H1x1_2  = H1x1_2  +     0.09937599707203 * AcceptedCmp10
2407222   +          +     0.03831208573575 * AcceptedCmp20  +     0.39683693019758 *
2407223   +        AcceptedCmp30  +     0.37006277175295 * AcceptedCmp40
2407224   +          +     0.21293419476895 * AcceptedCmp50  +     0.15528568367473 *
2407225   +        Complain0  +    -0.30210013299822 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.09937599707203 * AcceptedCmp10 + 0.03831208573575 * 
AcceptedCmp20 + 0.39683693019758 * AcceptedCmp30 + 0.37006277175295 * AcceptedCmp40 + 
0.21293419476895 * AcceptedCmp50 + 0.15528568367473 * Complain0 + -0.30210013299822 * 
HigherEducationBinary0 ;
2407226   +   H1x1_3  = H1x1_3  +     0.29891621770856 * AcceptedCmp10
2407227   +          +     0.64938384482014 * AcceptedCmp20  +     0.44997242602142 *
2407228   +        AcceptedCmp30  +       0.479093722666 * AcceptedCmp40
2407229   +          +     0.50957180373919 * AcceptedCmp50  +     0.27833535432461 *
2407230   +        Complain0  +    -0.20383534906723 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.29891621770856 * AcceptedCmp10 + 0.64938384482014 * 
AcceptedCmp20 + 0.44997242602142 * AcceptedCmp30 + 0.479093722666 * AcceptedCmp40 + 
0.50957180373919 * AcceptedCmp50 + 0.27833535432461 * Complain0 + -0.20383534906723 * 
HigherEducationBinary0 ;
2407231   +   H1x1_4  = H1x1_4  +    -0.26872515586946 * AcceptedCmp10
2407232   +          +    -0.24299337381911 * AcceptedCmp20  +    -0.01147155911926 *
2407233   +        AcceptedCmp30  +     -0.3056041277894 * AcceptedCmp40
2407234   +          +    -0.05496409609003 * AcceptedCmp50  +     0.07858238173893 *
2407235   +        Complain0  +     0.05721550070076 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.26872515586946 * AcceptedCmp10 + -0.24299337381911 
* AcceptedCmp20 + -0.01147155911926 * AcceptedCmp30 + -0.3056041277894 * AcceptedCmp40 + 
-0.05496409609003 * AcceptedCmp50 + 0.07858238173893 * Complain0 + 0.05721550070076 * 
HigherEducationBinary0 ;
2407236   +   H1x1_5  = H1x1_5  +    -0.14067626649899 * AcceptedCmp10
2407237   +          +    -0.30627802828357 * AcceptedCmp20  +     0.05057942365592 *
2407238   +        AcceptedCmp30  +    -0.10378506600459 * AcceptedCmp40
2407239   +          +     0.07479232390108 * AcceptedCmp50  +     0.07252750671496 *
2407240   +        Complain0  +     0.11114854035831 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.14067626649899 * AcceptedCmp10 + -0.30627802828357 
* AcceptedCmp20 + 0.05057942365592 * AcceptedCmp30 + -0.10378506600459 * AcceptedCmp40 + 
0.07479232390108 * AcceptedCmp50 + 0.07252750671496 * Complain0 + 0.11114854035831 * 
HigherEducationBinary0 ;
2407241   +   H1x1_6  = H1x1_6  +    -0.25806332334976 * AcceptedCmp10
2407242   +          +     0.03944021903138 * AcceptedCmp20  +    -0.08792206887119 *
2407243   +        AcceptedCmp30  +    -0.24631282865199 * AcceptedCmp40
2407244   +          +    -0.06123991538969 * AcceptedCmp50  +    -0.03114784375357 *
2407245   +        Complain0  +    -0.25204544481193 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + -0.25806332334976 * AcceptedCmp10 + 0.03944021903138 * 
AcceptedCmp20 + -0.08792206887119 * AcceptedCmp30 + -0.24631282865199 * AcceptedCmp40 + 
-0.06123991538969 * AcceptedCmp50 + -0.03114784375357 * Complain0 + -0.25204544481193 * 
HigherEducationBinary0 ;
2407246   +   H1x1_1  = H1x1_1  +      0.2972170984261 * Education2n_Cycle
2407247   +          +     0.01651368568996 * EducationBasic  +     -0.1186055936649 *
2407248   +        EducationGraduation  +      0.0228208538951 * EducationMaster
2407249   +          +    -0.31045295887604 * Marital_StatusDivorced
2407250   +          +    -0.01109401001539 * Marital_StatusMarried
2407251   +          +     0.01325135981025 * Marital_StatusSingle
2407252   +          +     0.16609357475978 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.2972170984261 * Education2n_Cycle + 0.01651368568996 
* EducationBasic + -0.1186055936649 * EducationGraduation + 0.0228208538951 * EducationMaster 
+ -0.31045295887604 * Marital_StatusDivorced + -0.01109401001539 * Marital_StatusMarried + 
0.01325135981025 * Marital_StatusSingle + 0.16609357475978 * Marital_StatusTogether ;
2407253   +   H1x1_2  = H1x1_2  +    -0.07095220065018 * Education2n_Cycle
2407254   +          +    -0.23491732567608 * EducationBasic  +     0.20187086452315 *
2407255   +        EducationGraduation  +     0.07524128723108 * EducationMaster
2407256   +          +     0.02275101861599 * Marital_StatusDivorced
2407257   +          +     0.20271548664903 * Marital_StatusMarried
2407258   +          +    -0.12132069210718 * Marital_StatusSingle
2407259   +          +     0.00085090729385 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.07095220065018 * Education2n_Cycle + 
-0.23491732567608 * EducationBasic + 0.20187086452315 * EducationGraduation + 0.07524128723108 
* EducationMaster + 0.02275101861599 * Marital_StatusDivorced + 0.20271548664903 * 
Marital_StatusMarried + -0.12132069210718 * Marital_StatusSingle + 0.00085090729385 * 
Marital_StatusTogether ;
2407260   +   H1x1_3  = H1x1_3  +    -0.02268297689573 * Education2n_Cycle
2407261   +          +     0.06359770535369 * EducationBasic  +     -0.1194001280088 *
2407262   +        EducationGraduation  +     0.17299848976308 * EducationMaster
2407263   +          +     -0.4992959703281 * Marital_StatusDivorced
2407264   +          +     0.62071659624138 * Marital_StatusMarried
2407265   +          +    -0.21776202274494 * Marital_StatusSingle
2407266   +          +     0.54712874598141 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.02268297689573 * Education2n_Cycle + 
0.06359770535369 * EducationBasic + -0.1194001280088 * EducationGraduation + 0.17299848976308 
* EducationMaster + -0.4992959703281 * Marital_StatusDivorced + 0.62071659624138 * 
Marital_StatusMarried + -0.21776202274494 * Marital_StatusSingle + 0.54712874598141 * 
Marital_StatusTogether ;
2407267   +   H1x1_4  = H1x1_4  +    -0.17773353520266 * Education2n_Cycle
2407268   +          +     0.17998728120628 * EducationBasic  +    -0.00324602612825 *
2407269   +        EducationGraduation  +    -0.22448876765089 * EducationMaster
2407270   +          +     0.05626212670587 * Marital_StatusDivorced
2407271   +          +     0.14353891364597 * Marital_StatusMarried
2407272   +          +    -0.29006765622997 * Marital_StatusSingle
2407273   +          +     0.05503638282535 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.17773353520266 * Education2n_Cycle + 
0.17998728120628 * EducationBasic + -0.00324602612825 * EducationGraduation + 
-0.22448876765089 * EducationMaster + 0.05626212670587 * Marital_StatusDivorced + 
0.14353891364597 * Marital_StatusMarried + -0.29006765622997 * Marital_StatusSingle + 
0.05503638282535 * Marital_StatusTogether ;
2407274   +   H1x1_5  = H1x1_5  +     0.06634316870499 * Education2n_Cycle
2407275   +          +    -0.36153880127411 * EducationBasic  +     0.23023144658635 *
2407276   +        EducationGraduation  +    -0.06568730318683 * EducationMaster
2407277   +          +    -0.21206913700604 * Marital_StatusDivorced
2407278   +          +     0.58790643614629 * Marital_StatusMarried
2407279   +          +    -0.65995982578062 * Marital_StatusSingle
2407280   +          +     0.49642503732428 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 0.06634316870499 * Education2n_Cycle + 
-0.36153880127411 * EducationBasic + 0.23023144658635 * EducationGraduation + 
-0.06568730318683 * EducationMaster + -0.21206913700604 * Marital_StatusDivorced + 
0.58790643614629 * Marital_StatusMarried + -0.65995982578062 * Marital_StatusSingle + 
0.49642503732428 * Marital_StatusTogether ;
2407281   +   H1x1_6  = H1x1_6  +     0.16504024096118 * Education2n_Cycle
2407282   +          +     0.11925867171875 * EducationBasic  +    -0.04213907014732 *
2407283   +        EducationGraduation  +    -0.21389968555475 * EducationMaster
2407284   +          +    -0.05047370516008 * Marital_StatusDivorced
2407285   +          +    -0.23139090963669 * Marital_StatusMarried
2407286   +          +     0.04816197463249 * Marital_StatusSingle
2407287   +          +     0.04977890114896 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + 0.16504024096118 * Education2n_Cycle + 
0.11925867171875 * EducationBasic + -0.04213907014732 * EducationGraduation + 
-0.21389968555475 * EducationMaster + -0.05047370516008 * Marital_StatusDivorced + 
-0.23139090963669 * Marital_StatusMarried + 0.04816197463249 * Marital_StatusSingle + 
0.04977890114896 * Marital_StatusTogether ;
2407288   +   H1x1_1  =    -1.90576647346127 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.90576647346127 + H1x1_1 ;
2407289   +   H1x1_2  =     0.32295787429294 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.32295787429294 + H1x1_2 ;
2407290   +   H1x1_3  =     0.75117643107919 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.75117643107919 + H1x1_3 ;
2407291   +   H1x1_4  =      1.2336762751587 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.2336762751587 + H1x1_4 ;
2407292   +   H1x1_5  =    -0.97062317465491 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.97062317465491 + H1x1_5 ;
2407293   +   H1x1_6  =    -1.15756803634408 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -1.15756803634408 + H1x1_6 ;
2407294   +   _EPS = SQRT(CONSTANT('MACEPS')) ;
MPRINT(EM_DIAGRAM):   _EPS = SQRT(CONSTANT('MACEPS')) ;
2407295   +   _REC_EPS = 1/_EPS ;
MPRINT(EM_DIAGRAM):   _REC_EPS = 1/_EPS ;
2407296   +   DROP _REC_EPS _EPS ;
MPRINT(EM_DIAGRAM):   DROP _REC_EPS _EPS ;
2407297   +   IF H1x1_1  < _REC_EPS AND H1x1_1  > - _REC_EPS THEN
2407298   +   H1x1_1  = H1x1_1  * H1x1_1 ;
MPRINT(EM_DIAGRAM):   IF H1x1_1 < _REC_EPS AND H1x1_1 > - _REC_EPS THEN H1x1_1 = H1x1_1 * 
H1x1_1 ;
2407299   +   ELSE H1x1_1  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_1 = _REC_EPS ;
2407300   +   IF H1x1_2  < _REC_EPS AND H1x1_2  > - _REC_EPS THEN
2407301   +   H1x1_2  = H1x1_2  * H1x1_2 ;
MPRINT(EM_DIAGRAM):   IF H1x1_2 < _REC_EPS AND H1x1_2 > - _REC_EPS THEN H1x1_2 = H1x1_2 * 
H1x1_2 ;
2407302   +   ELSE H1x1_2  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_2 = _REC_EPS ;
2407303   +   IF H1x1_3  < _REC_EPS AND H1x1_3  > - _REC_EPS THEN
2407304   +   H1x1_3  = H1x1_3  * H1x1_3 ;
MPRINT(EM_DIAGRAM):   IF H1x1_3 < _REC_EPS AND H1x1_3 > - _REC_EPS THEN H1x1_3 = H1x1_3 * 
H1x1_3 ;
2407305   +   ELSE H1x1_3  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_3 = _REC_EPS ;
2407306   +   IF H1x1_4  < _REC_EPS AND H1x1_4  > - _REC_EPS THEN
2407307   +   H1x1_4  = H1x1_4  * H1x1_4 ;
MPRINT(EM_DIAGRAM):   IF H1x1_4 < _REC_EPS AND H1x1_4 > - _REC_EPS THEN H1x1_4 = H1x1_4 * 
H1x1_4 ;
2407308   +   ELSE H1x1_4  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_4 = _REC_EPS ;
2407309   +   IF H1x1_5  < _REC_EPS AND H1x1_5  > - _REC_EPS THEN
2407310   +   H1x1_5  = H1x1_5  * H1x1_5 ;
MPRINT(EM_DIAGRAM):   IF H1x1_5 < _REC_EPS AND H1x1_5 > - _REC_EPS THEN H1x1_5 = H1x1_5 * 
H1x1_5 ;
2407311   +   ELSE H1x1_5  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_5 = _REC_EPS ;
2407312   +   IF H1x1_6  < _REC_EPS AND H1x1_6  > - _REC_EPS THEN
2407313   +   H1x1_6  = H1x1_6  * H1x1_6 ;
MPRINT(EM_DIAGRAM):   IF H1x1_6 < _REC_EPS AND H1x1_6 > - _REC_EPS THEN H1x1_6 = H1x1_6 * 
H1x1_6 ;
2407314   +   ELSE H1x1_6  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_6 = _REC_EPS ;
2407315   +END;
MPRINT(EM_DIAGRAM):   END;
2407316   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2407317   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2407318   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2407319   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2407320   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2407321   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
2407322   +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
2407323   +END;
MPRINT(EM_DIAGRAM):   END;
2407324   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2407325   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2407326   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2407327   +
2407328   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2407329   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2407330   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2407331   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2407332   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2407333   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2407334   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2407335   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2407336   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2407337   +end;
MPRINT(EM_DIAGRAM):   end;
2407338   +else do;
MPRINT(EM_DIAGRAM):   else do;
2407339   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2407340   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2407341   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2407342   +   end;
MPRINT(EM_DIAGRAM):   end;
2407343   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2407344   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2407345   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2407346   +   end;
MPRINT(EM_DIAGRAM):   end;
2407347   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2407348   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2407349   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2407350   +   end;
MPRINT(EM_DIAGRAM):   end;
2407351   +end;
MPRINT(EM_DIAGRAM):   end;
2407352   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2407353   +   P_DepVar1  =    -0.99830813428318 * H1x1_1  +     1.33495006526712 * H1x1_2
2407354   +          +    -1.37942150026657 * H1x1_3  +     1.22714974922576 * H1x1_4
2407355   +          +     1.73375794385595 * H1x1_5  +     -0.0100306049679 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.99830813428318 * H1x1_1 + 1.33495006526712 * H1x1_2 + 
-1.37942150026657 * H1x1_3 + 1.22714974922576 * H1x1_4 + 1.73375794385595 * H1x1_5 + 
-0.0100306049679 * H1x1_6 ;
2407356   +   P_DepVar1  =    -1.90393999986167 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.90393999986167 + P_DepVar1 ;
2407357   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2407358   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2407359   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2407360   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2407361   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2407362   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2407363   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2407364   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2407365   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2407366   +END;
MPRINT(EM_DIAGRAM):   END;
2407367   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2407368   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2407369   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2407370   +END;
MPRINT(EM_DIAGRAM):   END;
2407371   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2407372   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2407373   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2407374   +END;
MPRINT(EM_DIAGRAM):   END;
2407375   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2407376   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2407377   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2407378   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2407379   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2407380   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2407381   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2407382   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2407383   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2407384   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2407385   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2407386   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2407387   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2407388   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2407389   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2407390   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2407391   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2407392   +END;
MPRINT(EM_DIAGRAM):   END;
2407393   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2407394   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2407395   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2407396   +drop
2407397   +H1x1_1
2407398   +H1x1_2
2407399   +H1x1_3
2407400   +H1x1_4
2407401   +H1x1_5
2407402   +H1x1_6
2407403   +;
MPRINT(EM_DIAGRAM):   drop H1x1_1 H1x1_2 H1x1_3 H1x1_4 H1x1_5 H1x1_6 ;
2407404   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2407405   +* Renaming variables for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural11;
2407406   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2407407   +* Renaming Posterior variables for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural11;
2407408   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2407409   +drop AutoNeural11_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_P_DepVar1;
2407410   +AutoNeural11_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural11_P_DepVar1 = P_DepVar1;
2407411   +drop AutoNeural11_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_P_DepVar0;
2407412   +AutoNeural11_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural11_P_DepVar0 = P_DepVar0;
2407413   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2407414   +* Renaming Into variables for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for AutoNeural11;
2407415   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2407416   +length AutoNeural11_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length AutoNeural11_I_DepVar $32;
2407417   +drop AutoNeural11_I_DepVar;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_I_DepVar;
2407418   +AutoNeural11_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   AutoNeural11_I_DepVar = I_DepVar;
2407419   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2407420   +* Renaming _WARN_ variable for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural11;
2407421   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2407422   +length AutoNeural11_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural11_WARN_ $4;
2407423   +drop AutoNeural11_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_WARN_;
2407424   +AutoNeural11_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural11_WARN_ = _WARN_;
2407425   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2407426   +* Ensmbl44: Scoring Code of model 3 of 3;
MPRINT(EM_DIAGRAM):   * Ensmbl44: Scoring Code of model 3 of 3;
2407427   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2407428   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2407429   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
2407430   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2407431   +* NODE: AutoNeural12;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural12;
2407432   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2407433   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2407434   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2407435   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2407436   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2407437   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2407438   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2407439   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2407440   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2407441   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2407442   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2407443   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2407444   +LENGTH _WARN_ $4
2407445   +      F_DepVar  $ 12
2407446   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2407447   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2407448   +
2407449   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2407450   +
2407451   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2407452   +
2407453   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2407454   +
2407455   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2407456   +
2407457   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2407458   +
2407459   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2407460   +
2407461   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2407462   +
2407463   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2407464   +
2407465   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2407466   +
2407467   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2407468   +
2407469   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2407470   +
2407471   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2407472   +
2407473   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2407474   +
2407475   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2407476   +
2407477   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2407478   +
2407479   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2407480   +
2407481   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2407482   +
2407483   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2407484   +
2407485   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2407486   +
2407487   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2407488   +
2407489   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2407490   +
2407491   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2407492   +
2407493   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2407494   +
2407495   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2407496   +
2407497   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2407498   +
2407499   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2407500   +
2407501   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2407502   +
2407503   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2407504   +
2407505   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2407506   +
2407507   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2407508   +
2407509   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2407510   +
2407511   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2407512   +
2407513   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2407514   +
2407515   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2407516   +
2407517   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2407518   +
2407519   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2407520   +
2407521   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2407522   +
2407523   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2407524   +
2407525   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2407526   +
2407527   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2407528   +
2407529   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2407530   +
2407531   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
2407532   +
2407533   +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
2407534   +
2407535   +      label H1x1_7 = 'Hidden: H1x1_=7' ;
MPRINT(EM_DIAGRAM):   label H1x1_7 = 'Hidden: H1x1_=7' ;
2407536   +
2407537   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
2407538   +
2407539   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
2407540   +
2407541   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
2407542   +
2407543   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
2407544   +
2407545   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
2407546   +
2407547   +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
2407548   +
2407549   +      label H1x2_7 = 'Hidden: H1x2_=7' ;
MPRINT(EM_DIAGRAM):   label H1x2_7 = 'Hidden: H1x2_=7' ;
2407550   +
2407551   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2407552   +
2407553   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2407554   +
2407555   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2407556   +
2407557   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2407558   +
2407559   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2407560   +
2407561   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2407562   +
2407563   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2407564   +
2407565   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2407566   +
2407567   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2407568   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2407569   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2407570   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2407571   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2407572   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2407573   +end;
MPRINT(EM_DIAGRAM):   end;
2407574   +else do;
MPRINT(EM_DIAGRAM):   else do;
2407575   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2407576   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2407577   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2407578   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2407579   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2407580   +   end;
MPRINT(EM_DIAGRAM):   end;
2407581   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2407582   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2407583   +   end;
MPRINT(EM_DIAGRAM):   end;
2407584   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2407585   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2407586   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2407587   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2407588   +   end;
MPRINT(EM_DIAGRAM):   end;
2407589   +end;
MPRINT(EM_DIAGRAM):   end;
2407590   +
2407591   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2407592   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2407593   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2407594   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2407595   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2407596   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2407597   +end;
MPRINT(EM_DIAGRAM):   end;
2407598   +else do;
MPRINT(EM_DIAGRAM):   else do;
2407599   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2407600   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2407601   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2407602   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2407603   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2407604   +   end;
MPRINT(EM_DIAGRAM):   end;
2407605   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2407606   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2407607   +   end;
MPRINT(EM_DIAGRAM):   end;
2407608   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2407609   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2407610   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2407611   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2407612   +   end;
MPRINT(EM_DIAGRAM):   end;
2407613   +end;
MPRINT(EM_DIAGRAM):   end;
2407614   +
2407615   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2407616   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2407617   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2407618   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2407619   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2407620   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2407621   +end;
MPRINT(EM_DIAGRAM):   end;
2407622   +else do;
MPRINT(EM_DIAGRAM):   else do;
2407623   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2407624   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2407625   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2407626   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2407627   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2407628   +   end;
MPRINT(EM_DIAGRAM):   end;
2407629   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2407630   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2407631   +   end;
MPRINT(EM_DIAGRAM):   end;
2407632   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2407633   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2407634   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2407635   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2407636   +   end;
MPRINT(EM_DIAGRAM):   end;
2407637   +end;
MPRINT(EM_DIAGRAM):   end;
2407638   +
2407639   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2407640   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2407641   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2407642   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2407643   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2407644   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2407645   +end;
MPRINT(EM_DIAGRAM):   end;
2407646   +else do;
MPRINT(EM_DIAGRAM):   else do;
2407647   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2407648   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2407649   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2407650   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2407651   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2407652   +   end;
MPRINT(EM_DIAGRAM):   end;
2407653   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2407654   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2407655   +   end;
MPRINT(EM_DIAGRAM):   end;
2407656   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2407657   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2407658   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2407659   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2407660   +   end;
MPRINT(EM_DIAGRAM):   end;
2407661   +end;
MPRINT(EM_DIAGRAM):   end;
2407662   +
2407663   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2407664   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2407665   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2407666   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2407667   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2407668   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2407669   +end;
MPRINT(EM_DIAGRAM):   end;
2407670   +else do;
MPRINT(EM_DIAGRAM):   else do;
2407671   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2407672   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2407673   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2407674   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2407675   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2407676   +   end;
MPRINT(EM_DIAGRAM):   end;
2407677   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2407678   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2407679   +   end;
MPRINT(EM_DIAGRAM):   end;
2407680   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2407681   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2407682   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2407683   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2407684   +   end;
MPRINT(EM_DIAGRAM):   end;
2407685   +end;
MPRINT(EM_DIAGRAM):   end;
2407686   +
2407687   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2407688   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2407689   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2407690   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2407691   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2407692   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2407693   +end;
MPRINT(EM_DIAGRAM):   end;
2407694   +else do;
MPRINT(EM_DIAGRAM):   else do;
2407695   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2407696   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2407697   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2407698   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2407699   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2407700   +   end;
MPRINT(EM_DIAGRAM):   end;
2407701   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2407702   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2407703   +   end;
MPRINT(EM_DIAGRAM):   end;
2407704   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2407705   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2407706   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2407707   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2407708   +   end;
MPRINT(EM_DIAGRAM):   end;
2407709   +end;
MPRINT(EM_DIAGRAM):   end;
2407710   +
2407711   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2407712   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2407713   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2407714   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2407715   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2407716   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2407717   +end;
MPRINT(EM_DIAGRAM):   end;
2407718   +else do;
MPRINT(EM_DIAGRAM):   else do;
2407719   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2407720   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2407721   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2407722   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2407723   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2407724   +   end;
MPRINT(EM_DIAGRAM):   end;
2407725   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2407726   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2407727   +   end;
MPRINT(EM_DIAGRAM):   end;
2407728   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2407729   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2407730   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2407731   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2407732   +   end;
MPRINT(EM_DIAGRAM):   end;
2407733   +end;
MPRINT(EM_DIAGRAM):   end;
2407734   +
2407735   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2407736   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
2407737   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2407738   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2407739   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2407740   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2407741   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2407742   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2407743   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2407744   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2407745   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2407746   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2407747   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2407748   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2407749   +end;
MPRINT(EM_DIAGRAM):   end;
2407750   +else do;
MPRINT(EM_DIAGRAM):   else do;
2407751   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2407752   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2407753   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2407754   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2407755   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2407756   +   end;
MPRINT(EM_DIAGRAM):   end;
2407757   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2407758   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2407759   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2407760   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2407761   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2407762   +   end;
MPRINT(EM_DIAGRAM):   end;
2407763   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2407764   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2407765   +   end;
MPRINT(EM_DIAGRAM):   end;
2407766   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2407767   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2407768   +   end;
MPRINT(EM_DIAGRAM):   end;
2407769   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2407770   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2407771   +   end;
MPRINT(EM_DIAGRAM):   end;
2407772   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2407773   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2407774   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2407775   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2407776   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2407777   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2407778   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2407779   +   end;
MPRINT(EM_DIAGRAM):   end;
2407780   +end;
MPRINT(EM_DIAGRAM):   end;
2407781   +
2407782   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2407783   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2407784   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
2407785   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2407786   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2407787   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2407788   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2407789   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2407790   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2407791   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2407792   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2407793   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2407794   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2407795   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2407796   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2407797   +end;
MPRINT(EM_DIAGRAM):   end;
2407798   +else do;
MPRINT(EM_DIAGRAM):   else do;
2407799   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2407800   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2407801   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2407802   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2407803   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2407804   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2407805   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2407806   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2407807   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2407808   +         end;
MPRINT(EM_DIAGRAM):   end;
2407809   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2407810   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2407811   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2407812   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2407813   +            end;
MPRINT(EM_DIAGRAM):   end;
2407814   +         end;
MPRINT(EM_DIAGRAM):   end;
2407815   +      end;
MPRINT(EM_DIAGRAM):   end;
2407816   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2407817   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2407818   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2407819   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2407820   +         end;
MPRINT(EM_DIAGRAM):   end;
2407821   +      end;
MPRINT(EM_DIAGRAM):   end;
2407822   +   end;
MPRINT(EM_DIAGRAM):   end;
2407823   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2407824   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2407825   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2407826   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2407827   +      end;
MPRINT(EM_DIAGRAM):   end;
2407828   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2407829   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2407830   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2407831   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2407832   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2407833   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2407834   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2407835   +         end;
MPRINT(EM_DIAGRAM):   end;
2407836   +      end;
MPRINT(EM_DIAGRAM):   end;
2407837   +   end;
MPRINT(EM_DIAGRAM):   end;
2407838   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2407839   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2407840   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2407841   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2407842   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2407843   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2407844   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2407845   +   end;
MPRINT(EM_DIAGRAM):   end;
2407846   +end;
MPRINT(EM_DIAGRAM):   end;
2407847   +
2407848   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2407849   +*** Checking missing input Interval
2407850   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2407851   +
2407852   +IF NMISS(
2407853   +   AcceptedCmpTotal ,
2407854   +   Age ,
2407855   +   Frq ,
2407856   +   Income ,
2407857   +   Kidhome ,
2407858   +   Mnt ,
2407859   +   MntFishProducts ,
2407860   +   MntFruits ,
2407861   +   MntGoldProds ,
2407862   +   MntMeatProducts ,
2407863   +   MntSweetProducts ,
2407864   +   MntWines ,
2407865   +   MonthsAsCustomer ,
2407866   +   NumCatalogPurchases ,
2407867   +   NumDealsPurchases ,
2407868   +   NumDistPurchases ,
2407869   +   NumStorePurchases ,
2407870   +   NumWebPurchases ,
2407871   +   NumWebVisitsMonth ,
2407872   +   RFMstat ,
2407873   +   RMntFrq ,
2407874   +   Recency ,
2407875   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
2407876   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2407877   +
2407878   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2407879   +END;
MPRINT(EM_DIAGRAM):   END;
2407880   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2407881   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2407882   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2407883   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2407884   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2407885   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2407886   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2407887   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2407888   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2407889   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2407890   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2407891   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2407892   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2407893   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2407894   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2407895   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2407896   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2407897   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2407898   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2407899   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2407900   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2407901   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2407902   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
2407903   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2407904   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2407905   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2407906   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2407907   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2407908   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2407909   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2407910   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2407911   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2407912   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2407913   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2407914   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2407915   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2407916   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2407917   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2407918   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2407919   +END;
MPRINT(EM_DIAGRAM):   END;
2407920   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2407921   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2407922   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2407923   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2407924   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2407925   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2407926   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2407927   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2407928   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2407929   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2407930   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2407931   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2407932   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2407933   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2407934   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2407935   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2407936   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2407937   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2407938   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2407939   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2407940   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2407941   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2407942   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
2407943   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2407944   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2407945   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2407946   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2407947   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2407948   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2407949   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2407950   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2407951   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2407952   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2407953   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
2407954   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2407955   +   ELSE S_NumCatalogPurchases
2407956   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2407957   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2407958   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2407959   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2407960   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2407961   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2407962   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2407963   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2407964   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2407965   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2407966   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2407967   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2407968   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2407969   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2407970   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2407971   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2407972   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2407973   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2407974   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2407975   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2407976   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2407977   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2407978   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2407979   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2407980   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2407981   +END;
MPRINT(EM_DIAGRAM):   END;
2407982   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2407983   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2407984   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2407985   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2407986   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2407987   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2407988   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2407989   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2407990   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2407991   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2407992   +   H1x1_1  =    -0.08478534961354 * S_AcceptedCmpTotal
2407993   +          +     0.21528166003219 * S_Age  +    -0.16079737422774 * S_Frq
2407994   +          +     0.04922044955183 * S_Income  +     0.06245849112135 *
2407995   +        S_Kidhome  +    -0.12820970008154 * S_Mnt  +    -0.00676959308959 *
2407996   +        S_MntFishProducts  +    -0.20367403957375 * S_MntFruits
2407997   +          +    -0.06459558558968 * S_MntGoldProds  +     0.01557669100416 *
2407998   +        S_MntMeatProducts  +    -0.16342003924117 * S_MntSweetProducts
2407999   +          +     0.34676276369853 * S_MntWines  +    -0.08454570225616 *
2408000   +        S_MonthsAsCustomer  +    -0.00318885387905 * S_NumCatalogPurchases
2408001   +          +      0.1112677116841 * S_NumDealsPurchases
2408002   +          +     0.01563584187072 * S_NumDistPurchases
2408003   +          +     0.19193969522995 * S_NumStorePurchases
2408004   +          +      0.3133556199984 * S_NumWebPurchases
2408005   +          +    -0.21884874785716 * S_NumWebVisitsMonth
2408006   +          +     0.08478875792216 * S_RFMstat  +     0.05964414665285 *
2408007   +        S_RMntFrq  +    -0.12595000497726 * S_Recency
2408008   +          +     -0.1238719414537 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.08478534961354 * S_AcceptedCmpTotal + 0.21528166003219 * 
S_Age + -0.16079737422774 * S_Frq + 0.04922044955183 * S_Income + 0.06245849112135 * S_Kidhome 
+ -0.12820970008154 * S_Mnt + -0.00676959308959 * S_MntFishProducts + -0.20367403957375 * 
S_MntFruits + -0.06459558558968 * S_MntGoldProds + 0.01557669100416 * S_MntMeatProducts + 
-0.16342003924117 * S_MntSweetProducts + 0.34676276369853 * S_MntWines + -0.08454570225616 * 
S_MonthsAsCustomer + -0.00318885387905 * S_NumCatalogPurchases + 0.1112677116841 * 
S_NumDealsPurchases + 0.01563584187072 * S_NumDistPurchases + 0.19193969522995 * 
S_NumStorePurchases + 0.3133556199984 * S_NumWebPurchases + -0.21884874785716 * 
S_NumWebVisitsMonth + 0.08478875792216 * S_RFMstat + 0.05964414665285 * S_RMntFrq + 
-0.12595000497726 * S_Recency + -0.1238719414537 * S_Teenhome ;
2408009   +   H1x1_2  =     0.20807487357943 * S_AcceptedCmpTotal
2408010   +          +    -0.27223051908987 * S_Age  +     0.28649391533674 * S_Frq
2408011   +          +     0.46493719675068 * S_Income  +     0.10180542910079 *
2408012   +        S_Kidhome  +    -0.19573056673819 * S_Mnt  +    -0.05332725327514 *
2408013   +        S_MntFishProducts  +    -0.28610692329433 * S_MntFruits
2408014   +          +    -0.13417237194849 * S_MntGoldProds  +     0.45697707494335 *
2408015   +        S_MntMeatProducts  +    -0.28280545785477 * S_MntSweetProducts
2408016   +          +    -0.13234920069688 * S_MntWines  +     -0.2710938018651 *
2408017   +        S_MonthsAsCustomer  +     0.31174284041905 * S_NumCatalogPurchases
2408018   +          +     0.30225032753275 * S_NumDealsPurchases
2408019   +          +     0.33833359923595 * S_NumDistPurchases
2408020   +          +    -0.20255599575849 * S_NumStorePurchases
2408021   +          +    -0.12040071168942 * S_NumWebPurchases
2408022   +          +    -0.12407090307061 * S_NumWebVisitsMonth
2408023   +          +    -0.05688936259515 * S_RFMstat  +     0.15514736649245 *
2408024   +        S_RMntFrq  +     0.00838555462657 * S_Recency
2408025   +          +     0.04609426861136 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.20807487357943 * S_AcceptedCmpTotal + -0.27223051908987 * 
S_Age + 0.28649391533674 * S_Frq + 0.46493719675068 * S_Income + 0.10180542910079 * S_Kidhome 
+ -0.19573056673819 * S_Mnt + -0.05332725327514 * S_MntFishProducts + -0.28610692329433 * 
S_MntFruits + -0.13417237194849 * S_MntGoldProds + 0.45697707494335 * S_MntMeatProducts + 
-0.28280545785477 * S_MntSweetProducts + -0.13234920069688 * S_MntWines + -0.2710938018651 * 
S_MonthsAsCustomer + 0.31174284041905 * S_NumCatalogPurchases + 0.30225032753275 * 
S_NumDealsPurchases + 0.33833359923595 * S_NumDistPurchases + -0.20255599575849 * 
S_NumStorePurchases + -0.12040071168942 * S_NumWebPurchases + -0.12407090307061 * 
S_NumWebVisitsMonth + -0.05688936259515 * S_RFMstat + 0.15514736649245 * S_RMntFrq + 
0.00838555462657 * S_Recency + 0.04609426861136 * S_Teenhome ;
2408026   +   H1x1_3  =    -0.30541463116928 * S_AcceptedCmpTotal
2408027   +          +    -0.01746117216025 * S_Age  +    -0.44156473334329 * S_Frq
2408028   +          +    -0.51952426304193 * S_Income  +     0.20419921255777 *
2408029   +        S_Kidhome  +    -0.18174316707953 * S_Mnt  +    -0.03813675536406 *
2408030   +        S_MntFishProducts  +     -0.0959023413712 * S_MntFruits
2408031   +          +     0.12724081783278 * S_MntGoldProds  +    -0.07639148541426 *
2408032   +        S_MntMeatProducts  +     -0.0797214413833 * S_MntSweetProducts
2408033   +          +    -0.57705931875808 * S_MntWines  +    -0.12638551201991 *
2408034   +        S_MonthsAsCustomer  +    -0.21854676704549 * S_NumCatalogPurchases
2408035   +          +     0.16792903091627 * S_NumDealsPurchases
2408036   +          +    -0.37408945626745 * S_NumDistPurchases
2408037   +          +    -0.18067262995566 * S_NumStorePurchases
2408038   +          +     0.21192146789881 * S_NumWebPurchases
2408039   +          +    -0.23547702310669 * S_NumWebVisitsMonth
2408040   +          +    -0.02272089758813 * S_RFMstat  +    -0.16409330281075 *
2408041   +        S_RMntFrq  +     0.45021846112946 * S_Recency
2408042   +          +     0.32988735727394 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.30541463116928 * S_AcceptedCmpTotal + -0.01746117216025 * 
S_Age + -0.44156473334329 * S_Frq + -0.51952426304193 * S_Income + 0.20419921255777 * 
S_Kidhome + -0.18174316707953 * S_Mnt + -0.03813675536406 * S_MntFishProducts + 
-0.0959023413712 * S_MntFruits + 0.12724081783278 * S_MntGoldProds + -0.07639148541426 * 
S_MntMeatProducts + -0.0797214413833 * S_MntSweetProducts + -0.57705931875808 * S_MntWines + 
-0.12638551201991 * S_MonthsAsCustomer + -0.21854676704549 * S_NumCatalogPurchases + 
0.16792903091627 * S_NumDealsPurchases + -0.37408945626745 * S_NumDistPurchases + 
-0.18067262995566 * S_NumStorePurchases + 0.21192146789881 * S_NumWebPurchases + 
-0.23547702310669 * S_NumWebVisitsMonth + -0.02272089758813 * S_RFMstat + -0.16409330281075 * 
S_RMntFrq + 0.45021846112946 * S_Recency + 0.32988735727394 * S_Teenhome ;
2408043   +   H1x1_4  =     0.05205198916717 * S_AcceptedCmpTotal
2408044   +          +     0.25568653619739 * S_Age  +    -0.31037252146959 * S_Frq
2408045   +          +     0.42636025358982 * S_Income  +    -0.24453708980866 *
2408046   +        S_Kidhome  +    -0.07832530945892 * S_Mnt  +    -0.48332124476182 *
2408047   +        S_MntFishProducts  +    -0.13932879119138 * S_MntFruits
2408048   +          +      0.1984121566988 * S_MntGoldProds  +     1.14965897015972 *
2408049   +        S_MntMeatProducts  +     0.07027485457428 * S_MntSweetProducts
2408050   +          +    -0.56598097754046 * S_MntWines  +     0.07317190938075 *
2408051   +        S_MonthsAsCustomer  +       0.075756987983 * S_NumCatalogPurchases
2408052   +          +     0.29407429399136 * S_NumDealsPurchases
2408053   +          +     0.01610745252195 * S_NumDistPurchases
2408054   +          +    -0.17767939085628 * S_NumStorePurchases
2408055   +          +    -0.15168958538637 * S_NumWebPurchases
2408056   +          +     0.17433622143988 * S_NumWebVisitsMonth
2408057   +          +     0.11635602973993 * S_RFMstat  +     0.32632751843433 *
2408058   +        S_RMntFrq  +    -0.24758483374458 * S_Recency
2408059   +          +    -0.31468291567479 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.05205198916717 * S_AcceptedCmpTotal + 0.25568653619739 * 
S_Age + -0.31037252146959 * S_Frq + 0.42636025358982 * S_Income + -0.24453708980866 * 
S_Kidhome + -0.07832530945892 * S_Mnt + -0.48332124476182 * S_MntFishProducts + 
-0.13932879119138 * S_MntFruits + 0.1984121566988 * S_MntGoldProds + 1.14965897015972 * 
S_MntMeatProducts + 0.07027485457428 * S_MntSweetProducts + -0.56598097754046 * S_MntWines + 
0.07317190938075 * S_MonthsAsCustomer + 0.075756987983 * S_NumCatalogPurchases + 
0.29407429399136 * S_NumDealsPurchases + 0.01610745252195 * S_NumDistPurchases + 
-0.17767939085628 * S_NumStorePurchases + -0.15168958538637 * S_NumWebPurchases + 
0.17433622143988 * S_NumWebVisitsMonth + 0.11635602973993 * S_RFMstat + 0.32632751843433 * 
S_RMntFrq + -0.24758483374458 * S_Recency + -0.31468291567479 * S_Teenhome ;
2408060   +   H1x1_5  =    -0.59657492903543 * S_AcceptedCmpTotal
2408061   +          +     0.23513672763458 * S_Age  +    -0.14882104210954 * S_Frq
2408062   +          +    -0.07762660201035 * S_Income  +     0.01424651904783 *
2408063   +        S_Kidhome  +     0.18748607813081 * S_Mnt  +     0.11088464897095 *
2408064   +        S_MntFishProducts  +    -0.10064450211557 * S_MntFruits
2408065   +          +     0.11161391354421 * S_MntGoldProds  +    -1.36345407290644 *
2408066   +        S_MntMeatProducts  +     0.04868729717044 * S_MntSweetProducts
2408067   +          +     0.80284342329654 * S_MntWines  +     -0.0179539622492 *
2408068   +        S_MonthsAsCustomer  +    -0.60051908798715 * S_NumCatalogPurchases
2408069   +          +    -0.37976451362108 * S_NumDealsPurchases
2408070   +          +    -0.17027731520801 * S_NumDistPurchases
2408071   +          +     0.59849493667087 * S_NumStorePurchases
2408072   +          +     0.65481480560301 * S_NumWebPurchases
2408073   +          +    -0.68253224576609 * S_NumWebVisitsMonth
2408074   +          +    -0.16723490165629 * S_RFMstat  +    -0.10533797887644 *
2408075   +        S_RMntFrq  +     0.81382723915873 * S_Recency
2408076   +          +     0.06049401205856 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.59657492903543 * S_AcceptedCmpTotal + 0.23513672763458 * 
S_Age + -0.14882104210954 * S_Frq + -0.07762660201035 * S_Income + 0.01424651904783 * 
S_Kidhome + 0.18748607813081 * S_Mnt + 0.11088464897095 * S_MntFishProducts + 
-0.10064450211557 * S_MntFruits + 0.11161391354421 * S_MntGoldProds + -1.36345407290644 * 
S_MntMeatProducts + 0.04868729717044 * S_MntSweetProducts + 0.80284342329654 * S_MntWines + 
-0.0179539622492 * S_MonthsAsCustomer + -0.60051908798715 * S_NumCatalogPurchases + 
-0.37976451362108 * S_NumDealsPurchases + -0.17027731520801 * S_NumDistPurchases + 
0.59849493667087 * S_NumStorePurchases + 0.65481480560301 * S_NumWebPurchases + 
-0.68253224576609 * S_NumWebVisitsMonth + -0.16723490165629 * S_RFMstat + -0.10533797887644 * 
S_RMntFrq + 0.81382723915873 * S_Recency + 0.06049401205856 * S_Teenhome ;
2408077   +   H1x1_6  =    -0.07547841798202 * S_AcceptedCmpTotal
2408078   +          +     0.22445278254589 * S_Age  +    -0.26357481075143 * S_Frq
2408079   +          +     0.06894154144261 * S_Income  +     0.20713236126681 *
2408080   +        S_Kidhome  +    -0.14103612934526 * S_Mnt  +     0.36334508557452 *
2408081   +        S_MntFishProducts  +    -0.20862425337296 * S_MntFruits
2408082   +          +    -0.29089690099273 * S_MntGoldProds  +     0.11336893090527 *
2408083   +        S_MntMeatProducts  +    -0.13547374281924 * S_MntSweetProducts
2408084   +          +     0.02228828195539 * S_MntWines  +    -0.19257650420334 *
2408085   +        S_MonthsAsCustomer  +      0.1365526319824 * S_NumCatalogPurchases
2408086   +          +    -0.07686699131623 * S_NumDealsPurchases
2408087   +          +    -0.07220460738926 * S_NumDistPurchases
2408088   +          +    -0.06554027468389 * S_NumStorePurchases
2408089   +          +     0.10422838158001 * S_NumWebPurchases
2408090   +          +    -0.03858550147892 * S_NumWebVisitsMonth
2408091   +          +    -0.06397448441373 * S_RFMstat  +     0.21747838287147 *
2408092   +        S_RMntFrq  +     0.24839313159913 * S_Recency
2408093   +          +    -0.06317317698653 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -0.07547841798202 * S_AcceptedCmpTotal + 0.22445278254589 * 
S_Age + -0.26357481075143 * S_Frq + 0.06894154144261 * S_Income + 0.20713236126681 * S_Kidhome 
+ -0.14103612934526 * S_Mnt + 0.36334508557452 * S_MntFishProducts + -0.20862425337296 * 
S_MntFruits + -0.29089690099273 * S_MntGoldProds + 0.11336893090527 * S_MntMeatProducts + 
-0.13547374281924 * S_MntSweetProducts + 0.02228828195539 * S_MntWines + -0.19257650420334 * 
S_MonthsAsCustomer + 0.1365526319824 * S_NumCatalogPurchases + -0.07686699131623 * 
S_NumDealsPurchases + -0.07220460738926 * S_NumDistPurchases + -0.06554027468389 * 
S_NumStorePurchases + 0.10422838158001 * S_NumWebPurchases + -0.03858550147892 * 
S_NumWebVisitsMonth + -0.06397448441373 * S_RFMstat + 0.21747838287147 * S_RMntFrq + 
0.24839313159913 * S_Recency + -0.06317317698653 * S_Teenhome ;
2408094   +   H1x1_7  =    -0.08604903695444 * S_AcceptedCmpTotal
2408095   +          +    -0.14807437541992 * S_Age  +     0.01466157584549 * S_Frq
2408096   +          +    -0.09883966180507 * S_Income  +     0.51992566778352 *
2408097   +        S_Kidhome  +     0.29795006703636 * S_Mnt  +    -0.08922020500011 *
2408098   +        S_MntFishProducts  +     0.19836834402079 * S_MntFruits
2408099   +          +    -0.11292241468378 * S_MntGoldProds  +       0.584464452194 *
2408100   +        S_MntMeatProducts  +     0.22625326024073 * S_MntSweetProducts
2408101   +          +     0.24074129944382 * S_MntWines  +     0.13538906557527 *
2408102   +        S_MonthsAsCustomer  +    -0.01228250248922 * S_NumCatalogPurchases
2408103   +          +    -0.07920122387563 * S_NumDealsPurchases
2408104   +          +      0.3649244061347 * S_NumDistPurchases
2408105   +          +     0.36475853688403 * S_NumStorePurchases
2408106   +          +     0.02153991404063 * S_NumWebPurchases
2408107   +          +    -0.94080669139388 * S_NumWebVisitsMonth
2408108   +          +     0.24853677977494 * S_RFMstat  +     0.37015183933951 *
2408109   +        S_RMntFrq  +      0.6724157721663 * S_Recency
2408110   +          +      0.1615471643866 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_7 = -0.08604903695444 * S_AcceptedCmpTotal + -0.14807437541992 * 
S_Age + 0.01466157584549 * S_Frq + -0.09883966180507 * S_Income + 0.51992566778352 * S_Kidhome 
+ 0.29795006703636 * S_Mnt + -0.08922020500011 * S_MntFishProducts + 0.19836834402079 * 
S_MntFruits + -0.11292241468378 * S_MntGoldProds + 0.584464452194 * S_MntMeatProducts + 
0.22625326024073 * S_MntSweetProducts + 0.24074129944382 * S_MntWines + 0.13538906557527 * 
S_MonthsAsCustomer + -0.01228250248922 * S_NumCatalogPurchases + -0.07920122387563 * 
S_NumDealsPurchases + 0.3649244061347 * S_NumDistPurchases + 0.36475853688403 * 
S_NumStorePurchases + 0.02153991404063 * S_NumWebPurchases + -0.94080669139388 * 
S_NumWebVisitsMonth + 0.24853677977494 * S_RFMstat + 0.37015183933951 * S_RMntFrq + 
0.6724157721663 * S_Recency + 0.1615471643866 * S_Teenhome ;
2408111   +   H1x1_1  = H1x1_1  +     0.04431608362128 * AcceptedCmp10
2408112   +          +       0.145592087795 * AcceptedCmp20  +    -0.18972867139938 *
2408113   +        AcceptedCmp30  +     0.11297731320888 * AcceptedCmp40
2408114   +          +     0.15203974410995 * AcceptedCmp50  +     0.05130421316428 *
2408115   +        Complain0  +     0.33576036450343 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.04431608362128 * AcceptedCmp10 + 0.145592087795 * 
AcceptedCmp20 + -0.18972867139938 * AcceptedCmp30 + 0.11297731320888 * AcceptedCmp40 + 
0.15203974410995 * AcceptedCmp50 + 0.05130421316428 * Complain0 + 0.33576036450343 * 
HigherEducationBinary0 ;
2408116   +   H1x1_2  = H1x1_2  +    -0.05495742609855 * AcceptedCmp10
2408117   +          +    -0.08873650760176 * AcceptedCmp20  +    -0.16380549867313 *
2408118   +        AcceptedCmp30  +    -0.24495261884932 * AcceptedCmp40
2408119   +          +    -0.22199506896148 * AcceptedCmp50  +       0.149484615172 *
2408120   +        Complain0  +     0.01091791142552 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.05495742609855 * AcceptedCmp10 + -0.08873650760176 
* AcceptedCmp20 + -0.16380549867313 * AcceptedCmp30 + -0.24495261884932 * AcceptedCmp40 + 
-0.22199506896148 * AcceptedCmp50 + 0.149484615172 * Complain0 + 0.01091791142552 * 
HigherEducationBinary0 ;
2408121   +   H1x1_3  = H1x1_3  +     0.03473702421341 * AcceptedCmp10
2408122   +          +    -0.11226718065217 * AcceptedCmp20  +     0.19024579384296 *
2408123   +        AcceptedCmp30  +     0.15478548865598 * AcceptedCmp40
2408124   +          +     0.15222823671897 * AcceptedCmp50  +     0.07713012834947 *
2408125   +        Complain0  +    -0.18741708707661 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.03473702421341 * AcceptedCmp10 + -0.11226718065217 * 
AcceptedCmp20 + 0.19024579384296 * AcceptedCmp30 + 0.15478548865598 * AcceptedCmp40 + 
0.15222823671897 * AcceptedCmp50 + 0.07713012834947 * Complain0 + -0.18741708707661 * 
HigherEducationBinary0 ;
2408126   +   H1x1_4  = H1x1_4  +    -0.25622127302429 * AcceptedCmp10
2408127   +          +    -0.39059103518073 * AcceptedCmp20  +    -0.29716603631807 *
2408128   +        AcceptedCmp30  +    -0.20875694971526 * AcceptedCmp40
2408129   +          +    -0.35128787139073 * AcceptedCmp50  +    -0.28848733462386 *
2408130   +        Complain0  +      0.4276503747649 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.25622127302429 * AcceptedCmp10 + -0.39059103518073 
* AcceptedCmp20 + -0.29716603631807 * AcceptedCmp30 + -0.20875694971526 * AcceptedCmp40 + 
-0.35128787139073 * AcceptedCmp50 + -0.28848733462386 * Complain0 + 0.4276503747649 * 
HigherEducationBinary0 ;
2408131   +   H1x1_5  = H1x1_5  +    -0.06574875851088 * AcceptedCmp10
2408132   +          +    -0.27375195259265 * AcceptedCmp20  +     -0.2740681662293 *
2408133   +        AcceptedCmp30  +    -0.14697156898736 * AcceptedCmp40
2408134   +          +     0.17684649468835 * AcceptedCmp50  +    -0.09979172944646 *
2408135   +        Complain0  +     0.38986664202197 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.06574875851088 * AcceptedCmp10 + -0.27375195259265 
* AcceptedCmp20 + -0.2740681662293 * AcceptedCmp30 + -0.14697156898736 * AcceptedCmp40 + 
0.17684649468835 * AcceptedCmp50 + -0.09979172944646 * Complain0 + 0.38986664202197 * 
HigherEducationBinary0 ;
2408136   +   H1x1_6  = H1x1_6  +     0.08696678529441 * AcceptedCmp10
2408137   +          +     0.09467543942215 * AcceptedCmp20  +     0.04586779705477 *
2408138   +        AcceptedCmp30  +    -0.12591921836379 * AcceptedCmp40
2408139   +          +     0.20150138392895 * AcceptedCmp50  +     0.27764282700214 *
2408140   +        Complain0  +     0.13985738522066 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + 0.08696678529441 * AcceptedCmp10 + 0.09467543942215 * 
AcceptedCmp20 + 0.04586779705477 * AcceptedCmp30 + -0.12591921836379 * AcceptedCmp40 + 
0.20150138392895 * AcceptedCmp50 + 0.27764282700214 * Complain0 + 0.13985738522066 * 
HigherEducationBinary0 ;
2408141   +   H1x1_7  = H1x1_7  +    -0.10455069401218 * AcceptedCmp10
2408142   +          +      0.1311831941372 * AcceptedCmp20  +     0.17844209104604 *
2408143   +        AcceptedCmp30  +     0.19406707592815 * AcceptedCmp40
2408144   +          +    -0.00068155012319 * AcceptedCmp50  +     0.13245364846536 *
2408145   +        Complain0  +    -0.05165256160872 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_7 = H1x1_7 + -0.10455069401218 * AcceptedCmp10 + 0.1311831941372 * 
AcceptedCmp20 + 0.17844209104604 * AcceptedCmp30 + 0.19406707592815 * AcceptedCmp40 + 
-0.00068155012319 * AcceptedCmp50 + 0.13245364846536 * Complain0 + -0.05165256160872 * 
HigherEducationBinary0 ;
2408146   +   H1x1_1  = H1x1_1  +     0.28967939808759 * Education2n_Cycle
2408147   +          +    -0.15795056374781 * EducationBasic  +    -0.00649803471307 *
2408148   +        EducationGraduation  +     0.19520715924532 * EducationMaster
2408149   +          +     0.07744097241553 * Marital_StatusDivorced
2408150   +          +     -0.0247463100385 * Marital_StatusMarried
2408151   +          +     0.05804915234573 * Marital_StatusSingle
2408152   +          +    -0.08320125047871 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.28967939808759 * Education2n_Cycle + 
-0.15795056374781 * EducationBasic + -0.00649803471307 * EducationGraduation + 
0.19520715924532 * EducationMaster + 0.07744097241553 * Marital_StatusDivorced + 
-0.0247463100385 * Marital_StatusMarried + 0.05804915234573 * Marital_StatusSingle + 
-0.08320125047871 * Marital_StatusTogether ;
2408153   +   H1x1_2  = H1x1_2  +     0.12524444422085 * Education2n_Cycle
2408154   +          +    -0.30278286924729 * EducationBasic  +     0.37480827366421 *
2408155   +        EducationGraduation  +     0.34209136290694 * EducationMaster
2408156   +          +     0.01390668926269 * Marital_StatusDivorced
2408157   +          +     0.01136282152074 * Marital_StatusMarried
2408158   +          +     0.12450246418789 * Marital_StatusSingle
2408159   +          +     -0.1576148519872 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.12524444422085 * Education2n_Cycle + 
-0.30278286924729 * EducationBasic + 0.37480827366421 * EducationGraduation + 0.34209136290694 
* EducationMaster + 0.01390668926269 * Marital_StatusDivorced + 0.01136282152074 * 
Marital_StatusMarried + 0.12450246418789 * Marital_StatusSingle + -0.1576148519872 * 
Marital_StatusTogether ;
2408160   +   H1x1_3  = H1x1_3  +    -0.14589041643593 * Education2n_Cycle
2408161   +          +    -0.15691118816463 * EducationBasic  +      0.1993616073183 *
2408162   +        EducationGraduation  +     0.02862010255145 * EducationMaster
2408163   +          +    -0.19133456931879 * Marital_StatusDivorced
2408164   +          +     0.56263566654996 * Marital_StatusMarried
2408165   +          +    -0.42172822038882 * Marital_StatusSingle
2408166   +          +     0.42023140643292 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.14589041643593 * Education2n_Cycle + 
-0.15691118816463 * EducationBasic + 0.1993616073183 * EducationGraduation + 0.02862010255145 
* EducationMaster + -0.19133456931879 * Marital_StatusDivorced + 0.56263566654996 * 
Marital_StatusMarried + -0.42172822038882 * Marital_StatusSingle + 0.42023140643292 * 
Marital_StatusTogether ;
2408167   +   H1x1_4  = H1x1_4  +     0.10038585978656 * Education2n_Cycle
2408168   +          +    -0.11388609002984 * EducationBasic  +    -0.14980553500983 *
2408169   +        EducationGraduation  +    -0.07646595330369 * EducationMaster
2408170   +          +    -0.19871205065609 * Marital_StatusDivorced
2408171   +          +    -0.14730795681603 * Marital_StatusMarried
2408172   +          +     0.05055432510362 * Marital_StatusSingle
2408173   +          +     0.06558965292395 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.10038585978656 * Education2n_Cycle + 
-0.11388609002984 * EducationBasic + -0.14980553500983 * EducationGraduation + 
-0.07646595330369 * EducationMaster + -0.19871205065609 * Marital_StatusDivorced + 
-0.14730795681603 * Marital_StatusMarried + 0.05055432510362 * Marital_StatusSingle + 
0.06558965292395 * Marital_StatusTogether ;
2408174   +   H1x1_5  = H1x1_5  +      0.0015835307855 * Education2n_Cycle
2408175   +          +    -0.22658746797638 * EducationBasic  +    -0.03445982386977 *
2408176   +        EducationGraduation  +     0.11375378192685 * EducationMaster
2408177   +          +    -0.35623807358995 * Marital_StatusDivorced
2408178   +          +     0.30324726283965 * Marital_StatusMarried
2408179   +          +    -0.18561093467927 * Marital_StatusSingle
2408180   +          +       0.395424582152 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 0.0015835307855 * Education2n_Cycle + 
-0.22658746797638 * EducationBasic + -0.03445982386977 * EducationGraduation + 
0.11375378192685 * EducationMaster + -0.35623807358995 * Marital_StatusDivorced + 
0.30324726283965 * Marital_StatusMarried + -0.18561093467927 * Marital_StatusSingle + 
0.395424582152 * Marital_StatusTogether ;
2408181   +   H1x1_6  = H1x1_6  +    -0.23751822587858 * Education2n_Cycle
2408182   +          +    -0.01687300040825 * EducationBasic  +     0.23236967703011 *
2408183   +        EducationGraduation  +      0.0725289831541 * EducationMaster
2408184   +          +     0.11581014663368 * Marital_StatusDivorced
2408185   +          +    -0.31070638037659 * Marital_StatusMarried
2408186   +          +     0.17131747253949 * Marital_StatusSingle
2408187   +          +    -0.19314955966476 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + -0.23751822587858 * Education2n_Cycle + 
-0.01687300040825 * EducationBasic + 0.23236967703011 * EducationGraduation + 0.0725289831541 
* EducationMaster + 0.11581014663368 * Marital_StatusDivorced + -0.31070638037659 * 
Marital_StatusMarried + 0.17131747253949 * Marital_StatusSingle + -0.19314955966476 * 
Marital_StatusTogether ;
2408188   +   H1x1_7  = H1x1_7  +     0.00103693282479 * Education2n_Cycle
2408189   +          +     0.12608909598752 * EducationBasic  +     -0.2366673091666 *
2408190   +        EducationGraduation  +     0.24413217290922 * EducationMaster
2408191   +          +    -0.42450599871892 * Marital_StatusDivorced
2408192   +          +     0.48162905075885 * Marital_StatusMarried
2408193   +          +    -0.26618507749283 * Marital_StatusSingle
2408194   +          +     0.38053668740338 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_7 = H1x1_7 + 0.00103693282479 * Education2n_Cycle + 
0.12608909598752 * EducationBasic + -0.2366673091666 * EducationGraduation + 0.24413217290922 
* EducationMaster + -0.42450599871892 * Marital_StatusDivorced + 0.48162905075885 * 
Marital_StatusMarried + -0.26618507749283 * Marital_StatusSingle + 0.38053668740338 * 
Marital_StatusTogether ;
2408195   +   H1x1_1  =     0.12149136705075 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.12149136705075 + H1x1_1 ;
2408196   +   H1x1_2  =    -0.97489696657001 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.97489696657001 + H1x1_2 ;
2408197   +   H1x1_3  =    -0.70605220802968 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.70605220802968 + H1x1_3 ;
2408198   +   H1x1_4  =    -1.07783206982379 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -1.07783206982379 + H1x1_4 ;
2408199   +   H1x1_5  =    -1.00400706261511 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.00400706261511 + H1x1_5 ;
2408200   +   H1x1_6  =     0.22600488314839 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0.22600488314839 + H1x1_6 ;
2408201   +   H1x1_7  =     1.55642446968077 + H1x1_7 ;
MPRINT(EM_DIAGRAM):   H1x1_7 = 1.55642446968077 + H1x1_7 ;
2408202   +   _EPS = SQRT(CONSTANT('MACEPS')) ;
MPRINT(EM_DIAGRAM):   _EPS = SQRT(CONSTANT('MACEPS')) ;
2408203   +   _REC_EPS = 1/_EPS ;
MPRINT(EM_DIAGRAM):   _REC_EPS = 1/_EPS ;
2408204   +   DROP _REC_EPS _EPS ;
MPRINT(EM_DIAGRAM):   DROP _REC_EPS _EPS ;
2408205   +   IF H1x1_1  < _REC_EPS AND H1x1_1  > - _REC_EPS THEN
2408206   +   H1x1_1  = H1x1_1  * H1x1_1 ;
MPRINT(EM_DIAGRAM):   IF H1x1_1 < _REC_EPS AND H1x1_1 > - _REC_EPS THEN H1x1_1 = H1x1_1 * 
H1x1_1 ;
2408207   +   ELSE H1x1_1  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_1 = _REC_EPS ;
2408208   +   IF H1x1_2  < _REC_EPS AND H1x1_2  > - _REC_EPS THEN
2408209   +   H1x1_2  = H1x1_2  * H1x1_2 ;
MPRINT(EM_DIAGRAM):   IF H1x1_2 < _REC_EPS AND H1x1_2 > - _REC_EPS THEN H1x1_2 = H1x1_2 * 
H1x1_2 ;
2408210   +   ELSE H1x1_2  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_2 = _REC_EPS ;
2408211   +   IF H1x1_3  < _REC_EPS AND H1x1_3  > - _REC_EPS THEN
2408212   +   H1x1_3  = H1x1_3  * H1x1_3 ;
MPRINT(EM_DIAGRAM):   IF H1x1_3 < _REC_EPS AND H1x1_3 > - _REC_EPS THEN H1x1_3 = H1x1_3 * 
H1x1_3 ;
2408213   +   ELSE H1x1_3  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_3 = _REC_EPS ;
2408214   +   IF H1x1_4  < _REC_EPS AND H1x1_4  > - _REC_EPS THEN
2408215   +   H1x1_4  = H1x1_4  * H1x1_4 ;
MPRINT(EM_DIAGRAM):   IF H1x1_4 < _REC_EPS AND H1x1_4 > - _REC_EPS THEN H1x1_4 = H1x1_4 * 
H1x1_4 ;
2408216   +   ELSE H1x1_4  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_4 = _REC_EPS ;
2408217   +   IF H1x1_5  < _REC_EPS AND H1x1_5  > - _REC_EPS THEN
2408218   +   H1x1_5  = H1x1_5  * H1x1_5 ;
MPRINT(EM_DIAGRAM):   IF H1x1_5 < _REC_EPS AND H1x1_5 > - _REC_EPS THEN H1x1_5 = H1x1_5 * 
H1x1_5 ;
2408219   +   ELSE H1x1_5  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_5 = _REC_EPS ;
2408220   +   IF H1x1_6  < _REC_EPS AND H1x1_6  > - _REC_EPS THEN
2408221   +   H1x1_6  = H1x1_6  * H1x1_6 ;
MPRINT(EM_DIAGRAM):   IF H1x1_6 < _REC_EPS AND H1x1_6 > - _REC_EPS THEN H1x1_6 = H1x1_6 * 
H1x1_6 ;
2408222   +   ELSE H1x1_6  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_6 = _REC_EPS ;
2408223   +   IF H1x1_7  < _REC_EPS AND H1x1_7  > - _REC_EPS THEN
2408224   +   H1x1_7  = H1x1_7  * H1x1_7 ;
MPRINT(EM_DIAGRAM):   IF H1x1_7 < _REC_EPS AND H1x1_7 > - _REC_EPS THEN H1x1_7 = H1x1_7 * 
H1x1_7 ;
2408225   +   ELSE H1x1_7  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_7 = _REC_EPS ;
2408226   +END;
MPRINT(EM_DIAGRAM):   END;
2408227   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2408228   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2408229   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2408230   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2408231   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2408232   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
2408233   +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
2408234   +   H1x1_7  = .;
MPRINT(EM_DIAGRAM):   H1x1_7 = .;
2408235   +END;
MPRINT(EM_DIAGRAM):   END;
2408236   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2408237   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
2408238   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2408239   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2408240   +   H1x2_1  =    -1.36226288448745 * S_AcceptedCmpTotal
2408241   +          +     -1.3328616352886 * S_Age  +     1.25346137866034 * S_Frq
2408242   +          +    -1.21746243786295 * S_Income  +     2.83911738158074 *
2408243   +        S_Kidhome  +    -0.60784009102409 * S_Mnt  +     1.57752173634223 *
2408244   +        S_MntFishProducts  +    -0.26776567401075 * S_MntFruits
2408245   +          +     1.09584731081081 * S_MntGoldProds  +     1.22333044103532 *
2408246   +        S_MntMeatProducts  +     0.42827942745016 * S_MntSweetProducts
2408247   +          +     0.67813472792448 * S_MntWines  +     0.56816492004798 *
2408248   +        S_MonthsAsCustomer  +     0.58113470399079 * S_NumCatalogPurchases
2408249   +          +     1.96719021971894 * S_NumDealsPurchases
2408250   +          +    -0.44535354794671 * S_NumDistPurchases
2408251   +          +    -0.54827762736866 * S_NumStorePurchases
2408252   +          +     1.02703310241897 * S_NumWebPurchases
2408253   +          +    -0.12526997502601 * S_NumWebVisitsMonth
2408254   +          +    -0.55803926383776 * S_RFMstat  +     0.01819380776809 *
2408255   +        S_RMntFrq  +       0.651688575044 * S_Recency
2408256   +          +     1.58682398186611 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -1.36226288448745 * S_AcceptedCmpTotal + -1.3328616352886 * 
S_Age + 1.25346137866034 * S_Frq + -1.21746243786295 * S_Income + 2.83911738158074 * S_Kidhome 
+ -0.60784009102409 * S_Mnt + 1.57752173634223 * S_MntFishProducts + -0.26776567401075 * 
S_MntFruits + 1.09584731081081 * S_MntGoldProds + 1.22333044103532 * S_MntMeatProducts + 
0.42827942745016 * S_MntSweetProducts + 0.67813472792448 * S_MntWines + 0.56816492004798 * 
S_MonthsAsCustomer + 0.58113470399079 * S_NumCatalogPurchases + 1.96719021971894 * 
S_NumDealsPurchases + -0.44535354794671 * S_NumDistPurchases + -0.54827762736866 * 
S_NumStorePurchases + 1.02703310241897 * S_NumWebPurchases + -0.12526997502601 * 
S_NumWebVisitsMonth + -0.55803926383776 * S_RFMstat + 0.01819380776809 * S_RMntFrq + 
0.651688575044 * S_Recency + 1.58682398186611 * S_Teenhome ;
2408257   +   H1x2_2  =    -0.38064507857029 * S_AcceptedCmpTotal
2408258   +          +    -0.49661801158351 * S_Age  +    -0.89589399799916 * S_Frq
2408259   +          +     -0.0121499288597 * S_Income  +    -0.48023022827846 *
2408260   +        S_Kidhome  +     -0.5183846206029 * S_Mnt  +    -3.13913899012334 *
2408261   +        S_MntFishProducts  +    -2.07291335687615 * S_MntFruits
2408262   +          +     0.51019753905662 * S_MntGoldProds  +     0.11458666377917 *
2408263   +        S_MntMeatProducts  +     -1.8499241966205 * S_MntSweetProducts
2408264   +          +     0.23160544044172 * S_MntWines  +    -0.48210626907943 *
2408265   +        S_MonthsAsCustomer  +     0.15500845227752 * S_NumCatalogPurchases
2408266   +          +     1.34659447971131 * S_NumDealsPurchases
2408267   +          +    -0.51624251310423 * S_NumDistPurchases
2408268   +          +      -1.283121574848 * S_NumStorePurchases
2408269   +          +    -1.83517806228926 * S_NumWebPurchases
2408270   +          +     0.51321339475285 * S_NumWebVisitsMonth
2408271   +          +    -1.86431704283342 * S_RFMstat  +    -1.52065204326569 *
2408272   +        S_RMntFrq  +    -0.33186055095462 * S_Recency
2408273   +          +    -0.49524729407054 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.38064507857029 * S_AcceptedCmpTotal + -0.49661801158351 * 
S_Age + -0.89589399799916 * S_Frq + -0.0121499288597 * S_Income + -0.48023022827846 * 
S_Kidhome + -0.5183846206029 * S_Mnt + -3.13913899012334 * S_MntFishProducts + 
-2.07291335687615 * S_MntFruits + 0.51019753905662 * S_MntGoldProds + 0.11458666377917 * 
S_MntMeatProducts + -1.8499241966205 * S_MntSweetProducts + 0.23160544044172 * S_MntWines + 
-0.48210626907943 * S_MonthsAsCustomer + 0.15500845227752 * S_NumCatalogPurchases + 
1.34659447971131 * S_NumDealsPurchases + -0.51624251310423 * S_NumDistPurchases + 
-1.283121574848 * S_NumStorePurchases + -1.83517806228926 * S_NumWebPurchases + 
0.51321339475285 * S_NumWebVisitsMonth + -1.86431704283342 * S_RFMstat + -1.52065204326569 * 
S_RMntFrq + -0.33186055095462 * S_Recency + -0.49524729407054 * S_Teenhome ;
2408274   +   H1x2_3  =    -0.75774003934728 * S_AcceptedCmpTotal
2408275   +          +    -0.85312030825337 * S_Age  +    -0.01726294458221 * S_Frq
2408276   +          +     0.58598267983786 * S_Income  +     1.30497766805554 *
2408277   +        S_Kidhome  +    -0.84214135491022 * S_Mnt  +     0.55305862453787 *
2408278   +        S_MntFishProducts  +      0.6488663613899 * S_MntFruits
2408279   +          +    -0.83189439197558 * S_MntGoldProds  +    -0.07500050412653 *
2408280   +        S_MntMeatProducts  +    -0.06401928810253 * S_MntSweetProducts
2408281   +          +      0.5940135658334 * S_MntWines  +    -0.04573352455984 *
2408282   +        S_MonthsAsCustomer  +    -1.53610650634069 * S_NumCatalogPurchases
2408283   +          +     0.67492297345004 * S_NumDealsPurchases
2408284   +          +    -0.40437875375926 * S_NumDistPurchases
2408285   +          +     0.36322603681545 * S_NumStorePurchases
2408286   +          +    -1.15315070635524 * S_NumWebPurchases
2408287   +          +     1.20707272201156 * S_NumWebVisitsMonth
2408288   +          +     0.12192566357285 * S_RFMstat  +    -0.46711219170047 *
2408289   +        S_RMntFrq  +     1.89703582493259 * S_Recency
2408290   +          +     1.07511942237188 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.75774003934728 * S_AcceptedCmpTotal + -0.85312030825337 * 
S_Age + -0.01726294458221 * S_Frq + 0.58598267983786 * S_Income + 1.30497766805554 * S_Kidhome 
+ -0.84214135491022 * S_Mnt + 0.55305862453787 * S_MntFishProducts + 0.6488663613899 * 
S_MntFruits + -0.83189439197558 * S_MntGoldProds + -0.07500050412653 * S_MntMeatProducts + 
-0.06401928810253 * S_MntSweetProducts + 0.5940135658334 * S_MntWines + -0.04573352455984 * 
S_MonthsAsCustomer + -1.53610650634069 * S_NumCatalogPurchases + 0.67492297345004 * 
S_NumDealsPurchases + -0.40437875375926 * S_NumDistPurchases + 0.36322603681545 * 
S_NumStorePurchases + -1.15315070635524 * S_NumWebPurchases + 1.20707272201156 * 
S_NumWebVisitsMonth + 0.12192566357285 * S_RFMstat + -0.46711219170047 * S_RMntFrq + 
1.89703582493259 * S_Recency + 1.07511942237188 * S_Teenhome ;
2408291   +   H1x2_4  =     0.62123819069495 * S_AcceptedCmpTotal
2408292   +          +     0.03399237520702 * S_Age  +    -0.01971421795338 * S_Frq
2408293   +          +    -0.54728266919056 * S_Income  +     -0.4634195771237 *
2408294   +        S_Kidhome  +    -1.19055247712911 * S_Mnt  +      1.4307770729159 *
2408295   +        S_MntFishProducts  +    -0.83895281276374 * S_MntFruits
2408296   +          +    -0.48578798244317 * S_MntGoldProds  +     -0.2846617807101 *
2408297   +        S_MntMeatProducts  +     0.70721686533987 * S_MntSweetProducts
2408298   +          +     1.32824513551741 * S_MntWines  +    -0.62654342755965 *
2408299   +        S_MonthsAsCustomer  +    -0.97245161056543 * S_NumCatalogPurchases
2408300   +          +    -0.41427983342148 * S_NumDealsPurchases
2408301   +          +    -0.22714305629205 * S_NumDistPurchases
2408302   +          +    -0.78763182048862 * S_NumStorePurchases
2408303   +          +    -0.26669253451501 * S_NumWebPurchases
2408304   +          +    -0.79601078616342 * S_NumWebVisitsMonth
2408305   +          +    -0.03863278696502 * S_RFMstat  +     0.95011556103056 *
2408306   +        S_RMntFrq  +     0.57184629262878 * S_Recency
2408307   +          +    -0.21560478702461 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.62123819069495 * S_AcceptedCmpTotal + 0.03399237520702 * 
S_Age + -0.01971421795338 * S_Frq + -0.54728266919056 * S_Income + -0.4634195771237 * 
S_Kidhome + -1.19055247712911 * S_Mnt + 1.4307770729159 * S_MntFishProducts + 
-0.83895281276374 * S_MntFruits + -0.48578798244317 * S_MntGoldProds + -0.2846617807101 * 
S_MntMeatProducts + 0.70721686533987 * S_MntSweetProducts + 1.32824513551741 * S_MntWines + 
-0.62654342755965 * S_MonthsAsCustomer + -0.97245161056543 * S_NumCatalogPurchases + 
-0.41427983342148 * S_NumDealsPurchases + -0.22714305629205 * S_NumDistPurchases + 
-0.78763182048862 * S_NumStorePurchases + -0.26669253451501 * S_NumWebPurchases + 
-0.79601078616342 * S_NumWebVisitsMonth + -0.03863278696502 * S_RFMstat + 0.95011556103056 * 
S_RMntFrq + 0.57184629262878 * S_Recency + -0.21560478702461 * S_Teenhome ;
2408308   +   H1x2_5  =     1.47906557745075 * S_AcceptedCmpTotal
2408309   +          +    -0.31060566334198 * S_Age  +     0.56472424389718 * S_Frq
2408310   +          +     2.16541682726249 * S_Income  +    -0.34119803841059 *
2408311   +        S_Kidhome  +    -0.53783050542796 * S_Mnt  +     0.54954821448236 *
2408312   +        S_MntFishProducts  +    -0.48449918837838 * S_MntFruits
2408313   +          +     0.29783052620672 * S_MntGoldProds  +    -0.15068954343013 *
2408314   +        S_MntMeatProducts  +     0.12733251381761 * S_MntSweetProducts
2408315   +          +    -2.46709166794296 * S_MntWines  +     -1.2011286508879 *
2408316   +        S_MonthsAsCustomer  +    -0.88194814936932 * S_NumCatalogPurchases
2408317   +          +      0.7697882092212 * S_NumDealsPurchases
2408318   +          +     0.51864835453056 * S_NumDistPurchases
2408319   +          +    -1.18320366630444 * S_NumStorePurchases
2408320   +          +     -0.6608394639529 * S_NumWebPurchases
2408321   +          +    -0.03948137707769 * S_NumWebVisitsMonth
2408322   +          +     1.01076462488608 * S_RFMstat  +    -0.91562280329354 *
2408323   +        S_RMntFrq  +    -1.07576669501238 * S_Recency
2408324   +          +     -0.5946628412106 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.47906557745075 * S_AcceptedCmpTotal + -0.31060566334198 * 
S_Age + 0.56472424389718 * S_Frq + 2.16541682726249 * S_Income + -0.34119803841059 * S_Kidhome 
+ -0.53783050542796 * S_Mnt + 0.54954821448236 * S_MntFishProducts + -0.48449918837838 * 
S_MntFruits + 0.29783052620672 * S_MntGoldProds + -0.15068954343013 * S_MntMeatProducts + 
0.12733251381761 * S_MntSweetProducts + -2.46709166794296 * S_MntWines + -1.2011286508879 * 
S_MonthsAsCustomer + -0.88194814936932 * S_NumCatalogPurchases + 0.7697882092212 * 
S_NumDealsPurchases + 0.51864835453056 * S_NumDistPurchases + -1.18320366630444 * 
S_NumStorePurchases + -0.6608394639529 * S_NumWebPurchases + -0.03948137707769 * 
S_NumWebVisitsMonth + 1.01076462488608 * S_RFMstat + -0.91562280329354 * S_RMntFrq + 
-1.07576669501238 * S_Recency + -0.5946628412106 * S_Teenhome ;
2408325   +   H1x2_6  =     0.42130900994246 * S_AcceptedCmpTotal
2408326   +          +     1.64256522546546 * S_Age  +    -0.31822237495441 * S_Frq
2408327   +          +     0.39698710846967 * S_Income  +    -1.30075584525681 *
2408328   +        S_Kidhome  +    -1.74733472316294 * S_Mnt  +    -1.04423575539078 *
2408329   +        S_MntFishProducts  +     0.28025913700744 * S_MntFruits
2408330   +          +     0.92062413073229 * S_MntGoldProds  +     0.38487452173084 *
2408331   +        S_MntMeatProducts  +     2.15808673418264 * S_MntSweetProducts
2408332   +          +     -0.5364274323591 * S_MntWines  +     0.64447858852609 *
2408333   +        S_MonthsAsCustomer  +     0.33683873873337 * S_NumCatalogPurchases
2408334   +          +     1.45707983202269 * S_NumDealsPurchases
2408335   +          +     0.83341887728641 * S_NumDistPurchases
2408336   +          +    -0.36664450469423 * S_NumStorePurchases
2408337   +          +     0.63911579043339 * S_NumWebPurchases
2408338   +          +     0.67144790303554 * S_NumWebVisitsMonth
2408339   +          +    -0.22124390112376 * S_RFMstat  +     1.72222071547971 *
2408340   +        S_RMntFrq  +    -0.02323382627271 * S_Recency
2408341   +          +    -0.09494567508522 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_6 = 0.42130900994246 * S_AcceptedCmpTotal + 1.64256522546546 * 
S_Age + -0.31822237495441 * S_Frq + 0.39698710846967 * S_Income + -1.30075584525681 * 
S_Kidhome + -1.74733472316294 * S_Mnt + -1.04423575539078 * S_MntFishProducts + 
0.28025913700744 * S_MntFruits + 0.92062413073229 * S_MntGoldProds + 0.38487452173084 * 
S_MntMeatProducts + 2.15808673418264 * S_MntSweetProducts + -0.5364274323591 * S_MntWines + 
0.64447858852609 * S_MonthsAsCustomer + 0.33683873873337 * S_NumCatalogPurchases + 
1.45707983202269 * S_NumDealsPurchases + 0.83341887728641 * S_NumDistPurchases + 
-0.36664450469423 * S_NumStorePurchases + 0.63911579043339 * S_NumWebPurchases + 
0.67144790303554 * S_NumWebVisitsMonth + -0.22124390112376 * S_RFMstat + 1.72222071547971 * 
S_RMntFrq + -0.02323382627271 * S_Recency + -0.09494567508522 * S_Teenhome ;
2408342   +   H1x2_7  =      0.0903330772553 * S_AcceptedCmpTotal
2408343   +          +     0.13217959089196 * S_Age  +     0.93600629225871 * S_Frq
2408344   +          +     1.23765169211392 * S_Income  +     1.27732984858098 *
2408345   +        S_Kidhome  +     1.54889765360944 * S_Mnt  +     0.84618173514761 *
2408346   +        S_MntFishProducts  +    -0.32044356786958 * S_MntFruits
2408347   +          +    -0.26357995597029 * S_MntGoldProds  +     0.53649229087334 *
2408348   +        S_MntMeatProducts  +     1.46955866272889 * S_MntSweetProducts
2408349   +          +    -0.34260315437319 * S_MntWines  +    -1.70693604004836 *
2408350   +        S_MonthsAsCustomer  +     -0.4612555130737 * S_NumCatalogPurchases
2408351   +          +     0.68491896063662 * S_NumDealsPurchases
2408352   +          +      0.5386312048592 * S_NumDistPurchases
2408353   +          +     1.28108942503912 * S_NumStorePurchases
2408354   +          +    -0.88282270505969 * S_NumWebPurchases
2408355   +          +    -0.66670958211416 * S_NumWebVisitsMonth
2408356   +          +     0.94315921733739 * S_RFMstat  +     0.70533705858561 *
2408357   +        S_RMntFrq  +     0.23896687873405 * S_Recency
2408358   +          +     0.66289635918858 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_7 = 0.0903330772553 * S_AcceptedCmpTotal + 0.13217959089196 * S_Age 
+ 0.93600629225871 * S_Frq + 1.23765169211392 * S_Income + 1.27732984858098 * S_Kidhome + 
1.54889765360944 * S_Mnt + 0.84618173514761 * S_MntFishProducts + -0.32044356786958 * 
S_MntFruits + -0.26357995597029 * S_MntGoldProds + 0.53649229087334 * S_MntMeatProducts + 
1.46955866272889 * S_MntSweetProducts + -0.34260315437319 * S_MntWines + -1.70693604004836 * 
S_MonthsAsCustomer + -0.4612555130737 * S_NumCatalogPurchases + 0.68491896063662 * 
S_NumDealsPurchases + 0.5386312048592 * S_NumDistPurchases + 1.28108942503912 * 
S_NumStorePurchases + -0.88282270505969 * S_NumWebPurchases + -0.66670958211416 * 
S_NumWebVisitsMonth + 0.94315921733739 * S_RFMstat + 0.70533705858561 * S_RMntFrq + 
0.23896687873405 * S_Recency + 0.66289635918858 * S_Teenhome ;
2408359   +   H1x2_1  = H1x2_1  +     0.22958861848016 * AcceptedCmp10
2408360   +          +    -1.11069938765475 * AcceptedCmp20  +     1.18563222829069 *
2408361   +        AcceptedCmp30  +    -0.97028253571173 * AcceptedCmp40
2408362   +          +     0.60850082670391 * AcceptedCmp50  +     0.31163990605418 *
2408363   +        Complain0  +     1.10957053966326 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 0.22958861848016 * AcceptedCmp10 + -1.11069938765475 * 
AcceptedCmp20 + 1.18563222829069 * AcceptedCmp30 + -0.97028253571173 * AcceptedCmp40 + 
0.60850082670391 * AcceptedCmp50 + 0.31163990605418 * Complain0 + 1.10957053966326 * 
HigherEducationBinary0 ;
2408364   +   H1x2_2  = H1x2_2  +    -0.99409862826118 * AcceptedCmp10
2408365   +          +    -0.76360093699992 * AcceptedCmp20  +     0.82772534103696 *
2408366   +        AcceptedCmp30  +     1.74232000787449 * AcceptedCmp40
2408367   +          +    -1.37356239255127 * AcceptedCmp50  +      0.0919811154199 *
2408368   +        Complain0  +    -0.00220513515877 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.99409862826118 * AcceptedCmp10 + -0.76360093699992 
* AcceptedCmp20 + 0.82772534103696 * AcceptedCmp30 + 1.74232000787449 * AcceptedCmp40 + 
-1.37356239255127 * AcceptedCmp50 + 0.0919811154199 * Complain0 + -0.00220513515877 * 
HigherEducationBinary0 ;
2408369   +   H1x2_3  = H1x2_3  +    -0.21003647134105 * AcceptedCmp10
2408370   +          +    -0.08930317176477 * AcceptedCmp20  +    -0.39109673162041 *
2408371   +        AcceptedCmp30  +     1.14094450038946 * AcceptedCmp40
2408372   +          +     1.26041997788848 * AcceptedCmp50  +    -0.10972130900569 *
2408373   +        Complain0  +    -0.99352598480407 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -0.21003647134105 * AcceptedCmp10 + -0.08930317176477 
* AcceptedCmp20 + -0.39109673162041 * AcceptedCmp30 + 1.14094450038946 * AcceptedCmp40 + 
1.26041997788848 * AcceptedCmp50 + -0.10972130900569 * Complain0 + -0.99352598480407 * 
HigherEducationBinary0 ;
2408374   +   H1x2_4  = H1x2_4  +     2.02630284432093 * AcceptedCmp10
2408375   +          +    -2.50721904229276 * AcceptedCmp20  +    -1.31026450397446 *
2408376   +        AcceptedCmp30  +    -0.83440880266914 * AcceptedCmp40
2408377   +          +     -0.0570899805015 * AcceptedCmp50  +    -0.55525351434733 *
2408378   +        Complain0  +     0.27306601694081 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 2.02630284432093 * AcceptedCmp10 + -2.50721904229276 * 
AcceptedCmp20 + -1.31026450397446 * AcceptedCmp30 + -0.83440880266914 * AcceptedCmp40 + 
-0.0570899805015 * AcceptedCmp50 + -0.55525351434733 * Complain0 + 0.27306601694081 * 
HigherEducationBinary0 ;
2408379   +   H1x2_5  = H1x2_5  +    -0.18595284227194 * AcceptedCmp10
2408380   +          +    -1.55973916517392 * AcceptedCmp20  +    -3.81563768970049 *
2408381   +        AcceptedCmp30  +    -0.09331430915239 * AcceptedCmp40
2408382   +          +     0.76128118177142 * AcceptedCmp50  +    -0.17283107047755 *
2408383   +        Complain0  +    -1.01028562804392 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + -0.18595284227194 * AcceptedCmp10 + -1.55973916517392 
* AcceptedCmp20 + -3.81563768970049 * AcceptedCmp30 + -0.09331430915239 * AcceptedCmp40 + 
0.76128118177142 * AcceptedCmp50 + -0.17283107047755 * Complain0 + -1.01028562804392 * 
HigherEducationBinary0 ;
2408384   +   H1x2_6  = H1x2_6  +    -1.21475169836565 * AcceptedCmp10
2408385   +          +     0.28748729216575 * AcceptedCmp20  +     1.15908030413172 *
2408386   +        AcceptedCmp30  +    -0.05889528676549 * AcceptedCmp40
2408387   +          +    -0.41661363625562 * AcceptedCmp50  +    -0.77939130028952 *
2408388   +        Complain0  +     2.19510865765326 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + -1.21475169836565 * AcceptedCmp10 + 0.28748729216575 * 
AcceptedCmp20 + 1.15908030413172 * AcceptedCmp30 + -0.05889528676549 * AcceptedCmp40 + 
-0.41661363625562 * AcceptedCmp50 + -0.77939130028952 * Complain0 + 2.19510865765326 * 
HigherEducationBinary0 ;
2408389   +   H1x2_7  = H1x2_7  +     0.87360423179644 * AcceptedCmp10
2408390   +          +    -0.47867594186426 * AcceptedCmp20  +    -0.30325818223392 *
2408391   +        AcceptedCmp30  +    -0.96085556588297 * AcceptedCmp40
2408392   +          +    -0.19693158209969 * AcceptedCmp50  +    -0.73731792634553 *
2408393   +        Complain0  +    -1.10021678806679 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_7 = H1x2_7 + 0.87360423179644 * AcceptedCmp10 + -0.47867594186426 * 
AcceptedCmp20 + -0.30325818223392 * AcceptedCmp30 + -0.96085556588297 * AcceptedCmp40 + 
-0.19693158209969 * AcceptedCmp50 + -0.73731792634553 * Complain0 + -1.10021678806679 * 
HigherEducationBinary0 ;
2408394   +   H1x2_1  = H1x2_1  +    -1.17876013389516 * Education2n_Cycle
2408395   +          +    -0.35670434275624 * EducationBasic  +    -0.12456502068616 *
2408396   +        EducationGraduation  +     -1.0620373133508 * EducationMaster
2408397   +          +    -3.97961426831865 * Marital_StatusDivorced
2408398   +          +     0.00932639813867 * Marital_StatusMarried
2408399   +          +     1.29310186574718 * Marital_StatusSingle
2408400   +          +     1.60940802221114 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -1.17876013389516 * Education2n_Cycle + 
-0.35670434275624 * EducationBasic + -0.12456502068616 * EducationGraduation + 
-1.0620373133508 * EducationMaster + -3.97961426831865 * Marital_StatusDivorced + 
0.00932639813867 * Marital_StatusMarried + 1.29310186574718 * Marital_StatusSingle + 
1.60940802221114 * Marital_StatusTogether ;
2408401   +   H1x2_2  = H1x2_2  +     0.58497813059595 * Education2n_Cycle
2408402   +          +     0.98038586431321 * EducationBasic  +    -0.20442806724521 *
2408403   +        EducationGraduation  +     0.64973046142001 * EducationMaster
2408404   +          +    -0.30358516578188 * Marital_StatusDivorced
2408405   +          +    -0.96176709360703 * Marital_StatusMarried
2408406   +          +     1.26977690921649 * Marital_StatusSingle
2408407   +          +     -0.6681544336237 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.58497813059595 * Education2n_Cycle + 
0.98038586431321 * EducationBasic + -0.20442806724521 * EducationGraduation + 0.64973046142001 
* EducationMaster + -0.30358516578188 * Marital_StatusDivorced + -0.96176709360703 * 
Marital_StatusMarried + 1.26977690921649 * Marital_StatusSingle + -0.6681544336237 * 
Marital_StatusTogether ;
2408408   +   H1x2_3  = H1x2_3  +     0.42123479646947 * Education2n_Cycle
2408409   +          +     0.22705854674045 * EducationBasic  +     0.34794003687348 *
2408410   +        EducationGraduation  +     0.18356390207843 * EducationMaster
2408411   +          +     0.55272671490757 * Marital_StatusDivorced
2408412   +          +      0.1499239288334 * Marital_StatusMarried
2408413   +          +    -0.46840941760604 * Marital_StatusSingle
2408414   +          +     0.93706218273755 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.42123479646947 * Education2n_Cycle + 
0.22705854674045 * EducationBasic + 0.34794003687348 * EducationGraduation + 0.18356390207843 
* EducationMaster + 0.55272671490757 * Marital_StatusDivorced + 0.1499239288334 * 
Marital_StatusMarried + -0.46840941760604 * Marital_StatusSingle + 0.93706218273755 * 
Marital_StatusTogether ;
2408415   +   H1x2_4  = H1x2_4  +     0.85035585831723 * Education2n_Cycle
2408416   +          +    -0.70680576286167 * EducationBasic  +    -0.24487676912938 *
2408417   +        EducationGraduation  +    -0.33030970028481 * EducationMaster
2408418   +          +      -1.240735370138 * Marital_StatusDivorced
2408419   +          +    -1.20089294883599 * Marital_StatusMarried
2408420   +          +     0.57492674426149 * Marital_StatusSingle
2408421   +          +     1.44189292990255 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.85035585831723 * Education2n_Cycle + 
-0.70680576286167 * EducationBasic + -0.24487676912938 * EducationGraduation + 
-0.33030970028481 * EducationMaster + -1.240735370138 * Marital_StatusDivorced + 
-1.20089294883599 * Marital_StatusMarried + 0.57492674426149 * Marital_StatusSingle + 
1.44189292990255 * Marital_StatusTogether ;
2408422   +   H1x2_5  = H1x2_5  +    -0.62461434654579 * Education2n_Cycle
2408423   +          +    -0.34090423965869 * EducationBasic  +    -0.82493401834396 *
2408424   +        EducationGraduation  +    -1.09423426649553 * EducationMaster
2408425   +          +     1.05435442049802 * Marital_StatusDivorced
2408426   +          +      0.3571256349717 * Marital_StatusMarried
2408427   +          +    -0.44741267266578 * Marital_StatusSingle
2408428   +          +     0.02948931507994 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + -0.62461434654579 * Education2n_Cycle + 
-0.34090423965869 * EducationBasic + -0.82493401834396 * EducationGraduation + 
-1.09423426649553 * EducationMaster + 1.05435442049802 * Marital_StatusDivorced + 
0.3571256349717 * Marital_StatusMarried + -0.44741267266578 * Marital_StatusSingle + 
0.02948931507994 * Marital_StatusTogether ;
2408429   +   H1x2_6  = H1x2_6  +     0.09620501635178 * Education2n_Cycle
2408430   +          +    -0.54617424401993 * EducationBasic  +    -0.43305038404558 *
2408431   +        EducationGraduation  +     0.05453229059502 * EducationMaster
2408432   +          +     2.06026721980778 * Marital_StatusDivorced
2408433   +          +    -0.49583258645166 * Marital_StatusMarried
2408434   +          +    -1.14824900824474 * Marital_StatusSingle
2408435   +          +     0.57690093967839 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + 0.09620501635178 * Education2n_Cycle + 
-0.54617424401993 * EducationBasic + -0.43305038404558 * EducationGraduation + 
0.05453229059502 * EducationMaster + 2.06026721980778 * Marital_StatusDivorced + 
-0.49583258645166 * Marital_StatusMarried + -1.14824900824474 * Marital_StatusSingle + 
0.57690093967839 * Marital_StatusTogether ;
2408436   +   H1x2_7  = H1x2_7  +    -0.31251046777442 * Education2n_Cycle
2408437   +          +    -1.69272922870259 * EducationBasic  +    -0.08682253496961 *
2408438   +        EducationGraduation  +     0.58241644186309 * EducationMaster
2408439   +          +     -1.1890908607447 * Marital_StatusDivorced
2408440   +          +    -0.46668809907123 * Marital_StatusMarried
2408441   +          +     1.20342564763422 * Marital_StatusSingle
2408442   +          +    -1.75740662969578 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_7 = H1x2_7 + -0.31251046777442 * Education2n_Cycle + 
-1.69272922870259 * EducationBasic + -0.08682253496961 * EducationGraduation + 
0.58241644186309 * EducationMaster + -1.1890908607447 * Marital_StatusDivorced + 
-0.46668809907123 * Marital_StatusMarried + 1.20342564763422 * Marital_StatusSingle + 
-1.75740662969578 * Marital_StatusTogether ;
2408443   +   H1x2_1  =    -0.14973719401763 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.14973719401763 + H1x2_1 ;
2408444   +   H1x2_2  =    -0.56259582407931 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.56259582407931 + H1x2_2 ;
2408445   +   H1x2_3  =     0.42132483186492 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = 0.42132483186492 + H1x2_3 ;
2408446   +   H1x2_4  =      1.1996209421335 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 1.1996209421335 + H1x2_4 ;
2408447   +   H1x2_5  =     0.95827018478011 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 0.95827018478011 + H1x2_5 ;
2408448   +   H1x2_6  =     1.88844492435344 + H1x2_6 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = 1.88844492435344 + H1x2_6 ;
2408449   +   H1x2_7  =     0.77184516675485 + H1x2_7 ;
MPRINT(EM_DIAGRAM):   H1x2_7 = 0.77184516675485 + H1x2_7 ;
2408450   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2408451   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2408452   +   H1x2_1  = EXP(MIN(H1x2_1 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(MIN(H1x2_1 , _EXP_BAR));
2408453   +   H1x2_2  = EXP(MIN(H1x2_2 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(MIN(H1x2_2 , _EXP_BAR));
2408454   +   H1x2_3  = EXP(MIN(H1x2_3 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(MIN(H1x2_3 , _EXP_BAR));
2408455   +   H1x2_4  = EXP(MIN(H1x2_4 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(MIN(H1x2_4 , _EXP_BAR));
2408456   +   H1x2_5  = EXP(MIN(H1x2_5 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(MIN(H1x2_5 , _EXP_BAR));
2408457   +   H1x2_6  = EXP(MIN(H1x2_6 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(MIN(H1x2_6 , _EXP_BAR));
2408458   +   H1x2_7  = EXP(MIN(H1x2_7 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_7 = EXP(MIN(H1x2_7 , _EXP_BAR));
2408459   +END;
MPRINT(EM_DIAGRAM):   END;
2408460   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2408461   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
2408462   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
2408463   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
2408464   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
2408465   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
2408466   +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
2408467   +   H1x2_7  = .;
MPRINT(EM_DIAGRAM):   H1x2_7 = .;
2408468   +END;
MPRINT(EM_DIAGRAM):   END;
2408469   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2408470   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2408471   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2408472   +
2408473   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2408474   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2408475   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2408476   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2408477   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2408478   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2408479   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2408480   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2408481   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2408482   +end;
MPRINT(EM_DIAGRAM):   end;
2408483   +else do;
MPRINT(EM_DIAGRAM):   else do;
2408484   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2408485   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2408486   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2408487   +   end;
MPRINT(EM_DIAGRAM):   end;
2408488   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2408489   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2408490   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2408491   +   end;
MPRINT(EM_DIAGRAM):   end;
2408492   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2408493   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2408494   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2408495   +   end;
MPRINT(EM_DIAGRAM):   end;
2408496   +end;
MPRINT(EM_DIAGRAM):   end;
2408497   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2408498   +   P_DepVar1  =     0.10431866610268 * H1x1_1  +    -0.48100701431081 * H1x1_2
2408499   +          +      1.1561061025832 * H1x1_3  +    -1.23928879501664 * H1x1_4
2408500   +          +     1.22057275321508 * H1x1_5  +     0.21972347471711 * H1x1_6
2408501   +          +    -0.98998788335495 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.10431866610268 * H1x1_1 + -0.48100701431081 * H1x1_2 + 
1.1561061025832 * H1x1_3 + -1.23928879501664 * H1x1_4 + 1.22057275321508 * H1x1_5 + 
0.21972347471711 * H1x1_6 + -0.98998788335495 * H1x1_7 ;
2408502   +   P_DepVar1  = P_DepVar1  + -4.9985478923183E-10 * H1x2_1
2408503   +          +   2.7724573038604E-6 * H1x2_2  +  -3.3263781208921E-6 * H1x2_3
2408504   +          +     1.90169432265E-8 * H1x2_4  +  -9.7460294571708E-9 * H1x2_5
2408505   +          +  -2.0885179583168E-6 * H1x2_6  +    3.038660449943E-8 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 + -4.9985478923183E-10 * H1x2_1 + 
2.7724573038604E-6 * H1x2_2 + -3.3263781208921E-6 * H1x2_3 + 1.90169432265E-8 * H1x2_4 + 
-9.7460294571708E-9 * H1x2_5 + -2.0885179583168E-6 * H1x2_6 + 3.038660449943E-8 * H1x2_7 ;
2408506   +   P_DepVar1  =    -2.34500119066237 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.34500119066237 + P_DepVar1 ;
2408507   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2408508   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2408509   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2408510   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2408511   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2408512   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2408513   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2408514   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2408515   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2408516   +END;
MPRINT(EM_DIAGRAM):   END;
2408517   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2408518   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2408519   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2408520   +END;
MPRINT(EM_DIAGRAM):   END;
2408521   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2408522   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2408523   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2408524   +END;
MPRINT(EM_DIAGRAM):   END;
2408525   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2408526   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2408527   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2408528   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2408529   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2408530   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2408531   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2408532   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2408533   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2408534   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2408535   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2408536   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2408537   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2408538   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2408539   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2408540   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2408541   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2408542   +END;
MPRINT(EM_DIAGRAM):   END;
2408543   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2408544   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2408545   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2408546   +drop
2408547   +H1x1_1
2408548   +H1x1_2
2408549   +H1x1_3
2408550   +H1x1_4
2408551   +H1x1_5
2408552   +H1x1_6
2408553   +H1x1_7
2408554   +H1x2_1
2408555   +H1x2_2
2408556   +H1x2_3
2408557   +H1x2_4
2408558   +H1x2_5
2408559   +H1x2_6
2408560   +H1x2_7
2408561   +;
MPRINT(EM_DIAGRAM):   drop H1x1_1 H1x1_2 H1x1_3 H1x1_4 H1x1_5 H1x1_6 H1x1_7 H1x2_1 H1x2_2 
H1x2_3 H1x2_4 H1x2_5 H1x2_6 H1x2_7 ;
2408562   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2408563   +* Renaming variables for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural12;
2408564   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2408565   +* Renaming Posterior variables for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural12;
2408566   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2408567   +drop AutoNeural12_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_P_DepVar1;
2408568   +AutoNeural12_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural12_P_DepVar1 = P_DepVar1;
2408569   +drop AutoNeural12_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_P_DepVar0;
2408570   +AutoNeural12_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural12_P_DepVar0 = P_DepVar0;
2408571   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2408572   +* Renaming Into variables for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for AutoNeural12;
2408573   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2408574   +length AutoNeural12_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length AutoNeural12_I_DepVar $32;
2408575   +drop AutoNeural12_I_DepVar;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_I_DepVar;
2408576   +AutoNeural12_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   AutoNeural12_I_DepVar = I_DepVar;
2408577   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2408578   +* Renaming _WARN_ variable for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural12;
2408579   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2408580   +length AutoNeural12_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural12_WARN_ $4;
2408581   +drop AutoNeural12_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_WARN_;
2408582   +AutoNeural12_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural12_WARN_ = _WARN_;
2408583   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2408584   +* Ensmbl44: Voting to produce predicted target;
MPRINT(EM_DIAGRAM):   * Ensmbl44: Voting to produce predicted target;
2408585   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2408586   +array Ensmbl44_post{2} _temporary_;
MPRINT(EM_DIAGRAM):   array Ensmbl44_post{2} _temporary_;
2408587   +array Ensmbl44_count{2} _temporary_;
MPRINT(EM_DIAGRAM):   array Ensmbl44_count{2} _temporary_;
2408588   +array Ensmbl44_level{2} $32 _temporary_ (
2408589   +"1"
2408590   +"0"
2408591   +);
MPRINT(EM_DIAGRAM):   array Ensmbl44_level{2} $32 _temporary_ ( "1" "0" );
2408592   +do i=1 to 2;
MPRINT(EM_DIAGRAM):   do i=1 to 2;
2408593   +Ensmbl44_post{i} = 0;
MPRINT(EM_DIAGRAM):   Ensmbl44_post{i} = 0;
2408594   +Ensmbl44_count{i} = 0;
MPRINT(EM_DIAGRAM):   Ensmbl44_count{i} = 0;
2408595   +end;
MPRINT(EM_DIAGRAM):   end;
2408596   +if AutoNeural9_I_DepVar = Ensmbl44_level{1} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural9_I_DepVar = Ensmbl44_level{1} then do;
2408597   +Ensmbl44_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl44_count{1} + 1;
2408598   +Ensmbl44_post{1}=Ensmbl44_post{1}+ AutoNeural9_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl44_post{1}=Ensmbl44_post{1}+ AutoNeural9_P_DepVar1;
2408599   +end;
MPRINT(EM_DIAGRAM):   end;
2408600   +if AutoNeural11_I_DepVar = Ensmbl44_level{1} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural11_I_DepVar = Ensmbl44_level{1} then do;
2408601   +Ensmbl44_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl44_count{1} + 1;
2408602   +Ensmbl44_post{1}=Ensmbl44_post{1}+ AutoNeural11_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl44_post{1}=Ensmbl44_post{1}+ AutoNeural11_P_DepVar1;
2408603   +end;
MPRINT(EM_DIAGRAM):   end;
2408604   +if AutoNeural12_I_DepVar = Ensmbl44_level{1} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural12_I_DepVar = Ensmbl44_level{1} then do;
2408605   +Ensmbl44_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl44_count{1} + 1;
2408606   +Ensmbl44_post{1}=Ensmbl44_post{1}+ AutoNeural12_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl44_post{1}=Ensmbl44_post{1}+ AutoNeural12_P_DepVar1;
2408607   +end;
MPRINT(EM_DIAGRAM):   end;
2408608   +if AutoNeural9_I_DepVar = Ensmbl44_level{2} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural9_I_DepVar = Ensmbl44_level{2} then do;
2408609   +Ensmbl44_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl44_count{2} + 1;
2408610   +Ensmbl44_post{2}=Ensmbl44_post{2}+ AutoNeural9_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl44_post{2}=Ensmbl44_post{2}+ AutoNeural9_P_DepVar0;
2408611   +end;
MPRINT(EM_DIAGRAM):   end;
2408612   +if AutoNeural11_I_DepVar = Ensmbl44_level{2} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural11_I_DepVar = Ensmbl44_level{2} then do;
2408613   +Ensmbl44_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl44_count{2} + 1;
2408614   +Ensmbl44_post{2}=Ensmbl44_post{2}+ AutoNeural11_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl44_post{2}=Ensmbl44_post{2}+ AutoNeural11_P_DepVar0;
2408615   +end;
MPRINT(EM_DIAGRAM):   end;
2408616   +if AutoNeural12_I_DepVar = Ensmbl44_level{2} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural12_I_DepVar = Ensmbl44_level{2} then do;
2408617   +Ensmbl44_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl44_count{2} + 1;
2408618   +Ensmbl44_post{2}=Ensmbl44_post{2}+ AutoNeural12_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl44_post{2}=Ensmbl44_post{2}+ AutoNeural12_P_DepVar0;
2408619   +end;
MPRINT(EM_DIAGRAM):   end;
2408620   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2408621   +* Ensmbl44: Determine Into Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl44: Determine Into Variable;
2408622   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2408623   +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set. 
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the 
         length of a character variable.
2408624   +drop i vote_count vote_post;
MPRINT(EM_DIAGRAM):   drop i vote_count vote_post;
2408625   +vote_count = max(
2408626   +Ensmbl44_count{1} ,
2408627   +Ensmbl44_count{2}
2408628   +);
MPRINT(EM_DIAGRAM):   vote_count = max( Ensmbl44_count{1} , Ensmbl44_count{2} );
2408629   +do i=1 to 2;
MPRINT(EM_DIAGRAM):   do i=1 to 2;
2408630   +if Ensmbl44_count{i}=vote_count and Ensmbl44_post{i}>vote_post then do;
MPRINT(EM_DIAGRAM):   if Ensmbl44_count{i}=vote_count and Ensmbl44_post{i}>vote_post then do;
2408631   +I_DepVar = Ensmbl44_level{i};
MPRINT(EM_DIAGRAM):   I_DepVar = Ensmbl44_level{i};
2408632   +vote_post = Ensmbl44_count{i};
MPRINT(EM_DIAGRAM):   vote_post = Ensmbl44_count{i};
2408633   +end;
MPRINT(EM_DIAGRAM):   end;
2408634   +end;
MPRINT(EM_DIAGRAM):   end;
2408635   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2408636   +* Ensmbl44: Compute posterior vars using models predicting the chosen level;
MPRINT(EM_DIAGRAM):   * Ensmbl44: Compute posterior vars using models predicting the chosen 
level;
2408637   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2408638   +P_DepVar1 = 0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0;
2408639   +P_DepVar0 = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2408640   +if I_DepVar = AutoNeural9_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = AutoNeural9_I_DepVar then do;
2408641   +P_DEPVAR1 = P_DEPVAR1 + AutoNeural9_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + AutoNeural9_P_DepVar1;
2408642   +P_DEPVAR0 = P_DEPVAR0 + AutoNeural9_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + AutoNeural9_P_DepVar0;
2408643   +end;
MPRINT(EM_DIAGRAM):   end;
2408644   +if I_DepVar = AutoNeural11_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = AutoNeural11_I_DepVar then do;
2408645   +P_DEPVAR1 = P_DEPVAR1 + AutoNeural11_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + AutoNeural11_P_DepVar1;
2408646   +P_DEPVAR0 = P_DEPVAR0 + AutoNeural11_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + AutoNeural11_P_DepVar0;
2408647   +end;
MPRINT(EM_DIAGRAM):   end;
2408648   +if I_DepVar = AutoNeural12_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = AutoNeural12_I_DepVar then do;
2408649   +P_DEPVAR1 = P_DEPVAR1 + AutoNeural12_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + AutoNeural12_P_DepVar1;
2408650   +P_DEPVAR0 = P_DEPVAR0 + AutoNeural12_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + AutoNeural12_P_DepVar0;
2408651   +end;
MPRINT(EM_DIAGRAM):   end;
2408652   +* Ensmbl44: Averaging posterior;
MPRINT(EM_DIAGRAM):   * Ensmbl44: Averaging posterior;
2408653   +P_DepVar1 = P_DepVar1/vote_count;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1/vote_count;
2408654   +P_DepVar0 = P_DepVar0/vote_count;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0/vote_count;
2408655   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2408656   +* Ensmbl44: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   * Ensmbl44: Producing Unformatted variable;
2408657   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2408658   +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
2408659   +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
2408660   +else
2408661   +if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
2408662   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2408663   +* Ensmbl44: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl44: Computing _WARN_ Variable;
2408664   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2408665   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
2408666   +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
2408667   +_WARN_ = '';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
2408668   +if index(AUTONEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
2408668  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
2408669   +if index(AUTONEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
2408669  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
2408670   +if index(AUTONEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
2408670  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
2408671   +if index(AUTONEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
2408671  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
2408672   +if index(AUTONEURAL11_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
2408672  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
2408673   +if index(AUTONEURAL11_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
2408673  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
2408674   +if index(AUTONEURAL11_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
2408674  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
2408675   +if index(AUTONEURAL11_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
2408675  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
2408676   +if index(AUTONEURAL12_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
2408676  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
2408677   +if index(AUTONEURAL12_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
2408677  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
2408678   +if index(AUTONEURAL12_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
2408678  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
2408679   +if index(AUTONEURAL12_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
2408679  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
2408680   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2408681   +* Ensmbl44: Computing Residual Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl44: Computing Residual Vars;
2408682   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2408683   +if
2408684   +F_DepVar NE '1'
2408685   +AND F_DepVar NE '0'
2408686   +then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE '1' AND F_DepVar NE '0' then do;
2408687   +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
2408688   +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
2408689   +end;
MPRINT(EM_DIAGRAM):   end;
2408690   +else do;
MPRINT(EM_DIAGRAM):   else do;
2408691   +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
2408692   +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
2408693   +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
2408694   +WHEN('1') R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN('1') R_DepVar1 = R_DepVar1 +1;
2408695   +WHEN('0') R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN('0') R_DepVar0 = R_DepVar0 +1;
2408696   +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
2408697   +END;
MPRINT(EM_DIAGRAM):   END;
2408698   +END;
MPRINT(EM_DIAGRAM):   END;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2408699    run;

NOTE: DATA STEP view saved on file EMWS8.ENSMBL44_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.AUTONEURAL9_TRAIN.VIEW used (Total process time):
      real time           0.12 seconds
      cpu time            0.12 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.13 seconds
      cpu time            0.14 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2408700    quit;
2408701    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
2408702    filename emflow
2408702  ! "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl44\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl44\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl44: Scoring AUTONEURAL9_VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2408703    *------------------------------------------------------------*;
2408704    * Ensmbl44: Scoring AUTONEURAL9_VALIDATE data;
2408705    *------------------------------------------------------------*;
2408706    data EMWS8.Ensmbl44_VALIDATE
2408707    / view=EMWS8.Ensmbl44_VALIDATE
2408708    ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl44_VALIDATE / view=EMWS8.Ensmbl44_VALIDATE ;
2408709    set EMWS8.AutoNeural9_VALIDATE
2408710    ;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural9_VALIDATE ;
2408711    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl44\EMFLOWSCORE.sas.
2408712   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2408713   +* Ensmbl44: Combine model for DepVar;
MPRINT(EM_DIAGRAM):   * Ensmbl44: Combine model for DepVar;
2408714   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2408715   +* Ensmbl44: Scoring Code of model 1 of 3;
MPRINT(EM_DIAGRAM):   * Ensmbl44: Scoring Code of model 1 of 3;
2408716   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2408717   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2408718   +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
2408719   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
2408720   +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
2408721   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2408722   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2408723   +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
2408724   +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
2408725   +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
2408726   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2408727   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2408728   +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
2408729   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
2408730   +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
2408731   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2408732   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2408733   +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
2408734   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
2408735   +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
2408736   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2408737   +
2408738   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
2408739   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
2408739  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
2408740   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
2408741   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
2408742   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
2408743   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
2408744   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
2408745   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2408746   +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
2408747   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
2408748   +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
2408749   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2408750   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2408751   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
2408752   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2408753   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
2408754   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
2408755   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
2408756   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2408757   +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
2408758   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
2408759   +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
2408760   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2408761   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2408762   +* TOOL: Metadata Node;
MPRINT(EM_DIAGRAM):   * TOOL: Metadata Node;
2408763   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
2408764   +* NODE: Meta;
MPRINT(EM_DIAGRAM):   * NODE: Meta;
2408765   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2408766   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2408767   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
2408768   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2408769   +* NODE: AutoNeural9;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural9;
2408770   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2408771   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2408772   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2408773   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2408774   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2408775   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2408776   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2408777   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2408778   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2408779   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2408780   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2408781   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2408782   +LENGTH _WARN_ $4
2408783   +      F_DepVar  $ 12
2408784   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2408785   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2408786   +
2408787   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2408788   +
2408789   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2408790   +
2408791   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2408792   +
2408793   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2408794   +
2408795   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2408796   +
2408797   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2408798   +
2408799   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2408800   +
2408801   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2408802   +
2408803   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2408804   +
2408805   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2408806   +
2408807   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2408808   +
2408809   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2408810   +
2408811   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2408812   +
2408813   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2408814   +
2408815   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2408816   +
2408817   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2408818   +
2408819   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2408820   +
2408821   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2408822   +
2408823   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2408824   +
2408825   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2408826   +
2408827   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2408828   +
2408829   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2408830   +
2408831   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2408832   +
2408833   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2408834   +
2408835   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2408836   +
2408837   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2408838   +
2408839   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2408840   +
2408841   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2408842   +
2408843   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2408844   +
2408845   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2408846   +
2408847   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2408848   +
2408849   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2408850   +
2408851   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2408852   +
2408853   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2408854   +
2408855   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2408856   +
2408857   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2408858   +
2408859   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2408860   +
2408861   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2408862   +
2408863   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2408864   +
2408865   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2408866   +
2408867   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2408868   +
2408869   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2408870   +
2408871   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2408872   +
2408873   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2408874   +
2408875   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2408876   +
2408877   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2408878   +
2408879   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2408880   +
2408881   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2408882   +
2408883   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2408884   +
2408885   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2408886   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2408887   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2408888   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2408889   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2408890   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2408891   +end;
MPRINT(EM_DIAGRAM):   end;
2408892   +else do;
MPRINT(EM_DIAGRAM):   else do;
2408893   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2408894   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2408895   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2408896   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2408897   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2408898   +   end;
MPRINT(EM_DIAGRAM):   end;
2408899   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2408900   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2408901   +   end;
MPRINT(EM_DIAGRAM):   end;
2408902   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2408903   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2408904   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2408905   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2408906   +   end;
MPRINT(EM_DIAGRAM):   end;
2408907   +end;
MPRINT(EM_DIAGRAM):   end;
2408908   +
2408909   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2408910   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2408911   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2408912   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2408913   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2408914   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2408915   +end;
MPRINT(EM_DIAGRAM):   end;
2408916   +else do;
MPRINT(EM_DIAGRAM):   else do;
2408917   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2408918   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2408919   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2408920   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2408921   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2408922   +   end;
MPRINT(EM_DIAGRAM):   end;
2408923   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2408924   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2408925   +   end;
MPRINT(EM_DIAGRAM):   end;
2408926   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2408927   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2408928   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2408929   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2408930   +   end;
MPRINT(EM_DIAGRAM):   end;
2408931   +end;
MPRINT(EM_DIAGRAM):   end;
2408932   +
2408933   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2408934   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2408935   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2408936   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2408937   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2408938   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2408939   +end;
MPRINT(EM_DIAGRAM):   end;
2408940   +else do;
MPRINT(EM_DIAGRAM):   else do;
2408941   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2408942   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2408943   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2408944   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2408945   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2408946   +   end;
MPRINT(EM_DIAGRAM):   end;
2408947   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2408948   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2408949   +   end;
MPRINT(EM_DIAGRAM):   end;
2408950   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2408951   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2408952   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2408953   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2408954   +   end;
MPRINT(EM_DIAGRAM):   end;
2408955   +end;
MPRINT(EM_DIAGRAM):   end;
2408956   +
2408957   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2408958   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2408959   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2408960   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2408961   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2408962   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2408963   +end;
MPRINT(EM_DIAGRAM):   end;
2408964   +else do;
MPRINT(EM_DIAGRAM):   else do;
2408965   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2408966   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2408967   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2408968   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2408969   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2408970   +   end;
MPRINT(EM_DIAGRAM):   end;
2408971   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2408972   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2408973   +   end;
MPRINT(EM_DIAGRAM):   end;
2408974   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2408975   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2408976   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2408977   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2408978   +   end;
MPRINT(EM_DIAGRAM):   end;
2408979   +end;
MPRINT(EM_DIAGRAM):   end;
2408980   +
2408981   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2408982   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2408983   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2408984   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2408985   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2408986   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2408987   +end;
MPRINT(EM_DIAGRAM):   end;
2408988   +else do;
MPRINT(EM_DIAGRAM):   else do;
2408989   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2408990   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2408991   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2408992   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2408993   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2408994   +   end;
MPRINT(EM_DIAGRAM):   end;
2408995   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2408996   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2408997   +   end;
MPRINT(EM_DIAGRAM):   end;
2408998   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2408999   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2409000   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2409001   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2409002   +   end;
MPRINT(EM_DIAGRAM):   end;
2409003   +end;
MPRINT(EM_DIAGRAM):   end;
2409004   +
2409005   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2409006   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2409007   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2409008   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2409009   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2409010   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2409011   +end;
MPRINT(EM_DIAGRAM):   end;
2409012   +else do;
MPRINT(EM_DIAGRAM):   else do;
2409013   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2409014   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2409015   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2409016   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2409017   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2409018   +   end;
MPRINT(EM_DIAGRAM):   end;
2409019   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2409020   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2409021   +   end;
MPRINT(EM_DIAGRAM):   end;
2409022   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2409023   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2409024   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2409025   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2409026   +   end;
MPRINT(EM_DIAGRAM):   end;
2409027   +end;
MPRINT(EM_DIAGRAM):   end;
2409028   +
2409029   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2409030   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2409031   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2409032   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2409033   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2409034   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2409035   +end;
MPRINT(EM_DIAGRAM):   end;
2409036   +else do;
MPRINT(EM_DIAGRAM):   else do;
2409037   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2409038   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2409039   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2409040   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2409041   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2409042   +   end;
MPRINT(EM_DIAGRAM):   end;
2409043   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2409044   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2409045   +   end;
MPRINT(EM_DIAGRAM):   end;
2409046   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2409047   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2409048   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2409049   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2409050   +   end;
MPRINT(EM_DIAGRAM):   end;
2409051   +end;
MPRINT(EM_DIAGRAM):   end;
2409052   +
2409053   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2409054   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
2409055   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2409056   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2409057   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2409058   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2409059   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2409060   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2409061   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2409062   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2409063   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2409064   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2409065   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2409066   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2409067   +end;
MPRINT(EM_DIAGRAM):   end;
2409068   +else do;
MPRINT(EM_DIAGRAM):   else do;
2409069   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2409070   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2409071   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2409072   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2409073   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2409074   +   end;
MPRINT(EM_DIAGRAM):   end;
2409075   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2409076   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2409077   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2409078   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2409079   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2409080   +   end;
MPRINT(EM_DIAGRAM):   end;
2409081   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2409082   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2409083   +   end;
MPRINT(EM_DIAGRAM):   end;
2409084   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2409085   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2409086   +   end;
MPRINT(EM_DIAGRAM):   end;
2409087   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2409088   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2409089   +   end;
MPRINT(EM_DIAGRAM):   end;
2409090   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2409091   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2409092   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2409093   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2409094   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2409095   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2409096   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2409097   +   end;
MPRINT(EM_DIAGRAM):   end;
2409098   +end;
MPRINT(EM_DIAGRAM):   end;
2409099   +
2409100   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2409101   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2409102   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
2409103   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2409104   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2409105   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2409106   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2409107   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2409108   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2409109   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2409110   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2409111   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2409112   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2409113   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2409114   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2409115   +end;
MPRINT(EM_DIAGRAM):   end;
2409116   +else do;
MPRINT(EM_DIAGRAM):   else do;
2409117   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2409118   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2409119   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2409120   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2409121   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2409122   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2409123   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2409124   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2409125   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2409126   +         end;
MPRINT(EM_DIAGRAM):   end;
2409127   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2409128   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2409129   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2409130   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2409131   +            end;
MPRINT(EM_DIAGRAM):   end;
2409132   +         end;
MPRINT(EM_DIAGRAM):   end;
2409133   +      end;
MPRINT(EM_DIAGRAM):   end;
2409134   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2409135   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2409136   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2409137   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2409138   +         end;
MPRINT(EM_DIAGRAM):   end;
2409139   +      end;
MPRINT(EM_DIAGRAM):   end;
2409140   +   end;
MPRINT(EM_DIAGRAM):   end;
2409141   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2409142   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2409143   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2409144   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2409145   +      end;
MPRINT(EM_DIAGRAM):   end;
2409146   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2409147   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2409148   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2409149   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2409150   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2409151   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2409152   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2409153   +         end;
MPRINT(EM_DIAGRAM):   end;
2409154   +      end;
MPRINT(EM_DIAGRAM):   end;
2409155   +   end;
MPRINT(EM_DIAGRAM):   end;
2409156   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2409157   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2409158   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2409159   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2409160   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2409161   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2409162   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2409163   +   end;
MPRINT(EM_DIAGRAM):   end;
2409164   +end;
MPRINT(EM_DIAGRAM):   end;
2409165   +
2409166   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2409167   +*** Checking missing input Interval
2409168   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2409169   +
2409170   +IF NMISS(
2409171   +   AcceptedCmpTotal ,
2409172   +   Age ,
2409173   +   Frq ,
2409174   +   Income ,
2409175   +   Kidhome ,
2409176   +   Mnt ,
2409177   +   MntFishProducts ,
2409178   +   MntFruits ,
2409179   +   MntGoldProds ,
2409180   +   MntMeatProducts ,
2409181   +   MntSweetProducts ,
2409182   +   MntWines ,
2409183   +   MonthsAsCustomer ,
2409184   +   NumCatalogPurchases ,
2409185   +   NumDealsPurchases ,
2409186   +   NumDistPurchases ,
2409187   +   NumStorePurchases ,
2409188   +   NumWebPurchases ,
2409189   +   NumWebVisitsMonth ,
2409190   +   RFMstat ,
2409191   +   RMntFrq ,
2409192   +   Recency ,
2409193   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
2409194   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2409195   +
2409196   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2409197   +END;
MPRINT(EM_DIAGRAM):   END;
2409198   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2409199   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2409200   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2409201   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2409202   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2409203   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2409204   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2409205   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2409206   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2409207   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2409208   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2409209   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2409210   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2409211   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2409212   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2409213   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2409214   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2409215   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2409216   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2409217   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2409218   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2409219   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2409220   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
2409221   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2409222   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2409223   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2409224   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2409225   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2409226   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2409227   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2409228   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2409229   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2409230   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2409231   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2409232   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2409233   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2409234   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2409235   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2409236   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2409237   +END;
MPRINT(EM_DIAGRAM):   END;
2409238   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2409239   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2409240   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2409241   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2409242   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2409243   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2409244   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2409245   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2409246   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2409247   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2409248   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2409249   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2409250   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2409251   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2409252   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2409253   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2409254   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2409255   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2409256   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2409257   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2409258   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2409259   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2409260   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
2409261   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2409262   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2409263   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2409264   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2409265   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2409266   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2409267   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2409268   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2409269   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2409270   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2409271   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
2409272   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2409273   +   ELSE S_NumCatalogPurchases
2409274   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2409275   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2409276   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2409277   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2409278   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2409279   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2409280   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2409281   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2409282   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2409283   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2409284   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2409285   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2409286   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2409287   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2409288   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2409289   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2409290   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2409291   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2409292   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2409293   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2409294   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2409295   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2409296   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2409297   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2409298   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2409299   +END;
MPRINT(EM_DIAGRAM):   END;
2409300   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2409301   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2409302   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2409303   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2409304   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2409305   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2409306   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2409307   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2409308   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2409309   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2409310   +   H1x1_1  =     -0.7790327388408 * S_AcceptedCmpTotal
2409311   +          +     0.32193739579856 * S_Age  +    -0.43875684835169 * S_Frq
2409312   +          +     0.13013240455049 * S_Income  +    -0.74127716462976 *
2409313   +        S_Kidhome  +    -0.86416600561474 * S_Mnt  +     0.94819226754442 *
2409314   +        S_MntFishProducts  +     0.15895119408799 * S_MntFruits
2409315   +          +     0.03658391935071 * S_MntGoldProds  +    -3.75052142292398 *
2409316   +        S_MntMeatProducts  +    -0.22192220883538 * S_MntSweetProducts
2409317   +          +     0.80534656860633 * S_MntWines  +     0.16144794241259 *
2409318   +        S_MonthsAsCustomer  +    -1.53040364803625 * S_NumCatalogPurchases
2409319   +          +    -1.09856598010056 * S_NumDealsPurchases
2409320   +          +    -0.10571850472514 * S_NumDistPurchases
2409321   +          +     0.11898210654227 * S_NumStorePurchases
2409322   +          +      0.5984912060231 * S_NumWebPurchases
2409323   +          +     0.78592531126942 * S_NumWebVisitsMonth
2409324   +          +    -0.50004686386273 * S_RFMstat  +     0.40804018151571 *
2409325   +        S_RMntFrq  +    -0.94753260620308 * S_Recency
2409326   +          +    -0.49604118088328 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.7790327388408 * S_AcceptedCmpTotal + 0.32193739579856 * 
S_Age + -0.43875684835169 * S_Frq + 0.13013240455049 * S_Income + -0.74127716462976 * 
S_Kidhome + -0.86416600561474 * S_Mnt + 0.94819226754442 * S_MntFishProducts + 
0.15895119408799 * S_MntFruits + 0.03658391935071 * S_MntGoldProds + -3.75052142292398 * 
S_MntMeatProducts + -0.22192220883538 * S_MntSweetProducts + 0.80534656860633 * S_MntWines + 
0.16144794241259 * S_MonthsAsCustomer + -1.53040364803625 * S_NumCatalogPurchases + 
-1.09856598010056 * S_NumDealsPurchases + -0.10571850472514 * S_NumDistPurchases + 
0.11898210654227 * S_NumStorePurchases + 0.5984912060231 * S_NumWebPurchases + 
0.78592531126942 * S_NumWebVisitsMonth + -0.50004686386273 * S_RFMstat + 0.40804018151571 * 
S_RMntFrq + -0.94753260620308 * S_Recency + -0.49604118088328 * S_Teenhome ;
2409327   +   H1x1_2  =    -0.22226926295489 * S_AcceptedCmpTotal
2409328   +          +     0.08523894206962 * S_Age  +    -0.13010378102207 * S_Frq
2409329   +          +    -0.61810906923536 * S_Income  +     0.26583917928045 *
2409330   +        S_Kidhome  +     0.57213479787981 * S_Mnt  +    -0.58077613046442 *
2409331   +        S_MntFishProducts  +      0.1530301493776 * S_MntFruits
2409332   +          +      0.4586167382631 * S_MntGoldProds  +     1.40179051129147 *
2409333   +        S_MntMeatProducts  +      0.0231413770297 * S_MntSweetProducts
2409334   +          +    -0.08483682112771 * S_MntWines  +     0.22891006905064 *
2409335   +        S_MonthsAsCustomer  +    -1.21866617917435 * S_NumCatalogPurchases
2409336   +          +    -0.84042044250624 * S_NumDealsPurchases
2409337   +          +    -0.10246261015488 * S_NumDistPurchases
2409338   +          +     0.06886149708824 * S_NumStorePurchases
2409339   +          +     0.63156910388199 * S_NumWebPurchases
2409340   +          +    -1.33032061845311 * S_NumWebVisitsMonth
2409341   +          +     0.51240040684649 * S_RFMstat  +     0.77604047421115 *
2409342   +        S_RMntFrq  +     1.27964260226958 * S_Recency
2409343   +          +     0.12022076571016 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.22226926295489 * S_AcceptedCmpTotal + 0.08523894206962 * 
S_Age + -0.13010378102207 * S_Frq + -0.61810906923536 * S_Income + 0.26583917928045 * 
S_Kidhome + 0.57213479787981 * S_Mnt + -0.58077613046442 * S_MntFishProducts + 0.1530301493776 
* S_MntFruits + 0.4586167382631 * S_MntGoldProds + 1.40179051129147 * S_MntMeatProducts + 
0.0231413770297 * S_MntSweetProducts + -0.08483682112771 * S_MntWines + 0.22891006905064 * 
S_MonthsAsCustomer + -1.21866617917435 * S_NumCatalogPurchases + -0.84042044250624 * 
S_NumDealsPurchases + -0.10246261015488 * S_NumDistPurchases + 0.06886149708824 * 
S_NumStorePurchases + 0.63156910388199 * S_NumWebPurchases + -1.33032061845311 * 
S_NumWebVisitsMonth + 0.51240040684649 * S_RFMstat + 0.77604047421115 * S_RMntFrq + 
1.27964260226958 * S_Recency + 0.12022076571016 * S_Teenhome ;
2409344   +   H1x1_3  =     1.19879097976404 * S_AcceptedCmpTotal
2409345   +          +     0.14973951999399 * S_Age  +    -0.90630756390399 * S_Frq
2409346   +          +     0.64934241358682 * S_Income  +    -0.66249532206724 *
2409347   +        S_Kidhome  +     0.54195490560813 * S_Mnt  +    -0.58497380565417 *
2409348   +        S_MntFishProducts  +     0.12409202833851 * S_MntFruits
2409349   +          +     0.44480061346561 * S_MntGoldProds  +     3.27513201048136 *
2409350   +        S_MntMeatProducts  +     -0.1256493054184 * S_MntSweetProducts
2409351   +          +    -0.56080685022301 * S_MntWines  +     0.08633469383177 *
2409352   +        S_MonthsAsCustomer  +     0.45482673505107 * S_NumCatalogPurchases
2409353   +          +     0.45393712455366 * S_NumDealsPurchases
2409354   +          +    -0.25292198053552 * S_NumDistPurchases
2409355   +          +    -1.35582215064749 * S_NumStorePurchases
2409356   +          +    -0.83132202302639 * S_NumWebPurchases
2409357   +          +     1.87116225272678 * S_NumWebVisitsMonth
2409358   +          +     0.39564162951481 * S_RFMstat  +    -1.08810221295144 *
2409359   +        S_RMntFrq  +    -2.07407859514648 * S_Recency
2409360   +          +     -0.6849099475723 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.19879097976404 * S_AcceptedCmpTotal + 0.14973951999399 * 
S_Age + -0.90630756390399 * S_Frq + 0.64934241358682 * S_Income + -0.66249532206724 * 
S_Kidhome + 0.54195490560813 * S_Mnt + -0.58497380565417 * S_MntFishProducts + 
0.12409202833851 * S_MntFruits + 0.44480061346561 * S_MntGoldProds + 3.27513201048136 * 
S_MntMeatProducts + -0.1256493054184 * S_MntSweetProducts + -0.56080685022301 * S_MntWines + 
0.08633469383177 * S_MonthsAsCustomer + 0.45482673505107 * S_NumCatalogPurchases + 
0.45393712455366 * S_NumDealsPurchases + -0.25292198053552 * S_NumDistPurchases + 
-1.35582215064749 * S_NumStorePurchases + -0.83132202302639 * S_NumWebPurchases + 
1.87116225272678 * S_NumWebVisitsMonth + 0.39564162951481 * S_RFMstat + -1.08810221295144 * 
S_RMntFrq + -2.07407859514648 * S_Recency + -0.6849099475723 * S_Teenhome ;
2409361   +   H1x1_1  = H1x1_1  +     0.81075414854045 * AcceptedCmp10
2409362   +          +    -0.33403710427327 * AcceptedCmp20  +    -0.62242387435975 *
2409363   +        AcceptedCmp30  +    -0.89439410552439 * AcceptedCmp40
2409364   +          +     0.77335976756467 * AcceptedCmp50  +    -0.08825784612626 *
2409365   +        Complain0  +      0.3404395194267 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.81075414854045 * AcceptedCmp10 + -0.33403710427327 * 
AcceptedCmp20 + -0.62242387435975 * AcceptedCmp30 + -0.89439410552439 * AcceptedCmp40 + 
0.77335976756467 * AcceptedCmp50 + -0.08825784612626 * Complain0 + 0.3404395194267 * 
HigherEducationBinary0 ;
2409366   +   H1x1_2  = H1x1_2  +    -0.16741179709566 * AcceptedCmp10
2409367   +          +    -0.53751033948061 * AcceptedCmp20  +     0.80285496945068 *
2409368   +        AcceptedCmp30  +     0.39379279966091 * AcceptedCmp40
2409369   +          +    -1.40366799083237 * AcceptedCmp50  +     -0.4265482924132 *
2409370   +        Complain0  +     0.37272103593422 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.16741179709566 * AcceptedCmp10 + -0.53751033948061 
* AcceptedCmp20 + 0.80285496945068 * AcceptedCmp30 + 0.39379279966091 * AcceptedCmp40 + 
-1.40366799083237 * AcceptedCmp50 + -0.4265482924132 * Complain0 + 0.37272103593422 * 
HigherEducationBinary0 ;
2409371   +   H1x1_3  = H1x1_3  +    -0.19417657656326 * AcceptedCmp10
2409372   +          +    -0.06547746897317 * AcceptedCmp20  +     0.21980739904513 *
2409373   +        AcceptedCmp30  +    -0.19452210052301 * AcceptedCmp40
2409374   +          +    -2.02403282278574 * AcceptedCmp50  +    -0.18250261144524 *
2409375   +        Complain0  +     0.34168103813312 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.19417657656326 * AcceptedCmp10 + -0.06547746897317 
* AcceptedCmp20 + 0.21980739904513 * AcceptedCmp30 + -0.19452210052301 * AcceptedCmp40 + 
-2.02403282278574 * AcceptedCmp50 + -0.18250261144524 * Complain0 + 0.34168103813312 * 
HigherEducationBinary0 ;
2409376   +   H1x1_1  = H1x1_1  +    -0.03956789621002 * Education2n_Cycle
2409377   +          +    -0.38372374638888 * EducationBasic  +     -0.4178927802606 *
2409378   +        EducationGraduation  +    -0.61278625923288 * EducationMaster
2409379   +          +      0.4695898100094 * Marital_StatusDivorced
2409380   +          +    -0.52137742289262 * Marital_StatusMarried
2409381   +          +    -0.32382086914936 * Marital_StatusSingle
2409382   +          +    -0.66163012672344 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.03956789621002 * Education2n_Cycle + 
-0.38372374638888 * EducationBasic + -0.4178927802606 * EducationGraduation + 
-0.61278625923288 * EducationMaster + 0.4695898100094 * Marital_StatusDivorced + 
-0.52137742289262 * Marital_StatusMarried + -0.32382086914936 * Marital_StatusSingle + 
-0.66163012672344 * Marital_StatusTogether ;
2409383   +   H1x1_2  = H1x1_2  +    -0.25832319223886 * Education2n_Cycle
2409384   +          +     0.05602860720141 * EducationBasic  +    -0.86282852488383 *
2409385   +        EducationGraduation  +     0.18916317018059 * EducationMaster
2409386   +          +    -1.04858218653238 * Marital_StatusDivorced
2409387   +          +     2.41098335093061 * Marital_StatusMarried
2409388   +          +    -1.94696044861334 * Marital_StatusSingle
2409389   +          +     2.16021514856437 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.25832319223886 * Education2n_Cycle + 
0.05602860720141 * EducationBasic + -0.86282852488383 * EducationGraduation + 0.18916317018059 
* EducationMaster + -1.04858218653238 * Marital_StatusDivorced + 2.41098335093061 * 
Marital_StatusMarried + -1.94696044861334 * Marital_StatusSingle + 2.16021514856437 * 
Marital_StatusTogether ;
2409390   +   H1x1_3  = H1x1_3  +    -0.05351872242069 * Education2n_Cycle
2409391   +          +    -0.56850783552841 * EducationBasic  +    -0.14880907057098 *
2409392   +        EducationGraduation  +    -0.32850851013319 * EducationMaster
2409393   +          +     0.42964114177062 * Marital_StatusDivorced
2409394   +          +    -0.38607635605816 * Marital_StatusMarried
2409395   +          +    -0.02157405407852 * Marital_StatusSingle
2409396   +          +    -0.59995619744527 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.05351872242069 * Education2n_Cycle + 
-0.56850783552841 * EducationBasic + -0.14880907057098 * EducationGraduation + 
-0.32850851013319 * EducationMaster + 0.42964114177062 * Marital_StatusDivorced + 
-0.38607635605816 * Marital_StatusMarried + -0.02157405407852 * Marital_StatusSingle + 
-0.59995619744527 * Marital_StatusTogether ;
2409397   +   H1x1_1  =    -0.53239337390307 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.53239337390307 + H1x1_1 ;
2409398   +   H1x1_2  =     0.99428677123948 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.99428677123948 + H1x1_2 ;
2409399   +   H1x1_3  =       1.835877082844 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.835877082844 + H1x1_3 ;
2409400   +   H1x1_4  = 0;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0;
2409401   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
2409402   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2409403   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
2409404   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
2409405   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
2409406   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
2409407   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
2409408   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
2409409   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
2409410   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
2409411   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
2409412   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
2409413   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
2409414   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
2409415   +END;
MPRINT(EM_DIAGRAM):   END;
2409416   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2409417   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2409418   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2409419   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2409420   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2409421   +END;
MPRINT(EM_DIAGRAM):   END;
2409422   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2409423   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2409424   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2409425   +
2409426   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2409427   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2409428   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2409429   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2409430   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2409431   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2409432   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2409433   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2409434   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2409435   +end;
MPRINT(EM_DIAGRAM):   end;
2409436   +else do;
MPRINT(EM_DIAGRAM):   else do;
2409437   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2409438   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2409439   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2409440   +   end;
MPRINT(EM_DIAGRAM):   end;
2409441   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2409442   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2409443   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2409444   +   end;
MPRINT(EM_DIAGRAM):   end;
2409445   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2409446   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2409447   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2409448   +   end;
MPRINT(EM_DIAGRAM):   end;
2409449   +end;
MPRINT(EM_DIAGRAM):   end;
2409450   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2409451   +   P_DepVar1  =    -3.41904253756965 * H1x1_1  +    -7.11204151517034 * H1x1_2
2409452   +          +     10.7909509395818 * H1x1_3  +    -2.20432578352426 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.41904253756965 * H1x1_1 + -7.11204151517034 * H1x1_2 + 
10.7909509395818 * H1x1_3 + -2.20432578352426 * H1x1_4 ;
2409453   +   P_DepVar1  =    -3.66951098257489 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.66951098257489 + P_DepVar1 ;
2409454   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2409455   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2409456   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2409457   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2409458   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2409459   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2409460   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2409461   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2409462   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2409463   +END;
MPRINT(EM_DIAGRAM):   END;
2409464   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2409465   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2409466   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2409467   +END;
MPRINT(EM_DIAGRAM):   END;
2409468   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2409469   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2409470   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2409471   +END;
MPRINT(EM_DIAGRAM):   END;
2409472   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2409473   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2409474   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2409475   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2409476   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2409477   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2409478   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2409479   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2409480   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2409481   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2409482   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2409483   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2409484   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2409485   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2409486   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2409487   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2409488   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2409489   +END;
MPRINT(EM_DIAGRAM):   END;
2409490   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2409491   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2409492   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2409493   +drop
2409494   +H1x1_1
2409495   +H1x1_2
2409496   +H1x1_3
2409497   +H1x1_4
2409498   +;
MPRINT(EM_DIAGRAM):   drop H1x1_1 H1x1_2 H1x1_3 H1x1_4 ;
2409499   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2409500   +* Renaming variables for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural9;
2409501   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2409502   +* Renaming Posterior variables for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural9;
2409503   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2409504   +drop AutoNeural9_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_P_DepVar1;
2409505   +AutoNeural9_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural9_P_DepVar1 = P_DepVar1;
2409506   +drop AutoNeural9_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_P_DepVar0;
2409507   +AutoNeural9_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural9_P_DepVar0 = P_DepVar0;
2409508   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2409509   +* Renaming Into variables for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for AutoNeural9;
2409510   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2409511   +length AutoNeural9_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length AutoNeural9_I_DepVar $32;
2409512   +drop AutoNeural9_I_DepVar;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_I_DepVar;
2409513   +AutoNeural9_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   AutoNeural9_I_DepVar = I_DepVar;
2409514   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2409515   +* Renaming _WARN_ variable for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural9;
2409516   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2409517   +length AutoNeural9_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural9_WARN_ $4;
2409518   +drop AutoNeural9_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_WARN_;
2409519   +AutoNeural9_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural9_WARN_ = _WARN_;
2409520   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2409521   +* Ensmbl44: Scoring Code of model 2 of 3;
MPRINT(EM_DIAGRAM):   * Ensmbl44: Scoring Code of model 2 of 3;
2409522   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2409523   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2409524   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
2409525   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2409526   +* NODE: AutoNeural11;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural11;
2409527   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2409528   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2409529   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2409530   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2409531   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2409532   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2409533   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2409534   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2409535   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2409536   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2409537   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2409538   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2409539   +LENGTH _WARN_ $4
2409540   +      F_DepVar  $ 12
2409541   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2409542   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2409543   +
2409544   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2409545   +
2409546   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2409547   +
2409548   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2409549   +
2409550   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2409551   +
2409552   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2409553   +
2409554   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2409555   +
2409556   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2409557   +
2409558   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2409559   +
2409560   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2409561   +
2409562   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2409563   +
2409564   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2409565   +
2409566   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2409567   +
2409568   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2409569   +
2409570   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2409571   +
2409572   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2409573   +
2409574   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2409575   +
2409576   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2409577   +
2409578   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2409579   +
2409580   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2409581   +
2409582   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2409583   +
2409584   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2409585   +
2409586   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2409587   +
2409588   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2409589   +
2409590   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2409591   +
2409592   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2409593   +
2409594   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2409595   +
2409596   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2409597   +
2409598   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2409599   +
2409600   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2409601   +
2409602   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2409603   +
2409604   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2409605   +
2409606   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2409607   +
2409608   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2409609   +
2409610   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2409611   +
2409612   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2409613   +
2409614   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2409615   +
2409616   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2409617   +
2409618   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2409619   +
2409620   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2409621   +
2409622   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2409623   +
2409624   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2409625   +
2409626   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
2409627   +
2409628   +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
2409629   +
2409630   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2409631   +
2409632   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2409633   +
2409634   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2409635   +
2409636   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2409637   +
2409638   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2409639   +
2409640   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2409641   +
2409642   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2409643   +
2409644   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2409645   +
2409646   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2409647   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2409648   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2409649   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2409650   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2409651   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2409652   +end;
MPRINT(EM_DIAGRAM):   end;
2409653   +else do;
MPRINT(EM_DIAGRAM):   else do;
2409654   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2409655   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2409656   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2409657   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2409658   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2409659   +   end;
MPRINT(EM_DIAGRAM):   end;
2409660   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2409661   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2409662   +   end;
MPRINT(EM_DIAGRAM):   end;
2409663   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2409664   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2409665   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2409666   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2409667   +   end;
MPRINT(EM_DIAGRAM):   end;
2409668   +end;
MPRINT(EM_DIAGRAM):   end;
2409669   +
2409670   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2409671   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2409672   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2409673   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2409674   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2409675   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2409676   +end;
MPRINT(EM_DIAGRAM):   end;
2409677   +else do;
MPRINT(EM_DIAGRAM):   else do;
2409678   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2409679   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2409680   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2409681   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2409682   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2409683   +   end;
MPRINT(EM_DIAGRAM):   end;
2409684   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2409685   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2409686   +   end;
MPRINT(EM_DIAGRAM):   end;
2409687   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2409688   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2409689   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2409690   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2409691   +   end;
MPRINT(EM_DIAGRAM):   end;
2409692   +end;
MPRINT(EM_DIAGRAM):   end;
2409693   +
2409694   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2409695   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2409696   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2409697   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2409698   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2409699   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2409700   +end;
MPRINT(EM_DIAGRAM):   end;
2409701   +else do;
MPRINT(EM_DIAGRAM):   else do;
2409702   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2409703   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2409704   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2409705   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2409706   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2409707   +   end;
MPRINT(EM_DIAGRAM):   end;
2409708   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2409709   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2409710   +   end;
MPRINT(EM_DIAGRAM):   end;
2409711   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2409712   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2409713   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2409714   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2409715   +   end;
MPRINT(EM_DIAGRAM):   end;
2409716   +end;
MPRINT(EM_DIAGRAM):   end;
2409717   +
2409718   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2409719   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2409720   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2409721   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2409722   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2409723   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2409724   +end;
MPRINT(EM_DIAGRAM):   end;
2409725   +else do;
MPRINT(EM_DIAGRAM):   else do;
2409726   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2409727   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2409728   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2409729   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2409730   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2409731   +   end;
MPRINT(EM_DIAGRAM):   end;
2409732   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2409733   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2409734   +   end;
MPRINT(EM_DIAGRAM):   end;
2409735   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2409736   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2409737   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2409738   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2409739   +   end;
MPRINT(EM_DIAGRAM):   end;
2409740   +end;
MPRINT(EM_DIAGRAM):   end;
2409741   +
2409742   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2409743   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2409744   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2409745   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2409746   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2409747   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2409748   +end;
MPRINT(EM_DIAGRAM):   end;
2409749   +else do;
MPRINT(EM_DIAGRAM):   else do;
2409750   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2409751   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2409752   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2409753   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2409754   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2409755   +   end;
MPRINT(EM_DIAGRAM):   end;
2409756   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2409757   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2409758   +   end;
MPRINT(EM_DIAGRAM):   end;
2409759   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2409760   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2409761   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2409762   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2409763   +   end;
MPRINT(EM_DIAGRAM):   end;
2409764   +end;
MPRINT(EM_DIAGRAM):   end;
2409765   +
2409766   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2409767   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2409768   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2409769   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2409770   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2409771   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2409772   +end;
MPRINT(EM_DIAGRAM):   end;
2409773   +else do;
MPRINT(EM_DIAGRAM):   else do;
2409774   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2409775   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2409776   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2409777   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2409778   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2409779   +   end;
MPRINT(EM_DIAGRAM):   end;
2409780   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2409781   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2409782   +   end;
MPRINT(EM_DIAGRAM):   end;
2409783   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2409784   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2409785   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2409786   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2409787   +   end;
MPRINT(EM_DIAGRAM):   end;
2409788   +end;
MPRINT(EM_DIAGRAM):   end;
2409789   +
2409790   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2409791   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2409792   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2409793   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2409794   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2409795   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2409796   +end;
MPRINT(EM_DIAGRAM):   end;
2409797   +else do;
MPRINT(EM_DIAGRAM):   else do;
2409798   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2409799   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2409800   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2409801   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2409802   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2409803   +   end;
MPRINT(EM_DIAGRAM):   end;
2409804   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2409805   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2409806   +   end;
MPRINT(EM_DIAGRAM):   end;
2409807   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2409808   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2409809   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2409810   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2409811   +   end;
MPRINT(EM_DIAGRAM):   end;
2409812   +end;
MPRINT(EM_DIAGRAM):   end;
2409813   +
2409814   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2409815   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
2409816   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2409817   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2409818   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2409819   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2409820   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2409821   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2409822   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2409823   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2409824   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2409825   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2409826   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2409827   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2409828   +end;
MPRINT(EM_DIAGRAM):   end;
2409829   +else do;
MPRINT(EM_DIAGRAM):   else do;
2409830   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2409831   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2409832   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2409833   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2409834   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2409835   +   end;
MPRINT(EM_DIAGRAM):   end;
2409836   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2409837   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2409838   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2409839   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2409840   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2409841   +   end;
MPRINT(EM_DIAGRAM):   end;
2409842   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2409843   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2409844   +   end;
MPRINT(EM_DIAGRAM):   end;
2409845   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2409846   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2409847   +   end;
MPRINT(EM_DIAGRAM):   end;
2409848   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2409849   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2409850   +   end;
MPRINT(EM_DIAGRAM):   end;
2409851   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2409852   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2409853   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2409854   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2409855   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2409856   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2409857   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2409858   +   end;
MPRINT(EM_DIAGRAM):   end;
2409859   +end;
MPRINT(EM_DIAGRAM):   end;
2409860   +
2409861   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2409862   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2409863   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
2409864   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2409865   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2409866   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2409867   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2409868   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2409869   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2409870   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2409871   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2409872   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2409873   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2409874   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2409875   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2409876   +end;
MPRINT(EM_DIAGRAM):   end;
2409877   +else do;
MPRINT(EM_DIAGRAM):   else do;
2409878   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2409879   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2409880   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2409881   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2409882   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2409883   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2409884   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2409885   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2409886   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2409887   +         end;
MPRINT(EM_DIAGRAM):   end;
2409888   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2409889   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2409890   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2409891   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2409892   +            end;
MPRINT(EM_DIAGRAM):   end;
2409893   +         end;
MPRINT(EM_DIAGRAM):   end;
2409894   +      end;
MPRINT(EM_DIAGRAM):   end;
2409895   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2409896   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2409897   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2409898   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2409899   +         end;
MPRINT(EM_DIAGRAM):   end;
2409900   +      end;
MPRINT(EM_DIAGRAM):   end;
2409901   +   end;
MPRINT(EM_DIAGRAM):   end;
2409902   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2409903   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2409904   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2409905   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2409906   +      end;
MPRINT(EM_DIAGRAM):   end;
2409907   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2409908   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2409909   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2409910   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2409911   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2409912   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2409913   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2409914   +         end;
MPRINT(EM_DIAGRAM):   end;
2409915   +      end;
MPRINT(EM_DIAGRAM):   end;
2409916   +   end;
MPRINT(EM_DIAGRAM):   end;
2409917   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2409918   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2409919   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2409920   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2409921   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2409922   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2409923   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2409924   +   end;
MPRINT(EM_DIAGRAM):   end;
2409925   +end;
MPRINT(EM_DIAGRAM):   end;
2409926   +
2409927   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2409928   +*** Checking missing input Interval
2409929   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2409930   +
2409931   +IF NMISS(
2409932   +   AcceptedCmpTotal ,
2409933   +   Age ,
2409934   +   Frq ,
2409935   +   Income ,
2409936   +   Kidhome ,
2409937   +   Mnt ,
2409938   +   MntFishProducts ,
2409939   +   MntFruits ,
2409940   +   MntGoldProds ,
2409941   +   MntMeatProducts ,
2409942   +   MntSweetProducts ,
2409943   +   MntWines ,
2409944   +   MonthsAsCustomer ,
2409945   +   NumCatalogPurchases ,
2409946   +   NumDealsPurchases ,
2409947   +   NumDistPurchases ,
2409948   +   NumStorePurchases ,
2409949   +   NumWebPurchases ,
2409950   +   NumWebVisitsMonth ,
2409951   +   RFMstat ,
2409952   +   RMntFrq ,
2409953   +   Recency ,
2409954   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
2409955   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2409956   +
2409957   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2409958   +END;
MPRINT(EM_DIAGRAM):   END;
2409959   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2409960   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2409961   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2409962   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2409963   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2409964   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2409965   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2409966   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2409967   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2409968   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2409969   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2409970   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2409971   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2409972   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2409973   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2409974   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2409975   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2409976   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2409977   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2409978   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2409979   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2409980   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2409981   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
2409982   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2409983   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2409984   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2409985   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2409986   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2409987   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2409988   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2409989   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2409990   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2409991   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2409992   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2409993   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2409994   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2409995   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2409996   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2409997   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2409998   +END;
MPRINT(EM_DIAGRAM):   END;
2409999   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2410000   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2410001   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2410002   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2410003   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2410004   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2410005   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2410006   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2410007   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2410008   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2410009   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2410010   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2410011   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2410012   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2410013   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2410014   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2410015   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2410016   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2410017   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2410018   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2410019   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2410020   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2410021   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
2410022   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2410023   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2410024   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2410025   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2410026   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2410027   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2410028   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2410029   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2410030   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2410031   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2410032   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
2410033   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2410034   +   ELSE S_NumCatalogPurchases
2410035   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2410036   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2410037   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2410038   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2410039   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2410040   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2410041   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2410042   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2410043   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2410044   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2410045   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2410046   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2410047   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2410048   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2410049   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2410050   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2410051   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2410052   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2410053   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2410054   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2410055   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2410056   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2410057   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2410058   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2410059   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2410060   +END;
MPRINT(EM_DIAGRAM):   END;
2410061   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2410062   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2410063   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2410064   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2410065   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2410066   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2410067   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2410068   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2410069   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2410070   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2410071   +   H1x1_1  =     0.08465472857554 * S_AcceptedCmpTotal
2410072   +          +     0.23104131534618 * S_Age  +     0.27646175976509 * S_Frq
2410073   +          +     0.45938840681203 * S_Income  +     0.09814900830666 *
2410074   +        S_Kidhome  +     0.23249430277518 * S_Mnt  +    -0.51905493105122 *
2410075   +        S_MntFishProducts  +    -0.07604226481078 * S_MntFruits
2410076   +          +     0.10100393832157 * S_MntGoldProds  +     1.56159221713858 *
2410077   +        S_MntMeatProducts  +     0.12166799382268 * S_MntSweetProducts
2410078   +          +    -0.63388816790524 * S_MntWines  +     0.00878303775585 *
2410079   +        S_MonthsAsCustomer  +     0.01990411233136 * S_NumCatalogPurchases
2410080   +          +     0.19770934886328 * S_NumDealsPurchases
2410081   +          +      0.0515215988111 * S_NumDistPurchases
2410082   +          +    -0.34569346346089 * S_NumStorePurchases
2410083   +          +    -0.27122293596124 * S_NumWebPurchases
2410084   +          +    -0.17061565609755 * S_NumWebVisitsMonth
2410085   +          +      0.1271178187502 * S_RFMstat  +     0.38306508975954 *
2410086   +        S_RMntFrq  +     0.05823588653853 * S_Recency
2410087   +          +    -0.03760117378617 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.08465472857554 * S_AcceptedCmpTotal + 0.23104131534618 * 
S_Age + 0.27646175976509 * S_Frq + 0.45938840681203 * S_Income + 0.09814900830666 * S_Kidhome 
+ 0.23249430277518 * S_Mnt + -0.51905493105122 * S_MntFishProducts + -0.07604226481078 * 
S_MntFruits + 0.10100393832157 * S_MntGoldProds + 1.56159221713858 * S_MntMeatProducts + 
0.12166799382268 * S_MntSweetProducts + -0.63388816790524 * S_MntWines + 0.00878303775585 * 
S_MonthsAsCustomer + 0.01990411233136 * S_NumCatalogPurchases + 0.19770934886328 * 
S_NumDealsPurchases + 0.0515215988111 * S_NumDistPurchases + -0.34569346346089 * 
S_NumStorePurchases + -0.27122293596124 * S_NumWebPurchases + -0.17061565609755 * 
S_NumWebVisitsMonth + 0.1271178187502 * S_RFMstat + 0.38306508975954 * S_RMntFrq + 
0.05823588653853 * S_Recency + -0.03760117378617 * S_Teenhome ;
2410088   +   H1x1_2  =     0.16564144258189 * S_AcceptedCmpTotal
2410089   +          +    -0.18930338067433 * S_Age  +    -0.23013558761757 * S_Frq
2410090   +          +     -0.1347135122598 * S_Income  +     0.04776498811407 *
2410091   +        S_Kidhome  +    -0.14940302068852 * S_Mnt  +    -0.13108691405604 *
2410092   +        S_MntFishProducts  +    -0.02561341150704 * S_MntFruits
2410093   +          +    -0.02022222891948 * S_MntGoldProds  +     0.80867688993093 *
2410094   +        S_MntMeatProducts  +    -0.08374488783635 * S_MntSweetProducts
2410095   +          +     -0.6719369441832 * S_MntWines  +    -0.14760035685198 *
2410096   +        S_MonthsAsCustomer  +      0.4007376271331 * S_NumCatalogPurchases
2410097   +          +     0.54308887602031 * S_NumDealsPurchases
2410098   +          +    -0.22507315320192 * S_NumDistPurchases
2410099   +          +    -0.79861387328361 * S_NumStorePurchases
2410100   +          +    -0.45467494002747 * S_NumWebPurchases
2410101   +          +      0.2119048824613 * S_NumWebVisitsMonth
2410102   +          +     0.30167662748678 * S_RFMstat  +     0.10712110659027 *
2410103   +        S_RMntFrq  +    -0.03061918029089 * S_Recency
2410104   +          +    -0.06096313113607 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.16564144258189 * S_AcceptedCmpTotal + -0.18930338067433 * 
S_Age + -0.23013558761757 * S_Frq + -0.1347135122598 * S_Income + 0.04776498811407 * S_Kidhome 
+ -0.14940302068852 * S_Mnt + -0.13108691405604 * S_MntFishProducts + -0.02561341150704 * 
S_MntFruits + -0.02022222891948 * S_MntGoldProds + 0.80867688993093 * S_MntMeatProducts + 
-0.08374488783635 * S_MntSweetProducts + -0.6719369441832 * S_MntWines + -0.14760035685198 * 
S_MonthsAsCustomer + 0.4007376271331 * S_NumCatalogPurchases + 0.54308887602031 * 
S_NumDealsPurchases + -0.22507315320192 * S_NumDistPurchases + -0.79861387328361 * 
S_NumStorePurchases + -0.45467494002747 * S_NumWebPurchases + 0.2119048824613 * 
S_NumWebVisitsMonth + 0.30167662748678 * S_RFMstat + 0.10712110659027 * S_RMntFrq + 
-0.03061918029089 * S_Recency + -0.06096313113607 * S_Teenhome ;
2410105   +   H1x1_3  =     0.02674875562898 * S_AcceptedCmpTotal
2410106   +          +    -0.19731891748843 * S_Age  +    -0.00753784701259 * S_Frq
2410107   +          +    -0.31764694608254 * S_Income  +     0.49525183733398 *
2410108   +        S_Kidhome  +     0.24623619243686 * S_Mnt  +     0.25904859702044 *
2410109   +        S_MntFishProducts  +     0.26153358982994 * S_MntFruits
2410110   +          +    -0.07223707213485 * S_MntGoldProds  +    -0.15192960471493 *
2410111   +        S_MntMeatProducts  +     0.08241128624385 * S_MntSweetProducts
2410112   +          +     0.62479763709054 * S_MntWines  +     0.03593742779349 *
2410113   +        S_MonthsAsCustomer  +     0.00825730323418 * S_NumCatalogPurchases
2410114   +          +     -0.0771083149302 * S_NumDealsPurchases
2410115   +          +     0.03403621221162 * S_NumDistPurchases
2410116   +          +     0.61303946422025 * S_NumStorePurchases
2410117   +          +     0.27126793634053 * S_NumWebPurchases
2410118   +          +     -0.9769688424222 * S_NumWebVisitsMonth
2410119   +          +     0.08832170040425 * S_RFMstat  +     0.13241491054212 *
2410120   +        S_RMntFrq  +     0.94872655811163 * S_Recency
2410121   +          +     0.22002222738147 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.02674875562898 * S_AcceptedCmpTotal + -0.19731891748843 * 
S_Age + -0.00753784701259 * S_Frq + -0.31764694608254 * S_Income + 0.49525183733398 * 
S_Kidhome + 0.24623619243686 * S_Mnt + 0.25904859702044 * S_MntFishProducts + 0.26153358982994 
* S_MntFruits + -0.07223707213485 * S_MntGoldProds + -0.15192960471493 * S_MntMeatProducts + 
0.08241128624385 * S_MntSweetProducts + 0.62479763709054 * S_MntWines + 0.03593742779349 * 
S_MonthsAsCustomer + 0.00825730323418 * S_NumCatalogPurchases + -0.0771083149302 * 
S_NumDealsPurchases + 0.03403621221162 * S_NumDistPurchases + 0.61303946422025 * 
S_NumStorePurchases + 0.27126793634053 * S_NumWebPurchases + -0.9769688424222 * 
S_NumWebVisitsMonth + 0.08832170040425 * S_RFMstat + 0.13241491054212 * S_RMntFrq + 
0.94872655811163 * S_Recency + 0.22002222738147 * S_Teenhome ;
2410122   +   H1x1_4  =     0.46328587348713 * S_AcceptedCmpTotal
2410123   +          +      -0.306946385792 * S_Age  +    -0.24247964225191 * S_Frq
2410124   +          +    -0.42968609314513 * S_Income  +    -0.08934431746158 *
2410125   +        S_Kidhome  +     0.15972194979558 * S_Mnt  +    -0.22174909818279 *
2410126   +        S_MntFishProducts  +    -0.23755215058744 * S_MntFruits
2410127   +          +      -0.124789433808 * S_MntGoldProds  +     0.50040173514144 *
2410128   +        S_MntMeatProducts  +     0.02850063230459 * S_MntSweetProducts
2410129   +          +     0.13427582671876 * S_MntWines  +     0.25569886862761 *
2410130   +        S_MonthsAsCustomer  +     0.34004201732149 * S_NumCatalogPurchases
2410131   +          +     0.29894603062327 * S_NumDealsPurchases
2410132   +          +     0.07614620530875 * S_NumDistPurchases
2410133   +          +     0.15402335009896 * S_NumStorePurchases
2410134   +          +     0.10615749096863 * S_NumWebPurchases
2410135   +          +     0.41962286816879 * S_NumWebVisitsMonth
2410136   +          +     0.00203630873093 * S_RFMstat  +     0.04736976805951 *
2410137   +        S_RMntFrq  +    -0.84751074132422 * S_Recency
2410138   +          +      0.2189023557249 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.46328587348713 * S_AcceptedCmpTotal + -0.306946385792 * S_Age 
+ -0.24247964225191 * S_Frq + -0.42968609314513 * S_Income + -0.08934431746158 * S_Kidhome + 
0.15972194979558 * S_Mnt + -0.22174909818279 * S_MntFishProducts + -0.23755215058744 * 
S_MntFruits + -0.124789433808 * S_MntGoldProds + 0.50040173514144 * S_MntMeatProducts + 
0.02850063230459 * S_MntSweetProducts + 0.13427582671876 * S_MntWines + 0.25569886862761 * 
S_MonthsAsCustomer + 0.34004201732149 * S_NumCatalogPurchases + 0.29894603062327 * 
S_NumDealsPurchases + 0.07614620530875 * S_NumDistPurchases + 0.15402335009896 * 
S_NumStorePurchases + 0.10615749096863 * S_NumWebPurchases + 0.41962286816879 * 
S_NumWebVisitsMonth + 0.00203630873093 * S_RFMstat + 0.04736976805951 * S_RMntFrq + 
-0.84751074132422 * S_Recency + 0.2189023557249 * S_Teenhome ;
2410139   +   H1x1_5  =    -0.32353341757368 * S_AcceptedCmpTotal
2410140   +          +     0.03233494925748 * S_Age  +    -0.21296093282526 * S_Frq
2410141   +          +    -0.33919081075007 * S_Income  +     0.08771362671573 *
2410142   +        S_Kidhome  +    -0.10797068838726 * S_Mnt  +    -0.19736358637985 *
2410143   +        S_MntFishProducts  +    -0.19679917231132 * S_MntFruits
2410144   +          +     0.07502386205588 * S_MntGoldProds  +    -0.50948750987247 *
2410145   +        S_MntMeatProducts  +     0.00413757018488 * S_MntSweetProducts
2410146   +          +      0.0788538305785 * S_MntWines  +    -0.02917052455021 *
2410147   +        S_MonthsAsCustomer  +    -0.53933514609821 * S_NumCatalogPurchases
2410148   +          +     0.14392502416642 * S_NumDealsPurchases
2410149   +          +    -0.10026304978633 * S_NumDistPurchases
2410150   +          +     -0.0588453022746 * S_NumStorePurchases
2410151   +          +     0.24799398610395 * S_NumWebPurchases
2410152   +          +    -0.52695548549717 * S_NumWebVisitsMonth
2410153   +          +     0.01855620452049 * S_RFMstat  +    -0.00189170766477 *
2410154   +        S_RMntFrq  +     0.51841177421912 * S_Recency
2410155   +          +     0.31491299720207 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.32353341757368 * S_AcceptedCmpTotal + 0.03233494925748 * 
S_Age + -0.21296093282526 * S_Frq + -0.33919081075007 * S_Income + 0.08771362671573 * 
S_Kidhome + -0.10797068838726 * S_Mnt + -0.19736358637985 * S_MntFishProducts + 
-0.19679917231132 * S_MntFruits + 0.07502386205588 * S_MntGoldProds + -0.50948750987247 * 
S_MntMeatProducts + 0.00413757018488 * S_MntSweetProducts + 0.0788538305785 * S_MntWines + 
-0.02917052455021 * S_MonthsAsCustomer + -0.53933514609821 * S_NumCatalogPurchases + 
0.14392502416642 * S_NumDealsPurchases + -0.10026304978633 * S_NumDistPurchases + 
-0.0588453022746 * S_NumStorePurchases + 0.24799398610395 * S_NumWebPurchases + 
-0.52695548549717 * S_NumWebVisitsMonth + 0.01855620452049 * S_RFMstat + -0.00189170766477 * 
S_RMntFrq + 0.51841177421912 * S_Recency + 0.31491299720207 * S_Teenhome ;
2410156   +   H1x1_6  =     -0.2113594539647 * S_AcceptedCmpTotal
2410157   +          +     -0.1052829531896 * S_Age  +     0.30802959734964 * S_Frq
2410158   +          +    -0.03112570586685 * S_Income  +     0.19129661263247 *
2410159   +        S_Kidhome  +     0.00533736622639 * S_Mnt  +    -0.06112703732925 *
2410160   +        S_MntFishProducts  +    -0.15875686512247 * S_MntFruits
2410161   +          +    -0.08040179272112 * S_MntGoldProds  +    -0.14462087536907 *
2410162   +        S_MntMeatProducts  +     0.21353582706121 * S_MntSweetProducts
2410163   +          +    -0.30180630737612 * S_MntWines  +    -0.11825033043182 *
2410164   +        S_MonthsAsCustomer  +     -0.2917393256645 * S_NumCatalogPurchases
2410165   +          +     0.08149600854964 * S_NumDealsPurchases
2410166   +          +     0.16873541613513 * S_NumDistPurchases
2410167   +          +    -0.20437343413446 * S_NumStorePurchases
2410168   +          +     -0.1671107527288 * S_NumWebPurchases
2410169   +          +     0.03677043100993 * S_NumWebVisitsMonth
2410170   +          +      0.0240516540488 * S_RFMstat  +     0.06155030856383 *
2410171   +        S_RMntFrq  +    -0.28802122451372 * S_Recency
2410172   +          +     0.06998878697307 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -0.2113594539647 * S_AcceptedCmpTotal + -0.1052829531896 * 
S_Age + 0.30802959734964 * S_Frq + -0.03112570586685 * S_Income + 0.19129661263247 * S_Kidhome 
+ 0.00533736622639 * S_Mnt + -0.06112703732925 * S_MntFishProducts + -0.15875686512247 * 
S_MntFruits + -0.08040179272112 * S_MntGoldProds + -0.14462087536907 * S_MntMeatProducts + 
0.21353582706121 * S_MntSweetProducts + -0.30180630737612 * S_MntWines + -0.11825033043182 * 
S_MonthsAsCustomer + -0.2917393256645 * S_NumCatalogPurchases + 0.08149600854964 * 
S_NumDealsPurchases + 0.16873541613513 * S_NumDistPurchases + -0.20437343413446 * 
S_NumStorePurchases + -0.1671107527288 * S_NumWebPurchases + 0.03677043100993 * 
S_NumWebVisitsMonth + 0.0240516540488 * S_RFMstat + 0.06155030856383 * S_RMntFrq + 
-0.28802122451372 * S_Recency + 0.06998878697307 * S_Teenhome ;
2410173   +   H1x1_1  = H1x1_1  +    -0.33641509021082 * AcceptedCmp10
2410174   +          +     0.03092292109435 * AcceptedCmp20  +    -0.23551187181907 *
2410175   +        AcceptedCmp30  +    -0.06694400005185 * AcceptedCmp40
2410176   +          +    -0.14203506237074 * AcceptedCmp50  +    -0.25866390496966 *
2410177   +        Complain0  +     0.19505921178308 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.33641509021082 * AcceptedCmp10 + 0.03092292109435 * 
AcceptedCmp20 + -0.23551187181907 * AcceptedCmp30 + -0.06694400005185 * AcceptedCmp40 + 
-0.14203506237074 * AcceptedCmp50 + -0.25866390496966 * Complain0 + 0.19505921178308 * 
HigherEducationBinary0 ;
2410178   +   H1x1_2  = H1x1_2  +     0.09937599707203 * AcceptedCmp10
2410179   +          +     0.03831208573575 * AcceptedCmp20  +     0.39683693019758 *
2410180   +        AcceptedCmp30  +     0.37006277175295 * AcceptedCmp40
2410181   +          +     0.21293419476895 * AcceptedCmp50  +     0.15528568367473 *
2410182   +        Complain0  +    -0.30210013299822 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.09937599707203 * AcceptedCmp10 + 0.03831208573575 * 
AcceptedCmp20 + 0.39683693019758 * AcceptedCmp30 + 0.37006277175295 * AcceptedCmp40 + 
0.21293419476895 * AcceptedCmp50 + 0.15528568367473 * Complain0 + -0.30210013299822 * 
HigherEducationBinary0 ;
2410183   +   H1x1_3  = H1x1_3  +     0.29891621770856 * AcceptedCmp10
2410184   +          +     0.64938384482014 * AcceptedCmp20  +     0.44997242602142 *
2410185   +        AcceptedCmp30  +       0.479093722666 * AcceptedCmp40
2410186   +          +     0.50957180373919 * AcceptedCmp50  +     0.27833535432461 *
2410187   +        Complain0  +    -0.20383534906723 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.29891621770856 * AcceptedCmp10 + 0.64938384482014 * 
AcceptedCmp20 + 0.44997242602142 * AcceptedCmp30 + 0.479093722666 * AcceptedCmp40 + 
0.50957180373919 * AcceptedCmp50 + 0.27833535432461 * Complain0 + -0.20383534906723 * 
HigherEducationBinary0 ;
2410188   +   H1x1_4  = H1x1_4  +    -0.26872515586946 * AcceptedCmp10
2410189   +          +    -0.24299337381911 * AcceptedCmp20  +    -0.01147155911926 *
2410190   +        AcceptedCmp30  +     -0.3056041277894 * AcceptedCmp40
2410191   +          +    -0.05496409609003 * AcceptedCmp50  +     0.07858238173893 *
2410192   +        Complain0  +     0.05721550070076 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.26872515586946 * AcceptedCmp10 + -0.24299337381911 
* AcceptedCmp20 + -0.01147155911926 * AcceptedCmp30 + -0.3056041277894 * AcceptedCmp40 + 
-0.05496409609003 * AcceptedCmp50 + 0.07858238173893 * Complain0 + 0.05721550070076 * 
HigherEducationBinary0 ;
2410193   +   H1x1_5  = H1x1_5  +    -0.14067626649899 * AcceptedCmp10
2410194   +          +    -0.30627802828357 * AcceptedCmp20  +     0.05057942365592 *
2410195   +        AcceptedCmp30  +    -0.10378506600459 * AcceptedCmp40
2410196   +          +     0.07479232390108 * AcceptedCmp50  +     0.07252750671496 *
2410197   +        Complain0  +     0.11114854035831 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.14067626649899 * AcceptedCmp10 + -0.30627802828357 
* AcceptedCmp20 + 0.05057942365592 * AcceptedCmp30 + -0.10378506600459 * AcceptedCmp40 + 
0.07479232390108 * AcceptedCmp50 + 0.07252750671496 * Complain0 + 0.11114854035831 * 
HigherEducationBinary0 ;
2410198   +   H1x1_6  = H1x1_6  +    -0.25806332334976 * AcceptedCmp10
2410199   +          +     0.03944021903138 * AcceptedCmp20  +    -0.08792206887119 *
2410200   +        AcceptedCmp30  +    -0.24631282865199 * AcceptedCmp40
2410201   +          +    -0.06123991538969 * AcceptedCmp50  +    -0.03114784375357 *
2410202   +        Complain0  +    -0.25204544481193 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + -0.25806332334976 * AcceptedCmp10 + 0.03944021903138 * 
AcceptedCmp20 + -0.08792206887119 * AcceptedCmp30 + -0.24631282865199 * AcceptedCmp40 + 
-0.06123991538969 * AcceptedCmp50 + -0.03114784375357 * Complain0 + -0.25204544481193 * 
HigherEducationBinary0 ;
2410203   +   H1x1_1  = H1x1_1  +      0.2972170984261 * Education2n_Cycle
2410204   +          +     0.01651368568996 * EducationBasic  +     -0.1186055936649 *
2410205   +        EducationGraduation  +      0.0228208538951 * EducationMaster
2410206   +          +    -0.31045295887604 * Marital_StatusDivorced
2410207   +          +    -0.01109401001539 * Marital_StatusMarried
2410208   +          +     0.01325135981025 * Marital_StatusSingle
2410209   +          +     0.16609357475978 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.2972170984261 * Education2n_Cycle + 0.01651368568996 
* EducationBasic + -0.1186055936649 * EducationGraduation + 0.0228208538951 * EducationMaster 
+ -0.31045295887604 * Marital_StatusDivorced + -0.01109401001539 * Marital_StatusMarried + 
0.01325135981025 * Marital_StatusSingle + 0.16609357475978 * Marital_StatusTogether ;
2410210   +   H1x1_2  = H1x1_2  +    -0.07095220065018 * Education2n_Cycle
2410211   +          +    -0.23491732567608 * EducationBasic  +     0.20187086452315 *
2410212   +        EducationGraduation  +     0.07524128723108 * EducationMaster
2410213   +          +     0.02275101861599 * Marital_StatusDivorced
2410214   +          +     0.20271548664903 * Marital_StatusMarried
2410215   +          +    -0.12132069210718 * Marital_StatusSingle
2410216   +          +     0.00085090729385 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.07095220065018 * Education2n_Cycle + 
-0.23491732567608 * EducationBasic + 0.20187086452315 * EducationGraduation + 0.07524128723108 
* EducationMaster + 0.02275101861599 * Marital_StatusDivorced + 0.20271548664903 * 
Marital_StatusMarried + -0.12132069210718 * Marital_StatusSingle + 0.00085090729385 * 
Marital_StatusTogether ;
2410217   +   H1x1_3  = H1x1_3  +    -0.02268297689573 * Education2n_Cycle
2410218   +          +     0.06359770535369 * EducationBasic  +     -0.1194001280088 *
2410219   +        EducationGraduation  +     0.17299848976308 * EducationMaster
2410220   +          +     -0.4992959703281 * Marital_StatusDivorced
2410221   +          +     0.62071659624138 * Marital_StatusMarried
2410222   +          +    -0.21776202274494 * Marital_StatusSingle
2410223   +          +     0.54712874598141 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.02268297689573 * Education2n_Cycle + 
0.06359770535369 * EducationBasic + -0.1194001280088 * EducationGraduation + 0.17299848976308 
* EducationMaster + -0.4992959703281 * Marital_StatusDivorced + 0.62071659624138 * 
Marital_StatusMarried + -0.21776202274494 * Marital_StatusSingle + 0.54712874598141 * 
Marital_StatusTogether ;
2410224   +   H1x1_4  = H1x1_4  +    -0.17773353520266 * Education2n_Cycle
2410225   +          +     0.17998728120628 * EducationBasic  +    -0.00324602612825 *
2410226   +        EducationGraduation  +    -0.22448876765089 * EducationMaster
2410227   +          +     0.05626212670587 * Marital_StatusDivorced
2410228   +          +     0.14353891364597 * Marital_StatusMarried
2410229   +          +    -0.29006765622997 * Marital_StatusSingle
2410230   +          +     0.05503638282535 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.17773353520266 * Education2n_Cycle + 
0.17998728120628 * EducationBasic + -0.00324602612825 * EducationGraduation + 
-0.22448876765089 * EducationMaster + 0.05626212670587 * Marital_StatusDivorced + 
0.14353891364597 * Marital_StatusMarried + -0.29006765622997 * Marital_StatusSingle + 
0.05503638282535 * Marital_StatusTogether ;
2410231   +   H1x1_5  = H1x1_5  +     0.06634316870499 * Education2n_Cycle
2410232   +          +    -0.36153880127411 * EducationBasic  +     0.23023144658635 *
2410233   +        EducationGraduation  +    -0.06568730318683 * EducationMaster
2410234   +          +    -0.21206913700604 * Marital_StatusDivorced
2410235   +          +     0.58790643614629 * Marital_StatusMarried
2410236   +          +    -0.65995982578062 * Marital_StatusSingle
2410237   +          +     0.49642503732428 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 0.06634316870499 * Education2n_Cycle + 
-0.36153880127411 * EducationBasic + 0.23023144658635 * EducationGraduation + 
-0.06568730318683 * EducationMaster + -0.21206913700604 * Marital_StatusDivorced + 
0.58790643614629 * Marital_StatusMarried + -0.65995982578062 * Marital_StatusSingle + 
0.49642503732428 * Marital_StatusTogether ;
2410238   +   H1x1_6  = H1x1_6  +     0.16504024096118 * Education2n_Cycle
2410239   +          +     0.11925867171875 * EducationBasic  +    -0.04213907014732 *
2410240   +        EducationGraduation  +    -0.21389968555475 * EducationMaster
2410241   +          +    -0.05047370516008 * Marital_StatusDivorced
2410242   +          +    -0.23139090963669 * Marital_StatusMarried
2410243   +          +     0.04816197463249 * Marital_StatusSingle
2410244   +          +     0.04977890114896 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + 0.16504024096118 * Education2n_Cycle + 
0.11925867171875 * EducationBasic + -0.04213907014732 * EducationGraduation + 
-0.21389968555475 * EducationMaster + -0.05047370516008 * Marital_StatusDivorced + 
-0.23139090963669 * Marital_StatusMarried + 0.04816197463249 * Marital_StatusSingle + 
0.04977890114896 * Marital_StatusTogether ;
2410245   +   H1x1_1  =    -1.90576647346127 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.90576647346127 + H1x1_1 ;
2410246   +   H1x1_2  =     0.32295787429294 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.32295787429294 + H1x1_2 ;
2410247   +   H1x1_3  =     0.75117643107919 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.75117643107919 + H1x1_3 ;
2410248   +   H1x1_4  =      1.2336762751587 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.2336762751587 + H1x1_4 ;
2410249   +   H1x1_5  =    -0.97062317465491 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.97062317465491 + H1x1_5 ;
2410250   +   H1x1_6  =    -1.15756803634408 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -1.15756803634408 + H1x1_6 ;
2410251   +   _EPS = SQRT(CONSTANT('MACEPS')) ;
MPRINT(EM_DIAGRAM):   _EPS = SQRT(CONSTANT('MACEPS')) ;
2410252   +   _REC_EPS = 1/_EPS ;
MPRINT(EM_DIAGRAM):   _REC_EPS = 1/_EPS ;
2410253   +   DROP _REC_EPS _EPS ;
MPRINT(EM_DIAGRAM):   DROP _REC_EPS _EPS ;
2410254   +   IF H1x1_1  < _REC_EPS AND H1x1_1  > - _REC_EPS THEN
2410255   +   H1x1_1  = H1x1_1  * H1x1_1 ;
MPRINT(EM_DIAGRAM):   IF H1x1_1 < _REC_EPS AND H1x1_1 > - _REC_EPS THEN H1x1_1 = H1x1_1 * 
H1x1_1 ;
2410256   +   ELSE H1x1_1  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_1 = _REC_EPS ;
2410257   +   IF H1x1_2  < _REC_EPS AND H1x1_2  > - _REC_EPS THEN
2410258   +   H1x1_2  = H1x1_2  * H1x1_2 ;
MPRINT(EM_DIAGRAM):   IF H1x1_2 < _REC_EPS AND H1x1_2 > - _REC_EPS THEN H1x1_2 = H1x1_2 * 
H1x1_2 ;
2410259   +   ELSE H1x1_2  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_2 = _REC_EPS ;
2410260   +   IF H1x1_3  < _REC_EPS AND H1x1_3  > - _REC_EPS THEN
2410261   +   H1x1_3  = H1x1_3  * H1x1_3 ;
MPRINT(EM_DIAGRAM):   IF H1x1_3 < _REC_EPS AND H1x1_3 > - _REC_EPS THEN H1x1_3 = H1x1_3 * 
H1x1_3 ;
2410262   +   ELSE H1x1_3  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_3 = _REC_EPS ;
2410263   +   IF H1x1_4  < _REC_EPS AND H1x1_4  > - _REC_EPS THEN
2410264   +   H1x1_4  = H1x1_4  * H1x1_4 ;
MPRINT(EM_DIAGRAM):   IF H1x1_4 < _REC_EPS AND H1x1_4 > - _REC_EPS THEN H1x1_4 = H1x1_4 * 
H1x1_4 ;
2410265   +   ELSE H1x1_4  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_4 = _REC_EPS ;
2410266   +   IF H1x1_5  < _REC_EPS AND H1x1_5  > - _REC_EPS THEN
2410267   +   H1x1_5  = H1x1_5  * H1x1_5 ;
MPRINT(EM_DIAGRAM):   IF H1x1_5 < _REC_EPS AND H1x1_5 > - _REC_EPS THEN H1x1_5 = H1x1_5 * 
H1x1_5 ;
2410268   +   ELSE H1x1_5  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_5 = _REC_EPS ;
2410269   +   IF H1x1_6  < _REC_EPS AND H1x1_6  > - _REC_EPS THEN
2410270   +   H1x1_6  = H1x1_6  * H1x1_6 ;
MPRINT(EM_DIAGRAM):   IF H1x1_6 < _REC_EPS AND H1x1_6 > - _REC_EPS THEN H1x1_6 = H1x1_6 * 
H1x1_6 ;
2410271   +   ELSE H1x1_6  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_6 = _REC_EPS ;
2410272   +END;
MPRINT(EM_DIAGRAM):   END;
2410273   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2410274   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2410275   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2410276   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2410277   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2410278   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
2410279   +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
2410280   +END;
MPRINT(EM_DIAGRAM):   END;
2410281   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2410282   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2410283   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2410284   +
2410285   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2410286   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2410287   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2410288   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2410289   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2410290   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2410291   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2410292   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2410293   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2410294   +end;
MPRINT(EM_DIAGRAM):   end;
2410295   +else do;
MPRINT(EM_DIAGRAM):   else do;
2410296   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2410297   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2410298   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2410299   +   end;
MPRINT(EM_DIAGRAM):   end;
2410300   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2410301   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2410302   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2410303   +   end;
MPRINT(EM_DIAGRAM):   end;
2410304   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2410305   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2410306   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2410307   +   end;
MPRINT(EM_DIAGRAM):   end;
2410308   +end;
MPRINT(EM_DIAGRAM):   end;
2410309   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2410310   +   P_DepVar1  =    -0.99830813428318 * H1x1_1  +     1.33495006526712 * H1x1_2
2410311   +          +    -1.37942150026657 * H1x1_3  +     1.22714974922576 * H1x1_4
2410312   +          +     1.73375794385595 * H1x1_5  +     -0.0100306049679 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.99830813428318 * H1x1_1 + 1.33495006526712 * H1x1_2 + 
-1.37942150026657 * H1x1_3 + 1.22714974922576 * H1x1_4 + 1.73375794385595 * H1x1_5 + 
-0.0100306049679 * H1x1_6 ;
2410313   +   P_DepVar1  =    -1.90393999986167 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.90393999986167 + P_DepVar1 ;
2410314   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2410315   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2410316   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2410317   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2410318   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2410319   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2410320   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2410321   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2410322   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2410323   +END;
MPRINT(EM_DIAGRAM):   END;
2410324   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2410325   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2410326   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2410327   +END;
MPRINT(EM_DIAGRAM):   END;
2410328   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2410329   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2410330   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2410331   +END;
MPRINT(EM_DIAGRAM):   END;
2410332   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2410333   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2410334   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2410335   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2410336   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2410337   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2410338   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2410339   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2410340   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2410341   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2410342   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2410343   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2410344   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2410345   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2410346   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2410347   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2410348   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2410349   +END;
MPRINT(EM_DIAGRAM):   END;
2410350   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2410351   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2410352   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2410353   +drop
2410354   +H1x1_1
2410355   +H1x1_2
2410356   +H1x1_3
2410357   +H1x1_4
2410358   +H1x1_5
2410359   +H1x1_6
2410360   +;
MPRINT(EM_DIAGRAM):   drop H1x1_1 H1x1_2 H1x1_3 H1x1_4 H1x1_5 H1x1_6 ;
2410361   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2410362   +* Renaming variables for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural11;
2410363   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2410364   +* Renaming Posterior variables for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural11;
2410365   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2410366   +drop AutoNeural11_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_P_DepVar1;
2410367   +AutoNeural11_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural11_P_DepVar1 = P_DepVar1;
2410368   +drop AutoNeural11_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_P_DepVar0;
2410369   +AutoNeural11_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural11_P_DepVar0 = P_DepVar0;
2410370   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2410371   +* Renaming Into variables for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for AutoNeural11;
2410372   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2410373   +length AutoNeural11_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length AutoNeural11_I_DepVar $32;
2410374   +drop AutoNeural11_I_DepVar;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_I_DepVar;
2410375   +AutoNeural11_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   AutoNeural11_I_DepVar = I_DepVar;
2410376   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2410377   +* Renaming _WARN_ variable for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural11;
2410378   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2410379   +length AutoNeural11_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural11_WARN_ $4;
2410380   +drop AutoNeural11_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_WARN_;
2410381   +AutoNeural11_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural11_WARN_ = _WARN_;
2410382   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2410383   +* Ensmbl44: Scoring Code of model 3 of 3;
MPRINT(EM_DIAGRAM):   * Ensmbl44: Scoring Code of model 3 of 3;
2410384   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2410385   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2410386   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
2410387   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2410388   +* NODE: AutoNeural12;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural12;
2410389   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2410390   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2410391   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2410392   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2410393   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2410394   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2410395   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2410396   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2410397   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2410398   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2410399   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2410400   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2410401   +LENGTH _WARN_ $4
2410402   +      F_DepVar  $ 12
2410403   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2410404   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2410405   +
2410406   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2410407   +
2410408   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2410409   +
2410410   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2410411   +
2410412   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2410413   +
2410414   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2410415   +
2410416   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2410417   +
2410418   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2410419   +
2410420   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2410421   +
2410422   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2410423   +
2410424   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2410425   +
2410426   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2410427   +
2410428   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2410429   +
2410430   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2410431   +
2410432   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2410433   +
2410434   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2410435   +
2410436   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2410437   +
2410438   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2410439   +
2410440   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2410441   +
2410442   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2410443   +
2410444   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2410445   +
2410446   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2410447   +
2410448   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2410449   +
2410450   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2410451   +
2410452   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2410453   +
2410454   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2410455   +
2410456   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2410457   +
2410458   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2410459   +
2410460   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2410461   +
2410462   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2410463   +
2410464   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2410465   +
2410466   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2410467   +
2410468   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2410469   +
2410470   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2410471   +
2410472   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2410473   +
2410474   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2410475   +
2410476   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2410477   +
2410478   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2410479   +
2410480   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2410481   +
2410482   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2410483   +
2410484   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2410485   +
2410486   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2410487   +
2410488   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
2410489   +
2410490   +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
2410491   +
2410492   +      label H1x1_7 = 'Hidden: H1x1_=7' ;
MPRINT(EM_DIAGRAM):   label H1x1_7 = 'Hidden: H1x1_=7' ;
2410493   +
2410494   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
2410495   +
2410496   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
2410497   +
2410498   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
2410499   +
2410500   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
2410501   +
2410502   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
2410503   +
2410504   +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
2410505   +
2410506   +      label H1x2_7 = 'Hidden: H1x2_=7' ;
MPRINT(EM_DIAGRAM):   label H1x2_7 = 'Hidden: H1x2_=7' ;
2410507   +
2410508   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2410509   +
2410510   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2410511   +
2410512   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2410513   +
2410514   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2410515   +
2410516   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2410517   +
2410518   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2410519   +
2410520   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2410521   +
2410522   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2410523   +
2410524   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2410525   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2410526   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2410527   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2410528   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2410529   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2410530   +end;
MPRINT(EM_DIAGRAM):   end;
2410531   +else do;
MPRINT(EM_DIAGRAM):   else do;
2410532   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2410533   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2410534   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2410535   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2410536   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2410537   +   end;
MPRINT(EM_DIAGRAM):   end;
2410538   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2410539   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2410540   +   end;
MPRINT(EM_DIAGRAM):   end;
2410541   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2410542   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2410543   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2410544   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2410545   +   end;
MPRINT(EM_DIAGRAM):   end;
2410546   +end;
MPRINT(EM_DIAGRAM):   end;
2410547   +
2410548   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2410549   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2410550   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2410551   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2410552   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2410553   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2410554   +end;
MPRINT(EM_DIAGRAM):   end;
2410555   +else do;
MPRINT(EM_DIAGRAM):   else do;
2410556   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2410557   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2410558   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2410559   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2410560   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2410561   +   end;
MPRINT(EM_DIAGRAM):   end;
2410562   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2410563   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2410564   +   end;
MPRINT(EM_DIAGRAM):   end;
2410565   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2410566   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2410567   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2410568   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2410569   +   end;
MPRINT(EM_DIAGRAM):   end;
2410570   +end;
MPRINT(EM_DIAGRAM):   end;
2410571   +
2410572   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2410573   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2410574   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2410575   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2410576   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2410577   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2410578   +end;
MPRINT(EM_DIAGRAM):   end;
2410579   +else do;
MPRINT(EM_DIAGRAM):   else do;
2410580   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2410581   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2410582   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2410583   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2410584   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2410585   +   end;
MPRINT(EM_DIAGRAM):   end;
2410586   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2410587   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2410588   +   end;
MPRINT(EM_DIAGRAM):   end;
2410589   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2410590   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2410591   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2410592   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2410593   +   end;
MPRINT(EM_DIAGRAM):   end;
2410594   +end;
MPRINT(EM_DIAGRAM):   end;
2410595   +
2410596   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2410597   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2410598   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2410599   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2410600   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2410601   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2410602   +end;
MPRINT(EM_DIAGRAM):   end;
2410603   +else do;
MPRINT(EM_DIAGRAM):   else do;
2410604   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2410605   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2410606   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2410607   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2410608   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2410609   +   end;
MPRINT(EM_DIAGRAM):   end;
2410610   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2410611   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2410612   +   end;
MPRINT(EM_DIAGRAM):   end;
2410613   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2410614   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2410615   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2410616   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2410617   +   end;
MPRINT(EM_DIAGRAM):   end;
2410618   +end;
MPRINT(EM_DIAGRAM):   end;
2410619   +
2410620   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2410621   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2410622   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2410623   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2410624   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2410625   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2410626   +end;
MPRINT(EM_DIAGRAM):   end;
2410627   +else do;
MPRINT(EM_DIAGRAM):   else do;
2410628   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2410629   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2410630   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2410631   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2410632   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2410633   +   end;
MPRINT(EM_DIAGRAM):   end;
2410634   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2410635   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2410636   +   end;
MPRINT(EM_DIAGRAM):   end;
2410637   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2410638   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2410639   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2410640   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2410641   +   end;
MPRINT(EM_DIAGRAM):   end;
2410642   +end;
MPRINT(EM_DIAGRAM):   end;
2410643   +
2410644   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2410645   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2410646   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2410647   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2410648   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2410649   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2410650   +end;
MPRINT(EM_DIAGRAM):   end;
2410651   +else do;
MPRINT(EM_DIAGRAM):   else do;
2410652   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2410653   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2410654   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2410655   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2410656   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2410657   +   end;
MPRINT(EM_DIAGRAM):   end;
2410658   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2410659   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2410660   +   end;
MPRINT(EM_DIAGRAM):   end;
2410661   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2410662   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2410663   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2410664   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2410665   +   end;
MPRINT(EM_DIAGRAM):   end;
2410666   +end;
MPRINT(EM_DIAGRAM):   end;
2410667   +
2410668   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2410669   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2410670   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2410671   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2410672   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2410673   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2410674   +end;
MPRINT(EM_DIAGRAM):   end;
2410675   +else do;
MPRINT(EM_DIAGRAM):   else do;
2410676   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2410677   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2410678   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2410679   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2410680   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2410681   +   end;
MPRINT(EM_DIAGRAM):   end;
2410682   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2410683   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2410684   +   end;
MPRINT(EM_DIAGRAM):   end;
2410685   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2410686   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2410687   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2410688   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2410689   +   end;
MPRINT(EM_DIAGRAM):   end;
2410690   +end;
MPRINT(EM_DIAGRAM):   end;
2410691   +
2410692   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2410693   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
2410694   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2410695   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2410696   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2410697   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2410698   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2410699   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2410700   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2410701   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2410702   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2410703   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2410704   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2410705   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2410706   +end;
MPRINT(EM_DIAGRAM):   end;
2410707   +else do;
MPRINT(EM_DIAGRAM):   else do;
2410708   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2410709   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2410710   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2410711   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2410712   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2410713   +   end;
MPRINT(EM_DIAGRAM):   end;
2410714   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2410715   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2410716   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2410717   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2410718   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2410719   +   end;
MPRINT(EM_DIAGRAM):   end;
2410720   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2410721   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2410722   +   end;
MPRINT(EM_DIAGRAM):   end;
2410723   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2410724   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2410725   +   end;
MPRINT(EM_DIAGRAM):   end;
2410726   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2410727   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2410728   +   end;
MPRINT(EM_DIAGRAM):   end;
2410729   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2410730   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2410731   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2410732   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2410733   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2410734   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2410735   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2410736   +   end;
MPRINT(EM_DIAGRAM):   end;
2410737   +end;
MPRINT(EM_DIAGRAM):   end;
2410738   +
2410739   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2410740   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2410741   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
2410742   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2410743   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2410744   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2410745   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2410746   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2410747   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2410748   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2410749   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2410750   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2410751   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2410752   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2410753   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2410754   +end;
MPRINT(EM_DIAGRAM):   end;
2410755   +else do;
MPRINT(EM_DIAGRAM):   else do;
2410756   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2410757   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2410758   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2410759   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2410760   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2410761   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2410762   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2410763   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2410764   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2410765   +         end;
MPRINT(EM_DIAGRAM):   end;
2410766   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2410767   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2410768   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2410769   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2410770   +            end;
MPRINT(EM_DIAGRAM):   end;
2410771   +         end;
MPRINT(EM_DIAGRAM):   end;
2410772   +      end;
MPRINT(EM_DIAGRAM):   end;
2410773   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2410774   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2410775   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2410776   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2410777   +         end;
MPRINT(EM_DIAGRAM):   end;
2410778   +      end;
MPRINT(EM_DIAGRAM):   end;
2410779   +   end;
MPRINT(EM_DIAGRAM):   end;
2410780   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2410781   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2410782   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2410783   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2410784   +      end;
MPRINT(EM_DIAGRAM):   end;
2410785   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2410786   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2410787   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2410788   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2410789   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2410790   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2410791   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2410792   +         end;
MPRINT(EM_DIAGRAM):   end;
2410793   +      end;
MPRINT(EM_DIAGRAM):   end;
2410794   +   end;
MPRINT(EM_DIAGRAM):   end;
2410795   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2410796   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2410797   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2410798   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2410799   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2410800   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2410801   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2410802   +   end;
MPRINT(EM_DIAGRAM):   end;
2410803   +end;
MPRINT(EM_DIAGRAM):   end;
2410804   +
2410805   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2410806   +*** Checking missing input Interval
2410807   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2410808   +
2410809   +IF NMISS(
2410810   +   AcceptedCmpTotal ,
2410811   +   Age ,
2410812   +   Frq ,
2410813   +   Income ,
2410814   +   Kidhome ,
2410815   +   Mnt ,
2410816   +   MntFishProducts ,
2410817   +   MntFruits ,
2410818   +   MntGoldProds ,
2410819   +   MntMeatProducts ,
2410820   +   MntSweetProducts ,
2410821   +   MntWines ,
2410822   +   MonthsAsCustomer ,
2410823   +   NumCatalogPurchases ,
2410824   +   NumDealsPurchases ,
2410825   +   NumDistPurchases ,
2410826   +   NumStorePurchases ,
2410827   +   NumWebPurchases ,
2410828   +   NumWebVisitsMonth ,
2410829   +   RFMstat ,
2410830   +   RMntFrq ,
2410831   +   Recency ,
2410832   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
2410833   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2410834   +
2410835   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2410836   +END;
MPRINT(EM_DIAGRAM):   END;
2410837   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2410838   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2410839   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2410840   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2410841   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2410842   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2410843   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2410844   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2410845   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2410846   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2410847   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2410848   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2410849   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2410850   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2410851   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2410852   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2410853   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2410854   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2410855   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2410856   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2410857   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2410858   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2410859   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
The SAS System

2410860   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2410861   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2410862   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2410863   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2410864   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2410865   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2410866   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2410867   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2410868   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2410869   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2410870   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2410871   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2410872   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2410873   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2410874   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2410875   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2410876   +END;
MPRINT(EM_DIAGRAM):   END;
2410877   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2410878   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2410879   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2410880   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2410881   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2410882   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2410883   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2410884   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2410885   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2410886   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2410887   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2410888   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2410889   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2410890   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2410891   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2410892   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2410893   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2410894   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2410895   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2410896   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2410897   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2410898   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2410899   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
2410900   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2410901   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2410902   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2410903   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2410904   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2410905   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2410906   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2410907   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2410908   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2410909   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2410910   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
2410911   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2410912   +   ELSE S_NumCatalogPurchases
2410913   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2410914   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2410915   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2410916   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2410917   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2410918   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2410919   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2410920   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2410921   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2410922   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2410923   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2410924   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2410925   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2410926   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2410927   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2410928   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2410929   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2410930   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2410931   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2410932   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2410933   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2410934   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2410935   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2410936   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2410937   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2410938   +END;
MPRINT(EM_DIAGRAM):   END;
2410939   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2410940   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2410941   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2410942   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2410943   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2410944   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2410945   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2410946   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2410947   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2410948   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2410949   +   H1x1_1  =    -0.08478534961354 * S_AcceptedCmpTotal
2410950   +          +     0.21528166003219 * S_Age  +    -0.16079737422774 * S_Frq
2410951   +          +     0.04922044955183 * S_Income  +     0.06245849112135 *
2410952   +        S_Kidhome  +    -0.12820970008154 * S_Mnt  +    -0.00676959308959 *
2410953   +        S_MntFishProducts  +    -0.20367403957375 * S_MntFruits
2410954   +          +    -0.06459558558968 * S_MntGoldProds  +     0.01557669100416 *
2410955   +        S_MntMeatProducts  +    -0.16342003924117 * S_MntSweetProducts
2410956   +          +     0.34676276369853 * S_MntWines  +    -0.08454570225616 *
2410957   +        S_MonthsAsCustomer  +    -0.00318885387905 * S_NumCatalogPurchases
2410958   +          +      0.1112677116841 * S_NumDealsPurchases
2410959   +          +     0.01563584187072 * S_NumDistPurchases
2410960   +          +     0.19193969522995 * S_NumStorePurchases
2410961   +          +      0.3133556199984 * S_NumWebPurchases
2410962   +          +    -0.21884874785716 * S_NumWebVisitsMonth
2410963   +          +     0.08478875792216 * S_RFMstat  +     0.05964414665285 *
2410964   +        S_RMntFrq  +    -0.12595000497726 * S_Recency
2410965   +          +     -0.1238719414537 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.08478534961354 * S_AcceptedCmpTotal + 0.21528166003219 * 
S_Age + -0.16079737422774 * S_Frq + 0.04922044955183 * S_Income + 0.06245849112135 * S_Kidhome 
+ -0.12820970008154 * S_Mnt + -0.00676959308959 * S_MntFishProducts + -0.20367403957375 * 
S_MntFruits + -0.06459558558968 * S_MntGoldProds + 0.01557669100416 * S_MntMeatProducts + 
-0.16342003924117 * S_MntSweetProducts + 0.34676276369853 * S_MntWines + -0.08454570225616 * 
S_MonthsAsCustomer + -0.00318885387905 * S_NumCatalogPurchases + 0.1112677116841 * 
S_NumDealsPurchases + 0.01563584187072 * S_NumDistPurchases + 0.19193969522995 * 
S_NumStorePurchases + 0.3133556199984 * S_NumWebPurchases + -0.21884874785716 * 
S_NumWebVisitsMonth + 0.08478875792216 * S_RFMstat + 0.05964414665285 * S_RMntFrq + 
-0.12595000497726 * S_Recency + -0.1238719414537 * S_Teenhome ;
2410966   +   H1x1_2  =     0.20807487357943 * S_AcceptedCmpTotal
2410967   +          +    -0.27223051908987 * S_Age  +     0.28649391533674 * S_Frq
2410968   +          +     0.46493719675068 * S_Income  +     0.10180542910079 *
2410969   +        S_Kidhome  +    -0.19573056673819 * S_Mnt  +    -0.05332725327514 *
2410970   +        S_MntFishProducts  +    -0.28610692329433 * S_MntFruits
2410971   +          +    -0.13417237194849 * S_MntGoldProds  +     0.45697707494335 *
2410972   +        S_MntMeatProducts  +    -0.28280545785477 * S_MntSweetProducts
2410973   +          +    -0.13234920069688 * S_MntWines  +     -0.2710938018651 *
2410974   +        S_MonthsAsCustomer  +     0.31174284041905 * S_NumCatalogPurchases
2410975   +          +     0.30225032753275 * S_NumDealsPurchases
2410976   +          +     0.33833359923595 * S_NumDistPurchases
2410977   +          +    -0.20255599575849 * S_NumStorePurchases
2410978   +          +    -0.12040071168942 * S_NumWebPurchases
2410979   +          +    -0.12407090307061 * S_NumWebVisitsMonth
2410980   +          +    -0.05688936259515 * S_RFMstat  +     0.15514736649245 *
2410981   +        S_RMntFrq  +     0.00838555462657 * S_Recency
2410982   +          +     0.04609426861136 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.20807487357943 * S_AcceptedCmpTotal + -0.27223051908987 * 
S_Age + 0.28649391533674 * S_Frq + 0.46493719675068 * S_Income + 0.10180542910079 * S_Kidhome 
+ -0.19573056673819 * S_Mnt + -0.05332725327514 * S_MntFishProducts + -0.28610692329433 * 
S_MntFruits + -0.13417237194849 * S_MntGoldProds + 0.45697707494335 * S_MntMeatProducts + 
-0.28280545785477 * S_MntSweetProducts + -0.13234920069688 * S_MntWines + -0.2710938018651 * 
S_MonthsAsCustomer + 0.31174284041905 * S_NumCatalogPurchases + 0.30225032753275 * 
S_NumDealsPurchases + 0.33833359923595 * S_NumDistPurchases + -0.20255599575849 * 
S_NumStorePurchases + -0.12040071168942 * S_NumWebPurchases + -0.12407090307061 * 
S_NumWebVisitsMonth + -0.05688936259515 * S_RFMstat + 0.15514736649245 * S_RMntFrq + 
0.00838555462657 * S_Recency + 0.04609426861136 * S_Teenhome ;
2410983   +   H1x1_3  =    -0.30541463116928 * S_AcceptedCmpTotal
2410984   +          +    -0.01746117216025 * S_Age  +    -0.44156473334329 * S_Frq
2410985   +          +    -0.51952426304193 * S_Income  +     0.20419921255777 *
2410986   +        S_Kidhome  +    -0.18174316707953 * S_Mnt  +    -0.03813675536406 *
2410987   +        S_MntFishProducts  +     -0.0959023413712 * S_MntFruits
2410988   +          +     0.12724081783278 * S_MntGoldProds  +    -0.07639148541426 *
2410989   +        S_MntMeatProducts  +     -0.0797214413833 * S_MntSweetProducts
2410990   +          +    -0.57705931875808 * S_MntWines  +    -0.12638551201991 *
2410991   +        S_MonthsAsCustomer  +    -0.21854676704549 * S_NumCatalogPurchases
2410992   +          +     0.16792903091627 * S_NumDealsPurchases
2410993   +          +    -0.37408945626745 * S_NumDistPurchases
2410994   +          +    -0.18067262995566 * S_NumStorePurchases
2410995   +          +     0.21192146789881 * S_NumWebPurchases
2410996   +          +    -0.23547702310669 * S_NumWebVisitsMonth
2410997   +          +    -0.02272089758813 * S_RFMstat  +    -0.16409330281075 *
2410998   +        S_RMntFrq  +     0.45021846112946 * S_Recency
2410999   +          +     0.32988735727394 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.30541463116928 * S_AcceptedCmpTotal + -0.01746117216025 * 
S_Age + -0.44156473334329 * S_Frq + -0.51952426304193 * S_Income + 0.20419921255777 * 
S_Kidhome + -0.18174316707953 * S_Mnt + -0.03813675536406 * S_MntFishProducts + 
-0.0959023413712 * S_MntFruits + 0.12724081783278 * S_MntGoldProds + -0.07639148541426 * 
S_MntMeatProducts + -0.0797214413833 * S_MntSweetProducts + -0.57705931875808 * S_MntWines + 
-0.12638551201991 * S_MonthsAsCustomer + -0.21854676704549 * S_NumCatalogPurchases + 
0.16792903091627 * S_NumDealsPurchases + -0.37408945626745 * S_NumDistPurchases + 
-0.18067262995566 * S_NumStorePurchases + 0.21192146789881 * S_NumWebPurchases + 
-0.23547702310669 * S_NumWebVisitsMonth + -0.02272089758813 * S_RFMstat + -0.16409330281075 * 
S_RMntFrq + 0.45021846112946 * S_Recency + 0.32988735727394 * S_Teenhome ;
2411000   +   H1x1_4  =     0.05205198916717 * S_AcceptedCmpTotal
2411001   +          +     0.25568653619739 * S_Age  +    -0.31037252146959 * S_Frq
2411002   +          +     0.42636025358982 * S_Income  +    -0.24453708980866 *
2411003   +        S_Kidhome  +    -0.07832530945892 * S_Mnt  +    -0.48332124476182 *
2411004   +        S_MntFishProducts  +    -0.13932879119138 * S_MntFruits
2411005   +          +      0.1984121566988 * S_MntGoldProds  +     1.14965897015972 *
2411006   +        S_MntMeatProducts  +     0.07027485457428 * S_MntSweetProducts
2411007   +          +    -0.56598097754046 * S_MntWines  +     0.07317190938075 *
2411008   +        S_MonthsAsCustomer  +       0.075756987983 * S_NumCatalogPurchases
2411009   +          +     0.29407429399136 * S_NumDealsPurchases
2411010   +          +     0.01610745252195 * S_NumDistPurchases
2411011   +          +    -0.17767939085628 * S_NumStorePurchases
2411012   +          +    -0.15168958538637 * S_NumWebPurchases
2411013   +          +     0.17433622143988 * S_NumWebVisitsMonth
2411014   +          +     0.11635602973993 * S_RFMstat  +     0.32632751843433 *
2411015   +        S_RMntFrq  +    -0.24758483374458 * S_Recency
2411016   +          +    -0.31468291567479 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.05205198916717 * S_AcceptedCmpTotal + 0.25568653619739 * 
S_Age + -0.31037252146959 * S_Frq + 0.42636025358982 * S_Income + -0.24453708980866 * 
S_Kidhome + -0.07832530945892 * S_Mnt + -0.48332124476182 * S_MntFishProducts + 
-0.13932879119138 * S_MntFruits + 0.1984121566988 * S_MntGoldProds + 1.14965897015972 * 
S_MntMeatProducts + 0.07027485457428 * S_MntSweetProducts + -0.56598097754046 * S_MntWines + 
0.07317190938075 * S_MonthsAsCustomer + 0.075756987983 * S_NumCatalogPurchases + 
0.29407429399136 * S_NumDealsPurchases + 0.01610745252195 * S_NumDistPurchases + 
-0.17767939085628 * S_NumStorePurchases + -0.15168958538637 * S_NumWebPurchases + 
0.17433622143988 * S_NumWebVisitsMonth + 0.11635602973993 * S_RFMstat + 0.32632751843433 * 
S_RMntFrq + -0.24758483374458 * S_Recency + -0.31468291567479 * S_Teenhome ;
2411017   +   H1x1_5  =    -0.59657492903543 * S_AcceptedCmpTotal
2411018   +          +     0.23513672763458 * S_Age  +    -0.14882104210954 * S_Frq
2411019   +          +    -0.07762660201035 * S_Income  +     0.01424651904783 *
2411020   +        S_Kidhome  +     0.18748607813081 * S_Mnt  +     0.11088464897095 *
2411021   +        S_MntFishProducts  +    -0.10064450211557 * S_MntFruits
2411022   +          +     0.11161391354421 * S_MntGoldProds  +    -1.36345407290644 *
2411023   +        S_MntMeatProducts  +     0.04868729717044 * S_MntSweetProducts
2411024   +          +     0.80284342329654 * S_MntWines  +     -0.0179539622492 *
2411025   +        S_MonthsAsCustomer  +    -0.60051908798715 * S_NumCatalogPurchases
2411026   +          +    -0.37976451362108 * S_NumDealsPurchases
2411027   +          +    -0.17027731520801 * S_NumDistPurchases
2411028   +          +     0.59849493667087 * S_NumStorePurchases
2411029   +          +     0.65481480560301 * S_NumWebPurchases
2411030   +          +    -0.68253224576609 * S_NumWebVisitsMonth
2411031   +          +    -0.16723490165629 * S_RFMstat  +    -0.10533797887644 *
2411032   +        S_RMntFrq  +     0.81382723915873 * S_Recency
2411033   +          +     0.06049401205856 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.59657492903543 * S_AcceptedCmpTotal + 0.23513672763458 * 
S_Age + -0.14882104210954 * S_Frq + -0.07762660201035 * S_Income + 0.01424651904783 * 
S_Kidhome + 0.18748607813081 * S_Mnt + 0.11088464897095 * S_MntFishProducts + 
-0.10064450211557 * S_MntFruits + 0.11161391354421 * S_MntGoldProds + -1.36345407290644 * 
S_MntMeatProducts + 0.04868729717044 * S_MntSweetProducts + 0.80284342329654 * S_MntWines + 
-0.0179539622492 * S_MonthsAsCustomer + -0.60051908798715 * S_NumCatalogPurchases + 
-0.37976451362108 * S_NumDealsPurchases + -0.17027731520801 * S_NumDistPurchases + 
0.59849493667087 * S_NumStorePurchases + 0.65481480560301 * S_NumWebPurchases + 
-0.68253224576609 * S_NumWebVisitsMonth + -0.16723490165629 * S_RFMstat + -0.10533797887644 * 
S_RMntFrq + 0.81382723915873 * S_Recency + 0.06049401205856 * S_Teenhome ;
2411034   +   H1x1_6  =    -0.07547841798202 * S_AcceptedCmpTotal
2411035   +          +     0.22445278254589 * S_Age  +    -0.26357481075143 * S_Frq
2411036   +          +     0.06894154144261 * S_Income  +     0.20713236126681 *
2411037   +        S_Kidhome  +    -0.14103612934526 * S_Mnt  +     0.36334508557452 *
2411038   +        S_MntFishProducts  +    -0.20862425337296 * S_MntFruits
2411039   +          +    -0.29089690099273 * S_MntGoldProds  +     0.11336893090527 *
2411040   +        S_MntMeatProducts  +    -0.13547374281924 * S_MntSweetProducts
2411041   +          +     0.02228828195539 * S_MntWines  +    -0.19257650420334 *
2411042   +        S_MonthsAsCustomer  +      0.1365526319824 * S_NumCatalogPurchases
2411043   +          +    -0.07686699131623 * S_NumDealsPurchases
2411044   +          +    -0.07220460738926 * S_NumDistPurchases
2411045   +          +    -0.06554027468389 * S_NumStorePurchases
2411046   +          +     0.10422838158001 * S_NumWebPurchases
2411047   +          +    -0.03858550147892 * S_NumWebVisitsMonth
2411048   +          +    -0.06397448441373 * S_RFMstat  +     0.21747838287147 *
2411049   +        S_RMntFrq  +     0.24839313159913 * S_Recency
2411050   +          +    -0.06317317698653 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -0.07547841798202 * S_AcceptedCmpTotal + 0.22445278254589 * 
S_Age + -0.26357481075143 * S_Frq + 0.06894154144261 * S_Income + 0.20713236126681 * S_Kidhome 
+ -0.14103612934526 * S_Mnt + 0.36334508557452 * S_MntFishProducts + -0.20862425337296 * 
S_MntFruits + -0.29089690099273 * S_MntGoldProds + 0.11336893090527 * S_MntMeatProducts + 
-0.13547374281924 * S_MntSweetProducts + 0.02228828195539 * S_MntWines + -0.19257650420334 * 
S_MonthsAsCustomer + 0.1365526319824 * S_NumCatalogPurchases + -0.07686699131623 * 
S_NumDealsPurchases + -0.07220460738926 * S_NumDistPurchases + -0.06554027468389 * 
S_NumStorePurchases + 0.10422838158001 * S_NumWebPurchases + -0.03858550147892 * 
S_NumWebVisitsMonth + -0.06397448441373 * S_RFMstat + 0.21747838287147 * S_RMntFrq + 
0.24839313159913 * S_Recency + -0.06317317698653 * S_Teenhome ;
2411051   +   H1x1_7  =    -0.08604903695444 * S_AcceptedCmpTotal
2411052   +          +    -0.14807437541992 * S_Age  +     0.01466157584549 * S_Frq
2411053   +          +    -0.09883966180507 * S_Income  +     0.51992566778352 *
2411054   +        S_Kidhome  +     0.29795006703636 * S_Mnt  +    -0.08922020500011 *
2411055   +        S_MntFishProducts  +     0.19836834402079 * S_MntFruits
2411056   +          +    -0.11292241468378 * S_MntGoldProds  +       0.584464452194 *
2411057   +        S_MntMeatProducts  +     0.22625326024073 * S_MntSweetProducts
2411058   +          +     0.24074129944382 * S_MntWines  +     0.13538906557527 *
2411059   +        S_MonthsAsCustomer  +    -0.01228250248922 * S_NumCatalogPurchases
2411060   +          +    -0.07920122387563 * S_NumDealsPurchases
2411061   +          +      0.3649244061347 * S_NumDistPurchases
2411062   +          +     0.36475853688403 * S_NumStorePurchases
2411063   +          +     0.02153991404063 * S_NumWebPurchases
2411064   +          +    -0.94080669139388 * S_NumWebVisitsMonth
2411065   +          +     0.24853677977494 * S_RFMstat  +     0.37015183933951 *
2411066   +        S_RMntFrq  +      0.6724157721663 * S_Recency
2411067   +          +      0.1615471643866 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_7 = -0.08604903695444 * S_AcceptedCmpTotal + -0.14807437541992 * 
S_Age + 0.01466157584549 * S_Frq + -0.09883966180507 * S_Income + 0.51992566778352 * S_Kidhome 
+ 0.29795006703636 * S_Mnt + -0.08922020500011 * S_MntFishProducts + 0.19836834402079 * 
S_MntFruits + -0.11292241468378 * S_MntGoldProds + 0.584464452194 * S_MntMeatProducts + 
0.22625326024073 * S_MntSweetProducts + 0.24074129944382 * S_MntWines + 0.13538906557527 * 
S_MonthsAsCustomer + -0.01228250248922 * S_NumCatalogPurchases + -0.07920122387563 * 
S_NumDealsPurchases + 0.3649244061347 * S_NumDistPurchases + 0.36475853688403 * 
S_NumStorePurchases + 0.02153991404063 * S_NumWebPurchases + -0.94080669139388 * 
S_NumWebVisitsMonth + 0.24853677977494 * S_RFMstat + 0.37015183933951 * S_RMntFrq + 
0.6724157721663 * S_Recency + 0.1615471643866 * S_Teenhome ;
2411068   +   H1x1_1  = H1x1_1  +     0.04431608362128 * AcceptedCmp10
2411069   +          +       0.145592087795 * AcceptedCmp20  +    -0.18972867139938 *
2411070   +        AcceptedCmp30  +     0.11297731320888 * AcceptedCmp40
2411071   +          +     0.15203974410995 * AcceptedCmp50  +     0.05130421316428 *
2411072   +        Complain0  +     0.33576036450343 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.04431608362128 * AcceptedCmp10 + 0.145592087795 * 
AcceptedCmp20 + -0.18972867139938 * AcceptedCmp30 + 0.11297731320888 * AcceptedCmp40 + 
0.15203974410995 * AcceptedCmp50 + 0.05130421316428 * Complain0 + 0.33576036450343 * 
HigherEducationBinary0 ;
2411073   +   H1x1_2  = H1x1_2  +    -0.05495742609855 * AcceptedCmp10
2411074   +          +    -0.08873650760176 * AcceptedCmp20  +    -0.16380549867313 *
2411075   +        AcceptedCmp30  +    -0.24495261884932 * AcceptedCmp40
2411076   +          +    -0.22199506896148 * AcceptedCmp50  +       0.149484615172 *
2411077   +        Complain0  +     0.01091791142552 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.05495742609855 * AcceptedCmp10 + -0.08873650760176 
* AcceptedCmp20 + -0.16380549867313 * AcceptedCmp30 + -0.24495261884932 * AcceptedCmp40 + 
-0.22199506896148 * AcceptedCmp50 + 0.149484615172 * Complain0 + 0.01091791142552 * 
HigherEducationBinary0 ;
2411078   +   H1x1_3  = H1x1_3  +     0.03473702421341 * AcceptedCmp10
2411079   +          +    -0.11226718065217 * AcceptedCmp20  +     0.19024579384296 *
2411080   +        AcceptedCmp30  +     0.15478548865598 * AcceptedCmp40
2411081   +          +     0.15222823671897 * AcceptedCmp50  +     0.07713012834947 *
2411082   +        Complain0  +    -0.18741708707661 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.03473702421341 * AcceptedCmp10 + -0.11226718065217 * 
AcceptedCmp20 + 0.19024579384296 * AcceptedCmp30 + 0.15478548865598 * AcceptedCmp40 + 
0.15222823671897 * AcceptedCmp50 + 0.07713012834947 * Complain0 + -0.18741708707661 * 
HigherEducationBinary0 ;
2411083   +   H1x1_4  = H1x1_4  +    -0.25622127302429 * AcceptedCmp10
2411084   +          +    -0.39059103518073 * AcceptedCmp20  +    -0.29716603631807 *
2411085   +        AcceptedCmp30  +    -0.20875694971526 * AcceptedCmp40
2411086   +          +    -0.35128787139073 * AcceptedCmp50  +    -0.28848733462386 *
2411087   +        Complain0  +      0.4276503747649 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.25622127302429 * AcceptedCmp10 + -0.39059103518073 
* AcceptedCmp20 + -0.29716603631807 * AcceptedCmp30 + -0.20875694971526 * AcceptedCmp40 + 
-0.35128787139073 * AcceptedCmp50 + -0.28848733462386 * Complain0 + 0.4276503747649 * 
HigherEducationBinary0 ;
2411088   +   H1x1_5  = H1x1_5  +    -0.06574875851088 * AcceptedCmp10
2411089   +          +    -0.27375195259265 * AcceptedCmp20  +     -0.2740681662293 *
2411090   +        AcceptedCmp30  +    -0.14697156898736 * AcceptedCmp40
2411091   +          +     0.17684649468835 * AcceptedCmp50  +    -0.09979172944646 *
2411092   +        Complain0  +     0.38986664202197 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.06574875851088 * AcceptedCmp10 + -0.27375195259265 
* AcceptedCmp20 + -0.2740681662293 * AcceptedCmp30 + -0.14697156898736 * AcceptedCmp40 + 
0.17684649468835 * AcceptedCmp50 + -0.09979172944646 * Complain0 + 0.38986664202197 * 
HigherEducationBinary0 ;
2411093   +   H1x1_6  = H1x1_6  +     0.08696678529441 * AcceptedCmp10
2411094   +          +     0.09467543942215 * AcceptedCmp20  +     0.04586779705477 *
2411095   +        AcceptedCmp30  +    -0.12591921836379 * AcceptedCmp40
2411096   +          +     0.20150138392895 * AcceptedCmp50  +     0.27764282700214 *
2411097   +        Complain0  +     0.13985738522066 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + 0.08696678529441 * AcceptedCmp10 + 0.09467543942215 * 
AcceptedCmp20 + 0.04586779705477 * AcceptedCmp30 + -0.12591921836379 * AcceptedCmp40 + 
0.20150138392895 * AcceptedCmp50 + 0.27764282700214 * Complain0 + 0.13985738522066 * 
HigherEducationBinary0 ;
2411098   +   H1x1_7  = H1x1_7  +    -0.10455069401218 * AcceptedCmp10
2411099   +          +      0.1311831941372 * AcceptedCmp20  +     0.17844209104604 *
2411100   +        AcceptedCmp30  +     0.19406707592815 * AcceptedCmp40
2411101   +          +    -0.00068155012319 * AcceptedCmp50  +     0.13245364846536 *
2411102   +        Complain0  +    -0.05165256160872 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_7 = H1x1_7 + -0.10455069401218 * AcceptedCmp10 + 0.1311831941372 * 
AcceptedCmp20 + 0.17844209104604 * AcceptedCmp30 + 0.19406707592815 * AcceptedCmp40 + 
-0.00068155012319 * AcceptedCmp50 + 0.13245364846536 * Complain0 + -0.05165256160872 * 
HigherEducationBinary0 ;
2411103   +   H1x1_1  = H1x1_1  +     0.28967939808759 * Education2n_Cycle
2411104   +          +    -0.15795056374781 * EducationBasic  +    -0.00649803471307 *
2411105   +        EducationGraduation  +     0.19520715924532 * EducationMaster
2411106   +          +     0.07744097241553 * Marital_StatusDivorced
2411107   +          +     -0.0247463100385 * Marital_StatusMarried
2411108   +          +     0.05804915234573 * Marital_StatusSingle
2411109   +          +    -0.08320125047871 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.28967939808759 * Education2n_Cycle + 
-0.15795056374781 * EducationBasic + -0.00649803471307 * EducationGraduation + 
0.19520715924532 * EducationMaster + 0.07744097241553 * Marital_StatusDivorced + 
-0.0247463100385 * Marital_StatusMarried + 0.05804915234573 * Marital_StatusSingle + 
-0.08320125047871 * Marital_StatusTogether ;
2411110   +   H1x1_2  = H1x1_2  +     0.12524444422085 * Education2n_Cycle
2411111   +          +    -0.30278286924729 * EducationBasic  +     0.37480827366421 *
2411112   +        EducationGraduation  +     0.34209136290694 * EducationMaster
2411113   +          +     0.01390668926269 * Marital_StatusDivorced
2411114   +          +     0.01136282152074 * Marital_StatusMarried
2411115   +          +     0.12450246418789 * Marital_StatusSingle
2411116   +          +     -0.1576148519872 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.12524444422085 * Education2n_Cycle + 
-0.30278286924729 * EducationBasic + 0.37480827366421 * EducationGraduation + 0.34209136290694 
* EducationMaster + 0.01390668926269 * Marital_StatusDivorced + 0.01136282152074 * 
Marital_StatusMarried + 0.12450246418789 * Marital_StatusSingle + -0.1576148519872 * 
Marital_StatusTogether ;
2411117   +   H1x1_3  = H1x1_3  +    -0.14589041643593 * Education2n_Cycle
2411118   +          +    -0.15691118816463 * EducationBasic  +      0.1993616073183 *
2411119   +        EducationGraduation  +     0.02862010255145 * EducationMaster
2411120   +          +    -0.19133456931879 * Marital_StatusDivorced
2411121   +          +     0.56263566654996 * Marital_StatusMarried
2411122   +          +    -0.42172822038882 * Marital_StatusSingle
2411123   +          +     0.42023140643292 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.14589041643593 * Education2n_Cycle + 
-0.15691118816463 * EducationBasic + 0.1993616073183 * EducationGraduation + 0.02862010255145 
* EducationMaster + -0.19133456931879 * Marital_StatusDivorced + 0.56263566654996 * 
Marital_StatusMarried + -0.42172822038882 * Marital_StatusSingle + 0.42023140643292 * 
Marital_StatusTogether ;
2411124   +   H1x1_4  = H1x1_4  +     0.10038585978656 * Education2n_Cycle
2411125   +          +    -0.11388609002984 * EducationBasic  +    -0.14980553500983 *
2411126   +        EducationGraduation  +    -0.07646595330369 * EducationMaster
2411127   +          +    -0.19871205065609 * Marital_StatusDivorced
2411128   +          +    -0.14730795681603 * Marital_StatusMarried
2411129   +          +     0.05055432510362 * Marital_StatusSingle
2411130   +          +     0.06558965292395 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.10038585978656 * Education2n_Cycle + 
-0.11388609002984 * EducationBasic + -0.14980553500983 * EducationGraduation + 
-0.07646595330369 * EducationMaster + -0.19871205065609 * Marital_StatusDivorced + 
-0.14730795681603 * Marital_StatusMarried + 0.05055432510362 * Marital_StatusSingle + 
0.06558965292395 * Marital_StatusTogether ;
2411131   +   H1x1_5  = H1x1_5  +      0.0015835307855 * Education2n_Cycle
2411132   +          +    -0.22658746797638 * EducationBasic  +    -0.03445982386977 *
2411133   +        EducationGraduation  +     0.11375378192685 * EducationMaster
2411134   +          +    -0.35623807358995 * Marital_StatusDivorced
2411135   +          +     0.30324726283965 * Marital_StatusMarried
2411136   +          +    -0.18561093467927 * Marital_StatusSingle
2411137   +          +       0.395424582152 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 0.0015835307855 * Education2n_Cycle + 
-0.22658746797638 * EducationBasic + -0.03445982386977 * EducationGraduation + 
0.11375378192685 * EducationMaster + -0.35623807358995 * Marital_StatusDivorced + 
0.30324726283965 * Marital_StatusMarried + -0.18561093467927 * Marital_StatusSingle + 
0.395424582152 * Marital_StatusTogether ;
2411138   +   H1x1_6  = H1x1_6  +    -0.23751822587858 * Education2n_Cycle
2411139   +          +    -0.01687300040825 * EducationBasic  +     0.23236967703011 *
2411140   +        EducationGraduation  +      0.0725289831541 * EducationMaster
2411141   +          +     0.11581014663368 * Marital_StatusDivorced
2411142   +          +    -0.31070638037659 * Marital_StatusMarried
2411143   +          +     0.17131747253949 * Marital_StatusSingle
2411144   +          +    -0.19314955966476 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + -0.23751822587858 * Education2n_Cycle + 
-0.01687300040825 * EducationBasic + 0.23236967703011 * EducationGraduation + 0.0725289831541 
* EducationMaster + 0.11581014663368 * Marital_StatusDivorced + -0.31070638037659 * 
Marital_StatusMarried + 0.17131747253949 * Marital_StatusSingle + -0.19314955966476 * 
Marital_StatusTogether ;
2411145   +   H1x1_7  = H1x1_7  +     0.00103693282479 * Education2n_Cycle
2411146   +          +     0.12608909598752 * EducationBasic  +     -0.2366673091666 *
2411147   +        EducationGraduation  +     0.24413217290922 * EducationMaster
2411148   +          +    -0.42450599871892 * Marital_StatusDivorced
2411149   +          +     0.48162905075885 * Marital_StatusMarried
2411150   +          +    -0.26618507749283 * Marital_StatusSingle
2411151   +          +     0.38053668740338 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_7 = H1x1_7 + 0.00103693282479 * Education2n_Cycle + 
0.12608909598752 * EducationBasic + -0.2366673091666 * EducationGraduation + 0.24413217290922 
* EducationMaster + -0.42450599871892 * Marital_StatusDivorced + 0.48162905075885 * 
Marital_StatusMarried + -0.26618507749283 * Marital_StatusSingle + 0.38053668740338 * 
Marital_StatusTogether ;
2411152   +   H1x1_1  =     0.12149136705075 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.12149136705075 + H1x1_1 ;
2411153   +   H1x1_2  =    -0.97489696657001 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.97489696657001 + H1x1_2 ;
2411154   +   H1x1_3  =    -0.70605220802968 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.70605220802968 + H1x1_3 ;
2411155   +   H1x1_4  =    -1.07783206982379 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -1.07783206982379 + H1x1_4 ;
2411156   +   H1x1_5  =    -1.00400706261511 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.00400706261511 + H1x1_5 ;
2411157   +   H1x1_6  =     0.22600488314839 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0.22600488314839 + H1x1_6 ;
2411158   +   H1x1_7  =     1.55642446968077 + H1x1_7 ;
MPRINT(EM_DIAGRAM):   H1x1_7 = 1.55642446968077 + H1x1_7 ;
2411159   +   _EPS = SQRT(CONSTANT('MACEPS')) ;
MPRINT(EM_DIAGRAM):   _EPS = SQRT(CONSTANT('MACEPS')) ;
2411160   +   _REC_EPS = 1/_EPS ;
MPRINT(EM_DIAGRAM):   _REC_EPS = 1/_EPS ;
2411161   +   DROP _REC_EPS _EPS ;
MPRINT(EM_DIAGRAM):   DROP _REC_EPS _EPS ;
2411162   +   IF H1x1_1  < _REC_EPS AND H1x1_1  > - _REC_EPS THEN
2411163   +   H1x1_1  = H1x1_1  * H1x1_1 ;
MPRINT(EM_DIAGRAM):   IF H1x1_1 < _REC_EPS AND H1x1_1 > - _REC_EPS THEN H1x1_1 = H1x1_1 * 
H1x1_1 ;
2411164   +   ELSE H1x1_1  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_1 = _REC_EPS ;
2411165   +   IF H1x1_2  < _REC_EPS AND H1x1_2  > - _REC_EPS THEN
2411166   +   H1x1_2  = H1x1_2  * H1x1_2 ;
MPRINT(EM_DIAGRAM):   IF H1x1_2 < _REC_EPS AND H1x1_2 > - _REC_EPS THEN H1x1_2 = H1x1_2 * 
H1x1_2 ;
2411167   +   ELSE H1x1_2  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_2 = _REC_EPS ;
2411168   +   IF H1x1_3  < _REC_EPS AND H1x1_3  > - _REC_EPS THEN
2411169   +   H1x1_3  = H1x1_3  * H1x1_3 ;
MPRINT(EM_DIAGRAM):   IF H1x1_3 < _REC_EPS AND H1x1_3 > - _REC_EPS THEN H1x1_3 = H1x1_3 * 
H1x1_3 ;
2411170   +   ELSE H1x1_3  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_3 = _REC_EPS ;
2411171   +   IF H1x1_4  < _REC_EPS AND H1x1_4  > - _REC_EPS THEN
2411172   +   H1x1_4  = H1x1_4  * H1x1_4 ;
MPRINT(EM_DIAGRAM):   IF H1x1_4 < _REC_EPS AND H1x1_4 > - _REC_EPS THEN H1x1_4 = H1x1_4 * 
H1x1_4 ;
2411173   +   ELSE H1x1_4  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_4 = _REC_EPS ;
2411174   +   IF H1x1_5  < _REC_EPS AND H1x1_5  > - _REC_EPS THEN
2411175   +   H1x1_5  = H1x1_5  * H1x1_5 ;
MPRINT(EM_DIAGRAM):   IF H1x1_5 < _REC_EPS AND H1x1_5 > - _REC_EPS THEN H1x1_5 = H1x1_5 * 
H1x1_5 ;
2411176   +   ELSE H1x1_5  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_5 = _REC_EPS ;
2411177   +   IF H1x1_6  < _REC_EPS AND H1x1_6  > - _REC_EPS THEN
2411178   +   H1x1_6  = H1x1_6  * H1x1_6 ;
MPRINT(EM_DIAGRAM):   IF H1x1_6 < _REC_EPS AND H1x1_6 > - _REC_EPS THEN H1x1_6 = H1x1_6 * 
H1x1_6 ;
2411179   +   ELSE H1x1_6  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_6 = _REC_EPS ;
2411180   +   IF H1x1_7  < _REC_EPS AND H1x1_7  > - _REC_EPS THEN
2411181   +   H1x1_7  = H1x1_7  * H1x1_7 ;
MPRINT(EM_DIAGRAM):   IF H1x1_7 < _REC_EPS AND H1x1_7 > - _REC_EPS THEN H1x1_7 = H1x1_7 * 
H1x1_7 ;
2411182   +   ELSE H1x1_7  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_7 = _REC_EPS ;
2411183   +END;
MPRINT(EM_DIAGRAM):   END;
2411184   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2411185   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2411186   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2411187   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2411188   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2411189   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
2411190   +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
2411191   +   H1x1_7  = .;
MPRINT(EM_DIAGRAM):   H1x1_7 = .;
2411192   +END;
MPRINT(EM_DIAGRAM):   END;
2411193   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2411194   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
2411195   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2411196   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2411197   +   H1x2_1  =    -1.36226288448745 * S_AcceptedCmpTotal
2411198   +          +     -1.3328616352886 * S_Age  +     1.25346137866034 * S_Frq
2411199   +          +    -1.21746243786295 * S_Income  +     2.83911738158074 *
2411200   +        S_Kidhome  +    -0.60784009102409 * S_Mnt  +     1.57752173634223 *
2411201   +        S_MntFishProducts  +    -0.26776567401075 * S_MntFruits
2411202   +          +     1.09584731081081 * S_MntGoldProds  +     1.22333044103532 *
2411203   +        S_MntMeatProducts  +     0.42827942745016 * S_MntSweetProducts
2411204   +          +     0.67813472792448 * S_MntWines  +     0.56816492004798 *
2411205   +        S_MonthsAsCustomer  +     0.58113470399079 * S_NumCatalogPurchases
2411206   +          +     1.96719021971894 * S_NumDealsPurchases
2411207   +          +    -0.44535354794671 * S_NumDistPurchases
2411208   +          +    -0.54827762736866 * S_NumStorePurchases
2411209   +          +     1.02703310241897 * S_NumWebPurchases
2411210   +          +    -0.12526997502601 * S_NumWebVisitsMonth
2411211   +          +    -0.55803926383776 * S_RFMstat  +     0.01819380776809 *
2411212   +        S_RMntFrq  +       0.651688575044 * S_Recency
2411213   +          +     1.58682398186611 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -1.36226288448745 * S_AcceptedCmpTotal + -1.3328616352886 * 
S_Age + 1.25346137866034 * S_Frq + -1.21746243786295 * S_Income + 2.83911738158074 * S_Kidhome 
+ -0.60784009102409 * S_Mnt + 1.57752173634223 * S_MntFishProducts + -0.26776567401075 * 
S_MntFruits + 1.09584731081081 * S_MntGoldProds + 1.22333044103532 * S_MntMeatProducts + 
0.42827942745016 * S_MntSweetProducts + 0.67813472792448 * S_MntWines + 0.56816492004798 * 
S_MonthsAsCustomer + 0.58113470399079 * S_NumCatalogPurchases + 1.96719021971894 * 
S_NumDealsPurchases + -0.44535354794671 * S_NumDistPurchases + -0.54827762736866 * 
S_NumStorePurchases + 1.02703310241897 * S_NumWebPurchases + -0.12526997502601 * 
S_NumWebVisitsMonth + -0.55803926383776 * S_RFMstat + 0.01819380776809 * S_RMntFrq + 
0.651688575044 * S_Recency + 1.58682398186611 * S_Teenhome ;
2411214   +   H1x2_2  =    -0.38064507857029 * S_AcceptedCmpTotal
2411215   +          +    -0.49661801158351 * S_Age  +    -0.89589399799916 * S_Frq
2411216   +          +     -0.0121499288597 * S_Income  +    -0.48023022827846 *
2411217   +        S_Kidhome  +     -0.5183846206029 * S_Mnt  +    -3.13913899012334 *
2411218   +        S_MntFishProducts  +    -2.07291335687615 * S_MntFruits
2411219   +          +     0.51019753905662 * S_MntGoldProds  +     0.11458666377917 *
2411220   +        S_MntMeatProducts  +     -1.8499241966205 * S_MntSweetProducts
2411221   +          +     0.23160544044172 * S_MntWines  +    -0.48210626907943 *
2411222   +        S_MonthsAsCustomer  +     0.15500845227752 * S_NumCatalogPurchases
2411223   +          +     1.34659447971131 * S_NumDealsPurchases
2411224   +          +    -0.51624251310423 * S_NumDistPurchases
2411225   +          +      -1.283121574848 * S_NumStorePurchases
2411226   +          +    -1.83517806228926 * S_NumWebPurchases
2411227   +          +     0.51321339475285 * S_NumWebVisitsMonth
2411228   +          +    -1.86431704283342 * S_RFMstat  +    -1.52065204326569 *
2411229   +        S_RMntFrq  +    -0.33186055095462 * S_Recency
2411230   +          +    -0.49524729407054 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.38064507857029 * S_AcceptedCmpTotal + -0.49661801158351 * 
S_Age + -0.89589399799916 * S_Frq + -0.0121499288597 * S_Income + -0.48023022827846 * 
S_Kidhome + -0.5183846206029 * S_Mnt + -3.13913899012334 * S_MntFishProducts + 
-2.07291335687615 * S_MntFruits + 0.51019753905662 * S_MntGoldProds + 0.11458666377917 * 
S_MntMeatProducts + -1.8499241966205 * S_MntSweetProducts + 0.23160544044172 * S_MntWines + 
-0.48210626907943 * S_MonthsAsCustomer + 0.15500845227752 * S_NumCatalogPurchases + 
1.34659447971131 * S_NumDealsPurchases + -0.51624251310423 * S_NumDistPurchases + 
-1.283121574848 * S_NumStorePurchases + -1.83517806228926 * S_NumWebPurchases + 
0.51321339475285 * S_NumWebVisitsMonth + -1.86431704283342 * S_RFMstat + -1.52065204326569 * 
S_RMntFrq + -0.33186055095462 * S_Recency + -0.49524729407054 * S_Teenhome ;
2411231   +   H1x2_3  =    -0.75774003934728 * S_AcceptedCmpTotal
2411232   +          +    -0.85312030825337 * S_Age  +    -0.01726294458221 * S_Frq
2411233   +          +     0.58598267983786 * S_Income  +     1.30497766805554 *
2411234   +        S_Kidhome  +    -0.84214135491022 * S_Mnt  +     0.55305862453787 *
2411235   +        S_MntFishProducts  +      0.6488663613899 * S_MntFruits
2411236   +          +    -0.83189439197558 * S_MntGoldProds  +    -0.07500050412653 *
2411237   +        S_MntMeatProducts  +    -0.06401928810253 * S_MntSweetProducts
2411238   +          +      0.5940135658334 * S_MntWines  +    -0.04573352455984 *
2411239   +        S_MonthsAsCustomer  +    -1.53610650634069 * S_NumCatalogPurchases
2411240   +          +     0.67492297345004 * S_NumDealsPurchases
2411241   +          +    -0.40437875375926 * S_NumDistPurchases
2411242   +          +     0.36322603681545 * S_NumStorePurchases
2411243   +          +    -1.15315070635524 * S_NumWebPurchases
2411244   +          +     1.20707272201156 * S_NumWebVisitsMonth
2411245   +          +     0.12192566357285 * S_RFMstat  +    -0.46711219170047 *
2411246   +        S_RMntFrq  +     1.89703582493259 * S_Recency
2411247   +          +     1.07511942237188 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.75774003934728 * S_AcceptedCmpTotal + -0.85312030825337 * 
S_Age + -0.01726294458221 * S_Frq + 0.58598267983786 * S_Income + 1.30497766805554 * S_Kidhome 
+ -0.84214135491022 * S_Mnt + 0.55305862453787 * S_MntFishProducts + 0.6488663613899 * 
S_MntFruits + -0.83189439197558 * S_MntGoldProds + -0.07500050412653 * S_MntMeatProducts + 
-0.06401928810253 * S_MntSweetProducts + 0.5940135658334 * S_MntWines + -0.04573352455984 * 
S_MonthsAsCustomer + -1.53610650634069 * S_NumCatalogPurchases + 0.67492297345004 * 
S_NumDealsPurchases + -0.40437875375926 * S_NumDistPurchases + 0.36322603681545 * 
S_NumStorePurchases + -1.15315070635524 * S_NumWebPurchases + 1.20707272201156 * 
S_NumWebVisitsMonth + 0.12192566357285 * S_RFMstat + -0.46711219170047 * S_RMntFrq + 
1.89703582493259 * S_Recency + 1.07511942237188 * S_Teenhome ;
2411248   +   H1x2_4  =     0.62123819069495 * S_AcceptedCmpTotal
2411249   +          +     0.03399237520702 * S_Age  +    -0.01971421795338 * S_Frq
2411250   +          +    -0.54728266919056 * S_Income  +     -0.4634195771237 *
2411251   +        S_Kidhome  +    -1.19055247712911 * S_Mnt  +      1.4307770729159 *
2411252   +        S_MntFishProducts  +    -0.83895281276374 * S_MntFruits
2411253   +          +    -0.48578798244317 * S_MntGoldProds  +     -0.2846617807101 *
2411254   +        S_MntMeatProducts  +     0.70721686533987 * S_MntSweetProducts
2411255   +          +     1.32824513551741 * S_MntWines  +    -0.62654342755965 *
2411256   +        S_MonthsAsCustomer  +    -0.97245161056543 * S_NumCatalogPurchases
2411257   +          +    -0.41427983342148 * S_NumDealsPurchases
2411258   +          +    -0.22714305629205 * S_NumDistPurchases
2411259   +          +    -0.78763182048862 * S_NumStorePurchases
2411260   +          +    -0.26669253451501 * S_NumWebPurchases
2411261   +          +    -0.79601078616342 * S_NumWebVisitsMonth
2411262   +          +    -0.03863278696502 * S_RFMstat  +     0.95011556103056 *
2411263   +        S_RMntFrq  +     0.57184629262878 * S_Recency
2411264   +          +    -0.21560478702461 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.62123819069495 * S_AcceptedCmpTotal + 0.03399237520702 * 
S_Age + -0.01971421795338 * S_Frq + -0.54728266919056 * S_Income + -0.4634195771237 * 
S_Kidhome + -1.19055247712911 * S_Mnt + 1.4307770729159 * S_MntFishProducts + 
-0.83895281276374 * S_MntFruits + -0.48578798244317 * S_MntGoldProds + -0.2846617807101 * 
S_MntMeatProducts + 0.70721686533987 * S_MntSweetProducts + 1.32824513551741 * S_MntWines + 
-0.62654342755965 * S_MonthsAsCustomer + -0.97245161056543 * S_NumCatalogPurchases + 
-0.41427983342148 * S_NumDealsPurchases + -0.22714305629205 * S_NumDistPurchases + 
-0.78763182048862 * S_NumStorePurchases + -0.26669253451501 * S_NumWebPurchases + 
-0.79601078616342 * S_NumWebVisitsMonth + -0.03863278696502 * S_RFMstat + 0.95011556103056 * 
S_RMntFrq + 0.57184629262878 * S_Recency + -0.21560478702461 * S_Teenhome ;
2411265   +   H1x2_5  =     1.47906557745075 * S_AcceptedCmpTotal
2411266   +          +    -0.31060566334198 * S_Age  +     0.56472424389718 * S_Frq
2411267   +          +     2.16541682726249 * S_Income  +    -0.34119803841059 *
2411268   +        S_Kidhome  +    -0.53783050542796 * S_Mnt  +     0.54954821448236 *
2411269   +        S_MntFishProducts  +    -0.48449918837838 * S_MntFruits
2411270   +          +     0.29783052620672 * S_MntGoldProds  +    -0.15068954343013 *
2411271   +        S_MntMeatProducts  +     0.12733251381761 * S_MntSweetProducts
2411272   +          +    -2.46709166794296 * S_MntWines  +     -1.2011286508879 *
2411273   +        S_MonthsAsCustomer  +    -0.88194814936932 * S_NumCatalogPurchases
2411274   +          +      0.7697882092212 * S_NumDealsPurchases
2411275   +          +     0.51864835453056 * S_NumDistPurchases
2411276   +          +    -1.18320366630444 * S_NumStorePurchases
2411277   +          +     -0.6608394639529 * S_NumWebPurchases
2411278   +          +    -0.03948137707769 * S_NumWebVisitsMonth
2411279   +          +     1.01076462488608 * S_RFMstat  +    -0.91562280329354 *
2411280   +        S_RMntFrq  +    -1.07576669501238 * S_Recency
2411281   +          +     -0.5946628412106 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.47906557745075 * S_AcceptedCmpTotal + -0.31060566334198 * 
S_Age + 0.56472424389718 * S_Frq + 2.16541682726249 * S_Income + -0.34119803841059 * S_Kidhome 
+ -0.53783050542796 * S_Mnt + 0.54954821448236 * S_MntFishProducts + -0.48449918837838 * 
S_MntFruits + 0.29783052620672 * S_MntGoldProds + -0.15068954343013 * S_MntMeatProducts + 
0.12733251381761 * S_MntSweetProducts + -2.46709166794296 * S_MntWines + -1.2011286508879 * 
S_MonthsAsCustomer + -0.88194814936932 * S_NumCatalogPurchases + 0.7697882092212 * 
S_NumDealsPurchases + 0.51864835453056 * S_NumDistPurchases + -1.18320366630444 * 
S_NumStorePurchases + -0.6608394639529 * S_NumWebPurchases + -0.03948137707769 * 
S_NumWebVisitsMonth + 1.01076462488608 * S_RFMstat + -0.91562280329354 * S_RMntFrq + 
-1.07576669501238 * S_Recency + -0.5946628412106 * S_Teenhome ;
2411282   +   H1x2_6  =     0.42130900994246 * S_AcceptedCmpTotal
2411283   +          +     1.64256522546546 * S_Age  +    -0.31822237495441 * S_Frq
2411284   +          +     0.39698710846967 * S_Income  +    -1.30075584525681 *
2411285   +        S_Kidhome  +    -1.74733472316294 * S_Mnt  +    -1.04423575539078 *
2411286   +        S_MntFishProducts  +     0.28025913700744 * S_MntFruits
2411287   +          +     0.92062413073229 * S_MntGoldProds  +     0.38487452173084 *
2411288   +        S_MntMeatProducts  +     2.15808673418264 * S_MntSweetProducts
2411289   +          +     -0.5364274323591 * S_MntWines  +     0.64447858852609 *
2411290   +        S_MonthsAsCustomer  +     0.33683873873337 * S_NumCatalogPurchases
2411291   +          +     1.45707983202269 * S_NumDealsPurchases
2411292   +          +     0.83341887728641 * S_NumDistPurchases
2411293   +          +    -0.36664450469423 * S_NumStorePurchases
2411294   +          +     0.63911579043339 * S_NumWebPurchases
2411295   +          +     0.67144790303554 * S_NumWebVisitsMonth
2411296   +          +    -0.22124390112376 * S_RFMstat  +     1.72222071547971 *
2411297   +        S_RMntFrq  +    -0.02323382627271 * S_Recency
2411298   +          +    -0.09494567508522 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_6 = 0.42130900994246 * S_AcceptedCmpTotal + 1.64256522546546 * 
S_Age + -0.31822237495441 * S_Frq + 0.39698710846967 * S_Income + -1.30075584525681 * 
S_Kidhome + -1.74733472316294 * S_Mnt + -1.04423575539078 * S_MntFishProducts + 
0.28025913700744 * S_MntFruits + 0.92062413073229 * S_MntGoldProds + 0.38487452173084 * 
S_MntMeatProducts + 2.15808673418264 * S_MntSweetProducts + -0.5364274323591 * S_MntWines + 
0.64447858852609 * S_MonthsAsCustomer + 0.33683873873337 * S_NumCatalogPurchases + 
1.45707983202269 * S_NumDealsPurchases + 0.83341887728641 * S_NumDistPurchases + 
-0.36664450469423 * S_NumStorePurchases + 0.63911579043339 * S_NumWebPurchases + 
0.67144790303554 * S_NumWebVisitsMonth + -0.22124390112376 * S_RFMstat + 1.72222071547971 * 
S_RMntFrq + -0.02323382627271 * S_Recency + -0.09494567508522 * S_Teenhome ;
2411299   +   H1x2_7  =      0.0903330772553 * S_AcceptedCmpTotal
2411300   +          +     0.13217959089196 * S_Age  +     0.93600629225871 * S_Frq
2411301   +          +     1.23765169211392 * S_Income  +     1.27732984858098 *
2411302   +        S_Kidhome  +     1.54889765360944 * S_Mnt  +     0.84618173514761 *
2411303   +        S_MntFishProducts  +    -0.32044356786958 * S_MntFruits
2411304   +          +    -0.26357995597029 * S_MntGoldProds  +     0.53649229087334 *
2411305   +        S_MntMeatProducts  +     1.46955866272889 * S_MntSweetProducts
2411306   +          +    -0.34260315437319 * S_MntWines  +    -1.70693604004836 *
2411307   +        S_MonthsAsCustomer  +     -0.4612555130737 * S_NumCatalogPurchases
2411308   +          +     0.68491896063662 * S_NumDealsPurchases
2411309   +          +      0.5386312048592 * S_NumDistPurchases
2411310   +          +     1.28108942503912 * S_NumStorePurchases
2411311   +          +    -0.88282270505969 * S_NumWebPurchases
2411312   +          +    -0.66670958211416 * S_NumWebVisitsMonth
2411313   +          +     0.94315921733739 * S_RFMstat  +     0.70533705858561 *
2411314   +        S_RMntFrq  +     0.23896687873405 * S_Recency
2411315   +          +     0.66289635918858 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_7 = 0.0903330772553 * S_AcceptedCmpTotal + 0.13217959089196 * S_Age 
+ 0.93600629225871 * S_Frq + 1.23765169211392 * S_Income + 1.27732984858098 * S_Kidhome + 
1.54889765360944 * S_Mnt + 0.84618173514761 * S_MntFishProducts + -0.32044356786958 * 
S_MntFruits + -0.26357995597029 * S_MntGoldProds + 0.53649229087334 * S_MntMeatProducts + 
1.46955866272889 * S_MntSweetProducts + -0.34260315437319 * S_MntWines + -1.70693604004836 * 
S_MonthsAsCustomer + -0.4612555130737 * S_NumCatalogPurchases + 0.68491896063662 * 
S_NumDealsPurchases + 0.5386312048592 * S_NumDistPurchases + 1.28108942503912 * 
S_NumStorePurchases + -0.88282270505969 * S_NumWebPurchases + -0.66670958211416 * 
S_NumWebVisitsMonth + 0.94315921733739 * S_RFMstat + 0.70533705858561 * S_RMntFrq + 
0.23896687873405 * S_Recency + 0.66289635918858 * S_Teenhome ;
2411316   +   H1x2_1  = H1x2_1  +     0.22958861848016 * AcceptedCmp10
2411317   +          +    -1.11069938765475 * AcceptedCmp20  +     1.18563222829069 *
2411318   +        AcceptedCmp30  +    -0.97028253571173 * AcceptedCmp40
2411319   +          +     0.60850082670391 * AcceptedCmp50  +     0.31163990605418 *
2411320   +        Complain0  +     1.10957053966326 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 0.22958861848016 * AcceptedCmp10 + -1.11069938765475 * 
AcceptedCmp20 + 1.18563222829069 * AcceptedCmp30 + -0.97028253571173 * AcceptedCmp40 + 
0.60850082670391 * AcceptedCmp50 + 0.31163990605418 * Complain0 + 1.10957053966326 * 
HigherEducationBinary0 ;
2411321   +   H1x2_2  = H1x2_2  +    -0.99409862826118 * AcceptedCmp10
2411322   +          +    -0.76360093699992 * AcceptedCmp20  +     0.82772534103696 *
2411323   +        AcceptedCmp30  +     1.74232000787449 * AcceptedCmp40
2411324   +          +    -1.37356239255127 * AcceptedCmp50  +      0.0919811154199 *
2411325   +        Complain0  +    -0.00220513515877 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.99409862826118 * AcceptedCmp10 + -0.76360093699992 
* AcceptedCmp20 + 0.82772534103696 * AcceptedCmp30 + 1.74232000787449 * AcceptedCmp40 + 
-1.37356239255127 * AcceptedCmp50 + 0.0919811154199 * Complain0 + -0.00220513515877 * 
HigherEducationBinary0 ;
2411326   +   H1x2_3  = H1x2_3  +    -0.21003647134105 * AcceptedCmp10
2411327   +          +    -0.08930317176477 * AcceptedCmp20  +    -0.39109673162041 *
2411328   +        AcceptedCmp30  +     1.14094450038946 * AcceptedCmp40
2411329   +          +     1.26041997788848 * AcceptedCmp50  +    -0.10972130900569 *
2411330   +        Complain0  +    -0.99352598480407 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -0.21003647134105 * AcceptedCmp10 + -0.08930317176477 
* AcceptedCmp20 + -0.39109673162041 * AcceptedCmp30 + 1.14094450038946 * AcceptedCmp40 + 
1.26041997788848 * AcceptedCmp50 + -0.10972130900569 * Complain0 + -0.99352598480407 * 
HigherEducationBinary0 ;
2411331   +   H1x2_4  = H1x2_4  +     2.02630284432093 * AcceptedCmp10
2411332   +          +    -2.50721904229276 * AcceptedCmp20  +    -1.31026450397446 *
2411333   +        AcceptedCmp30  +    -0.83440880266914 * AcceptedCmp40
2411334   +          +     -0.0570899805015 * AcceptedCmp50  +    -0.55525351434733 *
2411335   +        Complain0  +     0.27306601694081 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 2.02630284432093 * AcceptedCmp10 + -2.50721904229276 * 
AcceptedCmp20 + -1.31026450397446 * AcceptedCmp30 + -0.83440880266914 * AcceptedCmp40 + 
-0.0570899805015 * AcceptedCmp50 + -0.55525351434733 * Complain0 + 0.27306601694081 * 
HigherEducationBinary0 ;
2411336   +   H1x2_5  = H1x2_5  +    -0.18595284227194 * AcceptedCmp10
2411337   +          +    -1.55973916517392 * AcceptedCmp20  +    -3.81563768970049 *
2411338   +        AcceptedCmp30  +    -0.09331430915239 * AcceptedCmp40
2411339   +          +     0.76128118177142 * AcceptedCmp50  +    -0.17283107047755 *
2411340   +        Complain0  +    -1.01028562804392 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + -0.18595284227194 * AcceptedCmp10 + -1.55973916517392 
* AcceptedCmp20 + -3.81563768970049 * AcceptedCmp30 + -0.09331430915239 * AcceptedCmp40 + 
0.76128118177142 * AcceptedCmp50 + -0.17283107047755 * Complain0 + -1.01028562804392 * 
HigherEducationBinary0 ;
2411341   +   H1x2_6  = H1x2_6  +    -1.21475169836565 * AcceptedCmp10
2411342   +          +     0.28748729216575 * AcceptedCmp20  +     1.15908030413172 *
2411343   +        AcceptedCmp30  +    -0.05889528676549 * AcceptedCmp40
2411344   +          +    -0.41661363625562 * AcceptedCmp50  +    -0.77939130028952 *
2411345   +        Complain0  +     2.19510865765326 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + -1.21475169836565 * AcceptedCmp10 + 0.28748729216575 * 
AcceptedCmp20 + 1.15908030413172 * AcceptedCmp30 + -0.05889528676549 * AcceptedCmp40 + 
-0.41661363625562 * AcceptedCmp50 + -0.77939130028952 * Complain0 + 2.19510865765326 * 
HigherEducationBinary0 ;
2411346   +   H1x2_7  = H1x2_7  +     0.87360423179644 * AcceptedCmp10
2411347   +          +    -0.47867594186426 * AcceptedCmp20  +    -0.30325818223392 *
2411348   +        AcceptedCmp30  +    -0.96085556588297 * AcceptedCmp40
2411349   +          +    -0.19693158209969 * AcceptedCmp50  +    -0.73731792634553 *
2411350   +        Complain0  +    -1.10021678806679 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_7 = H1x2_7 + 0.87360423179644 * AcceptedCmp10 + -0.47867594186426 * 
AcceptedCmp20 + -0.30325818223392 * AcceptedCmp30 + -0.96085556588297 * AcceptedCmp40 + 
-0.19693158209969 * AcceptedCmp50 + -0.73731792634553 * Complain0 + -1.10021678806679 * 
HigherEducationBinary0 ;
2411351   +   H1x2_1  = H1x2_1  +    -1.17876013389516 * Education2n_Cycle
2411352   +          +    -0.35670434275624 * EducationBasic  +    -0.12456502068616 *
2411353   +        EducationGraduation  +     -1.0620373133508 * EducationMaster
2411354   +          +    -3.97961426831865 * Marital_StatusDivorced
2411355   +          +     0.00932639813867 * Marital_StatusMarried
2411356   +          +     1.29310186574718 * Marital_StatusSingle
2411357   +          +     1.60940802221114 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -1.17876013389516 * Education2n_Cycle + 
-0.35670434275624 * EducationBasic + -0.12456502068616 * EducationGraduation + 
-1.0620373133508 * EducationMaster + -3.97961426831865 * Marital_StatusDivorced + 
0.00932639813867 * Marital_StatusMarried + 1.29310186574718 * Marital_StatusSingle + 
1.60940802221114 * Marital_StatusTogether ;
2411358   +   H1x2_2  = H1x2_2  +     0.58497813059595 * Education2n_Cycle
2411359   +          +     0.98038586431321 * EducationBasic  +    -0.20442806724521 *
2411360   +        EducationGraduation  +     0.64973046142001 * EducationMaster
2411361   +          +    -0.30358516578188 * Marital_StatusDivorced
2411362   +          +    -0.96176709360703 * Marital_StatusMarried
2411363   +          +     1.26977690921649 * Marital_StatusSingle
2411364   +          +     -0.6681544336237 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.58497813059595 * Education2n_Cycle + 
0.98038586431321 * EducationBasic + -0.20442806724521 * EducationGraduation + 0.64973046142001 
* EducationMaster + -0.30358516578188 * Marital_StatusDivorced + -0.96176709360703 * 
Marital_StatusMarried + 1.26977690921649 * Marital_StatusSingle + -0.6681544336237 * 
Marital_StatusTogether ;
2411365   +   H1x2_3  = H1x2_3  +     0.42123479646947 * Education2n_Cycle
2411366   +          +     0.22705854674045 * EducationBasic  +     0.34794003687348 *
2411367   +        EducationGraduation  +     0.18356390207843 * EducationMaster
2411368   +          +     0.55272671490757 * Marital_StatusDivorced
2411369   +          +      0.1499239288334 * Marital_StatusMarried
2411370   +          +    -0.46840941760604 * Marital_StatusSingle
2411371   +          +     0.93706218273755 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.42123479646947 * Education2n_Cycle + 
0.22705854674045 * EducationBasic + 0.34794003687348 * EducationGraduation + 0.18356390207843 
* EducationMaster + 0.55272671490757 * Marital_StatusDivorced + 0.1499239288334 * 
Marital_StatusMarried + -0.46840941760604 * Marital_StatusSingle + 0.93706218273755 * 
Marital_StatusTogether ;
2411372   +   H1x2_4  = H1x2_4  +     0.85035585831723 * Education2n_Cycle
2411373   +          +    -0.70680576286167 * EducationBasic  +    -0.24487676912938 *
2411374   +        EducationGraduation  +    -0.33030970028481 * EducationMaster
2411375   +          +      -1.240735370138 * Marital_StatusDivorced
2411376   +          +    -1.20089294883599 * Marital_StatusMarried
2411377   +          +     0.57492674426149 * Marital_StatusSingle
2411378   +          +     1.44189292990255 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.85035585831723 * Education2n_Cycle + 
-0.70680576286167 * EducationBasic + -0.24487676912938 * EducationGraduation + 
-0.33030970028481 * EducationMaster + -1.240735370138 * Marital_StatusDivorced + 
-1.20089294883599 * Marital_StatusMarried + 0.57492674426149 * Marital_StatusSingle + 
1.44189292990255 * Marital_StatusTogether ;
2411379   +   H1x2_5  = H1x2_5  +    -0.62461434654579 * Education2n_Cycle
2411380   +          +    -0.34090423965869 * EducationBasic  +    -0.82493401834396 *
2411381   +        EducationGraduation  +    -1.09423426649553 * EducationMaster
2411382   +          +     1.05435442049802 * Marital_StatusDivorced
2411383   +          +      0.3571256349717 * Marital_StatusMarried
2411384   +          +    -0.44741267266578 * Marital_StatusSingle
2411385   +          +     0.02948931507994 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + -0.62461434654579 * Education2n_Cycle + 
-0.34090423965869 * EducationBasic + -0.82493401834396 * EducationGraduation + 
-1.09423426649553 * EducationMaster + 1.05435442049802 * Marital_StatusDivorced + 
0.3571256349717 * Marital_StatusMarried + -0.44741267266578 * Marital_StatusSingle + 
0.02948931507994 * Marital_StatusTogether ;
2411386   +   H1x2_6  = H1x2_6  +     0.09620501635178 * Education2n_Cycle
2411387   +          +    -0.54617424401993 * EducationBasic  +    -0.43305038404558 *
2411388   +        EducationGraduation  +     0.05453229059502 * EducationMaster
2411389   +          +     2.06026721980778 * Marital_StatusDivorced
2411390   +          +    -0.49583258645166 * Marital_StatusMarried
2411391   +          +    -1.14824900824474 * Marital_StatusSingle
2411392   +          +     0.57690093967839 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + 0.09620501635178 * Education2n_Cycle + 
-0.54617424401993 * EducationBasic + -0.43305038404558 * EducationGraduation + 
0.05453229059502 * EducationMaster + 2.06026721980778 * Marital_StatusDivorced + 
-0.49583258645166 * Marital_StatusMarried + -1.14824900824474 * Marital_StatusSingle + 
0.57690093967839 * Marital_StatusTogether ;
2411393   +   H1x2_7  = H1x2_7  +    -0.31251046777442 * Education2n_Cycle
2411394   +          +    -1.69272922870259 * EducationBasic  +    -0.08682253496961 *
2411395   +        EducationGraduation  +     0.58241644186309 * EducationMaster
2411396   +          +     -1.1890908607447 * Marital_StatusDivorced
2411397   +          +    -0.46668809907123 * Marital_StatusMarried
2411398   +          +     1.20342564763422 * Marital_StatusSingle
2411399   +          +    -1.75740662969578 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_7 = H1x2_7 + -0.31251046777442 * Education2n_Cycle + 
-1.69272922870259 * EducationBasic + -0.08682253496961 * EducationGraduation + 
0.58241644186309 * EducationMaster + -1.1890908607447 * Marital_StatusDivorced + 
-0.46668809907123 * Marital_StatusMarried + 1.20342564763422 * Marital_StatusSingle + 
-1.75740662969578 * Marital_StatusTogether ;
2411400   +   H1x2_1  =    -0.14973719401763 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.14973719401763 + H1x2_1 ;
2411401   +   H1x2_2  =    -0.56259582407931 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.56259582407931 + H1x2_2 ;
2411402   +   H1x2_3  =     0.42132483186492 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = 0.42132483186492 + H1x2_3 ;
2411403   +   H1x2_4  =      1.1996209421335 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 1.1996209421335 + H1x2_4 ;
2411404   +   H1x2_5  =     0.95827018478011 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 0.95827018478011 + H1x2_5 ;
2411405   +   H1x2_6  =     1.88844492435344 + H1x2_6 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = 1.88844492435344 + H1x2_6 ;
2411406   +   H1x2_7  =     0.77184516675485 + H1x2_7 ;
MPRINT(EM_DIAGRAM):   H1x2_7 = 0.77184516675485 + H1x2_7 ;
2411407   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2411408   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2411409   +   H1x2_1  = EXP(MIN(H1x2_1 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(MIN(H1x2_1 , _EXP_BAR));
2411410   +   H1x2_2  = EXP(MIN(H1x2_2 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(MIN(H1x2_2 , _EXP_BAR));
2411411   +   H1x2_3  = EXP(MIN(H1x2_3 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(MIN(H1x2_3 , _EXP_BAR));
2411412   +   H1x2_4  = EXP(MIN(H1x2_4 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(MIN(H1x2_4 , _EXP_BAR));
2411413   +   H1x2_5  = EXP(MIN(H1x2_5 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(MIN(H1x2_5 , _EXP_BAR));
2411414   +   H1x2_6  = EXP(MIN(H1x2_6 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(MIN(H1x2_6 , _EXP_BAR));
2411415   +   H1x2_7  = EXP(MIN(H1x2_7 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_7 = EXP(MIN(H1x2_7 , _EXP_BAR));
2411416   +END;
MPRINT(EM_DIAGRAM):   END;
2411417   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2411418   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
2411419   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
2411420   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
2411421   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
2411422   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
2411423   +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
2411424   +   H1x2_7  = .;
MPRINT(EM_DIAGRAM):   H1x2_7 = .;
2411425   +END;
MPRINT(EM_DIAGRAM):   END;
2411426   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2411427   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2411428   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2411429   +
2411430   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2411431   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2411432   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2411433   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2411434   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2411435   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2411436   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2411437   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2411438   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2411439   +end;
MPRINT(EM_DIAGRAM):   end;
2411440   +else do;
MPRINT(EM_DIAGRAM):   else do;
2411441   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2411442   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2411443   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2411444   +   end;
MPRINT(EM_DIAGRAM):   end;
2411445   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2411446   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2411447   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2411448   +   end;
MPRINT(EM_DIAGRAM):   end;
2411449   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2411450   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2411451   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2411452   +   end;
MPRINT(EM_DIAGRAM):   end;
2411453   +end;
MPRINT(EM_DIAGRAM):   end;
2411454   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2411455   +   P_DepVar1  =     0.10431866610268 * H1x1_1  +    -0.48100701431081 * H1x1_2
2411456   +          +      1.1561061025832 * H1x1_3  +    -1.23928879501664 * H1x1_4
2411457   +          +     1.22057275321508 * H1x1_5  +     0.21972347471711 * H1x1_6
2411458   +          +    -0.98998788335495 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.10431866610268 * H1x1_1 + -0.48100701431081 * H1x1_2 + 
1.1561061025832 * H1x1_3 + -1.23928879501664 * H1x1_4 + 1.22057275321508 * H1x1_5 + 
0.21972347471711 * H1x1_6 + -0.98998788335495 * H1x1_7 ;
2411459   +   P_DepVar1  = P_DepVar1  + -4.9985478923183E-10 * H1x2_1
2411460   +          +   2.7724573038604E-6 * H1x2_2  +  -3.3263781208921E-6 * H1x2_3
2411461   +          +     1.90169432265E-8 * H1x2_4  +  -9.7460294571708E-9 * H1x2_5
2411462   +          +  -2.0885179583168E-6 * H1x2_6  +    3.038660449943E-8 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 + -4.9985478923183E-10 * H1x2_1 + 
2.7724573038604E-6 * H1x2_2 + -3.3263781208921E-6 * H1x2_3 + 1.90169432265E-8 * H1x2_4 + 
-9.7460294571708E-9 * H1x2_5 + -2.0885179583168E-6 * H1x2_6 + 3.038660449943E-8 * H1x2_7 ;
2411463   +   P_DepVar1  =    -2.34500119066237 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.34500119066237 + P_DepVar1 ;
2411464   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2411465   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2411466   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2411467   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2411468   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2411469   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2411470   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2411471   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2411472   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2411473   +END;
MPRINT(EM_DIAGRAM):   END;
2411474   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2411475   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2411476   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2411477   +END;
MPRINT(EM_DIAGRAM):   END;
2411478   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2411479   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2411480   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2411481   +END;
MPRINT(EM_DIAGRAM):   END;
2411482   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2411483   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2411484   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2411485   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2411486   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2411487   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2411488   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2411489   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2411490   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2411491   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2411492   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2411493   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2411494   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2411495   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2411496   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2411497   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2411498   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2411499   +END;
MPRINT(EM_DIAGRAM):   END;
2411500   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2411501   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2411502   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2411503   +drop
2411504   +H1x1_1
2411505   +H1x1_2
2411506   +H1x1_3
2411507   +H1x1_4
2411508   +H1x1_5
2411509   +H1x1_6
2411510   +H1x1_7
2411511   +H1x2_1
2411512   +H1x2_2
2411513   +H1x2_3
2411514   +H1x2_4
2411515   +H1x2_5
2411516   +H1x2_6
2411517   +H1x2_7
2411518   +;
MPRINT(EM_DIAGRAM):   drop H1x1_1 H1x1_2 H1x1_3 H1x1_4 H1x1_5 H1x1_6 H1x1_7 H1x2_1 H1x2_2 
H1x2_3 H1x2_4 H1x2_5 H1x2_6 H1x2_7 ;
2411519   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2411520   +* Renaming variables for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural12;
2411521   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2411522   +* Renaming Posterior variables for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural12;
2411523   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2411524   +drop AutoNeural12_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_P_DepVar1;
2411525   +AutoNeural12_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural12_P_DepVar1 = P_DepVar1;
2411526   +drop AutoNeural12_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_P_DepVar0;
2411527   +AutoNeural12_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural12_P_DepVar0 = P_DepVar0;
2411528   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2411529   +* Renaming Into variables for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for AutoNeural12;
2411530   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2411531   +length AutoNeural12_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length AutoNeural12_I_DepVar $32;
2411532   +drop AutoNeural12_I_DepVar;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_I_DepVar;
2411533   +AutoNeural12_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   AutoNeural12_I_DepVar = I_DepVar;
2411534   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2411535   +* Renaming _WARN_ variable for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural12;
2411536   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2411537   +length AutoNeural12_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural12_WARN_ $4;
2411538   +drop AutoNeural12_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_WARN_;
2411539   +AutoNeural12_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural12_WARN_ = _WARN_;
2411540   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2411541   +* Ensmbl44: Voting to produce predicted target;
MPRINT(EM_DIAGRAM):   * Ensmbl44: Voting to produce predicted target;
2411542   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2411543   +array Ensmbl44_post{2} _temporary_;
MPRINT(EM_DIAGRAM):   array Ensmbl44_post{2} _temporary_;
2411544   +array Ensmbl44_count{2} _temporary_;
MPRINT(EM_DIAGRAM):   array Ensmbl44_count{2} _temporary_;
2411545   +array Ensmbl44_level{2} $32 _temporary_ (
2411546   +"1"
2411547   +"0"
2411548   +);
MPRINT(EM_DIAGRAM):   array Ensmbl44_level{2} $32 _temporary_ ( "1" "0" );
2411549   +do i=1 to 2;
MPRINT(EM_DIAGRAM):   do i=1 to 2;
2411550   +Ensmbl44_post{i} = 0;
MPRINT(EM_DIAGRAM):   Ensmbl44_post{i} = 0;
2411551   +Ensmbl44_count{i} = 0;
MPRINT(EM_DIAGRAM):   Ensmbl44_count{i} = 0;
2411552   +end;
MPRINT(EM_DIAGRAM):   end;
2411553   +if AutoNeural9_I_DepVar = Ensmbl44_level{1} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural9_I_DepVar = Ensmbl44_level{1} then do;
2411554   +Ensmbl44_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl44_count{1} + 1;
2411555   +Ensmbl44_post{1}=Ensmbl44_post{1}+ AutoNeural9_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl44_post{1}=Ensmbl44_post{1}+ AutoNeural9_P_DepVar1;
2411556   +end;
MPRINT(EM_DIAGRAM):   end;
2411557   +if AutoNeural11_I_DepVar = Ensmbl44_level{1} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural11_I_DepVar = Ensmbl44_level{1} then do;
2411558   +Ensmbl44_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl44_count{1} + 1;
2411559   +Ensmbl44_post{1}=Ensmbl44_post{1}+ AutoNeural11_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl44_post{1}=Ensmbl44_post{1}+ AutoNeural11_P_DepVar1;
2411560   +end;
MPRINT(EM_DIAGRAM):   end;
2411561   +if AutoNeural12_I_DepVar = Ensmbl44_level{1} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural12_I_DepVar = Ensmbl44_level{1} then do;
2411562   +Ensmbl44_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl44_count{1} + 1;
2411563   +Ensmbl44_post{1}=Ensmbl44_post{1}+ AutoNeural12_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl44_post{1}=Ensmbl44_post{1}+ AutoNeural12_P_DepVar1;
2411564   +end;
MPRINT(EM_DIAGRAM):   end;
2411565   +if AutoNeural9_I_DepVar = Ensmbl44_level{2} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural9_I_DepVar = Ensmbl44_level{2} then do;
2411566   +Ensmbl44_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl44_count{2} + 1;
2411567   +Ensmbl44_post{2}=Ensmbl44_post{2}+ AutoNeural9_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl44_post{2}=Ensmbl44_post{2}+ AutoNeural9_P_DepVar0;
2411568   +end;
MPRINT(EM_DIAGRAM):   end;
2411569   +if AutoNeural11_I_DepVar = Ensmbl44_level{2} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural11_I_DepVar = Ensmbl44_level{2} then do;
2411570   +Ensmbl44_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl44_count{2} + 1;
2411571   +Ensmbl44_post{2}=Ensmbl44_post{2}+ AutoNeural11_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl44_post{2}=Ensmbl44_post{2}+ AutoNeural11_P_DepVar0;
2411572   +end;
MPRINT(EM_DIAGRAM):   end;
2411573   +if AutoNeural12_I_DepVar = Ensmbl44_level{2} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural12_I_DepVar = Ensmbl44_level{2} then do;
2411574   +Ensmbl44_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl44_count{2} + 1;
2411575   +Ensmbl44_post{2}=Ensmbl44_post{2}+ AutoNeural12_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl44_post{2}=Ensmbl44_post{2}+ AutoNeural12_P_DepVar0;
2411576   +end;
MPRINT(EM_DIAGRAM):   end;
2411577   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2411578   +* Ensmbl44: Determine Into Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl44: Determine Into Variable;
2411579   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2411580   +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set. 
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the 
         length of a character variable.
2411581   +drop i vote_count vote_post;
MPRINT(EM_DIAGRAM):   drop i vote_count vote_post;
2411582   +vote_count = max(
2411583   +Ensmbl44_count{1} ,
2411584   +Ensmbl44_count{2}
2411585   +);
MPRINT(EM_DIAGRAM):   vote_count = max( Ensmbl44_count{1} , Ensmbl44_count{2} );
2411586   +do i=1 to 2;
MPRINT(EM_DIAGRAM):   do i=1 to 2;
2411587   +if Ensmbl44_count{i}=vote_count and Ensmbl44_post{i}>vote_post then do;
MPRINT(EM_DIAGRAM):   if Ensmbl44_count{i}=vote_count and Ensmbl44_post{i}>vote_post then do;
2411588   +I_DepVar = Ensmbl44_level{i};
MPRINT(EM_DIAGRAM):   I_DepVar = Ensmbl44_level{i};
2411589   +vote_post = Ensmbl44_count{i};
MPRINT(EM_DIAGRAM):   vote_post = Ensmbl44_count{i};
2411590   +end;
MPRINT(EM_DIAGRAM):   end;
2411591   +end;
MPRINT(EM_DIAGRAM):   end;
2411592   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2411593   +* Ensmbl44: Compute posterior vars using models predicting the chosen level;
MPRINT(EM_DIAGRAM):   * Ensmbl44: Compute posterior vars using models predicting the chosen 
level;
2411594   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2411595   +P_DepVar1 = 0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0;
2411596   +P_DepVar0 = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2411597   +if I_DepVar = AutoNeural9_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = AutoNeural9_I_DepVar then do;
2411598   +P_DEPVAR1 = P_DEPVAR1 + AutoNeural9_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + AutoNeural9_P_DepVar1;
2411599   +P_DEPVAR0 = P_DEPVAR0 + AutoNeural9_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + AutoNeural9_P_DepVar0;
2411600   +end;
MPRINT(EM_DIAGRAM):   end;
2411601   +if I_DepVar = AutoNeural11_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = AutoNeural11_I_DepVar then do;
2411602   +P_DEPVAR1 = P_DEPVAR1 + AutoNeural11_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + AutoNeural11_P_DepVar1;
2411603   +P_DEPVAR0 = P_DEPVAR0 + AutoNeural11_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + AutoNeural11_P_DepVar0;
2411604   +end;
MPRINT(EM_DIAGRAM):   end;
2411605   +if I_DepVar = AutoNeural12_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = AutoNeural12_I_DepVar then do;
2411606   +P_DEPVAR1 = P_DEPVAR1 + AutoNeural12_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + AutoNeural12_P_DepVar1;
2411607   +P_DEPVAR0 = P_DEPVAR0 + AutoNeural12_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + AutoNeural12_P_DepVar0;
2411608   +end;
MPRINT(EM_DIAGRAM):   end;
2411609   +* Ensmbl44: Averaging posterior;
MPRINT(EM_DIAGRAM):   * Ensmbl44: Averaging posterior;
2411610   +P_DepVar1 = P_DepVar1/vote_count;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1/vote_count;
2411611   +P_DepVar0 = P_DepVar0/vote_count;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0/vote_count;
2411612   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2411613   +* Ensmbl44: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   * Ensmbl44: Producing Unformatted variable;
2411614   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2411615   +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
2411616   +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
2411617   +else
2411618   +if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
2411619   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2411620   +* Ensmbl44: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl44: Computing _WARN_ Variable;
2411621   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2411622   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
2411623   +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
2411624   +_WARN_ = '';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
2411625   +if index(AUTONEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
2411625  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
2411626   +if index(AUTONEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
2411626  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
2411627   +if index(AUTONEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
2411627  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
2411628   +if index(AUTONEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
2411628  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
2411629   +if index(AUTONEURAL11_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
2411629  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
2411630   +if index(AUTONEURAL11_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
2411630  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
2411631   +if index(AUTONEURAL11_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
2411631  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
2411632   +if index(AUTONEURAL11_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
2411632  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
2411633   +if index(AUTONEURAL12_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
2411633  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
2411634   +if index(AUTONEURAL12_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
2411634  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
2411635   +if index(AUTONEURAL12_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
2411635  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
2411636   +if index(AUTONEURAL12_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
2411636  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
2411637   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2411638   +* Ensmbl44: Computing Residual Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl44: Computing Residual Vars;
2411639   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2411640   +if
2411641   +F_DepVar NE '1'
2411642   +AND F_DepVar NE '0'
2411643   +then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE '1' AND F_DepVar NE '0' then do;
2411644   +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
2411645   +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
2411646   +end;
MPRINT(EM_DIAGRAM):   end;
2411647   +else do;
MPRINT(EM_DIAGRAM):   else do;
2411648   +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
2411649   +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
2411650   +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
2411651   +WHEN('1') R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN('1') R_DepVar1 = R_DepVar1 +1;
2411652   +WHEN('0') R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN('0') R_DepVar0 = R_DepVar0 +1;
2411653   +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
2411654   +END;
MPRINT(EM_DIAGRAM):   END;
2411655   +END;
MPRINT(EM_DIAGRAM):   END;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2411656    run;

NOTE: DATA STEP view saved on file EMWS8.ENSMBL44_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.AUTONEURAL9_VALIDATE.VIEW used (Total process time):
      real time           0.11 seconds
      cpu time            0.12 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.12 seconds
      cpu time            0.12 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2411657    quit;
2411658    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
MPRINT(EM_DIAGRAM):   
MPRINT(CALFITSTATSNOMINAL):   data _tmpTrainFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_ 
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.Ensmbl44_TRAIN end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_ 
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Train: Target Variable" _NOBS_= "Train: Sum of 
Frequencies" _SSE_= "Train: Sum of Squared Errors" _MAX_= "Train: Maximum Absolute Error" 
_DIV_ = "Train: Divisor for ASE" _WRONG_= "Train: Number of Wrong Classifications" _DISF_= 
"Train: Frequency of Classified Cases" _MISC_= "Train: Misclassification Rate" _ASE_ = "Train: 
Average Squared Error" _RASE_ = "Train: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_ 
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl44_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set _tmpTrainFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   
MPRINT(CALFITSTATSNOMINAL):   data _tmpValidFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_ 
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.Ensmbl44_VALIDATE end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_ 
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Valid: Target Variable" _NOBS_= "Valid: Sum of 
Frequencies" _SSE_= "Valid: Sum of Squared Errors" _MAX_= "Valid: Maximum Absolute Error" 
_DIV_ = "Valid: Divisor for ASE" _WRONG_= "Valid: Number of Wrong Classifications" _DISF_= 
"Valid: Frequency of Classified Cases" _MISC_= "Valid: Misclassification Rate" _ASE_ = "Valid: 
Average Squared Error" _RASE_ = "Valid: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_ 
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _tmpdata_(DROP= TARGET);
MPRINT(EM_DIAGRAM):   set _tmpValidFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _tmpdata_;
MPRINT(EM_DIAGRAM):   set _tmpdata_;
MPRINT(EM_DIAGRAM):   rename _ASE_=_VASE_;
MPRINT(EM_DIAGRAM):   rename _DIV_=_VDIV_;
MPRINT(EM_DIAGRAM):   rename _MAX_=_VMAX_;
MPRINT(EM_DIAGRAM):   rename _NOBS_=_VNOBS_;
MPRINT(EM_DIAGRAM):   rename _RASE_=_VRASE_;
MPRINT(EM_DIAGRAM):   rename _SSE_=_VSSE_;
MPRINT(EM_DIAGRAM):   rename _DISF_=_VDISF_;
MPRINT(EM_DIAGRAM):   rename _MISC_=_VMISC_;
MPRINT(EM_DIAGRAM):   rename _WRONG_=_VWRONG_;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl44_EMOUTFIT;
MPRINT(EM_DIAGRAM):   merge EMWS8.Ensmbl44_EMOUTFIT _tmpdata_;
MPRINT(EM_DIAGRAM):   run;
2411718    filename _pref
2411718  ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural9\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural9\EMPUBLISHSCORE.sas";
2411719    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2411720    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural9\EMPUBLISHSCORE.sas.
2411721   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2411722   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2411723   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2411724   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2411725   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2411726   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2411727   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2411728   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2411729   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2411730   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2411731   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2411732   +LENGTH _WARN_ $4
2411733   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
2411734   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2411735   +
2411736   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2411737   +
2411738   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2411739   +
2411740   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2411741   +
2411742   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2411743   +
2411744   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2411745   +
2411746   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2411747   +
2411748   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2411749   +
2411750   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2411751   +
2411752   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2411753   +
2411754   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2411755   +
2411756   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2411757   +
2411758   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2411759   +
2411760   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2411761   +
2411762   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2411763   +
2411764   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2411765   +
2411766   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2411767   +
2411768   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2411769   +
2411770   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2411771   +
2411772   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2411773   +
2411774   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2411775   +
2411776   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2411777   +
2411778   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2411779   +
2411780   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2411781   +
2411782   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2411783   +
2411784   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2411785   +
2411786   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2411787   +
2411788   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2411789   +
2411790   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2411791   +
2411792   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2411793   +
2411794   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2411795   +
2411796   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2411797   +
2411798   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2411799   +
2411800   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2411801   +
2411802   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2411803   +
2411804   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2411805   +
2411806   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2411807   +
2411808   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2411809   +
2411810   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2411811   +
2411812   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2411813   +
2411814   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2411815   +
2411816   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2411817   +
2411818   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2411819   +
2411820   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2411821   +
2411822   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2411823   +
2411824   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2411825   +
2411826   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2411827   +
2411828   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2411829   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2411830   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2411831   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2411832   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2411833   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2411834   +end;
MPRINT(EM_DIAGRAM):   end;
2411835   +else do;
MPRINT(EM_DIAGRAM):   else do;
2411836   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2411837   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2411838   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2411839   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2411840   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2411841   +   end;
MPRINT(EM_DIAGRAM):   end;
2411842   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2411843   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2411844   +   end;
MPRINT(EM_DIAGRAM):   end;
2411845   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2411846   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2411847   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2411848   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2411849   +   end;
MPRINT(EM_DIAGRAM):   end;
2411850   +end;
MPRINT(EM_DIAGRAM):   end;
2411851   +
2411852   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2411853   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2411854   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2411855   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2411856   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2411857   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2411858   +end;
MPRINT(EM_DIAGRAM):   end;
2411859   +else do;
MPRINT(EM_DIAGRAM):   else do;
2411860   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2411861   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2411862   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2411863   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2411864   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2411865   +   end;
MPRINT(EM_DIAGRAM):   end;
2411866   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2411867   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2411868   +   end;
MPRINT(EM_DIAGRAM):   end;
2411869   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2411870   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2411871   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2411872   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2411873   +   end;
MPRINT(EM_DIAGRAM):   end;
2411874   +end;
MPRINT(EM_DIAGRAM):   end;
2411875   +
2411876   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2411877   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2411878   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2411879   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2411880   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2411881   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2411882   +end;
MPRINT(EM_DIAGRAM):   end;
2411883   +else do;
MPRINT(EM_DIAGRAM):   else do;
2411884   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2411885   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2411886   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2411887   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2411888   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2411889   +   end;
MPRINT(EM_DIAGRAM):   end;
2411890   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2411891   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2411892   +   end;
MPRINT(EM_DIAGRAM):   end;
2411893   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2411894   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2411895   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2411896   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2411897   +   end;
MPRINT(EM_DIAGRAM):   end;
2411898   +end;
MPRINT(EM_DIAGRAM):   end;
2411899   +
2411900   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2411901   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2411902   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2411903   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2411904   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2411905   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2411906   +end;
MPRINT(EM_DIAGRAM):   end;
2411907   +else do;
MPRINT(EM_DIAGRAM):   else do;
2411908   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2411909   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2411910   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2411911   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2411912   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2411913   +   end;
MPRINT(EM_DIAGRAM):   end;
2411914   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2411915   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2411916   +   end;
MPRINT(EM_DIAGRAM):   end;
2411917   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2411918   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2411919   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2411920   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2411921   +   end;
MPRINT(EM_DIAGRAM):   end;
2411922   +end;
MPRINT(EM_DIAGRAM):   end;
2411923   +
2411924   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2411925   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2411926   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2411927   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2411928   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2411929   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2411930   +end;
MPRINT(EM_DIAGRAM):   end;
2411931   +else do;
MPRINT(EM_DIAGRAM):   else do;
2411932   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2411933   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2411934   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2411935   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2411936   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2411937   +   end;
MPRINT(EM_DIAGRAM):   end;
2411938   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2411939   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2411940   +   end;
MPRINT(EM_DIAGRAM):   end;
2411941   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2411942   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2411943   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2411944   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2411945   +   end;
MPRINT(EM_DIAGRAM):   end;
2411946   +end;
MPRINT(EM_DIAGRAM):   end;
2411947   +
2411948   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2411949   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2411950   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2411951   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2411952   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2411953   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2411954   +end;
MPRINT(EM_DIAGRAM):   end;
2411955   +else do;
MPRINT(EM_DIAGRAM):   else do;
2411956   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2411957   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2411958   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2411959   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2411960   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2411961   +   end;
MPRINT(EM_DIAGRAM):   end;
2411962   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2411963   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2411964   +   end;
MPRINT(EM_DIAGRAM):   end;
2411965   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2411966   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2411967   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2411968   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2411969   +   end;
MPRINT(EM_DIAGRAM):   end;
2411970   +end;
MPRINT(EM_DIAGRAM):   end;
2411971   +
2411972   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2411973   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2411974   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2411975   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2411976   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2411977   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2411978   +end;
MPRINT(EM_DIAGRAM):   end;
2411979   +else do;
MPRINT(EM_DIAGRAM):   else do;
2411980   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2411981   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2411982   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2411983   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2411984   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2411985   +   end;
MPRINT(EM_DIAGRAM):   end;
2411986   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2411987   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2411988   +   end;
MPRINT(EM_DIAGRAM):   end;
2411989   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2411990   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2411991   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2411992   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2411993   +   end;
MPRINT(EM_DIAGRAM):   end;
2411994   +end;
MPRINT(EM_DIAGRAM):   end;
2411995   +
2411996   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2411997   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
2411998   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2411999   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2412000   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2412001   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2412002   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2412003   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2412004   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2412005   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2412006   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2412007   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2412008   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2412009   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2412010   +end;
MPRINT(EM_DIAGRAM):   end;
2412011   +else do;
MPRINT(EM_DIAGRAM):   else do;
2412012   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2412013   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2412014   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2412015   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2412016   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2412017   +   end;
MPRINT(EM_DIAGRAM):   end;
2412018   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2412019   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2412020   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2412021   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2412022   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2412023   +   end;
MPRINT(EM_DIAGRAM):   end;
2412024   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2412025   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2412026   +   end;
MPRINT(EM_DIAGRAM):   end;
2412027   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2412028   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2412029   +   end;
MPRINT(EM_DIAGRAM):   end;
2412030   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2412031   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2412032   +   end;
MPRINT(EM_DIAGRAM):   end;
2412033   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2412034   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2412035   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2412036   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2412037   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2412038   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2412039   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2412040   +   end;
MPRINT(EM_DIAGRAM):   end;
2412041   +end;
MPRINT(EM_DIAGRAM):   end;
2412042   +
2412043   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2412044   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2412045   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
2412046   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2412047   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2412048   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2412049   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2412050   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2412051   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2412052   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2412053   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2412054   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2412055   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2412056   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2412057   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2412058   +end;
MPRINT(EM_DIAGRAM):   end;
2412059   +else do;
MPRINT(EM_DIAGRAM):   else do;
2412060   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2412061   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2412062   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2412063   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2412064   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2412065   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2412066   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2412067   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2412068   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2412069   +         end;
MPRINT(EM_DIAGRAM):   end;
2412070   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2412071   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2412072   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2412073   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2412074   +            end;
MPRINT(EM_DIAGRAM):   end;
2412075   +         end;
MPRINT(EM_DIAGRAM):   end;
2412076   +      end;
MPRINT(EM_DIAGRAM):   end;
2412077   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2412078   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2412079   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2412080   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2412081   +         end;
MPRINT(EM_DIAGRAM):   end;
2412082   +      end;
MPRINT(EM_DIAGRAM):   end;
2412083   +   end;
MPRINT(EM_DIAGRAM):   end;
2412084   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2412085   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2412086   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2412087   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2412088   +      end;
MPRINT(EM_DIAGRAM):   end;
2412089   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2412090   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2412091   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2412092   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2412093   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2412094   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2412095   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2412096   +         end;
MPRINT(EM_DIAGRAM):   end;
2412097   +      end;
MPRINT(EM_DIAGRAM):   end;
2412098   +   end;
MPRINT(EM_DIAGRAM):   end;
2412099   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2412100   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2412101   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2412102   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2412103   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2412104   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2412105   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2412106   +   end;
MPRINT(EM_DIAGRAM):   end;
2412107   +end;
MPRINT(EM_DIAGRAM):   end;
2412108   +
2412109   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2412110   +*** Checking missing input Interval
2412111   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2412112   +
2412113   +IF NMISS(
2412114   +   AcceptedCmpTotal ,
2412115   +   Age ,
2412116   +   Frq ,
2412117   +   Income ,
2412118   +   Kidhome ,
2412119   +   Mnt ,
2412120   +   MntFishProducts ,
2412121   +   MntFruits ,
2412122   +   MntGoldProds ,
2412123   +   MntMeatProducts ,
2412124   +   MntSweetProducts ,
2412125   +   MntWines ,
2412126   +   MonthsAsCustomer ,
2412127   +   NumCatalogPurchases ,
2412128   +   NumDealsPurchases ,
2412129   +   NumDistPurchases ,
2412130   +   NumStorePurchases ,
2412131   +   NumWebPurchases ,
2412132   +   NumWebVisitsMonth ,
2412133   +   RFMstat ,
2412134   +   RMntFrq ,
2412135   +   Recency ,
2412136   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
2412137   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2412138   +
2412139   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2412140   +END;
MPRINT(EM_DIAGRAM):   END;
2412141   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2412142   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2412143   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2412144   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2412145   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2412146   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2412147   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2412148   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2412149   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2412150   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2412151   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2412152   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2412153   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2412154   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2412155   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2412156   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2412157   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2412158   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2412159   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2412160   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2412161   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2412162   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2412163   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
2412164   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2412165   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2412166   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2412167   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2412168   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2412169   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2412170   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2412171   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2412172   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2412173   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2412174   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2412175   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2412176   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2412177   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2412178   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2412179   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2412180   +END;
MPRINT(EM_DIAGRAM):   END;
2412181   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2412182   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2412183   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2412184   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2412185   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2412186   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2412187   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2412188   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2412189   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2412190   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2412191   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2412192   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2412193   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2412194   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2412195   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2412196   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2412197   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2412198   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2412199   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2412200   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2412201   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2412202   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2412203   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
2412204   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2412205   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2412206   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2412207   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2412208   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2412209   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2412210   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2412211   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2412212   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2412213   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2412214   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
2412215   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2412216   +   ELSE S_NumCatalogPurchases
2412217   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2412218   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2412219   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2412220   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2412221   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2412222   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2412223   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2412224   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2412225   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2412226   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2412227   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2412228   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2412229   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2412230   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2412231   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2412232   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2412233   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2412234   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2412235   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2412236   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2412237   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2412238   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2412239   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2412240   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2412241   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2412242   +END;
MPRINT(EM_DIAGRAM):   END;
2412243   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2412244   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2412245   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2412246   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2412247   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2412248   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2412249   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2412250   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2412251   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2412252   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2412253   +   H1x1_1  =     -0.7790327388408 * S_AcceptedCmpTotal
2412254   +          +     0.32193739579856 * S_Age  +    -0.43875684835169 * S_Frq
2412255   +          +     0.13013240455049 * S_Income  +    -0.74127716462976 *
2412256   +        S_Kidhome  +    -0.86416600561474 * S_Mnt  +     0.94819226754442 *
2412257   +        S_MntFishProducts  +     0.15895119408799 * S_MntFruits
2412258   +          +     0.03658391935071 * S_MntGoldProds  +    -3.75052142292398 *
2412259   +        S_MntMeatProducts  +    -0.22192220883538 * S_MntSweetProducts
2412260   +          +     0.80534656860633 * S_MntWines  +     0.16144794241259 *
2412261   +        S_MonthsAsCustomer  +    -1.53040364803625 * S_NumCatalogPurchases
2412262   +          +    -1.09856598010056 * S_NumDealsPurchases
2412263   +          +    -0.10571850472514 * S_NumDistPurchases
2412264   +          +     0.11898210654227 * S_NumStorePurchases
2412265   +          +      0.5984912060231 * S_NumWebPurchases
2412266   +          +     0.78592531126942 * S_NumWebVisitsMonth
2412267   +          +    -0.50004686386273 * S_RFMstat  +     0.40804018151571 *
2412268   +        S_RMntFrq  +    -0.94753260620308 * S_Recency
2412269   +          +    -0.49604118088328 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.7790327388408 * S_AcceptedCmpTotal + 0.32193739579856 * 
S_Age + -0.43875684835169 * S_Frq + 0.13013240455049 * S_Income + -0.74127716462976 * 
S_Kidhome + -0.86416600561474 * S_Mnt + 0.94819226754442 * S_MntFishProducts + 
0.15895119408799 * S_MntFruits + 0.03658391935071 * S_MntGoldProds + -3.75052142292398 * 
S_MntMeatProducts + -0.22192220883538 * S_MntSweetProducts + 0.80534656860633 * S_MntWines + 
0.16144794241259 * S_MonthsAsCustomer + -1.53040364803625 * S_NumCatalogPurchases + 
-1.09856598010056 * S_NumDealsPurchases + -0.10571850472514 * S_NumDistPurchases + 
0.11898210654227 * S_NumStorePurchases + 0.5984912060231 * S_NumWebPurchases + 
0.78592531126942 * S_NumWebVisitsMonth + -0.50004686386273 * S_RFMstat + 0.40804018151571 * 
S_RMntFrq + -0.94753260620308 * S_Recency + -0.49604118088328 * S_Teenhome ;
2412270   +   H1x1_2  =    -0.22226926295489 * S_AcceptedCmpTotal
2412271   +          +     0.08523894206962 * S_Age  +    -0.13010378102207 * S_Frq
2412272   +          +    -0.61810906923536 * S_Income  +     0.26583917928045 *
2412273   +        S_Kidhome  +     0.57213479787981 * S_Mnt  +    -0.58077613046442 *
2412274   +        S_MntFishProducts  +      0.1530301493776 * S_MntFruits
2412275   +          +      0.4586167382631 * S_MntGoldProds  +     1.40179051129147 *
2412276   +        S_MntMeatProducts  +      0.0231413770297 * S_MntSweetProducts
2412277   +          +    -0.08483682112771 * S_MntWines  +     0.22891006905064 *
2412278   +        S_MonthsAsCustomer  +    -1.21866617917435 * S_NumCatalogPurchases
2412279   +          +    -0.84042044250624 * S_NumDealsPurchases
2412280   +          +    -0.10246261015488 * S_NumDistPurchases
2412281   +          +     0.06886149708824 * S_NumStorePurchases
2412282   +          +     0.63156910388199 * S_NumWebPurchases
2412283   +          +    -1.33032061845311 * S_NumWebVisitsMonth
2412284   +          +     0.51240040684649 * S_RFMstat  +     0.77604047421115 *
2412285   +        S_RMntFrq  +     1.27964260226958 * S_Recency
2412286   +          +     0.12022076571016 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.22226926295489 * S_AcceptedCmpTotal + 0.08523894206962 * 
S_Age + -0.13010378102207 * S_Frq + -0.61810906923536 * S_Income + 0.26583917928045 * 
S_Kidhome + 0.57213479787981 * S_Mnt + -0.58077613046442 * S_MntFishProducts + 0.1530301493776 
* S_MntFruits + 0.4586167382631 * S_MntGoldProds + 1.40179051129147 * S_MntMeatProducts + 
0.0231413770297 * S_MntSweetProducts + -0.08483682112771 * S_MntWines + 0.22891006905064 * 
S_MonthsAsCustomer + -1.21866617917435 * S_NumCatalogPurchases + -0.84042044250624 * 
S_NumDealsPurchases + -0.10246261015488 * S_NumDistPurchases + 0.06886149708824 * 
S_NumStorePurchases + 0.63156910388199 * S_NumWebPurchases + -1.33032061845311 * 
S_NumWebVisitsMonth + 0.51240040684649 * S_RFMstat + 0.77604047421115 * S_RMntFrq + 
1.27964260226958 * S_Recency + 0.12022076571016 * S_Teenhome ;
2412287   +   H1x1_3  =     1.19879097976404 * S_AcceptedCmpTotal
2412288   +          +     0.14973951999399 * S_Age  +    -0.90630756390399 * S_Frq
2412289   +          +     0.64934241358682 * S_Income  +    -0.66249532206724 *
2412290   +        S_Kidhome  +     0.54195490560813 * S_Mnt  +    -0.58497380565417 *
2412291   +        S_MntFishProducts  +     0.12409202833851 * S_MntFruits
2412292   +          +     0.44480061346561 * S_MntGoldProds  +     3.27513201048136 *
2412293   +        S_MntMeatProducts  +     -0.1256493054184 * S_MntSweetProducts
2412294   +          +    -0.56080685022301 * S_MntWines  +     0.08633469383177 *
2412295   +        S_MonthsAsCustomer  +     0.45482673505107 * S_NumCatalogPurchases
2412296   +          +     0.45393712455366 * S_NumDealsPurchases
2412297   +          +    -0.25292198053552 * S_NumDistPurchases
2412298   +          +    -1.35582215064749 * S_NumStorePurchases
2412299   +          +    -0.83132202302639 * S_NumWebPurchases
2412300   +          +     1.87116225272678 * S_NumWebVisitsMonth
2412301   +          +     0.39564162951481 * S_RFMstat  +    -1.08810221295144 *
2412302   +        S_RMntFrq  +    -2.07407859514648 * S_Recency
2412303   +          +     -0.6849099475723 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.19879097976404 * S_AcceptedCmpTotal + 0.14973951999399 * 
S_Age + -0.90630756390399 * S_Frq + 0.64934241358682 * S_Income + -0.66249532206724 * 
S_Kidhome + 0.54195490560813 * S_Mnt + -0.58497380565417 * S_MntFishProducts + 
0.12409202833851 * S_MntFruits + 0.44480061346561 * S_MntGoldProds + 3.27513201048136 * 
S_MntMeatProducts + -0.1256493054184 * S_MntSweetProducts + -0.56080685022301 * S_MntWines + 
0.08633469383177 * S_MonthsAsCustomer + 0.45482673505107 * S_NumCatalogPurchases + 
0.45393712455366 * S_NumDealsPurchases + -0.25292198053552 * S_NumDistPurchases + 
-1.35582215064749 * S_NumStorePurchases + -0.83132202302639 * S_NumWebPurchases + 
1.87116225272678 * S_NumWebVisitsMonth + 0.39564162951481 * S_RFMstat + -1.08810221295144 * 
S_RMntFrq + -2.07407859514648 * S_Recency + -0.6849099475723 * S_Teenhome ;
2412304   +   H1x1_1  = H1x1_1  +     0.81075414854045 * AcceptedCmp10
2412305   +          +    -0.33403710427327 * AcceptedCmp20  +    -0.62242387435975 *
2412306   +        AcceptedCmp30  +    -0.89439410552439 * AcceptedCmp40
2412307   +          +     0.77335976756467 * AcceptedCmp50  +    -0.08825784612626 *
2412308   +        Complain0  +      0.3404395194267 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.81075414854045 * AcceptedCmp10 + -0.33403710427327 * 
AcceptedCmp20 + -0.62242387435975 * AcceptedCmp30 + -0.89439410552439 * AcceptedCmp40 + 
0.77335976756467 * AcceptedCmp50 + -0.08825784612626 * Complain0 + 0.3404395194267 * 
HigherEducationBinary0 ;
2412309   +   H1x1_2  = H1x1_2  +    -0.16741179709566 * AcceptedCmp10
2412310   +          +    -0.53751033948061 * AcceptedCmp20  +     0.80285496945068 *
2412311   +        AcceptedCmp30  +     0.39379279966091 * AcceptedCmp40
2412312   +          +    -1.40366799083237 * AcceptedCmp50  +     -0.4265482924132 *
2412313   +        Complain0  +     0.37272103593422 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.16741179709566 * AcceptedCmp10 + -0.53751033948061 
* AcceptedCmp20 + 0.80285496945068 * AcceptedCmp30 + 0.39379279966091 * AcceptedCmp40 + 
-1.40366799083237 * AcceptedCmp50 + -0.4265482924132 * Complain0 + 0.37272103593422 * 
HigherEducationBinary0 ;
2412314   +   H1x1_3  = H1x1_3  +    -0.19417657656326 * AcceptedCmp10
2412315   +          +    -0.06547746897317 * AcceptedCmp20  +     0.21980739904513 *
2412316   +        AcceptedCmp30  +    -0.19452210052301 * AcceptedCmp40
2412317   +          +    -2.02403282278574 * AcceptedCmp50  +    -0.18250261144524 *
2412318   +        Complain0  +     0.34168103813312 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.19417657656326 * AcceptedCmp10 + -0.06547746897317 
* AcceptedCmp20 + 0.21980739904513 * AcceptedCmp30 + -0.19452210052301 * AcceptedCmp40 + 
-2.02403282278574 * AcceptedCmp50 + -0.18250261144524 * Complain0 + 0.34168103813312 * 
HigherEducationBinary0 ;
2412319   +   H1x1_1  = H1x1_1  +    -0.03956789621002 * Education2n_Cycle
2412320   +          +    -0.38372374638888 * EducationBasic  +     -0.4178927802606 *
2412321   +        EducationGraduation  +    -0.61278625923288 * EducationMaster
2412322   +          +      0.4695898100094 * Marital_StatusDivorced
2412323   +          +    -0.52137742289262 * Marital_StatusMarried
2412324   +          +    -0.32382086914936 * Marital_StatusSingle
2412325   +          +    -0.66163012672344 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.03956789621002 * Education2n_Cycle + 
-0.38372374638888 * EducationBasic + -0.4178927802606 * EducationGraduation + 
-0.61278625923288 * EducationMaster + 0.4695898100094 * Marital_StatusDivorced + 
-0.52137742289262 * Marital_StatusMarried + -0.32382086914936 * Marital_StatusSingle + 
-0.66163012672344 * Marital_StatusTogether ;
2412326   +   H1x1_2  = H1x1_2  +    -0.25832319223886 * Education2n_Cycle
2412327   +          +     0.05602860720141 * EducationBasic  +    -0.86282852488383 *
2412328   +        EducationGraduation  +     0.18916317018059 * EducationMaster
2412329   +          +    -1.04858218653238 * Marital_StatusDivorced
2412330   +          +     2.41098335093061 * Marital_StatusMarried
2412331   +          +    -1.94696044861334 * Marital_StatusSingle
2412332   +          +     2.16021514856437 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.25832319223886 * Education2n_Cycle + 
0.05602860720141 * EducationBasic + -0.86282852488383 * EducationGraduation + 0.18916317018059 
* EducationMaster + -1.04858218653238 * Marital_StatusDivorced + 2.41098335093061 * 
Marital_StatusMarried + -1.94696044861334 * Marital_StatusSingle + 2.16021514856437 * 
Marital_StatusTogether ;
2412333   +   H1x1_3  = H1x1_3  +    -0.05351872242069 * Education2n_Cycle
2412334   +          +    -0.56850783552841 * EducationBasic  +    -0.14880907057098 *
2412335   +        EducationGraduation  +    -0.32850851013319 * EducationMaster
2412336   +          +     0.42964114177062 * Marital_StatusDivorced
2412337   +          +    -0.38607635605816 * Marital_StatusMarried
2412338   +          +    -0.02157405407852 * Marital_StatusSingle
2412339   +          +    -0.59995619744527 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.05351872242069 * Education2n_Cycle + 
-0.56850783552841 * EducationBasic + -0.14880907057098 * EducationGraduation + 
-0.32850851013319 * EducationMaster + 0.42964114177062 * Marital_StatusDivorced + 
-0.38607635605816 * Marital_StatusMarried + -0.02157405407852 * Marital_StatusSingle + 
-0.59995619744527 * Marital_StatusTogether ;
2412340   +   H1x1_1  =    -0.53239337390307 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.53239337390307 + H1x1_1 ;
2412341   +   H1x1_2  =     0.99428677123948 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.99428677123948 + H1x1_2 ;
2412342   +   H1x1_3  =       1.835877082844 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.835877082844 + H1x1_3 ;
2412343   +   H1x1_4  = 0;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0;
2412344   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
2412345   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2412346   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
2412347   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
2412348   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
2412349   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
2412350   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
2412351   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
2412352   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
2412353   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
2412354   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
2412355   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
2412356   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
2412357   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
2412358   +END;
MPRINT(EM_DIAGRAM):   END;
2412359   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2412360   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2412361   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2412362   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2412363   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2412364   +END;
MPRINT(EM_DIAGRAM):   END;
2412365   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2412366   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2412367   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2412368   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2412369   +   P_DepVar1  =    -3.41904253756965 * H1x1_1  +    -7.11204151517034 * H1x1_2
2412370   +          +     10.7909509395818 * H1x1_3  +    -2.20432578352426 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.41904253756965 * H1x1_1 + -7.11204151517034 * H1x1_2 + 
10.7909509395818 * H1x1_3 + -2.20432578352426 * H1x1_4 ;
2412371   +   P_DepVar1  =    -3.66951098257489 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.66951098257489 + P_DepVar1 ;
2412372   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2412373   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2412374   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2412375   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2412376   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2412377   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2412378   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2412379   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2412380   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2412381   +END;
MPRINT(EM_DIAGRAM):   END;
2412382   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2412383   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2412384   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2412385   +END;
MPRINT(EM_DIAGRAM):   END;
2412386   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2412387   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2412388   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2412389   +END;
MPRINT(EM_DIAGRAM):   END;
2412390   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2412391   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2412392   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2412393   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2412394   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2412395   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2412396   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2412397   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2412398   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2412399   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2412400   +END;
MPRINT(EM_DIAGRAM):   END;
2412401   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2412402   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2412403   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2412404   +drop
2412405   +H1x1_1
2412406   +H1x1_2
2412407   +H1x1_3
2412408   +H1x1_4
2412409   +;
MPRINT(EM_DIAGRAM):   drop H1x1_1 H1x1_2 H1x1_3 H1x1_4 ;
2412410   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2412411    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2412412    quit;
2412413    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2412414    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2412415    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2412416    retain ID 2 Node "AutoNeural9";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural9";
2412417    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2412418    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2632 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2632 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2412419    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2412420    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2412421    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2632 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2632 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2412422    proc sort data=EMWS8.AutoNeural9_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural9_variableset out=_temp2(keep=NAME 
CREATOR);
2412423    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2412424    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL9_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2412425    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2412426    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2412427    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2412428    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2412429    proc contents data=EMWS8.AutoNeural9_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural9_train out=_meta(keep=NAME) noprint;
2412430    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

2412431    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2412432    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2412433    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2412434    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2412435    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2412436    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2412437    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2412438    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2412439    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2412439  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1479 rows and 5 columns.

2412440    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2412441    proc append base=EMWS8.Ensmbl44_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl44_FCMP data=_tempx;
2412442    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL44_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1479 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL44_FCMP has 1479 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2412443    filename _pref
2412443  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
2412444    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2412445    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
2412446   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2412447   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
2412448   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2412449   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
2412450   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
2412451   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2412452    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2412453    quit;
2412454    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2412455    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2412456    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2412457    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
2412458    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2412459    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2412460    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2412461    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2412462    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2412463    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
2412464    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2412465    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2412466    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2412467    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2412468    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2412469    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2412470    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
2412471    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

2412472    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2412473    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2412474    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2412475    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2412476    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2412477    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2412478    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2412479    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2412480    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2412480  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

2412481    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2412482    proc append base=EMWS8.Ensmbl44_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl44_FCMP data=_tempx;
2412483    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL44_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL44_FCMP has 1483 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2412484    filename _pref
2412484  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
2412485    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2412486    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
2412487   +
2412488   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
2412489   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
2412489  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
2412490   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
2412491   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
2412492   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
2412493   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
2412494   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2412495    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2412496    quit;
2412497    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2412498    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2412499    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2412500    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
2412501    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2412502    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2412503    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2412504    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2412505    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2412506    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
2412507    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2412508    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2412509    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2412510    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2412511    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2412512    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2412513    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
2412514    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2412515    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2412516    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2412517    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2412518    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2412519    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2412520    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2412521    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2412522    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2412523    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2412523  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

2412524    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2412525    proc append base=EMWS8.Ensmbl44_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl44_FCMP data=_tempx;
2412526    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL44_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL44_FCMP has 1522 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2412527    filename _pref
2412527  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
2412528    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2412529    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
2412530   +
2412531   +
2412532   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
2412533   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
2412534   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
2412535   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
2412536   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
2412537   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2412538   +
2412539   +
2412540   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
2412541   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
2412542   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
2412543   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
2412544   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
2412545   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2412546   +
2412547   +
2412548   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
2412549   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
2412550   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
2412551   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
2412552   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
2412553   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2412554   +
2412555   +
2412556   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
2412557   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
2412558   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
2412559   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
2412560   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
2412561   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2412562   +
2412563   +
2412564   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
2412565   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
2412566   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
2412567   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
2412568   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
2412569   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2412570   +
2412571   +
2412572   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
2412573   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
2412574   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
2412575   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
2412576   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
2412577   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2412578   +
2412579   +
2412580   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
2412581   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
2412582   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
2412583   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
2412584   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
2412585   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2412586   +
2412587   +
2412588   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
2412589   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
2412590   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
2412591   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
2412592   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
2412593   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2412594   +if
2412595   +_FILTERNORM1 not in ( '.')
2412596   + and
2412597   +_FILTERNORM2 not in ( '.')
2412598   + and
2412599   +_FILTERNORM3 not in ( '.')
2412600   + and
2412601   +_FILTERNORM4 not in ( '.')
2412602   + and
2412603   +_FILTERNORM5 not in ( '.')
2412604   + and
2412605   +_FILTERNORM6 not in ( '.')
2412606   + and
2412607   +_FILTERNORM7 not in ( ' ')
2412608   + and
2412609   +_FILTERNORM8 not in ( ' ')
2412610   +and
2412611   +( Dt_Customer ne .)
2412612   +and ( Income ne . and (Income<=107000))
2412613   +and ( Kidhome ne .)
2412614   +and ( MntFishProducts ne .)
2412615   +and ( MntFruits ne .)
2412616   +and ( MntGoldProds ne .)
2412617   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
2412618   +and ( MntSweetProducts ne .)
2412619   +and ( MntWines ne .)
2412620   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
2412621   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
2412622   +and ( NumStorePurchases ne .)
2412623   +and ( NumWebPurchases ne .)
2412624   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
2412625   +and ( Recency ne .)
2412626   +and ( Teenhome ne .)
2412627   +and ( Year_Birth ne .)
2412628   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
2412629   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
2412630   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
2412631   +end;
MPRINT(EM_DIAGRAM):   end;
2412632   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
2412633   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2412634    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2412635    quit;
2412636    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2412637    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2412638    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2412639    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
2412640    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2412641    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2412642    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2412643    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2412644    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2412645    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
2412646    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2412647    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2412648    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2412649    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2412650    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2412651    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2412652    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
2412653    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

2412654    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2412655    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2412656    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2412657    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2412658    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2412659    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2412660    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2412661    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2412662    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2412662  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

2412663    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2412664    proc append base=EMWS8.Ensmbl44_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl44_FCMP data=_tempx;
2412665    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL44_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL44_FCMP has 1588 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2412666    %macro varDept(fcmpdata=,id=);
2412667    %global nobs&id scoreFlag&id;
2412668    %let scoreFlag&id = 0;
2412669    %if &id=1 or ^&fcmpStart %then %do;
2412670    proc sort data=&fcmpdata out=_temp&id nodupkey;
2412671    by NAME;
2412672    where id=&id and LHS in( %let j=1;
2412673    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
2412674    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
2412675    "&var" %let j = %eval(&j+1);
2412676    %end;
2412677    );
2412678    run;
2412679    %let dsid = %sysfunc(open(_temp&id));
2412680    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2412681    %let dsid = %sysfunc(close(&dsid));
2412682    %if &&nobs&id %then %do;
2412683    %let scoreFlag&id = 1;
2412684    %let fcmpStart = 1;
2412685    %end;
2412686    %else %let fcmpStart = 0;
2412687    %end;
2412688    %else %do;
2412689    proc sort data=&fcmpdata out=_tempid;
2412690    where id=&id;
2412691    by LHS;
2412692    run;
2412693    %let dsid = %sysfunc(open(_tempid));
2412694    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2412695    %let dsid = %sysfunc(close(&dsid));
2412696    %if ^&&nobs&id %then %do;
2412697    proc datasets lib=work nolist;
2412698    delete _tempid;
2412699    run;
2412700    quit;
2412701    %end;
2412702    %else %do;
2412703    data _tempAll;
2412704    set %let j=%eval(&id-1);
2412705    %do x=1 %to &j;
2412706    %if &&nobs&x %then %do;
2412707    _temp&x %end;
2412708    %end;
2412709    ;
2412710    run;
2412711    proc sql;
2412712    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
2412712  ! work._tempid p2 where p.name=p2.lhs;
2412713    quit;
2412714    data _temp&id;
2412715    set _temp&id;
2412716    where LHS ne '' and NAME ne '' and Node ne '';
2412717    run;
2412718    proc datasets lib=work nolist;
2412719    delete _tempAll;
2412720    run;
2412721    %let dsid = %sysfunc(open(_temp&id));
2412722    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2412723    %let dsid = %sysfunc(close(&dsid));
2412724    %if ^&&nobs&id %then %do;
2412725    proc datasets lib=work nolist;
2412726    delete _temp&id;
2412727    run;
2412728    quit;
2412729    %end;
2412730    %else %do;
2412731    %let scoreFlag&id = 1;
2412732    data _temp&id;
2412733    set _temp&id;
2412734    where LHS ne NAME and node ne '';
2412735    run;
2412736    %let dsid = %sysfunc(open(_temp&id));
2412737    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2412738    %let dsid = %sysfunc(close(&dsid));
2412739    %if ^&&nobs&id %then %do;
2412740    proc datasets lib=work nolist;
2412741    delete _temp&id;
2412742    run;
2412743    quit;
2412744    %end;
2412745    %else %do;
2412746    proc sort data=_temp&id nodupkey;
2412747    by LHS NAME;
2412748    run;
2412749    %end;
2412750    %end;
2412751    %end;
2412752    %end;
2412753    %mend varDept;
2412754    %macro optCode(outdata=fcmpdata);
2412755    %global fcmpStart;
2412756    %let fcmpStart = 0;
2412757    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
2412758    %let NumNodes=9;
2412759    %do k=1 %to &NumNodes;
2412760    %vardept(fcmpdata=&outdata, id=&k);
2412761    %end;
2412762    %mend optCode;
2412763    %optcode(outData=EMWS8.Ensmbl44_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl44_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL44_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl44_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 134 observations read from the data set EMWS8.ENSMBL44_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 100 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 34 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl44_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL44_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl44_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL44_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl44_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL44_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 34 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.06 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl44_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL44_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 38 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl44_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL44_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 77 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.06 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl44_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL44_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.06 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl44_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL44_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

2412764    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
2412765    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
2412766    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
2412767    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2412768    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
2412769    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
2412770    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
2412771    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2412772    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2412773    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
2412773  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.

2412774    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

2412775    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
2412776    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
2412777    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2412778    filename _pref
2412778  ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural11\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural11\EMPUBLISHSCORE.sas";
2412779    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2412780    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural11\EMPUBLISHSCORE.sas.
2412781   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2412782   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2412783   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2412784   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2412785   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2412786   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2412787   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2412788   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2412789   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2412790   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2412791   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2412792   +LENGTH _WARN_ $4
2412793   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
2412794   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2412795   +
2412796   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2412797   +
2412798   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2412799   +
2412800   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2412801   +
2412802   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2412803   +
2412804   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2412805   +
2412806   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2412807   +
2412808   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2412809   +
2412810   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2412811   +
2412812   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2412813   +
2412814   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2412815   +
2412816   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2412817   +
2412818   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2412819   +
2412820   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2412821   +
2412822   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2412823   +
2412824   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2412825   +
2412826   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2412827   +
2412828   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2412829   +
2412830   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2412831   +
2412832   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2412833   +
2412834   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2412835   +
2412836   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2412837   +
2412838   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2412839   +
2412840   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2412841   +
2412842   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2412843   +
2412844   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2412845   +
2412846   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2412847   +
2412848   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2412849   +
2412850   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2412851   +
2412852   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2412853   +
2412854   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2412855   +
2412856   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2412857   +
2412858   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2412859   +
2412860   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2412861   +
2412862   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2412863   +
2412864   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2412865   +
2412866   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2412867   +
2412868   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2412869   +
2412870   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2412871   +
2412872   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2412873   +
2412874   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2412875   +
2412876   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2412877   +
2412878   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
2412879   +
2412880   +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
2412881   +
2412882   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2412883   +
2412884   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2412885   +
2412886   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2412887   +
2412888   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2412889   +
2412890   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2412891   +
2412892   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2412893   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2412894   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2412895   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2412896   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2412897   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2412898   +end;
MPRINT(EM_DIAGRAM):   end;
2412899   +else do;
MPRINT(EM_DIAGRAM):   else do;
2412900   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2412901   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2412902   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2412903   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2412904   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2412905   +   end;
MPRINT(EM_DIAGRAM):   end;
2412906   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2412907   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2412908   +   end;
MPRINT(EM_DIAGRAM):   end;
2412909   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2412910   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2412911   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2412912   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2412913   +   end;
MPRINT(EM_DIAGRAM):   end;
2412914   +end;
MPRINT(EM_DIAGRAM):   end;
2412915   +
2412916   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2412917   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2412918   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2412919   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2412920   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2412921   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2412922   +end;
MPRINT(EM_DIAGRAM):   end;
2412923   +else do;
MPRINT(EM_DIAGRAM):   else do;
2412924   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2412925   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2412926   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2412927   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2412928   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2412929   +   end;
MPRINT(EM_DIAGRAM):   end;
2412930   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2412931   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2412932   +   end;
MPRINT(EM_DIAGRAM):   end;
2412933   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2412934   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2412935   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2412936   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2412937   +   end;
MPRINT(EM_DIAGRAM):   end;
2412938   +end;
MPRINT(EM_DIAGRAM):   end;
2412939   +
2412940   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2412941   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2412942   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2412943   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2412944   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2412945   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2412946   +end;
MPRINT(EM_DIAGRAM):   end;
2412947   +else do;
MPRINT(EM_DIAGRAM):   else do;
2412948   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2412949   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2412950   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2412951   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2412952   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2412953   +   end;
MPRINT(EM_DIAGRAM):   end;
2412954   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2412955   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2412956   +   end;
MPRINT(EM_DIAGRAM):   end;
2412957   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2412958   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2412959   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2412960   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2412961   +   end;
MPRINT(EM_DIAGRAM):   end;
2412962   +end;
MPRINT(EM_DIAGRAM):   end;
2412963   +
2412964   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2412965   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2412966   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2412967   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2412968   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2412969   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2412970   +end;
MPRINT(EM_DIAGRAM):   end;
2412971   +else do;
MPRINT(EM_DIAGRAM):   else do;
2412972   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2412973   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2412974   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2412975   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2412976   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2412977   +   end;
MPRINT(EM_DIAGRAM):   end;
2412978   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2412979   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2412980   +   end;
MPRINT(EM_DIAGRAM):   end;
2412981   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2412982   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2412983   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2412984   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2412985   +   end;
MPRINT(EM_DIAGRAM):   end;
2412986   +end;
MPRINT(EM_DIAGRAM):   end;
2412987   +
2412988   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2412989   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2412990   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2412991   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2412992   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2412993   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2412994   +end;
MPRINT(EM_DIAGRAM):   end;
2412995   +else do;
MPRINT(EM_DIAGRAM):   else do;
2412996   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2412997   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2412998   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2412999   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2413000   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2413001   +   end;
MPRINT(EM_DIAGRAM):   end;
2413002   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2413003   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2413004   +   end;
MPRINT(EM_DIAGRAM):   end;
2413005   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2413006   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2413007   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2413008   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2413009   +   end;
MPRINT(EM_DIAGRAM):   end;
2413010   +end;
MPRINT(EM_DIAGRAM):   end;
2413011   +
2413012   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2413013   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2413014   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2413015   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2413016   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2413017   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2413018   +end;
MPRINT(EM_DIAGRAM):   end;
2413019   +else do;
MPRINT(EM_DIAGRAM):   else do;
2413020   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2413021   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2413022   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2413023   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2413024   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2413025   +   end;
MPRINT(EM_DIAGRAM):   end;
2413026   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2413027   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2413028   +   end;
MPRINT(EM_DIAGRAM):   end;
2413029   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2413030   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2413031   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2413032   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2413033   +   end;
MPRINT(EM_DIAGRAM):   end;
2413034   +end;
MPRINT(EM_DIAGRAM):   end;
2413035   +
2413036   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2413037   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2413038   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2413039   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2413040   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2413041   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2413042   +end;
MPRINT(EM_DIAGRAM):   end;
2413043   +else do;
MPRINT(EM_DIAGRAM):   else do;
2413044   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2413045   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2413046   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2413047   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2413048   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2413049   +   end;
MPRINT(EM_DIAGRAM):   end;
2413050   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2413051   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2413052   +   end;
MPRINT(EM_DIAGRAM):   end;
2413053   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2413054   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2413055   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2413056   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2413057   +   end;
MPRINT(EM_DIAGRAM):   end;
2413058   +end;
MPRINT(EM_DIAGRAM):   end;
2413059   +
2413060   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2413061   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
2413062   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2413063   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2413064   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2413065   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2413066   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2413067   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2413068   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2413069   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2413070   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2413071   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2413072   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2413073   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2413074   +end;
MPRINT(EM_DIAGRAM):   end;
2413075   +else do;
MPRINT(EM_DIAGRAM):   else do;
2413076   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2413077   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2413078   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2413079   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2413080   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2413081   +   end;
MPRINT(EM_DIAGRAM):   end;
2413082   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2413083   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2413084   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2413085   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2413086   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2413087   +   end;
MPRINT(EM_DIAGRAM):   end;
2413088   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2413089   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2413090   +   end;
MPRINT(EM_DIAGRAM):   end;
2413091   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2413092   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2413093   +   end;
MPRINT(EM_DIAGRAM):   end;
2413094   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2413095   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2413096   +   end;
MPRINT(EM_DIAGRAM):   end;
2413097   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2413098   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2413099   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2413100   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2413101   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2413102   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2413103   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2413104   +   end;
MPRINT(EM_DIAGRAM):   end;
2413105   +end;
MPRINT(EM_DIAGRAM):   end;
2413106   +
2413107   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2413108   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2413109   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
2413110   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2413111   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2413112   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2413113   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2413114   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2413115   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2413116   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2413117   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2413118   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2413119   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2413120   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2413121   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2413122   +end;
MPRINT(EM_DIAGRAM):   end;
2413123   +else do;
MPRINT(EM_DIAGRAM):   else do;
2413124   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2413125   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2413126   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2413127   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2413128   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2413129   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2413130   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2413131   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2413132   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2413133   +         end;
MPRINT(EM_DIAGRAM):   end;
2413134   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2413135   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2413136   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2413137   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2413138   +            end;
MPRINT(EM_DIAGRAM):   end;
2413139   +         end;
MPRINT(EM_DIAGRAM):   end;
2413140   +      end;
MPRINT(EM_DIAGRAM):   end;
2413141   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2413142   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2413143   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2413144   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2413145   +         end;
MPRINT(EM_DIAGRAM):   end;
2413146   +      end;
MPRINT(EM_DIAGRAM):   end;
2413147   +   end;
MPRINT(EM_DIAGRAM):   end;
2413148   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2413149   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2413150   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2413151   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2413152   +      end;
MPRINT(EM_DIAGRAM):   end;
2413153   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2413154   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2413155   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2413156   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2413157   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2413158   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2413159   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2413160   +         end;
MPRINT(EM_DIAGRAM):   end;
2413161   +      end;
MPRINT(EM_DIAGRAM):   end;
2413162   +   end;
MPRINT(EM_DIAGRAM):   end;
2413163   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2413164   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2413165   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2413166   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2413167   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2413168   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2413169   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2413170   +   end;
MPRINT(EM_DIAGRAM):   end;
2413171   +end;
MPRINT(EM_DIAGRAM):   end;
2413172   +
2413173   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2413174   +*** Checking missing input Interval
2413175   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2413176   +
2413177   +IF NMISS(
2413178   +   AcceptedCmpTotal ,
2413179   +   Age ,
2413180   +   Frq ,
2413181   +   Income ,
2413182   +   Kidhome ,
2413183   +   Mnt ,
2413184   +   MntFishProducts ,
2413185   +   MntFruits ,
2413186   +   MntGoldProds ,
2413187   +   MntMeatProducts ,
2413188   +   MntSweetProducts ,
2413189   +   MntWines ,
2413190   +   MonthsAsCustomer ,
2413191   +   NumCatalogPurchases ,
2413192   +   NumDealsPurchases ,
2413193   +   NumDistPurchases ,
2413194   +   NumStorePurchases ,
2413195   +   NumWebPurchases ,
2413196   +   NumWebVisitsMonth ,
2413197   +   RFMstat ,
2413198   +   RMntFrq ,
2413199   +   Recency ,
2413200   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
2413201   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2413202   +
2413203   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2413204   +END;
MPRINT(EM_DIAGRAM):   END;
2413205   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2413206   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2413207   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2413208   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2413209   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2413210   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2413211   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2413212   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2413213   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2413214   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2413215   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2413216   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2413217   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2413218   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2413219   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2413220   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2413221   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2413222   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2413223   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2413224   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2413225   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2413226   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2413227   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
2413228   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2413229   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2413230   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2413231   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2413232   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2413233   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2413234   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2413235   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2413236   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2413237   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2413238   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2413239   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2413240   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2413241   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2413242   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2413243   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2413244   +END;
MPRINT(EM_DIAGRAM):   END;
2413245   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2413246   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2413247   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2413248   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2413249   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2413250   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2413251   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2413252   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2413253   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2413254   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2413255   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2413256   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2413257   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2413258   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2413259   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2413260   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2413261   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2413262   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2413263   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2413264   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2413265   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2413266   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2413267   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
2413268   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2413269   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2413270   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2413271   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2413272   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2413273   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2413274   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2413275   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2413276   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2413277   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2413278   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
2413279   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2413280   +   ELSE S_NumCatalogPurchases
2413281   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2413282   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2413283   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2413284   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2413285   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2413286   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2413287   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2413288   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2413289   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2413290   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2413291   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2413292   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2413293   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2413294   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2413295   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2413296   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2413297   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2413298   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2413299   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2413300   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2413301   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2413302   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2413303   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2413304   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2413305   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2413306   +END;
MPRINT(EM_DIAGRAM):   END;
2413307   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2413308   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2413309   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2413310   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2413311   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2413312   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2413313   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2413314   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2413315   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2413316   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2413317   +   H1x1_1  =     0.08465472857554 * S_AcceptedCmpTotal
2413318   +          +     0.23104131534618 * S_Age  +     0.27646175976509 * S_Frq
2413319   +          +     0.45938840681203 * S_Income  +     0.09814900830666 *
2413320   +        S_Kidhome  +     0.23249430277518 * S_Mnt  +    -0.51905493105122 *
2413321   +        S_MntFishProducts  +    -0.07604226481078 * S_MntFruits
2413322   +          +     0.10100393832157 * S_MntGoldProds  +     1.56159221713858 *
2413323   +        S_MntMeatProducts  +     0.12166799382268 * S_MntSweetProducts
2413324   +          +    -0.63388816790524 * S_MntWines  +     0.00878303775585 *
2413325   +        S_MonthsAsCustomer  +     0.01990411233136 * S_NumCatalogPurchases
2413326   +          +     0.19770934886328 * S_NumDealsPurchases
2413327   +          +      0.0515215988111 * S_NumDistPurchases
2413328   +          +    -0.34569346346089 * S_NumStorePurchases
2413329   +          +    -0.27122293596124 * S_NumWebPurchases
2413330   +          +    -0.17061565609755 * S_NumWebVisitsMonth
2413331   +          +      0.1271178187502 * S_RFMstat  +     0.38306508975954 *
2413332   +        S_RMntFrq  +     0.05823588653853 * S_Recency
2413333   +          +    -0.03760117378617 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.08465472857554 * S_AcceptedCmpTotal + 0.23104131534618 * 
S_Age + 0.27646175976509 * S_Frq + 0.45938840681203 * S_Income + 0.09814900830666 * S_Kidhome 
+ 0.23249430277518 * S_Mnt + -0.51905493105122 * S_MntFishProducts + -0.07604226481078 * 
S_MntFruits + 0.10100393832157 * S_MntGoldProds + 1.56159221713858 * S_MntMeatProducts + 
0.12166799382268 * S_MntSweetProducts + -0.63388816790524 * S_MntWines + 0.00878303775585 * 
S_MonthsAsCustomer + 0.01990411233136 * S_NumCatalogPurchases + 0.19770934886328 * 
S_NumDealsPurchases + 0.0515215988111 * S_NumDistPurchases + -0.34569346346089 * 
S_NumStorePurchases + -0.27122293596124 * S_NumWebPurchases + -0.17061565609755 * 
S_NumWebVisitsMonth + 0.1271178187502 * S_RFMstat + 0.38306508975954 * S_RMntFrq + 
0.05823588653853 * S_Recency + -0.03760117378617 * S_Teenhome ;
2413334   +   H1x1_2  =     0.16564144258189 * S_AcceptedCmpTotal
2413335   +          +    -0.18930338067433 * S_Age  +    -0.23013558761757 * S_Frq
2413336   +          +     -0.1347135122598 * S_Income  +     0.04776498811407 *
2413337   +        S_Kidhome  +    -0.14940302068852 * S_Mnt  +    -0.13108691405604 *
2413338   +        S_MntFishProducts  +    -0.02561341150704 * S_MntFruits
2413339   +          +    -0.02022222891948 * S_MntGoldProds  +     0.80867688993093 *
2413340   +        S_MntMeatProducts  +    -0.08374488783635 * S_MntSweetProducts
2413341   +          +     -0.6719369441832 * S_MntWines  +    -0.14760035685198 *
2413342   +        S_MonthsAsCustomer  +      0.4007376271331 * S_NumCatalogPurchases
2413343   +          +     0.54308887602031 * S_NumDealsPurchases
2413344   +          +    -0.22507315320192 * S_NumDistPurchases
2413345   +          +    -0.79861387328361 * S_NumStorePurchases
2413346   +          +    -0.45467494002747 * S_NumWebPurchases
2413347   +          +      0.2119048824613 * S_NumWebVisitsMonth
2413348   +          +     0.30167662748678 * S_RFMstat  +     0.10712110659027 *
2413349   +        S_RMntFrq  +    -0.03061918029089 * S_Recency
2413350   +          +    -0.06096313113607 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.16564144258189 * S_AcceptedCmpTotal + -0.18930338067433 * 
S_Age + -0.23013558761757 * S_Frq + -0.1347135122598 * S_Income + 0.04776498811407 * S_Kidhome 
+ -0.14940302068852 * S_Mnt + -0.13108691405604 * S_MntFishProducts + -0.02561341150704 * 
S_MntFruits + -0.02022222891948 * S_MntGoldProds + 0.80867688993093 * S_MntMeatProducts + 
-0.08374488783635 * S_MntSweetProducts + -0.6719369441832 * S_MntWines + -0.14760035685198 * 
S_MonthsAsCustomer + 0.4007376271331 * S_NumCatalogPurchases + 0.54308887602031 * 
S_NumDealsPurchases + -0.22507315320192 * S_NumDistPurchases + -0.79861387328361 * 
S_NumStorePurchases + -0.45467494002747 * S_NumWebPurchases + 0.2119048824613 * 
S_NumWebVisitsMonth + 0.30167662748678 * S_RFMstat + 0.10712110659027 * S_RMntFrq + 
-0.03061918029089 * S_Recency + -0.06096313113607 * S_Teenhome ;
2413351   +   H1x1_3  =     0.02674875562898 * S_AcceptedCmpTotal
2413352   +          +    -0.19731891748843 * S_Age  +    -0.00753784701259 * S_Frq
2413353   +          +    -0.31764694608254 * S_Income  +     0.49525183733398 *
2413354   +        S_Kidhome  +     0.24623619243686 * S_Mnt  +     0.25904859702044 *
2413355   +        S_MntFishProducts  +     0.26153358982994 * S_MntFruits
2413356   +          +    -0.07223707213485 * S_MntGoldProds  +    -0.15192960471493 *
2413357   +        S_MntMeatProducts  +     0.08241128624385 * S_MntSweetProducts
2413358   +          +     0.62479763709054 * S_MntWines  +     0.03593742779349 *
2413359   +        S_MonthsAsCustomer  +     0.00825730323418 * S_NumCatalogPurchases
2413360   +          +     -0.0771083149302 * S_NumDealsPurchases
2413361   +          +     0.03403621221162 * S_NumDistPurchases
2413362   +          +     0.61303946422025 * S_NumStorePurchases
2413363   +          +     0.27126793634053 * S_NumWebPurchases
2413364   +          +     -0.9769688424222 * S_NumWebVisitsMonth
2413365   +          +     0.08832170040425 * S_RFMstat  +     0.13241491054212 *
2413366   +        S_RMntFrq  +     0.94872655811163 * S_Recency
2413367   +          +     0.22002222738147 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.02674875562898 * S_AcceptedCmpTotal + -0.19731891748843 * 
S_Age + -0.00753784701259 * S_Frq + -0.31764694608254 * S_Income + 0.49525183733398 * 
S_Kidhome + 0.24623619243686 * S_Mnt + 0.25904859702044 * S_MntFishProducts + 0.26153358982994 
* S_MntFruits + -0.07223707213485 * S_MntGoldProds + -0.15192960471493 * S_MntMeatProducts + 
0.08241128624385 * S_MntSweetProducts + 0.62479763709054 * S_MntWines + 0.03593742779349 * 
S_MonthsAsCustomer + 0.00825730323418 * S_NumCatalogPurchases + -0.0771083149302 * 
S_NumDealsPurchases + 0.03403621221162 * S_NumDistPurchases + 0.61303946422025 * 
S_NumStorePurchases + 0.27126793634053 * S_NumWebPurchases + -0.9769688424222 * 
S_NumWebVisitsMonth + 0.08832170040425 * S_RFMstat + 0.13241491054212 * S_RMntFrq + 
0.94872655811163 * S_Recency + 0.22002222738147 * S_Teenhome ;
2413368   +   H1x1_4  =     0.46328587348713 * S_AcceptedCmpTotal
2413369   +          +      -0.306946385792 * S_Age  +    -0.24247964225191 * S_Frq
2413370   +          +    -0.42968609314513 * S_Income  +    -0.08934431746158 *
2413371   +        S_Kidhome  +     0.15972194979558 * S_Mnt  +    -0.22174909818279 *
2413372   +        S_MntFishProducts  +    -0.23755215058744 * S_MntFruits
2413373   +          +      -0.124789433808 * S_MntGoldProds  +     0.50040173514144 *
2413374   +        S_MntMeatProducts  +     0.02850063230459 * S_MntSweetProducts
2413375   +          +     0.13427582671876 * S_MntWines  +     0.25569886862761 *
2413376   +        S_MonthsAsCustomer  +     0.34004201732149 * S_NumCatalogPurchases
2413377   +          +     0.29894603062327 * S_NumDealsPurchases
2413378   +          +     0.07614620530875 * S_NumDistPurchases
2413379   +          +     0.15402335009896 * S_NumStorePurchases
2413380   +          +     0.10615749096863 * S_NumWebPurchases
2413381   +          +     0.41962286816879 * S_NumWebVisitsMonth
2413382   +          +     0.00203630873093 * S_RFMstat  +     0.04736976805951 *
2413383   +        S_RMntFrq  +    -0.84751074132422 * S_Recency
2413384   +          +      0.2189023557249 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.46328587348713 * S_AcceptedCmpTotal + -0.306946385792 * S_Age 
+ -0.24247964225191 * S_Frq + -0.42968609314513 * S_Income + -0.08934431746158 * S_Kidhome + 
0.15972194979558 * S_Mnt + -0.22174909818279 * S_MntFishProducts + -0.23755215058744 * 
S_MntFruits + -0.124789433808 * S_MntGoldProds + 0.50040173514144 * S_MntMeatProducts + 
0.02850063230459 * S_MntSweetProducts + 0.13427582671876 * S_MntWines + 0.25569886862761 * 
S_MonthsAsCustomer + 0.34004201732149 * S_NumCatalogPurchases + 0.29894603062327 * 
S_NumDealsPurchases + 0.07614620530875 * S_NumDistPurchases + 0.15402335009896 * 
S_NumStorePurchases + 0.10615749096863 * S_NumWebPurchases + 0.41962286816879 * 
S_NumWebVisitsMonth + 0.00203630873093 * S_RFMstat + 0.04736976805951 * S_RMntFrq + 
-0.84751074132422 * S_Recency + 0.2189023557249 * S_Teenhome ;
2413385   +   H1x1_5  =    -0.32353341757368 * S_AcceptedCmpTotal
2413386   +          +     0.03233494925748 * S_Age  +    -0.21296093282526 * S_Frq
2413387   +          +    -0.33919081075007 * S_Income  +     0.08771362671573 *
2413388   +        S_Kidhome  +    -0.10797068838726 * S_Mnt  +    -0.19736358637985 *
2413389   +        S_MntFishProducts  +    -0.19679917231132 * S_MntFruits
2413390   +          +     0.07502386205588 * S_MntGoldProds  +    -0.50948750987247 *
2413391   +        S_MntMeatProducts  +     0.00413757018488 * S_MntSweetProducts
2413392   +          +      0.0788538305785 * S_MntWines  +    -0.02917052455021 *
2413393   +        S_MonthsAsCustomer  +    -0.53933514609821 * S_NumCatalogPurchases
2413394   +          +     0.14392502416642 * S_NumDealsPurchases
2413395   +          +    -0.10026304978633 * S_NumDistPurchases
2413396   +          +     -0.0588453022746 * S_NumStorePurchases
2413397   +          +     0.24799398610395 * S_NumWebPurchases
2413398   +          +    -0.52695548549717 * S_NumWebVisitsMonth
2413399   +          +     0.01855620452049 * S_RFMstat  +    -0.00189170766477 *
2413400   +        S_RMntFrq  +     0.51841177421912 * S_Recency
2413401   +          +     0.31491299720207 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.32353341757368 * S_AcceptedCmpTotal + 0.03233494925748 * 
S_Age + -0.21296093282526 * S_Frq + -0.33919081075007 * S_Income + 0.08771362671573 * 
S_Kidhome + -0.10797068838726 * S_Mnt + -0.19736358637985 * S_MntFishProducts + 
-0.19679917231132 * S_MntFruits + 0.07502386205588 * S_MntGoldProds + -0.50948750987247 * 
S_MntMeatProducts + 0.00413757018488 * S_MntSweetProducts + 0.0788538305785 * S_MntWines + 
-0.02917052455021 * S_MonthsAsCustomer + -0.53933514609821 * S_NumCatalogPurchases + 
0.14392502416642 * S_NumDealsPurchases + -0.10026304978633 * S_NumDistPurchases + 
-0.0588453022746 * S_NumStorePurchases + 0.24799398610395 * S_NumWebPurchases + 
-0.52695548549717 * S_NumWebVisitsMonth + 0.01855620452049 * S_RFMstat + -0.00189170766477 * 
S_RMntFrq + 0.51841177421912 * S_Recency + 0.31491299720207 * S_Teenhome ;
2413402   +   H1x1_6  =     -0.2113594539647 * S_AcceptedCmpTotal
2413403   +          +     -0.1052829531896 * S_Age  +     0.30802959734964 * S_Frq
2413404   +          +    -0.03112570586685 * S_Income  +     0.19129661263247 *
2413405   +        S_Kidhome  +     0.00533736622639 * S_Mnt  +    -0.06112703732925 *
2413406   +        S_MntFishProducts  +    -0.15875686512247 * S_MntFruits
2413407   +          +    -0.08040179272112 * S_MntGoldProds  +    -0.14462087536907 *
2413408   +        S_MntMeatProducts  +     0.21353582706121 * S_MntSweetProducts
2413409   +          +    -0.30180630737612 * S_MntWines  +    -0.11825033043182 *
2413410   +        S_MonthsAsCustomer  +     -0.2917393256645 * S_NumCatalogPurchases
2413411   +          +     0.08149600854964 * S_NumDealsPurchases
2413412   +          +     0.16873541613513 * S_NumDistPurchases
2413413   +          +    -0.20437343413446 * S_NumStorePurchases
2413414   +          +     -0.1671107527288 * S_NumWebPurchases
2413415   +          +     0.03677043100993 * S_NumWebVisitsMonth
2413416   +          +      0.0240516540488 * S_RFMstat  +     0.06155030856383 *
2413417   +        S_RMntFrq  +    -0.28802122451372 * S_Recency
2413418   +          +     0.06998878697307 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -0.2113594539647 * S_AcceptedCmpTotal + -0.1052829531896 * 
S_Age + 0.30802959734964 * S_Frq + -0.03112570586685 * S_Income + 0.19129661263247 * S_Kidhome 
+ 0.00533736622639 * S_Mnt + -0.06112703732925 * S_MntFishProducts + -0.15875686512247 * 
S_MntFruits + -0.08040179272112 * S_MntGoldProds + -0.14462087536907 * S_MntMeatProducts + 
0.21353582706121 * S_MntSweetProducts + -0.30180630737612 * S_MntWines + -0.11825033043182 * 
S_MonthsAsCustomer + -0.2917393256645 * S_NumCatalogPurchases + 0.08149600854964 * 
S_NumDealsPurchases + 0.16873541613513 * S_NumDistPurchases + -0.20437343413446 * 
S_NumStorePurchases + -0.1671107527288 * S_NumWebPurchases + 0.03677043100993 * 
S_NumWebVisitsMonth + 0.0240516540488 * S_RFMstat + 0.06155030856383 * S_RMntFrq + 
-0.28802122451372 * S_Recency + 0.06998878697307 * S_Teenhome ;
2413419   +   H1x1_1  = H1x1_1  +    -0.33641509021082 * AcceptedCmp10
2413420   +          +     0.03092292109435 * AcceptedCmp20  +    -0.23551187181907 *
2413421   +        AcceptedCmp30  +    -0.06694400005185 * AcceptedCmp40
2413422   +          +    -0.14203506237074 * AcceptedCmp50  +    -0.25866390496966 *
2413423   +        Complain0  +     0.19505921178308 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.33641509021082 * AcceptedCmp10 + 0.03092292109435 * 
AcceptedCmp20 + -0.23551187181907 * AcceptedCmp30 + -0.06694400005185 * AcceptedCmp40 + 
-0.14203506237074 * AcceptedCmp50 + -0.25866390496966 * Complain0 + 0.19505921178308 * 
HigherEducationBinary0 ;
2413424   +   H1x1_2  = H1x1_2  +     0.09937599707203 * AcceptedCmp10
2413425   +          +     0.03831208573575 * AcceptedCmp20  +     0.39683693019758 *
2413426   +        AcceptedCmp30  +     0.37006277175295 * AcceptedCmp40
2413427   +          +     0.21293419476895 * AcceptedCmp50  +     0.15528568367473 *
2413428   +        Complain0  +    -0.30210013299822 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.09937599707203 * AcceptedCmp10 + 0.03831208573575 * 
AcceptedCmp20 + 0.39683693019758 * AcceptedCmp30 + 0.37006277175295 * AcceptedCmp40 + 
0.21293419476895 * AcceptedCmp50 + 0.15528568367473 * Complain0 + -0.30210013299822 * 
HigherEducationBinary0 ;
2413429   +   H1x1_3  = H1x1_3  +     0.29891621770856 * AcceptedCmp10
2413430   +          +     0.64938384482014 * AcceptedCmp20  +     0.44997242602142 *
2413431   +        AcceptedCmp30  +       0.479093722666 * AcceptedCmp40
2413432   +          +     0.50957180373919 * AcceptedCmp50  +     0.27833535432461 *
2413433   +        Complain0  +    -0.20383534906723 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.29891621770856 * AcceptedCmp10 + 0.64938384482014 * 
AcceptedCmp20 + 0.44997242602142 * AcceptedCmp30 + 0.479093722666 * AcceptedCmp40 + 
0.50957180373919 * AcceptedCmp50 + 0.27833535432461 * Complain0 + -0.20383534906723 * 
HigherEducationBinary0 ;
2413434   +   H1x1_4  = H1x1_4  +    -0.26872515586946 * AcceptedCmp10
2413435   +          +    -0.24299337381911 * AcceptedCmp20  +    -0.01147155911926 *
2413436   +        AcceptedCmp30  +     -0.3056041277894 * AcceptedCmp40
2413437   +          +    -0.05496409609003 * AcceptedCmp50  +     0.07858238173893 *
2413438   +        Complain0  +     0.05721550070076 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.26872515586946 * AcceptedCmp10 + -0.24299337381911 
* AcceptedCmp20 + -0.01147155911926 * AcceptedCmp30 + -0.3056041277894 * AcceptedCmp40 + 
-0.05496409609003 * AcceptedCmp50 + 0.07858238173893 * Complain0 + 0.05721550070076 * 
HigherEducationBinary0 ;
2413439   +   H1x1_5  = H1x1_5  +    -0.14067626649899 * AcceptedCmp10
2413440   +          +    -0.30627802828357 * AcceptedCmp20  +     0.05057942365592 *
2413441   +        AcceptedCmp30  +    -0.10378506600459 * AcceptedCmp40
2413442   +          +     0.07479232390108 * AcceptedCmp50  +     0.07252750671496 *
2413443   +        Complain0  +     0.11114854035831 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.14067626649899 * AcceptedCmp10 + -0.30627802828357 
* AcceptedCmp20 + 0.05057942365592 * AcceptedCmp30 + -0.10378506600459 * AcceptedCmp40 + 
0.07479232390108 * AcceptedCmp50 + 0.07252750671496 * Complain0 + 0.11114854035831 * 
HigherEducationBinary0 ;
2413444   +   H1x1_6  = H1x1_6  +    -0.25806332334976 * AcceptedCmp10
2413445   +          +     0.03944021903138 * AcceptedCmp20  +    -0.08792206887119 *
2413446   +        AcceptedCmp30  +    -0.24631282865199 * AcceptedCmp40
2413447   +          +    -0.06123991538969 * AcceptedCmp50  +    -0.03114784375357 *
2413448   +        Complain0  +    -0.25204544481193 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + -0.25806332334976 * AcceptedCmp10 + 0.03944021903138 * 
AcceptedCmp20 + -0.08792206887119 * AcceptedCmp30 + -0.24631282865199 * AcceptedCmp40 + 
-0.06123991538969 * AcceptedCmp50 + -0.03114784375357 * Complain0 + -0.25204544481193 * 
HigherEducationBinary0 ;
2413449   +   H1x1_1  = H1x1_1  +      0.2972170984261 * Education2n_Cycle
2413450   +          +     0.01651368568996 * EducationBasic  +     -0.1186055936649 *
2413451   +        EducationGraduation  +      0.0228208538951 * EducationMaster
2413452   +          +    -0.31045295887604 * Marital_StatusDivorced
2413453   +          +    -0.01109401001539 * Marital_StatusMarried
2413454   +          +     0.01325135981025 * Marital_StatusSingle
2413455   +          +     0.16609357475978 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.2972170984261 * Education2n_Cycle + 0.01651368568996 
* EducationBasic + -0.1186055936649 * EducationGraduation + 0.0228208538951 * EducationMaster 
+ -0.31045295887604 * Marital_StatusDivorced + -0.01109401001539 * Marital_StatusMarried + 
0.01325135981025 * Marital_StatusSingle + 0.16609357475978 * Marital_StatusTogether ;
2413456   +   H1x1_2  = H1x1_2  +    -0.07095220065018 * Education2n_Cycle
2413457   +          +    -0.23491732567608 * EducationBasic  +     0.20187086452315 *
2413458   +        EducationGraduation  +     0.07524128723108 * EducationMaster
2413459   +          +     0.02275101861599 * Marital_StatusDivorced
2413460   +          +     0.20271548664903 * Marital_StatusMarried
2413461   +          +    -0.12132069210718 * Marital_StatusSingle
2413462   +          +     0.00085090729385 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.07095220065018 * Education2n_Cycle + 
-0.23491732567608 * EducationBasic + 0.20187086452315 * EducationGraduation + 0.07524128723108 
* EducationMaster + 0.02275101861599 * Marital_StatusDivorced + 0.20271548664903 * 
Marital_StatusMarried + -0.12132069210718 * Marital_StatusSingle + 0.00085090729385 * 
Marital_StatusTogether ;
2413463   +   H1x1_3  = H1x1_3  +    -0.02268297689573 * Education2n_Cycle
2413464   +          +     0.06359770535369 * EducationBasic  +     -0.1194001280088 *
2413465   +        EducationGraduation  +     0.17299848976308 * EducationMaster
2413466   +          +     -0.4992959703281 * Marital_StatusDivorced
2413467   +          +     0.62071659624138 * Marital_StatusMarried
2413468   +          +    -0.21776202274494 * Marital_StatusSingle
2413469   +          +     0.54712874598141 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.02268297689573 * Education2n_Cycle + 
0.06359770535369 * EducationBasic + -0.1194001280088 * EducationGraduation + 0.17299848976308 
* EducationMaster + -0.4992959703281 * Marital_StatusDivorced + 0.62071659624138 * 
Marital_StatusMarried + -0.21776202274494 * Marital_StatusSingle + 0.54712874598141 * 
Marital_StatusTogether ;
2413470   +   H1x1_4  = H1x1_4  +    -0.17773353520266 * Education2n_Cycle
2413471   +          +     0.17998728120628 * EducationBasic  +    -0.00324602612825 *
2413472   +        EducationGraduation  +    -0.22448876765089 * EducationMaster
2413473   +          +     0.05626212670587 * Marital_StatusDivorced
2413474   +          +     0.14353891364597 * Marital_StatusMarried
2413475   +          +    -0.29006765622997 * Marital_StatusSingle
2413476   +          +     0.05503638282535 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.17773353520266 * Education2n_Cycle + 
0.17998728120628 * EducationBasic + -0.00324602612825 * EducationGraduation + 
-0.22448876765089 * EducationMaster + 0.05626212670587 * Marital_StatusDivorced + 
0.14353891364597 * Marital_StatusMarried + -0.29006765622997 * Marital_StatusSingle + 
0.05503638282535 * Marital_StatusTogether ;
2413477   +   H1x1_5  = H1x1_5  +     0.06634316870499 * Education2n_Cycle
2413478   +          +    -0.36153880127411 * EducationBasic  +     0.23023144658635 *
2413479   +        EducationGraduation  +    -0.06568730318683 * EducationMaster
2413480   +          +    -0.21206913700604 * Marital_StatusDivorced
2413481   +          +     0.58790643614629 * Marital_StatusMarried
2413482   +          +    -0.65995982578062 * Marital_StatusSingle
2413483   +          +     0.49642503732428 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 0.06634316870499 * Education2n_Cycle + 
-0.36153880127411 * EducationBasic + 0.23023144658635 * EducationGraduation + 
-0.06568730318683 * EducationMaster + -0.21206913700604 * Marital_StatusDivorced + 
0.58790643614629 * Marital_StatusMarried + -0.65995982578062 * Marital_StatusSingle + 
0.49642503732428 * Marital_StatusTogether ;
2413484   +   H1x1_6  = H1x1_6  +     0.16504024096118 * Education2n_Cycle
2413485   +          +     0.11925867171875 * EducationBasic  +    -0.04213907014732 *
2413486   +        EducationGraduation  +    -0.21389968555475 * EducationMaster
2413487   +          +    -0.05047370516008 * Marital_StatusDivorced
2413488   +          +    -0.23139090963669 * Marital_StatusMarried
2413489   +          +     0.04816197463249 * Marital_StatusSingle
2413490   +          +     0.04977890114896 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + 0.16504024096118 * Education2n_Cycle + 
0.11925867171875 * EducationBasic + -0.04213907014732 * EducationGraduation + 
-0.21389968555475 * EducationMaster + -0.05047370516008 * Marital_StatusDivorced + 
-0.23139090963669 * Marital_StatusMarried + 0.04816197463249 * Marital_StatusSingle + 
0.04977890114896 * Marital_StatusTogether ;
2413491   +   H1x1_1  =    -1.90576647346127 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.90576647346127 + H1x1_1 ;
2413492   +   H1x1_2  =     0.32295787429294 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.32295787429294 + H1x1_2 ;
2413493   +   H1x1_3  =     0.75117643107919 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.75117643107919 + H1x1_3 ;
2413494   +   H1x1_4  =      1.2336762751587 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.2336762751587 + H1x1_4 ;
2413495   +   H1x1_5  =    -0.97062317465491 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.97062317465491 + H1x1_5 ;
2413496   +   H1x1_6  =    -1.15756803634408 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -1.15756803634408 + H1x1_6 ;
2413497   +   _EPS = SQRT(CONSTANT('MACEPS')) ;
MPRINT(EM_DIAGRAM):   _EPS = SQRT(CONSTANT('MACEPS')) ;
2413498   +   _REC_EPS = 1/_EPS ;
MPRINT(EM_DIAGRAM):   _REC_EPS = 1/_EPS ;
2413499   +   DROP _REC_EPS _EPS ;
MPRINT(EM_DIAGRAM):   DROP _REC_EPS _EPS ;
2413500   +   IF H1x1_1  < _REC_EPS AND H1x1_1  > - _REC_EPS THEN
2413501   +   H1x1_1  = H1x1_1  * H1x1_1 ;
MPRINT(EM_DIAGRAM):   IF H1x1_1 < _REC_EPS AND H1x1_1 > - _REC_EPS THEN H1x1_1 = H1x1_1 * 
H1x1_1 ;
2413502   +   ELSE H1x1_1  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_1 = _REC_EPS ;
2413503   +   IF H1x1_2  < _REC_EPS AND H1x1_2  > - _REC_EPS THEN
2413504   +   H1x1_2  = H1x1_2  * H1x1_2 ;
MPRINT(EM_DIAGRAM):   IF H1x1_2 < _REC_EPS AND H1x1_2 > - _REC_EPS THEN H1x1_2 = H1x1_2 * 
H1x1_2 ;
2413505   +   ELSE H1x1_2  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_2 = _REC_EPS ;
2413506   +   IF H1x1_3  < _REC_EPS AND H1x1_3  > - _REC_EPS THEN
2413507   +   H1x1_3  = H1x1_3  * H1x1_3 ;
MPRINT(EM_DIAGRAM):   IF H1x1_3 < _REC_EPS AND H1x1_3 > - _REC_EPS THEN H1x1_3 = H1x1_3 * 
H1x1_3 ;
2413508   +   ELSE H1x1_3  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_3 = _REC_EPS ;
2413509   +   IF H1x1_4  < _REC_EPS AND H1x1_4  > - _REC_EPS THEN
2413510   +   H1x1_4  = H1x1_4  * H1x1_4 ;
MPRINT(EM_DIAGRAM):   IF H1x1_4 < _REC_EPS AND H1x1_4 > - _REC_EPS THEN H1x1_4 = H1x1_4 * 
H1x1_4 ;
2413511   +   ELSE H1x1_4  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_4 = _REC_EPS ;
2413512   +   IF H1x1_5  < _REC_EPS AND H1x1_5  > - _REC_EPS THEN
2413513   +   H1x1_5  = H1x1_5  * H1x1_5 ;
MPRINT(EM_DIAGRAM):   IF H1x1_5 < _REC_EPS AND H1x1_5 > - _REC_EPS THEN H1x1_5 = H1x1_5 * 
H1x1_5 ;
2413514   +   ELSE H1x1_5  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_5 = _REC_EPS ;
2413515   +   IF H1x1_6  < _REC_EPS AND H1x1_6  > - _REC_EPS THEN
2413516   +   H1x1_6  = H1x1_6  * H1x1_6 ;
MPRINT(EM_DIAGRAM):   IF H1x1_6 < _REC_EPS AND H1x1_6 > - _REC_EPS THEN H1x1_6 = H1x1_6 * 
H1x1_6 ;
2413517   +   ELSE H1x1_6  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_6 = _REC_EPS ;
2413518   +END;
MPRINT(EM_DIAGRAM):   END;
2413519   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2413520   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2413521   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2413522   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2413523   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2413524   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
2413525   +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
2413526   +END;
MPRINT(EM_DIAGRAM):   END;
2413527   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2413528   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2413529   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2413530   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2413531   +   P_DepVar1  =    -0.99830813428318 * H1x1_1  +     1.33495006526712 * H1x1_2
2413532   +          +    -1.37942150026657 * H1x1_3  +     1.22714974922576 * H1x1_4
2413533   +          +     1.73375794385595 * H1x1_5  +     -0.0100306049679 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.99830813428318 * H1x1_1 + 1.33495006526712 * H1x1_2 + 
-1.37942150026657 * H1x1_3 + 1.22714974922576 * H1x1_4 + 1.73375794385595 * H1x1_5 + 
-0.0100306049679 * H1x1_6 ;
2413534   +   P_DepVar1  =    -1.90393999986167 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.90393999986167 + P_DepVar1 ;
2413535   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2413536   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2413537   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2413538   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2413539   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2413540   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2413541   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2413542   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2413543   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2413544   +END;
MPRINT(EM_DIAGRAM):   END;
2413545   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2413546   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2413547   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2413548   +END;
MPRINT(EM_DIAGRAM):   END;
2413549   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2413550   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2413551   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2413552   +END;
MPRINT(EM_DIAGRAM):   END;
2413553   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2413554   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2413555   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2413556   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2413557   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2413558   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2413559   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2413560   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2413561   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2413562   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2413563   +END;
MPRINT(EM_DIAGRAM):   END;
2413564   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2413565   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2413566   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2413567   +drop
2413568   +H1x1_1
2413569   +H1x1_2
2413570   +H1x1_3
2413571   +H1x1_4
2413572   +H1x1_5
2413573   +H1x1_6
2413574   +;
MPRINT(EM_DIAGRAM):   drop H1x1_1 H1x1_2 H1x1_3 H1x1_4 H1x1_5 H1x1_6 ;
2413575   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2413576    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2413577    quit;
2413578    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2413579    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2413580    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2413581    retain ID 2 Node "AutoNeural11";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural11";
2413582    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2413583    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2995 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2995 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2413584    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2413585    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2413586    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2995 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2995 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2413587    proc sort data=EMWS8.AutoNeural11_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural11_variableset out=_temp2(keep=NAME 
CREATOR);
2413588    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2413589    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL11_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2413590    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2413591    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2413592    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2413593    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2413594    proc contents data=EMWS8.AutoNeural11_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural11_train out=_meta(keep=NAME) noprint;
2413595    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

2413596    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2413597    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2413598    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2413599    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2413600    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2413601    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2413602    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2413603    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2413604    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2413604  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1655 rows and 5 columns.

2413605    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2413606    proc append base=EMWS8.Ensmbl44_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl44_FCMP data=_tempx;
2413607    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL44_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1655 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL44_FCMP has 1655 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2413608    filename _pref
2413608  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
2413609    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2413610    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
2413611   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2413612   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
2413613   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2413614   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
2413615   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
2413616   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2413617    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2413618    quit;
2413619    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2413620    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2413621    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2413622    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
2413623    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2413624    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2413625    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2413626    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2413627    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2413628    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
2413629    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2413630    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2413631    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2413632    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2413633    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2413634    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2413635    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
2413636    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

2413637    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2413638    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2413639    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2413640    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2413641    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2413642    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2413643    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2413644    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2413645    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2413645  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

2413646    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2413647    proc append base=EMWS8.Ensmbl44_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl44_FCMP data=_tempx;
2413648    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL44_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL44_FCMP has 1659 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2413649    filename _pref
2413649  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
2413650    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2413651    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
2413652   +
2413653   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
2413654   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
2413654  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
2413655   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
2413656   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
2413657   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
2413658   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
2413659   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2413660    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2413661    quit;
2413662    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2413663    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2413664    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2413665    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
2413666    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2413667    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2413668    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2413669    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2413670    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2413671    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
2413672    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2413673    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2413674    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2413675    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2413676    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2413677    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2413678    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
2413679    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2413680    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2413681    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2413682    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2413683    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2413684    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2413685    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2413686    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2413687    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2413688    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2413688  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

2413689    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2413690    proc append base=EMWS8.Ensmbl44_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl44_FCMP data=_tempx;
2413691    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL44_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL44_FCMP has 1698 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2413692    filename _pref
2413692  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
2413693    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2413694    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
2413695   +
2413696   +
2413697   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
2413698   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
2413699   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
2413700   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
2413701   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
2413702   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2413703   +
2413704   +
2413705   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
2413706   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
2413707   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
2413708   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
2413709   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
2413710   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2413711   +
2413712   +
2413713   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
2413714   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
2413715   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
2413716   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
2413717   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
2413718   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2413719   +
2413720   +
2413721   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
2413722   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
2413723   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
2413724   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
2413725   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
2413726   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2413727   +
2413728   +
2413729   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
2413730   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
2413731   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
2413732   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
2413733   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
2413734   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2413735   +
2413736   +
2413737   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
2413738   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
2413739   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
2413740   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
2413741   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
2413742   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2413743   +
2413744   +
2413745   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
2413746   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
2413747   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
2413748   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
2413749   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
2413750   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2413751   +
2413752   +
2413753   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
2413754   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
2413755   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
2413756   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
2413757   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
2413758   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2413759   +if
2413760   +_FILTERNORM1 not in ( '.')
2413761   + and
2413762   +_FILTERNORM2 not in ( '.')
2413763   + and
2413764   +_FILTERNORM3 not in ( '.')
2413765   + and
2413766   +_FILTERNORM4 not in ( '.')
2413767   + and
2413768   +_FILTERNORM5 not in ( '.')
2413769   + and
2413770   +_FILTERNORM6 not in ( '.')
2413771   + and
2413772   +_FILTERNORM7 not in ( ' ')
2413773   + and
2413774   +_FILTERNORM8 not in ( ' ')
2413775   +and
2413776   +( Dt_Customer ne .)
2413777   +and ( Income ne . and (Income<=107000))
2413778   +and ( Kidhome ne .)
2413779   +and ( MntFishProducts ne .)
2413780   +and ( MntFruits ne .)
2413781   +and ( MntGoldProds ne .)
2413782   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
2413783   +and ( MntSweetProducts ne .)
2413784   +and ( MntWines ne .)
2413785   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
2413786   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
2413787   +and ( NumStorePurchases ne .)
2413788   +and ( NumWebPurchases ne .)
2413789   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
2413790   +and ( Recency ne .)
2413791   +and ( Teenhome ne .)
2413792   +and ( Year_Birth ne .)
2413793   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
2413794   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
2413795   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
2413796   +end;
MPRINT(EM_DIAGRAM):   end;
2413797   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
2413798   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2413799    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2413800    quit;
2413801    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2413802    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2413803    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2413804    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
2413805    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2413806    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2413807    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2413808    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2413809    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2413810    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
2413811    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2413812    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2413813    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2413814    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2413815    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2413816    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2413817    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
2413818    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

2413819    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2413820    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2413821    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2413822    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2413823    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2413824    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2413825    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2413826    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2413827    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2413827  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

2413828    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2413829    proc append base=EMWS8.Ensmbl44_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl44_FCMP data=_tempx;
2413830    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL44_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL44_FCMP has 1764 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2413831    %macro varDept(fcmpdata=,id=);
2413832    %global nobs&id scoreFlag&id;
2413833    %let scoreFlag&id = 0;
2413834    %if &id=1 or ^&fcmpStart %then %do;
2413835    proc sort data=&fcmpdata out=_temp&id nodupkey;
2413836    by NAME;
2413837    where id=&id and LHS in( %let j=1;
2413838    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
2413839    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
2413840    "&var" %let j = %eval(&j+1);
2413841    %end;
2413842    );
2413843    run;
2413844    %let dsid = %sysfunc(open(_temp&id));
2413845    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2413846    %let dsid = %sysfunc(close(&dsid));
2413847    %if &&nobs&id %then %do;
2413848    %let scoreFlag&id = 1;
2413849    %let fcmpStart = 1;
2413850    %end;
2413851    %else %let fcmpStart = 0;
2413852    %end;
2413853    %else %do;
2413854    proc sort data=&fcmpdata out=_tempid;
2413855    where id=&id;
2413856    by LHS;
2413857    run;
2413858    %let dsid = %sysfunc(open(_tempid));
2413859    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2413860    %let dsid = %sysfunc(close(&dsid));
2413861    %if ^&&nobs&id %then %do;
2413862    proc datasets lib=work nolist;
2413863    delete _tempid;
2413864    run;
2413865    quit;
2413866    %end;
2413867    %else %do;
2413868    data _tempAll;
2413869    set %let j=%eval(&id-1);
2413870    %do x=1 %to &j;
2413871    %if &&nobs&x %then %do;
2413872    _temp&x %end;
2413873    %end;
2413874    ;
2413875    run;
2413876    proc sql;
2413877    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
2413877  ! work._tempid p2 where p.name=p2.lhs;
2413878    quit;
2413879    data _temp&id;
2413880    set _temp&id;
2413881    where LHS ne '' and NAME ne '' and Node ne '';
2413882    run;
2413883    proc datasets lib=work nolist;
2413884    delete _tempAll;
2413885    run;
2413886    %let dsid = %sysfunc(open(_temp&id));
2413887    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2413888    %let dsid = %sysfunc(close(&dsid));
2413889    %if ^&&nobs&id %then %do;
2413890    proc datasets lib=work nolist;
2413891    delete _temp&id;
2413892    run;
2413893    quit;
2413894    %end;
2413895    %else %do;
2413896    %let scoreFlag&id = 1;
2413897    data _temp&id;
2413898    set _temp&id;
2413899    where LHS ne NAME and node ne '';
2413900    run;
2413901    %let dsid = %sysfunc(open(_temp&id));
2413902    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2413903    %let dsid = %sysfunc(close(&dsid));
2413904    %if ^&&nobs&id %then %do;
2413905    proc datasets lib=work nolist;
2413906    delete _temp&id;
2413907    run;
2413908    quit;
2413909    %end;
2413910    %else %do;
2413911    proc sort data=_temp&id nodupkey;
2413912    by LHS NAME;
2413913    run;
2413914    %end;
2413915    %end;
2413916    %end;
2413917    %end;
2413918    %mend varDept;
2413919    %macro optCode(outdata=fcmpdata);
2413920    %global fcmpStart;
2413921    %let fcmpStart = 0;
2413922    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
2413923    %let NumNodes=9;
2413924    %do k=1 %to &NumNodes;
2413925    %vardept(fcmpdata=&outdata, id=&k);
2413926    %end;
2413927    %mend optCode;
2413928    %optcode(outData=EMWS8.Ensmbl44_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl44_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL44_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl44_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 134 observations read from the data set EMWS8.ENSMBL44_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 100 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 34 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl44_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL44_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl44_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL44_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl44_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL44_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 34 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl44_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL44_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 38 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl44_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL44_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 77 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl44_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL44_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.06 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl44_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL44_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

2413929    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
2413930    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
2413931    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
2413932    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2413933    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
2413934    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
2413935    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
2413936    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2413937    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2413938    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
2413938  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.

2413939    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

2413940    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
2413941    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
2413942    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2413943    filename _pref
2413943  ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural12\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural12\EMPUBLISHSCORE.sas";
2413944    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2413945    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural12\EMPUBLISHSCORE.sas.
2413946   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2413947   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2413948   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2413949   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2413950   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2413951   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2413952   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2413953   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2413954   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2413955   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2413956   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2413957   +LENGTH _WARN_ $4
2413958   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
2413959   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2413960   +
2413961   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2413962   +
2413963   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2413964   +
2413965   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2413966   +
2413967   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2413968   +
2413969   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2413970   +
2413971   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2413972   +
2413973   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2413974   +
2413975   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2413976   +
2413977   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2413978   +
2413979   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2413980   +
2413981   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2413982   +
2413983   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2413984   +
2413985   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2413986   +
2413987   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2413988   +
2413989   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2413990   +
2413991   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2413992   +
2413993   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2413994   +
2413995   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2413996   +
2413997   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2413998   +
2413999   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2414000   +
2414001   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2414002   +
2414003   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2414004   +
2414005   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2414006   +
2414007   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2414008   +
2414009   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2414010   +
2414011   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2414012   +
2414013   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2414014   +
2414015   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2414016   +
2414017   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2414018   +
2414019   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2414020   +
2414021   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2414022   +
2414023   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2414024   +
2414025   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2414026   +
2414027   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2414028   +
2414029   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2414030   +
2414031   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2414032   +
2414033   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2414034   +
2414035   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2414036   +
2414037   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2414038   +
2414039   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2414040   +
2414041   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2414042   +
2414043   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
2414044   +
2414045   +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
2414046   +
2414047   +      label H1x1_7 = 'Hidden: H1x1_=7' ;
MPRINT(EM_DIAGRAM):   label H1x1_7 = 'Hidden: H1x1_=7' ;
2414048   +
2414049   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
2414050   +
2414051   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
2414052   +
2414053   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
2414054   +
2414055   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
2414056   +
2414057   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
2414058   +
2414059   +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
2414060   +
2414061   +      label H1x2_7 = 'Hidden: H1x2_=7' ;
MPRINT(EM_DIAGRAM):   label H1x2_7 = 'Hidden: H1x2_=7' ;
2414062   +
2414063   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2414064   +
2414065   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2414066   +
2414067   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2414068   +
2414069   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2414070   +
2414071   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2414072   +
2414073   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2414074   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2414075   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2414076   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2414077   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2414078   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2414079   +end;
MPRINT(EM_DIAGRAM):   end;
2414080   +else do;
MPRINT(EM_DIAGRAM):   else do;
2414081   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2414082   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2414083   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2414084   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2414085   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2414086   +   end;
MPRINT(EM_DIAGRAM):   end;
2414087   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2414088   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2414089   +   end;
MPRINT(EM_DIAGRAM):   end;
2414090   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2414091   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2414092   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2414093   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2414094   +   end;
MPRINT(EM_DIAGRAM):   end;
2414095   +end;
MPRINT(EM_DIAGRAM):   end;
2414096   +
2414097   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2414098   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2414099   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2414100   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2414101   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2414102   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2414103   +end;
MPRINT(EM_DIAGRAM):   end;
2414104   +else do;
MPRINT(EM_DIAGRAM):   else do;
2414105   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2414106   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2414107   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2414108   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2414109   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2414110   +   end;
MPRINT(EM_DIAGRAM):   end;
2414111   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2414112   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2414113   +   end;
MPRINT(EM_DIAGRAM):   end;
2414114   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2414115   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2414116   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2414117   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2414118   +   end;
MPRINT(EM_DIAGRAM):   end;
2414119   +end;
MPRINT(EM_DIAGRAM):   end;
2414120   +
2414121   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2414122   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2414123   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2414124   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2414125   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2414126   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2414127   +end;
MPRINT(EM_DIAGRAM):   end;
2414128   +else do;
MPRINT(EM_DIAGRAM):   else do;
2414129   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2414130   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2414131   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2414132   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2414133   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2414134   +   end;
MPRINT(EM_DIAGRAM):   end;
2414135   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2414136   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2414137   +   end;
MPRINT(EM_DIAGRAM):   end;
2414138   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2414139   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2414140   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2414141   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2414142   +   end;
MPRINT(EM_DIAGRAM):   end;
2414143   +end;
MPRINT(EM_DIAGRAM):   end;
2414144   +
2414145   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2414146   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2414147   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2414148   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2414149   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2414150   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2414151   +end;
MPRINT(EM_DIAGRAM):   end;
2414152   +else do;
MPRINT(EM_DIAGRAM):   else do;
2414153   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2414154   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2414155   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2414156   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2414157   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2414158   +   end;
MPRINT(EM_DIAGRAM):   end;
2414159   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2414160   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2414161   +   end;
MPRINT(EM_DIAGRAM):   end;
2414162   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2414163   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2414164   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2414165   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2414166   +   end;
MPRINT(EM_DIAGRAM):   end;
2414167   +end;
MPRINT(EM_DIAGRAM):   end;
2414168   +
2414169   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2414170   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2414171   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2414172   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2414173   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2414174   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2414175   +end;
MPRINT(EM_DIAGRAM):   end;
2414176   +else do;
MPRINT(EM_DIAGRAM):   else do;
2414177   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2414178   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2414179   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2414180   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2414181   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2414182   +   end;
MPRINT(EM_DIAGRAM):   end;
2414183   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2414184   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2414185   +   end;
MPRINT(EM_DIAGRAM):   end;
2414186   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2414187   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2414188   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2414189   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2414190   +   end;
MPRINT(EM_DIAGRAM):   end;
2414191   +end;
MPRINT(EM_DIAGRAM):   end;
2414192   +
2414193   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2414194   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2414195   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2414196   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2414197   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2414198   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2414199   +end;
MPRINT(EM_DIAGRAM):   end;
2414200   +else do;
MPRINT(EM_DIAGRAM):   else do;
2414201   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2414202   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2414203   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2414204   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2414205   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2414206   +   end;
MPRINT(EM_DIAGRAM):   end;
2414207   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2414208   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2414209   +   end;
MPRINT(EM_DIAGRAM):   end;
2414210   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2414211   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2414212   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2414213   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2414214   +   end;
MPRINT(EM_DIAGRAM):   end;
2414215   +end;
MPRINT(EM_DIAGRAM):   end;
2414216   +
2414217   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2414218   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2414219   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2414220   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2414221   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2414222   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2414223   +end;
MPRINT(EM_DIAGRAM):   end;
2414224   +else do;
MPRINT(EM_DIAGRAM):   else do;
2414225   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2414226   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2414227   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2414228   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2414229   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2414230   +   end;
MPRINT(EM_DIAGRAM):   end;
2414231   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2414232   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2414233   +   end;
MPRINT(EM_DIAGRAM):   end;
2414234   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2414235   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2414236   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2414237   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2414238   +   end;
MPRINT(EM_DIAGRAM):   end;
2414239   +end;
MPRINT(EM_DIAGRAM):   end;
2414240   +
2414241   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2414242   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
2414243   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2414244   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2414245   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2414246   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2414247   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2414248   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2414249   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2414250   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2414251   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2414252   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2414253   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2414254   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2414255   +end;
MPRINT(EM_DIAGRAM):   end;
2414256   +else do;
MPRINT(EM_DIAGRAM):   else do;
2414257   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2414258   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2414259   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2414260   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2414261   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2414262   +   end;
MPRINT(EM_DIAGRAM):   end;
2414263   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2414264   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2414265   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2414266   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2414267   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2414268   +   end;
MPRINT(EM_DIAGRAM):   end;
2414269   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2414270   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2414271   +   end;
MPRINT(EM_DIAGRAM):   end;
2414272   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2414273   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2414274   +   end;
MPRINT(EM_DIAGRAM):   end;
2414275   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2414276   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2414277   +   end;
MPRINT(EM_DIAGRAM):   end;
2414278   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2414279   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2414280   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2414281   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2414282   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2414283   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2414284   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2414285   +   end;
MPRINT(EM_DIAGRAM):   end;
2414286   +end;
MPRINT(EM_DIAGRAM):   end;
2414287   +
2414288   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2414289   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2414290   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
2414291   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2414292   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2414293   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2414294   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2414295   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2414296   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2414297   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2414298   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2414299   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2414300   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2414301   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2414302   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2414303   +end;
MPRINT(EM_DIAGRAM):   end;
2414304   +else do;
MPRINT(EM_DIAGRAM):   else do;
2414305   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2414306   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2414307   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2414308   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2414309   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2414310   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2414311   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2414312   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2414313   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2414314   +         end;
MPRINT(EM_DIAGRAM):   end;
2414315   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2414316   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2414317   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2414318   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2414319   +            end;
MPRINT(EM_DIAGRAM):   end;
2414320   +         end;
MPRINT(EM_DIAGRAM):   end;
2414321   +      end;
MPRINT(EM_DIAGRAM):   end;
2414322   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2414323   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2414324   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2414325   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2414326   +         end;
MPRINT(EM_DIAGRAM):   end;
2414327   +      end;
MPRINT(EM_DIAGRAM):   end;
2414328   +   end;
MPRINT(EM_DIAGRAM):   end;
2414329   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2414330   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2414331   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2414332   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2414333   +      end;
MPRINT(EM_DIAGRAM):   end;
2414334   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2414335   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2414336   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2414337   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2414338   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2414339   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2414340   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2414341   +         end;
MPRINT(EM_DIAGRAM):   end;
2414342   +      end;
MPRINT(EM_DIAGRAM):   end;
2414343   +   end;
MPRINT(EM_DIAGRAM):   end;
2414344   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2414345   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2414346   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2414347   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2414348   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2414349   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2414350   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2414351   +   end;
MPRINT(EM_DIAGRAM):   end;
2414352   +end;
MPRINT(EM_DIAGRAM):   end;
2414353   +
2414354   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2414355   +*** Checking missing input Interval
2414356   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2414357   +
2414358   +IF NMISS(
2414359   +   AcceptedCmpTotal ,
2414360   +   Age ,
2414361   +   Frq ,
2414362   +   Income ,
2414363   +   Kidhome ,
2414364   +   Mnt ,
2414365   +   MntFishProducts ,
2414366   +   MntFruits ,
2414367   +   MntGoldProds ,
2414368   +   MntMeatProducts ,
2414369   +   MntSweetProducts ,
2414370   +   MntWines ,
2414371   +   MonthsAsCustomer ,
2414372   +   NumCatalogPurchases ,
2414373   +   NumDealsPurchases ,
2414374   +   NumDistPurchases ,
2414375   +   NumStorePurchases ,
2414376   +   NumWebPurchases ,
2414377   +   NumWebVisitsMonth ,
2414378   +   RFMstat ,
2414379   +   RMntFrq ,
2414380   +   Recency ,
2414381   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
2414382   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2414383   +
2414384   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2414385   +END;
MPRINT(EM_DIAGRAM):   END;
2414386   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2414387   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2414388   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2414389   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2414390   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2414391   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2414392   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2414393   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2414394   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2414395   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2414396   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2414397   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2414398   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2414399   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2414400   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2414401   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2414402   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2414403   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2414404   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2414405   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2414406   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2414407   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2414408   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
2414409   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2414410   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2414411   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2414412   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2414413   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2414414   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2414415   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2414416   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2414417   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2414418   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2414419   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2414420   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2414421   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2414422   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2414423   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2414424   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2414425   +END;
MPRINT(EM_DIAGRAM):   END;
2414426   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2414427   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2414428   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2414429   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2414430   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2414431   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2414432   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2414433   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2414434   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2414435   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2414436   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2414437   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2414438   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2414439   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2414440   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2414441   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2414442   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2414443   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2414444   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2414445   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2414446   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2414447   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2414448   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
2414449   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2414450   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2414451   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2414452   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2414453   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2414454   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2414455   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2414456   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2414457   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2414458   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2414459   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
2414460   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2414461   +   ELSE S_NumCatalogPurchases
2414462   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2414463   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2414464   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2414465   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2414466   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2414467   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2414468   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2414469   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2414470   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2414471   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2414472   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2414473   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2414474   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2414475   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2414476   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2414477   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2414478   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2414479   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2414480   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2414481   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2414482   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2414483   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2414484   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2414485   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2414486   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2414487   +END;
MPRINT(EM_DIAGRAM):   END;
2414488   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2414489   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2414490   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2414491   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2414492   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2414493   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2414494   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2414495   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2414496   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2414497   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2414498   +   H1x1_1  =    -0.08478534961354 * S_AcceptedCmpTotal
2414499   +          +     0.21528166003219 * S_Age  +    -0.16079737422774 * S_Frq
2414500   +          +     0.04922044955183 * S_Income  +     0.06245849112135 *
2414501   +        S_Kidhome  +    -0.12820970008154 * S_Mnt  +    -0.00676959308959 *
2414502   +        S_MntFishProducts  +    -0.20367403957375 * S_MntFruits
2414503   +          +    -0.06459558558968 * S_MntGoldProds  +     0.01557669100416 *
2414504   +        S_MntMeatProducts  +    -0.16342003924117 * S_MntSweetProducts
2414505   +          +     0.34676276369853 * S_MntWines  +    -0.08454570225616 *
2414506   +        S_MonthsAsCustomer  +    -0.00318885387905 * S_NumCatalogPurchases
2414507   +          +      0.1112677116841 * S_NumDealsPurchases
2414508   +          +     0.01563584187072 * S_NumDistPurchases
2414509   +          +     0.19193969522995 * S_NumStorePurchases
2414510   +          +      0.3133556199984 * S_NumWebPurchases
2414511   +          +    -0.21884874785716 * S_NumWebVisitsMonth
2414512   +          +     0.08478875792216 * S_RFMstat  +     0.05964414665285 *
2414513   +        S_RMntFrq  +    -0.12595000497726 * S_Recency
2414514   +          +     -0.1238719414537 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.08478534961354 * S_AcceptedCmpTotal + 0.21528166003219 * 
S_Age + -0.16079737422774 * S_Frq + 0.04922044955183 * S_Income + 0.06245849112135 * S_Kidhome 
+ -0.12820970008154 * S_Mnt + -0.00676959308959 * S_MntFishProducts + -0.20367403957375 * 
S_MntFruits + -0.06459558558968 * S_MntGoldProds + 0.01557669100416 * S_MntMeatProducts + 
-0.16342003924117 * S_MntSweetProducts + 0.34676276369853 * S_MntWines + -0.08454570225616 * 
S_MonthsAsCustomer + -0.00318885387905 * S_NumCatalogPurchases + 0.1112677116841 * 
S_NumDealsPurchases + 0.01563584187072 * S_NumDistPurchases + 0.19193969522995 * 
S_NumStorePurchases + 0.3133556199984 * S_NumWebPurchases + -0.21884874785716 * 
S_NumWebVisitsMonth + 0.08478875792216 * S_RFMstat + 0.05964414665285 * S_RMntFrq + 
-0.12595000497726 * S_Recency + -0.1238719414537 * S_Teenhome ;
2414515   +   H1x1_2  =     0.20807487357943 * S_AcceptedCmpTotal
2414516   +          +    -0.27223051908987 * S_Age  +     0.28649391533674 * S_Frq
2414517   +          +     0.46493719675068 * S_Income  +     0.10180542910079 *
2414518   +        S_Kidhome  +    -0.19573056673819 * S_Mnt  +    -0.05332725327514 *
2414519   +        S_MntFishProducts  +    -0.28610692329433 * S_MntFruits
2414520   +          +    -0.13417237194849 * S_MntGoldProds  +     0.45697707494335 *
2414521   +        S_MntMeatProducts  +    -0.28280545785477 * S_MntSweetProducts
2414522   +          +    -0.13234920069688 * S_MntWines  +     -0.2710938018651 *
2414523   +        S_MonthsAsCustomer  +     0.31174284041905 * S_NumCatalogPurchases
2414524   +          +     0.30225032753275 * S_NumDealsPurchases
2414525   +          +     0.33833359923595 * S_NumDistPurchases
2414526   +          +    -0.20255599575849 * S_NumStorePurchases
2414527   +          +    -0.12040071168942 * S_NumWebPurchases
2414528   +          +    -0.12407090307061 * S_NumWebVisitsMonth
2414529   +          +    -0.05688936259515 * S_RFMstat  +     0.15514736649245 *
2414530   +        S_RMntFrq  +     0.00838555462657 * S_Recency
2414531   +          +     0.04609426861136 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.20807487357943 * S_AcceptedCmpTotal + -0.27223051908987 * 
S_Age + 0.28649391533674 * S_Frq + 0.46493719675068 * S_Income + 0.10180542910079 * S_Kidhome 
+ -0.19573056673819 * S_Mnt + -0.05332725327514 * S_MntFishProducts + -0.28610692329433 * 
S_MntFruits + -0.13417237194849 * S_MntGoldProds + 0.45697707494335 * S_MntMeatProducts + 
-0.28280545785477 * S_MntSweetProducts + -0.13234920069688 * S_MntWines + -0.2710938018651 * 
S_MonthsAsCustomer + 0.31174284041905 * S_NumCatalogPurchases + 0.30225032753275 * 
S_NumDealsPurchases + 0.33833359923595 * S_NumDistPurchases + -0.20255599575849 * 
S_NumStorePurchases + -0.12040071168942 * S_NumWebPurchases + -0.12407090307061 * 
S_NumWebVisitsMonth + -0.05688936259515 * S_RFMstat + 0.15514736649245 * S_RMntFrq + 
0.00838555462657 * S_Recency + 0.04609426861136 * S_Teenhome ;
2414532   +   H1x1_3  =    -0.30541463116928 * S_AcceptedCmpTotal
2414533   +          +    -0.01746117216025 * S_Age  +    -0.44156473334329 * S_Frq
2414534   +          +    -0.51952426304193 * S_Income  +     0.20419921255777 *
2414535   +        S_Kidhome  +    -0.18174316707953 * S_Mnt  +    -0.03813675536406 *
2414536   +        S_MntFishProducts  +     -0.0959023413712 * S_MntFruits
2414537   +          +     0.12724081783278 * S_MntGoldProds  +    -0.07639148541426 *
2414538   +        S_MntMeatProducts  +     -0.0797214413833 * S_MntSweetProducts
2414539   +          +    -0.57705931875808 * S_MntWines  +    -0.12638551201991 *
2414540   +        S_MonthsAsCustomer  +    -0.21854676704549 * S_NumCatalogPurchases
2414541   +          +     0.16792903091627 * S_NumDealsPurchases
2414542   +          +    -0.37408945626745 * S_NumDistPurchases
2414543   +          +    -0.18067262995566 * S_NumStorePurchases
2414544   +          +     0.21192146789881 * S_NumWebPurchases
2414545   +          +    -0.23547702310669 * S_NumWebVisitsMonth
2414546   +          +    -0.02272089758813 * S_RFMstat  +    -0.16409330281075 *
2414547   +        S_RMntFrq  +     0.45021846112946 * S_Recency
2414548   +          +     0.32988735727394 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.30541463116928 * S_AcceptedCmpTotal + -0.01746117216025 * 
S_Age + -0.44156473334329 * S_Frq + -0.51952426304193 * S_Income + 0.20419921255777 * 
S_Kidhome + -0.18174316707953 * S_Mnt + -0.03813675536406 * S_MntFishProducts + 
-0.0959023413712 * S_MntFruits + 0.12724081783278 * S_MntGoldProds + -0.07639148541426 * 
S_MntMeatProducts + -0.0797214413833 * S_MntSweetProducts + -0.57705931875808 * S_MntWines + 
-0.12638551201991 * S_MonthsAsCustomer + -0.21854676704549 * S_NumCatalogPurchases + 
0.16792903091627 * S_NumDealsPurchases + -0.37408945626745 * S_NumDistPurchases + 
-0.18067262995566 * S_NumStorePurchases + 0.21192146789881 * S_NumWebPurchases + 
-0.23547702310669 * S_NumWebVisitsMonth + -0.02272089758813 * S_RFMstat + -0.16409330281075 * 
S_RMntFrq + 0.45021846112946 * S_Recency + 0.32988735727394 * S_Teenhome ;
2414549   +   H1x1_4  =     0.05205198916717 * S_AcceptedCmpTotal
2414550   +          +     0.25568653619739 * S_Age  +    -0.31037252146959 * S_Frq
2414551   +          +     0.42636025358982 * S_Income  +    -0.24453708980866 *
2414552   +        S_Kidhome  +    -0.07832530945892 * S_Mnt  +    -0.48332124476182 *
2414553   +        S_MntFishProducts  +    -0.13932879119138 * S_MntFruits
2414554   +          +      0.1984121566988 * S_MntGoldProds  +     1.14965897015972 *
2414555   +        S_MntMeatProducts  +     0.07027485457428 * S_MntSweetProducts
2414556   +          +    -0.56598097754046 * S_MntWines  +     0.07317190938075 *
2414557   +        S_MonthsAsCustomer  +       0.075756987983 * S_NumCatalogPurchases
2414558   +          +     0.29407429399136 * S_NumDealsPurchases
2414559   +          +     0.01610745252195 * S_NumDistPurchases
2414560   +          +    -0.17767939085628 * S_NumStorePurchases
2414561   +          +    -0.15168958538637 * S_NumWebPurchases
2414562   +          +     0.17433622143988 * S_NumWebVisitsMonth
2414563   +          +     0.11635602973993 * S_RFMstat  +     0.32632751843433 *
2414564   +        S_RMntFrq  +    -0.24758483374458 * S_Recency
2414565   +          +    -0.31468291567479 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.05205198916717 * S_AcceptedCmpTotal + 0.25568653619739 * 
S_Age + -0.31037252146959 * S_Frq + 0.42636025358982 * S_Income + -0.24453708980866 * 
S_Kidhome + -0.07832530945892 * S_Mnt + -0.48332124476182 * S_MntFishProducts + 
-0.13932879119138 * S_MntFruits + 0.1984121566988 * S_MntGoldProds + 1.14965897015972 * 
S_MntMeatProducts + 0.07027485457428 * S_MntSweetProducts + -0.56598097754046 * S_MntWines + 
0.07317190938075 * S_MonthsAsCustomer + 0.075756987983 * S_NumCatalogPurchases + 
0.29407429399136 * S_NumDealsPurchases + 0.01610745252195 * S_NumDistPurchases + 
-0.17767939085628 * S_NumStorePurchases + -0.15168958538637 * S_NumWebPurchases + 
0.17433622143988 * S_NumWebVisitsMonth + 0.11635602973993 * S_RFMstat + 0.32632751843433 * 
S_RMntFrq + -0.24758483374458 * S_Recency + -0.31468291567479 * S_Teenhome ;
2414566   +   H1x1_5  =    -0.59657492903543 * S_AcceptedCmpTotal
2414567   +          +     0.23513672763458 * S_Age  +    -0.14882104210954 * S_Frq
2414568   +          +    -0.07762660201035 * S_Income  +     0.01424651904783 *
2414569   +        S_Kidhome  +     0.18748607813081 * S_Mnt  +     0.11088464897095 *
2414570   +        S_MntFishProducts  +    -0.10064450211557 * S_MntFruits
2414571   +          +     0.11161391354421 * S_MntGoldProds  +    -1.36345407290644 *
2414572   +        S_MntMeatProducts  +     0.04868729717044 * S_MntSweetProducts
2414573   +          +     0.80284342329654 * S_MntWines  +     -0.0179539622492 *
2414574   +        S_MonthsAsCustomer  +    -0.60051908798715 * S_NumCatalogPurchases
2414575   +          +    -0.37976451362108 * S_NumDealsPurchases
2414576   +          +    -0.17027731520801 * S_NumDistPurchases
2414577   +          +     0.59849493667087 * S_NumStorePurchases
2414578   +          +     0.65481480560301 * S_NumWebPurchases
2414579   +          +    -0.68253224576609 * S_NumWebVisitsMonth
2414580   +          +    -0.16723490165629 * S_RFMstat  +    -0.10533797887644 *
2414581   +        S_RMntFrq  +     0.81382723915873 * S_Recency
2414582   +          +     0.06049401205856 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.59657492903543 * S_AcceptedCmpTotal + 0.23513672763458 * 
S_Age + -0.14882104210954 * S_Frq + -0.07762660201035 * S_Income + 0.01424651904783 * 
S_Kidhome + 0.18748607813081 * S_Mnt + 0.11088464897095 * S_MntFishProducts + 
-0.10064450211557 * S_MntFruits + 0.11161391354421 * S_MntGoldProds + -1.36345407290644 * 
S_MntMeatProducts + 0.04868729717044 * S_MntSweetProducts + 0.80284342329654 * S_MntWines + 
-0.0179539622492 * S_MonthsAsCustomer + -0.60051908798715 * S_NumCatalogPurchases + 
-0.37976451362108 * S_NumDealsPurchases + -0.17027731520801 * S_NumDistPurchases + 
0.59849493667087 * S_NumStorePurchases + 0.65481480560301 * S_NumWebPurchases + 
-0.68253224576609 * S_NumWebVisitsMonth + -0.16723490165629 * S_RFMstat + -0.10533797887644 * 
S_RMntFrq + 0.81382723915873 * S_Recency + 0.06049401205856 * S_Teenhome ;
2414583   +   H1x1_6  =    -0.07547841798202 * S_AcceptedCmpTotal
2414584   +          +     0.22445278254589 * S_Age  +    -0.26357481075143 * S_Frq
2414585   +          +     0.06894154144261 * S_Income  +     0.20713236126681 *
2414586   +        S_Kidhome  +    -0.14103612934526 * S_Mnt  +     0.36334508557452 *
2414587   +        S_MntFishProducts  +    -0.20862425337296 * S_MntFruits
2414588   +          +    -0.29089690099273 * S_MntGoldProds  +     0.11336893090527 *
2414589   +        S_MntMeatProducts  +    -0.13547374281924 * S_MntSweetProducts
2414590   +          +     0.02228828195539 * S_MntWines  +    -0.19257650420334 *
2414591   +        S_MonthsAsCustomer  +      0.1365526319824 * S_NumCatalogPurchases
2414592   +          +    -0.07686699131623 * S_NumDealsPurchases
2414593   +          +    -0.07220460738926 * S_NumDistPurchases
2414594   +          +    -0.06554027468389 * S_NumStorePurchases
2414595   +          +     0.10422838158001 * S_NumWebPurchases
2414596   +          +    -0.03858550147892 * S_NumWebVisitsMonth
2414597   +          +    -0.06397448441373 * S_RFMstat  +     0.21747838287147 *
2414598   +        S_RMntFrq  +     0.24839313159913 * S_Recency
2414599   +          +    -0.06317317698653 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -0.07547841798202 * S_AcceptedCmpTotal + 0.22445278254589 * 
S_Age + -0.26357481075143 * S_Frq + 0.06894154144261 * S_Income + 0.20713236126681 * S_Kidhome 
+ -0.14103612934526 * S_Mnt + 0.36334508557452 * S_MntFishProducts + -0.20862425337296 * 
S_MntFruits + -0.29089690099273 * S_MntGoldProds + 0.11336893090527 * S_MntMeatProducts + 
-0.13547374281924 * S_MntSweetProducts + 0.02228828195539 * S_MntWines + -0.19257650420334 * 
S_MonthsAsCustomer + 0.1365526319824 * S_NumCatalogPurchases + -0.07686699131623 * 
S_NumDealsPurchases + -0.07220460738926 * S_NumDistPurchases + -0.06554027468389 * 
S_NumStorePurchases + 0.10422838158001 * S_NumWebPurchases + -0.03858550147892 * 
S_NumWebVisitsMonth + -0.06397448441373 * S_RFMstat + 0.21747838287147 * S_RMntFrq + 
0.24839313159913 * S_Recency + -0.06317317698653 * S_Teenhome ;
2414600   +   H1x1_7  =    -0.08604903695444 * S_AcceptedCmpTotal
2414601   +          +    -0.14807437541992 * S_Age  +     0.01466157584549 * S_Frq
2414602   +          +    -0.09883966180507 * S_Income  +     0.51992566778352 *
2414603   +        S_Kidhome  +     0.29795006703636 * S_Mnt  +    -0.08922020500011 *
2414604   +        S_MntFishProducts  +     0.19836834402079 * S_MntFruits
2414605   +          +    -0.11292241468378 * S_MntGoldProds  +       0.584464452194 *
2414606   +        S_MntMeatProducts  +     0.22625326024073 * S_MntSweetProducts
2414607   +          +     0.24074129944382 * S_MntWines  +     0.13538906557527 *
2414608   +        S_MonthsAsCustomer  +    -0.01228250248922 * S_NumCatalogPurchases
2414609   +          +    -0.07920122387563 * S_NumDealsPurchases
2414610   +          +      0.3649244061347 * S_NumDistPurchases
2414611   +          +     0.36475853688403 * S_NumStorePurchases
2414612   +          +     0.02153991404063 * S_NumWebPurchases
2414613   +          +    -0.94080669139388 * S_NumWebVisitsMonth
2414614   +          +     0.24853677977494 * S_RFMstat  +     0.37015183933951 *
2414615   +        S_RMntFrq  +      0.6724157721663 * S_Recency
2414616   +          +      0.1615471643866 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_7 = -0.08604903695444 * S_AcceptedCmpTotal + -0.14807437541992 * 
S_Age + 0.01466157584549 * S_Frq + -0.09883966180507 * S_Income + 0.51992566778352 * S_Kidhome 
+ 0.29795006703636 * S_Mnt + -0.08922020500011 * S_MntFishProducts + 0.19836834402079 * 
S_MntFruits + -0.11292241468378 * S_MntGoldProds + 0.584464452194 * S_MntMeatProducts + 
0.22625326024073 * S_MntSweetProducts + 0.24074129944382 * S_MntWines + 0.13538906557527 * 
S_MonthsAsCustomer + -0.01228250248922 * S_NumCatalogPurchases + -0.07920122387563 * 
S_NumDealsPurchases + 0.3649244061347 * S_NumDistPurchases + 0.36475853688403 * 
S_NumStorePurchases + 0.02153991404063 * S_NumWebPurchases + -0.94080669139388 * 
S_NumWebVisitsMonth + 0.24853677977494 * S_RFMstat + 0.37015183933951 * S_RMntFrq + 
0.6724157721663 * S_Recency + 0.1615471643866 * S_Teenhome ;
2414617   +   H1x1_1  = H1x1_1  +     0.04431608362128 * AcceptedCmp10
2414618   +          +       0.145592087795 * AcceptedCmp20  +    -0.18972867139938 *
2414619   +        AcceptedCmp30  +     0.11297731320888 * AcceptedCmp40
2414620   +          +     0.15203974410995 * AcceptedCmp50  +     0.05130421316428 *
2414621   +        Complain0  +     0.33576036450343 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.04431608362128 * AcceptedCmp10 + 0.145592087795 * 
AcceptedCmp20 + -0.18972867139938 * AcceptedCmp30 + 0.11297731320888 * AcceptedCmp40 + 
0.15203974410995 * AcceptedCmp50 + 0.05130421316428 * Complain0 + 0.33576036450343 * 
HigherEducationBinary0 ;
2414622   +   H1x1_2  = H1x1_2  +    -0.05495742609855 * AcceptedCmp10
2414623   +          +    -0.08873650760176 * AcceptedCmp20  +    -0.16380549867313 *
2414624   +        AcceptedCmp30  +    -0.24495261884932 * AcceptedCmp40
2414625   +          +    -0.22199506896148 * AcceptedCmp50  +       0.149484615172 *
2414626   +        Complain0  +     0.01091791142552 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.05495742609855 * AcceptedCmp10 + -0.08873650760176 
* AcceptedCmp20 + -0.16380549867313 * AcceptedCmp30 + -0.24495261884932 * AcceptedCmp40 + 
-0.22199506896148 * AcceptedCmp50 + 0.149484615172 * Complain0 + 0.01091791142552 * 
HigherEducationBinary0 ;
2414627   +   H1x1_3  = H1x1_3  +     0.03473702421341 * AcceptedCmp10
2414628   +          +    -0.11226718065217 * AcceptedCmp20  +     0.19024579384296 *
2414629   +        AcceptedCmp30  +     0.15478548865598 * AcceptedCmp40
2414630   +          +     0.15222823671897 * AcceptedCmp50  +     0.07713012834947 *
2414631   +        Complain0  +    -0.18741708707661 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.03473702421341 * AcceptedCmp10 + -0.11226718065217 * 
AcceptedCmp20 + 0.19024579384296 * AcceptedCmp30 + 0.15478548865598 * AcceptedCmp40 + 
0.15222823671897 * AcceptedCmp50 + 0.07713012834947 * Complain0 + -0.18741708707661 * 
HigherEducationBinary0 ;
2414632   +   H1x1_4  = H1x1_4  +    -0.25622127302429 * AcceptedCmp10
2414633   +          +    -0.39059103518073 * AcceptedCmp20  +    -0.29716603631807 *
2414634   +        AcceptedCmp30  +    -0.20875694971526 * AcceptedCmp40
2414635   +          +    -0.35128787139073 * AcceptedCmp50  +    -0.28848733462386 *
2414636   +        Complain0  +      0.4276503747649 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.25622127302429 * AcceptedCmp10 + -0.39059103518073 
* AcceptedCmp20 + -0.29716603631807 * AcceptedCmp30 + -0.20875694971526 * AcceptedCmp40 + 
-0.35128787139073 * AcceptedCmp50 + -0.28848733462386 * Complain0 + 0.4276503747649 * 
HigherEducationBinary0 ;
2414637   +   H1x1_5  = H1x1_5  +    -0.06574875851088 * AcceptedCmp10
2414638   +          +    -0.27375195259265 * AcceptedCmp20  +     -0.2740681662293 *
2414639   +        AcceptedCmp30  +    -0.14697156898736 * AcceptedCmp40
2414640   +          +     0.17684649468835 * AcceptedCmp50  +    -0.09979172944646 *
2414641   +        Complain0  +     0.38986664202197 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.06574875851088 * AcceptedCmp10 + -0.27375195259265 
* AcceptedCmp20 + -0.2740681662293 * AcceptedCmp30 + -0.14697156898736 * AcceptedCmp40 + 
0.17684649468835 * AcceptedCmp50 + -0.09979172944646 * Complain0 + 0.38986664202197 * 
HigherEducationBinary0 ;
2414642   +   H1x1_6  = H1x1_6  +     0.08696678529441 * AcceptedCmp10
2414643   +          +     0.09467543942215 * AcceptedCmp20  +     0.04586779705477 *
2414644   +        AcceptedCmp30  +    -0.12591921836379 * AcceptedCmp40
2414645   +          +     0.20150138392895 * AcceptedCmp50  +     0.27764282700214 *
2414646   +        Complain0  +     0.13985738522066 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + 0.08696678529441 * AcceptedCmp10 + 0.09467543942215 * 
AcceptedCmp20 + 0.04586779705477 * AcceptedCmp30 + -0.12591921836379 * AcceptedCmp40 + 
0.20150138392895 * AcceptedCmp50 + 0.27764282700214 * Complain0 + 0.13985738522066 * 
HigherEducationBinary0 ;
2414647   +   H1x1_7  = H1x1_7  +    -0.10455069401218 * AcceptedCmp10
2414648   +          +      0.1311831941372 * AcceptedCmp20  +     0.17844209104604 *
2414649   +        AcceptedCmp30  +     0.19406707592815 * AcceptedCmp40
2414650   +          +    -0.00068155012319 * AcceptedCmp50  +     0.13245364846536 *
2414651   +        Complain0  +    -0.05165256160872 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_7 = H1x1_7 + -0.10455069401218 * AcceptedCmp10 + 0.1311831941372 * 
AcceptedCmp20 + 0.17844209104604 * AcceptedCmp30 + 0.19406707592815 * AcceptedCmp40 + 
-0.00068155012319 * AcceptedCmp50 + 0.13245364846536 * Complain0 + -0.05165256160872 * 
HigherEducationBinary0 ;
2414652   +   H1x1_1  = H1x1_1  +     0.28967939808759 * Education2n_Cycle
2414653   +          +    -0.15795056374781 * EducationBasic  +    -0.00649803471307 *
2414654   +        EducationGraduation  +     0.19520715924532 * EducationMaster
2414655   +          +     0.07744097241553 * Marital_StatusDivorced
2414656   +          +     -0.0247463100385 * Marital_StatusMarried
2414657   +          +     0.05804915234573 * Marital_StatusSingle
2414658   +          +    -0.08320125047871 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.28967939808759 * Education2n_Cycle + 
-0.15795056374781 * EducationBasic + -0.00649803471307 * EducationGraduation + 
0.19520715924532 * EducationMaster + 0.07744097241553 * Marital_StatusDivorced + 
-0.0247463100385 * Marital_StatusMarried + 0.05804915234573 * Marital_StatusSingle + 
-0.08320125047871 * Marital_StatusTogether ;
2414659   +   H1x1_2  = H1x1_2  +     0.12524444422085 * Education2n_Cycle
2414660   +          +    -0.30278286924729 * EducationBasic  +     0.37480827366421 *
2414661   +        EducationGraduation  +     0.34209136290694 * EducationMaster
2414662   +          +     0.01390668926269 * Marital_StatusDivorced
2414663   +          +     0.01136282152074 * Marital_StatusMarried
2414664   +          +     0.12450246418789 * Marital_StatusSingle
2414665   +          +     -0.1576148519872 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.12524444422085 * Education2n_Cycle + 
-0.30278286924729 * EducationBasic + 0.37480827366421 * EducationGraduation + 0.34209136290694 
* EducationMaster + 0.01390668926269 * Marital_StatusDivorced + 0.01136282152074 * 
Marital_StatusMarried + 0.12450246418789 * Marital_StatusSingle + -0.1576148519872 * 
Marital_StatusTogether ;
2414666   +   H1x1_3  = H1x1_3  +    -0.14589041643593 * Education2n_Cycle
2414667   +          +    -0.15691118816463 * EducationBasic  +      0.1993616073183 *
2414668   +        EducationGraduation  +     0.02862010255145 * EducationMaster
2414669   +          +    -0.19133456931879 * Marital_StatusDivorced
2414670   +          +     0.56263566654996 * Marital_StatusMarried
2414671   +          +    -0.42172822038882 * Marital_StatusSingle
2414672   +          +     0.42023140643292 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.14589041643593 * Education2n_Cycle + 
-0.15691118816463 * EducationBasic + 0.1993616073183 * EducationGraduation + 0.02862010255145 
* EducationMaster + -0.19133456931879 * Marital_StatusDivorced + 0.56263566654996 * 
Marital_StatusMarried + -0.42172822038882 * Marital_StatusSingle + 0.42023140643292 * 
Marital_StatusTogether ;
2414673   +   H1x1_4  = H1x1_4  +     0.10038585978656 * Education2n_Cycle
2414674   +          +    -0.11388609002984 * EducationBasic  +    -0.14980553500983 *
2414675   +        EducationGraduation  +    -0.07646595330369 * EducationMaster
2414676   +          +    -0.19871205065609 * Marital_StatusDivorced
2414677   +          +    -0.14730795681603 * Marital_StatusMarried
2414678   +          +     0.05055432510362 * Marital_StatusSingle
2414679   +          +     0.06558965292395 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.10038585978656 * Education2n_Cycle + 
-0.11388609002984 * EducationBasic + -0.14980553500983 * EducationGraduation + 
-0.07646595330369 * EducationMaster + -0.19871205065609 * Marital_StatusDivorced + 
-0.14730795681603 * Marital_StatusMarried + 0.05055432510362 * Marital_StatusSingle + 
0.06558965292395 * Marital_StatusTogether ;
2414680   +   H1x1_5  = H1x1_5  +      0.0015835307855 * Education2n_Cycle
2414681   +          +    -0.22658746797638 * EducationBasic  +    -0.03445982386977 *
2414682   +        EducationGraduation  +     0.11375378192685 * EducationMaster
2414683   +          +    -0.35623807358995 * Marital_StatusDivorced
2414684   +          +     0.30324726283965 * Marital_StatusMarried
2414685   +          +    -0.18561093467927 * Marital_StatusSingle
2414686   +          +       0.395424582152 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 0.0015835307855 * Education2n_Cycle + 
-0.22658746797638 * EducationBasic + -0.03445982386977 * EducationGraduation + 
0.11375378192685 * EducationMaster + -0.35623807358995 * Marital_StatusDivorced + 
0.30324726283965 * Marital_StatusMarried + -0.18561093467927 * Marital_StatusSingle + 
0.395424582152 * Marital_StatusTogether ;
2414687   +   H1x1_6  = H1x1_6  +    -0.23751822587858 * Education2n_Cycle
2414688   +          +    -0.01687300040825 * EducationBasic  +     0.23236967703011 *
2414689   +        EducationGraduation  +      0.0725289831541 * EducationMaster
2414690   +          +     0.11581014663368 * Marital_StatusDivorced
2414691   +          +    -0.31070638037659 * Marital_StatusMarried
2414692   +          +     0.17131747253949 * Marital_StatusSingle
2414693   +          +    -0.19314955966476 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + -0.23751822587858 * Education2n_Cycle + 
-0.01687300040825 * EducationBasic + 0.23236967703011 * EducationGraduation + 0.0725289831541 
* EducationMaster + 0.11581014663368 * Marital_StatusDivorced + -0.31070638037659 * 
Marital_StatusMarried + 0.17131747253949 * Marital_StatusSingle + -0.19314955966476 * 
Marital_StatusTogether ;
2414694   +   H1x1_7  = H1x1_7  +     0.00103693282479 * Education2n_Cycle
2414695   +          +     0.12608909598752 * EducationBasic  +     -0.2366673091666 *
2414696   +        EducationGraduation  +     0.24413217290922 * EducationMaster
2414697   +          +    -0.42450599871892 * Marital_StatusDivorced
2414698   +          +     0.48162905075885 * Marital_StatusMarried
2414699   +          +    -0.26618507749283 * Marital_StatusSingle
2414700   +          +     0.38053668740338 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_7 = H1x1_7 + 0.00103693282479 * Education2n_Cycle + 
0.12608909598752 * EducationBasic + -0.2366673091666 * EducationGraduation + 0.24413217290922 
* EducationMaster + -0.42450599871892 * Marital_StatusDivorced + 0.48162905075885 * 
Marital_StatusMarried + -0.26618507749283 * Marital_StatusSingle + 0.38053668740338 * 
Marital_StatusTogether ;
2414701   +   H1x1_1  =     0.12149136705075 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.12149136705075 + H1x1_1 ;
2414702   +   H1x1_2  =    -0.97489696657001 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.97489696657001 + H1x1_2 ;
2414703   +   H1x1_3  =    -0.70605220802968 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.70605220802968 + H1x1_3 ;
2414704   +   H1x1_4  =    -1.07783206982379 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -1.07783206982379 + H1x1_4 ;
2414705   +   H1x1_5  =    -1.00400706261511 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.00400706261511 + H1x1_5 ;
2414706   +   H1x1_6  =     0.22600488314839 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0.22600488314839 + H1x1_6 ;
2414707   +   H1x1_7  =     1.55642446968077 + H1x1_7 ;
MPRINT(EM_DIAGRAM):   H1x1_7 = 1.55642446968077 + H1x1_7 ;
2414708   +   _EPS = SQRT(CONSTANT('MACEPS')) ;
MPRINT(EM_DIAGRAM):   _EPS = SQRT(CONSTANT('MACEPS')) ;
2414709   +   _REC_EPS = 1/_EPS ;
MPRINT(EM_DIAGRAM):   _REC_EPS = 1/_EPS ;
2414710   +   DROP _REC_EPS _EPS ;
MPRINT(EM_DIAGRAM):   DROP _REC_EPS _EPS ;
2414711   +   IF H1x1_1  < _REC_EPS AND H1x1_1  > - _REC_EPS THEN
2414712   +   H1x1_1  = H1x1_1  * H1x1_1 ;
MPRINT(EM_DIAGRAM):   IF H1x1_1 < _REC_EPS AND H1x1_1 > - _REC_EPS THEN H1x1_1 = H1x1_1 * 
H1x1_1 ;
2414713   +   ELSE H1x1_1  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_1 = _REC_EPS ;
2414714   +   IF H1x1_2  < _REC_EPS AND H1x1_2  > - _REC_EPS THEN
2414715   +   H1x1_2  = H1x1_2  * H1x1_2 ;
MPRINT(EM_DIAGRAM):   IF H1x1_2 < _REC_EPS AND H1x1_2 > - _REC_EPS THEN H1x1_2 = H1x1_2 * 
H1x1_2 ;
2414716   +   ELSE H1x1_2  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_2 = _REC_EPS ;
2414717   +   IF H1x1_3  < _REC_EPS AND H1x1_3  > - _REC_EPS THEN
2414718   +   H1x1_3  = H1x1_3  * H1x1_3 ;
MPRINT(EM_DIAGRAM):   IF H1x1_3 < _REC_EPS AND H1x1_3 > - _REC_EPS THEN H1x1_3 = H1x1_3 * 
H1x1_3 ;
2414719   +   ELSE H1x1_3  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_3 = _REC_EPS ;
2414720   +   IF H1x1_4  < _REC_EPS AND H1x1_4  > - _REC_EPS THEN
2414721   +   H1x1_4  = H1x1_4  * H1x1_4 ;
MPRINT(EM_DIAGRAM):   IF H1x1_4 < _REC_EPS AND H1x1_4 > - _REC_EPS THEN H1x1_4 = H1x1_4 * 
H1x1_4 ;
2414722   +   ELSE H1x1_4  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_4 = _REC_EPS ;
2414723   +   IF H1x1_5  < _REC_EPS AND H1x1_5  > - _REC_EPS THEN
2414724   +   H1x1_5  = H1x1_5  * H1x1_5 ;
MPRINT(EM_DIAGRAM):   IF H1x1_5 < _REC_EPS AND H1x1_5 > - _REC_EPS THEN H1x1_5 = H1x1_5 * 
H1x1_5 ;
2414725   +   ELSE H1x1_5  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_5 = _REC_EPS ;
2414726   +   IF H1x1_6  < _REC_EPS AND H1x1_6  > - _REC_EPS THEN
2414727   +   H1x1_6  = H1x1_6  * H1x1_6 ;
MPRINT(EM_DIAGRAM):   IF H1x1_6 < _REC_EPS AND H1x1_6 > - _REC_EPS THEN H1x1_6 = H1x1_6 * 
H1x1_6 ;
2414728   +   ELSE H1x1_6  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_6 = _REC_EPS ;
2414729   +   IF H1x1_7  < _REC_EPS AND H1x1_7  > - _REC_EPS THEN
2414730   +   H1x1_7  = H1x1_7  * H1x1_7 ;
MPRINT(EM_DIAGRAM):   IF H1x1_7 < _REC_EPS AND H1x1_7 > - _REC_EPS THEN H1x1_7 = H1x1_7 * 
H1x1_7 ;
2414731   +   ELSE H1x1_7  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_7 = _REC_EPS ;
2414732   +END;
MPRINT(EM_DIAGRAM):   END;
2414733   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2414734   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2414735   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2414736   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2414737   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2414738   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
2414739   +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
2414740   +   H1x1_7  = .;
MPRINT(EM_DIAGRAM):   H1x1_7 = .;
2414741   +END;
MPRINT(EM_DIAGRAM):   END;
2414742   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2414743   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
2414744   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2414745   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2414746   +   H1x2_1  =    -1.36226288448745 * S_AcceptedCmpTotal
2414747   +          +     -1.3328616352886 * S_Age  +     1.25346137866034 * S_Frq
2414748   +          +    -1.21746243786295 * S_Income  +     2.83911738158074 *
2414749   +        S_Kidhome  +    -0.60784009102409 * S_Mnt  +     1.57752173634223 *
2414750   +        S_MntFishProducts  +    -0.26776567401075 * S_MntFruits
2414751   +          +     1.09584731081081 * S_MntGoldProds  +     1.22333044103532 *
2414752   +        S_MntMeatProducts  +     0.42827942745016 * S_MntSweetProducts
2414753   +          +     0.67813472792448 * S_MntWines  +     0.56816492004798 *
2414754   +        S_MonthsAsCustomer  +     0.58113470399079 * S_NumCatalogPurchases
2414755   +          +     1.96719021971894 * S_NumDealsPurchases
2414756   +          +    -0.44535354794671 * S_NumDistPurchases
2414757   +          +    -0.54827762736866 * S_NumStorePurchases
2414758   +          +     1.02703310241897 * S_NumWebPurchases
2414759   +          +    -0.12526997502601 * S_NumWebVisitsMonth
2414760   +          +    -0.55803926383776 * S_RFMstat  +     0.01819380776809 *
2414761   +        S_RMntFrq  +       0.651688575044 * S_Recency
2414762   +          +     1.58682398186611 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -1.36226288448745 * S_AcceptedCmpTotal + -1.3328616352886 * 
S_Age + 1.25346137866034 * S_Frq + -1.21746243786295 * S_Income + 2.83911738158074 * S_Kidhome 
+ -0.60784009102409 * S_Mnt + 1.57752173634223 * S_MntFishProducts + -0.26776567401075 * 
S_MntFruits + 1.09584731081081 * S_MntGoldProds + 1.22333044103532 * S_MntMeatProducts + 
0.42827942745016 * S_MntSweetProducts + 0.67813472792448 * S_MntWines + 0.56816492004798 * 
S_MonthsAsCustomer + 0.58113470399079 * S_NumCatalogPurchases + 1.96719021971894 * 
S_NumDealsPurchases + -0.44535354794671 * S_NumDistPurchases + -0.54827762736866 * 
S_NumStorePurchases + 1.02703310241897 * S_NumWebPurchases + -0.12526997502601 * 
S_NumWebVisitsMonth + -0.55803926383776 * S_RFMstat + 0.01819380776809 * S_RMntFrq + 
0.651688575044 * S_Recency + 1.58682398186611 * S_Teenhome ;
2414763   +   H1x2_2  =    -0.38064507857029 * S_AcceptedCmpTotal
2414764   +          +    -0.49661801158351 * S_Age  +    -0.89589399799916 * S_Frq
2414765   +          +     -0.0121499288597 * S_Income  +    -0.48023022827846 *
2414766   +        S_Kidhome  +     -0.5183846206029 * S_Mnt  +    -3.13913899012334 *
2414767   +        S_MntFishProducts  +    -2.07291335687615 * S_MntFruits
2414768   +          +     0.51019753905662 * S_MntGoldProds  +     0.11458666377917 *
2414769   +        S_MntMeatProducts  +     -1.8499241966205 * S_MntSweetProducts
2414770   +          +     0.23160544044172 * S_MntWines  +    -0.48210626907943 *
2414771   +        S_MonthsAsCustomer  +     0.15500845227752 * S_NumCatalogPurchases
2414772   +          +     1.34659447971131 * S_NumDealsPurchases
2414773   +          +    -0.51624251310423 * S_NumDistPurchases
2414774   +          +      -1.283121574848 * S_NumStorePurchases
2414775   +          +    -1.83517806228926 * S_NumWebPurchases
2414776   +          +     0.51321339475285 * S_NumWebVisitsMonth
2414777   +          +    -1.86431704283342 * S_RFMstat  +    -1.52065204326569 *
2414778   +        S_RMntFrq  +    -0.33186055095462 * S_Recency
2414779   +          +    -0.49524729407054 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.38064507857029 * S_AcceptedCmpTotal + -0.49661801158351 * 
S_Age + -0.89589399799916 * S_Frq + -0.0121499288597 * S_Income + -0.48023022827846 * 
S_Kidhome + -0.5183846206029 * S_Mnt + -3.13913899012334 * S_MntFishProducts + 
-2.07291335687615 * S_MntFruits + 0.51019753905662 * S_MntGoldProds + 0.11458666377917 * 
S_MntMeatProducts + -1.8499241966205 * S_MntSweetProducts + 0.23160544044172 * S_MntWines + 
-0.48210626907943 * S_MonthsAsCustomer + 0.15500845227752 * S_NumCatalogPurchases + 
1.34659447971131 * S_NumDealsPurchases + -0.51624251310423 * S_NumDistPurchases + 
-1.283121574848 * S_NumStorePurchases + -1.83517806228926 * S_NumWebPurchases + 
0.51321339475285 * S_NumWebVisitsMonth + -1.86431704283342 * S_RFMstat + -1.52065204326569 * 
S_RMntFrq + -0.33186055095462 * S_Recency + -0.49524729407054 * S_Teenhome ;
2414780   +   H1x2_3  =    -0.75774003934728 * S_AcceptedCmpTotal
2414781   +          +    -0.85312030825337 * S_Age  +    -0.01726294458221 * S_Frq
2414782   +          +     0.58598267983786 * S_Income  +     1.30497766805554 *
2414783   +        S_Kidhome  +    -0.84214135491022 * S_Mnt  +     0.55305862453787 *
2414784   +        S_MntFishProducts  +      0.6488663613899 * S_MntFruits
2414785   +          +    -0.83189439197558 * S_MntGoldProds  +    -0.07500050412653 *
2414786   +        S_MntMeatProducts  +    -0.06401928810253 * S_MntSweetProducts
2414787   +          +      0.5940135658334 * S_MntWines  +    -0.04573352455984 *
2414788   +        S_MonthsAsCustomer  +    -1.53610650634069 * S_NumCatalogPurchases
2414789   +          +     0.67492297345004 * S_NumDealsPurchases
2414790   +          +    -0.40437875375926 * S_NumDistPurchases
2414791   +          +     0.36322603681545 * S_NumStorePurchases
2414792   +          +    -1.15315070635524 * S_NumWebPurchases
2414793   +          +     1.20707272201156 * S_NumWebVisitsMonth
2414794   +          +     0.12192566357285 * S_RFMstat  +    -0.46711219170047 *
2414795   +        S_RMntFrq  +     1.89703582493259 * S_Recency
2414796   +          +     1.07511942237188 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.75774003934728 * S_AcceptedCmpTotal + -0.85312030825337 * 
S_Age + -0.01726294458221 * S_Frq + 0.58598267983786 * S_Income + 1.30497766805554 * S_Kidhome 
+ -0.84214135491022 * S_Mnt + 0.55305862453787 * S_MntFishProducts + 0.6488663613899 * 
S_MntFruits + -0.83189439197558 * S_MntGoldProds + -0.07500050412653 * S_MntMeatProducts + 
-0.06401928810253 * S_MntSweetProducts + 0.5940135658334 * S_MntWines + -0.04573352455984 * 
S_MonthsAsCustomer + -1.53610650634069 * S_NumCatalogPurchases + 0.67492297345004 * 
S_NumDealsPurchases + -0.40437875375926 * S_NumDistPurchases + 0.36322603681545 * 
S_NumStorePurchases + -1.15315070635524 * S_NumWebPurchases + 1.20707272201156 * 
S_NumWebVisitsMonth + 0.12192566357285 * S_RFMstat + -0.46711219170047 * S_RMntFrq + 
1.89703582493259 * S_Recency + 1.07511942237188 * S_Teenhome ;
2414797   +   H1x2_4  =     0.62123819069495 * S_AcceptedCmpTotal
2414798   +          +     0.03399237520702 * S_Age  +    -0.01971421795338 * S_Frq
2414799   +          +    -0.54728266919056 * S_Income  +     -0.4634195771237 *
2414800   +        S_Kidhome  +    -1.19055247712911 * S_Mnt  +      1.4307770729159 *
2414801   +        S_MntFishProducts  +    -0.83895281276374 * S_MntFruits
2414802   +          +    -0.48578798244317 * S_MntGoldProds  +     -0.2846617807101 *
2414803   +        S_MntMeatProducts  +     0.70721686533987 * S_MntSweetProducts
2414804   +          +     1.32824513551741 * S_MntWines  +    -0.62654342755965 *
2414805   +        S_MonthsAsCustomer  +    -0.97245161056543 * S_NumCatalogPurchases
2414806   +          +    -0.41427983342148 * S_NumDealsPurchases
2414807   +          +    -0.22714305629205 * S_NumDistPurchases
2414808   +          +    -0.78763182048862 * S_NumStorePurchases
2414809   +          +    -0.26669253451501 * S_NumWebPurchases
2414810   +          +    -0.79601078616342 * S_NumWebVisitsMonth
2414811   +          +    -0.03863278696502 * S_RFMstat  +     0.95011556103056 *
2414812   +        S_RMntFrq  +     0.57184629262878 * S_Recency
2414813   +          +    -0.21560478702461 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.62123819069495 * S_AcceptedCmpTotal + 0.03399237520702 * 
S_Age + -0.01971421795338 * S_Frq + -0.54728266919056 * S_Income + -0.4634195771237 * 
S_Kidhome + -1.19055247712911 * S_Mnt + 1.4307770729159 * S_MntFishProducts + 
-0.83895281276374 * S_MntFruits + -0.48578798244317 * S_MntGoldProds + -0.2846617807101 * 
S_MntMeatProducts + 0.70721686533987 * S_MntSweetProducts + 1.32824513551741 * S_MntWines + 
-0.62654342755965 * S_MonthsAsCustomer + -0.97245161056543 * S_NumCatalogPurchases + 
-0.41427983342148 * S_NumDealsPurchases + -0.22714305629205 * S_NumDistPurchases + 
-0.78763182048862 * S_NumStorePurchases + -0.26669253451501 * S_NumWebPurchases + 
-0.79601078616342 * S_NumWebVisitsMonth + -0.03863278696502 * S_RFMstat + 0.95011556103056 * 
S_RMntFrq + 0.57184629262878 * S_Recency + -0.21560478702461 * S_Teenhome ;
2414814   +   H1x2_5  =     1.47906557745075 * S_AcceptedCmpTotal
2414815   +          +    -0.31060566334198 * S_Age  +     0.56472424389718 * S_Frq
2414816   +          +     2.16541682726249 * S_Income  +    -0.34119803841059 *
2414817   +        S_Kidhome  +    -0.53783050542796 * S_Mnt  +     0.54954821448236 *
2414818   +        S_MntFishProducts  +    -0.48449918837838 * S_MntFruits
2414819   +          +     0.29783052620672 * S_MntGoldProds  +    -0.15068954343013 *
2414820   +        S_MntMeatProducts  +     0.12733251381761 * S_MntSweetProducts
2414821   +          +    -2.46709166794296 * S_MntWines  +     -1.2011286508879 *
2414822   +        S_MonthsAsCustomer  +    -0.88194814936932 * S_NumCatalogPurchases
2414823   +          +      0.7697882092212 * S_NumDealsPurchases
2414824   +          +     0.51864835453056 * S_NumDistPurchases
2414825   +          +    -1.18320366630444 * S_NumStorePurchases
2414826   +          +     -0.6608394639529 * S_NumWebPurchases
2414827   +          +    -0.03948137707769 * S_NumWebVisitsMonth
2414828   +          +     1.01076462488608 * S_RFMstat  +    -0.91562280329354 *
2414829   +        S_RMntFrq  +    -1.07576669501238 * S_Recency
2414830   +          +     -0.5946628412106 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.47906557745075 * S_AcceptedCmpTotal + -0.31060566334198 * 
S_Age + 0.56472424389718 * S_Frq + 2.16541682726249 * S_Income + -0.34119803841059 * S_Kidhome 
+ -0.53783050542796 * S_Mnt + 0.54954821448236 * S_MntFishProducts + -0.48449918837838 * 
S_MntFruits + 0.29783052620672 * S_MntGoldProds + -0.15068954343013 * S_MntMeatProducts + 
0.12733251381761 * S_MntSweetProducts + -2.46709166794296 * S_MntWines + -1.2011286508879 * 
S_MonthsAsCustomer + -0.88194814936932 * S_NumCatalogPurchases + 0.7697882092212 * 
S_NumDealsPurchases + 0.51864835453056 * S_NumDistPurchases + -1.18320366630444 * 
S_NumStorePurchases + -0.6608394639529 * S_NumWebPurchases + -0.03948137707769 * 
S_NumWebVisitsMonth + 1.01076462488608 * S_RFMstat + -0.91562280329354 * S_RMntFrq + 
-1.07576669501238 * S_Recency + -0.5946628412106 * S_Teenhome ;
2414831   +   H1x2_6  =     0.42130900994246 * S_AcceptedCmpTotal
2414832   +          +     1.64256522546546 * S_Age  +    -0.31822237495441 * S_Frq
2414833   +          +     0.39698710846967 * S_Income  +    -1.30075584525681 *
2414834   +        S_Kidhome  +    -1.74733472316294 * S_Mnt  +    -1.04423575539078 *
2414835   +        S_MntFishProducts  +     0.28025913700744 * S_MntFruits
2414836   +          +     0.92062413073229 * S_MntGoldProds  +     0.38487452173084 *
2414837   +        S_MntMeatProducts  +     2.15808673418264 * S_MntSweetProducts
2414838   +          +     -0.5364274323591 * S_MntWines  +     0.64447858852609 *
2414839   +        S_MonthsAsCustomer  +     0.33683873873337 * S_NumCatalogPurchases
2414840   +          +     1.45707983202269 * S_NumDealsPurchases
2414841   +          +     0.83341887728641 * S_NumDistPurchases
2414842   +          +    -0.36664450469423 * S_NumStorePurchases
2414843   +          +     0.63911579043339 * S_NumWebPurchases
2414844   +          +     0.67144790303554 * S_NumWebVisitsMonth
2414845   +          +    -0.22124390112376 * S_RFMstat  +     1.72222071547971 *
2414846   +        S_RMntFrq  +    -0.02323382627271 * S_Recency
2414847   +          +    -0.09494567508522 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_6 = 0.42130900994246 * S_AcceptedCmpTotal + 1.64256522546546 * 
S_Age + -0.31822237495441 * S_Frq + 0.39698710846967 * S_Income + -1.30075584525681 * 
S_Kidhome + -1.74733472316294 * S_Mnt + -1.04423575539078 * S_MntFishProducts + 
0.28025913700744 * S_MntFruits + 0.92062413073229 * S_MntGoldProds + 0.38487452173084 * 
S_MntMeatProducts + 2.15808673418264 * S_MntSweetProducts + -0.5364274323591 * S_MntWines + 
0.64447858852609 * S_MonthsAsCustomer + 0.33683873873337 * S_NumCatalogPurchases + 
1.45707983202269 * S_NumDealsPurchases + 0.83341887728641 * S_NumDistPurchases + 
-0.36664450469423 * S_NumStorePurchases + 0.63911579043339 * S_NumWebPurchases + 
0.67144790303554 * S_NumWebVisitsMonth + -0.22124390112376 * S_RFMstat + 1.72222071547971 * 
S_RMntFrq + -0.02323382627271 * S_Recency + -0.09494567508522 * S_Teenhome ;
2414848   +   H1x2_7  =      0.0903330772553 * S_AcceptedCmpTotal
2414849   +          +     0.13217959089196 * S_Age  +     0.93600629225871 * S_Frq
2414850   +          +     1.23765169211392 * S_Income  +     1.27732984858098 *
2414851   +        S_Kidhome  +     1.54889765360944 * S_Mnt  +     0.84618173514761 *
2414852   +        S_MntFishProducts  +    -0.32044356786958 * S_MntFruits
2414853   +          +    -0.26357995597029 * S_MntGoldProds  +     0.53649229087334 *
2414854   +        S_MntMeatProducts  +     1.46955866272889 * S_MntSweetProducts
2414855   +          +    -0.34260315437319 * S_MntWines  +    -1.70693604004836 *
2414856   +        S_MonthsAsCustomer  +     -0.4612555130737 * S_NumCatalogPurchases
2414857   +          +     0.68491896063662 * S_NumDealsPurchases
2414858   +          +      0.5386312048592 * S_NumDistPurchases
2414859   +          +     1.28108942503912 * S_NumStorePurchases
2414860   +          +    -0.88282270505969 * S_NumWebPurchases
2414861   +          +    -0.66670958211416 * S_NumWebVisitsMonth
2414862   +          +     0.94315921733739 * S_RFMstat  +     0.70533705858561 *
2414863   +        S_RMntFrq  +     0.23896687873405 * S_Recency
2414864   +          +     0.66289635918858 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_7 = 0.0903330772553 * S_AcceptedCmpTotal + 0.13217959089196 * S_Age 
+ 0.93600629225871 * S_Frq + 1.23765169211392 * S_Income + 1.27732984858098 * S_Kidhome + 
1.54889765360944 * S_Mnt + 0.84618173514761 * S_MntFishProducts + -0.32044356786958 * 
S_MntFruits + -0.26357995597029 * S_MntGoldProds + 0.53649229087334 * S_MntMeatProducts + 
1.46955866272889 * S_MntSweetProducts + -0.34260315437319 * S_MntWines + -1.70693604004836 * 
S_MonthsAsCustomer + -0.4612555130737 * S_NumCatalogPurchases + 0.68491896063662 * 
S_NumDealsPurchases + 0.5386312048592 * S_NumDistPurchases + 1.28108942503912 * 
S_NumStorePurchases + -0.88282270505969 * S_NumWebPurchases + -0.66670958211416 * 
S_NumWebVisitsMonth + 0.94315921733739 * S_RFMstat + 0.70533705858561 * S_RMntFrq + 
0.23896687873405 * S_Recency + 0.66289635918858 * S_Teenhome ;
2414865   +   H1x2_1  = H1x2_1  +     0.22958861848016 * AcceptedCmp10
2414866   +          +    -1.11069938765475 * AcceptedCmp20  +     1.18563222829069 *
2414867   +        AcceptedCmp30  +    -0.97028253571173 * AcceptedCmp40
2414868   +          +     0.60850082670391 * AcceptedCmp50  +     0.31163990605418 *
2414869   +        Complain0  +     1.10957053966326 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 0.22958861848016 * AcceptedCmp10 + -1.11069938765475 * 
AcceptedCmp20 + 1.18563222829069 * AcceptedCmp30 + -0.97028253571173 * AcceptedCmp40 + 
0.60850082670391 * AcceptedCmp50 + 0.31163990605418 * Complain0 + 1.10957053966326 * 
HigherEducationBinary0 ;
2414870   +   H1x2_2  = H1x2_2  +    -0.99409862826118 * AcceptedCmp10
2414871   +          +    -0.76360093699992 * AcceptedCmp20  +     0.82772534103696 *
2414872   +        AcceptedCmp30  +     1.74232000787449 * AcceptedCmp40
2414873   +          +    -1.37356239255127 * AcceptedCmp50  +      0.0919811154199 *
2414874   +        Complain0  +    -0.00220513515877 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.99409862826118 * AcceptedCmp10 + -0.76360093699992 
* AcceptedCmp20 + 0.82772534103696 * AcceptedCmp30 + 1.74232000787449 * AcceptedCmp40 + 
-1.37356239255127 * AcceptedCmp50 + 0.0919811154199 * Complain0 + -0.00220513515877 * 
HigherEducationBinary0 ;
2414875   +   H1x2_3  = H1x2_3  +    -0.21003647134105 * AcceptedCmp10
2414876   +          +    -0.08930317176477 * AcceptedCmp20  +    -0.39109673162041 *
2414877   +        AcceptedCmp30  +     1.14094450038946 * AcceptedCmp40
2414878   +          +     1.26041997788848 * AcceptedCmp50  +    -0.10972130900569 *
2414879   +        Complain0  +    -0.99352598480407 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -0.21003647134105 * AcceptedCmp10 + -0.08930317176477 
* AcceptedCmp20 + -0.39109673162041 * AcceptedCmp30 + 1.14094450038946 * AcceptedCmp40 + 
1.26041997788848 * AcceptedCmp50 + -0.10972130900569 * Complain0 + -0.99352598480407 * 
HigherEducationBinary0 ;
2414880   +   H1x2_4  = H1x2_4  +     2.02630284432093 * AcceptedCmp10
2414881   +          +    -2.50721904229276 * AcceptedCmp20  +    -1.31026450397446 *
2414882   +        AcceptedCmp30  +    -0.83440880266914 * AcceptedCmp40
2414883   +          +     -0.0570899805015 * AcceptedCmp50  +    -0.55525351434733 *
2414884   +        Complain0  +     0.27306601694081 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 2.02630284432093 * AcceptedCmp10 + -2.50721904229276 * 
AcceptedCmp20 + -1.31026450397446 * AcceptedCmp30 + -0.83440880266914 * AcceptedCmp40 + 
-0.0570899805015 * AcceptedCmp50 + -0.55525351434733 * Complain0 + 0.27306601694081 * 
HigherEducationBinary0 ;
2414885   +   H1x2_5  = H1x2_5  +    -0.18595284227194 * AcceptedCmp10
2414886   +          +    -1.55973916517392 * AcceptedCmp20  +    -3.81563768970049 *
2414887   +        AcceptedCmp30  +    -0.09331430915239 * AcceptedCmp40
2414888   +          +     0.76128118177142 * AcceptedCmp50  +    -0.17283107047755 *
2414889   +        Complain0  +    -1.01028562804392 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + -0.18595284227194 * AcceptedCmp10 + -1.55973916517392 
* AcceptedCmp20 + -3.81563768970049 * AcceptedCmp30 + -0.09331430915239 * AcceptedCmp40 + 
0.76128118177142 * AcceptedCmp50 + -0.17283107047755 * Complain0 + -1.01028562804392 * 
HigherEducationBinary0 ;
2414890   +   H1x2_6  = H1x2_6  +    -1.21475169836565 * AcceptedCmp10
2414891   +          +     0.28748729216575 * AcceptedCmp20  +     1.15908030413172 *
2414892   +        AcceptedCmp30  +    -0.05889528676549 * AcceptedCmp40
2414893   +          +    -0.41661363625562 * AcceptedCmp50  +    -0.77939130028952 *
2414894   +        Complain0  +     2.19510865765326 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + -1.21475169836565 * AcceptedCmp10 + 0.28748729216575 * 
AcceptedCmp20 + 1.15908030413172 * AcceptedCmp30 + -0.05889528676549 * AcceptedCmp40 + 
-0.41661363625562 * AcceptedCmp50 + -0.77939130028952 * Complain0 + 2.19510865765326 * 
HigherEducationBinary0 ;
2414895   +   H1x2_7  = H1x2_7  +     0.87360423179644 * AcceptedCmp10
2414896   +          +    -0.47867594186426 * AcceptedCmp20  +    -0.30325818223392 *
2414897   +        AcceptedCmp30  +    -0.96085556588297 * AcceptedCmp40
2414898   +          +    -0.19693158209969 * AcceptedCmp50  +    -0.73731792634553 *
2414899   +        Complain0  +    -1.10021678806679 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_7 = H1x2_7 + 0.87360423179644 * AcceptedCmp10 + -0.47867594186426 * 
AcceptedCmp20 + -0.30325818223392 * AcceptedCmp30 + -0.96085556588297 * AcceptedCmp40 + 
-0.19693158209969 * AcceptedCmp50 + -0.73731792634553 * Complain0 + -1.10021678806679 * 
HigherEducationBinary0 ;
2414900   +   H1x2_1  = H1x2_1  +    -1.17876013389516 * Education2n_Cycle
2414901   +          +    -0.35670434275624 * EducationBasic  +    -0.12456502068616 *
2414902   +        EducationGraduation  +     -1.0620373133508 * EducationMaster
2414903   +          +    -3.97961426831865 * Marital_StatusDivorced
2414904   +          +     0.00932639813867 * Marital_StatusMarried
2414905   +          +     1.29310186574718 * Marital_StatusSingle
2414906   +          +     1.60940802221114 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -1.17876013389516 * Education2n_Cycle + 
-0.35670434275624 * EducationBasic + -0.12456502068616 * EducationGraduation + 
-1.0620373133508 * EducationMaster + -3.97961426831865 * Marital_StatusDivorced + 
0.00932639813867 * Marital_StatusMarried + 1.29310186574718 * Marital_StatusSingle + 
1.60940802221114 * Marital_StatusTogether ;
2414907   +   H1x2_2  = H1x2_2  +     0.58497813059595 * Education2n_Cycle
2414908   +          +     0.98038586431321 * EducationBasic  +    -0.20442806724521 *
2414909   +        EducationGraduation  +     0.64973046142001 * EducationMaster
2414910   +          +    -0.30358516578188 * Marital_StatusDivorced
2414911   +          +    -0.96176709360703 * Marital_StatusMarried
2414912   +          +     1.26977690921649 * Marital_StatusSingle
2414913   +          +     -0.6681544336237 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.58497813059595 * Education2n_Cycle + 
0.98038586431321 * EducationBasic + -0.20442806724521 * EducationGraduation + 0.64973046142001 
* EducationMaster + -0.30358516578188 * Marital_StatusDivorced + -0.96176709360703 * 
Marital_StatusMarried + 1.26977690921649 * Marital_StatusSingle + -0.6681544336237 * 
Marital_StatusTogether ;
2414914   +   H1x2_3  = H1x2_3  +     0.42123479646947 * Education2n_Cycle
2414915   +          +     0.22705854674045 * EducationBasic  +     0.34794003687348 *
2414916   +        EducationGraduation  +     0.18356390207843 * EducationMaster
2414917   +          +     0.55272671490757 * Marital_StatusDivorced
2414918   +          +      0.1499239288334 * Marital_StatusMarried
2414919   +          +    -0.46840941760604 * Marital_StatusSingle
2414920   +          +     0.93706218273755 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.42123479646947 * Education2n_Cycle + 
0.22705854674045 * EducationBasic + 0.34794003687348 * EducationGraduation + 0.18356390207843 
* EducationMaster + 0.55272671490757 * Marital_StatusDivorced + 0.1499239288334 * 
Marital_StatusMarried + -0.46840941760604 * Marital_StatusSingle + 0.93706218273755 * 
Marital_StatusTogether ;
2414921   +   H1x2_4  = H1x2_4  +     0.85035585831723 * Education2n_Cycle
2414922   +          +    -0.70680576286167 * EducationBasic  +    -0.24487676912938 *
2414923   +        EducationGraduation  +    -0.33030970028481 * EducationMaster
2414924   +          +      -1.240735370138 * Marital_StatusDivorced
2414925   +          +    -1.20089294883599 * Marital_StatusMarried
2414926   +          +     0.57492674426149 * Marital_StatusSingle
2414927   +          +     1.44189292990255 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.85035585831723 * Education2n_Cycle + 
-0.70680576286167 * EducationBasic + -0.24487676912938 * EducationGraduation + 
-0.33030970028481 * EducationMaster + -1.240735370138 * Marital_StatusDivorced + 
-1.20089294883599 * Marital_StatusMarried + 0.57492674426149 * Marital_StatusSingle + 
1.44189292990255 * Marital_StatusTogether ;
2414928   +   H1x2_5  = H1x2_5  +    -0.62461434654579 * Education2n_Cycle
2414929   +          +    -0.34090423965869 * EducationBasic  +    -0.82493401834396 *
2414930   +        EducationGraduation  +    -1.09423426649553 * EducationMaster
2414931   +          +     1.05435442049802 * Marital_StatusDivorced
2414932   +          +      0.3571256349717 * Marital_StatusMarried
2414933   +          +    -0.44741267266578 * Marital_StatusSingle
2414934   +          +     0.02948931507994 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + -0.62461434654579 * Education2n_Cycle + 
-0.34090423965869 * EducationBasic + -0.82493401834396 * EducationGraduation + 
-1.09423426649553 * EducationMaster + 1.05435442049802 * Marital_StatusDivorced + 
0.3571256349717 * Marital_StatusMarried + -0.44741267266578 * Marital_StatusSingle + 
0.02948931507994 * Marital_StatusTogether ;
2414935   +   H1x2_6  = H1x2_6  +     0.09620501635178 * Education2n_Cycle
2414936   +          +    -0.54617424401993 * EducationBasic  +    -0.43305038404558 *
2414937   +        EducationGraduation  +     0.05453229059502 * EducationMaster
2414938   +          +     2.06026721980778 * Marital_StatusDivorced
2414939   +          +    -0.49583258645166 * Marital_StatusMarried
2414940   +          +    -1.14824900824474 * Marital_StatusSingle
2414941   +          +     0.57690093967839 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + 0.09620501635178 * Education2n_Cycle + 
-0.54617424401993 * EducationBasic + -0.43305038404558 * EducationGraduation + 
0.05453229059502 * EducationMaster + 2.06026721980778 * Marital_StatusDivorced + 
-0.49583258645166 * Marital_StatusMarried + -1.14824900824474 * Marital_StatusSingle + 
0.57690093967839 * Marital_StatusTogether ;
2414942   +   H1x2_7  = H1x2_7  +    -0.31251046777442 * Education2n_Cycle
2414943   +          +    -1.69272922870259 * EducationBasic  +    -0.08682253496961 *
2414944   +        EducationGraduation  +     0.58241644186309 * EducationMaster
2414945   +          +     -1.1890908607447 * Marital_StatusDivorced
2414946   +          +    -0.46668809907123 * Marital_StatusMarried
2414947   +          +     1.20342564763422 * Marital_StatusSingle
2414948   +          +    -1.75740662969578 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_7 = H1x2_7 + -0.31251046777442 * Education2n_Cycle + 
-1.69272922870259 * EducationBasic + -0.08682253496961 * EducationGraduation + 
0.58241644186309 * EducationMaster + -1.1890908607447 * Marital_StatusDivorced + 
-0.46668809907123 * Marital_StatusMarried + 1.20342564763422 * Marital_StatusSingle + 
-1.75740662969578 * Marital_StatusTogether ;
2414949   +   H1x2_1  =    -0.14973719401763 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.14973719401763 + H1x2_1 ;
2414950   +   H1x2_2  =    -0.56259582407931 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.56259582407931 + H1x2_2 ;
2414951   +   H1x2_3  =     0.42132483186492 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = 0.42132483186492 + H1x2_3 ;
2414952   +   H1x2_4  =      1.1996209421335 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 1.1996209421335 + H1x2_4 ;
2414953   +   H1x2_5  =     0.95827018478011 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 0.95827018478011 + H1x2_5 ;
2414954   +   H1x2_6  =     1.88844492435344 + H1x2_6 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = 1.88844492435344 + H1x2_6 ;
2414955   +   H1x2_7  =     0.77184516675485 + H1x2_7 ;
MPRINT(EM_DIAGRAM):   H1x2_7 = 0.77184516675485 + H1x2_7 ;
2414956   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2414957   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2414958   +   H1x2_1  = EXP(MIN(H1x2_1 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(MIN(H1x2_1 , _EXP_BAR));
2414959   +   H1x2_2  = EXP(MIN(H1x2_2 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(MIN(H1x2_2 , _EXP_BAR));
2414960   +   H1x2_3  = EXP(MIN(H1x2_3 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(MIN(H1x2_3 , _EXP_BAR));
2414961   +   H1x2_4  = EXP(MIN(H1x2_4 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(MIN(H1x2_4 , _EXP_BAR));
2414962   +   H1x2_5  = EXP(MIN(H1x2_5 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(MIN(H1x2_5 , _EXP_BAR));
2414963   +   H1x2_6  = EXP(MIN(H1x2_6 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(MIN(H1x2_6 , _EXP_BAR));
2414964   +   H1x2_7  = EXP(MIN(H1x2_7 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_7 = EXP(MIN(H1x2_7 , _EXP_BAR));
2414965   +END;
MPRINT(EM_DIAGRAM):   END;
2414966   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2414967   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
2414968   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
2414969   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
2414970   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
2414971   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
2414972   +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
2414973   +   H1x2_7  = .;
MPRINT(EM_DIAGRAM):   H1x2_7 = .;
2414974   +END;
MPRINT(EM_DIAGRAM):   END;
2414975   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2414976   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2414977   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2414978   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2414979   +   P_DepVar1  =     0.10431866610268 * H1x1_1  +    -0.48100701431081 * H1x1_2
2414980   +          +      1.1561061025832 * H1x1_3  +    -1.23928879501664 * H1x1_4
2414981   +          +     1.22057275321508 * H1x1_5  +     0.21972347471711 * H1x1_6
2414982   +          +    -0.98998788335495 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.10431866610268 * H1x1_1 + -0.48100701431081 * H1x1_2 + 
1.1561061025832 * H1x1_3 + -1.23928879501664 * H1x1_4 + 1.22057275321508 * H1x1_5 + 
0.21972347471711 * H1x1_6 + -0.98998788335495 * H1x1_7 ;
2414983   +   P_DepVar1  = P_DepVar1  + -4.9985478923183E-10 * H1x2_1
2414984   +          +   2.7724573038604E-6 * H1x2_2  +  -3.3263781208921E-6 * H1x2_3
2414985   +          +     1.90169432265E-8 * H1x2_4  +  -9.7460294571708E-9 * H1x2_5
2414986   +          +  -2.0885179583168E-6 * H1x2_6  +    3.038660449943E-8 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 + -4.9985478923183E-10 * H1x2_1 + 
2.7724573038604E-6 * H1x2_2 + -3.3263781208921E-6 * H1x2_3 + 1.90169432265E-8 * H1x2_4 + 
-9.7460294571708E-9 * H1x2_5 + -2.0885179583168E-6 * H1x2_6 + 3.038660449943E-8 * H1x2_7 ;
2414987   +   P_DepVar1  =    -2.34500119066237 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.34500119066237 + P_DepVar1 ;
2414988   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2414989   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2414990   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2414991   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2414992   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2414993   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2414994   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2414995   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2414996   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2414997   +END;
MPRINT(EM_DIAGRAM):   END;
2414998   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2414999   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2415000   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2415001   +END;
MPRINT(EM_DIAGRAM):   END;
2415002   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2415003   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2415004   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2415005   +END;
MPRINT(EM_DIAGRAM):   END;
2415006   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2415007   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2415008   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2415009   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2415010   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2415011   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2415012   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2415013   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2415014   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2415015   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2415016   +END;
MPRINT(EM_DIAGRAM):   END;
2415017   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2415018   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2415019   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2415020   +drop
2415021   +H1x1_1
2415022   +H1x1_2
2415023   +H1x1_3
2415024   +H1x1_4
2415025   +H1x1_5
2415026   +H1x1_6
2415027   +H1x1_7
2415028   +H1x2_1
2415029   +H1x2_2
2415030   +H1x2_3
2415031   +H1x2_4
2415032   +H1x2_5
2415033   +H1x2_6
2415034   +H1x2_7
2415035   +;
MPRINT(EM_DIAGRAM):   drop H1x1_1 H1x1_2 H1x1_3 H1x1_4 H1x1_5 H1x1_6 H1x1_7 H1x2_1 H1x2_2 
H1x2_3 H1x2_4 H1x2_5 H1x2_6 H1x2_7 ;
2415036   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2415037    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2415038    quit;
2415039    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2415040    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2415041    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2415042    retain ID 2 Node "AutoNeural12";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural12";
2415043    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2415044    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4452 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4452 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2415045    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2415046    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2415047    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4452 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4452 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2415048    proc sort data=EMWS8.AutoNeural12_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural12_variableset out=_temp2(keep=NAME 
CREATOR);
2415049    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2415050    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL12_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2415051    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2415052    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2415053    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2415054    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2415055    proc contents data=EMWS8.AutoNeural12_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural12_train out=_meta(keep=NAME) noprint;
2415056    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

2415057    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2415058    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2415059    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2415060    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2415061    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2415062    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2415063    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2415064    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2415065    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2415065  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 2199 rows and 5 columns.

2415066    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2415067    proc append base=EMWS8.Ensmbl44_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl44_FCMP data=_tempx;
2415068    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL44_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 2199 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL44_FCMP has 2199 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2415069    filename _pref
2415069  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
2415070    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2415071    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
2415072   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2415073   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
2415074   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2415075   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
2415076   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
2415077   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2415078    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2415079    quit;
2415080    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2415081    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2415082    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2415083    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
2415084    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2415085    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.19 seconds
      cpu time            0.01 seconds
      

2415086    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2415087    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2415088    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2415089    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
2415090    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2415091    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2415092    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2415093    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2415094    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2415095    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2415096    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
2415097    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

2415098    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2415099    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2415100    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2415101    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2415102    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2415103    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2415104    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2415105    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2415106    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2415106  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

2415107    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2415108    proc append base=EMWS8.Ensmbl44_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl44_FCMP data=_tempx;
2415109    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL44_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL44_FCMP has 2203 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2415110    filename _pref
2415110  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
2415111    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2415112    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
2415113   +
2415114   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
2415115   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
2415115  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
2415116   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
2415117   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
2415118   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
2415119   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
2415120   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2415121    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2415122    quit;
2415123    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2415124    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2415125    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2415126    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
2415127    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2415128    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2415129    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2415130    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2415131    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2415132    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
2415133    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2415134    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2415135    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2415136    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2415137    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2415138    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2415139    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
2415140    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2415141    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2415142    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2415143    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2415144    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2415145    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2415146    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2415147    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2415148    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2415149    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2415149  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

2415150    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2415151    proc append base=EMWS8.Ensmbl44_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl44_FCMP data=_tempx;
2415152    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL44_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL44_FCMP has 2242 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2415153    filename _pref
2415153  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
2415154    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2415155    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
2415156   +
2415157   +
2415158   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
2415159   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
2415160   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
2415161   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
2415162   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
2415163   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2415164   +
2415165   +
2415166   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
2415167   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
2415168   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
2415169   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
2415170   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
2415171   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2415172   +
2415173   +
2415174   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
2415175   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
2415176   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
2415177   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
2415178   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
2415179   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2415180   +
2415181   +
2415182   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
2415183   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
2415184   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
2415185   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
2415186   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
2415187   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2415188   +
2415189   +
2415190   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
2415191   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
2415192   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
2415193   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
2415194   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
2415195   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2415196   +
2415197   +
2415198   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
2415199   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
2415200   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
2415201   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
2415202   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
2415203   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2415204   +
2415205   +
2415206   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
2415207   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
2415208   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
2415209   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
2415210   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
2415211   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2415212   +
2415213   +
2415214   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
2415215   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
2415216   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
2415217   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
2415218   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
2415219   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2415220   +if
2415221   +_FILTERNORM1 not in ( '.')
2415222   + and
2415223   +_FILTERNORM2 not in ( '.')
2415224   + and
2415225   +_FILTERNORM3 not in ( '.')
2415226   + and
2415227   +_FILTERNORM4 not in ( '.')
2415228   + and
2415229   +_FILTERNORM5 not in ( '.')
2415230   + and
2415231   +_FILTERNORM6 not in ( '.')
2415232   + and
2415233   +_FILTERNORM7 not in ( ' ')
2415234   + and
2415235   +_FILTERNORM8 not in ( ' ')
2415236   +and
2415237   +( Dt_Customer ne .)
2415238   +and ( Income ne . and (Income<=107000))
2415239   +and ( Kidhome ne .)
2415240   +and ( MntFishProducts ne .)
2415241   +and ( MntFruits ne .)
2415242   +and ( MntGoldProds ne .)
2415243   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
2415244   +and ( MntSweetProducts ne .)
2415245   +and ( MntWines ne .)
2415246   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
2415247   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
2415248   +and ( NumStorePurchases ne .)
2415249   +and ( NumWebPurchases ne .)
2415250   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
2415251   +and ( Recency ne .)
2415252   +and ( Teenhome ne .)
2415253   +and ( Year_Birth ne .)
2415254   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
2415255   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
2415256   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
2415257   +end;
MPRINT(EM_DIAGRAM):   end;
2415258   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
2415259   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2415260    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2415261    quit;
2415262    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2415263    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2415264    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2415265    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
2415266    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2415267    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2415268    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2415269    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2415270    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2415271    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
2415272    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2415273    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2415274    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2415275    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2415276    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2415277    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2415278    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
2415279    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

2415280    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2415281    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2415282    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2415283    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2415284    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2415285    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2415286    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2415287    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2415288    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2415288  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

2415289    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2415290    proc append base=EMWS8.Ensmbl44_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl44_FCMP data=_tempx;
2415291    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL44_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL44_FCMP has 2308 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2415292    %macro varDept(fcmpdata=,id=);
2415293    %global nobs&id scoreFlag&id;
2415294    %let scoreFlag&id = 0;
2415295    %if &id=1 or ^&fcmpStart %then %do;
2415296    proc sort data=&fcmpdata out=_temp&id nodupkey;
2415297    by NAME;
2415298    where id=&id and LHS in( %let j=1;
2415299    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
2415300    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
2415301    "&var" %let j = %eval(&j+1);
2415302    %end;
2415303    );
2415304    run;
2415305    %let dsid = %sysfunc(open(_temp&id));
2415306    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2415307    %let dsid = %sysfunc(close(&dsid));
2415308    %if &&nobs&id %then %do;
2415309    %let scoreFlag&id = 1;
2415310    %let fcmpStart = 1;
2415311    %end;
2415312    %else %let fcmpStart = 0;
2415313    %end;
2415314    %else %do;
2415315    proc sort data=&fcmpdata out=_tempid;
2415316    where id=&id;
2415317    by LHS;
2415318    run;
2415319    %let dsid = %sysfunc(open(_tempid));
2415320    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2415321    %let dsid = %sysfunc(close(&dsid));
2415322    %if ^&&nobs&id %then %do;
2415323    proc datasets lib=work nolist;
2415324    delete _tempid;
2415325    run;
2415326    quit;
2415327    %end;
2415328    %else %do;
2415329    data _tempAll;
2415330    set %let j=%eval(&id-1);
2415331    %do x=1 %to &j;
2415332    %if &&nobs&x %then %do;
2415333    _temp&x %end;
2415334    %end;
2415335    ;
2415336    run;
2415337    proc sql;
2415338    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
2415338  ! work._tempid p2 where p.name=p2.lhs;
2415339    quit;
The SAS System

2415340    data _temp&id;
2415341    set _temp&id;
2415342    where LHS ne '' and NAME ne '' and Node ne '';
2415343    run;
2415344    proc datasets lib=work nolist;
2415345    delete _tempAll;
2415346    run;
2415347    %let dsid = %sysfunc(open(_temp&id));
2415348    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2415349    %let dsid = %sysfunc(close(&dsid));
2415350    %if ^&&nobs&id %then %do;
2415351    proc datasets lib=work nolist;
2415352    delete _temp&id;
2415353    run;
2415354    quit;
2415355    %end;
2415356    %else %do;
2415357    %let scoreFlag&id = 1;
2415358    data _temp&id;
2415359    set _temp&id;
2415360    where LHS ne NAME and node ne '';
2415361    run;
2415362    %let dsid = %sysfunc(open(_temp&id));
2415363    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2415364    %let dsid = %sysfunc(close(&dsid));
2415365    %if ^&&nobs&id %then %do;
2415366    proc datasets lib=work nolist;
2415367    delete _temp&id;
2415368    run;
2415369    quit;
2415370    %end;
2415371    %else %do;
2415372    proc sort data=_temp&id nodupkey;
2415373    by LHS NAME;
2415374    run;
2415375    %end;
2415376    %end;
2415377    %end;
2415378    %end;
2415379    %mend varDept;
2415380    %macro optCode(outdata=fcmpdata);
2415381    %global fcmpStart;
2415382    %let fcmpStart = 0;
2415383    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
2415384    %let NumNodes=9;
2415385    %do k=1 %to &NumNodes;
2415386    %vardept(fcmpdata=&outdata, id=&k);
2415387    %end;
2415388    %mend optCode;
2415389    %optcode(outData=EMWS8.Ensmbl44_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl44_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL44_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl44_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 134 observations read from the data set EMWS8.ENSMBL44_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 100 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 34 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl44_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL44_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl44_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL44_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl44_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL44_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 34 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl44_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL44_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 38 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl44_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL44_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 77 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl44_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL44_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl44_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL44_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

2415390    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
2415391    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
2415392    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
2415393    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2415394    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
2415395    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
2415396    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
2415397    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2415398    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2415399    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
2415399  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.

2415400    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2415401    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
2415402    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
2415403    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2415404    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
2415405    * Ensmbl44: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Ensmbl44: Computing metadata for TRAIN data;
2415406    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS8.ENSMBL44_TRAIN.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl44\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.Ensmbl44_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.Ensmbl44_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.Ensmbl44_TRAIN out=WORK.M2Q3O2AO noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2Q3O2AO;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M2Q3O2AO(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = 
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2Q3O2AO;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M2Q3O2AO;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M1MF0N6V NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1MF0N6V;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M1MF0N6V;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3F51YWN(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M1MF0N6V;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1MF0N6V;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M1MF0N6V;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1MF0N6V;
MPRINT(EMADVISECOLUMNS):   set WORK.M1MF0N6V;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural9_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural9_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl44_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Ensmbl44";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "Ensmbl44";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "Ensmbl44";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "Ensmbl44";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "Ensmbl44";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "Ensmbl44";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "Ensmbl44";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "Ensmbl44";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Ensmbl44";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "Ensmbl44";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl44: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   if NAME in( "I_DepVar" "F_DepVar" "U_DepVar" "_WARN_" "P_DepVar1" 
"P_DepVar0" "R_DepVar1" "R_DepVar0" ) then CREATOR="Ensmbl44";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
2415726    data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
2415727    set EMWS8.Ensmbl44_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl44_EMINFO;
2415728    where DATA='Ensmbl44' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Ensmbl44' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 
'MODEL');
2415729    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.ENSMBL44_EMINFO.
      WHERE (DATA='Ensmbl44') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2415730    data EMWS8.Ensmbl44_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl44_EMINFO;
2415731    length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
2415732    input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
2415733    cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS8.ENSMBL44_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   run;
2415737    run;
2415738    data EMWS8.Ensmbl44_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl44_EMINFO;
2415739    set EMWS8.Ensmbl44_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl44_EMINFO WORK.MODELTEMP_INFO;
2415740    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.ENSMBL44_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.ENSMBL44_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2415741    proc sort data = EMWS8.Ensmbl44_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Ensmbl44_EMINFO NOTHREADS;
2415742    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
2415743    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.ENSMBL44_EMINFO.
NOTE: The data set EMWS8.ENSMBL44_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2415744    proc sort data = EMWS8.AutoNeural9_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.AutoNeural9_EMINFO OUT=WORK.SORTEDEMINFO 
NOTHREADS;
2415745    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
2415746    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set EMWS8.AUTONEURAL9_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2415747    proc sort data = EMWS8.Ensmbl44_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Ensmbl44_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
2415748    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
2415749    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.ENSMBL44_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2415750    data EMWS8.Ensmbl44_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl44_EMINFO;
2415751    merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
2415752    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
2415753    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.ENSMBL44_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2415754    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
2415755    delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
2415756    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
2415757    quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
      

NOTE: View EMWS8.ENSMBL44_TRAIN.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.04 seconds
      
NOTE: View EMWS8.ENSMBL44_VALIDATE.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
