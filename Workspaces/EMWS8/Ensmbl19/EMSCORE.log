MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "13.34 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                28. April 2016
Time:                13.34 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O1Z8VYLR 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl19\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O1Z8VYLR new;
MPRINT(EM_DIAGRAM):   run;
305262     filename emflow
305262   ! "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl19\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl19\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl19: Scoring AUTONEURAL33_TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
305263     *------------------------------------------------------------*;
305264     * Ensmbl19: Scoring AUTONEURAL33_TRAIN data;
305265     *------------------------------------------------------------*;
305266     data EMWS8.Ensmbl19_TRAIN
305267     / view=EMWS8.Ensmbl19_TRAIN
305268     ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl19_TRAIN / view=EMWS8.Ensmbl19_TRAIN ;
305269     set EMWS8.AutoNeural33_TRAIN
305270     ;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural33_TRAIN ;
305271     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl19\EMFLOWSCORE.sas.
305272    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
305273    +* Ensmbl19: Combine model for DepVar;
MPRINT(EM_DIAGRAM):   * Ensmbl19: Combine model for DepVar;
305274    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
305275    +* Ensmbl19: Scoring Code of model 1 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl19: Scoring Code of model 1 of 5;
305276    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
305277    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
305278    +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
305279    +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
305280    +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
305281    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
305282    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
305283    +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
305284    +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
305285    +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
305286    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
305287    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
305288    +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
305289    +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
305290    +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
305291    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
305292    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
305293    +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
305294    +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
305295    +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
305296    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
305297    +
305298    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
305299    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
305299   !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
305300    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
305301    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
305302    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
305303    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
305304    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
305305    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
305306    +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
305307    +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
305308    +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
305309    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
305310    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
305311    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
305312    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
305313    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
305314    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
305315    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
305316    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
305317    +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
305318    +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
305319    +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
305320    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
305321    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
305322    +* TOOL: Variable selection Class;
MPRINT(EM_DIAGRAM):   * TOOL: Variable selection Class;
305323    +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
305324    +* NODE: Varsel;
MPRINT(EM_DIAGRAM):   * NODE: Varsel;
305325    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
305326    +******************************************;
MPRINT(EM_DIAGRAM):   ******************************************;
305327    +*** Begin Scoring Code from PROC DMINE ***;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code from PROC DMINE ***;
305328    +******************************************;
MPRINT(EM_DIAGRAM):   ******************************************;
305329    +
305330    +length _WARN_ $ 4;
MPRINT(EM_DIAGRAM):   length _WARN_ $ 4;
305331    +label _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
305332    +
305333    +
305334    +/*----G_Marital_Status begin----*/
305335    +length _NORM8 $ 8;
MPRINT(EM_DIAGRAM):   length _NORM8 $ 8;
305336    +_NORM8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _NORM8 = put( Marital_Status , $8. );
305337    +%DMNORMIP( _NORM8 )
MPRINT(DMNORMIP):   call dmnorm(_NORM8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
305338    +drop _NORM8;
MPRINT(EM_DIAGRAM):   drop _NORM8;
305339    +select(_NORM8);
MPRINT(EM_DIAGRAM):   select(_NORM8);
305340    +  when("DIVORCED" ) G_Marital_Status = 1;
MPRINT(EM_DIAGRAM):   when("DIVORCED" ) G_Marital_Status = 1;
305341    +  when("MARRIED " ) G_Marital_Status = 2;
MPRINT(EM_DIAGRAM):   when("MARRIED " ) G_Marital_Status = 2;
305342    +  when("SINGLE  " ) G_Marital_Status = 0;
MPRINT(EM_DIAGRAM):   when("SINGLE  " ) G_Marital_Status = 0;
305343    +  when("TOGETHER" ) G_Marital_Status = 2;
MPRINT(EM_DIAGRAM):   when("TOGETHER" ) G_Marital_Status = 2;
305344    +  when("WIDOW   " ) G_Marital_Status = 0;
MPRINT(EM_DIAGRAM):   when("WIDOW   " ) G_Marital_Status = 0;
305345    +  otherwise substr(_WARN_, 2, 1) = 'U';
MPRINT(EM_DIAGRAM):   otherwise substr(_WARN_, 2, 1) = 'U';
305346    +end;
MPRINT(EM_DIAGRAM):   end;
305347    +label G_Marital_Status="Grouped Levels for Marital_Status";
MPRINT(EM_DIAGRAM):   label G_Marital_Status= "Grouped Levels for Marital_Status";
305348    +/*----G_Marital_Status end----*/
305349    +
305350    +
305351    +****************************************;
MPRINT(EM_DIAGRAM):   ****************************************;
305352    +*** End Scoring Code from PROC DMINE ***;
MPRINT(EM_DIAGRAM):   *** End Scoring Code from PROC DMINE ***;
305353    +****************************************;
MPRINT(EM_DIAGRAM):   ****************************************;
305354    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
305355    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
305356    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
305357    +* NODE: AutoNeural33;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural33;
305358    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
305359    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
305360    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
305361    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
305362    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
305363    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
305364    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
305365    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
305366    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
305367    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
305368    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
305369    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
305370    +LENGTH _WARN_ $4
305371    +      F_DepVar  $ 12
305372    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
305373    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
305374    +
305375    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
305376    +
305377    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
305378    +
305379    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
305380    +
305381    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
305382    +
305383    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
305384    +
305385    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
305386    +
305387    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
305388    +
305389    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
305390    +
305391    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
305392    +
305393    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
305394    +
305395    +      label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
305396    +
305397    +      label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
305398    +
305399    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
305400    +
305401    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
305402    +
305403    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
305404    +
305405    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
305406    +
305407    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
305408    +
305409    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
305410    +
305411    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
305412    +
305413    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
305414    +
305415    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
305416    +
305417    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
305418    +
305419    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
305420    +
305421    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
305422    +
305423    +*** Generate dummy variables for G_Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for G_Marital_Status ;
305424    +drop G_Marital_Status0 G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   drop G_Marital_Status0 G_Marital_Status1 ;
305425    +if missing( G_Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( G_Marital_Status ) then do;
305426    +   G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
305427    +   G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
305428    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
305429    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
305430    +end;
MPRINT(EM_DIAGRAM):   end;
305431    +else do;
MPRINT(EM_DIAGRAM):   else do;
305432    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
305433    +   _dm12 = put( G_Marital_Status , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( G_Marital_Status , BEST12. );
305434    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
305435    +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
305436    +      G_Marital_Status0 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = -1;
305437    +      G_Marital_Status1 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = -1;
305438    +   end;
MPRINT(EM_DIAGRAM):   end;
305439    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
305440    +      G_Marital_Status0 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 1;
305441    +      G_Marital_Status1 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 0;
305442    +   end;
MPRINT(EM_DIAGRAM):   end;
305443    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
305444    +      G_Marital_Status0 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 0;
305445    +      G_Marital_Status1 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 1;
305446    +   end;
MPRINT(EM_DIAGRAM):   end;
305447    +   else do;
MPRINT(EM_DIAGRAM):   else do;
305448    +      G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
305449    +      G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
305450    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
305451    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
305452    +   end;
MPRINT(EM_DIAGRAM):   end;
305453    +end;
MPRINT(EM_DIAGRAM):   end;
305454    +
305455    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
305456    +*** Checking missing input Interval
305457    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
305458    +
305459    +IF NMISS(
305460    +   AcceptedCmpTotal ,
305461    +   Frq ,
305462    +   Income ,
305463    +   Mnt ,
305464    +   MntGoldProds ,
305465    +   MntMeatProducts ,
305466    +   MntWines ,
305467    +   NumDistPurchases ,
305468    +   RFMstat ,
305469    +   RMntFrq ,
305470    +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntGoldProds , 
MntMeatProducts , MntWines , NumDistPurchases , RFMstat , RMntFrq , Recency ) THEN DO;
305471    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
305472    +
305473    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
305474    +END;
MPRINT(EM_DIAGRAM):   END;
305475    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
305476    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
305477    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
305478    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
305479    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
305480    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
305481    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
305482    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
305483    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
305484    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
305485    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
305486    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
305487    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
305488    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
305489    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
305490    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
305491    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
305492    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
305493    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
305494    +END;
MPRINT(EM_DIAGRAM):   END;
305495    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
305496    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
305497    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
305498    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
305499    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
305500    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
305501    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
305502    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
305503    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
305504    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
305505    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
305506    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
305507    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
305508    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
305509    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
305510    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
305511    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
305512    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
305513    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
305514    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
305515    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
305516    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
305517    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
305518    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
305519    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
305520    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
305521    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
305522    +END;
MPRINT(EM_DIAGRAM):   END;
305523    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
305524    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
305525    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
305526    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
305527    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
305528    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
305529    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
305530    +   H1x1_1  =     0.33555011401553 * S_AcceptedCmpTotal
305531    +          +    -3.02490159760157 * S_Frq  +    -0.12761482391665 * S_Income
305532    +          +     -9.1169668394273 * S_Mnt  +     0.88214411094174 *
305533    +        S_MntGoldProds  +     16.4212241447522 * S_MntMeatProducts
305534    +          +     4.65784744010387 * S_MntWines  +     2.75620847659032 *
305535    +        S_NumDistPurchases  +     5.10796074430888 * S_RFMstat
305536    +          +    -0.15069444442326 * S_RMntFrq  +    -0.36037041233055 *
305537    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.33555011401553 * S_AcceptedCmpTotal + -3.02490159760157 * 
S_Frq + -0.12761482391665 * S_Income + -9.1169668394273 * S_Mnt + 0.88214411094174 * 
S_MntGoldProds + 16.4212241447522 * S_MntMeatProducts + 4.65784744010387 * S_MntWines + 
2.75620847659032 * S_NumDistPurchases + 5.10796074430888 * S_RFMstat + -0.15069444442326 * 
S_RMntFrq + -0.36037041233055 * S_Recency ;
305538    +   H1x1_2  =     -6.2107002884316 * S_AcceptedCmpTotal
305539    +          +      5.5991079844098 * S_Frq  +    -1.06506164052399 * S_Income
305540    +          +     7.16823320768258 * S_Mnt  +     1.97115223638004 *
305541    +        S_MntGoldProds  +     0.02973121977962 * S_MntMeatProducts
305542    +          +     3.28931008157038 * S_MntWines  +    -3.02545356699096 *
305543    +        S_NumDistPurchases  +    -0.45519831720714 * S_RFMstat
305544    +          +     2.14788986039061 * S_RMntFrq  +     7.13033786501062 *
305545    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -6.2107002884316 * S_AcceptedCmpTotal + 5.5991079844098 * S_Frq 
+ -1.06506164052399 * S_Income + 7.16823320768258 * S_Mnt + 1.97115223638004 * S_MntGoldProds 
+ 0.02973121977962 * S_MntMeatProducts + 3.28931008157038 * S_MntWines + -3.02545356699096 * 
S_NumDistPurchases + -0.45519831720714 * S_RFMstat + 2.14788986039061 * S_RMntFrq + 
7.13033786501062 * S_Recency ;
305546    +   H1x1_3  =    -0.31707769589072 * S_AcceptedCmpTotal
305547    +          +     -0.8436342869652 * S_Frq  +     0.04938014828703 * S_Income
305548    +          +     0.41074885451072 * S_Mnt  +    -0.22835264468248 *
305549    +        S_MntGoldProds  +     0.04154328332772 * S_MntMeatProducts
305550    +          +    -0.63526276335269 * S_MntWines  +     0.16430041832418 *
305551    +        S_NumDistPurchases  +    -0.01070081959406 * S_RFMstat
305552    +          +    -1.56851833223581 * S_RMntFrq  +     0.62478865123427 *
305553    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.31707769589072 * S_AcceptedCmpTotal + -0.8436342869652 * 
S_Frq + 0.04938014828703 * S_Income + 0.41074885451072 * S_Mnt + -0.22835264468248 * 
S_MntGoldProds + 0.04154328332772 * S_MntMeatProducts + -0.63526276335269 * S_MntWines + 
0.16430041832418 * S_NumDistPurchases + -0.01070081959406 * S_RFMstat + -1.56851833223581 * 
S_RMntFrq + 0.62478865123427 * S_Recency ;
305554    +   H1x1_4  =     0.54144616315359 * S_AcceptedCmpTotal
305555    +          +    -2.69605116285758 * S_Frq  +    -0.42453662943397 * S_Income
305556    +          +    -0.95657675439363 * S_Mnt  +     0.24420189860131 *
305557    +        S_MntGoldProds  +     2.44632795316553 * S_MntMeatProducts
305558    +          +     -0.1454644222769 * S_MntWines  +     2.34899307919173 *
305559    +        S_NumDistPurchases  +    -0.02462201574723 * S_RFMstat
305560    +          +    -2.08470857931815 * S_RMntFrq  +    -0.76249328143214 *
305561    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.54144616315359 * S_AcceptedCmpTotal + -2.69605116285758 * 
S_Frq + -0.42453662943397 * S_Income + -0.95657675439363 * S_Mnt + 0.24420189860131 * 
S_MntGoldProds + 2.44632795316553 * S_MntMeatProducts + -0.1454644222769 * S_MntWines + 
2.34899307919173 * S_NumDistPurchases + -0.02462201574723 * S_RFMstat + -2.08470857931815 * 
S_RMntFrq + -0.76249328143214 * S_Recency ;
305562    +   H1x1_1  = H1x1_1  +     0.00660823494191 * G_Marital_Status0
305563    +          +    -0.18825548425502 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.00660823494191 * G_Marital_Status0 + 
-0.18825548425502 * G_Marital_Status1 ;
305564    +   H1x1_2  = H1x1_2  +    -2.06051657300217 * G_Marital_Status0
305565    +          +    -6.25782340834073 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -2.06051657300217 * G_Marital_Status0 + 
-6.25782340834073 * G_Marital_Status1 ;
305566    +   H1x1_3  = H1x1_3  +    -0.79419358160841 * G_Marital_Status0
305567    +          +     0.34890327415646 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.79419358160841 * G_Marital_Status0 + 
0.34890327415646 * G_Marital_Status1 ;
305568    +   H1x1_4  = H1x1_4  +    -0.04651762606699 * G_Marital_Status0
305569    +          +     0.31552155976549 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.04651762606699 * G_Marital_Status0 + 
0.31552155976549 * G_Marital_Status1 ;
305570    +   H1x1_1  =      9.5912267385355 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 9.5912267385355 + H1x1_1 ;
305571    +   H1x1_2  =     -17.513407093022 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -17.513407093022 + H1x1_2 ;
305572    +   H1x1_3  =     3.77110114695743 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 3.77110114695743 + H1x1_3 ;
305573    +   H1x1_4  =    -1.34405555452152 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -1.34405555452152 + H1x1_4 ;
305574    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
305575    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
305576    +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
305577    +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
305578    +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
305579    +   H1x1_4  = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
305580    +END;
MPRINT(EM_DIAGRAM):   END;
305581    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
305582    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
305583    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
305584    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
305585    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
305586    +END;
MPRINT(EM_DIAGRAM):   END;
305587    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
305588    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
305589    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
305590    +
305591    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
305592    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
305593    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
305594    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
305595    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
305596    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
305597    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
305598    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
305599    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
305600    +end;
MPRINT(EM_DIAGRAM):   end;
305601    +else do;
MPRINT(EM_DIAGRAM):   else do;
305602    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
305603    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
305604    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
305605    +   end;
MPRINT(EM_DIAGRAM):   end;
305606    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
305607    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
305608    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
305609    +   end;
MPRINT(EM_DIAGRAM):   end;
305610    +   else do;
MPRINT(EM_DIAGRAM):   else do;
305611    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
305612    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
305613    +   end;
MPRINT(EM_DIAGRAM):   end;
305614    +end;
MPRINT(EM_DIAGRAM):   end;
305615    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
305616    +   P_DepVar1  =     17.1648278730429 * H1x1_1  +    -5.41550544466459 * H1x1_2
305617    +          +     -11.071053129929 * H1x1_3  +      10.744209891392 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 17.1648278730429 * H1x1_1 + -5.41550544466459 * H1x1_2 + 
-11.071053129929 * H1x1_3 + 10.744209891392 * H1x1_4 ;
305618    +   P_DepVar1  =    -12.0079203309727 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -12.0079203309727 + P_DepVar1 ;
305619    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
305620    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
305621    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
305622    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
305623    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
305624    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
305625    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
305626    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
305627    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
305628    +END;
MPRINT(EM_DIAGRAM):   END;
305629    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
305630    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
305631    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
305632    +END;
MPRINT(EM_DIAGRAM):   END;
305633    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
305634    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
305635    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
305636    +END;
MPRINT(EM_DIAGRAM):   END;
305637    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
305638    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
305639    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
305640    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
305641    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
305642    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
305643    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
305644    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
305645    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
305646    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
305647    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
305648    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
305649    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
305650    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
305651    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
305652    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
305653    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
305654    +END;
MPRINT(EM_DIAGRAM):   END;
305655    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
305656    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
305657    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
305658    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
305659    +* Renaming variables for AutoNeural33;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural33;
305660    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
305661    +* Renaming Posterior variables for AutoNeural33;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural33;
305662    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
305663    +drop AutoNeural33_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural33_P_DepVar1;
305664    +AutoNeural33_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural33_P_DepVar1 = P_DepVar1;
305665    +drop AutoNeural33_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural33_P_DepVar0;
305666    +AutoNeural33_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural33_P_DepVar0 = P_DepVar0;
305667    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
305668    +* Renaming _WARN_ variable for AutoNeural33;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural33;
305669    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
305670    +length AutoNeural33_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural33_WARN_ $4;
305671    +drop AutoNeural33_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural33_WARN_;
305672    +AutoNeural33_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural33_WARN_ = _WARN_;
305673    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
305674    +* Ensmbl19: Scoring Code of model 2 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl19: Scoring Code of model 2 of 5;
305675    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
305676    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
305677    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
305678    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
305679    +* NODE: AutoNeural28;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural28;
305680    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
305681    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
305682    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
305683    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
305684    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
305685    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
305686    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
305687    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
305688    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
305689    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
305690    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
305691    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
305692    +LENGTH _WARN_ $4
305693    +      F_DepVar  $ 12
305694    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
305695    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
305696    +
305697    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
305698    +
305699    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
305700    +
305701    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
305702    +
305703    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
305704    +
305705    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
305706    +
305707    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
305708    +
305709    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
305710    +
305711    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
305712    +
305713    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
305714    +
305715    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
305716    +
305717    +      label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
305718    +
305719    +      label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
305720    +
305721    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
305722    +
305723    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
305724    +
305725    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
305726    +
305727    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
305728    +
305729    +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
305730    +
305731    +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
305732    +
305733    +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
305734    +
305735    +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
305736    +
305737    +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
305738    +
305739    +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
305740    +
305741    +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
305742    +
305743    +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
305744    +
305745    +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
305746    +
305747    +      label H1x3_2 = 'Hidden: H1x3_=2' ;
MPRINT(EM_DIAGRAM):   label H1x3_2 = 'Hidden: H1x3_=2' ;
305748    +
305749    +      label H1x3_3 = 'Hidden: H1x3_=3' ;
MPRINT(EM_DIAGRAM):   label H1x3_3 = 'Hidden: H1x3_=3' ;
305750    +
305751    +      label H1x3_4 = 'Hidden: H1x3_=4' ;
MPRINT(EM_DIAGRAM):   label H1x3_4 = 'Hidden: H1x3_=4' ;
305752    +
305753    +      label H1x3_5 = 'Hidden: H1x3_=5' ;
MPRINT(EM_DIAGRAM):   label H1x3_5 = 'Hidden: H1x3_=5' ;
305754    +
305755    +      label H1x3_6 = 'Hidden: H1x3_=6' ;
MPRINT(EM_DIAGRAM):   label H1x3_6 = 'Hidden: H1x3_=6' ;
305756    +
305757    +      label H1x4_1 = 'Hidden: H1x4_=1' ;
MPRINT(EM_DIAGRAM):   label H1x4_1 = 'Hidden: H1x4_=1' ;
305758    +
305759    +      label H1x4_2 = 'Hidden: H1x4_=2' ;
MPRINT(EM_DIAGRAM):   label H1x4_2 = 'Hidden: H1x4_=2' ;
305760    +
305761    +      label H1x4_3 = 'Hidden: H1x4_=3' ;
MPRINT(EM_DIAGRAM):   label H1x4_3 = 'Hidden: H1x4_=3' ;
305762    +
305763    +      label H1x4_4 = 'Hidden: H1x4_=4' ;
MPRINT(EM_DIAGRAM):   label H1x4_4 = 'Hidden: H1x4_=4' ;
305764    +
305765    +      label H1x4_5 = 'Hidden: H1x4_=5' ;
MPRINT(EM_DIAGRAM):   label H1x4_5 = 'Hidden: H1x4_=5' ;
305766    +
305767    +      label H1x4_6 = 'Hidden: H1x4_=6' ;
MPRINT(EM_DIAGRAM):   label H1x4_6 = 'Hidden: H1x4_=6' ;
305768    +
305769    +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
305770    +
305771    +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
305772    +
305773    +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
305774    +
305775    +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
305776    +
305777    +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
305778    +
305779    +      label H2x1_6 = 'Hidden: H2x1_=6' ;
MPRINT(EM_DIAGRAM):   label H2x1_6 = 'Hidden: H2x1_=6' ;
305780    +
305781    +      label H2x2_1 = 'Hidden: H2x2_=1' ;
MPRINT(EM_DIAGRAM):   label H2x2_1 = 'Hidden: H2x2_=1' ;
305782    +
305783    +      label H2x2_2 = 'Hidden: H2x2_=2' ;
MPRINT(EM_DIAGRAM):   label H2x2_2 = 'Hidden: H2x2_=2' ;
305784    +
305785    +      label H2x2_3 = 'Hidden: H2x2_=3' ;
MPRINT(EM_DIAGRAM):   label H2x2_3 = 'Hidden: H2x2_=3' ;
305786    +
305787    +      label H2x2_4 = 'Hidden: H2x2_=4' ;
MPRINT(EM_DIAGRAM):   label H2x2_4 = 'Hidden: H2x2_=4' ;
305788    +
305789    +      label H2x2_5 = 'Hidden: H2x2_=5' ;
MPRINT(EM_DIAGRAM):   label H2x2_5 = 'Hidden: H2x2_=5' ;
305790    +
305791    +      label H2x2_6 = 'Hidden: H2x2_=6' ;
MPRINT(EM_DIAGRAM):   label H2x2_6 = 'Hidden: H2x2_=6' ;
305792    +
305793    +      label H2x3_1 = 'Hidden: H2x3_=1' ;
MPRINT(EM_DIAGRAM):   label H2x3_1 = 'Hidden: H2x3_=1' ;
305794    +
305795    +      label H2x3_2 = 'Hidden: H2x3_=2' ;
MPRINT(EM_DIAGRAM):   label H2x3_2 = 'Hidden: H2x3_=2' ;
305796    +
305797    +      label H2x3_3 = 'Hidden: H2x3_=3' ;
MPRINT(EM_DIAGRAM):   label H2x3_3 = 'Hidden: H2x3_=3' ;
305798    +
305799    +      label H2x3_4 = 'Hidden: H2x3_=4' ;
MPRINT(EM_DIAGRAM):   label H2x3_4 = 'Hidden: H2x3_=4' ;
305800    +
305801    +      label H2x3_5 = 'Hidden: H2x3_=5' ;
MPRINT(EM_DIAGRAM):   label H2x3_5 = 'Hidden: H2x3_=5' ;
305802    +
305803    +      label H2x3_6 = 'Hidden: H2x3_=6' ;
MPRINT(EM_DIAGRAM):   label H2x3_6 = 'Hidden: H2x3_=6' ;
305804    +
305805    +      label H3x1_1 = 'Hidden: H3x1_=1' ;
MPRINT(EM_DIAGRAM):   label H3x1_1 = 'Hidden: H3x1_=1' ;
305806    +
305807    +      label H3x1_2 = 'Hidden: H3x1_=2' ;
MPRINT(EM_DIAGRAM):   label H3x1_2 = 'Hidden: H3x1_=2' ;
305808    +
305809    +      label H3x1_3 = 'Hidden: H3x1_=3' ;
MPRINT(EM_DIAGRAM):   label H3x1_3 = 'Hidden: H3x1_=3' ;
305810    +
305811    +      label H3x1_4 = 'Hidden: H3x1_=4' ;
MPRINT(EM_DIAGRAM):   label H3x1_4 = 'Hidden: H3x1_=4' ;
305812    +
305813    +      label H3x1_5 = 'Hidden: H3x1_=5' ;
MPRINT(EM_DIAGRAM):   label H3x1_5 = 'Hidden: H3x1_=5' ;
305814    +
305815    +      label H3x1_6 = 'Hidden: H3x1_=6' ;
MPRINT(EM_DIAGRAM):   label H3x1_6 = 'Hidden: H3x1_=6' ;
305816    +
305817    +      label H3x2_1 = 'Hidden: H3x2_=1' ;
MPRINT(EM_DIAGRAM):   label H3x2_1 = 'Hidden: H3x2_=1' ;
305818    +
305819    +      label H3x2_2 = 'Hidden: H3x2_=2' ;
MPRINT(EM_DIAGRAM):   label H3x2_2 = 'Hidden: H3x2_=2' ;
305820    +
305821    +      label H3x2_3 = 'Hidden: H3x2_=3' ;
MPRINT(EM_DIAGRAM):   label H3x2_3 = 'Hidden: H3x2_=3' ;
305822    +
305823    +      label H3x2_4 = 'Hidden: H3x2_=4' ;
MPRINT(EM_DIAGRAM):   label H3x2_4 = 'Hidden: H3x2_=4' ;
305824    +
305825    +      label H3x2_5 = 'Hidden: H3x2_=5' ;
MPRINT(EM_DIAGRAM):   label H3x2_5 = 'Hidden: H3x2_=5' ;
305826    +
305827    +      label H3x2_6 = 'Hidden: H3x2_=6' ;
MPRINT(EM_DIAGRAM):   label H3x2_6 = 'Hidden: H3x2_=6' ;
305828    +
305829    +      label H4x1_1 = 'Hidden: H4x1_=1' ;
MPRINT(EM_DIAGRAM):   label H4x1_1 = 'Hidden: H4x1_=1' ;
305830    +
305831    +      label H4x1_2 = 'Hidden: H4x1_=2' ;
MPRINT(EM_DIAGRAM):   label H4x1_2 = 'Hidden: H4x1_=2' ;
305832    +
305833    +      label H4x1_3 = 'Hidden: H4x1_=3' ;
MPRINT(EM_DIAGRAM):   label H4x1_3 = 'Hidden: H4x1_=3' ;
305834    +
305835    +      label H4x1_4 = 'Hidden: H4x1_=4' ;
MPRINT(EM_DIAGRAM):   label H4x1_4 = 'Hidden: H4x1_=4' ;
305836    +
305837    +      label H4x1_5 = 'Hidden: H4x1_=5' ;
MPRINT(EM_DIAGRAM):   label H4x1_5 = 'Hidden: H4x1_=5' ;
305838    +
305839    +      label H4x1_6 = 'Hidden: H4x1_=6' ;
MPRINT(EM_DIAGRAM):   label H4x1_6 = 'Hidden: H4x1_=6' ;
305840    +
305841    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
305842    +
305843    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
305844    +
305845    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
305846    +
305847    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
305848    +
305849    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
305850    +
305851    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
305852    +
305853    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
305854    +
305855    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
305856    +
305857    +*** Generate dummy variables for G_Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for G_Marital_Status ;
305858    +drop G_Marital_Status0 G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   drop G_Marital_Status0 G_Marital_Status1 ;
305859    +if missing( G_Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( G_Marital_Status ) then do;
305860    +   G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
305861    +   G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
305862    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
305863    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
305864    +end;
MPRINT(EM_DIAGRAM):   end;
305865    +else do;
MPRINT(EM_DIAGRAM):   else do;
305866    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
305867    +   _dm12 = put( G_Marital_Status , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( G_Marital_Status , BEST12. );
305868    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
305869    +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
305870    +      G_Marital_Status0 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = -1;
305871    +      G_Marital_Status1 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = -1;
305872    +   end;
MPRINT(EM_DIAGRAM):   end;
305873    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
305874    +      G_Marital_Status0 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 1;
305875    +      G_Marital_Status1 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 0;
305876    +   end;
MPRINT(EM_DIAGRAM):   end;
305877    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
305878    +      G_Marital_Status0 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 0;
305879    +      G_Marital_Status1 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 1;
305880    +   end;
MPRINT(EM_DIAGRAM):   end;
305881    +   else do;
MPRINT(EM_DIAGRAM):   else do;
305882    +      G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
305883    +      G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
305884    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
305885    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
305886    +   end;
MPRINT(EM_DIAGRAM):   end;
305887    +end;
MPRINT(EM_DIAGRAM):   end;
305888    +
305889    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
305890    +*** Checking missing input Interval
305891    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
305892    +
305893    +IF NMISS(
305894    +   AcceptedCmpTotal ,
305895    +   Frq ,
305896    +   Income ,
305897    +   Mnt ,
305898    +   MntGoldProds ,
305899    +   MntMeatProducts ,
305900    +   MntWines ,
305901    +   NumDistPurchases ,
305902    +   RFMstat ,
305903    +   RMntFrq ,
305904    +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntGoldProds , 
MntMeatProducts , MntWines , NumDistPurchases , RFMstat , RMntFrq , Recency ) THEN DO;
305905    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
305906    +
305907    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
305908    +END;
MPRINT(EM_DIAGRAM):   END;
305909    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
305910    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
305911    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
305912    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
305913    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
305914    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
305915    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
305916    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
305917    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
305918    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
305919    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
305920    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
305921    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
305922    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
305923    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
305924    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
305925    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
305926    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
305927    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
305928    +END;
MPRINT(EM_DIAGRAM):   END;
305929    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
305930    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
305931    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
305932    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
305933    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
305934    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
305935    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
305936    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
305937    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
305938    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
305939    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
305940    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
305941    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
305942    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
305943    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
305944    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
305945    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
305946    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
305947    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
305948    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
305949    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
305950    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
305951    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
305952    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
305953    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
305954    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
305955    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
305956    +END;
MPRINT(EM_DIAGRAM):   END;
305957    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
305958    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
305959    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
305960    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
305961    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
305962    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
305963    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
305964    +   H1x1_1  =     3.15417213555791 * S_AcceptedCmpTotal
305965    +          +    -2.48200966202064 * S_Frq  +     1.79801309624052 * S_Income
305966    +          +    -1.96453924225923 * S_Mnt  +    -0.73447750078211 *
305967    +        S_MntGoldProds  +    -1.52540613833145 * S_MntMeatProducts
305968    +          +    -2.34651136428537 * S_MntWines  +     1.78713249203795 *
305969    +        S_NumDistPurchases  +    -1.89877446252459 * S_RFMstat
305970    +          +     0.40523847190984 * S_RMntFrq  +    -5.00157954960261 *
305971    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 3.15417213555791 * S_AcceptedCmpTotal + -2.48200966202064 * 
S_Frq + 1.79801309624052 * S_Income + -1.96453924225923 * S_Mnt + -0.73447750078211 * 
S_MntGoldProds + -1.52540613833145 * S_MntMeatProducts + -2.34651136428537 * S_MntWines + 
1.78713249203795 * S_NumDistPurchases + -1.89877446252459 * S_RFMstat + 0.40523847190984 * 
S_RMntFrq + -5.00157954960261 * S_Recency ;
305972    +   H1x1_2  =     -0.4296332791258 * S_AcceptedCmpTotal
305973    +          +     1.69454720747031 * S_Frq  +     0.65291994437462 * S_Income
305974    +          +     4.94289741649285 * S_Mnt  +    -0.74724168333375 *
305975    +        S_MntGoldProds  +    -4.37885511745275 * S_MntMeatProducts
305976    +          +    -0.79918604028406 * S_MntWines  +    -2.55554908870931 *
305977    +        S_NumDistPurchases  +      -0.357509020401 * S_RFMstat
305978    +          +     2.81206015252461 * S_RMntFrq  +       0.376849190211 *
305979    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.4296332791258 * S_AcceptedCmpTotal + 1.69454720747031 * 
S_Frq + 0.65291994437462 * S_Income + 4.94289741649285 * S_Mnt + -0.74724168333375 * 
S_MntGoldProds + -4.37885511745275 * S_MntMeatProducts + -0.79918604028406 * S_MntWines + 
-2.55554908870931 * S_NumDistPurchases + -0.357509020401 * S_RFMstat + 2.81206015252461 * 
S_RMntFrq + 0.376849190211 * S_Recency ;
305980    +   H1x1_3  =     0.22275326994217 * S_AcceptedCmpTotal
305981    +          +     1.30327962429821 * S_Frq  +     8.11675617892245 * S_Income
305982    +          +     1.26763916951276 * S_Mnt  +     -0.2686825897259 *
305983    +        S_MntGoldProds  +    -1.42114074651211 * S_MntMeatProducts
305984    +          +    -1.76821642666458 * S_MntWines  +    -1.91323522505912 *
305985    +        S_NumDistPurchases  +    -0.12369288380556 * S_RFMstat
305986    +          +     -0.5961110037328 * S_RMntFrq  +     1.45489277444882 *
305987    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.22275326994217 * S_AcceptedCmpTotal + 1.30327962429821 * 
S_Frq + 8.11675617892245 * S_Income + 1.26763916951276 * S_Mnt + -0.2686825897259 * 
S_MntGoldProds + -1.42114074651211 * S_MntMeatProducts + -1.76821642666458 * S_MntWines + 
-1.91323522505912 * S_NumDistPurchases + -0.12369288380556 * S_RFMstat + -0.5961110037328 * 
S_RMntFrq + 1.45489277444882 * S_Recency ;
305988    +   H1x1_4  =     0.65694888778783 * S_AcceptedCmpTotal
305989    +          +    -2.46645772884275 * S_Frq  +     2.56090496460471 * S_Income
305990    +          +     1.47469720902355 * S_Mnt  +    -0.23044042020952 *
305991    +        S_MntGoldProds  +     1.09436190473143 * S_MntMeatProducts
305992    +          +    -0.07872477007968 * S_MntWines  +     2.35913880285028 *
305993    +        S_NumDistPurchases  +     0.36553596420262 * S_RFMstat
305994    +          +    -1.52014700293876 * S_RMntFrq  +    -1.62001903467763 *
305995    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.65694888778783 * S_AcceptedCmpTotal + -2.46645772884275 * 
S_Frq + 2.56090496460471 * S_Income + 1.47469720902355 * S_Mnt + -0.23044042020952 * 
S_MntGoldProds + 1.09436190473143 * S_MntMeatProducts + -0.07872477007968 * S_MntWines + 
2.35913880285028 * S_NumDistPurchases + 0.36553596420262 * S_RFMstat + -1.52014700293876 * 
S_RMntFrq + -1.62001903467763 * S_Recency ;
305996    +   H1x1_5  =    -0.06045586654134 * S_AcceptedCmpTotal
305997    +          +    -1.51896554067022 * S_Frq  +    -0.77690899609172 * S_Income
305998    +          +    -3.83443076797312 * S_Mnt  +    -0.49066287190692 *
305999    +        S_MntGoldProds  +     7.74304126889741 * S_MntMeatProducts
306000    +          +     0.97717560040665 * S_MntWines  +     2.55833904797689 *
306001    +        S_NumDistPurchases  +     3.33552253786577 * S_RFMstat
306002    +          +     2.15128325510301 * S_RMntFrq  +     0.51475149451235 *
306003    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.06045586654134 * S_AcceptedCmpTotal + -1.51896554067022 * 
S_Frq + -0.77690899609172 * S_Income + -3.83443076797312 * S_Mnt + -0.49066287190692 * 
S_MntGoldProds + 7.74304126889741 * S_MntMeatProducts + 0.97717560040665 * S_MntWines + 
2.55833904797689 * S_NumDistPurchases + 3.33552253786577 * S_RFMstat + 2.15128325510301 * 
S_RMntFrq + 0.51475149451235 * S_Recency ;
306004    +   H1x1_6  =    -2.00102225492393 * S_AcceptedCmpTotal
306005    +          +    -0.55313430858805 * S_Frq  +    -2.80039880440251 * S_Income
306006    +          +    -0.52613628819852 * S_Mnt  +    -1.25580169134654 *
306007    +        S_MntGoldProds  +    -1.44511464402737 * S_MntMeatProducts
306008    +          +    -0.66744558284147 * S_MntWines  +     3.15612301024597 *
306009    +        S_NumDistPurchases  +    -0.57805918326136 * S_RFMstat
306010    +          +     0.13349014037678 * S_RMntFrq  +    -1.97053621157132 *
306011    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -2.00102225492393 * S_AcceptedCmpTotal + -0.55313430858805 * 
S_Frq + -2.80039880440251 * S_Income + -0.52613628819852 * S_Mnt + -1.25580169134654 * 
S_MntGoldProds + -1.44511464402737 * S_MntMeatProducts + -0.66744558284147 * S_MntWines + 
3.15612301024597 * S_NumDistPurchases + -0.57805918326136 * S_RFMstat + 0.13349014037678 * 
S_RMntFrq + -1.97053621157132 * S_Recency ;
306012    +   H1x1_1  = H1x1_1  +     1.38825657874217 * G_Marital_Status0
306013    +          +     0.90195662603521 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 1.38825657874217 * G_Marital_Status0 + 
0.90195662603521 * G_Marital_Status1 ;
306014    +   H1x1_2  = H1x1_2  +     0.88138395159348 * G_Marital_Status0
306015    +          +    -0.49019446056296 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.88138395159348 * G_Marital_Status0 + 
-0.49019446056296 * G_Marital_Status1 ;
306016    +   H1x1_3  = H1x1_3  +     0.30990330359421 * G_Marital_Status0
306017    +          +     1.10544938214372 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.30990330359421 * G_Marital_Status0 + 
1.10544938214372 * G_Marital_Status1 ;
306018    +   H1x1_4  = H1x1_4  +     1.70251598227875 * G_Marital_Status0
306019    +          +     0.87683669160259 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 1.70251598227875 * G_Marital_Status0 + 
0.87683669160259 * G_Marital_Status1 ;
306020    +   H1x1_5  = H1x1_5  +    -0.14678805736317 * G_Marital_Status0
306021    +          +    -0.13246180955576 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.14678805736317 * G_Marital_Status0 + 
-0.13246180955576 * G_Marital_Status1 ;
306022    +   H1x1_6  = H1x1_6  +     -0.6511155024316 * G_Marital_Status0
306023    +          +     0.24707257141342 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + -0.6511155024316 * G_Marital_Status0 + 
0.24707257141342 * G_Marital_Status1 ;
306024    +   H1x1_1  =     4.82277728923766 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 4.82277728923766 + H1x1_1 ;
306025    +   H1x1_2  =     2.49777705822347 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 2.49777705822347 + H1x1_2 ;
306026    +   H1x1_3  =    -0.93289135595041 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.93289135595041 + H1x1_3 ;
306027    +   H1x1_4  =    -7.80421802944398 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -7.80421802944398 + H1x1_4 ;
306028    +   H1x1_5  =     6.46115064589724 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 6.46115064589724 + H1x1_5 ;
306029    +   H1x1_6  =     3.21096596966888 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 3.21096596966888 + H1x1_6 ;
306030    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
306031    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
306032    +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
306033    +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
306034    +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
306035    +   H1x1_4  = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
306036    +   H1x1_5  = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_5 = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
306037    +   H1x1_6  = 1.0 / (1.0 + EXP(MIN( - H1x1_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_6 = 1.0 / (1.0 + EXP(MIN( - H1x1_6 , _EXP_BAR)));
306038    +END;
MPRINT(EM_DIAGRAM):   END;
306039    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
306040    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
306041    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
306042    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
306043    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
306044    +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
306045    +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
306046    +END;
MPRINT(EM_DIAGRAM):   END;
306047    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
306048    +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
306049    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
306050    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
306051    +   H1x2_1  =    -0.30711239275958 * S_AcceptedCmpTotal
306052    +          +    -1.45395291114633 * S_Frq  +     0.87594950917085 * S_Income
306053    +          +    -0.72639274085105 * S_Mnt  +    -2.47797355837112 *
306054    +        S_MntGoldProds  +     0.68384082088335 * S_MntMeatProducts
306055    +          +     0.65600644755641 * S_MntWines  +      0.8163360453447 *
306056    +        S_NumDistPurchases  +    -1.09587924440912 * S_RFMstat
306057    +          +     1.48347762248449 * S_RMntFrq  +      0.2335216261547 *
306058    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.30711239275958 * S_AcceptedCmpTotal + -1.45395291114633 * 
S_Frq + 0.87594950917085 * S_Income + -0.72639274085105 * S_Mnt + -2.47797355837112 * 
S_MntGoldProds + 0.68384082088335 * S_MntMeatProducts + 0.65600644755641 * S_MntWines + 
0.8163360453447 * S_NumDistPurchases + -1.09587924440912 * S_RFMstat + 1.48347762248449 * 
S_RMntFrq + 0.2335216261547 * S_Recency ;
306059    +   H1x2_2  =     2.57777770372275 * S_AcceptedCmpTotal
306060    +          +    -0.08699050003337 * S_Frq  +      0.9048262025585 * S_Income
306061    +          +     0.80716409242733 * S_Mnt  +     0.92862088643502 *
306062    +        S_MntGoldProds  +     1.28722996014956 * S_MntMeatProducts
306063    +          +    -0.78107065942411 * S_MntWines  +     2.29787925805392 *
306064    +        S_NumDistPurchases  +     -0.7095984076797 * S_RFMstat
306065    +          +    -0.75276407747323 * S_RMntFrq  +    -2.14859674388241 *
306066    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 2.57777770372275 * S_AcceptedCmpTotal + -0.08699050003337 * 
S_Frq + 0.9048262025585 * S_Income + 0.80716409242733 * S_Mnt + 0.92862088643502 * 
S_MntGoldProds + 1.28722996014956 * S_MntMeatProducts + -0.78107065942411 * S_MntWines + 
2.29787925805392 * S_NumDistPurchases + -0.7095984076797 * S_RFMstat + -0.75276407747323 * 
S_RMntFrq + -2.14859674388241 * S_Recency ;
306067    +   H1x2_3  =    -0.19225474668372 * S_AcceptedCmpTotal
306068    +          +     -0.5399776824486 * S_Frq  +    -0.33342356858106 * S_Income
306069    +          +      0.4662552460972 * S_Mnt  +    -0.83897697999245 *
306070    +        S_MntGoldProds  +    -1.02069791829975 * S_MntMeatProducts
306071    +          +    -0.77568646594215 * S_MntWines  +    -2.64172584610703 *
306072    +        S_NumDistPurchases  +     1.22587043380457 * S_RFMstat
306073    +          +    -1.22124295004478 * S_RMntFrq  +     0.72727673065668 *
306074    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.19225474668372 * S_AcceptedCmpTotal + -0.5399776824486 * 
S_Frq + -0.33342356858106 * S_Income + 0.4662552460972 * S_Mnt + -0.83897697999245 * 
S_MntGoldProds + -1.02069791829975 * S_MntMeatProducts + -0.77568646594215 * S_MntWines + 
-2.64172584610703 * S_NumDistPurchases + 1.22587043380457 * S_RFMstat + -1.22124295004478 * 
S_RMntFrq + 0.72727673065668 * S_Recency ;
306075    +   H1x2_4  =     1.07963833884217 * S_AcceptedCmpTotal
306076    +          +    -1.30033554705908 * S_Frq  +     0.80740030463615 * S_Income
306077    +          +    -1.73808129607223 * S_Mnt  +     1.21346647777818 *
306078    +        S_MntGoldProds  +     0.69007605858806 * S_MntMeatProducts
306079    +          +     0.31548401471349 * S_MntWines  +    -0.45355998387313 *
306080    +        S_NumDistPurchases  +     1.13504256910361 * S_RFMstat
306081    +          +    -0.45561637629388 * S_RMntFrq  +    -1.42094697023704 *
306082    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 1.07963833884217 * S_AcceptedCmpTotal + -1.30033554705908 * 
S_Frq + 0.80740030463615 * S_Income + -1.73808129607223 * S_Mnt + 1.21346647777818 * 
S_MntGoldProds + 0.69007605858806 * S_MntMeatProducts + 0.31548401471349 * S_MntWines + 
-0.45355998387313 * S_NumDistPurchases + 1.13504256910361 * S_RFMstat + -0.45561637629388 * 
S_RMntFrq + -1.42094697023704 * S_Recency ;
306083    +   H1x2_5  =     0.30163018627699 * S_AcceptedCmpTotal
306084    +          +    -0.73947459722676 * S_Frq  +      0.3117229426353 * S_Income
306085    +          +     1.78189396082002 * S_Mnt  +    -1.51478593904163 *
306086    +        S_MntGoldProds  +    -1.30328540691967 * S_MntMeatProducts
306087    +          +     0.48947220852953 * S_MntWines  +     0.25380878841531 *
306088    +        S_NumDistPurchases  +    -0.09429027402746 * S_RFMstat
306089    +          +     2.79720421337828 * S_RMntFrq  +    -0.08024855242737 *
306090    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 0.30163018627699 * S_AcceptedCmpTotal + -0.73947459722676 * 
S_Frq + 0.3117229426353 * S_Income + 1.78189396082002 * S_Mnt + -1.51478593904163 * 
S_MntGoldProds + -1.30328540691967 * S_MntMeatProducts + 0.48947220852953 * S_MntWines + 
0.25380878841531 * S_NumDistPurchases + -0.09429027402746 * S_RFMstat + 2.79720421337828 * 
S_RMntFrq + -0.08024855242737 * S_Recency ;
306091    +   H1x2_6  =    -0.05006047355159 * S_AcceptedCmpTotal
306092    +          +     0.01838632143297 * S_Frq  +    -1.04892137940395 * S_Income
306093    +          +    -0.33949418476309 * S_Mnt  +     1.27820886482898 *
306094    +        S_MntGoldProds  +      0.1541042926193 * S_MntMeatProducts
306095    +          +    -0.30996391960135 * S_MntWines  +     0.69532310497927 *
306096    +        S_NumDistPurchases  +    -0.51247610421467 * S_RFMstat
306097    +          +    -0.87640728095011 * S_RMntFrq  +     1.79661996586627 *
306098    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_6 = -0.05006047355159 * S_AcceptedCmpTotal + 0.01838632143297 * 
S_Frq + -1.04892137940395 * S_Income + -0.33949418476309 * S_Mnt + 1.27820886482898 * 
S_MntGoldProds + 0.1541042926193 * S_MntMeatProducts + -0.30996391960135 * S_MntWines + 
0.69532310497927 * S_NumDistPurchases + -0.51247610421467 * S_RFMstat + -0.87640728095011 * 
S_RMntFrq + 1.79661996586627 * S_Recency ;
306099    +   H1x2_1  = H1x2_1  +    -1.52372947412233 * G_Marital_Status0
306100    +          +     0.61190614442174 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -1.52372947412233 * G_Marital_Status0 + 
0.61190614442174 * G_Marital_Status1 ;
306101    +   H1x2_2  = H1x2_2  +     -0.2899112326334 * G_Marital_Status0
306102    +          +    -0.43943770039245 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.2899112326334 * G_Marital_Status0 + 
-0.43943770039245 * G_Marital_Status1 ;
306103    +   H1x2_3  = H1x2_3  +    -1.30447843367338 * G_Marital_Status0
306104    +          +     0.36969296112687 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -1.30447843367338 * G_Marital_Status0 + 
0.36969296112687 * G_Marital_Status1 ;
306105    +   H1x2_4  = H1x2_4  +     1.06192432928756 * G_Marital_Status0
306106    +          +    -0.48897798100871 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 1.06192432928756 * G_Marital_Status0 + 
-0.48897798100871 * G_Marital_Status1 ;
306107    +   H1x2_5  = H1x2_5  +     1.24023950705702 * G_Marital_Status0
306108    +          +     -0.0768652239427 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 1.24023950705702 * G_Marital_Status0 + 
-0.0768652239427 * G_Marital_Status1 ;
306109    +   H1x2_6  = H1x2_6  +    -0.79854804689099 * G_Marital_Status0
306110    +          +    -0.58590001312977 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + -0.79854804689099 * G_Marital_Status0 + 
-0.58590001312977 * G_Marital_Status1 ;
306111    +   H1x2_1  =    -1.24057312487712 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -1.24057312487712 + H1x2_1 ;
306112    +   H1x2_2  =    -0.68291139361923 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.68291139361923 + H1x2_2 ;
306113    +   H1x2_3  =     1.06420344729961 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = 1.06420344729961 + H1x2_3 ;
306114    +   H1x2_4  =    -2.69713708678823 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -2.69713708678823 + H1x2_4 ;
306115    +   H1x2_5  =    -0.12447063994137 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.12447063994137 + H1x2_5 ;
306116    +   H1x2_6  =     -1.0719988986801 + H1x2_6 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = -1.0719988986801 + H1x2_6 ;
306117    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
306118    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
306119    +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
306120    +   H1x2_2  = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_2 = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
306121    +   H1x2_3  = 1.0 / (1.0 + EXP(MIN( - H1x2_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_3 = 1.0 / (1.0 + EXP(MIN( - H1x2_3 , _EXP_BAR)));
306122    +   H1x2_4  = 1.0 / (1.0 + EXP(MIN( - H1x2_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_4 = 1.0 / (1.0 + EXP(MIN( - H1x2_4 , _EXP_BAR)));
306123    +   H1x2_5  = 1.0 / (1.0 + EXP(MIN( - H1x2_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.0 / (1.0 + EXP(MIN( - H1x2_5 , _EXP_BAR)));
306124    +   H1x2_6  = 1.0 / (1.0 + EXP(MIN( - H1x2_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_6 = 1.0 / (1.0 + EXP(MIN( - H1x2_6 , _EXP_BAR)));
306125    +END;
MPRINT(EM_DIAGRAM):   END;
306126    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
306127    +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
306128    +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
306129    +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
306130    +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
306131    +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
306132    +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
306133    +END;
MPRINT(EM_DIAGRAM):   END;
306134    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
306135    +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
306136    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
306137    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
306138    +   H1x3_1  =     0.58141896766328 * S_AcceptedCmpTotal
306139    +          +     0.88835106317195 * S_Frq  +     1.03397412242189 * S_Income
306140    +          +    -0.19511498332885 * S_Mnt  +     0.79222351582255 *
306141    +        S_MntGoldProds  +     1.84666352042484 * S_MntMeatProducts
306142    +          +     0.26439819900146 * S_MntWines  +    -0.49316136014272 *
306143    +        S_NumDistPurchases  +    -1.53931690693652 * S_RFMstat
306144    +          +     0.66163259224518 * S_RMntFrq  +    -0.05038100966606 *
306145    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.58141896766328 * S_AcceptedCmpTotal + 0.88835106317195 * 
S_Frq + 1.03397412242189 * S_Income + -0.19511498332885 * S_Mnt + 0.79222351582255 * 
S_MntGoldProds + 1.84666352042484 * S_MntMeatProducts + 0.26439819900146 * S_MntWines + 
-0.49316136014272 * S_NumDistPurchases + -1.53931690693652 * S_RFMstat + 0.66163259224518 * 
S_RMntFrq + -0.05038100966606 * S_Recency ;
306146    +   H1x3_2  =    -0.66965742898236 * S_AcceptedCmpTotal
306147    +          +     0.11439761295336 * S_Frq  +      0.4311111590428 * S_Income
306148    +          +     0.56419594384106 * S_Mnt  +    -2.58586026844722 *
306149    +        S_MntGoldProds  +     0.84843617907069 * S_MntMeatProducts
306150    +          +    -0.40949465894409 * S_MntWines  +    -1.12254199224924 *
306151    +        S_NumDistPurchases  +    -1.73672932018459 * S_RFMstat
306152    +          +     0.60800652848154 * S_RMntFrq  +     0.90023461529092 *
306153    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_2 = -0.66965742898236 * S_AcceptedCmpTotal + 0.11439761295336 * 
S_Frq + 0.4311111590428 * S_Income + 0.56419594384106 * S_Mnt + -2.58586026844722 * 
S_MntGoldProds + 0.84843617907069 * S_MntMeatProducts + -0.40949465894409 * S_MntWines + 
-1.12254199224924 * S_NumDistPurchases + -1.73672932018459 * S_RFMstat + 0.60800652848154 * 
S_RMntFrq + 0.90023461529092 * S_Recency ;
306154    +   H1x3_3  =     0.64116254904887 * S_AcceptedCmpTotal
306155    +          +     0.36521168161033 * S_Frq  +    -1.65592742965949 * S_Income
306156    +          +    -1.13010637801203 * S_Mnt  +     1.18435160743823 *
306157    +        S_MntGoldProds  +     0.61014939723339 * S_MntMeatProducts
306158    +          +     0.57967362971329 * S_MntWines  +    -0.00705774722842 *
306159    +        S_NumDistPurchases  +    -0.09732595050305 * S_RFMstat
306160    +          +    -1.58268748567816 * S_RMntFrq  +    -1.00117301133743 *
306161    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_3 = 0.64116254904887 * S_AcceptedCmpTotal + 0.36521168161033 * 
S_Frq + -1.65592742965949 * S_Income + -1.13010637801203 * S_Mnt + 1.18435160743823 * 
S_MntGoldProds + 0.61014939723339 * S_MntMeatProducts + 0.57967362971329 * S_MntWines + 
-0.00705774722842 * S_NumDistPurchases + -0.09732595050305 * S_RFMstat + -1.58268748567816 * 
S_RMntFrq + -1.00117301133743 * S_Recency ;
306162    +   H1x3_4  =    -2.38943135123073 * S_AcceptedCmpTotal
306163    +          +     0.50616478854457 * S_Frq  +     1.68985840818789 * S_Income
306164    +          +    -0.51011802824515 * S_Mnt  +     1.25167622017055 *
306165    +        S_MntGoldProds  +    -0.78430871718616 * S_MntMeatProducts
306166    +          +     0.97685472578698 * S_MntWines  +    -0.66992601103029 *
306167    +        S_NumDistPurchases  +    -0.28545877583545 * S_RFMstat
306168    +          +     0.52712575990538 * S_RMntFrq  +     1.51096273676103 *
306169    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_4 = -2.38943135123073 * S_AcceptedCmpTotal + 0.50616478854457 * 
S_Frq + 1.68985840818789 * S_Income + -0.51011802824515 * S_Mnt + 1.25167622017055 * 
S_MntGoldProds + -0.78430871718616 * S_MntMeatProducts + 0.97685472578698 * S_MntWines + 
-0.66992601103029 * S_NumDistPurchases + -0.28545877583545 * S_RFMstat + 0.52712575990538 * 
S_RMntFrq + 1.51096273676103 * S_Recency ;
306170    +   H1x3_5  =     0.27293739636898 * S_AcceptedCmpTotal
306171    +          +     0.44515009768765 * S_Frq  +     -0.4521347788574 * S_Income
306172    +          +     0.43943223859703 * S_Mnt  +     1.17781847894182 *
306173    +        S_MntGoldProds  +    -0.67700757595581 * S_MntMeatProducts
306174    +          +    -1.46437355846341 * S_MntWines  +    -0.09365592083561 *
306175    +        S_NumDistPurchases  +     0.94926901433762 * S_RFMstat
306176    +          +     2.40216905424957 * S_RMntFrq  +     0.65859109347516 *
306177    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_5 = 0.27293739636898 * S_AcceptedCmpTotal + 0.44515009768765 * 
S_Frq + -0.4521347788574 * S_Income + 0.43943223859703 * S_Mnt + 1.17781847894182 * 
S_MntGoldProds + -0.67700757595581 * S_MntMeatProducts + -1.46437355846341 * S_MntWines + 
-0.09365592083561 * S_NumDistPurchases + 0.94926901433762 * S_RFMstat + 2.40216905424957 * 
S_RMntFrq + 0.65859109347516 * S_Recency ;
306178    +   H1x3_6  =     0.79944121174459 * S_AcceptedCmpTotal
306179    +          +     0.19594924011495 * S_Frq  +     1.07233338144708 * S_Income
306180    +          +    -0.39577530492174 * S_Mnt  +    -0.18122578134776 *
306181    +        S_MntGoldProds  +    -0.26451891721245 * S_MntMeatProducts
306182    +          +    -0.86856724355925 * S_MntWines  +    -1.81909916765471 *
306183    +        S_NumDistPurchases  +     1.03983663011092 * S_RFMstat
306184    +          +    -0.86768378180894 * S_RMntFrq  +     0.40747604583851 *
306185    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_6 = 0.79944121174459 * S_AcceptedCmpTotal + 0.19594924011495 * 
S_Frq + 1.07233338144708 * S_Income + -0.39577530492174 * S_Mnt + -0.18122578134776 * 
S_MntGoldProds + -0.26451891721245 * S_MntMeatProducts + -0.86856724355925 * S_MntWines + 
-1.81909916765471 * S_NumDistPurchases + 1.03983663011092 * S_RFMstat + -0.86768378180894 * 
S_RMntFrq + 0.40747604583851 * S_Recency ;
306186    +   H1x3_1  = H1x3_1  +    -1.44819834546359 * G_Marital_Status0
306187    +          +     2.03049158937708 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + -1.44819834546359 * G_Marital_Status0 + 
2.03049158937708 * G_Marital_Status1 ;
306188    +   H1x3_2  = H1x3_2  +     0.32142977922032 * G_Marital_Status0
306189    +          +     0.95456795317325 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + 0.32142977922032 * G_Marital_Status0 + 
0.95456795317325 * G_Marital_Status1 ;
306190    +   H1x3_3  = H1x3_3  +    -0.05546140673943 * G_Marital_Status0
306191    +          +    -0.64267205173982 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 + -0.05546140673943 * G_Marital_Status0 + 
-0.64267205173982 * G_Marital_Status1 ;
306192    +   H1x3_4  = H1x3_4  +     0.67758459902812 * G_Marital_Status0
306193    +          +    -0.13878277097624 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 + 0.67758459902812 * G_Marital_Status0 + 
-0.13878277097624 * G_Marital_Status1 ;
306194    +   H1x3_5  = H1x3_5  +      0.2080585980069 * G_Marital_Status0
306195    +          +     0.39530416624983 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 + 0.2080585980069 * G_Marital_Status0 + 0.39530416624983 
* G_Marital_Status1 ;
306196    +   H1x3_6  = H1x3_6  +    -0.56268194068278 * G_Marital_Status0
306197    +          +    -1.38939757582535 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x3_6 = H1x3_6 + -0.56268194068278 * G_Marital_Status0 + 
-1.38939757582535 * G_Marital_Status1 ;
306198    +   H1x3_1  =    -0.02110450300917 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = -0.02110450300917 + H1x3_1 ;
306199    +   H1x3_2  =     0.68400964836412 + H1x3_2 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = 0.68400964836412 + H1x3_2 ;
306200    +   H1x3_3  =     1.27295692924548 + H1x3_3 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = 1.27295692924548 + H1x3_3 ;
306201    +   H1x3_4  =     0.57759340173339 + H1x3_4 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = 0.57759340173339 + H1x3_4 ;
306202    +   H1x3_5  =     0.68658947855937 + H1x3_5 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = 0.68658947855937 + H1x3_5 ;
306203    +   H1x3_6  =     0.96960260915788 + H1x3_6 ;
MPRINT(EM_DIAGRAM):   H1x3_6 = 0.96960260915788 + H1x3_6 ;
306204    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
306205    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
306206    +   H1x3_1  = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_1 = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
306207    +   H1x3_2  = 1.0 / (1.0 + EXP(MIN( - H1x3_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_2 = 1.0 / (1.0 + EXP(MIN( - H1x3_2 , _EXP_BAR)));
306208    +   H1x3_3  = 1.0 / (1.0 + EXP(MIN( - H1x3_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_3 = 1.0 / (1.0 + EXP(MIN( - H1x3_3 , _EXP_BAR)));
306209    +   H1x3_4  = 1.0 / (1.0 + EXP(MIN( - H1x3_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_4 = 1.0 / (1.0 + EXP(MIN( - H1x3_4 , _EXP_BAR)));
306210    +   H1x3_5  = 1.0 / (1.0 + EXP(MIN( - H1x3_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_5 = 1.0 / (1.0 + EXP(MIN( - H1x3_5 , _EXP_BAR)));
306211    +   H1x3_6  = 1.0 / (1.0 + EXP(MIN( - H1x3_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_6 = 1.0 / (1.0 + EXP(MIN( - H1x3_6 , _EXP_BAR)));
306212    +END;
MPRINT(EM_DIAGRAM):   END;
306213    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
306214    +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
306215    +   H1x3_2  = .;
MPRINT(EM_DIAGRAM):   H1x3_2 = .;
306216    +   H1x3_3  = .;
MPRINT(EM_DIAGRAM):   H1x3_3 = .;
306217    +   H1x3_4  = .;
MPRINT(EM_DIAGRAM):   H1x3_4 = .;
306218    +   H1x3_5  = .;
MPRINT(EM_DIAGRAM):   H1x3_5 = .;
306219    +   H1x3_6  = .;
MPRINT(EM_DIAGRAM):   H1x3_6 = .;
306220    +END;
MPRINT(EM_DIAGRAM):   END;
306221    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
306222    +*** Writing the Node H1x4_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x4_ ;
306223    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
306224    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
306225    +   H1x4_1  =     1.13261766886471 * S_AcceptedCmpTotal
306226    +          +     0.78824304763496 * S_Frq  +    -1.86817100110189 * S_Income
306227    +          +    -1.58760227599089 * S_Mnt  +     -1.1330886213304 *
306228    +        S_MntGoldProds  +     0.82082069255126 * S_MntMeatProducts
306229    +          +    -0.34149449572975 * S_MntWines  +     0.45944109671738 *
306230    +        S_NumDistPurchases  +     2.00910621486809 * S_RFMstat
306231    +          +     -1.8305685414059 * S_RMntFrq  +     1.46038466341548 *
306232    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x4_1 = 1.13261766886471 * S_AcceptedCmpTotal + 0.78824304763496 * 
S_Frq + -1.86817100110189 * S_Income + -1.58760227599089 * S_Mnt + -1.1330886213304 * 
S_MntGoldProds + 0.82082069255126 * S_MntMeatProducts + -0.34149449572975 * S_MntWines + 
0.45944109671738 * S_NumDistPurchases + 2.00910621486809 * S_RFMstat + -1.8305685414059 * 
S_RMntFrq + 1.46038466341548 * S_Recency ;
306233    +   H1x4_2  =    -0.63266188932348 * S_AcceptedCmpTotal
306234    +          +    -0.01183486383209 * S_Frq  +    -1.07560568030024 * S_Income
306235    +          +    -1.30988288899902 * S_Mnt  +     2.15841401397408 *
306236    +        S_MntGoldProds  +    -1.27808965763357 * S_MntMeatProducts
306237    +          +     2.04886920467378 * S_MntWines  +     0.09322121012781 *
306238    +        S_NumDistPurchases  +    -0.37050311259862 * S_RFMstat
306239    +          +     0.68085578996214 * S_RMntFrq  +     1.48508197039719 *
306240    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x4_2 = -0.63266188932348 * S_AcceptedCmpTotal + -0.01183486383209 * 
S_Frq + -1.07560568030024 * S_Income + -1.30988288899902 * S_Mnt + 2.15841401397408 * 
S_MntGoldProds + -1.27808965763357 * S_MntMeatProducts + 2.04886920467378 * S_MntWines + 
0.09322121012781 * S_NumDistPurchases + -0.37050311259862 * S_RFMstat + 0.68085578996214 * 
S_RMntFrq + 1.48508197039719 * S_Recency ;
306241    +   H1x4_3  =    -0.53647455024397 * S_AcceptedCmpTotal
306242    +          +     0.24459727005497 * S_Frq  +     0.30319155437277 * S_Income
306243    +          +     0.25206471395865 * S_Mnt  +     0.43917953957135 *
306244    +        S_MntGoldProds  +    -0.10933570154764 * S_MntMeatProducts
306245    +          +    -0.04059236687792 * S_MntWines  +     0.35677739352706 *
306246    +        S_NumDistPurchases  +     1.38086899403811 * S_RFMstat
306247    +          +    -0.32751457592661 * S_RMntFrq  +    -0.15926282047245 *
306248    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x4_3 = -0.53647455024397 * S_AcceptedCmpTotal + 0.24459727005497 * 
S_Frq + 0.30319155437277 * S_Income + 0.25206471395865 * S_Mnt + 0.43917953957135 * 
S_MntGoldProds + -0.10933570154764 * S_MntMeatProducts + -0.04059236687792 * S_MntWines + 
0.35677739352706 * S_NumDistPurchases + 1.38086899403811 * S_RFMstat + -0.32751457592661 * 
S_RMntFrq + -0.15926282047245 * S_Recency ;
306249    +   H1x4_4  =     0.24225159923716 * S_AcceptedCmpTotal
306250    +          +    -0.83397540163538 * S_Frq  +     0.65454415304883 * S_Income
306251    +          +     -2.1008417113285 * S_Mnt  +     1.46444392612369 *
306252    +        S_MntGoldProds  +     1.98843066844745 * S_MntMeatProducts
306253    +          +    -0.31310064337061 * S_MntWines  +     0.56236194506314 *
306254    +        S_NumDistPurchases  +    -0.20512833160409 * S_RFMstat
306255    +          +    -0.20631901696385 * S_RMntFrq  +    -0.01945293751142 *
306256    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x4_4 = 0.24225159923716 * S_AcceptedCmpTotal + -0.83397540163538 * 
S_Frq + 0.65454415304883 * S_Income + -2.1008417113285 * S_Mnt + 1.46444392612369 * 
S_MntGoldProds + 1.98843066844745 * S_MntMeatProducts + -0.31310064337061 * S_MntWines + 
0.56236194506314 * S_NumDistPurchases + -0.20512833160409 * S_RFMstat + -0.20631901696385 * 
S_RMntFrq + -0.01945293751142 * S_Recency ;
306257    +   H1x4_5  =     -0.2800504242999 * S_AcceptedCmpTotal
306258    +          +     0.11767474732461 * S_Frq  +    -1.78109558633383 * S_Income
306259    +          +    -0.83275451396797 * S_Mnt  +     0.13772739876237 *
306260    +        S_MntGoldProds  +    -0.00084509726748 * S_MntMeatProducts
306261    +          +     0.92081955236291 * S_MntWines  +    -0.84663906140096 *
306262    +        S_NumDistPurchases  +     1.07425261538134 * S_RFMstat
306263    +          +    -0.27830850445101 * S_RMntFrq  +     0.74380794599056 *
306264    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x4_5 = -0.2800504242999 * S_AcceptedCmpTotal + 0.11767474732461 * 
S_Frq + -1.78109558633383 * S_Income + -0.83275451396797 * S_Mnt + 0.13772739876237 * 
S_MntGoldProds + -0.00084509726748 * S_MntMeatProducts + 0.92081955236291 * S_MntWines + 
-0.84663906140096 * S_NumDistPurchases + 1.07425261538134 * S_RFMstat + -0.27830850445101 * 
S_RMntFrq + 0.74380794599056 * S_Recency ;
306265    +   H1x4_6  =     -1.1119291723593 * S_AcceptedCmpTotal
306266    +          +     0.56304851350844 * S_Frq  +     0.73567113537541 * S_Income
306267    +          +    -3.12306246450604 * S_Mnt  +    -0.91316403938439 *
306268    +        S_MntGoldProds  +    -2.69628755197256 * S_MntMeatProducts
306269    +          +     0.85746867824621 * S_MntWines  +    -0.36724035406906 *
306270    +        S_NumDistPurchases  +     0.28568968295985 * S_RFMstat
306271    +          +    -0.93954323577146 * S_RMntFrq  +     0.85268992665591 *
306272    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x4_6 = -1.1119291723593 * S_AcceptedCmpTotal + 0.56304851350844 * 
S_Frq + 0.73567113537541 * S_Income + -3.12306246450604 * S_Mnt + -0.91316403938439 * 
S_MntGoldProds + -2.69628755197256 * S_MntMeatProducts + 0.85746867824621 * S_MntWines + 
-0.36724035406906 * S_NumDistPurchases + 0.28568968295985 * S_RFMstat + -0.93954323577146 * 
S_RMntFrq + 0.85268992665591 * S_Recency ;
306273    +   H1x4_1  = H1x4_1  +    -0.41637670428316 * G_Marital_Status0
306274    +          +     1.82577173192743 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x4_1 = H1x4_1 + -0.41637670428316 * G_Marital_Status0 + 
1.82577173192743 * G_Marital_Status1 ;
306275    +   H1x4_2  = H1x4_2  +     1.30084682846119 * G_Marital_Status0
306276    +          +     1.86494194086223 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x4_2 = H1x4_2 + 1.30084682846119 * G_Marital_Status0 + 
1.86494194086223 * G_Marital_Status1 ;
306277    +   H1x4_3  = H1x4_3  +    -2.51039247492524 * G_Marital_Status0
306278    +          +    -0.78535196846115 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x4_3 = H1x4_3 + -2.51039247492524 * G_Marital_Status0 + 
-0.78535196846115 * G_Marital_Status1 ;
306279    +   H1x4_4  = H1x4_4  +    -1.66536345681649 * G_Marital_Status0
306280    +          +    -1.13643623224979 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x4_4 = H1x4_4 + -1.66536345681649 * G_Marital_Status0 + 
-1.13643623224979 * G_Marital_Status1 ;
306281    +   H1x4_5  = H1x4_5  +     0.34381083459151 * G_Marital_Status0
306282    +          +    -0.50611098994468 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x4_5 = H1x4_5 + 0.34381083459151 * G_Marital_Status0 + 
-0.50611098994468 * G_Marital_Status1 ;
306283    +   H1x4_6  = H1x4_6  +    -0.50144547845039 * G_Marital_Status0
306284    +          +     1.05855030017376 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x4_6 = H1x4_6 + -0.50144547845039 * G_Marital_Status0 + 
1.05855030017376 * G_Marital_Status1 ;
306285    +   H1x4_1  =     0.23907181959326 + H1x4_1 ;
MPRINT(EM_DIAGRAM):   H1x4_1 = 0.23907181959326 + H1x4_1 ;
306286    +   H1x4_2  =    -1.57201194785995 + H1x4_2 ;
MPRINT(EM_DIAGRAM):   H1x4_2 = -1.57201194785995 + H1x4_2 ;
306287    +   H1x4_3  =     2.06322674265618 + H1x4_3 ;
MPRINT(EM_DIAGRAM):   H1x4_3 = 2.06322674265618 + H1x4_3 ;
306288    +   H1x4_4  =     1.01469021578807 + H1x4_4 ;
MPRINT(EM_DIAGRAM):   H1x4_4 = 1.01469021578807 + H1x4_4 ;
306289    +   H1x4_5  =     1.07767489348013 + H1x4_5 ;
MPRINT(EM_DIAGRAM):   H1x4_5 = 1.07767489348013 + H1x4_5 ;
306290    +   H1x4_6  =     0.04477742816865 + H1x4_6 ;
MPRINT(EM_DIAGRAM):   H1x4_6 = 0.04477742816865 + H1x4_6 ;
306291    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
306292    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
306293    +   H1x4_1  = 1.0 / (1.0 + EXP(MIN( - H1x4_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x4_1 = 1.0 / (1.0 + EXP(MIN( - H1x4_1 , _EXP_BAR)));
306294    +   H1x4_2  = 1.0 / (1.0 + EXP(MIN( - H1x4_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x4_2 = 1.0 / (1.0 + EXP(MIN( - H1x4_2 , _EXP_BAR)));
306295    +   H1x4_3  = 1.0 / (1.0 + EXP(MIN( - H1x4_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x4_3 = 1.0 / (1.0 + EXP(MIN( - H1x4_3 , _EXP_BAR)));
306296    +   H1x4_4  = 1.0 / (1.0 + EXP(MIN( - H1x4_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x4_4 = 1.0 / (1.0 + EXP(MIN( - H1x4_4 , _EXP_BAR)));
306297    +   H1x4_5  = 1.0 / (1.0 + EXP(MIN( - H1x4_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x4_5 = 1.0 / (1.0 + EXP(MIN( - H1x4_5 , _EXP_BAR)));
306298    +   H1x4_6  = 1.0 / (1.0 + EXP(MIN( - H1x4_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x4_6 = 1.0 / (1.0 + EXP(MIN( - H1x4_6 , _EXP_BAR)));
306299    +END;
MPRINT(EM_DIAGRAM):   END;
306300    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
306301    +   H1x4_1  = .;
MPRINT(EM_DIAGRAM):   H1x4_1 = .;
306302    +   H1x4_2  = .;
MPRINT(EM_DIAGRAM):   H1x4_2 = .;
306303    +   H1x4_3  = .;
MPRINT(EM_DIAGRAM):   H1x4_3 = .;
306304    +   H1x4_4  = .;
MPRINT(EM_DIAGRAM):   H1x4_4 = .;
306305    +   H1x4_5  = .;
MPRINT(EM_DIAGRAM):   H1x4_5 = .;
306306    +   H1x4_6  = .;
MPRINT(EM_DIAGRAM):   H1x4_6 = .;
306307    +END;
MPRINT(EM_DIAGRAM):   END;
306308    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
306309    +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
306310    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
306311    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
306312    +   H2x1_1  =     1.57657363240028 * H1x1_1  +    -0.37699618626432 * H1x1_2
306313    +          +    -0.60919993629457 * H1x1_3  +     2.97257779188857 * H1x1_4
306314    +          +     4.47740938165819 * H1x1_5  +    -0.85059681057218 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.57657363240028 * H1x1_1 + -0.37699618626432 * H1x1_2 + 
-0.60919993629457 * H1x1_3 + 2.97257779188857 * H1x1_4 + 4.47740938165819 * H1x1_5 + 
-0.85059681057218 * H1x1_6 ;
306315    +   H2x1_2  =     0.58245150995434 * H1x1_1  +     1.31825599717827 * H1x1_2
306316    +          +    -0.46604129874265 * H1x1_3  +    -1.57880778011961 * H1x1_4
306317    +          +      0.1296024356855 * H1x1_5  +    -0.32310175742174 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 0.58245150995434 * H1x1_1 + 1.31825599717827 * H1x1_2 + 
-0.46604129874265 * H1x1_3 + -1.57880778011961 * H1x1_4 + 0.1296024356855 * H1x1_5 + 
-0.32310175742174 * H1x1_6 ;
306318    +   H2x1_3  =     0.08762368266386 * H1x1_1  +     -2.1587359786783 * H1x1_2
306319    +          +     0.53603825884818 * H1x1_3  +    -0.24087329015868 * H1x1_4
306320    +          +     0.03296173080719 * H1x1_5  +     0.01697480121243 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 0.08762368266386 * H1x1_1 + -2.1587359786783 * H1x1_2 + 
0.53603825884818 * H1x1_3 + -0.24087329015868 * H1x1_4 + 0.03296173080719 * H1x1_5 + 
0.01697480121243 * H1x1_6 ;
306321    +   H2x1_4  =    -0.11182680657167 * H1x1_1  +     0.78238566788271 * H1x1_2
306322    +          +    -0.32984662645651 * H1x1_3  +    -0.48952564803009 * H1x1_4
306323    +          +    -1.99607614008712 * H1x1_5  +     0.10016209874446 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -0.11182680657167 * H1x1_1 + 0.78238566788271 * H1x1_2 + 
-0.32984662645651 * H1x1_3 + -0.48952564803009 * H1x1_4 + -1.99607614008712 * H1x1_5 + 
0.10016209874446 * H1x1_6 ;
306324    +   H2x1_5  =     -1.2498866108229 * H1x1_1  +      3.2369796406078 * H1x1_2
306325    +          +      2.8181066223344 * H1x1_3  +    -3.11752751718664 * H1x1_4
306326    +          +    -0.69294382105442 * H1x1_5  +     1.50580112761945 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -1.2498866108229 * H1x1_1 + 3.2369796406078 * H1x1_2 + 
2.8181066223344 * H1x1_3 + -3.11752751718664 * H1x1_4 + -0.69294382105442 * H1x1_5 + 
1.50580112761945 * H1x1_6 ;
306327    +   H2x1_1  = H2x1_1  +     1.23510627062479 * H1x2_1
306328    +          +     0.24021661687189 * H1x2_2  +    -1.56696654026909 * H1x2_3
306329    +          +     1.87814576627429 * H1x2_4  +     0.77581978719058 * H1x2_5
306330    +          +    -0.36964326956968 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 1.23510627062479 * H1x2_1 + 0.24021661687189 * H1x2_2 
+ -1.56696654026909 * H1x2_3 + 1.87814576627429 * H1x2_4 + 0.77581978719058 * H1x2_5 + 
-0.36964326956968 * H1x2_6 ;
306331    +   H2x1_2  = H2x1_2  +     0.92347023180909 * H1x2_1
306332    +          +    -0.58884204034707 * H1x2_2  +     0.32527960762166 * H1x2_3
306333    +          +    -2.67192710315835 * H1x2_4  +     1.11142627890507 * H1x2_5
306334    +          +     -0.0675747785188 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.92347023180909 * H1x2_1 + -0.58884204034707 * H1x2_2 
+ 0.32527960762166 * H1x2_3 + -2.67192710315835 * H1x2_4 + 1.11142627890507 * H1x2_5 + 
-0.0675747785188 * H1x2_6 ;
306335    +   H2x1_3  = H2x1_3  +    -0.92500735470206 * H1x2_1
306336    +          +     0.02449601034461 * H1x2_2  +    -0.75716713196308 * H1x2_3
306337    +          +     0.16672538074212 * H1x2_4  +    -1.03440004099384 * H1x2_5
306338    +          +     0.20622228187831 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -0.92500735470206 * H1x2_1 + 0.02449601034461 * H1x2_2 
+ -0.75716713196308 * H1x2_3 + 0.16672538074212 * H1x2_4 + -1.03440004099384 * H1x2_5 + 
0.20622228187831 * H1x2_6 ;
306339    +   H2x1_4  = H2x1_4  +     1.25485096748114 * H1x2_1
306340    +          +     -0.2345670529973 * H1x2_2  +     1.00007865183196 * H1x2_3
306341    +          +    -0.19520365006597 * H1x2_4  +     0.15141232788955 * H1x2_5
306342    +          +     0.99704195296742 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 1.25485096748114 * H1x2_1 + -0.2345670529973 * H1x2_2 
+ 1.00007865183196 * H1x2_3 + -0.19520365006597 * H1x2_4 + 0.15141232788955 * H1x2_5 + 
0.99704195296742 * H1x2_6 ;
306343    +   H2x1_5  = H2x1_5  +    -0.65666404502833 * H1x2_1
306344    +          +     2.28944563427288 * H1x2_2  +    -0.53344610521696 * H1x2_3
306345    +          +      -0.793597979143 * H1x2_4  +     -0.5657184003534 * H1x2_5
306346    +          +     0.52117926766363 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + -0.65666404502833 * H1x2_1 + 2.28944563427288 * H1x2_2 
+ -0.53344610521696 * H1x2_3 + -0.793597979143 * H1x2_4 + -0.5657184003534 * H1x2_5 + 
0.52117926766363 * H1x2_6 ;
306347    +   H2x1_1  = H2x1_1  +    -0.22872297219456 * H1x3_1
306348    +          +     0.44130997341488 * H1x3_2  +     0.85543947016407 * H1x3_3
306349    +          +      0.9172319436964 * H1x3_4  +    -0.63323674278101 * H1x3_5
306350    +          +       0.010792162082 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -0.22872297219456 * H1x3_1 + 0.44130997341488 * H1x3_2 
+ 0.85543947016407 * H1x3_3 + 0.9172319436964 * H1x3_4 + -0.63323674278101 * H1x3_5 + 
0.010792162082 * H1x3_6 ;
306351    +   H2x1_2  = H2x1_2  +    -0.47961853683007 * H1x3_1
306352    +          +     0.67283234118014 * H1x3_2  +    -0.12148381681871 * H1x3_3
306353    +          +     0.11539127068604 * H1x3_4  +     0.71547134269459 * H1x3_5
306354    +          +     0.31051080747621 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -0.47961853683007 * H1x3_1 + 0.67283234118014 * H1x3_2 
+ -0.12148381681871 * H1x3_3 + 0.11539127068604 * H1x3_4 + 0.71547134269459 * H1x3_5 + 
0.31051080747621 * H1x3_6 ;
306355    +   H2x1_3  = H2x1_3  +     0.84914297140244 * H1x3_1
306356    +          +     0.52803158023536 * H1x3_2  +    -1.39949725219783 * H1x3_3
306357    +          +     0.69603350257472 * H1x3_4  +    -0.99298091528215 * H1x3_5
306358    +          +      0.4901677948096 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + 0.84914297140244 * H1x3_1 + 0.52803158023536 * H1x3_2 
+ -1.39949725219783 * H1x3_3 + 0.69603350257472 * H1x3_4 + -0.99298091528215 * H1x3_5 + 
0.4901677948096 * H1x3_6 ;
306359    +   H2x1_4  = H2x1_4  +     1.25437670540229 * H1x3_1
306360    +          +     0.10767112672867 * H1x3_2  +     -2.4886577317349 * H1x3_3
306361    +          +    -1.19999974192227 * H1x3_4  +     2.65195856746166 * H1x3_5
306362    +          +    -0.35850032269696 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 1.25437670540229 * H1x3_1 + 0.10767112672867 * H1x3_2 
+ -2.4886577317349 * H1x3_3 + -1.19999974192227 * H1x3_4 + 2.65195856746166 * H1x3_5 + 
-0.35850032269696 * H1x3_6 ;
306363    +   H2x1_5  = H2x1_5  +    -0.18873569038601 * H1x3_1
306364    +          +    -0.05695497456875 * H1x3_2  +    -1.09169714101723 * H1x3_3
306365    +          +     0.66962829232535 * H1x3_4  +     0.68262583745167 * H1x3_5
306366    +          +     0.91538472149247 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + -0.18873569038601 * H1x3_1 + -0.05695497456875 * 
H1x3_2 + -1.09169714101723 * H1x3_3 + 0.66962829232535 * H1x3_4 + 0.68262583745167 * H1x3_5 + 
0.91538472149247 * H1x3_6 ;
306367    +   H2x1_1  = H2x1_1  +    -0.77701371575001 * H1x4_1
306368    +          +    -1.54239140939922 * H1x4_2  +    -0.26570372401877 * H1x4_3
306369    +          +     0.00097824237229 * H1x4_4  +     0.57921309289721 * H1x4_5
306370    +          +     1.46692133055956 * H1x4_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -0.77701371575001 * H1x4_1 + -1.54239140939922 * 
H1x4_2 + -0.26570372401877 * H1x4_3 + 0.00097824237229 * H1x4_4 + 0.57921309289721 * H1x4_5 + 
1.46692133055956 * H1x4_6 ;
306371    +   H2x1_2  = H2x1_2  +     0.96564519202767 * H1x4_1
306372    +          +    -0.06466152110331 * H1x4_2  +    -0.66659637249467 * H1x4_3
306373    +          +     0.59673973270306 * H1x4_4  +     2.45492273841581 * H1x4_5
306374    +          +     -0.4804481967354 * H1x4_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.96564519202767 * H1x4_1 + -0.06466152110331 * H1x4_2 
+ -0.66659637249467 * H1x4_3 + 0.59673973270306 * H1x4_4 + 2.45492273841581 * H1x4_5 + 
-0.4804481967354 * H1x4_6 ;
306375    +   H2x1_3  = H2x1_3  +     0.75339074826799 * H1x4_1
306376    +          +     1.26373188682879 * H1x4_2  +     0.49419374749947 * H1x4_3
306377    +          +     1.26541916145956 * H1x4_4  +     0.10039190806961 * H1x4_5
306378    +          +    -0.79556185531974 * H1x4_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + 0.75339074826799 * H1x4_1 + 1.26373188682879 * H1x4_2 
+ 0.49419374749947 * H1x4_3 + 1.26541916145956 * H1x4_4 + 0.10039190806961 * H1x4_5 + 
-0.79556185531974 * H1x4_6 ;
306379    +   H2x1_4  = H2x1_4  +    -0.28271287281925 * H1x4_1
306380    +          +      2.1208193298333 * H1x4_2  +    -0.65223420232343 * H1x4_3
306381    +          +     0.02666229497558 * H1x4_4  +     0.72865787458027 * H1x4_5
306382    +          +    -0.22377472142722 * H1x4_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + -0.28271287281925 * H1x4_1 + 2.1208193298333 * H1x4_2 
+ -0.65223420232343 * H1x4_3 + 0.02666229497558 * H1x4_4 + 0.72865787458027 * H1x4_5 + 
-0.22377472142722 * H1x4_6 ;
306383    +   H2x1_5  = H2x1_5  +    -0.84067714042271 * H1x4_1
306384    +          +    -1.59141777016956 * H1x4_2  +     0.46077797807782 * H1x4_3
306385    +          +    -0.07031579794448 * H1x4_4  +     0.83754013895307 * H1x4_5
306386    +          +     0.49805259687865 * H1x4_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + -0.84067714042271 * H1x4_1 + -1.59141777016956 * 
H1x4_2 + 0.46077797807782 * H1x4_3 + -0.07031579794448 * H1x4_4 + 0.83754013895307 * H1x4_5 + 
0.49805259687865 * H1x4_6 ;
306387    +   H2x1_1  =     1.86496757154162 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.86496757154162 + H2x1_1 ;
306388    +   H2x1_2  =     0.46453634696909 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 0.46453634696909 + H2x1_2 ;
306389    +   H2x1_3  =     0.36165501609225 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 0.36165501609225 + H2x1_3 ;
306390    +   H2x1_4  =    -0.91790753889181 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -0.91790753889181 + H2x1_4 ;
306391    +   H2x1_5  =     2.82445131106489 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = 2.82445131106489 + H2x1_5 ;
306392    +   H2x1_6  = 0;
MPRINT(EM_DIAGRAM):   H2x1_6 = 0;
306393    +   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 , H2x1_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 , H2x1_6 );
306394    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
306395    +   H2x1_1  = EXP(H2x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_1 = EXP(H2x1_1 - _MAX_);
306396    +   _SUM_ = _SUM_ + H2x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_1 ;
306397    +   H2x1_2  = EXP(H2x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_2 = EXP(H2x1_2 - _MAX_);
306398    +   _SUM_ = _SUM_ + H2x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_2 ;
306399    +   H2x1_3  = EXP(H2x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_3 = EXP(H2x1_3 - _MAX_);
306400    +   _SUM_ = _SUM_ + H2x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_3 ;
306401    +   H2x1_4  = EXP(H2x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_4 = EXP(H2x1_4 - _MAX_);
306402    +   _SUM_ = _SUM_ + H2x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_4 ;
306403    +   H2x1_5  = EXP(H2x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_5 = EXP(H2x1_5 - _MAX_);
306404    +   _SUM_ = _SUM_ + H2x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_5 ;
306405    +   H2x1_6  = EXP(H2x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_6 = EXP(H2x1_6 - _MAX_);
306406    +   _SUM_ = _SUM_ + H2x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_6 ;
306407    +   H2x1_1  = H2x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 / _SUM_;
306408    +   H2x1_2  = H2x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 / _SUM_;
306409    +   H2x1_3  = H2x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 / _SUM_;
306410    +   H2x1_4  = H2x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 / _SUM_;
306411    +   H2x1_5  = H2x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 / _SUM_;
306412    +   H2x1_6  = H2x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 / _SUM_;
306413    +END;
MPRINT(EM_DIAGRAM):   END;
306414    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
306415    +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
306416    +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
306417    +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
306418    +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
306419    +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
306420    +   H2x1_6  = .;
MPRINT(EM_DIAGRAM):   H2x1_6 = .;
306421    +END;
MPRINT(EM_DIAGRAM):   END;
306422    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
306423    +*** Writing the Node H2x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x2_ ;
306424    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
306425    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
306426    +   H2x2_1  =     0.06037434087051 * H1x1_1  +     2.10312669809986 * H1x1_2
306427    +          +     0.25966374544266 * H1x1_3  +     -0.4604625015482 * H1x1_4
306428    +          +    -0.04852853005798 * H1x1_5  +     1.73108900683337 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = 0.06037434087051 * H1x1_1 + 2.10312669809986 * H1x1_2 + 
0.25966374544266 * H1x1_3 + -0.4604625015482 * H1x1_4 + -0.04852853005798 * H1x1_5 + 
1.73108900683337 * H1x1_6 ;
306429    +   H2x2_2  =    -1.98874787809729 * H1x1_1  +    -0.90575568783349 * H1x1_2
306430    +          +     2.19451885005981 * H1x1_3  +     0.86127175797091 * H1x1_4
306431    +          +     0.88302785384691 * H1x1_5  +     1.44831802939799 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = -1.98874787809729 * H1x1_1 + -0.90575568783349 * H1x1_2 + 
2.19451885005981 * H1x1_3 + 0.86127175797091 * H1x1_4 + 0.88302785384691 * H1x1_5 + 
1.44831802939799 * H1x1_6 ;
306432    +   H2x2_3  =     0.99020573159855 * H1x1_1  +    -0.25509107111568 * H1x1_2
306433    +          +    -0.88380027397433 * H1x1_3  +     2.61444810707966 * H1x1_4
306434    +          +     1.12768553693881 * H1x1_5  +    -1.33423515707253 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = 0.99020573159855 * H1x1_1 + -0.25509107111568 * H1x1_2 + 
-0.88380027397433 * H1x1_3 + 2.61444810707966 * H1x1_4 + 1.12768553693881 * H1x1_5 + 
-1.33423515707253 * H1x1_6 ;
306435    +   H2x2_4  =    -0.48971657670431 * H1x1_1  +    -2.03924441101145 * H1x1_2
306436    +          +    -0.44598954940675 * H1x1_3  +    -0.38296699607675 * H1x1_4
306437    +          +    -0.46829791763961 * H1x1_5  +     0.57571476480191 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = -0.48971657670431 * H1x1_1 + -2.03924441101145 * H1x1_2 + 
-0.44598954940675 * H1x1_3 + -0.38296699607675 * H1x1_4 + -0.46829791763961 * H1x1_5 + 
0.57571476480191 * H1x1_6 ;
306438    +   H2x2_5  =     1.15324249951205 * H1x1_1  +    -0.30656607959814 * H1x1_2
306439    +          +    -0.26327906953925 * H1x1_3  +    -0.30055126052518 * H1x1_4
306440    +          +     1.20108560127357 * H1x1_5  +    -2.01222927536337 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = 1.15324249951205 * H1x1_1 + -0.30656607959814 * H1x1_2 + 
-0.26327906953925 * H1x1_3 + -0.30055126052518 * H1x1_4 + 1.20108560127357 * H1x1_5 + 
-2.01222927536337 * H1x1_6 ;
306441    +   H2x2_1  = H2x2_1  +     0.67714997403987 * H1x2_1
306442    +          +     0.58512699375084 * H1x2_2  +     0.82352577521669 * H1x2_3
306443    +          +    -0.10235751124142 * H1x2_4  +     0.33612939980192 * H1x2_5
306444    +          +    -0.86707973977777 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + 0.67714997403987 * H1x2_1 + 0.58512699375084 * H1x2_2 
+ 0.82352577521669 * H1x2_3 + -0.10235751124142 * H1x2_4 + 0.33612939980192 * H1x2_5 + 
-0.86707973977777 * H1x2_6 ;
306445    +   H2x2_2  = H2x2_2  +     0.54358612690033 * H1x2_1
306446    +          +     0.85147893022911 * H1x2_2  +     0.19383313272548 * H1x2_3
306447    +          +     0.54163359333706 * H1x2_4  +    -0.12377705517298 * H1x2_5
306448    +          +     0.34775419906833 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + 0.54358612690033 * H1x2_1 + 0.85147893022911 * H1x2_2 
+ 0.19383313272548 * H1x2_3 + 0.54163359333706 * H1x2_4 + -0.12377705517298 * H1x2_5 + 
0.34775419906833 * H1x2_6 ;
306449    +   H2x2_3  = H2x2_3  +    -0.93107945276808 * H1x2_1
306450    +          +     0.68475936175775 * H1x2_2  +    -0.23180217492353 * H1x2_3
306451    +          +     0.62637113173904 * H1x2_4  +      -0.494489282403 * H1x2_5
306452    +          +    -0.92757761378206 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + -0.93107945276808 * H1x2_1 + 0.68475936175775 * H1x2_2 
+ -0.23180217492353 * H1x2_3 + 0.62637113173904 * H1x2_4 + -0.494489282403 * H1x2_5 + 
-0.92757761378206 * H1x2_6 ;
306453    +   H2x2_4  = H2x2_4  +    -0.04592275767761 * H1x2_1
306454    +          +    -0.46728046145973 * H1x2_2  +    -0.84120395772864 * H1x2_3
306455    +          +     0.15719249141893 * H1x2_4  +    -0.46514309972577 * H1x2_5
306456    +          +     1.22882033880531 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + -0.04592275767761 * H1x2_1 + -0.46728046145973 * 
H1x2_2 + -0.84120395772864 * H1x2_3 + 0.15719249141893 * H1x2_4 + -0.46514309972577 * H1x2_5 + 
1.22882033880531 * H1x2_6 ;
306457    +   H2x2_5  = H2x2_5  +     1.84159049843244 * H1x2_1
306458    +          +     0.10275783758743 * H1x2_2  +    -1.43072878385761 * H1x2_3
306459    +          +     0.55082995966416 * H1x2_4  +      0.6610129464186 * H1x2_5
306460    +          +     1.13665339513142 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 + 1.84159049843244 * H1x2_1 + 0.10275783758743 * H1x2_2 
+ -1.43072878385761 * H1x2_3 + 0.55082995966416 * H1x2_4 + 0.6610129464186 * H1x2_5 + 
1.13665339513142 * H1x2_6 ;
306461    +   H2x2_1  = H2x2_1  +    -1.51032464504011 * H1x3_1
306462    +          +    -0.09256867451899 * H1x3_2  +     0.32445533867689 * H1x3_3
306463    +          +     0.05761597623645 * H1x3_4  +    -0.76755137543453 * H1x3_5
306464    +          +    -0.84355541605354 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -1.51032464504011 * H1x3_1 + -0.09256867451899 * 
H1x3_2 + 0.32445533867689 * H1x3_3 + 0.05761597623645 * H1x3_4 + -0.76755137543453 * H1x3_5 + 
-0.84355541605354 * H1x3_6 ;
306465    +   H2x2_2  = H2x2_2  +     0.10183122181912 * H1x3_1
306466    +          +    -0.30112412370797 * H1x3_2  +     0.67666605377075 * H1x3_3
306467    +          +    -0.05362728717558 * H1x3_4  +    -0.02087908172702 * H1x3_5
306468    +          +    -0.14832407235293 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + 0.10183122181912 * H1x3_1 + -0.30112412370797 * H1x3_2 
+ 0.67666605377075 * H1x3_3 + -0.05362728717558 * H1x3_4 + -0.02087908172702 * H1x3_5 + 
-0.14832407235293 * H1x3_6 ;
306469    +   H2x2_3  = H2x2_3  +     1.70579601255161 * H1x3_1
306470    +          +     -0.4658368752668 * H1x3_2  +    -0.54573113497487 * H1x3_3
306471    +          +     1.13279034034213 * H1x3_4  +     1.23714589942258 * H1x3_5
306472    +          +     0.41209753590668 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + 1.70579601255161 * H1x3_1 + -0.4658368752668 * H1x3_2 
+ -0.54573113497487 * H1x3_3 + 1.13279034034213 * H1x3_4 + 1.23714589942258 * H1x3_5 + 
0.41209753590668 * H1x3_6 ;
306473    +   H2x2_4  = H2x2_4  +     0.21012073552633 * H1x3_1
306474    +          +      -1.607803967771 * H1x3_2  +     0.02641742148684 * H1x3_3
306475    +          +      -0.919177834124 * H1x3_4  +    -0.46658991803838 * H1x3_5
306476    +          +     0.05356295771962 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + 0.21012073552633 * H1x3_1 + -1.607803967771 * H1x3_2 + 
0.02641742148684 * H1x3_3 + -0.919177834124 * H1x3_4 + -0.46658991803838 * H1x3_5 + 
0.05356295771962 * H1x3_6 ;
306477    +   H2x2_5  = H2x2_5  +     -1.1424376096243 * H1x3_1
306478    +          +    -0.47941730936597 * H1x3_2  +    -1.44857674506057 * H1x3_3
306479    +          +     -2.0300913051093 * H1x3_4  +    -0.12476620160938 * H1x3_5
306480    +          +      1.3865980084186 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 + -1.1424376096243 * H1x3_1 + -0.47941730936597 * H1x3_2 
+ -1.44857674506057 * H1x3_3 + -2.0300913051093 * H1x3_4 + -0.12476620160938 * H1x3_5 + 
1.3865980084186 * H1x3_6 ;
306481    +   H2x2_1  = H2x2_1  +    -0.80277778579719 * H1x4_1
306482    +          +     0.89356845434924 * H1x4_2  +     1.34679856015636 * H1x4_3
306483    +          +    -0.75666255425893 * H1x4_4  +    -0.76982332990737 * H1x4_5
306484    +          +     0.16602366912489 * H1x4_6 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -0.80277778579719 * H1x4_1 + 0.89356845434924 * H1x4_2 
+ 1.34679856015636 * H1x4_3 + -0.75666255425893 * H1x4_4 + -0.76982332990737 * H1x4_5 + 
0.16602366912489 * H1x4_6 ;
306485    +   H2x2_2  = H2x2_2  +    -1.23815292104545 * H1x4_1
306486    +          +     0.15726093177842 * H1x4_2  +     0.11603212859646 * H1x4_3
306487    +          +     0.38287343591011 * H1x4_4  +    -0.51333663927664 * H1x4_5
306488    +          +     -0.9577144624714 * H1x4_6 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + -1.23815292104545 * H1x4_1 + 0.15726093177842 * H1x4_2 
+ 0.11603212859646 * H1x4_3 + 0.38287343591011 * H1x4_4 + -0.51333663927664 * H1x4_5 + 
-0.9577144624714 * H1x4_6 ;
306489    +   H2x2_3  = H2x2_3  +    -0.68480171858681 * H1x4_1
306490    +          +    -0.64475211431817 * H1x4_2  +     0.54382770716837 * H1x4_3
306491    +          +     0.07586519798399 * H1x4_4  +      -0.158352646931 * H1x4_5
306492    +          +    -0.86962851115528 * H1x4_6 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + -0.68480171858681 * H1x4_1 + -0.64475211431817 * 
H1x4_2 + 0.54382770716837 * H1x4_3 + 0.07586519798399 * H1x4_4 + -0.158352646931 * H1x4_5 + 
-0.86962851115528 * H1x4_6 ;
306493    +   H2x2_4  = H2x2_4  +     1.08721247219364 * H1x4_1
306494    +          +    -0.00199447585891 * H1x4_2  +    -0.84066724442019 * H1x4_3
306495    +          +     0.28532638217608 * H1x4_4  +    -1.14779513957631 * H1x4_5
306496    +          +     2.01216139921959 * H1x4_6 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + 1.08721247219364 * H1x4_1 + -0.00199447585891 * H1x4_2 
+ -0.84066724442019 * H1x4_3 + 0.28532638217608 * H1x4_4 + -1.14779513957631 * H1x4_5 + 
2.01216139921959 * H1x4_6 ;
306497    +   H2x2_5  = H2x2_5  +    -0.82582817846967 * H1x4_1
306498    +          +    -1.09057773595959 * H1x4_2  +     -0.2490905553905 * H1x4_3
306499    +          +     0.93092377717594 * H1x4_4  +     0.02946641402494 * H1x4_5
306500    +          +    -0.19026348436175 * H1x4_6 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 + -0.82582817846967 * H1x4_1 + -1.09057773595959 * 
H1x4_2 + -0.2490905553905 * H1x4_3 + 0.93092377717594 * H1x4_4 + 0.02946641402494 * H1x4_5 + 
-0.19026348436175 * H1x4_6 ;
306501    +   H2x2_1  =      0.4280804812723 + H2x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = 0.4280804812723 + H2x2_1 ;
306502    +   H2x2_2  =    -1.09169904475569 + H2x2_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = -1.09169904475569 + H2x2_2 ;
306503    +   H2x2_3  =      1.1980619484542 + H2x2_3 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = 1.1980619484542 + H2x2_3 ;
306504    +   H2x2_4  =    -0.69756677248934 + H2x2_4 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = -0.69756677248934 + H2x2_4 ;
306505    +   H2x2_5  =    -1.87910212660657 + H2x2_5 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = -1.87910212660657 + H2x2_5 ;
306506    +   H2x2_6  = 0;
MPRINT(EM_DIAGRAM):   H2x2_6 = 0;
306507    +   _MAX_ = MAX (H2x2_1 , H2x2_2 , H2x2_3 , H2x2_4 , H2x2_5 , H2x2_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x2_1 , H2x2_2 , H2x2_3 , H2x2_4 , H2x2_5 , H2x2_6 );
306508    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
306509    +   H2x2_1  = EXP(H2x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_1 = EXP(H2x2_1 - _MAX_);
306510    +   _SUM_ = _SUM_ + H2x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_1 ;
306511    +   H2x2_2  = EXP(H2x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_2 = EXP(H2x2_2 - _MAX_);
306512    +   _SUM_ = _SUM_ + H2x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_2 ;
306513    +   H2x2_3  = EXP(H2x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_3 = EXP(H2x2_3 - _MAX_);
306514    +   _SUM_ = _SUM_ + H2x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_3 ;
306515    +   H2x2_4  = EXP(H2x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_4 = EXP(H2x2_4 - _MAX_);
306516    +   _SUM_ = _SUM_ + H2x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_4 ;
306517    +   H2x2_5  = EXP(H2x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_5 = EXP(H2x2_5 - _MAX_);
306518    +   _SUM_ = _SUM_ + H2x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_5 ;
306519    +   H2x2_6  = EXP(H2x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_6 = EXP(H2x2_6 - _MAX_);
306520    +   _SUM_ = _SUM_ + H2x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_6 ;
306521    +   H2x2_1  = H2x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 / _SUM_;
306522    +   H2x2_2  = H2x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 / _SUM_;
306523    +   H2x2_3  = H2x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 / _SUM_;
306524    +   H2x2_4  = H2x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 / _SUM_;
306525    +   H2x2_5  = H2x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 / _SUM_;
306526    +   H2x2_6  = H2x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_6 = H2x2_6 / _SUM_;
306527    +END;
MPRINT(EM_DIAGRAM):   END;
306528    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
306529    +   H2x2_1  = .;
MPRINT(EM_DIAGRAM):   H2x2_1 = .;
306530    +   H2x2_2  = .;
MPRINT(EM_DIAGRAM):   H2x2_2 = .;
306531    +   H2x2_3  = .;
MPRINT(EM_DIAGRAM):   H2x2_3 = .;
306532    +   H2x2_4  = .;
MPRINT(EM_DIAGRAM):   H2x2_4 = .;
306533    +   H2x2_5  = .;
MPRINT(EM_DIAGRAM):   H2x2_5 = .;
306534    +   H2x2_6  = .;
MPRINT(EM_DIAGRAM):   H2x2_6 = .;
306535    +END;
MPRINT(EM_DIAGRAM):   END;
306536    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
306537    +*** Writing the Node H2x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x3_ ;
306538    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
306539    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
306540    +   H2x3_1  =     0.51206365204428 * H1x1_1  +    -1.75446248490807 * H1x1_2
306541    +          +     0.22956544269482 * H1x1_3  +     0.91651437630074 * H1x1_4
306542    +          +    -0.88731743590726 * H1x1_5  +     0.75959028005652 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x3_1 = 0.51206365204428 * H1x1_1 + -1.75446248490807 * H1x1_2 + 
0.22956544269482 * H1x1_3 + 0.91651437630074 * H1x1_4 + -0.88731743590726 * H1x1_5 + 
0.75959028005652 * H1x1_6 ;
306543    +   H2x3_2  =    -0.45196055100748 * H1x1_1  +    -0.30516535345407 * H1x1_2
306544    +          +    -0.95535662641329 * H1x1_3  +     0.98793241812876 * H1x1_4
306545    +          +    -2.26205386368521 * H1x1_5  +    -0.79989554227284 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x3_2 = -0.45196055100748 * H1x1_1 + -0.30516535345407 * H1x1_2 + 
-0.95535662641329 * H1x1_3 + 0.98793241812876 * H1x1_4 + -2.26205386368521 * H1x1_5 + 
-0.79989554227284 * H1x1_6 ;
306546    +   H2x3_3  =     1.75400558713364 * H1x1_1  +     0.36065784285286 * H1x1_2
306547    +          +    -0.26047606287884 * H1x1_3  +    -0.92639558885443 * H1x1_4
306548    +          +     1.89978202395282 * H1x1_5  +     1.46105111567983 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x3_3 = 1.75400558713364 * H1x1_1 + 0.36065784285286 * H1x1_2 + 
-0.26047606287884 * H1x1_3 + -0.92639558885443 * H1x1_4 + 1.89978202395282 * H1x1_5 + 
1.46105111567983 * H1x1_6 ;
306549    +   H2x3_4  =     -1.0609986914691 * H1x1_1  +     1.03588259392678 * H1x1_2
306550    +          +     0.18751061078347 * H1x1_3  +     1.45467172411852 * H1x1_4
306551    +          +     0.80970691110797 * H1x1_5  +    -0.03142746343877 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x3_4 = -1.0609986914691 * H1x1_1 + 1.03588259392678 * H1x1_2 + 
0.18751061078347 * H1x1_3 + 1.45467172411852 * H1x1_4 + 0.80970691110797 * H1x1_5 + 
-0.03142746343877 * H1x1_6 ;
306552    +   H2x3_5  =     0.68514959739435 * H1x1_1  +    -0.85703618516825 * H1x1_2
306553    +          +    -1.42641478008517 * H1x1_3  +     0.69128253039497 * H1x1_4
306554    +          +    -0.41103428804251 * H1x1_5  +     2.29818718782262 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x3_5 = 0.68514959739435 * H1x1_1 + -0.85703618516825 * H1x1_2 + 
-1.42641478008517 * H1x1_3 + 0.69128253039497 * H1x1_4 + -0.41103428804251 * H1x1_5 + 
2.29818718782262 * H1x1_6 ;
306555    +   H2x3_1  = H2x3_1  +    -1.02124610786304 * H1x2_1
306556    +          +    -0.70086367508924 * H1x2_2  +     1.44543746222048 * H1x2_3
306557    +          +      0.0077115223216 * H1x2_4  +    -1.13603676440953 * H1x2_5
306558    +          +    -0.39006326539815 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x3_1 = H2x3_1 + -1.02124610786304 * H1x2_1 + -0.70086367508924 * 
H1x2_2 + 1.44543746222048 * H1x2_3 + 0.0077115223216 * H1x2_4 + -1.13603676440953 * H1x2_5 + 
-0.39006326539815 * H1x2_6 ;
306559    +   H2x3_2  = H2x3_2  +     0.58504868182178 * H1x2_1
306560    +          +    -2.53394647771808 * H1x2_2  +    -0.46920351111552 * H1x2_3
306561    +          +    -0.13298739365164 * H1x2_4  +    -0.72916785042807 * H1x2_5
306562    +          +     0.87575796008942 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x3_2 = H2x3_2 + 0.58504868182178 * H1x2_1 + -2.53394647771808 * H1x2_2 
+ -0.46920351111552 * H1x2_3 + -0.13298739365164 * H1x2_4 + -0.72916785042807 * H1x2_5 + 
0.87575796008942 * H1x2_6 ;
306563    +   H2x3_3  = H2x3_3  +      -0.403068394175 * H1x2_1
306564    +          +     2.20341156440175 * H1x2_2  +     0.18637166393472 * H1x2_3
306565    +          +    -0.49818124689746 * H1x2_4  +    -0.57482220863202 * H1x2_5
306566    +          +    -0.99288712489296 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x3_3 = H2x3_3 + -0.403068394175 * H1x2_1 + 2.20341156440175 * H1x2_2 + 
0.18637166393472 * H1x2_3 + -0.49818124689746 * H1x2_4 + -0.57482220863202 * H1x2_5 + 
-0.99288712489296 * H1x2_6 ;
306567    +   H2x3_4  = H2x3_4  +    -0.08255075671356 * H1x2_1
306568    +          +     0.12417859340249 * H1x2_2  +     0.38623860203678 * H1x2_3
306569    +          +     1.30375188803419 * H1x2_4  +     0.06113655765155 * H1x2_5
306570    +          +     2.18684373678918 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x3_4 = H2x3_4 + -0.08255075671356 * H1x2_1 + 0.12417859340249 * H1x2_2 
+ 0.38623860203678 * H1x2_3 + 1.30375188803419 * H1x2_4 + 0.06113655765155 * H1x2_5 + 
2.18684373678918 * H1x2_6 ;
306571    +   H2x3_5  = H2x3_5  +     0.02445507420447 * H1x2_1
306572    +          +     -1.1429834255353 * H1x2_2  +     1.15057813366971 * H1x2_3
306573    +          +     -0.7929157351984 * H1x2_4  +      0.4343084860458 * H1x2_5
306574    +          +      0.0384736341173 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x3_5 = H2x3_5 + 0.02445507420447 * H1x2_1 + -1.1429834255353 * H1x2_2 
+ 1.15057813366971 * H1x2_3 + -0.7929157351984 * H1x2_4 + 0.4343084860458 * H1x2_5 + 
0.0384736341173 * H1x2_6 ;
306575    +   H2x3_1  = H2x3_1  +     0.37764572590016 * H1x3_1
306576    +          +     1.48191356825225 * H1x3_2  +    -0.26603273466393 * H1x3_3
306577    +          +    -1.29507822568105 * H1x3_4  +     1.84557717124725 * H1x3_5
306578    +          +    -0.65863037608331 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x3_1 = H2x3_1 + 0.37764572590016 * H1x3_1 + 1.48191356825225 * H1x3_2 
+ -0.26603273466393 * H1x3_3 + -1.29507822568105 * H1x3_4 + 1.84557717124725 * H1x3_5 + 
-0.65863037608331 * H1x3_6 ;
306579    +   H2x3_2  = H2x3_2  +    -3.49060338051306 * H1x3_1
306580    +          +      1.3541565382925 * H1x3_2  +    -0.38315198954693 * H1x3_3
306581    +          +    -2.08846010475603 * H1x3_4  +    -0.03268324043605 * H1x3_5
306582    +          +     -0.2732767866426 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x3_2 = H2x3_2 + -3.49060338051306 * H1x3_1 + 1.3541565382925 * H1x3_2 
+ -0.38315198954693 * H1x3_3 + -2.08846010475603 * H1x3_4 + -0.03268324043605 * H1x3_5 + 
-0.2732767866426 * H1x3_6 ;
306583    +   H2x3_3  = H2x3_3  +    -1.02108681113274 * H1x3_1
306584    +          +     1.11670732797487 * H1x3_2  +    -2.83817066251645 * H1x3_3
306585    +          +     2.91943649605743 * H1x3_4  +    -1.58666117886546 * H1x3_5
306586    +          +     0.95358246629929 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x3_3 = H2x3_3 + -1.02108681113274 * H1x3_1 + 1.11670732797487 * H1x3_2 
+ -2.83817066251645 * H1x3_3 + 2.91943649605743 * H1x3_4 + -1.58666117886546 * H1x3_5 + 
0.95358246629929 * H1x3_6 ;
306587    +   H2x3_4  = H2x3_4  +    -0.28934138457604 * H1x3_1
306588    +          +     -0.1627562650927 * H1x3_2  +     1.76496399430623 * H1x3_3
306589    +          +     2.05776756058594 * H1x3_4  +    -0.96994650178001 * H1x3_5
306590    +          +    -1.50364154763084 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x3_4 = H2x3_4 + -0.28934138457604 * H1x3_1 + -0.1627562650927 * H1x3_2 
+ 1.76496399430623 * H1x3_3 + 2.05776756058594 * H1x3_4 + -0.96994650178001 * H1x3_5 + 
-1.50364154763084 * H1x3_6 ;
306591    +   H2x3_5  = H2x3_5  +    -0.73016276992619 * H1x3_1
306592    +          +    -1.48258849718818 * H1x3_2  +    -0.47908044807419 * H1x3_3
306593    +          +      0.5957671579209 * H1x3_4  +     0.06707833713085 * H1x3_5
306594    +          +      0.3673818114501 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x3_5 = H2x3_5 + -0.73016276992619 * H1x3_1 + -1.48258849718818 * 
H1x3_2 + -0.47908044807419 * H1x3_3 + 0.5957671579209 * H1x3_4 + 0.06707833713085 * H1x3_5 + 
0.3673818114501 * H1x3_6 ;
306595    +   H2x3_1  = H2x3_1  +     1.64939881299916 * H1x4_1
306596    +          +     0.29057047745206 * H1x4_2  +     -1.2430356696985 * H1x4_3
306597    +          +     1.38895822896909 * H1x4_4  +     0.32263395713709 * H1x4_5
306598    +          +      -0.876005602164 * H1x4_6 ;
MPRINT(EM_DIAGRAM):   H2x3_1 = H2x3_1 + 1.64939881299916 * H1x4_1 + 0.29057047745206 * H1x4_2 
+ -1.2430356696985 * H1x4_3 + 1.38895822896909 * H1x4_4 + 0.32263395713709 * H1x4_5 + 
-0.876005602164 * H1x4_6 ;
306599    +   H2x3_2  = H2x3_2  +    -0.59279077758901 * H1x4_1
306600    +          +     0.47534983861589 * H1x4_2  +     1.50522851379751 * H1x4_3
306601    +          +    -0.52074826438565 * H1x4_4  +    -0.13959571645898 * H1x4_5
306602    +          +     0.51236653129509 * H1x4_6 ;
MPRINT(EM_DIAGRAM):   H2x3_2 = H2x3_2 + -0.59279077758901 * H1x4_1 + 0.47534983861589 * H1x4_2 
+ 1.50522851379751 * H1x4_3 + -0.52074826438565 * H1x4_4 + -0.13959571645898 * H1x4_5 + 
0.51236653129509 * H1x4_6 ;
306603    +   H2x3_3  = H2x3_3  +       0.170929264521 * H1x4_1
306604    +          +    -1.09768862147461 * H1x4_2  +    -1.22166369035864 * H1x4_3
306605    +          +    -0.43496041372082 * H1x4_4  +     0.86983484014566 * H1x4_5
306606    +          +     0.14855508666868 * H1x4_6 ;
MPRINT(EM_DIAGRAM):   H2x3_3 = H2x3_3 + 0.170929264521 * H1x4_1 + -1.09768862147461 * H1x4_2 + 
-1.22166369035864 * H1x4_3 + -0.43496041372082 * H1x4_4 + 0.86983484014566 * H1x4_5 + 
0.14855508666868 * H1x4_6 ;
306607    +   H2x3_4  = H2x3_4  +    -0.26703118340308 * H1x4_1
306608    +          +     0.58353167926887 * H1x4_2  +     1.39169479141155 * H1x4_3
306609    +          +     -0.7893707969296 * H1x4_4  +     0.89521873365477 * H1x4_5
306610    +          +     1.60853840268286 * H1x4_6 ;
MPRINT(EM_DIAGRAM):   H2x3_4 = H2x3_4 + -0.26703118340308 * H1x4_1 + 0.58353167926887 * H1x4_2 
+ 1.39169479141155 * H1x4_3 + -0.7893707969296 * H1x4_4 + 0.89521873365477 * H1x4_5 + 
1.60853840268286 * H1x4_6 ;
306611    +   H2x3_5  = H2x3_5  +    -0.29353449181426 * H1x4_1
306612    +          +     0.02697197445995 * H1x4_2  +     0.04454970336296 * H1x4_3
306613    +          +    -0.17322488506489 * H1x4_4  +    -1.52564540234935 * H1x4_5
306614    +          +      0.6650692994568 * H1x4_6 ;
MPRINT(EM_DIAGRAM):   H2x3_5 = H2x3_5 + -0.29353449181426 * H1x4_1 + 0.02697197445995 * H1x4_2 
+ 0.04454970336296 * H1x4_3 + -0.17322488506489 * H1x4_4 + -1.52564540234935 * H1x4_5 + 
0.6650692994568 * H1x4_6 ;
306615    +   H2x3_1  =    -0.44046998911725 + H2x3_1 ;
MPRINT(EM_DIAGRAM):   H2x3_1 = -0.44046998911725 + H2x3_1 ;
306616    +   H2x3_2  =     1.44590821330163 + H2x3_2 ;
MPRINT(EM_DIAGRAM):   H2x3_2 = 1.44590821330163 + H2x3_2 ;
306617    +   H2x3_3  =    -0.02671947857742 + H2x3_3 ;
MPRINT(EM_DIAGRAM):   H2x3_3 = -0.02671947857742 + H2x3_3 ;
306618    +   H2x3_4  =     2.16876314488082 + H2x3_4 ;
MPRINT(EM_DIAGRAM):   H2x3_4 = 2.16876314488082 + H2x3_4 ;
306619    +   H2x3_5  =    -1.06855161267989 + H2x3_5 ;
MPRINT(EM_DIAGRAM):   H2x3_5 = -1.06855161267989 + H2x3_5 ;
306620    +   H2x3_6  = 0;
MPRINT(EM_DIAGRAM):   H2x3_6 = 0;
306621    +   _MAX_ = MAX (H2x3_1 , H2x3_2 , H2x3_3 , H2x3_4 , H2x3_5 , H2x3_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x3_1 , H2x3_2 , H2x3_3 , H2x3_4 , H2x3_5 , H2x3_6 );
306622    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
306623    +   H2x3_1  = EXP(H2x3_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x3_1 = EXP(H2x3_1 - _MAX_);
306624    +   _SUM_ = _SUM_ + H2x3_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x3_1 ;
306625    +   H2x3_2  = EXP(H2x3_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x3_2 = EXP(H2x3_2 - _MAX_);
306626    +   _SUM_ = _SUM_ + H2x3_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x3_2 ;
306627    +   H2x3_3  = EXP(H2x3_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x3_3 = EXP(H2x3_3 - _MAX_);
306628    +   _SUM_ = _SUM_ + H2x3_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x3_3 ;
306629    +   H2x3_4  = EXP(H2x3_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x3_4 = EXP(H2x3_4 - _MAX_);
306630    +   _SUM_ = _SUM_ + H2x3_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x3_4 ;
306631    +   H2x3_5  = EXP(H2x3_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x3_5 = EXP(H2x3_5 - _MAX_);
306632    +   _SUM_ = _SUM_ + H2x3_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x3_5 ;
306633    +   H2x3_6  = EXP(H2x3_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x3_6 = EXP(H2x3_6 - _MAX_);
306634    +   _SUM_ = _SUM_ + H2x3_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x3_6 ;
306635    +   H2x3_1  = H2x3_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x3_1 = H2x3_1 / _SUM_;
306636    +   H2x3_2  = H2x3_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x3_2 = H2x3_2 / _SUM_;
306637    +   H2x3_3  = H2x3_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x3_3 = H2x3_3 / _SUM_;
306638    +   H2x3_4  = H2x3_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x3_4 = H2x3_4 / _SUM_;
306639    +   H2x3_5  = H2x3_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x3_5 = H2x3_5 / _SUM_;
306640    +   H2x3_6  = H2x3_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x3_6 = H2x3_6 / _SUM_;
306641    +END;
MPRINT(EM_DIAGRAM):   END;
306642    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
306643    +   H2x3_1  = .;
MPRINT(EM_DIAGRAM):   H2x3_1 = .;
306644    +   H2x3_2  = .;
MPRINT(EM_DIAGRAM):   H2x3_2 = .;
306645    +   H2x3_3  = .;
MPRINT(EM_DIAGRAM):   H2x3_3 = .;
306646    +   H2x3_4  = .;
MPRINT(EM_DIAGRAM):   H2x3_4 = .;
306647    +   H2x3_5  = .;
MPRINT(EM_DIAGRAM):   H2x3_5 = .;
306648    +   H2x3_6  = .;
MPRINT(EM_DIAGRAM):   H2x3_6 = .;
306649    +END;
MPRINT(EM_DIAGRAM):   END;
306650    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
306651    +*** Writing the Node H3x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x1_ ;
306652    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
306653    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
306654    +   H3x1_1  =     0.14821897068309 * H2x1_1  +     0.10105634438409 * H2x1_2
306655    +          +     0.69826499371673 * H2x1_3  +     1.65127139539807 * H2x1_4
306656    +          +     1.34699293376382 * H2x1_5  +     0.62066324264653 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 0.14821897068309 * H2x1_1 + 0.10105634438409 * H2x1_2 + 
0.69826499371673 * H2x1_3 + 1.65127139539807 * H2x1_4 + 1.34699293376382 * H2x1_5 + 
0.62066324264653 * H2x1_6 ;
306657    +   H3x1_2  =     -0.6760189094281 * H2x1_1  +     0.85348791240011 * H2x1_2
306658    +          +    -0.07663386217946 * H2x1_3  +     2.15467384269703 * H2x1_4
306659    +          +    -0.50699529916446 * H2x1_5  +     1.70699964755049 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = -0.6760189094281 * H2x1_1 + 0.85348791240011 * H2x1_2 + 
-0.07663386217946 * H2x1_3 + 2.15467384269703 * H2x1_4 + -0.50699529916446 * H2x1_5 + 
1.70699964755049 * H2x1_6 ;
306660    +   H3x1_3  =    -0.94311365048828 * H2x1_1  +    -0.69829528108975 * H2x1_2
306661    +          +    -0.34747616168009 * H2x1_3  +     2.32941170908743 * H2x1_4
306662    +          +     3.71768144878584 * H2x1_5  +    -0.60932405988373 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = -0.94311365048828 * H2x1_1 + -0.69829528108975 * H2x1_2 + 
-0.34747616168009 * H2x1_3 + 2.32941170908743 * H2x1_4 + 3.71768144878584 * H2x1_5 + 
-0.60932405988373 * H2x1_6 ;
306663    +   H3x1_4  =     1.69107510526388 * H2x1_1  +    -1.40350955348413 * H2x1_2
306664    +          +    -0.47901844016365 * H2x1_3  +      0.3540542650553 * H2x1_4
306665    +          +    -1.56597514252687 * H2x1_5  +    -0.04997148078498 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = 1.69107510526388 * H2x1_1 + -1.40350955348413 * H2x1_2 + 
-0.47901844016365 * H2x1_3 + 0.3540542650553 * H2x1_4 + -1.56597514252687 * H2x1_5 + 
-0.04997148078498 * H2x1_6 ;
306666    +   H3x1_5  =    -0.23167181678539 * H2x1_1  +    -0.65942738658946 * H2x1_2
306667    +          +    -0.83280103611578 * H2x1_3  +    -1.03301865685228 * H2x1_4
306668    +          +      1.3401316289209 * H2x1_5  +    -1.98639459325872 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = -0.23167181678539 * H2x1_1 + -0.65942738658946 * H2x1_2 + 
-0.83280103611578 * H2x1_3 + -1.03301865685228 * H2x1_4 + 1.3401316289209 * H2x1_5 + 
-1.98639459325872 * H2x1_6 ;
306669    +   H3x1_1  = H3x1_1  +    -1.96226306174896 * H2x2_1
306670    +          +     1.03065434267907 * H2x2_2  +    -0.02977552697407 * H2x2_3
306671    +          +    -2.15633683205343 * H2x2_4  +    -0.16172049876123 * H2x2_5
306672    +          +     2.04617275364668 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + -1.96226306174896 * H2x2_1 + 1.03065434267907 * H2x2_2 
+ -0.02977552697407 * H2x2_3 + -2.15633683205343 * H2x2_4 + -0.16172049876123 * H2x2_5 + 
2.04617275364668 * H2x2_6 ;
306673    +   H3x1_2  = H3x1_2  +     0.98825486325651 * H2x2_1
306674    +          +    -0.45791784632486 * H2x2_2  +     -0.1004093258308 * H2x2_3
306675    +          +     -0.9411693729369 * H2x2_4  +     -0.2302105458948 * H2x2_5
306676    +          +    -0.37660795680674 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = H3x1_2 + 0.98825486325651 * H2x2_1 + -0.45791784632486 * H2x2_2 
+ -0.1004093258308 * H2x2_3 + -0.9411693729369 * H2x2_4 + -0.2302105458948 * H2x2_5 + 
-0.37660795680674 * H2x2_6 ;
306677    +   H3x1_3  = H3x1_3  +    -0.01929245635771 * H2x2_1
306678    +          +     0.59176660505983 * H2x2_2  +     0.85345798669405 * H2x2_3
306679    +          +    -0.29251716908915 * H2x2_4  +     0.62774918208489 * H2x2_5
306680    +          +    -0.43453791992382 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = H3x1_3 + -0.01929245635771 * H2x2_1 + 0.59176660505983 * H2x2_2 
+ 0.85345798669405 * H2x2_3 + -0.29251716908915 * H2x2_4 + 0.62774918208489 * H2x2_5 + 
-0.43453791992382 * H2x2_6 ;
306681    +   H3x1_4  = H3x1_4  +    -0.93313067901041 * H2x2_1
306682    +          +     0.79407052404273 * H2x2_2  +     1.63518575530242 * H2x2_3
306683    +          +     1.19368615452563 * H2x2_4  +     0.43365061793519 * H2x2_5
306684    +          +    -3.30381142208727 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = H3x1_4 + -0.93313067901041 * H2x2_1 + 0.79407052404273 * H2x2_2 
+ 1.63518575530242 * H2x2_3 + 1.19368615452563 * H2x2_4 + 0.43365061793519 * H2x2_5 + 
-3.30381142208727 * H2x2_6 ;
306685    +   H3x1_5  = H3x1_5  +      0.2721747886066 * H2x2_1
306686    +          +     0.29405186941774 * H2x2_2  +    -0.96425253045194 * H2x2_3
306687    +          +    -0.34879018216113 * H2x2_4  +    -1.15330072605073 * H2x2_5
306688    +          +    -0.34019675397366 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = H3x1_5 + 0.2721747886066 * H2x2_1 + 0.29405186941774 * H2x2_2 + 
-0.96425253045194 * H2x2_3 + -0.34879018216113 * H2x2_4 + -1.15330072605073 * H2x2_5 + 
-0.34019675397366 * H2x2_6 ;
306689    +   H3x1_1  = H3x1_1  +     0.99938924001809 * H2x3_1
306690    +          +    -0.28559857879809 * H2x3_2  +    -0.44648183712004 * H2x3_3
306691    +          +    -0.23199698060307 * H2x3_4  +    -0.64346521755351 * H2x3_5
306692    +          +     0.59340663088806 * H2x3_6 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + 0.99938924001809 * H2x3_1 + -0.28559857879809 * H2x3_2 
+ -0.44648183712004 * H2x3_3 + -0.23199698060307 * H2x3_4 + -0.64346521755351 * H2x3_5 + 
0.59340663088806 * H2x3_6 ;
306693    +   H3x1_2  = H3x1_2  +     1.61767718200144 * H2x3_1
306694    +          +     0.59417860044733 * H2x3_2  +      1.9323992067722 * H2x3_3
306695    +          +    -1.38224816012152 * H2x3_4  +    -2.04529937075447 * H2x3_5
306696    +          +     0.67050797164115 * H2x3_6 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = H3x1_2 + 1.61767718200144 * H2x3_1 + 0.59417860044733 * H2x3_2 
+ 1.9323992067722 * H2x3_3 + -1.38224816012152 * H2x3_4 + -2.04529937075447 * H2x3_5 + 
0.67050797164115 * H2x3_6 ;
306697    +   H3x1_3  = H3x1_3  +    -0.69807909205706 * H2x3_1
306698    +          +    -0.57895843216341 * H2x3_2  +    -0.16766418785512 * H2x3_3
306699    +          +     0.40654327615846 * H2x3_4  +    -1.86698682195337 * H2x3_5
306700    +          +    -0.51274988768251 * H2x3_6 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = H3x1_3 + -0.69807909205706 * H2x3_1 + -0.57895843216341 * 
H2x3_2 + -0.16766418785512 * H2x3_3 + 0.40654327615846 * H2x3_4 + -1.86698682195337 * H2x3_5 + 
-0.51274988768251 * H2x3_6 ;
306701    +   H3x1_4  = H3x1_4  +     0.48560830435522 * H2x3_1
306702    +          +     -2.8037598804912 * H2x3_2  +    -0.30231415756008 * H2x3_3
306703    +          +     2.41159952574381 * H2x3_4  +     0.62877424154604 * H2x3_5
306704    +          +    -0.73773727947747 * H2x3_6 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = H3x1_4 + 0.48560830435522 * H2x3_1 + -2.8037598804912 * H2x3_2 
+ -0.30231415756008 * H2x3_3 + 2.41159952574381 * H2x3_4 + 0.62877424154604 * H2x3_5 + 
-0.73773727947747 * H2x3_6 ;
306705    +   H3x1_5  = H3x1_5  +    -0.87089276878422 * H2x3_1
306706    +          +    -0.78003140915024 * H2x3_2  +    -1.46975503560585 * H2x3_3
306707    +          +     1.87460778751879 * H2x3_4  +    -0.09219359612439 * H2x3_5
306708    +          +    -1.07137645697526 * H2x3_6 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = H3x1_5 + -0.87089276878422 * H2x3_1 + -0.78003140915024 * 
H2x3_2 + -1.46975503560585 * H2x3_3 + 1.87460778751879 * H2x3_4 + -0.09219359612439 * H2x3_5 + 
-1.07137645697526 * H2x3_6 ;
306709    +   H3x1_1  =    -0.24118737469276 + H3x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = -0.24118737469276 + H3x1_1 ;
306710    +   H3x1_2  =     0.26844205496356 + H3x1_2 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = 0.26844205496356 + H3x1_2 ;
306711    +   H3x1_3  =      1.6092325807607 + H3x1_3 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = 1.6092325807607 + H3x1_3 ;
306712    +   H3x1_4  =     0.55904829903808 + H3x1_4 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = 0.55904829903808 + H3x1_4 ;
306713    +   H3x1_5  =     1.39880629138148 + H3x1_5 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = 1.39880629138148 + H3x1_5 ;
306714    +   H3x1_6  = 0;
MPRINT(EM_DIAGRAM):   H3x1_6 = 0;
306715    +   _MAX_ = MAX (H3x1_1 , H3x1_2 , H3x1_3 , H3x1_4 , H3x1_5 , H3x1_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H3x1_1 , H3x1_2 , H3x1_3 , H3x1_4 , H3x1_5 , H3x1_6 );
306716    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
306717    +   H3x1_1  = EXP(H3x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_1 = EXP(H3x1_1 - _MAX_);
306718    +   _SUM_ = _SUM_ + H3x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_1 ;
306719    +   H3x1_2  = EXP(H3x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_2 = EXP(H3x1_2 - _MAX_);
306720    +   _SUM_ = _SUM_ + H3x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_2 ;
306721    +   H3x1_3  = EXP(H3x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_3 = EXP(H3x1_3 - _MAX_);
306722    +   _SUM_ = _SUM_ + H3x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_3 ;
306723    +   H3x1_4  = EXP(H3x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_4 = EXP(H3x1_4 - _MAX_);
306724    +   _SUM_ = _SUM_ + H3x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_4 ;
306725    +   H3x1_5  = EXP(H3x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_5 = EXP(H3x1_5 - _MAX_);
306726    +   _SUM_ = _SUM_ + H3x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_5 ;
306727    +   H3x1_6  = EXP(H3x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_6 = EXP(H3x1_6 - _MAX_);
306728    +   _SUM_ = _SUM_ + H3x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_6 ;
306729    +   H3x1_1  = H3x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 / _SUM_;
306730    +   H3x1_2  = H3x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_2 = H3x1_2 / _SUM_;
306731    +   H3x1_3  = H3x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_3 = H3x1_3 / _SUM_;
306732    +   H3x1_4  = H3x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_4 = H3x1_4 / _SUM_;
306733    +   H3x1_5  = H3x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_5 = H3x1_5 / _SUM_;
306734    +   H3x1_6  = H3x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_6 = H3x1_6 / _SUM_;
306735    +END;
MPRINT(EM_DIAGRAM):   END;
306736    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
306737    +   H3x1_1  = .;
MPRINT(EM_DIAGRAM):   H3x1_1 = .;
306738    +   H3x1_2  = .;
MPRINT(EM_DIAGRAM):   H3x1_2 = .;
306739    +   H3x1_3  = .;
MPRINT(EM_DIAGRAM):   H3x1_3 = .;
306740    +   H3x1_4  = .;
MPRINT(EM_DIAGRAM):   H3x1_4 = .;
306741    +   H3x1_5  = .;
MPRINT(EM_DIAGRAM):   H3x1_5 = .;
306742    +   H3x1_6  = .;
MPRINT(EM_DIAGRAM):   H3x1_6 = .;
306743    +END;
MPRINT(EM_DIAGRAM):   END;
306744    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
306745    +*** Writing the Node H3x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x2_ ;
306746    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
306747    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
306748    +   H3x2_1  =     0.13469056275633 * H2x1_1  +    -1.31570873196603 * H2x1_2
306749    +          +    -0.83004507775706 * H2x1_3  +     1.14954585467995 * H2x1_4
306750    +          +     0.01234753333089 * H2x1_5  +     0.50683843245151 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x2_1 = 0.13469056275633 * H2x1_1 + -1.31570873196603 * H2x1_2 + 
-0.83004507775706 * H2x1_3 + 1.14954585467995 * H2x1_4 + 0.01234753333089 * H2x1_5 + 
0.50683843245151 * H2x1_6 ;
306751    +   H3x2_2  =     2.58620633866114 * H2x1_1  +     0.37629863890202 * H2x1_2
306752    +          +     0.34169762900278 * H2x1_3  +     1.24247313002596 * H2x1_4
306753    +          +     -0.1965463932822 * H2x1_5  +    -0.00458488228083 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x2_2 = 2.58620633866114 * H2x1_1 + 0.37629863890202 * H2x1_2 + 
0.34169762900278 * H2x1_3 + 1.24247313002596 * H2x1_4 + -0.1965463932822 * H2x1_5 + 
-0.00458488228083 * H2x1_6 ;
306754    +   H3x2_3  =    -2.01883694738218 * H2x1_1  +     0.83782353926562 * H2x1_2
306755    +          +    -1.95119268200972 * H2x1_3  +    -1.04826190833003 * H2x1_4
306756    +          +     1.66733023346498 * H2x1_5  +     0.23483419363088 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x2_3 = -2.01883694738218 * H2x1_1 + 0.83782353926562 * H2x1_2 + 
-1.95119268200972 * H2x1_3 + -1.04826190833003 * H2x1_4 + 1.66733023346498 * H2x1_5 + 
0.23483419363088 * H2x1_6 ;
306757    +   H3x2_4  =     0.40678642111393 * H2x1_1  +    -0.10557612663286 * H2x1_2
306758    +          +    -0.34694532874387 * H2x1_3  +     -1.6967916788772 * H2x1_4
306759    +          +     0.24026556349373 * H2x1_5  +    -0.69393637888423 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x2_4 = 0.40678642111393 * H2x1_1 + -0.10557612663286 * H2x1_2 + 
-0.34694532874387 * H2x1_3 + -1.6967916788772 * H2x1_4 + 0.24026556349373 * H2x1_5 + 
-0.69393637888423 * H2x1_6 ;
306760    +   H3x2_5  =    -1.48304630985783 * H2x1_1  +     0.87426655970556 * H2x1_2
306761    +          +    -0.49899516599841 * H2x1_3  +    -1.94880978312007 * H2x1_4
306762    +          +    -2.45275015055877 * H2x1_5  +    -0.03264500335093 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x2_5 = -1.48304630985783 * H2x1_1 + 0.87426655970556 * H2x1_2 + 
-0.49899516599841 * H2x1_3 + -1.94880978312007 * H2x1_4 + -2.45275015055877 * H2x1_5 + 
-0.03264500335093 * H2x1_6 ;
306763    +   H3x2_1  = H3x2_1  +    -0.40915299509566 * H2x2_1
306764    +          +     1.45952180668254 * H2x2_2  +     0.42420517277224 * H2x2_3
306765    +          +    -0.79379446044158 * H2x2_4  +     0.73614212418439 * H2x2_5
306766    +          +     -0.6527392657117 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x2_1 = H3x2_1 + -0.40915299509566 * H2x2_1 + 1.45952180668254 * H2x2_2 
+ 0.42420517277224 * H2x2_3 + -0.79379446044158 * H2x2_4 + 0.73614212418439 * H2x2_5 + 
-0.6527392657117 * H2x2_6 ;
306767    +   H3x2_2  = H3x2_2  +    -1.62752321860626 * H2x2_1
306768    +          +    -0.04689831325067 * H2x2_2  +    -2.87951125721119 * H2x2_3
306769    +          +    -0.36181303609331 * H2x2_4  +     0.55999175715209 * H2x2_5
306770    +          +    -0.40911363767301 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x2_2 = H3x2_2 + -1.62752321860626 * H2x2_1 + -0.04689831325067 * 
H2x2_2 + -2.87951125721119 * H2x2_3 + -0.36181303609331 * H2x2_4 + 0.55999175715209 * H2x2_5 + 
-0.40911363767301 * H2x2_6 ;
306771    +   H3x2_3  = H3x2_3  +     0.50766404641726 * H2x2_1
306772    +          +     0.02747397544049 * H2x2_2  +    -1.35626517144826 * H2x2_3
306773    +          +     0.23390260329386 * H2x2_4  +     -0.5025118845527 * H2x2_5
306774    +          +    -1.14035867434772 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x2_3 = H3x2_3 + 0.50766404641726 * H2x2_1 + 0.02747397544049 * H2x2_2 
+ -1.35626517144826 * H2x2_3 + 0.23390260329386 * H2x2_4 + -0.5025118845527 * H2x2_5 + 
-1.14035867434772 * H2x2_6 ;
306775    +   H3x2_4  = H3x2_4  +     0.64958154360038 * H2x2_1
306776    +          +     1.68671947742627 * H2x2_2  +    -0.42417215632785 * H2x2_3
306777    +          +    -0.39675884102374 * H2x2_4  +     1.98354732887496 * H2x2_5
306778    +          +    -1.32783167695801 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x2_4 = H3x2_4 + 0.64958154360038 * H2x2_1 + 1.68671947742627 * H2x2_2 
+ -0.42417215632785 * H2x2_3 + -0.39675884102374 * H2x2_4 + 1.98354732887496 * H2x2_5 + 
-1.32783167695801 * H2x2_6 ;
306779    +   H3x2_5  = H3x2_5  +     1.92075053147101 * H2x2_1
306780    +          +     1.22293096034837 * H2x2_2  +    -0.74039853818796 * H2x2_3
306781    +          +    -0.25033258903105 * H2x2_4  +     0.63358340091733 * H2x2_5
306782    +          +     0.17488501957475 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x2_5 = H3x2_5 + 1.92075053147101 * H2x2_1 + 1.22293096034837 * H2x2_2 
+ -0.74039853818796 * H2x2_3 + -0.25033258903105 * H2x2_4 + 0.63358340091733 * H2x2_5 + 
0.17488501957475 * H2x2_6 ;
306783    +   H3x2_1  = H3x2_1  +     0.88292932547634 * H2x3_1
306784    +          +    -0.27631908402136 * H2x3_2  +     0.93133699792762 * H2x3_3
306785    +          +     1.18769264917434 * H2x3_4  +    -0.88901652244884 * H2x3_5
306786    +          +    -0.17544617255869 * H2x3_6 ;
MPRINT(EM_DIAGRAM):   H3x2_1 = H3x2_1 + 0.88292932547634 * H2x3_1 + -0.27631908402136 * H2x3_2 
+ 0.93133699792762 * H2x3_3 + 1.18769264917434 * H2x3_4 + -0.88901652244884 * H2x3_5 + 
-0.17544617255869 * H2x3_6 ;
306787    +   H3x2_2  = H3x2_2  +     0.71538502917742 * H2x3_1
306788    +          +    -0.76848695288598 * H2x3_2  +     1.24503864708272 * H2x3_3
306789    +          +    -0.93962158881999 * H2x3_4  +    -0.43383001812557 * H2x3_5
306790    +          +     1.14672043219259 * H2x3_6 ;
MPRINT(EM_DIAGRAM):   H3x2_2 = H3x2_2 + 0.71538502917742 * H2x3_1 + -0.76848695288598 * H2x3_2 
+ 1.24503864708272 * H2x3_3 + -0.93962158881999 * H2x3_4 + -0.43383001812557 * H2x3_5 + 
1.14672043219259 * H2x3_6 ;
306791    +   H3x2_3  = H3x2_3  +    -0.39933331346344 * H2x3_1
306792    +          +      0.0019862182661 * H2x3_2  +    -0.60479718136768 * H2x3_3
306793    +          +      1.3818804125218 * H2x3_4  +     0.13498986352108 * H2x3_5
306794    +          +     1.02889511152823 * H2x3_6 ;
MPRINT(EM_DIAGRAM):   H3x2_3 = H3x2_3 + -0.39933331346344 * H2x3_1 + 0.0019862182661 * H2x3_2 
+ -0.60479718136768 * H2x3_3 + 1.3818804125218 * H2x3_4 + 0.13498986352108 * H2x3_5 + 
1.02889511152823 * H2x3_6 ;
306795    +   H3x2_4  = H3x2_4  +    -1.24198502624302 * H2x3_1
306796    +          +    -0.09061963757116 * H2x3_2  +    -0.70229381972412 * H2x3_3
306797    +          +    -1.43988785716026 * H2x3_4  +     0.45188902401215 * H2x3_5
306798    +          +     0.10073869982371 * H2x3_6 ;
MPRINT(EM_DIAGRAM):   H3x2_4 = H3x2_4 + -1.24198502624302 * H2x3_1 + -0.09061963757116 * 
H2x3_2 + -0.70229381972412 * H2x3_3 + -1.43988785716026 * H2x3_4 + 0.45188902401215 * H2x3_5 + 
0.10073869982371 * H2x3_6 ;
306799    +   H3x2_5  = H3x2_5  +     0.13815223958312 * H2x3_1
306800    +          +     0.38392032129472 * H2x3_2  +    -0.08374178846724 * H2x3_3
306801    +          +     0.39613433726611 * H2x3_4  +     1.64049322745471 * H2x3_5
306802    +          +     0.97496084656174 * H2x3_6 ;
MPRINT(EM_DIAGRAM):   H3x2_5 = H3x2_5 + 0.13815223958312 * H2x3_1 + 0.38392032129472 * H2x3_2 
+ -0.08374178846724 * H2x3_3 + 0.39613433726611 * H2x3_4 + 1.64049322745471 * H2x3_5 + 
0.97496084656174 * H2x3_6 ;
306803    +   H3x2_1  =    -0.72845954974251 + H3x2_1 ;
MPRINT(EM_DIAGRAM):   H3x2_1 = -0.72845954974251 + H3x2_1 ;
306804    +   H3x2_2  =     0.59148824718722 + H3x2_2 ;
MPRINT(EM_DIAGRAM):   H3x2_2 = 0.59148824718722 + H3x2_2 ;
306805    +   H3x2_3  =     1.28031731320103 + H3x2_3 ;
MPRINT(EM_DIAGRAM):   H3x2_3 = 1.28031731320103 + H3x2_3 ;
306806    +   H3x2_4  =    -0.11427038364635 + H3x2_4 ;
MPRINT(EM_DIAGRAM):   H3x2_4 = -0.11427038364635 + H3x2_4 ;
306807    +   H3x2_5  =    -0.28699725292326 + H3x2_5 ;
MPRINT(EM_DIAGRAM):   H3x2_5 = -0.28699725292326 + H3x2_5 ;
306808    +   H3x2_6  = 0;
MPRINT(EM_DIAGRAM):   H3x2_6 = 0;
306809    +   _MAX_ = MAX (H3x2_1 , H3x2_2 , H3x2_3 , H3x2_4 , H3x2_5 , H3x2_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H3x2_1 , H3x2_2 , H3x2_3 , H3x2_4 , H3x2_5 , H3x2_6 );
306810    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
306811    +   H3x2_1  = EXP(H3x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x2_1 = EXP(H3x2_1 - _MAX_);
306812    +   _SUM_ = _SUM_ + H3x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x2_1 ;
306813    +   H3x2_2  = EXP(H3x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x2_2 = EXP(H3x2_2 - _MAX_);
306814    +   _SUM_ = _SUM_ + H3x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x2_2 ;
306815    +   H3x2_3  = EXP(H3x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x2_3 = EXP(H3x2_3 - _MAX_);
306816    +   _SUM_ = _SUM_ + H3x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x2_3 ;
306817    +   H3x2_4  = EXP(H3x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x2_4 = EXP(H3x2_4 - _MAX_);
306818    +   _SUM_ = _SUM_ + H3x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x2_4 ;
306819    +   H3x2_5  = EXP(H3x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x2_5 = EXP(H3x2_5 - _MAX_);
306820    +   _SUM_ = _SUM_ + H3x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x2_5 ;
306821    +   H3x2_6  = EXP(H3x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x2_6 = EXP(H3x2_6 - _MAX_);
306822    +   _SUM_ = _SUM_ + H3x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x2_6 ;
306823    +   H3x2_1  = H3x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x2_1 = H3x2_1 / _SUM_;
306824    +   H3x2_2  = H3x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x2_2 = H3x2_2 / _SUM_;
306825    +   H3x2_3  = H3x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x2_3 = H3x2_3 / _SUM_;
306826    +   H3x2_4  = H3x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x2_4 = H3x2_4 / _SUM_;
306827    +   H3x2_5  = H3x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x2_5 = H3x2_5 / _SUM_;
306828    +   H3x2_6  = H3x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x2_6 = H3x2_6 / _SUM_;
306829    +END;
MPRINT(EM_DIAGRAM):   END;
306830    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
306831    +   H3x2_1  = .;
MPRINT(EM_DIAGRAM):   H3x2_1 = .;
306832    +   H3x2_2  = .;
MPRINT(EM_DIAGRAM):   H3x2_2 = .;
306833    +   H3x2_3  = .;
MPRINT(EM_DIAGRAM):   H3x2_3 = .;
306834    +   H3x2_4  = .;
MPRINT(EM_DIAGRAM):   H3x2_4 = .;
306835    +   H3x2_5  = .;
MPRINT(EM_DIAGRAM):   H3x2_5 = .;
306836    +   H3x2_6  = .;
MPRINT(EM_DIAGRAM):   H3x2_6 = .;
306837    +END;
MPRINT(EM_DIAGRAM):   END;
306838    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
306839    +*** Writing the Node H4x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H4x1_ ;
306840    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
306841    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
306842    +   H4x1_1  =     0.10986960182278 * H3x1_1  +    -0.10835805909937 * H3x1_2
306843    +          +     1.78643376838566 * H3x1_3  +    -0.00067995179919 * H3x1_4
306844    +          +     2.04711620528782 * H3x1_5  +    -0.66853997603718 * H3x1_6 ;
MPRINT(EM_DIAGRAM):   H4x1_1 = 0.10986960182278 * H3x1_1 + -0.10835805909937 * H3x1_2 + 
1.78643376838566 * H3x1_3 + -0.00067995179919 * H3x1_4 + 2.04711620528782 * H3x1_5 + 
-0.66853997603718 * H3x1_6 ;
306845    +   H4x1_2  =    -0.17187141657369 * H3x1_1  +    -1.56897037747293 * H3x1_2
306846    +          +    -1.38330818097338 * H3x1_3  +     3.94629669251083 * H3x1_4
306847    +          +    -0.57201557221624 * H3x1_5  +     0.99276034828548 * H3x1_6 ;
MPRINT(EM_DIAGRAM):   H4x1_2 = -0.17187141657369 * H3x1_1 + -1.56897037747293 * H3x1_2 + 
-1.38330818097338 * H3x1_3 + 3.94629669251083 * H3x1_4 + -0.57201557221624 * H3x1_5 + 
0.99276034828548 * H3x1_6 ;
306848    +   H4x1_3  =      1.5223304212488 * H3x1_1  +    -0.33490912702371 * H3x1_2
306849    +          +    -0.30324493540575 * H3x1_3  +    -1.23990036921669 * H3x1_4
306850    +          +     0.77489370055267 * H3x1_5  +    -0.38609823936674 * H3x1_6 ;
MPRINT(EM_DIAGRAM):   H4x1_3 = 1.5223304212488 * H3x1_1 + -0.33490912702371 * H3x1_2 + 
-0.30324493540575 * H3x1_3 + -1.23990036921669 * H3x1_4 + 0.77489370055267 * H3x1_5 + 
-0.38609823936674 * H3x1_6 ;
306851    +   H4x1_4  =    -0.75234452297837 * H3x1_1  +      1.1117782900703 * H3x1_2
306852    +          +      1.0171911341496 * H3x1_3  +     2.31462824862723 * H3x1_4
306853    +          +     1.05562639649812 * H3x1_5  +    -0.80603399686936 * H3x1_6 ;
MPRINT(EM_DIAGRAM):   H4x1_4 = -0.75234452297837 * H3x1_1 + 1.1117782900703 * H3x1_2 + 
1.0171911341496 * H3x1_3 + 2.31462824862723 * H3x1_4 + 1.05562639649812 * H3x1_5 + 
-0.80603399686936 * H3x1_6 ;
306854    +   H4x1_5  =    -0.35441774309359 * H3x1_1  +     0.37408435161205 * H3x1_2
306855    +          +    -0.79287886005891 * H3x1_3  +    -0.89695291885453 * H3x1_4
306856    +          +     0.46220429367054 * H3x1_5  +    -1.56166867584216 * H3x1_6 ;
MPRINT(EM_DIAGRAM):   H4x1_5 = -0.35441774309359 * H3x1_1 + 0.37408435161205 * H3x1_2 + 
-0.79287886005891 * H3x1_3 + -0.89695291885453 * H3x1_4 + 0.46220429367054 * H3x1_5 + 
-1.56166867584216 * H3x1_6 ;
306857    +   H4x1_1  = H4x1_1  +    -1.12622282402713 * H3x2_1
306858    +          +     2.43865739917959 * H3x2_2  +     1.62534005409988 * H3x2_3
306859    +          +     0.83506165677151 * H3x2_4  +    -0.15894659563972 * H3x2_5
306860    +          +     0.77216806897502 * H3x2_6 ;
MPRINT(EM_DIAGRAM):   H4x1_1 = H4x1_1 + -1.12622282402713 * H3x2_1 + 2.43865739917959 * H3x2_2 
+ 1.62534005409988 * H3x2_3 + 0.83506165677151 * H3x2_4 + -0.15894659563972 * H3x2_5 + 
0.77216806897502 * H3x2_6 ;
306861    +   H4x1_2  = H4x1_2  +     0.96736353410956 * H3x2_1
306862    +          +      1.6250281874285 * H3x2_2  +    -0.81418318229631 * H3x2_3
306863    +          +     0.35282111325987 * H3x2_4  +     0.11187473980261 * H3x2_5
306864    +          +     0.73971378600397 * H3x2_6 ;
MPRINT(EM_DIAGRAM):   H4x1_2 = H4x1_2 + 0.96736353410956 * H3x2_1 + 1.6250281874285 * H3x2_2 + 
-0.81418318229631 * H3x2_3 + 0.35282111325987 * H3x2_4 + 0.11187473980261 * H3x2_5 + 
0.73971378600397 * H3x2_6 ;
306865    +   H4x1_3  = H4x1_3  +    -0.30588247178582 * H3x2_1
306866    +          +     0.22302184288326 * H3x2_2  +    -0.15797620108073 * H3x2_3
306867    +          +     1.18515955770896 * H3x2_4  +     0.43359240886537 * H3x2_5
306868    +          +     0.90907054011344 * H3x2_6 ;
MPRINT(EM_DIAGRAM):   H4x1_3 = H4x1_3 + -0.30588247178582 * H3x2_1 + 0.22302184288326 * H3x2_2 
+ -0.15797620108073 * H3x2_3 + 1.18515955770896 * H3x2_4 + 0.43359240886537 * H3x2_5 + 
0.90907054011344 * H3x2_6 ;
306869    +   H4x1_4  = H4x1_4  +    -0.26678025657796 * H3x2_1
306870    +          +    -0.23171152283695 * H3x2_2  +    -0.72882061581264 * H3x2_3
306871    +          +     0.68597418643333 * H3x2_4  +      0.6559090638639 * H3x2_5
306872    +          +     0.95412028439169 * H3x2_6 ;
MPRINT(EM_DIAGRAM):   H4x1_4 = H4x1_4 + -0.26678025657796 * H3x2_1 + -0.23171152283695 * 
H3x2_2 + -0.72882061581264 * H3x2_3 + 0.68597418643333 * H3x2_4 + 0.6559090638639 * H3x2_5 + 
0.95412028439169 * H3x2_6 ;
306873    +   H4x1_5  = H4x1_5  +    -0.77875602324955 * H3x2_1
306874    +          +     -1.5646810153964 * H3x2_2  +    -0.53157591270506 * H3x2_3
306875    +          +    -0.27917864191674 * H3x2_4  +    -1.10966192483404 * H3x2_5
306876    +          +     -0.0058627670025 * H3x2_6 ;
MPRINT(EM_DIAGRAM):   H4x1_5 = H4x1_5 + -0.77875602324955 * H3x2_1 + -1.5646810153964 * H3x2_2 
+ -0.53157591270506 * H3x2_3 + -0.27917864191674 * H3x2_4 + -1.10966192483404 * H3x2_5 + 
-0.0058627670025 * H3x2_6 ;
306877    +   H4x1_1  =     0.87937070574208 + H4x1_1 ;
MPRINT(EM_DIAGRAM):   H4x1_1 = 0.87937070574208 + H4x1_1 ;
306878    +   H4x1_2  =     0.75203729660648 + H4x1_2 ;
MPRINT(EM_DIAGRAM):   H4x1_2 = 0.75203729660648 + H4x1_2 ;
306879    +   H4x1_3  =     1.14889100908291 + H4x1_3 ;
MPRINT(EM_DIAGRAM):   H4x1_3 = 1.14889100908291 + H4x1_3 ;
306880    +   H4x1_4  =    -1.71383624276913 + H4x1_4 ;
MPRINT(EM_DIAGRAM):   H4x1_4 = -1.71383624276913 + H4x1_4 ;
306881    +   H4x1_5  =     0.22194774900585 + H4x1_5 ;
MPRINT(EM_DIAGRAM):   H4x1_5 = 0.22194774900585 + H4x1_5 ;
306882    +   H4x1_6  = 0;
MPRINT(EM_DIAGRAM):   H4x1_6 = 0;
306883    +   _MAX_ = MAX (H4x1_1 , H4x1_2 , H4x1_3 , H4x1_4 , H4x1_5 , H4x1_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H4x1_1 , H4x1_2 , H4x1_3 , H4x1_4 , H4x1_5 , H4x1_6 );
306884    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
306885    +   H4x1_1  = EXP(H4x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H4x1_1 = EXP(H4x1_1 - _MAX_);
306886    +   _SUM_ = _SUM_ + H4x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H4x1_1 ;
306887    +   H4x1_2  = EXP(H4x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H4x1_2 = EXP(H4x1_2 - _MAX_);
306888    +   _SUM_ = _SUM_ + H4x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H4x1_2 ;
306889    +   H4x1_3  = EXP(H4x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H4x1_3 = EXP(H4x1_3 - _MAX_);
306890    +   _SUM_ = _SUM_ + H4x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H4x1_3 ;
306891    +   H4x1_4  = EXP(H4x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H4x1_4 = EXP(H4x1_4 - _MAX_);
306892    +   _SUM_ = _SUM_ + H4x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H4x1_4 ;
306893    +   H4x1_5  = EXP(H4x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H4x1_5 = EXP(H4x1_5 - _MAX_);
306894    +   _SUM_ = _SUM_ + H4x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H4x1_5 ;
306895    +   H4x1_6  = EXP(H4x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H4x1_6 = EXP(H4x1_6 - _MAX_);
306896    +   _SUM_ = _SUM_ + H4x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H4x1_6 ;
306897    +   H4x1_1  = H4x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H4x1_1 = H4x1_1 / _SUM_;
306898    +   H4x1_2  = H4x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H4x1_2 = H4x1_2 / _SUM_;
306899    +   H4x1_3  = H4x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H4x1_3 = H4x1_3 / _SUM_;
306900    +   H4x1_4  = H4x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H4x1_4 = H4x1_4 / _SUM_;
306901    +   H4x1_5  = H4x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H4x1_5 = H4x1_5 / _SUM_;
306902    +   H4x1_6  = H4x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H4x1_6 = H4x1_6 / _SUM_;
306903    +END;
MPRINT(EM_DIAGRAM):   END;
306904    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
306905    +   H4x1_1  = .;
MPRINT(EM_DIAGRAM):   H4x1_1 = .;
306906    +   H4x1_2  = .;
MPRINT(EM_DIAGRAM):   H4x1_2 = .;
306907    +   H4x1_3  = .;
MPRINT(EM_DIAGRAM):   H4x1_3 = .;
306908    +   H4x1_4  = .;
MPRINT(EM_DIAGRAM):   H4x1_4 = .;
306909    +   H4x1_5  = .;
MPRINT(EM_DIAGRAM):   H4x1_5 = .;
306910    +   H4x1_6  = .;
MPRINT(EM_DIAGRAM):   H4x1_6 = .;
306911    +END;
MPRINT(EM_DIAGRAM):   END;
306912    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
306913    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
306914    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
306915    +
306916    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
306917    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
306918    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
306919    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
306920    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
306921    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
306922    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
306923    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
306924    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
306925    +end;
MPRINT(EM_DIAGRAM):   end;
306926    +else do;
MPRINT(EM_DIAGRAM):   else do;
306927    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
306928    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
306929    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
306930    +   end;
MPRINT(EM_DIAGRAM):   end;
306931    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
306932    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
306933    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
306934    +   end;
MPRINT(EM_DIAGRAM):   end;
306935    +   else do;
MPRINT(EM_DIAGRAM):   else do;
306936    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
306937    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
306938    +   end;
MPRINT(EM_DIAGRAM):   end;
The SAS System

306939    +end;
MPRINT(EM_DIAGRAM):   end;
306940    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
306941    +   P_DepVar1  =    -5.30721919155126 * H4x1_1  +     10.4301477552223 * H4x1_2
306942    +          +    -3.40676330075486 * H4x1_3  +     0.07452634039202 * H4x1_4
306943    +          +    -2.90585821687293 * H4x1_5  +    -2.63321710569292 * H4x1_6 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -5.30721919155126 * H4x1_1 + 10.4301477552223 * H4x1_2 + 
-3.40676330075486 * H4x1_3 + 0.07452634039202 * H4x1_4 + -2.90585821687293 * H4x1_5 + 
-2.63321710569292 * H4x1_6 ;
306944    +   P_DepVar1  =    -2.93956196427421 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.93956196427421 + P_DepVar1 ;
306945    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
306946    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
306947    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
306948    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
306949    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
306950    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
306951    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
306952    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
306953    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
306954    +END;
MPRINT(EM_DIAGRAM):   END;
306955    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
306956    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
306957    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
306958    +END;
MPRINT(EM_DIAGRAM):   END;
306959    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
306960    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
306961    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
306962    +END;
MPRINT(EM_DIAGRAM):   END;
306963    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
306964    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
306965    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
306966    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
306967    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
306968    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
306969    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
306970    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
306971    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
306972    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
306973    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
306974    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
306975    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
306976    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
306977    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
306978    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
306979    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
306980    +END;
MPRINT(EM_DIAGRAM):   END;
306981    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
306982    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
306983    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
306984    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
306985    +* Renaming variables for AutoNeural28;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural28;
306986    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
306987    +* Renaming Posterior variables for AutoNeural28;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural28;
306988    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
306989    +drop AutoNeural28_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural28_P_DepVar1;
306990    +AutoNeural28_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural28_P_DepVar1 = P_DepVar1;
306991    +drop AutoNeural28_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural28_P_DepVar0;
306992    +AutoNeural28_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural28_P_DepVar0 = P_DepVar0;
306993    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
306994    +* Renaming _WARN_ variable for AutoNeural28;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural28;
306995    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
306996    +length AutoNeural28_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural28_WARN_ $4;
306997    +drop AutoNeural28_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural28_WARN_;
306998    +AutoNeural28_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural28_WARN_ = _WARN_;
306999    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
307000    +* Ensmbl19: Scoring Code of model 3 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl19: Scoring Code of model 3 of 5;
307001    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
307002    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
307003    +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
307004    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
307005    +* NODE: Neural28;
MPRINT(EM_DIAGRAM):   * NODE: Neural28;
307006    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
307007    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
307008    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
307009    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
307010    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
307011    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
307012    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
307013    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
307014    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
307015    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
307016    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
307017    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
307018    +LENGTH _WARN_ $4
307019    +      F_DepVar  $ 12
307020    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
307021    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
307022    +
307023    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
307024    +
307025    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
307026    +
307027    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
307028    +
307029    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
307030    +
307031    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
307032    +
307033    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
307034    +
307035    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
307036    +
307037    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
307038    +
307039    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
307040    +
307041    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
307042    +
307043    +      label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
307044    +
307045    +      label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
307046    +
307047    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
307048    +
307049    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
307050    +
307051    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
307052    +
307053    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
307054    +
307055    +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
307056    +
307057    +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
307058    +
307059    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
307060    +
307061    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
307062    +
307063    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
307064    +
307065    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
307066    +
307067    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
307068    +
307069    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
307070    +
307071    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
307072    +
307073    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
307074    +
307075    +*** Generate dummy variables for G_Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for G_Marital_Status ;
307076    +drop G_Marital_Status0 G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   drop G_Marital_Status0 G_Marital_Status1 ;
307077    +if missing( G_Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( G_Marital_Status ) then do;
307078    +   G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
307079    +   G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
307080    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
307081    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
307082    +end;
MPRINT(EM_DIAGRAM):   end;
307083    +else do;
MPRINT(EM_DIAGRAM):   else do;
307084    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
307085    +   _dm12 = put( G_Marital_Status , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( G_Marital_Status , BEST12. );
307086    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
307087    +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
307088    +      G_Marital_Status0 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = -1;
307089    +      G_Marital_Status1 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = -1;
307090    +   end;
MPRINT(EM_DIAGRAM):   end;
307091    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
307092    +      G_Marital_Status0 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 1;
307093    +      G_Marital_Status1 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 0;
307094    +   end;
MPRINT(EM_DIAGRAM):   end;
307095    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
307096    +      G_Marital_Status0 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 0;
307097    +      G_Marital_Status1 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 1;
307098    +   end;
MPRINT(EM_DIAGRAM):   end;
307099    +   else do;
MPRINT(EM_DIAGRAM):   else do;
307100    +      G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
307101    +      G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
307102    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
307103    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
307104    +   end;
MPRINT(EM_DIAGRAM):   end;
307105    +end;
MPRINT(EM_DIAGRAM):   end;
307106    +
307107    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
307108    +*** Checking missing input Interval
307109    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
307110    +
307111    +IF NMISS(
307112    +   AcceptedCmpTotal ,
307113    +   Frq ,
307114    +   Income ,
307115    +   Mnt ,
307116    +   MntGoldProds ,
307117    +   MntMeatProducts ,
307118    +   MntWines ,
307119    +   NumDistPurchases ,
307120    +   RFMstat ,
307121    +   RMntFrq ,
307122    +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntGoldProds , 
MntMeatProducts , MntWines , NumDistPurchases , RFMstat , RMntFrq , Recency ) THEN DO;
307123    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
307124    +
307125    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
307126    +END;
MPRINT(EM_DIAGRAM):   END;
307127    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
307128    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
307129    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
307130    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
307131    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
307132    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
307133    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
307134    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
307135    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
307136    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
307137    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
307138    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
307139    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
307140    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
307141    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
307142    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
307143    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
307144    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
307145    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
307146    +END;
MPRINT(EM_DIAGRAM):   END;
307147    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
307148    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
307149    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
307150    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
307151    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
307152    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
307153    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
307154    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
307155    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
307156    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
307157    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
307158    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
307159    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
307160    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
307161    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
307162    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
307163    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
307164    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
307165    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
307166    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
307167    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
307168    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
307169    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
307170    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
307171    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
307172    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
307173    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
307174    +END;
MPRINT(EM_DIAGRAM):   END;
307175    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
307176    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
307177    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
307178    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
307179    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
307180    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
307181    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
307182    +   H11  =     0.40839920245437 * S_AcceptedCmpTotal  +    -0.80301052154323 *
307183    +        S_Frq  +     0.19839975683497 * S_Income  +    -0.71099382445924 *
307184    +        S_Mnt  +    -0.15644638799226 * S_MntGoldProds
307185    +          +    -0.05910355740416 * S_MntMeatProducts
307186    +          +     0.23095157103241 * S_MntWines  +     0.67840217585411 *
307187    +        S_NumDistPurchases  +     0.12536920827324 * S_RFMstat
307188    +          +    -0.27246125863137 * S_RMntFrq  +    -1.02114645988925 *
307189    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H11 = 0.40839920245437 * S_AcceptedCmpTotal + -0.80301052154323 * S_Frq 
+ 0.19839975683497 * S_Income + -0.71099382445924 * S_Mnt + -0.15644638799226 * S_MntGoldProds 
+ -0.05910355740416 * S_MntMeatProducts + 0.23095157103241 * S_MntWines + 0.67840217585411 * 
S_NumDistPurchases + 0.12536920827324 * S_RFMstat + -0.27246125863137 * S_RMntFrq + 
-1.02114645988925 * S_Recency ;
307190    +   H12  =    -0.09503041118006 * S_AcceptedCmpTotal  +     0.74672296647411 *
307191    +        S_Frq  +     1.82688988564051 * S_Income  +    -0.06831964209279 *
307192    +        S_Mnt  +    -0.13330887266177 * S_MntGoldProds
307193    +          +     0.09400377526937 * S_MntMeatProducts
307194    +          +    -0.53358910675611 * S_MntWines  +     0.13886503925085 *
307195    +        S_NumDistPurchases  +     0.02243224025219 * S_RFMstat
307196    +          +    -0.03110171961938 * S_RMntFrq  +     0.39055670382948 *
307197    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H12 = -0.09503041118006 * S_AcceptedCmpTotal + 0.74672296647411 * S_Frq 
+ 1.82688988564051 * S_Income + -0.06831964209279 * S_Mnt + -0.13330887266177 * S_MntGoldProds 
+ 0.09400377526937 * S_MntMeatProducts + -0.53358910675611 * S_MntWines + 0.13886503925085 * 
S_NumDistPurchases + 0.02243224025219 * S_RFMstat + -0.03110171961938 * S_RMntFrq + 
0.39055670382948 * S_Recency ;
307198    +   H13  =    -0.07144509122078 * S_AcceptedCmpTotal  +     0.65325962599673 *
307199    +        S_Frq  +     0.03169199805286 * S_Income  +     0.53573115818994 *
307200    +        S_Mnt  +     0.13372718478424 * S_MntGoldProds
307201    +          +    -1.62740823190029 * S_MntMeatProducts
307202    +          +     0.15642273844597 * S_MntWines  +    -0.78908066213044 *
307203    +        S_NumDistPurchases  +     -0.4365555360753 * S_RFMstat
307204    +          +    -0.63552932650743 * S_RMntFrq  +     0.17699292292485 *
307205    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H13 = -0.07144509122078 * S_AcceptedCmpTotal + 0.65325962599673 * S_Frq 
+ 0.03169199805286 * S_Income + 0.53573115818994 * S_Mnt + 0.13372718478424 * S_MntGoldProds + 
-1.62740823190029 * S_MntMeatProducts + 0.15642273844597 * S_MntWines + -0.78908066213044 * 
S_NumDistPurchases + -0.4365555360753 * S_RFMstat + -0.63552932650743 * S_RMntFrq + 
0.17699292292485 * S_Recency ;
307206    +   H14  =     0.03098188354318 * S_AcceptedCmpTotal  +    -0.04737735825642 *
307207    +        S_Frq  +     0.30967861276694 * S_Income  +    -0.03786683388502 *
307208    +        S_Mnt  +     0.25532115520236 * S_MntGoldProds
307209    +          +      0.3965117290354 * S_MntMeatProducts
307210    +          +     0.36188945634536 * S_MntWines  +    -0.24664355133344 *
307211    +        S_NumDistPurchases  +     0.15627885374544 * S_RFMstat
307212    +          +    -0.10763737759383 * S_RMntFrq  +     -0.4091862538023 *
307213    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H14 = 0.03098188354318 * S_AcceptedCmpTotal + -0.04737735825642 * S_Frq 
+ 0.30967861276694 * S_Income + -0.03786683388502 * S_Mnt + 0.25532115520236 * S_MntGoldProds 
+ 0.3965117290354 * S_MntMeatProducts + 0.36188945634536 * S_MntWines + -0.24664355133344 * 
S_NumDistPurchases + 0.15627885374544 * S_RFMstat + -0.10763737759383 * S_RMntFrq + 
-0.4091862538023 * S_Recency ;
307214    +   H15  =     0.27467896926965 * S_AcceptedCmpTotal  +    -1.33897347254907 *
307215    +        S_Frq  +    -0.08574739739253 * S_Income  +    -0.68536026344277 *
307216    +        S_Mnt  +     0.08729572232071 * S_MntGoldProds
307217    +          +     1.44231431118379 * S_MntMeatProducts
307218    +          +    -0.09322237385561 * S_MntWines  +      1.5568901785563 *
307219    +        S_NumDistPurchases  +     0.06237505409693 * S_RFMstat
307220    +          +    -1.04636887800306 * S_RMntFrq  +    -0.38411527089703 *
307221    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H15 = 0.27467896926965 * S_AcceptedCmpTotal + -1.33897347254907 * S_Frq 
+ -0.08574739739253 * S_Income + -0.68536026344277 * S_Mnt + 0.08729572232071 * S_MntGoldProds 
+ 1.44231431118379 * S_MntMeatProducts + -0.09322237385561 * S_MntWines + 1.5568901785563 * 
S_NumDistPurchases + 0.06237505409693 * S_RFMstat + -1.04636887800306 * S_RMntFrq + 
-0.38411527089703 * S_Recency ;
307222    +   H16  =    -0.89143353938241 * S_AcceptedCmpTotal  +     0.45211708970504 *
307223    +        S_Frq  +    -0.44897699945178 * S_Income  +    -0.32314426452158 *
307224    +        S_Mnt  +    -0.32329530597419 * S_MntGoldProds
307225    +          +    -0.44244305964257 * S_MntMeatProducts
307226    +          +    -0.04171589876809 * S_MntWines  +     0.42122451368745 *
307227    +        S_NumDistPurchases  +    -0.15802898075961 * S_RFMstat
307228    +          +    -0.40329155853226 * S_RMntFrq  +    -0.65176917675454 *
307229    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H16 = -0.89143353938241 * S_AcceptedCmpTotal + 0.45211708970504 * S_Frq 
+ -0.44897699945178 * S_Income + -0.32314426452158 * S_Mnt + -0.32329530597419 * 
S_MntGoldProds + -0.44244305964257 * S_MntMeatProducts + -0.04171589876809 * S_MntWines + 
0.42122451368745 * S_NumDistPurchases + -0.15802898075961 * S_RFMstat + -0.40329155853226 * 
S_RMntFrq + -0.65176917675454 * S_Recency ;
307230    +   H11  = H11  +     0.01448447530274 * G_Marital_Status0
307231    +          +     0.42194179998625 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.01448447530274 * G_Marital_Status0 + 0.42194179998625 * 
G_Marital_Status1 ;
307232    +   H12  = H12  +     0.12689198218881 * G_Marital_Status0
307233    +          +     0.13222809503301 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.12689198218881 * G_Marital_Status0 + 0.13222809503301 * 
G_Marital_Status1 ;
307234    +   H13  = H13  +     0.02279524261833 * G_Marital_Status0
307235    +          +     0.22562672580832 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.02279524261833 * G_Marital_Status0 + 0.22562672580832 * 
G_Marital_Status1 ;
307236    +   H14  = H14  +     1.11856448462308 * G_Marital_Status0
307237    +          +     0.27730078918446 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 1.11856448462308 * G_Marital_Status0 + 0.27730078918446 * 
G_Marital_Status1 ;
307238    +   H15  = H15  +    -0.04694745686684 * G_Marital_Status0
307239    +          +     0.25879365732348 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.04694745686684 * G_Marital_Status0 + 0.25879365732348 * 
G_Marital_Status1 ;
307240    +   H16  = H16  +    -0.22835702249634 * G_Marital_Status0
307241    +          +     0.18090765090711 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + -0.22835702249634 * G_Marital_Status0 + 0.18090765090711 * 
G_Marital_Status1 ;
307242    +   H11  =     1.23863858658783 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 1.23863858658783 + H11 ;
307243    +   H12  =    -0.12218156586843 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.12218156586843 + H12 ;
307244    +   H13  =    -1.28170837349164 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -1.28170837349164 + H13 ;
307245    +   H14  =    -2.07579206307318 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -2.07579206307318 + H14 ;
307246    +   H15  =    -0.99934113480463 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -0.99934113480463 + H15 ;
307247    +   H16  =     1.30250382782737 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = 1.30250382782737 + H16 ;
307248    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
307249    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
307250    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
307251    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
307252    +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
307253    +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
307254    +END;
MPRINT(EM_DIAGRAM):   END;
307255    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
307256    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
307257    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
307258    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
307259    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
307260    +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
307261    +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
307262    +END;
MPRINT(EM_DIAGRAM):   END;
307263    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
307264    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
307265    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
307266    +
307267    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
307268    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
307269    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
307270    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
307271    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
307272    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
307273    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
307274    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
307275    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
307276    +end;
MPRINT(EM_DIAGRAM):   end;
307277    +else do;
MPRINT(EM_DIAGRAM):   else do;
307278    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
307279    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
307280    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
307281    +   end;
MPRINT(EM_DIAGRAM):   end;
307282    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
307283    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
307284    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
307285    +   end;
MPRINT(EM_DIAGRAM):   end;
307286    +   else do;
MPRINT(EM_DIAGRAM):   else do;
307287    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
307288    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
307289    +   end;
MPRINT(EM_DIAGRAM):   end;
307290    +end;
MPRINT(EM_DIAGRAM):   end;
307291    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
307292    +   P_DepVar1  =     3.62046962800706 * H11  +      -1.860875673098 * H12
307293    +          +    -3.65105027155196 * H13  +     2.14381074770309 * H14
307294    +          +     3.35729012959095 * H15  +    -2.46245459087361 * H16 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 3.62046962800706 * H11 + -1.860875673098 * H12 + 
-3.65105027155196 * H13 + 2.14381074770309 * H14 + 3.35729012959095 * H15 + -2.46245459087361 
* H16 ;
307295    +   P_DepVar1  =    -2.50510283018473 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.50510283018473 + P_DepVar1 ;
307296    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
307297    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
307298    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
307299    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
307300    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
307301    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
307302    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
307303    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
307304    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
307305    +END;
MPRINT(EM_DIAGRAM):   END;
307306    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
307307    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
307308    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
307309    +END;
MPRINT(EM_DIAGRAM):   END;
307310    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
307311    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
307312    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
307313    +END;
MPRINT(EM_DIAGRAM):   END;
307314    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
307315    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
307316    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
307317    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
307318    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
307319    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
307320    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
307321    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
307322    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
307323    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
307324    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
307325    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
307326    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
307327    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
307328    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
307329    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
307330    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
307331    +END;
MPRINT(EM_DIAGRAM):   END;
307332    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
307333    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
307334    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
307335    +drop
307336    +H11
307337    +H12
307338    +H13
307339    +H14
307340    +H15
307341    +H16
307342    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 ;
307343    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
307344    +* Renaming variables for Neural28;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural28;
307345    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
307346    +* Renaming Posterior variables for Neural28;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural28;
307347    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
307348    +drop Neural28_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural28_P_DepVar1;
307349    +Neural28_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural28_P_DepVar1 = P_DepVar1;
307350    +drop Neural28_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural28_P_DepVar0;
307351    +Neural28_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural28_P_DepVar0 = P_DepVar0;
307352    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
307353    +* Renaming _WARN_ variable for Neural28;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural28;
307354    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
307355    +length Neural28_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural28_WARN_ $4;
307356    +drop Neural28_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural28_WARN_;
307357    +Neural28_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural28_WARN_ = _WARN_;
307358    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
307359    +* Ensmbl19: Scoring Code of model 4 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl19: Scoring Code of model 4 of 5;
307360    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
307361    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
307362    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
307363    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
307364    +* NODE: AutoNeural32;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural32;
307365    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
307366    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
307367    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
307368    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
307369    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
307370    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
307371    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
307372    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
307373    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
307374    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
307375    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
307376    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
307377    +LENGTH _WARN_ $4
307378    +      F_DepVar  $ 12
307379    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
307380    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
307381    +
307382    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
307383    +
307384    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
307385    +
307386    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
307387    +
307388    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
307389    +
307390    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
307391    +
307392    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
307393    +
307394    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
307395    +
307396    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
307397    +
307398    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
307399    +
307400    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
307401    +
307402    +      label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
307403    +
307404    +      label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
307405    +
307406    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
307407    +
307408    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
307409    +
307410    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
307411    +
307412    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
307413    +
307414    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
307415    +
307416    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
307417    +
307418    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
307419    +
307420    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
307421    +
307422    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
307423    +
307424    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
307425    +
307426    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
307427    +
307428    +*** Generate dummy variables for G_Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for G_Marital_Status ;
307429    +drop G_Marital_Status0 G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   drop G_Marital_Status0 G_Marital_Status1 ;
307430    +if missing( G_Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( G_Marital_Status ) then do;
307431    +   G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
307432    +   G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
307433    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
307434    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
307435    +end;
MPRINT(EM_DIAGRAM):   end;
307436    +else do;
MPRINT(EM_DIAGRAM):   else do;
307437    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
307438    +   _dm12 = put( G_Marital_Status , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( G_Marital_Status , BEST12. );
307439    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
307440    +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
307441    +      G_Marital_Status0 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = -1;
307442    +      G_Marital_Status1 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = -1;
307443    +   end;
MPRINT(EM_DIAGRAM):   end;
307444    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
307445    +      G_Marital_Status0 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 1;
307446    +      G_Marital_Status1 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 0;
307447    +   end;
MPRINT(EM_DIAGRAM):   end;
307448    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
307449    +      G_Marital_Status0 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 0;
307450    +      G_Marital_Status1 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 1;
307451    +   end;
MPRINT(EM_DIAGRAM):   end;
307452    +   else do;
MPRINT(EM_DIAGRAM):   else do;
307453    +      G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
307454    +      G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
307455    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
307456    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
307457    +   end;
MPRINT(EM_DIAGRAM):   end;
307458    +end;
MPRINT(EM_DIAGRAM):   end;
307459    +
307460    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
307461    +*** Checking missing input Interval
307462    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
307463    +
307464    +IF NMISS(
307465    +   AcceptedCmpTotal ,
307466    +   Frq ,
307467    +   Income ,
307468    +   Mnt ,
307469    +   MntGoldProds ,
307470    +   MntMeatProducts ,
307471    +   MntWines ,
307472    +   NumDistPurchases ,
307473    +   RFMstat ,
307474    +   RMntFrq ,
307475    +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntGoldProds , 
MntMeatProducts , MntWines , NumDistPurchases , RFMstat , RMntFrq , Recency ) THEN DO;
307476    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
307477    +
307478    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
307479    +END;
MPRINT(EM_DIAGRAM):   END;
307480    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
307481    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
307482    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
307483    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
307484    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
307485    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
307486    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
307487    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
307488    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
307489    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
307490    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
307491    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
307492    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
307493    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
307494    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
307495    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
307496    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
307497    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
307498    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
307499    +END;
MPRINT(EM_DIAGRAM):   END;
307500    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
307501    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
307502    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
307503    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
307504    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
307505    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
307506    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
307507    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
307508    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
307509    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
307510    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
307511    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
307512    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
307513    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
307514    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
307515    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
307516    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
307517    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
307518    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
307519    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
307520    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
307521    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
307522    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
307523    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
307524    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
307525    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
307526    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
307527    +END;
MPRINT(EM_DIAGRAM):   END;
307528    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
307529    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
307530    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
307531    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
307532    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
307533    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
307534    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
307535    +   H1x1_1  =    -0.38956319781905 * S_AcceptedCmpTotal
307536    +          +    -0.08624585416733 * S_Frq  +     0.14990044515556 * S_Income
307537    +          +     1.26905422062144 * S_Mnt  +    -0.05830961868093 *
307538    +        S_MntGoldProds  +    -0.45655804707903 * S_MntMeatProducts
307539    +          +    -0.29008121030195 * S_MntWines  +    -0.52580257849932 *
307540    +        S_NumDistPurchases  +     -0.1481404693781 * S_RFMstat
307541    +          +    -0.49319351834455 * S_RMntFrq  +     0.54249594661515 *
307542    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.38956319781905 * S_AcceptedCmpTotal + -0.08624585416733 * 
S_Frq + 0.14990044515556 * S_Income + 1.26905422062144 * S_Mnt + -0.05830961868093 * 
S_MntGoldProds + -0.45655804707903 * S_MntMeatProducts + -0.29008121030195 * S_MntWines + 
-0.52580257849932 * S_NumDistPurchases + -0.1481404693781 * S_RFMstat + -0.49319351834455 * 
S_RMntFrq + 0.54249594661515 * S_Recency ;
307543    +   H1x1_2  =     0.38779821527892 * S_AcceptedCmpTotal
307544    +          +    -1.22315175769362 * S_Frq  +      1.1802985172513 * S_Income
307545    +          +     2.08508390361851 * S_Mnt  +     0.42839460332296 *
307546    +        S_MntGoldProds  +      0.9001009517595 * S_MntMeatProducts
307547    +          +     0.43882453107711 * S_MntWines  +    -0.77730415774439 *
307548    +        S_NumDistPurchases  +    -0.48791819347803 * S_RFMstat
307549    +          +    -0.74366268198551 * S_RMntFrq  +    -0.17482075484114 *
307550    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.38779821527892 * S_AcceptedCmpTotal + -1.22315175769362 * 
S_Frq + 1.1802985172513 * S_Income + 2.08508390361851 * S_Mnt + 0.42839460332296 * 
S_MntGoldProds + 0.9001009517595 * S_MntMeatProducts + 0.43882453107711 * S_MntWines + 
-0.77730415774439 * S_NumDistPurchases + -0.48791819347803 * S_RFMstat + -0.74366268198551 * 
S_RMntFrq + -0.17482075484114 * S_Recency ;
307551    +   H1x1_3  =    -0.22134549179782 * S_AcceptedCmpTotal
307552    +          +    -0.06178114920397 * S_Frq  +     -1.4524474173679 * S_Income
307553    +          +    -7.85805111281271 * S_Mnt  +    -0.25260256377303 *
307554    +        S_MntGoldProds  +     2.24650170262612 * S_MntMeatProducts
307555    +          +    -0.28495082016886 * S_MntWines  +     2.83659961242127 *
307556    +        S_NumDistPurchases  +     0.42067169774523 * S_RFMstat
307557    +          +     1.71392925516862 * S_RMntFrq  +    -0.09478915012781 *
307558    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.22134549179782 * S_AcceptedCmpTotal + -0.06178114920397 * 
S_Frq + -1.4524474173679 * S_Income + -7.85805111281271 * S_Mnt + -0.25260256377303 * 
S_MntGoldProds + 2.24650170262612 * S_MntMeatProducts + -0.28495082016886 * S_MntWines + 
2.83659961242127 * S_NumDistPurchases + 0.42067169774523 * S_RFMstat + 1.71392925516862 * 
S_RMntFrq + -0.09478915012781 * S_Recency ;
307559    +   H1x1_1  = H1x1_1  +    -0.22060541309937 * G_Marital_Status0
307560    +          +    -0.46692703876881 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.22060541309937 * G_Marital_Status0 + 
-0.46692703876881 * G_Marital_Status1 ;
307561    +   H1x1_2  = H1x1_2  +     0.47416822018188 * G_Marital_Status0
307562    +          +     -2.1058284684647 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.47416822018188 * G_Marital_Status0 + 
-2.1058284684647 * G_Marital_Status1 ;
307563    +   H1x1_3  = H1x1_3  +    -0.44803855270897 * G_Marital_Status0
307564    +          +     1.41026185304551 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.44803855270897 * G_Marital_Status0 + 
1.41026185304551 * G_Marital_Status1 ;
307565    +   H1x1_1  =     1.63085271667721 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.63085271667721 + H1x1_1 ;
307566    +   H1x1_2  =     0.28277859846654 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.28277859846654 + H1x1_2 ;
307567    +   H1x1_3  =     -1.8890871578635 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.8890871578635 + H1x1_3 ;
307568    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
307569    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
307570    +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
307571    +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
307572    +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
307573    +END;
MPRINT(EM_DIAGRAM):   END;
307574    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
307575    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
307576    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
307577    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
307578    +END;
MPRINT(EM_DIAGRAM):   END;
307579    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
307580    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
307581    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
307582    +
307583    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
307584    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
307585    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
307586    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
307587    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
307588    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
307589    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
307590    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
307591    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
307592    +end;
MPRINT(EM_DIAGRAM):   end;
307593    +else do;
MPRINT(EM_DIAGRAM):   else do;
307594    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
307595    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
307596    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
307597    +   end;
MPRINT(EM_DIAGRAM):   end;
307598    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
307599    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
307600    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
307601    +   end;
MPRINT(EM_DIAGRAM):   end;
307602    +   else do;
MPRINT(EM_DIAGRAM):   else do;
307603    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
307604    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
307605    +   end;
MPRINT(EM_DIAGRAM):   end;
307606    +end;
MPRINT(EM_DIAGRAM):   end;
307607    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
307608    +   P_DepVar1  =    -23.6822744769009 * H1x1_1  +     16.0380566008578 * H1x1_2
307609    +          +     15.3446320724554 * H1x1_3 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -23.6822744769009 * H1x1_1 + 16.0380566008578 * H1x1_2 + 
15.3446320724554 * H1x1_3 ;
307610    +   P_DepVar1  =     0.67225691696469 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.67225691696469 + P_DepVar1 ;
307611    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
307612    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
307613    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
307614    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
307615    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
307616    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
307617    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
307618    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
307619    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
307620    +END;
MPRINT(EM_DIAGRAM):   END;
307621    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
307622    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
307623    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
307624    +END;
MPRINT(EM_DIAGRAM):   END;
307625    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
307626    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
307627    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
307628    +END;
MPRINT(EM_DIAGRAM):   END;
307629    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
307630    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
307631    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
307632    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
307633    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
307634    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
307635    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
307636    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
307637    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
307638    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
307639    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
307640    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
307641    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
307642    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
307643    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
307644    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
307645    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
307646    +END;
MPRINT(EM_DIAGRAM):   END;
307647    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
307648    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
307649    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
307650    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
307651    +* Renaming variables for AutoNeural32;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural32;
307652    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
307653    +* Renaming Posterior variables for AutoNeural32;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural32;
307654    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
307655    +drop AutoNeural32_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural32_P_DepVar1;
307656    +AutoNeural32_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural32_P_DepVar1 = P_DepVar1;
307657    +drop AutoNeural32_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural32_P_DepVar0;
307658    +AutoNeural32_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural32_P_DepVar0 = P_DepVar0;
307659    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
307660    +* Renaming _WARN_ variable for AutoNeural32;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural32;
307661    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
307662    +length AutoNeural32_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural32_WARN_ $4;
307663    +drop AutoNeural32_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural32_WARN_;
307664    +AutoNeural32_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural32_WARN_ = _WARN_;
307665    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
307666    +* Ensmbl19: Scoring Code of model 5 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl19: Scoring Code of model 5 of 5;
307667    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
307668    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
307669    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
307670    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
307671    +* NODE: AutoNeural29;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural29;
307672    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
307673    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
307674    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
307675    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
307676    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
307677    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
307678    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
307679    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
307680    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
307681    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
307682    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
307683    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
307684    +LENGTH _WARN_ $4
307685    +      F_DepVar  $ 12
307686    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
307687    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
307688    +
307689    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
307690    +
307691    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
307692    +
307693    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
307694    +
307695    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
307696    +
307697    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
307698    +
307699    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
307700    +
307701    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
307702    +
307703    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
307704    +
307705    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
307706    +
307707    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
307708    +
307709    +      label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
307710    +
307711    +      label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
307712    +
307713    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
307714    +
307715    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
307716    +
307717    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
307718    +
307719    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
307720    +
307721    +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
307722    +
307723    +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
307724    +
307725    +      label H1x1_7 = 'Hidden: H1x1_=7' ;
MPRINT(EM_DIAGRAM):   label H1x1_7 = 'Hidden: H1x1_=7' ;
307726    +
307727    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
307728    +
307729    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
307730    +
307731    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
307732    +
307733    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
307734    +
307735    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
307736    +
307737    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
307738    +
307739    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
307740    +
307741    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
307742    +
307743    +*** Generate dummy variables for G_Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for G_Marital_Status ;
307744    +drop G_Marital_Status0 G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   drop G_Marital_Status0 G_Marital_Status1 ;
307745    +if missing( G_Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( G_Marital_Status ) then do;
307746    +   G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
307747    +   G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
307748    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
307749    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
307750    +end;
MPRINT(EM_DIAGRAM):   end;
307751    +else do;
MPRINT(EM_DIAGRAM):   else do;
307752    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
307753    +   _dm12 = put( G_Marital_Status , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( G_Marital_Status , BEST12. );
307754    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
307755    +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
307756    +      G_Marital_Status0 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = -1;
307757    +      G_Marital_Status1 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = -1;
307758    +   end;
MPRINT(EM_DIAGRAM):   end;
307759    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
307760    +      G_Marital_Status0 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 1;
307761    +      G_Marital_Status1 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 0;
307762    +   end;
MPRINT(EM_DIAGRAM):   end;
307763    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
307764    +      G_Marital_Status0 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 0;
307765    +      G_Marital_Status1 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 1;
307766    +   end;
MPRINT(EM_DIAGRAM):   end;
307767    +   else do;
MPRINT(EM_DIAGRAM):   else do;
307768    +      G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
307769    +      G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
307770    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
307771    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
307772    +   end;
MPRINT(EM_DIAGRAM):   end;
307773    +end;
MPRINT(EM_DIAGRAM):   end;
307774    +
307775    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
307776    +*** Checking missing input Interval
307777    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
307778    +
307779    +IF NMISS(
307780    +   AcceptedCmpTotal ,
307781    +   Frq ,
307782    +   Income ,
307783    +   Mnt ,
307784    +   MntGoldProds ,
307785    +   MntMeatProducts ,
307786    +   MntWines ,
307787    +   NumDistPurchases ,
307788    +   RFMstat ,
307789    +   RMntFrq ,
307790    +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntGoldProds , 
MntMeatProducts , MntWines , NumDistPurchases , RFMstat , RMntFrq , Recency ) THEN DO;
307791    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
307792    +
307793    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
307794    +END;
MPRINT(EM_DIAGRAM):   END;
307795    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
307796    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
307797    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
307798    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
307799    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
307800    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
307801    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
307802    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
307803    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
307804    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
307805    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
307806    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
307807    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
307808    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
307809    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
307810    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
307811    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
307812    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
307813    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
307814    +END;
MPRINT(EM_DIAGRAM):   END;
307815    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
307816    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
307817    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
307818    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
307819    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
307820    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
307821    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
307822    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
307823    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
307824    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
307825    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
307826    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
307827    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
307828    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
307829    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
307830    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
307831    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
307832    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
307833    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
307834    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
307835    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
307836    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
307837    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
307838    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
307839    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
307840    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
307841    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
307842    +END;
MPRINT(EM_DIAGRAM):   END;
307843    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
307844    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
307845    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
307846    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
307847    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
307848    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
307849    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
307850    +   H1x1_1  =    -1.99300782242957 * S_AcceptedCmpTotal
307851    +          +     2.12004224248217 * S_Frq  +     3.86828667262904 * S_Income
307852    +          +     2.77648198770608 * S_Mnt  +    -2.27326773671069 *
307853    +        S_MntGoldProds  +    -0.27399687657599 * S_MntMeatProducts
307854    +          +     2.26137957922507 * S_MntWines  +     0.14135280902221 *
307855    +        S_NumDistPurchases  +     1.12048709605553 * S_RFMstat
307856    +          +     0.99315934409036 * S_RMntFrq  +     1.21818826467727 *
307857    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.99300782242957 * S_AcceptedCmpTotal + 2.12004224248217 * 
S_Frq + 3.86828667262904 * S_Income + 2.77648198770608 * S_Mnt + -2.27326773671069 * 
S_MntGoldProds + -0.27399687657599 * S_MntMeatProducts + 2.26137957922507 * S_MntWines + 
0.14135280902221 * S_NumDistPurchases + 1.12048709605553 * S_RFMstat + 0.99315934409036 * 
S_RMntFrq + 1.21818826467727 * S_Recency ;
307858    +   H1x1_2  =    -0.46080527925139 * S_AcceptedCmpTotal
307859    +          +     1.22986184660358 * S_Frq  +     1.25416218398238 * S_Income
307860    +          +      0.7698101051046 * S_Mnt  +    -0.24851515302824 *
307861    +        S_MntGoldProds  +    -1.02206883329868 * S_MntMeatProducts
307862    +          +    -2.60436726665032 * S_MntWines  +     1.42856046102253 *
307863    +        S_NumDistPurchases  +     0.23036228891547 * S_RFMstat
307864    +          +    -0.44196680894425 * S_RMntFrq  +     1.47726327092789 *
307865    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.46080527925139 * S_AcceptedCmpTotal + 1.22986184660358 * 
S_Frq + 1.25416218398238 * S_Income + 0.7698101051046 * S_Mnt + -0.24851515302824 * 
S_MntGoldProds + -1.02206883329868 * S_MntMeatProducts + -2.60436726665032 * S_MntWines + 
1.42856046102253 * S_NumDistPurchases + 0.23036228891547 * S_RFMstat + -0.44196680894425 * 
S_RMntFrq + 1.47726327092789 * S_Recency ;
307866    +   H1x1_3  =    -2.72041257472943 * S_AcceptedCmpTotal
307867    +          +     2.18007007875237 * S_Frq  +    -3.41389425682735 * S_Income
307868    +          +     1.22111404132155 * S_Mnt  +     0.13965132551243 *
307869    +        S_MntGoldProds  +    -1.44679609979492 * S_MntMeatProducts
307870    +          +     1.32449625366546 * S_MntWines  +     0.71474658567846 *
307871    +        S_NumDistPurchases  +    -1.11377169665392 * S_RFMstat
307872    +          +    -0.23272811318878 * S_RMntFrq  +     3.38352057173892 *
307873    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -2.72041257472943 * S_AcceptedCmpTotal + 2.18007007875237 * 
S_Frq + -3.41389425682735 * S_Income + 1.22111404132155 * S_Mnt + 0.13965132551243 * 
S_MntGoldProds + -1.44679609979492 * S_MntMeatProducts + 1.32449625366546 * S_MntWines + 
0.71474658567846 * S_NumDistPurchases + -1.11377169665392 * S_RFMstat + -0.23272811318878 * 
S_RMntFrq + 3.38352057173892 * S_Recency ;
307874    +   H1x1_4  =    -0.53914082027029 * S_AcceptedCmpTotal
307875    +          +     3.52541527909413 * S_Frq  +     0.47386294116539 * S_Income
307876    +          +     1.74856835081997 * S_Mnt  +    -0.31608698854628 *
307877    +        S_MntGoldProds  +    -4.08585161438784 * S_MntMeatProducts
307878    +          +     1.11934057687184 * S_MntWines  +    -4.23069217087257 *
307879    +        S_NumDistPurchases  +    -0.45058242594518 * S_RFMstat
307880    +          +     2.24526854282726 * S_RMntFrq  +     0.46541621801996 *
307881    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.53914082027029 * S_AcceptedCmpTotal + 3.52541527909413 * 
S_Frq + 0.47386294116539 * S_Income + 1.74856835081997 * S_Mnt + -0.31608698854628 * 
S_MntGoldProds + -4.08585161438784 * S_MntMeatProducts + 1.11934057687184 * S_MntWines + 
-4.23069217087257 * S_NumDistPurchases + -0.45058242594518 * S_RFMstat + 2.24526854282726 * 
S_RMntFrq + 0.46541621801996 * S_Recency ;
307882    +   H1x1_5  =     0.16652182962256 * S_AcceptedCmpTotal
307883    +          +    -2.34082830868767 * S_Frq  +     0.06017749299853 * S_Income
307884    +          +    -3.61434433922311 * S_Mnt  +    -0.15794212009402 *
307885    +        S_MntGoldProds  +     5.32833368617196 * S_MntMeatProducts
307886    +          +     1.70496933504273 * S_MntWines  +     2.85445845094536 *
307887    +        S_NumDistPurchases  +     1.88219523605925 * S_RFMstat
307888    +          +     0.75869801637089 * S_RMntFrq  +     0.08064297106734 *
307889    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.16652182962256 * S_AcceptedCmpTotal + -2.34082830868767 * 
S_Frq + 0.06017749299853 * S_Income + -3.61434433922311 * S_Mnt + -0.15794212009402 * 
S_MntGoldProds + 5.32833368617196 * S_MntMeatProducts + 1.70496933504273 * S_MntWines + 
2.85445845094536 * S_NumDistPurchases + 1.88219523605925 * S_RFMstat + 0.75869801637089 * 
S_RMntFrq + 0.08064297106734 * S_Recency ;
307890    +   H1x1_6  =     1.97422379745385 * S_AcceptedCmpTotal
307891    +          +    -0.18806921540808 * S_Frq  +    -1.45393613178942 * S_Income
307892    +          +    -1.71382589206496 * S_Mnt  +    -0.86398659373382 *
307893    +        S_MntGoldProds  +    -0.55933907393534 * S_MntMeatProducts
307894    +          +    -2.04088833388184 * S_MntWines  +     1.33825297425801 *
307895    +        S_NumDistPurchases  +    -1.84916943620006 * S_RFMstat
307896    +          +     1.10268410707441 * S_RMntFrq  +    -3.24538880603902 *
307897    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 1.97422379745385 * S_AcceptedCmpTotal + -0.18806921540808 * 
S_Frq + -1.45393613178942 * S_Income + -1.71382589206496 * S_Mnt + -0.86398659373382 * 
S_MntGoldProds + -0.55933907393534 * S_MntMeatProducts + -2.04088833388184 * S_MntWines + 
1.33825297425801 * S_NumDistPurchases + -1.84916943620006 * S_RFMstat + 1.10268410707441 * 
S_RMntFrq + -3.24538880603902 * S_Recency ;
307898    +   H1x1_7  =    -0.04334303258083 * S_AcceptedCmpTotal
307899    +          +      1.2911623736286 * S_Frq  +    -2.28992194197276 * S_Income
307900    +          +    -0.46322849796029 * S_Mnt  +    -0.61987255353555 *
307901    +        S_MntGoldProds  +    -0.70448430141235 * S_MntMeatProducts
307902    +          +    -2.07867791807129 * S_MntWines  +    -1.36577325340948 *
307903    +        S_NumDistPurchases  +    -1.20867908080733 * S_RFMstat
307904    +          +     1.13377434281641 * S_RMntFrq  +     0.49995615625441 *
307905    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_7 = -0.04334303258083 * S_AcceptedCmpTotal + 1.2911623736286 * 
S_Frq + -2.28992194197276 * S_Income + -0.46322849796029 * S_Mnt + -0.61987255353555 * 
S_MntGoldProds + -0.70448430141235 * S_MntMeatProducts + -2.07867791807129 * S_MntWines + 
-1.36577325340948 * S_NumDistPurchases + -1.20867908080733 * S_RFMstat + 1.13377434281641 * 
S_RMntFrq + 0.49995615625441 * S_Recency ;
307906    +   H1x1_1  = H1x1_1  +     -1.7035629341514 * G_Marital_Status0
307907    +          +    -0.88839271772433 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -1.7035629341514 * G_Marital_Status0 + 
-0.88839271772433 * G_Marital_Status1 ;
307908    +   H1x1_2  = H1x1_2  +     0.47234648810132 * G_Marital_Status0
307909    +          +     0.49781009278812 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.47234648810132 * G_Marital_Status0 + 
0.49781009278812 * G_Marital_Status1 ;
307910    +   H1x1_3  = H1x1_3  +     0.04803102756566 * G_Marital_Status0
307911    +          +     3.45859276392218 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.04803102756566 * G_Marital_Status0 + 
3.45859276392218 * G_Marital_Status1 ;
307912    +   H1x1_4  = H1x1_4  +    -0.00794915276466 * G_Marital_Status0
307913    +          +    -0.88877093101914 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.00794915276466 * G_Marital_Status0 + 
-0.88877093101914 * G_Marital_Status1 ;
307914    +   H1x1_5  = H1x1_5  +     0.17344052282277 * G_Marital_Status0
307915    +          +     0.07512544812374 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 0.17344052282277 * G_Marital_Status0 + 
0.07512544812374 * G_Marital_Status1 ;
307916    +   H1x1_6  = H1x1_6  +     0.69797087079749 * G_Marital_Status0
307917    +          +     1.99160337429042 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + 0.69797087079749 * G_Marital_Status0 + 
1.99160337429042 * G_Marital_Status1 ;
307918    +   H1x1_7  = H1x1_7  +    -1.90814013352903 * G_Marital_Status0
307919    +          +    -0.58260071621307 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_7 = H1x1_7 + -1.90814013352903 * G_Marital_Status0 + 
-0.58260071621307 * G_Marital_Status1 ;
307920    +   H1x1_1  =      0.4509613443627 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.4509613443627 + H1x1_1 ;
307921    +   H1x1_2  =     3.28102437302443 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 3.28102437302443 + H1x1_2 ;
307922    +   H1x1_3  =    -0.59732076258377 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.59732076258377 + H1x1_3 ;
307923    +   H1x1_4  =     3.04302174126598 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 3.04302174126598 + H1x1_4 ;
307924    +   H1x1_5  =     4.11173403634453 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 4.11173403634453 + H1x1_5 ;
307925    +   H1x1_6  =     4.51964221881808 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 4.51964221881808 + H1x1_6 ;
307926    +   H1x1_7  =     7.27061205819069 + H1x1_7 ;
MPRINT(EM_DIAGRAM):   H1x1_7 = 7.27061205819069 + H1x1_7 ;
307927    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
307928    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
307929    +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
307930    +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
307931    +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
307932    +   H1x1_4  = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
307933    +   H1x1_5  = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_5 = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
307934    +   H1x1_6  = 1.0 / (1.0 + EXP(MIN( - H1x1_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_6 = 1.0 / (1.0 + EXP(MIN( - H1x1_6 , _EXP_BAR)));
307935    +   H1x1_7  = 1.0 / (1.0 + EXP(MIN( - H1x1_7 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_7 = 1.0 / (1.0 + EXP(MIN( - H1x1_7 , _EXP_BAR)));
307936    +END;
MPRINT(EM_DIAGRAM):   END;
307937    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
307938    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
307939    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
307940    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
307941    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
307942    +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
307943    +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
307944    +   H1x1_7  = .;
MPRINT(EM_DIAGRAM):   H1x1_7 = .;
307945    +END;
MPRINT(EM_DIAGRAM):   END;
307946    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
307947    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
307948    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
307949    +
307950    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
307951    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
307952    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
307953    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
307954    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
307955    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
307956    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
307957    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
307958    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
307959    +end;
MPRINT(EM_DIAGRAM):   end;
307960    +else do;
MPRINT(EM_DIAGRAM):   else do;
307961    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
307962    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
307963    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
307964    +   end;
MPRINT(EM_DIAGRAM):   end;
307965    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
307966    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
307967    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
307968    +   end;
MPRINT(EM_DIAGRAM):   end;
307969    +   else do;
MPRINT(EM_DIAGRAM):   else do;
307970    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
307971    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
307972    +   end;
MPRINT(EM_DIAGRAM):   end;
307973    +end;
MPRINT(EM_DIAGRAM):   end;
307974    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
307975    +   P_DepVar1  =    -3.49358340904307 * H1x1_1  +    -5.28251662728987 * H1x1_2
307976    +          +    -4.11876057817011 * H1x1_3  +    -7.73777326204979 * H1x1_4
307977    +          +     12.8932497890238 * H1x1_5  +     6.88694832857203 * H1x1_6
307978    +          +    -8.47048075234366 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.49358340904307 * H1x1_1 + -5.28251662728987 * H1x1_2 + 
-4.11876057817011 * H1x1_3 + -7.73777326204979 * H1x1_4 + 12.8932497890238 * H1x1_5 + 
6.88694832857203 * H1x1_6 + -8.47048075234366 * H1x1_7 ;
307979    +   P_DepVar1  =     1.65092540834245 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.65092540834245 + P_DepVar1 ;
307980    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
307981    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
307982    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
307983    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
307984    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
307985    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
307986    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
307987    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
307988    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
307989    +END;
MPRINT(EM_DIAGRAM):   END;
307990    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
307991    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
307992    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
307993    +END;
MPRINT(EM_DIAGRAM):   END;
307994    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
307995    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
307996    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
307997    +END;
MPRINT(EM_DIAGRAM):   END;
307998    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
307999    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
308000    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
308001    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
308002    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
308003    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
308004    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
308005    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
308006    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
308007    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
308008    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
308009    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
308010    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
308011    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
308012    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
308013    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
308014    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
308015    +END;
MPRINT(EM_DIAGRAM):   END;
308016    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
308017    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
308018    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
308019    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
308020    +* Renaming variables for AutoNeural29;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural29;
308021    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
308022    +* Renaming Posterior variables for AutoNeural29;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural29;
308023    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
308024    +drop AutoNeural29_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural29_P_DepVar1;
308025    +AutoNeural29_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural29_P_DepVar1 = P_DepVar1;
308026    +drop AutoNeural29_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural29_P_DepVar0;
308027    +AutoNeural29_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural29_P_DepVar0 = P_DepVar0;
308028    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
308029    +* Renaming _WARN_ variable for AutoNeural29;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural29;
308030    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
308031    +length AutoNeural29_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural29_WARN_ $4;
308032    +drop AutoNeural29_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural29_WARN_;
308033    +AutoNeural29_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural29_WARN_ = _WARN_;
308034    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
308035    +* Ensmbl19: Average Posteriors of 5 models;
MPRINT(EM_DIAGRAM):   * Ensmbl19: Average Posteriors of 5 models;
308036    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
308037    +P_DepVar1 = (
308038    +AutoNeural33_P_DepVar1 +
308039    +AutoNeural28_P_DepVar1 +
308040    +Neural28_P_DepVar1 +
308041    +AutoNeural32_P_DepVar1 +
308042    +AutoNeural29_P_DepVar1
308043    +)/5;
MPRINT(EM_DIAGRAM):   P_DepVar1 = ( AutoNeural33_P_DepVar1 + AutoNeural28_P_DepVar1 + 
Neural28_P_DepVar1 + AutoNeural32_P_DepVar1 + AutoNeural29_P_DepVar1 )/5;
308044    +P_DepVar0 = (
308045    +AutoNeural33_P_DepVar0 +
308046    +AutoNeural28_P_DepVar0 +
308047    +Neural28_P_DepVar0 +
308048    +AutoNeural32_P_DepVar0 +
308049    +AutoNeural29_P_DepVar0
308050    +)/5;
MPRINT(EM_DIAGRAM):   P_DepVar0 = ( AutoNeural33_P_DepVar0 + AutoNeural28_P_DepVar0 + 
Neural28_P_DepVar0 + AutoNeural32_P_DepVar0 + AutoNeural29_P_DepVar0 )/5;
308051    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
308052    +* Ensmbl19: Computing Classification Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl19: Computing Classification Vars;
308053    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
308054    +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set. 
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the 
         length of a character variable.
308055    +label I_DepVar = 'Into: DepVar';
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar';
308056    +length _format $200;
MPRINT(EM_DIAGRAM):   length _format $200;
308057    +drop _format;
MPRINT(EM_DIAGRAM):   drop _format;
308058    +_format= ' ';
MPRINT(EM_DIAGRAM):   _format= ' ';
308059    +_p_= 0;
MPRINT(EM_DIAGRAM):   _p_= 0;
308060    +drop _p_;
MPRINT(EM_DIAGRAM):   drop _p_;
308061    +if P_DepVar1 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _p_ then do;
308062    +_p_= P_DepVar1;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar1;
308063    +_format= '1';
MPRINT(EM_DIAGRAM):   _format= '1';
308064    +end;
MPRINT(EM_DIAGRAM):   end;
308065    +if P_DepVar0 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _p_ then do;
308066    +_p_= P_DepVar0;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar0;
308067    +_format= '0';
MPRINT(EM_DIAGRAM):   _format= '0';
308068    +end;
MPRINT(EM_DIAGRAM):   end;
308069    +%DMNORMCP(_format,I_DepVar);
MPRINT(DMNORMCP):   I_DepVar=dmnorm(_format,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
308070    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
308071    +* Ensmbl19: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   * Ensmbl19: Producing Unformatted variable;
308072    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
308073    +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
308074    +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
308075    +else
308076    +if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
308077    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
308078    +* Ensmbl19: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl19: Computing _WARN_ Variable;
308079    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
308080    +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
308081    +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
308082    +_WARN_ = '';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
308083    +if index(AUTONEURAL33_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
308083   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL33_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
308084    +if index(AUTONEURAL33_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
308084   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL33_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
308085    +if index(AUTONEURAL33_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
308085   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL33_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
308086    +if index(AUTONEURAL33_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
308086   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL33_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
308087    +if index(AUTONEURAL28_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
308087   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL28_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
308088    +if index(AUTONEURAL28_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
308088   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL28_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
308089    +if index(AUTONEURAL28_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
308089   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL28_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
308090    +if index(AUTONEURAL28_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
308090   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL28_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
308091    +if index(NEURAL28_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
308091   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL28_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
308092    +if index(NEURAL28_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
308092   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL28_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
308093    +if index(NEURAL28_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
308093   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL28_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
308094    +if index(NEURAL28_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
308094   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL28_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
308095    +if index(AUTONEURAL32_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
308095   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL32_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
308096    +if index(AUTONEURAL32_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
308096   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL32_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
308097    +if index(AUTONEURAL32_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
308097   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL32_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
308098    +if index(AUTONEURAL32_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
308098   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL32_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
308099    +if index(AUTONEURAL29_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
308099   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL29_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
308100    +if index(AUTONEURAL29_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
308100   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL29_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
308101    +if index(AUTONEURAL29_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
308101   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL29_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
308102    +if index(AUTONEURAL29_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
308102   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL29_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
308103    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
308104    +* Ensmbl19: Computing Residual Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl19: Computing Residual Vars;
308105    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
308106    +if
308107    +F_DepVar NE '1'
308108    +AND F_DepVar NE '0'
308109    +then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE '1' AND F_DepVar NE '0' then do;
308110    +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
308111    +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
308112    +end;
MPRINT(EM_DIAGRAM):   end;
308113    +else do;
MPRINT(EM_DIAGRAM):   else do;
308114    +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
308115    +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
308116    +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
308117    +WHEN('1') R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN('1') R_DepVar1 = R_DepVar1 +1;
308118    +WHEN('0') R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN('0') R_DepVar0 = R_DepVar0 +1;
308119    +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
308120    +END;
MPRINT(EM_DIAGRAM):   END;
308121    +END;
MPRINT(EM_DIAGRAM):   END;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
308122     run;

NOTE: DATA STEP view saved on file EMWS8.ENSMBL19_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.AUTONEURAL33_TRAIN.VIEW used (Total process time):
      real time           0.09 seconds
      cpu time            0.09 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.10 seconds
      cpu time            0.10 seconds
      

MPRINT(EM_DIAGRAM):   quit;
308123     quit;
308124     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
308125     filename emflow
308125   ! "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl19\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl19\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl19: Scoring AUTONEURAL33_VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
308126     *------------------------------------------------------------*;
308127     * Ensmbl19: Scoring AUTONEURAL33_VALIDATE data;
308128     *------------------------------------------------------------*;
308129     data EMWS8.Ensmbl19_VALIDATE
308130     / view=EMWS8.Ensmbl19_VALIDATE
308131     ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl19_VALIDATE / view=EMWS8.Ensmbl19_VALIDATE ;
308132     set EMWS8.AutoNeural33_VALIDATE
308133     ;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural33_VALIDATE ;
308134     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl19\EMFLOWSCORE.sas.
308135    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
308136    +* Ensmbl19: Combine model for DepVar;
MPRINT(EM_DIAGRAM):   * Ensmbl19: Combine model for DepVar;
308137    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
308138    +* Ensmbl19: Scoring Code of model 1 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl19: Scoring Code of model 1 of 5;
308139    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
308140    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
308141    +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
308142    +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
308143    +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
308144    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
308145    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
308146    +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
308147    +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
308148    +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
308149    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
308150    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
308151    +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
308152    +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
308153    +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
308154    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
308155    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
308156    +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
308157    +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
308158    +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
308159    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
308160    +
308161    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
308162    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
308162   !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
308163    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
308164    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
308165    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
308166    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
308167    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
308168    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
308169    +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
308170    +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
308171    +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
308172    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
308173    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
308174    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
308175    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
308176    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
308177    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
308178    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
308179    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
308180    +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
308181    +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
308182    +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
308183    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
308184    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
308185    +* TOOL: Variable selection Class;
MPRINT(EM_DIAGRAM):   * TOOL: Variable selection Class;
308186    +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
308187    +* NODE: Varsel;
MPRINT(EM_DIAGRAM):   * NODE: Varsel;
308188    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
308189    +******************************************;
MPRINT(EM_DIAGRAM):   ******************************************;
308190    +*** Begin Scoring Code from PROC DMINE ***;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code from PROC DMINE ***;
308191    +******************************************;
MPRINT(EM_DIAGRAM):   ******************************************;
308192    +
308193    +length _WARN_ $ 4;
MPRINT(EM_DIAGRAM):   length _WARN_ $ 4;
308194    +label _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
308195    +
308196    +
308197    +/*----G_Marital_Status begin----*/
308198    +length _NORM8 $ 8;
MPRINT(EM_DIAGRAM):   length _NORM8 $ 8;
308199    +_NORM8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _NORM8 = put( Marital_Status , $8. );
308200    +%DMNORMIP( _NORM8 )
MPRINT(DMNORMIP):   call dmnorm(_NORM8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
308201    +drop _NORM8;
MPRINT(EM_DIAGRAM):   drop _NORM8;
308202    +select(_NORM8);
MPRINT(EM_DIAGRAM):   select(_NORM8);
308203    +  when("DIVORCED" ) G_Marital_Status = 1;
MPRINT(EM_DIAGRAM):   when("DIVORCED" ) G_Marital_Status = 1;
308204    +  when("MARRIED " ) G_Marital_Status = 2;
MPRINT(EM_DIAGRAM):   when("MARRIED " ) G_Marital_Status = 2;
308205    +  when("SINGLE  " ) G_Marital_Status = 0;
MPRINT(EM_DIAGRAM):   when("SINGLE  " ) G_Marital_Status = 0;
308206    +  when("TOGETHER" ) G_Marital_Status = 2;
MPRINT(EM_DIAGRAM):   when("TOGETHER" ) G_Marital_Status = 2;
308207    +  when("WIDOW   " ) G_Marital_Status = 0;
MPRINT(EM_DIAGRAM):   when("WIDOW   " ) G_Marital_Status = 0;
308208    +  otherwise substr(_WARN_, 2, 1) = 'U';
MPRINT(EM_DIAGRAM):   otherwise substr(_WARN_, 2, 1) = 'U';
308209    +end;
MPRINT(EM_DIAGRAM):   end;
308210    +label G_Marital_Status="Grouped Levels for Marital_Status";
MPRINT(EM_DIAGRAM):   label G_Marital_Status= "Grouped Levels for Marital_Status";
308211    +/*----G_Marital_Status end----*/
308212    +
308213    +
308214    +****************************************;
MPRINT(EM_DIAGRAM):   ****************************************;
308215    +*** End Scoring Code from PROC DMINE ***;
MPRINT(EM_DIAGRAM):   *** End Scoring Code from PROC DMINE ***;
308216    +****************************************;
MPRINT(EM_DIAGRAM):   ****************************************;
308217    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
308218    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
308219    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
308220    +* NODE: AutoNeural33;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural33;
308221    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
308222    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
308223    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
308224    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
308225    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
308226    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
308227    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
308228    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
308229    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
308230    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
308231    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
308232    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
308233    +LENGTH _WARN_ $4
308234    +      F_DepVar  $ 12
308235    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
308236    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
308237    +
308238    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
308239    +
308240    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
308241    +
308242    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
308243    +
308244    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
308245    +
308246    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
308247    +
308248    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
308249    +
308250    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
308251    +
308252    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
308253    +
308254    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
308255    +
308256    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
308257    +
308258    +      label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
308259    +
308260    +      label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
308261    +
308262    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
308263    +
308264    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
308265    +
308266    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
308267    +
308268    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
308269    +
308270    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
308271    +
308272    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
308273    +
308274    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
308275    +
308276    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
308277    +
308278    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
308279    +
308280    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
308281    +
308282    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
308283    +
308284    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
308285    +
308286    +*** Generate dummy variables for G_Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for G_Marital_Status ;
308287    +drop G_Marital_Status0 G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   drop G_Marital_Status0 G_Marital_Status1 ;
308288    +if missing( G_Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( G_Marital_Status ) then do;
308289    +   G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
308290    +   G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
308291    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
308292    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
308293    +end;
MPRINT(EM_DIAGRAM):   end;
308294    +else do;
MPRINT(EM_DIAGRAM):   else do;
308295    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
308296    +   _dm12 = put( G_Marital_Status , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( G_Marital_Status , BEST12. );
308297    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
308298    +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
308299    +      G_Marital_Status0 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = -1;
308300    +      G_Marital_Status1 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = -1;
308301    +   end;
MPRINT(EM_DIAGRAM):   end;
308302    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
308303    +      G_Marital_Status0 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 1;
308304    +      G_Marital_Status1 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 0;
308305    +   end;
MPRINT(EM_DIAGRAM):   end;
308306    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
308307    +      G_Marital_Status0 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 0;
308308    +      G_Marital_Status1 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 1;
308309    +   end;
MPRINT(EM_DIAGRAM):   end;
308310    +   else do;
MPRINT(EM_DIAGRAM):   else do;
308311    +      G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
308312    +      G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
308313    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
308314    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
308315    +   end;
MPRINT(EM_DIAGRAM):   end;
308316    +end;
MPRINT(EM_DIAGRAM):   end;
308317    +
308318    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
308319    +*** Checking missing input Interval
308320    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
308321    +
308322    +IF NMISS(
308323    +   AcceptedCmpTotal ,
308324    +   Frq ,
308325    +   Income ,
308326    +   Mnt ,
308327    +   MntGoldProds ,
308328    +   MntMeatProducts ,
308329    +   MntWines ,
308330    +   NumDistPurchases ,
308331    +   RFMstat ,
308332    +   RMntFrq ,
308333    +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntGoldProds , 
MntMeatProducts , MntWines , NumDistPurchases , RFMstat , RMntFrq , Recency ) THEN DO;
308334    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
308335    +
308336    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
308337    +END;
MPRINT(EM_DIAGRAM):   END;
308338    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
308339    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
308340    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
308341    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
308342    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
308343    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
308344    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
308345    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
308346    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
308347    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
308348    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
308349    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
308350    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
308351    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
308352    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
308353    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
308354    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
308355    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
308356    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
308357    +END;
MPRINT(EM_DIAGRAM):   END;
308358    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
308359    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
308360    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
308361    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
308362    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
308363    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
308364    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
308365    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
308366    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
308367    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
308368    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
308369    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
308370    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
308371    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
308372    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
308373    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
308374    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
308375    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
308376    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
308377    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
308378    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
308379    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
308380    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
308381    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
308382    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
308383    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
308384    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
308385    +END;
MPRINT(EM_DIAGRAM):   END;
308386    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
308387    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
308388    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
308389    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
308390    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
308391    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
308392    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
308393    +   H1x1_1  =     0.33555011401553 * S_AcceptedCmpTotal
308394    +          +    -3.02490159760157 * S_Frq  +    -0.12761482391665 * S_Income
308395    +          +     -9.1169668394273 * S_Mnt  +     0.88214411094174 *
308396    +        S_MntGoldProds  +     16.4212241447522 * S_MntMeatProducts
308397    +          +     4.65784744010387 * S_MntWines  +     2.75620847659032 *
308398    +        S_NumDistPurchases  +     5.10796074430888 * S_RFMstat
308399    +          +    -0.15069444442326 * S_RMntFrq  +    -0.36037041233055 *
308400    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.33555011401553 * S_AcceptedCmpTotal + -3.02490159760157 * 
S_Frq + -0.12761482391665 * S_Income + -9.1169668394273 * S_Mnt + 0.88214411094174 * 
S_MntGoldProds + 16.4212241447522 * S_MntMeatProducts + 4.65784744010387 * S_MntWines + 
2.75620847659032 * S_NumDistPurchases + 5.10796074430888 * S_RFMstat + -0.15069444442326 * 
S_RMntFrq + -0.36037041233055 * S_Recency ;
308401    +   H1x1_2  =     -6.2107002884316 * S_AcceptedCmpTotal
308402    +          +      5.5991079844098 * S_Frq  +    -1.06506164052399 * S_Income
308403    +          +     7.16823320768258 * S_Mnt  +     1.97115223638004 *
308404    +        S_MntGoldProds  +     0.02973121977962 * S_MntMeatProducts
308405    +          +     3.28931008157038 * S_MntWines  +    -3.02545356699096 *
308406    +        S_NumDistPurchases  +    -0.45519831720714 * S_RFMstat
308407    +          +     2.14788986039061 * S_RMntFrq  +     7.13033786501062 *
308408    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -6.2107002884316 * S_AcceptedCmpTotal + 5.5991079844098 * S_Frq 
+ -1.06506164052399 * S_Income + 7.16823320768258 * S_Mnt + 1.97115223638004 * S_MntGoldProds 
+ 0.02973121977962 * S_MntMeatProducts + 3.28931008157038 * S_MntWines + -3.02545356699096 * 
S_NumDistPurchases + -0.45519831720714 * S_RFMstat + 2.14788986039061 * S_RMntFrq + 
7.13033786501062 * S_Recency ;
308409    +   H1x1_3  =    -0.31707769589072 * S_AcceptedCmpTotal
308410    +          +     -0.8436342869652 * S_Frq  +     0.04938014828703 * S_Income
308411    +          +     0.41074885451072 * S_Mnt  +    -0.22835264468248 *
308412    +        S_MntGoldProds  +     0.04154328332772 * S_MntMeatProducts
308413    +          +    -0.63526276335269 * S_MntWines  +     0.16430041832418 *
308414    +        S_NumDistPurchases  +    -0.01070081959406 * S_RFMstat
308415    +          +    -1.56851833223581 * S_RMntFrq  +     0.62478865123427 *
308416    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.31707769589072 * S_AcceptedCmpTotal + -0.8436342869652 * 
S_Frq + 0.04938014828703 * S_Income + 0.41074885451072 * S_Mnt + -0.22835264468248 * 
S_MntGoldProds + 0.04154328332772 * S_MntMeatProducts + -0.63526276335269 * S_MntWines + 
0.16430041832418 * S_NumDistPurchases + -0.01070081959406 * S_RFMstat + -1.56851833223581 * 
S_RMntFrq + 0.62478865123427 * S_Recency ;
308417    +   H1x1_4  =     0.54144616315359 * S_AcceptedCmpTotal
308418    +          +    -2.69605116285758 * S_Frq  +    -0.42453662943397 * S_Income
308419    +          +    -0.95657675439363 * S_Mnt  +     0.24420189860131 *
308420    +        S_MntGoldProds  +     2.44632795316553 * S_MntMeatProducts
308421    +          +     -0.1454644222769 * S_MntWines  +     2.34899307919173 *
308422    +        S_NumDistPurchases  +    -0.02462201574723 * S_RFMstat
308423    +          +    -2.08470857931815 * S_RMntFrq  +    -0.76249328143214 *
308424    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.54144616315359 * S_AcceptedCmpTotal + -2.69605116285758 * 
S_Frq + -0.42453662943397 * S_Income + -0.95657675439363 * S_Mnt + 0.24420189860131 * 
S_MntGoldProds + 2.44632795316553 * S_MntMeatProducts + -0.1454644222769 * S_MntWines + 
2.34899307919173 * S_NumDistPurchases + -0.02462201574723 * S_RFMstat + -2.08470857931815 * 
S_RMntFrq + -0.76249328143214 * S_Recency ;
308425    +   H1x1_1  = H1x1_1  +     0.00660823494191 * G_Marital_Status0
308426    +          +    -0.18825548425502 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.00660823494191 * G_Marital_Status0 + 
-0.18825548425502 * G_Marital_Status1 ;
308427    +   H1x1_2  = H1x1_2  +    -2.06051657300217 * G_Marital_Status0
308428    +          +    -6.25782340834073 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -2.06051657300217 * G_Marital_Status0 + 
-6.25782340834073 * G_Marital_Status1 ;
308429    +   H1x1_3  = H1x1_3  +    -0.79419358160841 * G_Marital_Status0
308430    +          +     0.34890327415646 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.79419358160841 * G_Marital_Status0 + 
0.34890327415646 * G_Marital_Status1 ;
308431    +   H1x1_4  = H1x1_4  +    -0.04651762606699 * G_Marital_Status0
308432    +          +     0.31552155976549 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.04651762606699 * G_Marital_Status0 + 
0.31552155976549 * G_Marital_Status1 ;
308433    +   H1x1_1  =      9.5912267385355 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 9.5912267385355 + H1x1_1 ;
308434    +   H1x1_2  =     -17.513407093022 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -17.513407093022 + H1x1_2 ;
308435    +   H1x1_3  =     3.77110114695743 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 3.77110114695743 + H1x1_3 ;
308436    +   H1x1_4  =    -1.34405555452152 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -1.34405555452152 + H1x1_4 ;
308437    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
308438    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
308439    +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
308440    +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
308441    +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
308442    +   H1x1_4  = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
308443    +END;
MPRINT(EM_DIAGRAM):   END;
308444    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
308445    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
308446    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
308447    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
308448    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
308449    +END;
MPRINT(EM_DIAGRAM):   END;
308450    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
308451    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
308452    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
308453    +
308454    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
308455    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
308456    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
308457    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
308458    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
308459    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
308460    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
308461    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
308462    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
308463    +end;
MPRINT(EM_DIAGRAM):   end;
308464    +else do;
MPRINT(EM_DIAGRAM):   else do;
308465    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
308466    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
308467    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
308468    +   end;
MPRINT(EM_DIAGRAM):   end;
308469    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
308470    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
308471    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
308472    +   end;
MPRINT(EM_DIAGRAM):   end;
308473    +   else do;
MPRINT(EM_DIAGRAM):   else do;
308474    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
308475    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
308476    +   end;
MPRINT(EM_DIAGRAM):   end;
308477    +end;
MPRINT(EM_DIAGRAM):   end;
308478    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
308479    +   P_DepVar1  =     17.1648278730429 * H1x1_1  +    -5.41550544466459 * H1x1_2
308480    +          +     -11.071053129929 * H1x1_3  +      10.744209891392 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 17.1648278730429 * H1x1_1 + -5.41550544466459 * H1x1_2 + 
-11.071053129929 * H1x1_3 + 10.744209891392 * H1x1_4 ;
308481    +   P_DepVar1  =    -12.0079203309727 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -12.0079203309727 + P_DepVar1 ;
308482    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
308483    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
308484    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
308485    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
308486    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
308487    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
308488    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
308489    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
308490    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
308491    +END;
MPRINT(EM_DIAGRAM):   END;
308492    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
308493    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
308494    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
308495    +END;
MPRINT(EM_DIAGRAM):   END;
308496    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
308497    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
308498    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
308499    +END;
MPRINT(EM_DIAGRAM):   END;
308500    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
308501    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
308502    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
308503    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
308504    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
308505    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
308506    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
308507    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
308508    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
308509    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
308510    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
308511    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
308512    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
308513    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
308514    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
308515    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
308516    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
308517    +END;
MPRINT(EM_DIAGRAM):   END;
308518    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
308519    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
308520    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
308521    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
308522    +* Renaming variables for AutoNeural33;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural33;
308523    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
308524    +* Renaming Posterior variables for AutoNeural33;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural33;
308525    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
308526    +drop AutoNeural33_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural33_P_DepVar1;
308527    +AutoNeural33_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural33_P_DepVar1 = P_DepVar1;
308528    +drop AutoNeural33_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural33_P_DepVar0;
308529    +AutoNeural33_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural33_P_DepVar0 = P_DepVar0;
308530    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
308531    +* Renaming _WARN_ variable for AutoNeural33;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural33;
308532    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
308533    +length AutoNeural33_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural33_WARN_ $4;
308534    +drop AutoNeural33_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural33_WARN_;
308535    +AutoNeural33_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural33_WARN_ = _WARN_;
308536    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
308537    +* Ensmbl19: Scoring Code of model 2 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl19: Scoring Code of model 2 of 5;
308538    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
308539    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
308540    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
308541    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
308542    +* NODE: AutoNeural28;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural28;
308543    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
308544    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
308545    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
308546    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
308547    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
308548    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
308549    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
308550    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
308551    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
308552    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
308553    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
308554    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
308555    +LENGTH _WARN_ $4
308556    +      F_DepVar  $ 12
308557    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
308558    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
308559    +
308560    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
308561    +
308562    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
308563    +
308564    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
308565    +
308566    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
308567    +
308568    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
308569    +
308570    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
308571    +
308572    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
308573    +
308574    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
308575    +
308576    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
308577    +
308578    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
308579    +
308580    +      label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
308581    +
308582    +      label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
308583    +
308584    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
308585    +
308586    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
308587    +
308588    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
308589    +
308590    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
308591    +
308592    +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
308593    +
308594    +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
308595    +
308596    +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
308597    +
308598    +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
308599    +
308600    +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
308601    +
308602    +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
308603    +
308604    +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
308605    +
308606    +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
308607    +
308608    +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
308609    +
308610    +      label H1x3_2 = 'Hidden: H1x3_=2' ;
MPRINT(EM_DIAGRAM):   label H1x3_2 = 'Hidden: H1x3_=2' ;
308611    +
308612    +      label H1x3_3 = 'Hidden: H1x3_=3' ;
MPRINT(EM_DIAGRAM):   label H1x3_3 = 'Hidden: H1x3_=3' ;
308613    +
308614    +      label H1x3_4 = 'Hidden: H1x3_=4' ;
MPRINT(EM_DIAGRAM):   label H1x3_4 = 'Hidden: H1x3_=4' ;
308615    +
308616    +      label H1x3_5 = 'Hidden: H1x3_=5' ;
MPRINT(EM_DIAGRAM):   label H1x3_5 = 'Hidden: H1x3_=5' ;
308617    +
308618    +      label H1x3_6 = 'Hidden: H1x3_=6' ;
MPRINT(EM_DIAGRAM):   label H1x3_6 = 'Hidden: H1x3_=6' ;
308619    +
308620    +      label H1x4_1 = 'Hidden: H1x4_=1' ;
MPRINT(EM_DIAGRAM):   label H1x4_1 = 'Hidden: H1x4_=1' ;
308621    +
308622    +      label H1x4_2 = 'Hidden: H1x4_=2' ;
MPRINT(EM_DIAGRAM):   label H1x4_2 = 'Hidden: H1x4_=2' ;
308623    +
308624    +      label H1x4_3 = 'Hidden: H1x4_=3' ;
MPRINT(EM_DIAGRAM):   label H1x4_3 = 'Hidden: H1x4_=3' ;
308625    +
308626    +      label H1x4_4 = 'Hidden: H1x4_=4' ;
MPRINT(EM_DIAGRAM):   label H1x4_4 = 'Hidden: H1x4_=4' ;
308627    +
308628    +      label H1x4_5 = 'Hidden: H1x4_=5' ;
MPRINT(EM_DIAGRAM):   label H1x4_5 = 'Hidden: H1x4_=5' ;
308629    +
308630    +      label H1x4_6 = 'Hidden: H1x4_=6' ;
MPRINT(EM_DIAGRAM):   label H1x4_6 = 'Hidden: H1x4_=6' ;
308631    +
308632    +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
308633    +
308634    +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
308635    +
308636    +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
308637    +
308638    +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
308639    +
308640    +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
308641    +
308642    +      label H2x1_6 = 'Hidden: H2x1_=6' ;
MPRINT(EM_DIAGRAM):   label H2x1_6 = 'Hidden: H2x1_=6' ;
308643    +
308644    +      label H2x2_1 = 'Hidden: H2x2_=1' ;
MPRINT(EM_DIAGRAM):   label H2x2_1 = 'Hidden: H2x2_=1' ;
308645    +
308646    +      label H2x2_2 = 'Hidden: H2x2_=2' ;
MPRINT(EM_DIAGRAM):   label H2x2_2 = 'Hidden: H2x2_=2' ;
308647    +
308648    +      label H2x2_3 = 'Hidden: H2x2_=3' ;
MPRINT(EM_DIAGRAM):   label H2x2_3 = 'Hidden: H2x2_=3' ;
308649    +
308650    +      label H2x2_4 = 'Hidden: H2x2_=4' ;
MPRINT(EM_DIAGRAM):   label H2x2_4 = 'Hidden: H2x2_=4' ;
308651    +
308652    +      label H2x2_5 = 'Hidden: H2x2_=5' ;
MPRINT(EM_DIAGRAM):   label H2x2_5 = 'Hidden: H2x2_=5' ;
308653    +
308654    +      label H2x2_6 = 'Hidden: H2x2_=6' ;
MPRINT(EM_DIAGRAM):   label H2x2_6 = 'Hidden: H2x2_=6' ;
308655    +
308656    +      label H2x3_1 = 'Hidden: H2x3_=1' ;
MPRINT(EM_DIAGRAM):   label H2x3_1 = 'Hidden: H2x3_=1' ;
308657    +
308658    +      label H2x3_2 = 'Hidden: H2x3_=2' ;
MPRINT(EM_DIAGRAM):   label H2x3_2 = 'Hidden: H2x3_=2' ;
308659    +
308660    +      label H2x3_3 = 'Hidden: H2x3_=3' ;
MPRINT(EM_DIAGRAM):   label H2x3_3 = 'Hidden: H2x3_=3' ;
308661    +
308662    +      label H2x3_4 = 'Hidden: H2x3_=4' ;
MPRINT(EM_DIAGRAM):   label H2x3_4 = 'Hidden: H2x3_=4' ;
308663    +
308664    +      label H2x3_5 = 'Hidden: H2x3_=5' ;
MPRINT(EM_DIAGRAM):   label H2x3_5 = 'Hidden: H2x3_=5' ;
308665    +
308666    +      label H2x3_6 = 'Hidden: H2x3_=6' ;
MPRINT(EM_DIAGRAM):   label H2x3_6 = 'Hidden: H2x3_=6' ;
308667    +
308668    +      label H3x1_1 = 'Hidden: H3x1_=1' ;
MPRINT(EM_DIAGRAM):   label H3x1_1 = 'Hidden: H3x1_=1' ;
308669    +
308670    +      label H3x1_2 = 'Hidden: H3x1_=2' ;
MPRINT(EM_DIAGRAM):   label H3x1_2 = 'Hidden: H3x1_=2' ;
308671    +
308672    +      label H3x1_3 = 'Hidden: H3x1_=3' ;
MPRINT(EM_DIAGRAM):   label H3x1_3 = 'Hidden: H3x1_=3' ;
308673    +
308674    +      label H3x1_4 = 'Hidden: H3x1_=4' ;
MPRINT(EM_DIAGRAM):   label H3x1_4 = 'Hidden: H3x1_=4' ;
308675    +
308676    +      label H3x1_5 = 'Hidden: H3x1_=5' ;
MPRINT(EM_DIAGRAM):   label H3x1_5 = 'Hidden: H3x1_=5' ;
308677    +
308678    +      label H3x1_6 = 'Hidden: H3x1_=6' ;
MPRINT(EM_DIAGRAM):   label H3x1_6 = 'Hidden: H3x1_=6' ;
308679    +
308680    +      label H3x2_1 = 'Hidden: H3x2_=1' ;
MPRINT(EM_DIAGRAM):   label H3x2_1 = 'Hidden: H3x2_=1' ;
308681    +
308682    +      label H3x2_2 = 'Hidden: H3x2_=2' ;
MPRINT(EM_DIAGRAM):   label H3x2_2 = 'Hidden: H3x2_=2' ;
308683    +
308684    +      label H3x2_3 = 'Hidden: H3x2_=3' ;
MPRINT(EM_DIAGRAM):   label H3x2_3 = 'Hidden: H3x2_=3' ;
308685    +
308686    +      label H3x2_4 = 'Hidden: H3x2_=4' ;
MPRINT(EM_DIAGRAM):   label H3x2_4 = 'Hidden: H3x2_=4' ;
308687    +
308688    +      label H3x2_5 = 'Hidden: H3x2_=5' ;
MPRINT(EM_DIAGRAM):   label H3x2_5 = 'Hidden: H3x2_=5' ;
308689    +
308690    +      label H3x2_6 = 'Hidden: H3x2_=6' ;
MPRINT(EM_DIAGRAM):   label H3x2_6 = 'Hidden: H3x2_=6' ;
308691    +
308692    +      label H4x1_1 = 'Hidden: H4x1_=1' ;
MPRINT(EM_DIAGRAM):   label H4x1_1 = 'Hidden: H4x1_=1' ;
308693    +
308694    +      label H4x1_2 = 'Hidden: H4x1_=2' ;
MPRINT(EM_DIAGRAM):   label H4x1_2 = 'Hidden: H4x1_=2' ;
308695    +
308696    +      label H4x1_3 = 'Hidden: H4x1_=3' ;
MPRINT(EM_DIAGRAM):   label H4x1_3 = 'Hidden: H4x1_=3' ;
308697    +
308698    +      label H4x1_4 = 'Hidden: H4x1_=4' ;
MPRINT(EM_DIAGRAM):   label H4x1_4 = 'Hidden: H4x1_=4' ;
308699    +
308700    +      label H4x1_5 = 'Hidden: H4x1_=5' ;
MPRINT(EM_DIAGRAM):   label H4x1_5 = 'Hidden: H4x1_=5' ;
308701    +
308702    +      label H4x1_6 = 'Hidden: H4x1_=6' ;
MPRINT(EM_DIAGRAM):   label H4x1_6 = 'Hidden: H4x1_=6' ;
308703    +
308704    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
308705    +
308706    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
308707    +
308708    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
308709    +
308710    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
308711    +
308712    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
308713    +
308714    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
308715    +
308716    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
308717    +
308718    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
308719    +
308720    +*** Generate dummy variables for G_Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for G_Marital_Status ;
308721    +drop G_Marital_Status0 G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   drop G_Marital_Status0 G_Marital_Status1 ;
308722    +if missing( G_Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( G_Marital_Status ) then do;
308723    +   G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
308724    +   G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
308725    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
308726    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
308727    +end;
MPRINT(EM_DIAGRAM):   end;
308728    +else do;
MPRINT(EM_DIAGRAM):   else do;
308729    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
308730    +   _dm12 = put( G_Marital_Status , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( G_Marital_Status , BEST12. );
308731    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
308732    +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
308733    +      G_Marital_Status0 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = -1;
308734    +      G_Marital_Status1 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = -1;
308735    +   end;
MPRINT(EM_DIAGRAM):   end;
308736    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
308737    +      G_Marital_Status0 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 1;
308738    +      G_Marital_Status1 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 0;
308739    +   end;
MPRINT(EM_DIAGRAM):   end;
308740    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
308741    +      G_Marital_Status0 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 0;
308742    +      G_Marital_Status1 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 1;
308743    +   end;
MPRINT(EM_DIAGRAM):   end;
308744    +   else do;
MPRINT(EM_DIAGRAM):   else do;
308745    +      G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
308746    +      G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
308747    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
308748    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
308749    +   end;
MPRINT(EM_DIAGRAM):   end;
308750    +end;
MPRINT(EM_DIAGRAM):   end;
308751    +
308752    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
308753    +*** Checking missing input Interval
308754    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
308755    +
308756    +IF NMISS(
308757    +   AcceptedCmpTotal ,
308758    +   Frq ,
308759    +   Income ,
308760    +   Mnt ,
308761    +   MntGoldProds ,
308762    +   MntMeatProducts ,
308763    +   MntWines ,
308764    +   NumDistPurchases ,
308765    +   RFMstat ,
308766    +   RMntFrq ,
308767    +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntGoldProds , 
MntMeatProducts , MntWines , NumDistPurchases , RFMstat , RMntFrq , Recency ) THEN DO;
308768    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
308769    +
308770    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
308771    +END;
MPRINT(EM_DIAGRAM):   END;
308772    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
308773    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
308774    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
308775    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
308776    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
308777    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
308778    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
308779    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
308780    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
308781    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
308782    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
308783    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
308784    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
308785    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
308786    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
308787    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
308788    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
308789    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
308790    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
308791    +END;
MPRINT(EM_DIAGRAM):   END;
308792    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
308793    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
308794    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
308795    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
308796    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
308797    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
308798    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
308799    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
308800    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
308801    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
308802    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
308803    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
308804    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
308805    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
308806    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
308807    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
308808    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
308809    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
308810    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
308811    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
308812    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
308813    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
308814    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
308815    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
308816    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
308817    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
308818    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
308819    +END;
MPRINT(EM_DIAGRAM):   END;
308820    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
308821    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
308822    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
308823    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
308824    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
308825    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
308826    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
308827    +   H1x1_1  =     3.15417213555791 * S_AcceptedCmpTotal
308828    +          +    -2.48200966202064 * S_Frq  +     1.79801309624052 * S_Income
308829    +          +    -1.96453924225923 * S_Mnt  +    -0.73447750078211 *
308830    +        S_MntGoldProds  +    -1.52540613833145 * S_MntMeatProducts
308831    +          +    -2.34651136428537 * S_MntWines  +     1.78713249203795 *
308832    +        S_NumDistPurchases  +    -1.89877446252459 * S_RFMstat
308833    +          +     0.40523847190984 * S_RMntFrq  +    -5.00157954960261 *
308834    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 3.15417213555791 * S_AcceptedCmpTotal + -2.48200966202064 * 
S_Frq + 1.79801309624052 * S_Income + -1.96453924225923 * S_Mnt + -0.73447750078211 * 
S_MntGoldProds + -1.52540613833145 * S_MntMeatProducts + -2.34651136428537 * S_MntWines + 
1.78713249203795 * S_NumDistPurchases + -1.89877446252459 * S_RFMstat + 0.40523847190984 * 
S_RMntFrq + -5.00157954960261 * S_Recency ;
308835    +   H1x1_2  =     -0.4296332791258 * S_AcceptedCmpTotal
308836    +          +     1.69454720747031 * S_Frq  +     0.65291994437462 * S_Income
308837    +          +     4.94289741649285 * S_Mnt  +    -0.74724168333375 *
308838    +        S_MntGoldProds  +    -4.37885511745275 * S_MntMeatProducts
308839    +          +    -0.79918604028406 * S_MntWines  +    -2.55554908870931 *
308840    +        S_NumDistPurchases  +      -0.357509020401 * S_RFMstat
308841    +          +     2.81206015252461 * S_RMntFrq  +       0.376849190211 *
308842    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.4296332791258 * S_AcceptedCmpTotal + 1.69454720747031 * 
S_Frq + 0.65291994437462 * S_Income + 4.94289741649285 * S_Mnt + -0.74724168333375 * 
S_MntGoldProds + -4.37885511745275 * S_MntMeatProducts + -0.79918604028406 * S_MntWines + 
-2.55554908870931 * S_NumDistPurchases + -0.357509020401 * S_RFMstat + 2.81206015252461 * 
S_RMntFrq + 0.376849190211 * S_Recency ;
308843    +   H1x1_3  =     0.22275326994217 * S_AcceptedCmpTotal
308844    +          +     1.30327962429821 * S_Frq  +     8.11675617892245 * S_Income
308845    +          +     1.26763916951276 * S_Mnt  +     -0.2686825897259 *
308846    +        S_MntGoldProds  +    -1.42114074651211 * S_MntMeatProducts
308847    +          +    -1.76821642666458 * S_MntWines  +    -1.91323522505912 *
308848    +        S_NumDistPurchases  +    -0.12369288380556 * S_RFMstat
308849    +          +     -0.5961110037328 * S_RMntFrq  +     1.45489277444882 *
308850    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.22275326994217 * S_AcceptedCmpTotal + 1.30327962429821 * 
S_Frq + 8.11675617892245 * S_Income + 1.26763916951276 * S_Mnt + -0.2686825897259 * 
S_MntGoldProds + -1.42114074651211 * S_MntMeatProducts + -1.76821642666458 * S_MntWines + 
-1.91323522505912 * S_NumDistPurchases + -0.12369288380556 * S_RFMstat + -0.5961110037328 * 
S_RMntFrq + 1.45489277444882 * S_Recency ;
308851    +   H1x1_4  =     0.65694888778783 * S_AcceptedCmpTotal
308852    +          +    -2.46645772884275 * S_Frq  +     2.56090496460471 * S_Income
308853    +          +     1.47469720902355 * S_Mnt  +    -0.23044042020952 *
308854    +        S_MntGoldProds  +     1.09436190473143 * S_MntMeatProducts
308855    +          +    -0.07872477007968 * S_MntWines  +     2.35913880285028 *
308856    +        S_NumDistPurchases  +     0.36553596420262 * S_RFMstat
308857    +          +    -1.52014700293876 * S_RMntFrq  +    -1.62001903467763 *
308858    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.65694888778783 * S_AcceptedCmpTotal + -2.46645772884275 * 
S_Frq + 2.56090496460471 * S_Income + 1.47469720902355 * S_Mnt + -0.23044042020952 * 
S_MntGoldProds + 1.09436190473143 * S_MntMeatProducts + -0.07872477007968 * S_MntWines + 
2.35913880285028 * S_NumDistPurchases + 0.36553596420262 * S_RFMstat + -1.52014700293876 * 
S_RMntFrq + -1.62001903467763 * S_Recency ;
308859    +   H1x1_5  =    -0.06045586654134 * S_AcceptedCmpTotal
308860    +          +    -1.51896554067022 * S_Frq  +    -0.77690899609172 * S_Income
308861    +          +    -3.83443076797312 * S_Mnt  +    -0.49066287190692 *
308862    +        S_MntGoldProds  +     7.74304126889741 * S_MntMeatProducts
308863    +          +     0.97717560040665 * S_MntWines  +     2.55833904797689 *
308864    +        S_NumDistPurchases  +     3.33552253786577 * S_RFMstat
308865    +          +     2.15128325510301 * S_RMntFrq  +     0.51475149451235 *
308866    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.06045586654134 * S_AcceptedCmpTotal + -1.51896554067022 * 
S_Frq + -0.77690899609172 * S_Income + -3.83443076797312 * S_Mnt + -0.49066287190692 * 
S_MntGoldProds + 7.74304126889741 * S_MntMeatProducts + 0.97717560040665 * S_MntWines + 
2.55833904797689 * S_NumDistPurchases + 3.33552253786577 * S_RFMstat + 2.15128325510301 * 
S_RMntFrq + 0.51475149451235 * S_Recency ;
308867    +   H1x1_6  =    -2.00102225492393 * S_AcceptedCmpTotal
308868    +          +    -0.55313430858805 * S_Frq  +    -2.80039880440251 * S_Income
308869    +          +    -0.52613628819852 * S_Mnt  +    -1.25580169134654 *
308870    +        S_MntGoldProds  +    -1.44511464402737 * S_MntMeatProducts
308871    +          +    -0.66744558284147 * S_MntWines  +     3.15612301024597 *
308872    +        S_NumDistPurchases  +    -0.57805918326136 * S_RFMstat
308873    +          +     0.13349014037678 * S_RMntFrq  +    -1.97053621157132 *
308874    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -2.00102225492393 * S_AcceptedCmpTotal + -0.55313430858805 * 
S_Frq + -2.80039880440251 * S_Income + -0.52613628819852 * S_Mnt + -1.25580169134654 * 
S_MntGoldProds + -1.44511464402737 * S_MntMeatProducts + -0.66744558284147 * S_MntWines + 
3.15612301024597 * S_NumDistPurchases + -0.57805918326136 * S_RFMstat + 0.13349014037678 * 
S_RMntFrq + -1.97053621157132 * S_Recency ;
308875    +   H1x1_1  = H1x1_1  +     1.38825657874217 * G_Marital_Status0
308876    +          +     0.90195662603521 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 1.38825657874217 * G_Marital_Status0 + 
0.90195662603521 * G_Marital_Status1 ;
308877    +   H1x1_2  = H1x1_2  +     0.88138395159348 * G_Marital_Status0
308878    +          +    -0.49019446056296 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.88138395159348 * G_Marital_Status0 + 
-0.49019446056296 * G_Marital_Status1 ;
308879    +   H1x1_3  = H1x1_3  +     0.30990330359421 * G_Marital_Status0
308880    +          +     1.10544938214372 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.30990330359421 * G_Marital_Status0 + 
1.10544938214372 * G_Marital_Status1 ;
308881    +   H1x1_4  = H1x1_4  +     1.70251598227875 * G_Marital_Status0
308882    +          +     0.87683669160259 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 1.70251598227875 * G_Marital_Status0 + 
0.87683669160259 * G_Marital_Status1 ;
308883    +   H1x1_5  = H1x1_5  +    -0.14678805736317 * G_Marital_Status0
308884    +          +    -0.13246180955576 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.14678805736317 * G_Marital_Status0 + 
-0.13246180955576 * G_Marital_Status1 ;
308885    +   H1x1_6  = H1x1_6  +     -0.6511155024316 * G_Marital_Status0
308886    +          +     0.24707257141342 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + -0.6511155024316 * G_Marital_Status0 + 
0.24707257141342 * G_Marital_Status1 ;
308887    +   H1x1_1  =     4.82277728923766 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 4.82277728923766 + H1x1_1 ;
308888    +   H1x1_2  =     2.49777705822347 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 2.49777705822347 + H1x1_2 ;
308889    +   H1x1_3  =    -0.93289135595041 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.93289135595041 + H1x1_3 ;
308890    +   H1x1_4  =    -7.80421802944398 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -7.80421802944398 + H1x1_4 ;
308891    +   H1x1_5  =     6.46115064589724 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 6.46115064589724 + H1x1_5 ;
308892    +   H1x1_6  =     3.21096596966888 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 3.21096596966888 + H1x1_6 ;
308893    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
308894    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
308895    +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
308896    +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
308897    +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
308898    +   H1x1_4  = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
308899    +   H1x1_5  = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_5 = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
308900    +   H1x1_6  = 1.0 / (1.0 + EXP(MIN( - H1x1_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_6 = 1.0 / (1.0 + EXP(MIN( - H1x1_6 , _EXP_BAR)));
308901    +END;
MPRINT(EM_DIAGRAM):   END;
308902    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
308903    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
308904    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
308905    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
308906    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
308907    +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
308908    +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
308909    +END;
MPRINT(EM_DIAGRAM):   END;
308910    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
308911    +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
308912    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
308913    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
308914    +   H1x2_1  =    -0.30711239275958 * S_AcceptedCmpTotal
308915    +          +    -1.45395291114633 * S_Frq  +     0.87594950917085 * S_Income
308916    +          +    -0.72639274085105 * S_Mnt  +    -2.47797355837112 *
308917    +        S_MntGoldProds  +     0.68384082088335 * S_MntMeatProducts
308918    +          +     0.65600644755641 * S_MntWines  +      0.8163360453447 *
308919    +        S_NumDistPurchases  +    -1.09587924440912 * S_RFMstat
308920    +          +     1.48347762248449 * S_RMntFrq  +      0.2335216261547 *
308921    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.30711239275958 * S_AcceptedCmpTotal + -1.45395291114633 * 
S_Frq + 0.87594950917085 * S_Income + -0.72639274085105 * S_Mnt + -2.47797355837112 * 
S_MntGoldProds + 0.68384082088335 * S_MntMeatProducts + 0.65600644755641 * S_MntWines + 
0.8163360453447 * S_NumDistPurchases + -1.09587924440912 * S_RFMstat + 1.48347762248449 * 
S_RMntFrq + 0.2335216261547 * S_Recency ;
308922    +   H1x2_2  =     2.57777770372275 * S_AcceptedCmpTotal
308923    +          +    -0.08699050003337 * S_Frq  +      0.9048262025585 * S_Income
308924    +          +     0.80716409242733 * S_Mnt  +     0.92862088643502 *
308925    +        S_MntGoldProds  +     1.28722996014956 * S_MntMeatProducts
308926    +          +    -0.78107065942411 * S_MntWines  +     2.29787925805392 *
308927    +        S_NumDistPurchases  +     -0.7095984076797 * S_RFMstat
308928    +          +    -0.75276407747323 * S_RMntFrq  +    -2.14859674388241 *
308929    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 2.57777770372275 * S_AcceptedCmpTotal + -0.08699050003337 * 
S_Frq + 0.9048262025585 * S_Income + 0.80716409242733 * S_Mnt + 0.92862088643502 * 
S_MntGoldProds + 1.28722996014956 * S_MntMeatProducts + -0.78107065942411 * S_MntWines + 
2.29787925805392 * S_NumDistPurchases + -0.7095984076797 * S_RFMstat + -0.75276407747323 * 
S_RMntFrq + -2.14859674388241 * S_Recency ;
308930    +   H1x2_3  =    -0.19225474668372 * S_AcceptedCmpTotal
308931    +          +     -0.5399776824486 * S_Frq  +    -0.33342356858106 * S_Income
308932    +          +      0.4662552460972 * S_Mnt  +    -0.83897697999245 *
308933    +        S_MntGoldProds  +    -1.02069791829975 * S_MntMeatProducts
308934    +          +    -0.77568646594215 * S_MntWines  +    -2.64172584610703 *
308935    +        S_NumDistPurchases  +     1.22587043380457 * S_RFMstat
308936    +          +    -1.22124295004478 * S_RMntFrq  +     0.72727673065668 *
308937    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.19225474668372 * S_AcceptedCmpTotal + -0.5399776824486 * 
S_Frq + -0.33342356858106 * S_Income + 0.4662552460972 * S_Mnt + -0.83897697999245 * 
S_MntGoldProds + -1.02069791829975 * S_MntMeatProducts + -0.77568646594215 * S_MntWines + 
-2.64172584610703 * S_NumDistPurchases + 1.22587043380457 * S_RFMstat + -1.22124295004478 * 
S_RMntFrq + 0.72727673065668 * S_Recency ;
308938    +   H1x2_4  =     1.07963833884217 * S_AcceptedCmpTotal
308939    +          +    -1.30033554705908 * S_Frq  +     0.80740030463615 * S_Income
308940    +          +    -1.73808129607223 * S_Mnt  +     1.21346647777818 *
308941    +        S_MntGoldProds  +     0.69007605858806 * S_MntMeatProducts
308942    +          +     0.31548401471349 * S_MntWines  +    -0.45355998387313 *
308943    +        S_NumDistPurchases  +     1.13504256910361 * S_RFMstat
308944    +          +    -0.45561637629388 * S_RMntFrq  +    -1.42094697023704 *
308945    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 1.07963833884217 * S_AcceptedCmpTotal + -1.30033554705908 * 
S_Frq + 0.80740030463615 * S_Income + -1.73808129607223 * S_Mnt + 1.21346647777818 * 
S_MntGoldProds + 0.69007605858806 * S_MntMeatProducts + 0.31548401471349 * S_MntWines + 
-0.45355998387313 * S_NumDistPurchases + 1.13504256910361 * S_RFMstat + -0.45561637629388 * 
S_RMntFrq + -1.42094697023704 * S_Recency ;
308946    +   H1x2_5  =     0.30163018627699 * S_AcceptedCmpTotal
308947    +          +    -0.73947459722676 * S_Frq  +      0.3117229426353 * S_Income
308948    +          +     1.78189396082002 * S_Mnt  +    -1.51478593904163 *
308949    +        S_MntGoldProds  +    -1.30328540691967 * S_MntMeatProducts
308950    +          +     0.48947220852953 * S_MntWines  +     0.25380878841531 *
308951    +        S_NumDistPurchases  +    -0.09429027402746 * S_RFMstat
308952    +          +     2.79720421337828 * S_RMntFrq  +    -0.08024855242737 *
308953    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 0.30163018627699 * S_AcceptedCmpTotal + -0.73947459722676 * 
S_Frq + 0.3117229426353 * S_Income + 1.78189396082002 * S_Mnt + -1.51478593904163 * 
S_MntGoldProds + -1.30328540691967 * S_MntMeatProducts + 0.48947220852953 * S_MntWines + 
0.25380878841531 * S_NumDistPurchases + -0.09429027402746 * S_RFMstat + 2.79720421337828 * 
S_RMntFrq + -0.08024855242737 * S_Recency ;
308954    +   H1x2_6  =    -0.05006047355159 * S_AcceptedCmpTotal
308955    +          +     0.01838632143297 * S_Frq  +    -1.04892137940395 * S_Income
308956    +          +    -0.33949418476309 * S_Mnt  +     1.27820886482898 *
308957    +        S_MntGoldProds  +      0.1541042926193 * S_MntMeatProducts
308958    +          +    -0.30996391960135 * S_MntWines  +     0.69532310497927 *
308959    +        S_NumDistPurchases  +    -0.51247610421467 * S_RFMstat
308960    +          +    -0.87640728095011 * S_RMntFrq  +     1.79661996586627 *
308961    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_6 = -0.05006047355159 * S_AcceptedCmpTotal + 0.01838632143297 * 
S_Frq + -1.04892137940395 * S_Income + -0.33949418476309 * S_Mnt + 1.27820886482898 * 
S_MntGoldProds + 0.1541042926193 * S_MntMeatProducts + -0.30996391960135 * S_MntWines + 
0.69532310497927 * S_NumDistPurchases + -0.51247610421467 * S_RFMstat + -0.87640728095011 * 
S_RMntFrq + 1.79661996586627 * S_Recency ;
308962    +   H1x2_1  = H1x2_1  +    -1.52372947412233 * G_Marital_Status0
308963    +          +     0.61190614442174 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -1.52372947412233 * G_Marital_Status0 + 
0.61190614442174 * G_Marital_Status1 ;
308964    +   H1x2_2  = H1x2_2  +     -0.2899112326334 * G_Marital_Status0
308965    +          +    -0.43943770039245 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.2899112326334 * G_Marital_Status0 + 
-0.43943770039245 * G_Marital_Status1 ;
308966    +   H1x2_3  = H1x2_3  +    -1.30447843367338 * G_Marital_Status0
308967    +          +     0.36969296112687 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -1.30447843367338 * G_Marital_Status0 + 
0.36969296112687 * G_Marital_Status1 ;
308968    +   H1x2_4  = H1x2_4  +     1.06192432928756 * G_Marital_Status0
308969    +          +    -0.48897798100871 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 1.06192432928756 * G_Marital_Status0 + 
-0.48897798100871 * G_Marital_Status1 ;
308970    +   H1x2_5  = H1x2_5  +     1.24023950705702 * G_Marital_Status0
308971    +          +     -0.0768652239427 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 1.24023950705702 * G_Marital_Status0 + 
-0.0768652239427 * G_Marital_Status1 ;
308972    +   H1x2_6  = H1x2_6  +    -0.79854804689099 * G_Marital_Status0
308973    +          +    -0.58590001312977 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + -0.79854804689099 * G_Marital_Status0 + 
-0.58590001312977 * G_Marital_Status1 ;
308974    +   H1x2_1  =    -1.24057312487712 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -1.24057312487712 + H1x2_1 ;
308975    +   H1x2_2  =    -0.68291139361923 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.68291139361923 + H1x2_2 ;
308976    +   H1x2_3  =     1.06420344729961 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = 1.06420344729961 + H1x2_3 ;
308977    +   H1x2_4  =    -2.69713708678823 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -2.69713708678823 + H1x2_4 ;
308978    +   H1x2_5  =    -0.12447063994137 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.12447063994137 + H1x2_5 ;
308979    +   H1x2_6  =     -1.0719988986801 + H1x2_6 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = -1.0719988986801 + H1x2_6 ;
308980    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
308981    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
308982    +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
308983    +   H1x2_2  = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_2 = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
308984    +   H1x2_3  = 1.0 / (1.0 + EXP(MIN( - H1x2_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_3 = 1.0 / (1.0 + EXP(MIN( - H1x2_3 , _EXP_BAR)));
308985    +   H1x2_4  = 1.0 / (1.0 + EXP(MIN( - H1x2_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_4 = 1.0 / (1.0 + EXP(MIN( - H1x2_4 , _EXP_BAR)));
308986    +   H1x2_5  = 1.0 / (1.0 + EXP(MIN( - H1x2_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.0 / (1.0 + EXP(MIN( - H1x2_5 , _EXP_BAR)));
308987    +   H1x2_6  = 1.0 / (1.0 + EXP(MIN( - H1x2_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_6 = 1.0 / (1.0 + EXP(MIN( - H1x2_6 , _EXP_BAR)));
308988    +END;
MPRINT(EM_DIAGRAM):   END;
308989    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
308990    +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
308991    +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
308992    +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
308993    +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
308994    +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
308995    +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
308996    +END;
MPRINT(EM_DIAGRAM):   END;
308997    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
308998    +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
308999    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
309000    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
309001    +   H1x3_1  =     0.58141896766328 * S_AcceptedCmpTotal
309002    +          +     0.88835106317195 * S_Frq  +     1.03397412242189 * S_Income
309003    +          +    -0.19511498332885 * S_Mnt  +     0.79222351582255 *
309004    +        S_MntGoldProds  +     1.84666352042484 * S_MntMeatProducts
309005    +          +     0.26439819900146 * S_MntWines  +    -0.49316136014272 *
309006    +        S_NumDistPurchases  +    -1.53931690693652 * S_RFMstat
309007    +          +     0.66163259224518 * S_RMntFrq  +    -0.05038100966606 *
309008    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.58141896766328 * S_AcceptedCmpTotal + 0.88835106317195 * 
S_Frq + 1.03397412242189 * S_Income + -0.19511498332885 * S_Mnt + 0.79222351582255 * 
S_MntGoldProds + 1.84666352042484 * S_MntMeatProducts + 0.26439819900146 * S_MntWines + 
-0.49316136014272 * S_NumDistPurchases + -1.53931690693652 * S_RFMstat + 0.66163259224518 * 
S_RMntFrq + -0.05038100966606 * S_Recency ;
309009    +   H1x3_2  =    -0.66965742898236 * S_AcceptedCmpTotal
309010    +          +     0.11439761295336 * S_Frq  +      0.4311111590428 * S_Income
309011    +          +     0.56419594384106 * S_Mnt  +    -2.58586026844722 *
309012    +        S_MntGoldProds  +     0.84843617907069 * S_MntMeatProducts
309013    +          +    -0.40949465894409 * S_MntWines  +    -1.12254199224924 *
309014    +        S_NumDistPurchases  +    -1.73672932018459 * S_RFMstat
309015    +          +     0.60800652848154 * S_RMntFrq  +     0.90023461529092 *
309016    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_2 = -0.66965742898236 * S_AcceptedCmpTotal + 0.11439761295336 * 
S_Frq + 0.4311111590428 * S_Income + 0.56419594384106 * S_Mnt + -2.58586026844722 * 
S_MntGoldProds + 0.84843617907069 * S_MntMeatProducts + -0.40949465894409 * S_MntWines + 
-1.12254199224924 * S_NumDistPurchases + -1.73672932018459 * S_RFMstat + 0.60800652848154 * 
S_RMntFrq + 0.90023461529092 * S_Recency ;
309017    +   H1x3_3  =     0.64116254904887 * S_AcceptedCmpTotal
309018    +          +     0.36521168161033 * S_Frq  +    -1.65592742965949 * S_Income
309019    +          +    -1.13010637801203 * S_Mnt  +     1.18435160743823 *
309020    +        S_MntGoldProds  +     0.61014939723339 * S_MntMeatProducts
309021    +          +     0.57967362971329 * S_MntWines  +    -0.00705774722842 *
309022    +        S_NumDistPurchases  +    -0.09732595050305 * S_RFMstat
309023    +          +    -1.58268748567816 * S_RMntFrq  +    -1.00117301133743 *
309024    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_3 = 0.64116254904887 * S_AcceptedCmpTotal + 0.36521168161033 * 
S_Frq + -1.65592742965949 * S_Income + -1.13010637801203 * S_Mnt + 1.18435160743823 * 
S_MntGoldProds + 0.61014939723339 * S_MntMeatProducts + 0.57967362971329 * S_MntWines + 
-0.00705774722842 * S_NumDistPurchases + -0.09732595050305 * S_RFMstat + -1.58268748567816 * 
S_RMntFrq + -1.00117301133743 * S_Recency ;
309025    +   H1x3_4  =    -2.38943135123073 * S_AcceptedCmpTotal
309026    +          +     0.50616478854457 * S_Frq  +     1.68985840818789 * S_Income
309027    +          +    -0.51011802824515 * S_Mnt  +     1.25167622017055 *
309028    +        S_MntGoldProds  +    -0.78430871718616 * S_MntMeatProducts
309029    +          +     0.97685472578698 * S_MntWines  +    -0.66992601103029 *
309030    +        S_NumDistPurchases  +    -0.28545877583545 * S_RFMstat
309031    +          +     0.52712575990538 * S_RMntFrq  +     1.51096273676103 *
309032    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_4 = -2.38943135123073 * S_AcceptedCmpTotal + 0.50616478854457 * 
S_Frq + 1.68985840818789 * S_Income + -0.51011802824515 * S_Mnt + 1.25167622017055 * 
S_MntGoldProds + -0.78430871718616 * S_MntMeatProducts + 0.97685472578698 * S_MntWines + 
-0.66992601103029 * S_NumDistPurchases + -0.28545877583545 * S_RFMstat + 0.52712575990538 * 
S_RMntFrq + 1.51096273676103 * S_Recency ;
309033    +   H1x3_5  =     0.27293739636898 * S_AcceptedCmpTotal
309034    +          +     0.44515009768765 * S_Frq  +     -0.4521347788574 * S_Income
309035    +          +     0.43943223859703 * S_Mnt  +     1.17781847894182 *
309036    +        S_MntGoldProds  +    -0.67700757595581 * S_MntMeatProducts
309037    +          +    -1.46437355846341 * S_MntWines  +    -0.09365592083561 *
309038    +        S_NumDistPurchases  +     0.94926901433762 * S_RFMstat
309039    +          +     2.40216905424957 * S_RMntFrq  +     0.65859109347516 *
309040    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_5 = 0.27293739636898 * S_AcceptedCmpTotal + 0.44515009768765 * 
S_Frq + -0.4521347788574 * S_Income + 0.43943223859703 * S_Mnt + 1.17781847894182 * 
S_MntGoldProds + -0.67700757595581 * S_MntMeatProducts + -1.46437355846341 * S_MntWines + 
-0.09365592083561 * S_NumDistPurchases + 0.94926901433762 * S_RFMstat + 2.40216905424957 * 
S_RMntFrq + 0.65859109347516 * S_Recency ;
309041    +   H1x3_6  =     0.79944121174459 * S_AcceptedCmpTotal
309042    +          +     0.19594924011495 * S_Frq  +     1.07233338144708 * S_Income
309043    +          +    -0.39577530492174 * S_Mnt  +    -0.18122578134776 *
309044    +        S_MntGoldProds  +    -0.26451891721245 * S_MntMeatProducts
309045    +          +    -0.86856724355925 * S_MntWines  +    -1.81909916765471 *
309046    +        S_NumDistPurchases  +     1.03983663011092 * S_RFMstat
309047    +          +    -0.86768378180894 * S_RMntFrq  +     0.40747604583851 *
309048    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_6 = 0.79944121174459 * S_AcceptedCmpTotal + 0.19594924011495 * 
S_Frq + 1.07233338144708 * S_Income + -0.39577530492174 * S_Mnt + -0.18122578134776 * 
S_MntGoldProds + -0.26451891721245 * S_MntMeatProducts + -0.86856724355925 * S_MntWines + 
-1.81909916765471 * S_NumDistPurchases + 1.03983663011092 * S_RFMstat + -0.86768378180894 * 
S_RMntFrq + 0.40747604583851 * S_Recency ;
309049    +   H1x3_1  = H1x3_1  +    -1.44819834546359 * G_Marital_Status0
309050    +          +     2.03049158937708 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + -1.44819834546359 * G_Marital_Status0 + 
2.03049158937708 * G_Marital_Status1 ;
309051    +   H1x3_2  = H1x3_2  +     0.32142977922032 * G_Marital_Status0
309052    +          +     0.95456795317325 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + 0.32142977922032 * G_Marital_Status0 + 
0.95456795317325 * G_Marital_Status1 ;
309053    +   H1x3_3  = H1x3_3  +    -0.05546140673943 * G_Marital_Status0
309054    +          +    -0.64267205173982 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 + -0.05546140673943 * G_Marital_Status0 + 
-0.64267205173982 * G_Marital_Status1 ;
309055    +   H1x3_4  = H1x3_4  +     0.67758459902812 * G_Marital_Status0
309056    +          +    -0.13878277097624 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 + 0.67758459902812 * G_Marital_Status0 + 
-0.13878277097624 * G_Marital_Status1 ;
309057    +   H1x3_5  = H1x3_5  +      0.2080585980069 * G_Marital_Status0
309058    +          +     0.39530416624983 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 + 0.2080585980069 * G_Marital_Status0 + 0.39530416624983 
* G_Marital_Status1 ;
309059    +   H1x3_6  = H1x3_6  +    -0.56268194068278 * G_Marital_Status0
309060    +          +    -1.38939757582535 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x3_6 = H1x3_6 + -0.56268194068278 * G_Marital_Status0 + 
-1.38939757582535 * G_Marital_Status1 ;
309061    +   H1x3_1  =    -0.02110450300917 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = -0.02110450300917 + H1x3_1 ;
309062    +   H1x3_2  =     0.68400964836412 + H1x3_2 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = 0.68400964836412 + H1x3_2 ;
309063    +   H1x3_3  =     1.27295692924548 + H1x3_3 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = 1.27295692924548 + H1x3_3 ;
309064    +   H1x3_4  =     0.57759340173339 + H1x3_4 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = 0.57759340173339 + H1x3_4 ;
309065    +   H1x3_5  =     0.68658947855937 + H1x3_5 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = 0.68658947855937 + H1x3_5 ;
309066    +   H1x3_6  =     0.96960260915788 + H1x3_6 ;
MPRINT(EM_DIAGRAM):   H1x3_6 = 0.96960260915788 + H1x3_6 ;
309067    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
309068    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
309069    +   H1x3_1  = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_1 = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
309070    +   H1x3_2  = 1.0 / (1.0 + EXP(MIN( - H1x3_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_2 = 1.0 / (1.0 + EXP(MIN( - H1x3_2 , _EXP_BAR)));
309071    +   H1x3_3  = 1.0 / (1.0 + EXP(MIN( - H1x3_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_3 = 1.0 / (1.0 + EXP(MIN( - H1x3_3 , _EXP_BAR)));
309072    +   H1x3_4  = 1.0 / (1.0 + EXP(MIN( - H1x3_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_4 = 1.0 / (1.0 + EXP(MIN( - H1x3_4 , _EXP_BAR)));
309073    +   H1x3_5  = 1.0 / (1.0 + EXP(MIN( - H1x3_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_5 = 1.0 / (1.0 + EXP(MIN( - H1x3_5 , _EXP_BAR)));
309074    +   H1x3_6  = 1.0 / (1.0 + EXP(MIN( - H1x3_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_6 = 1.0 / (1.0 + EXP(MIN( - H1x3_6 , _EXP_BAR)));
309075    +END;
MPRINT(EM_DIAGRAM):   END;
309076    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
309077    +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
309078    +   H1x3_2  = .;
MPRINT(EM_DIAGRAM):   H1x3_2 = .;
309079    +   H1x3_3  = .;
MPRINT(EM_DIAGRAM):   H1x3_3 = .;
309080    +   H1x3_4  = .;
MPRINT(EM_DIAGRAM):   H1x3_4 = .;
309081    +   H1x3_5  = .;
MPRINT(EM_DIAGRAM):   H1x3_5 = .;
309082    +   H1x3_6  = .;
MPRINT(EM_DIAGRAM):   H1x3_6 = .;
309083    +END;
MPRINT(EM_DIAGRAM):   END;
309084    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
309085    +*** Writing the Node H1x4_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x4_ ;
309086    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
309087    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
309088    +   H1x4_1  =     1.13261766886471 * S_AcceptedCmpTotal
309089    +          +     0.78824304763496 * S_Frq  +    -1.86817100110189 * S_Income
309090    +          +    -1.58760227599089 * S_Mnt  +     -1.1330886213304 *
309091    +        S_MntGoldProds  +     0.82082069255126 * S_MntMeatProducts
309092    +          +    -0.34149449572975 * S_MntWines  +     0.45944109671738 *
309093    +        S_NumDistPurchases  +     2.00910621486809 * S_RFMstat
309094    +          +     -1.8305685414059 * S_RMntFrq  +     1.46038466341548 *
309095    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x4_1 = 1.13261766886471 * S_AcceptedCmpTotal + 0.78824304763496 * 
S_Frq + -1.86817100110189 * S_Income + -1.58760227599089 * S_Mnt + -1.1330886213304 * 
S_MntGoldProds + 0.82082069255126 * S_MntMeatProducts + -0.34149449572975 * S_MntWines + 
0.45944109671738 * S_NumDistPurchases + 2.00910621486809 * S_RFMstat + -1.8305685414059 * 
S_RMntFrq + 1.46038466341548 * S_Recency ;
309096    +   H1x4_2  =    -0.63266188932348 * S_AcceptedCmpTotal
309097    +          +    -0.01183486383209 * S_Frq  +    -1.07560568030024 * S_Income
309098    +          +    -1.30988288899902 * S_Mnt  +     2.15841401397408 *
309099    +        S_MntGoldProds  +    -1.27808965763357 * S_MntMeatProducts
309100    +          +     2.04886920467378 * S_MntWines  +     0.09322121012781 *
309101    +        S_NumDistPurchases  +    -0.37050311259862 * S_RFMstat
309102    +          +     0.68085578996214 * S_RMntFrq  +     1.48508197039719 *
309103    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x4_2 = -0.63266188932348 * S_AcceptedCmpTotal + -0.01183486383209 * 
S_Frq + -1.07560568030024 * S_Income + -1.30988288899902 * S_Mnt + 2.15841401397408 * 
S_MntGoldProds + -1.27808965763357 * S_MntMeatProducts + 2.04886920467378 * S_MntWines + 
0.09322121012781 * S_NumDistPurchases + -0.37050311259862 * S_RFMstat + 0.68085578996214 * 
S_RMntFrq + 1.48508197039719 * S_Recency ;
309104    +   H1x4_3  =    -0.53647455024397 * S_AcceptedCmpTotal
309105    +          +     0.24459727005497 * S_Frq  +     0.30319155437277 * S_Income
309106    +          +     0.25206471395865 * S_Mnt  +     0.43917953957135 *
309107    +        S_MntGoldProds  +    -0.10933570154764 * S_MntMeatProducts
309108    +          +    -0.04059236687792 * S_MntWines  +     0.35677739352706 *
309109    +        S_NumDistPurchases  +     1.38086899403811 * S_RFMstat
309110    +          +    -0.32751457592661 * S_RMntFrq  +    -0.15926282047245 *
309111    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x4_3 = -0.53647455024397 * S_AcceptedCmpTotal + 0.24459727005497 * 
S_Frq + 0.30319155437277 * S_Income + 0.25206471395865 * S_Mnt + 0.43917953957135 * 
S_MntGoldProds + -0.10933570154764 * S_MntMeatProducts + -0.04059236687792 * S_MntWines + 
0.35677739352706 * S_NumDistPurchases + 1.38086899403811 * S_RFMstat + -0.32751457592661 * 
S_RMntFrq + -0.15926282047245 * S_Recency ;
309112    +   H1x4_4  =     0.24225159923716 * S_AcceptedCmpTotal
309113    +          +    -0.83397540163538 * S_Frq  +     0.65454415304883 * S_Income
309114    +          +     -2.1008417113285 * S_Mnt  +     1.46444392612369 *
309115    +        S_MntGoldProds  +     1.98843066844745 * S_MntMeatProducts
309116    +          +    -0.31310064337061 * S_MntWines  +     0.56236194506314 *
309117    +        S_NumDistPurchases  +    -0.20512833160409 * S_RFMstat
309118    +          +    -0.20631901696385 * S_RMntFrq  +    -0.01945293751142 *
309119    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x4_4 = 0.24225159923716 * S_AcceptedCmpTotal + -0.83397540163538 * 
S_Frq + 0.65454415304883 * S_Income + -2.1008417113285 * S_Mnt + 1.46444392612369 * 
S_MntGoldProds + 1.98843066844745 * S_MntMeatProducts + -0.31310064337061 * S_MntWines + 
0.56236194506314 * S_NumDistPurchases + -0.20512833160409 * S_RFMstat + -0.20631901696385 * 
S_RMntFrq + -0.01945293751142 * S_Recency ;
309120    +   H1x4_5  =     -0.2800504242999 * S_AcceptedCmpTotal
309121    +          +     0.11767474732461 * S_Frq  +    -1.78109558633383 * S_Income
309122    +          +    -0.83275451396797 * S_Mnt  +     0.13772739876237 *
309123    +        S_MntGoldProds  +    -0.00084509726748 * S_MntMeatProducts
309124    +          +     0.92081955236291 * S_MntWines  +    -0.84663906140096 *
309125    +        S_NumDistPurchases  +     1.07425261538134 * S_RFMstat
309126    +          +    -0.27830850445101 * S_RMntFrq  +     0.74380794599056 *
309127    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x4_5 = -0.2800504242999 * S_AcceptedCmpTotal + 0.11767474732461 * 
S_Frq + -1.78109558633383 * S_Income + -0.83275451396797 * S_Mnt + 0.13772739876237 * 
S_MntGoldProds + -0.00084509726748 * S_MntMeatProducts + 0.92081955236291 * S_MntWines + 
-0.84663906140096 * S_NumDistPurchases + 1.07425261538134 * S_RFMstat + -0.27830850445101 * 
S_RMntFrq + 0.74380794599056 * S_Recency ;
309128    +   H1x4_6  =     -1.1119291723593 * S_AcceptedCmpTotal
309129    +          +     0.56304851350844 * S_Frq  +     0.73567113537541 * S_Income
309130    +          +    -3.12306246450604 * S_Mnt  +    -0.91316403938439 *
309131    +        S_MntGoldProds  +    -2.69628755197256 * S_MntMeatProducts
309132    +          +     0.85746867824621 * S_MntWines  +    -0.36724035406906 *
309133    +        S_NumDistPurchases  +     0.28568968295985 * S_RFMstat
309134    +          +    -0.93954323577146 * S_RMntFrq  +     0.85268992665591 *
309135    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x4_6 = -1.1119291723593 * S_AcceptedCmpTotal + 0.56304851350844 * 
S_Frq + 0.73567113537541 * S_Income + -3.12306246450604 * S_Mnt + -0.91316403938439 * 
S_MntGoldProds + -2.69628755197256 * S_MntMeatProducts + 0.85746867824621 * S_MntWines + 
-0.36724035406906 * S_NumDistPurchases + 0.28568968295985 * S_RFMstat + -0.93954323577146 * 
S_RMntFrq + 0.85268992665591 * S_Recency ;
309136    +   H1x4_1  = H1x4_1  +    -0.41637670428316 * G_Marital_Status0
309137    +          +     1.82577173192743 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x4_1 = H1x4_1 + -0.41637670428316 * G_Marital_Status0 + 
1.82577173192743 * G_Marital_Status1 ;
309138    +   H1x4_2  = H1x4_2  +     1.30084682846119 * G_Marital_Status0
309139    +          +     1.86494194086223 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x4_2 = H1x4_2 + 1.30084682846119 * G_Marital_Status0 + 
1.86494194086223 * G_Marital_Status1 ;
309140    +   H1x4_3  = H1x4_3  +    -2.51039247492524 * G_Marital_Status0
309141    +          +    -0.78535196846115 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x4_3 = H1x4_3 + -2.51039247492524 * G_Marital_Status0 + 
-0.78535196846115 * G_Marital_Status1 ;
309142    +   H1x4_4  = H1x4_4  +    -1.66536345681649 * G_Marital_Status0
309143    +          +    -1.13643623224979 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x4_4 = H1x4_4 + -1.66536345681649 * G_Marital_Status0 + 
-1.13643623224979 * G_Marital_Status1 ;
309144    +   H1x4_5  = H1x4_5  +     0.34381083459151 * G_Marital_Status0
309145    +          +    -0.50611098994468 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x4_5 = H1x4_5 + 0.34381083459151 * G_Marital_Status0 + 
-0.50611098994468 * G_Marital_Status1 ;
309146    +   H1x4_6  = H1x4_6  +    -0.50144547845039 * G_Marital_Status0
309147    +          +     1.05855030017376 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x4_6 = H1x4_6 + -0.50144547845039 * G_Marital_Status0 + 
1.05855030017376 * G_Marital_Status1 ;
309148    +   H1x4_1  =     0.23907181959326 + H1x4_1 ;
MPRINT(EM_DIAGRAM):   H1x4_1 = 0.23907181959326 + H1x4_1 ;
309149    +   H1x4_2  =    -1.57201194785995 + H1x4_2 ;
MPRINT(EM_DIAGRAM):   H1x4_2 = -1.57201194785995 + H1x4_2 ;
309150    +   H1x4_3  =     2.06322674265618 + H1x4_3 ;
MPRINT(EM_DIAGRAM):   H1x4_3 = 2.06322674265618 + H1x4_3 ;
309151    +   H1x4_4  =     1.01469021578807 + H1x4_4 ;
MPRINT(EM_DIAGRAM):   H1x4_4 = 1.01469021578807 + H1x4_4 ;
309152    +   H1x4_5  =     1.07767489348013 + H1x4_5 ;
MPRINT(EM_DIAGRAM):   H1x4_5 = 1.07767489348013 + H1x4_5 ;
309153    +   H1x4_6  =     0.04477742816865 + H1x4_6 ;
MPRINT(EM_DIAGRAM):   H1x4_6 = 0.04477742816865 + H1x4_6 ;
309154    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
309155    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
309156    +   H1x4_1  = 1.0 / (1.0 + EXP(MIN( - H1x4_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x4_1 = 1.0 / (1.0 + EXP(MIN( - H1x4_1 , _EXP_BAR)));
309157    +   H1x4_2  = 1.0 / (1.0 + EXP(MIN( - H1x4_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x4_2 = 1.0 / (1.0 + EXP(MIN( - H1x4_2 , _EXP_BAR)));
309158    +   H1x4_3  = 1.0 / (1.0 + EXP(MIN( - H1x4_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x4_3 = 1.0 / (1.0 + EXP(MIN( - H1x4_3 , _EXP_BAR)));
309159    +   H1x4_4  = 1.0 / (1.0 + EXP(MIN( - H1x4_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x4_4 = 1.0 / (1.0 + EXP(MIN( - H1x4_4 , _EXP_BAR)));
309160    +   H1x4_5  = 1.0 / (1.0 + EXP(MIN( - H1x4_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x4_5 = 1.0 / (1.0 + EXP(MIN( - H1x4_5 , _EXP_BAR)));
309161    +   H1x4_6  = 1.0 / (1.0 + EXP(MIN( - H1x4_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x4_6 = 1.0 / (1.0 + EXP(MIN( - H1x4_6 , _EXP_BAR)));
309162    +END;
MPRINT(EM_DIAGRAM):   END;
309163    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
309164    +   H1x4_1  = .;
MPRINT(EM_DIAGRAM):   H1x4_1 = .;
309165    +   H1x4_2  = .;
MPRINT(EM_DIAGRAM):   H1x4_2 = .;
309166    +   H1x4_3  = .;
MPRINT(EM_DIAGRAM):   H1x4_3 = .;
309167    +   H1x4_4  = .;
MPRINT(EM_DIAGRAM):   H1x4_4 = .;
309168    +   H1x4_5  = .;
MPRINT(EM_DIAGRAM):   H1x4_5 = .;
309169    +   H1x4_6  = .;
MPRINT(EM_DIAGRAM):   H1x4_6 = .;
309170    +END;
MPRINT(EM_DIAGRAM):   END;
309171    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
309172    +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
309173    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
309174    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
309175    +   H2x1_1  =     1.57657363240028 * H1x1_1  +    -0.37699618626432 * H1x1_2
309176    +          +    -0.60919993629457 * H1x1_3  +     2.97257779188857 * H1x1_4
309177    +          +     4.47740938165819 * H1x1_5  +    -0.85059681057218 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.57657363240028 * H1x1_1 + -0.37699618626432 * H1x1_2 + 
-0.60919993629457 * H1x1_3 + 2.97257779188857 * H1x1_4 + 4.47740938165819 * H1x1_5 + 
-0.85059681057218 * H1x1_6 ;
309178    +   H2x1_2  =     0.58245150995434 * H1x1_1  +     1.31825599717827 * H1x1_2
309179    +          +    -0.46604129874265 * H1x1_3  +    -1.57880778011961 * H1x1_4
309180    +          +      0.1296024356855 * H1x1_5  +    -0.32310175742174 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 0.58245150995434 * H1x1_1 + 1.31825599717827 * H1x1_2 + 
-0.46604129874265 * H1x1_3 + -1.57880778011961 * H1x1_4 + 0.1296024356855 * H1x1_5 + 
-0.32310175742174 * H1x1_6 ;
309181    +   H2x1_3  =     0.08762368266386 * H1x1_1  +     -2.1587359786783 * H1x1_2
309182    +          +     0.53603825884818 * H1x1_3  +    -0.24087329015868 * H1x1_4
309183    +          +     0.03296173080719 * H1x1_5  +     0.01697480121243 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 0.08762368266386 * H1x1_1 + -2.1587359786783 * H1x1_2 + 
0.53603825884818 * H1x1_3 + -0.24087329015868 * H1x1_4 + 0.03296173080719 * H1x1_5 + 
0.01697480121243 * H1x1_6 ;
309184    +   H2x1_4  =    -0.11182680657167 * H1x1_1  +     0.78238566788271 * H1x1_2
309185    +          +    -0.32984662645651 * H1x1_3  +    -0.48952564803009 * H1x1_4
309186    +          +    -1.99607614008712 * H1x1_5  +     0.10016209874446 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -0.11182680657167 * H1x1_1 + 0.78238566788271 * H1x1_2 + 
-0.32984662645651 * H1x1_3 + -0.48952564803009 * H1x1_4 + -1.99607614008712 * H1x1_5 + 
0.10016209874446 * H1x1_6 ;
309187    +   H2x1_5  =     -1.2498866108229 * H1x1_1  +      3.2369796406078 * H1x1_2
309188    +          +      2.8181066223344 * H1x1_3  +    -3.11752751718664 * H1x1_4
309189    +          +    -0.69294382105442 * H1x1_5  +     1.50580112761945 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -1.2498866108229 * H1x1_1 + 3.2369796406078 * H1x1_2 + 
2.8181066223344 * H1x1_3 + -3.11752751718664 * H1x1_4 + -0.69294382105442 * H1x1_5 + 
1.50580112761945 * H1x1_6 ;
309190    +   H2x1_1  = H2x1_1  +     1.23510627062479 * H1x2_1
309191    +          +     0.24021661687189 * H1x2_2  +    -1.56696654026909 * H1x2_3
309192    +          +     1.87814576627429 * H1x2_4  +     0.77581978719058 * H1x2_5
309193    +          +    -0.36964326956968 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 1.23510627062479 * H1x2_1 + 0.24021661687189 * H1x2_2 
+ -1.56696654026909 * H1x2_3 + 1.87814576627429 * H1x2_4 + 0.77581978719058 * H1x2_5 + 
-0.36964326956968 * H1x2_6 ;
309194    +   H2x1_2  = H2x1_2  +     0.92347023180909 * H1x2_1
309195    +          +    -0.58884204034707 * H1x2_2  +     0.32527960762166 * H1x2_3
309196    +          +    -2.67192710315835 * H1x2_4  +     1.11142627890507 * H1x2_5
309197    +          +     -0.0675747785188 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.92347023180909 * H1x2_1 + -0.58884204034707 * H1x2_2 
+ 0.32527960762166 * H1x2_3 + -2.67192710315835 * H1x2_4 + 1.11142627890507 * H1x2_5 + 
-0.0675747785188 * H1x2_6 ;
309198    +   H2x1_3  = H2x1_3  +    -0.92500735470206 * H1x2_1
309199    +          +     0.02449601034461 * H1x2_2  +    -0.75716713196308 * H1x2_3
309200    +          +     0.16672538074212 * H1x2_4  +    -1.03440004099384 * H1x2_5
309201    +          +     0.20622228187831 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -0.92500735470206 * H1x2_1 + 0.02449601034461 * H1x2_2 
+ -0.75716713196308 * H1x2_3 + 0.16672538074212 * H1x2_4 + -1.03440004099384 * H1x2_5 + 
0.20622228187831 * H1x2_6 ;
309202    +   H2x1_4  = H2x1_4  +     1.25485096748114 * H1x2_1
309203    +          +     -0.2345670529973 * H1x2_2  +     1.00007865183196 * H1x2_3
309204    +          +    -0.19520365006597 * H1x2_4  +     0.15141232788955 * H1x2_5
309205    +          +     0.99704195296742 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 1.25485096748114 * H1x2_1 + -0.2345670529973 * H1x2_2 
+ 1.00007865183196 * H1x2_3 + -0.19520365006597 * H1x2_4 + 0.15141232788955 * H1x2_5 + 
0.99704195296742 * H1x2_6 ;
309206    +   H2x1_5  = H2x1_5  +    -0.65666404502833 * H1x2_1
309207    +          +     2.28944563427288 * H1x2_2  +    -0.53344610521696 * H1x2_3
309208    +          +      -0.793597979143 * H1x2_4  +     -0.5657184003534 * H1x2_5
309209    +          +     0.52117926766363 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + -0.65666404502833 * H1x2_1 + 2.28944563427288 * H1x2_2 
+ -0.53344610521696 * H1x2_3 + -0.793597979143 * H1x2_4 + -0.5657184003534 * H1x2_5 + 
0.52117926766363 * H1x2_6 ;
309210    +   H2x1_1  = H2x1_1  +    -0.22872297219456 * H1x3_1
309211    +          +     0.44130997341488 * H1x3_2  +     0.85543947016407 * H1x3_3
309212    +          +      0.9172319436964 * H1x3_4  +    -0.63323674278101 * H1x3_5
309213    +          +       0.010792162082 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -0.22872297219456 * H1x3_1 + 0.44130997341488 * H1x3_2 
+ 0.85543947016407 * H1x3_3 + 0.9172319436964 * H1x3_4 + -0.63323674278101 * H1x3_5 + 
0.010792162082 * H1x3_6 ;
309214    +   H2x1_2  = H2x1_2  +    -0.47961853683007 * H1x3_1
309215    +          +     0.67283234118014 * H1x3_2  +    -0.12148381681871 * H1x3_3
309216    +          +     0.11539127068604 * H1x3_4  +     0.71547134269459 * H1x3_5
309217    +          +     0.31051080747621 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -0.47961853683007 * H1x3_1 + 0.67283234118014 * H1x3_2 
+ -0.12148381681871 * H1x3_3 + 0.11539127068604 * H1x3_4 + 0.71547134269459 * H1x3_5 + 
0.31051080747621 * H1x3_6 ;
309218    +   H2x1_3  = H2x1_3  +     0.84914297140244 * H1x3_1
309219    +          +     0.52803158023536 * H1x3_2  +    -1.39949725219783 * H1x3_3
309220    +          +     0.69603350257472 * H1x3_4  +    -0.99298091528215 * H1x3_5
309221    +          +      0.4901677948096 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + 0.84914297140244 * H1x3_1 + 0.52803158023536 * H1x3_2 
+ -1.39949725219783 * H1x3_3 + 0.69603350257472 * H1x3_4 + -0.99298091528215 * H1x3_5 + 
0.4901677948096 * H1x3_6 ;
309222    +   H2x1_4  = H2x1_4  +     1.25437670540229 * H1x3_1
309223    +          +     0.10767112672867 * H1x3_2  +     -2.4886577317349 * H1x3_3
309224    +          +    -1.19999974192227 * H1x3_4  +     2.65195856746166 * H1x3_5
309225    +          +    -0.35850032269696 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 1.25437670540229 * H1x3_1 + 0.10767112672867 * H1x3_2 
+ -2.4886577317349 * H1x3_3 + -1.19999974192227 * H1x3_4 + 2.65195856746166 * H1x3_5 + 
-0.35850032269696 * H1x3_6 ;
309226    +   H2x1_5  = H2x1_5  +    -0.18873569038601 * H1x3_1
309227    +          +    -0.05695497456875 * H1x3_2  +    -1.09169714101723 * H1x3_3
309228    +          +     0.66962829232535 * H1x3_4  +     0.68262583745167 * H1x3_5
309229    +          +     0.91538472149247 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + -0.18873569038601 * H1x3_1 + -0.05695497456875 * 
H1x3_2 + -1.09169714101723 * H1x3_3 + 0.66962829232535 * H1x3_4 + 0.68262583745167 * H1x3_5 + 
0.91538472149247 * H1x3_6 ;
309230    +   H2x1_1  = H2x1_1  +    -0.77701371575001 * H1x4_1
309231    +          +    -1.54239140939922 * H1x4_2  +    -0.26570372401877 * H1x4_3
309232    +          +     0.00097824237229 * H1x4_4  +     0.57921309289721 * H1x4_5
309233    +          +     1.46692133055956 * H1x4_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -0.77701371575001 * H1x4_1 + -1.54239140939922 * 
H1x4_2 + -0.26570372401877 * H1x4_3 + 0.00097824237229 * H1x4_4 + 0.57921309289721 * H1x4_5 + 
1.46692133055956 * H1x4_6 ;
309234    +   H2x1_2  = H2x1_2  +     0.96564519202767 * H1x4_1
309235    +          +    -0.06466152110331 * H1x4_2  +    -0.66659637249467 * H1x4_3
309236    +          +     0.59673973270306 * H1x4_4  +     2.45492273841581 * H1x4_5
309237    +          +     -0.4804481967354 * H1x4_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.96564519202767 * H1x4_1 + -0.06466152110331 * H1x4_2 
+ -0.66659637249467 * H1x4_3 + 0.59673973270306 * H1x4_4 + 2.45492273841581 * H1x4_5 + 
-0.4804481967354 * H1x4_6 ;
309238    +   H2x1_3  = H2x1_3  +     0.75339074826799 * H1x4_1
309239    +          +     1.26373188682879 * H1x4_2  +     0.49419374749947 * H1x4_3
309240    +          +     1.26541916145956 * H1x4_4  +     0.10039190806961 * H1x4_5
309241    +          +    -0.79556185531974 * H1x4_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + 0.75339074826799 * H1x4_1 + 1.26373188682879 * H1x4_2 
+ 0.49419374749947 * H1x4_3 + 1.26541916145956 * H1x4_4 + 0.10039190806961 * H1x4_5 + 
-0.79556185531974 * H1x4_6 ;
309242    +   H2x1_4  = H2x1_4  +    -0.28271287281925 * H1x4_1
309243    +          +      2.1208193298333 * H1x4_2  +    -0.65223420232343 * H1x4_3
309244    +          +     0.02666229497558 * H1x4_4  +     0.72865787458027 * H1x4_5
309245    +          +    -0.22377472142722 * H1x4_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + -0.28271287281925 * H1x4_1 + 2.1208193298333 * H1x4_2 
+ -0.65223420232343 * H1x4_3 + 0.02666229497558 * H1x4_4 + 0.72865787458027 * H1x4_5 + 
-0.22377472142722 * H1x4_6 ;
309246    +   H2x1_5  = H2x1_5  +    -0.84067714042271 * H1x4_1
309247    +          +    -1.59141777016956 * H1x4_2  +     0.46077797807782 * H1x4_3
309248    +          +    -0.07031579794448 * H1x4_4  +     0.83754013895307 * H1x4_5
309249    +          +     0.49805259687865 * H1x4_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + -0.84067714042271 * H1x4_1 + -1.59141777016956 * 
H1x4_2 + 0.46077797807782 * H1x4_3 + -0.07031579794448 * H1x4_4 + 0.83754013895307 * H1x4_5 + 
0.49805259687865 * H1x4_6 ;
309250    +   H2x1_1  =     1.86496757154162 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.86496757154162 + H2x1_1 ;
309251    +   H2x1_2  =     0.46453634696909 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 0.46453634696909 + H2x1_2 ;
309252    +   H2x1_3  =     0.36165501609225 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 0.36165501609225 + H2x1_3 ;
309253    +   H2x1_4  =    -0.91790753889181 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -0.91790753889181 + H2x1_4 ;
309254    +   H2x1_5  =     2.82445131106489 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = 2.82445131106489 + H2x1_5 ;
309255    +   H2x1_6  = 0;
MPRINT(EM_DIAGRAM):   H2x1_6 = 0;
309256    +   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 , H2x1_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 , H2x1_6 );
309257    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
309258    +   H2x1_1  = EXP(H2x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_1 = EXP(H2x1_1 - _MAX_);
309259    +   _SUM_ = _SUM_ + H2x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_1 ;
309260    +   H2x1_2  = EXP(H2x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_2 = EXP(H2x1_2 - _MAX_);
309261    +   _SUM_ = _SUM_ + H2x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_2 ;
309262    +   H2x1_3  = EXP(H2x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_3 = EXP(H2x1_3 - _MAX_);
309263    +   _SUM_ = _SUM_ + H2x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_3 ;
309264    +   H2x1_4  = EXP(H2x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_4 = EXP(H2x1_4 - _MAX_);
309265    +   _SUM_ = _SUM_ + H2x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_4 ;
309266    +   H2x1_5  = EXP(H2x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_5 = EXP(H2x1_5 - _MAX_);
309267    +   _SUM_ = _SUM_ + H2x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_5 ;
309268    +   H2x1_6  = EXP(H2x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_6 = EXP(H2x1_6 - _MAX_);
309269    +   _SUM_ = _SUM_ + H2x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_6 ;
309270    +   H2x1_1  = H2x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 / _SUM_;
309271    +   H2x1_2  = H2x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 / _SUM_;
309272    +   H2x1_3  = H2x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 / _SUM_;
309273    +   H2x1_4  = H2x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 / _SUM_;
309274    +   H2x1_5  = H2x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 / _SUM_;
309275    +   H2x1_6  = H2x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 / _SUM_;
309276    +END;
MPRINT(EM_DIAGRAM):   END;
309277    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
309278    +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
309279    +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
309280    +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
309281    +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
309282    +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
309283    +   H2x1_6  = .;
MPRINT(EM_DIAGRAM):   H2x1_6 = .;
309284    +END;
MPRINT(EM_DIAGRAM):   END;
309285    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
309286    +*** Writing the Node H2x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x2_ ;
309287    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
309288    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
309289    +   H2x2_1  =     0.06037434087051 * H1x1_1  +     2.10312669809986 * H1x1_2
309290    +          +     0.25966374544266 * H1x1_3  +     -0.4604625015482 * H1x1_4
309291    +          +    -0.04852853005798 * H1x1_5  +     1.73108900683337 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = 0.06037434087051 * H1x1_1 + 2.10312669809986 * H1x1_2 + 
0.25966374544266 * H1x1_3 + -0.4604625015482 * H1x1_4 + -0.04852853005798 * H1x1_5 + 
1.73108900683337 * H1x1_6 ;
309292    +   H2x2_2  =    -1.98874787809729 * H1x1_1  +    -0.90575568783349 * H1x1_2
309293    +          +     2.19451885005981 * H1x1_3  +     0.86127175797091 * H1x1_4
309294    +          +     0.88302785384691 * H1x1_5  +     1.44831802939799 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = -1.98874787809729 * H1x1_1 + -0.90575568783349 * H1x1_2 + 
2.19451885005981 * H1x1_3 + 0.86127175797091 * H1x1_4 + 0.88302785384691 * H1x1_5 + 
1.44831802939799 * H1x1_6 ;
309295    +   H2x2_3  =     0.99020573159855 * H1x1_1  +    -0.25509107111568 * H1x1_2
309296    +          +    -0.88380027397433 * H1x1_3  +     2.61444810707966 * H1x1_4
309297    +          +     1.12768553693881 * H1x1_5  +    -1.33423515707253 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = 0.99020573159855 * H1x1_1 + -0.25509107111568 * H1x1_2 + 
-0.88380027397433 * H1x1_3 + 2.61444810707966 * H1x1_4 + 1.12768553693881 * H1x1_5 + 
-1.33423515707253 * H1x1_6 ;
309298    +   H2x2_4  =    -0.48971657670431 * H1x1_1  +    -2.03924441101145 * H1x1_2
309299    +          +    -0.44598954940675 * H1x1_3  +    -0.38296699607675 * H1x1_4
309300    +          +    -0.46829791763961 * H1x1_5  +     0.57571476480191 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = -0.48971657670431 * H1x1_1 + -2.03924441101145 * H1x1_2 + 
-0.44598954940675 * H1x1_3 + -0.38296699607675 * H1x1_4 + -0.46829791763961 * H1x1_5 + 
0.57571476480191 * H1x1_6 ;
309301    +   H2x2_5  =     1.15324249951205 * H1x1_1  +    -0.30656607959814 * H1x1_2
309302    +          +    -0.26327906953925 * H1x1_3  +    -0.30055126052518 * H1x1_4
309303    +          +     1.20108560127357 * H1x1_5  +    -2.01222927536337 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = 1.15324249951205 * H1x1_1 + -0.30656607959814 * H1x1_2 + 
-0.26327906953925 * H1x1_3 + -0.30055126052518 * H1x1_4 + 1.20108560127357 * H1x1_5 + 
-2.01222927536337 * H1x1_6 ;
309304    +   H2x2_1  = H2x2_1  +     0.67714997403987 * H1x2_1
309305    +          +     0.58512699375084 * H1x2_2  +     0.82352577521669 * H1x2_3
309306    +          +    -0.10235751124142 * H1x2_4  +     0.33612939980192 * H1x2_5
309307    +          +    -0.86707973977777 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + 0.67714997403987 * H1x2_1 + 0.58512699375084 * H1x2_2 
+ 0.82352577521669 * H1x2_3 + -0.10235751124142 * H1x2_4 + 0.33612939980192 * H1x2_5 + 
-0.86707973977777 * H1x2_6 ;
309308    +   H2x2_2  = H2x2_2  +     0.54358612690033 * H1x2_1
309309    +          +     0.85147893022911 * H1x2_2  +     0.19383313272548 * H1x2_3
309310    +          +     0.54163359333706 * H1x2_4  +    -0.12377705517298 * H1x2_5
309311    +          +     0.34775419906833 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + 0.54358612690033 * H1x2_1 + 0.85147893022911 * H1x2_2 
+ 0.19383313272548 * H1x2_3 + 0.54163359333706 * H1x2_4 + -0.12377705517298 * H1x2_5 + 
0.34775419906833 * H1x2_6 ;
309312    +   H2x2_3  = H2x2_3  +    -0.93107945276808 * H1x2_1
309313    +          +     0.68475936175775 * H1x2_2  +    -0.23180217492353 * H1x2_3
309314    +          +     0.62637113173904 * H1x2_4  +      -0.494489282403 * H1x2_5
309315    +          +    -0.92757761378206 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + -0.93107945276808 * H1x2_1 + 0.68475936175775 * H1x2_2 
+ -0.23180217492353 * H1x2_3 + 0.62637113173904 * H1x2_4 + -0.494489282403 * H1x2_5 + 
-0.92757761378206 * H1x2_6 ;
309316    +   H2x2_4  = H2x2_4  +    -0.04592275767761 * H1x2_1
309317    +          +    -0.46728046145973 * H1x2_2  +    -0.84120395772864 * H1x2_3
309318    +          +     0.15719249141893 * H1x2_4  +    -0.46514309972577 * H1x2_5
309319    +          +     1.22882033880531 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + -0.04592275767761 * H1x2_1 + -0.46728046145973 * 
H1x2_2 + -0.84120395772864 * H1x2_3 + 0.15719249141893 * H1x2_4 + -0.46514309972577 * H1x2_5 + 
1.22882033880531 * H1x2_6 ;
309320    +   H2x2_5  = H2x2_5  +     1.84159049843244 * H1x2_1
309321    +          +     0.10275783758743 * H1x2_2  +    -1.43072878385761 * H1x2_3
309322    +          +     0.55082995966416 * H1x2_4  +      0.6610129464186 * H1x2_5
309323    +          +     1.13665339513142 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 + 1.84159049843244 * H1x2_1 + 0.10275783758743 * H1x2_2 
+ -1.43072878385761 * H1x2_3 + 0.55082995966416 * H1x2_4 + 0.6610129464186 * H1x2_5 + 
1.13665339513142 * H1x2_6 ;
309324    +   H2x2_1  = H2x2_1  +    -1.51032464504011 * H1x3_1
309325    +          +    -0.09256867451899 * H1x3_2  +     0.32445533867689 * H1x3_3
309326    +          +     0.05761597623645 * H1x3_4  +    -0.76755137543453 * H1x3_5
309327    +          +    -0.84355541605354 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -1.51032464504011 * H1x3_1 + -0.09256867451899 * 
H1x3_2 + 0.32445533867689 * H1x3_3 + 0.05761597623645 * H1x3_4 + -0.76755137543453 * H1x3_5 + 
-0.84355541605354 * H1x3_6 ;
309328    +   H2x2_2  = H2x2_2  +     0.10183122181912 * H1x3_1
309329    +          +    -0.30112412370797 * H1x3_2  +     0.67666605377075 * H1x3_3
309330    +          +    -0.05362728717558 * H1x3_4  +    -0.02087908172702 * H1x3_5
309331    +          +    -0.14832407235293 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + 0.10183122181912 * H1x3_1 + -0.30112412370797 * H1x3_2 
+ 0.67666605377075 * H1x3_3 + -0.05362728717558 * H1x3_4 + -0.02087908172702 * H1x3_5 + 
-0.14832407235293 * H1x3_6 ;
309332    +   H2x2_3  = H2x2_3  +     1.70579601255161 * H1x3_1
309333    +          +     -0.4658368752668 * H1x3_2  +    -0.54573113497487 * H1x3_3
309334    +          +     1.13279034034213 * H1x3_4  +     1.23714589942258 * H1x3_5
309335    +          +     0.41209753590668 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + 1.70579601255161 * H1x3_1 + -0.4658368752668 * H1x3_2 
+ -0.54573113497487 * H1x3_3 + 1.13279034034213 * H1x3_4 + 1.23714589942258 * H1x3_5 + 
0.41209753590668 * H1x3_6 ;
309336    +   H2x2_4  = H2x2_4  +     0.21012073552633 * H1x3_1
309337    +          +      -1.607803967771 * H1x3_2  +     0.02641742148684 * H1x3_3
309338    +          +      -0.919177834124 * H1x3_4  +    -0.46658991803838 * H1x3_5
309339    +          +     0.05356295771962 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + 0.21012073552633 * H1x3_1 + -1.607803967771 * H1x3_2 + 
0.02641742148684 * H1x3_3 + -0.919177834124 * H1x3_4 + -0.46658991803838 * H1x3_5 + 
0.05356295771962 * H1x3_6 ;
309340    +   H2x2_5  = H2x2_5  +     -1.1424376096243 * H1x3_1
309341    +          +    -0.47941730936597 * H1x3_2  +    -1.44857674506057 * H1x3_3
309342    +          +     -2.0300913051093 * H1x3_4  +    -0.12476620160938 * H1x3_5
309343    +          +      1.3865980084186 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 + -1.1424376096243 * H1x3_1 + -0.47941730936597 * H1x3_2 
+ -1.44857674506057 * H1x3_3 + -2.0300913051093 * H1x3_4 + -0.12476620160938 * H1x3_5 + 
1.3865980084186 * H1x3_6 ;
309344    +   H2x2_1  = H2x2_1  +    -0.80277778579719 * H1x4_1
309345    +          +     0.89356845434924 * H1x4_2  +     1.34679856015636 * H1x4_3
309346    +          +    -0.75666255425893 * H1x4_4  +    -0.76982332990737 * H1x4_5
309347    +          +     0.16602366912489 * H1x4_6 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -0.80277778579719 * H1x4_1 + 0.89356845434924 * H1x4_2 
+ 1.34679856015636 * H1x4_3 + -0.75666255425893 * H1x4_4 + -0.76982332990737 * H1x4_5 + 
0.16602366912489 * H1x4_6 ;
309348    +   H2x2_2  = H2x2_2  +    -1.23815292104545 * H1x4_1
309349    +          +     0.15726093177842 * H1x4_2  +     0.11603212859646 * H1x4_3
309350    +          +     0.38287343591011 * H1x4_4  +    -0.51333663927664 * H1x4_5
309351    +          +     -0.9577144624714 * H1x4_6 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + -1.23815292104545 * H1x4_1 + 0.15726093177842 * H1x4_2 
+ 0.11603212859646 * H1x4_3 + 0.38287343591011 * H1x4_4 + -0.51333663927664 * H1x4_5 + 
-0.9577144624714 * H1x4_6 ;
309352    +   H2x2_3  = H2x2_3  +    -0.68480171858681 * H1x4_1
309353    +          +    -0.64475211431817 * H1x4_2  +     0.54382770716837 * H1x4_3
309354    +          +     0.07586519798399 * H1x4_4  +      -0.158352646931 * H1x4_5
309355    +          +    -0.86962851115528 * H1x4_6 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + -0.68480171858681 * H1x4_1 + -0.64475211431817 * 
H1x4_2 + 0.54382770716837 * H1x4_3 + 0.07586519798399 * H1x4_4 + -0.158352646931 * H1x4_5 + 
-0.86962851115528 * H1x4_6 ;
309356    +   H2x2_4  = H2x2_4  +     1.08721247219364 * H1x4_1
309357    +          +    -0.00199447585891 * H1x4_2  +    -0.84066724442019 * H1x4_3
309358    +          +     0.28532638217608 * H1x4_4  +    -1.14779513957631 * H1x4_5
309359    +          +     2.01216139921959 * H1x4_6 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + 1.08721247219364 * H1x4_1 + -0.00199447585891 * H1x4_2 
+ -0.84066724442019 * H1x4_3 + 0.28532638217608 * H1x4_4 + -1.14779513957631 * H1x4_5 + 
2.01216139921959 * H1x4_6 ;
309360    +   H2x2_5  = H2x2_5  +    -0.82582817846967 * H1x4_1
309361    +          +    -1.09057773595959 * H1x4_2  +     -0.2490905553905 * H1x4_3
309362    +          +     0.93092377717594 * H1x4_4  +     0.02946641402494 * H1x4_5
309363    +          +    -0.19026348436175 * H1x4_6 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 + -0.82582817846967 * H1x4_1 + -1.09057773595959 * 
H1x4_2 + -0.2490905553905 * H1x4_3 + 0.93092377717594 * H1x4_4 + 0.02946641402494 * H1x4_5 + 
-0.19026348436175 * H1x4_6 ;
309364    +   H2x2_1  =      0.4280804812723 + H2x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = 0.4280804812723 + H2x2_1 ;
309365    +   H2x2_2  =    -1.09169904475569 + H2x2_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = -1.09169904475569 + H2x2_2 ;
309366    +   H2x2_3  =      1.1980619484542 + H2x2_3 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = 1.1980619484542 + H2x2_3 ;
309367    +   H2x2_4  =    -0.69756677248934 + H2x2_4 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = -0.69756677248934 + H2x2_4 ;
309368    +   H2x2_5  =    -1.87910212660657 + H2x2_5 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = -1.87910212660657 + H2x2_5 ;
309369    +   H2x2_6  = 0;
MPRINT(EM_DIAGRAM):   H2x2_6 = 0;
309370    +   _MAX_ = MAX (H2x2_1 , H2x2_2 , H2x2_3 , H2x2_4 , H2x2_5 , H2x2_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x2_1 , H2x2_2 , H2x2_3 , H2x2_4 , H2x2_5 , H2x2_6 );
309371    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
309372    +   H2x2_1  = EXP(H2x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_1 = EXP(H2x2_1 - _MAX_);
309373    +   _SUM_ = _SUM_ + H2x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_1 ;
309374    +   H2x2_2  = EXP(H2x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_2 = EXP(H2x2_2 - _MAX_);
309375    +   _SUM_ = _SUM_ + H2x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_2 ;
309376    +   H2x2_3  = EXP(H2x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_3 = EXP(H2x2_3 - _MAX_);
309377    +   _SUM_ = _SUM_ + H2x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_3 ;
309378    +   H2x2_4  = EXP(H2x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_4 = EXP(H2x2_4 - _MAX_);
309379    +   _SUM_ = _SUM_ + H2x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_4 ;
309380    +   H2x2_5  = EXP(H2x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_5 = EXP(H2x2_5 - _MAX_);
309381    +   _SUM_ = _SUM_ + H2x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_5 ;
309382    +   H2x2_6  = EXP(H2x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_6 = EXP(H2x2_6 - _MAX_);
309383    +   _SUM_ = _SUM_ + H2x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_6 ;
309384    +   H2x2_1  = H2x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 / _SUM_;
309385    +   H2x2_2  = H2x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 / _SUM_;
309386    +   H2x2_3  = H2x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 / _SUM_;
309387    +   H2x2_4  = H2x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 / _SUM_;
309388    +   H2x2_5  = H2x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 / _SUM_;
309389    +   H2x2_6  = H2x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_6 = H2x2_6 / _SUM_;
309390    +END;
MPRINT(EM_DIAGRAM):   END;
309391    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
309392    +   H2x2_1  = .;
MPRINT(EM_DIAGRAM):   H2x2_1 = .;
309393    +   H2x2_2  = .;
MPRINT(EM_DIAGRAM):   H2x2_2 = .;
309394    +   H2x2_3  = .;
MPRINT(EM_DIAGRAM):   H2x2_3 = .;
309395    +   H2x2_4  = .;
MPRINT(EM_DIAGRAM):   H2x2_4 = .;
309396    +   H2x2_5  = .;
MPRINT(EM_DIAGRAM):   H2x2_5 = .;
309397    +   H2x2_6  = .;
MPRINT(EM_DIAGRAM):   H2x2_6 = .;
309398    +END;
MPRINT(EM_DIAGRAM):   END;
309399    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
309400    +*** Writing the Node H2x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x3_ ;
309401    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
309402    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
309403    +   H2x3_1  =     0.51206365204428 * H1x1_1  +    -1.75446248490807 * H1x1_2
309404    +          +     0.22956544269482 * H1x1_3  +     0.91651437630074 * H1x1_4
309405    +          +    -0.88731743590726 * H1x1_5  +     0.75959028005652 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x3_1 = 0.51206365204428 * H1x1_1 + -1.75446248490807 * H1x1_2 + 
0.22956544269482 * H1x1_3 + 0.91651437630074 * H1x1_4 + -0.88731743590726 * H1x1_5 + 
0.75959028005652 * H1x1_6 ;
309406    +   H2x3_2  =    -0.45196055100748 * H1x1_1  +    -0.30516535345407 * H1x1_2
309407    +          +    -0.95535662641329 * H1x1_3  +     0.98793241812876 * H1x1_4
309408    +          +    -2.26205386368521 * H1x1_5  +    -0.79989554227284 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x3_2 = -0.45196055100748 * H1x1_1 + -0.30516535345407 * H1x1_2 + 
-0.95535662641329 * H1x1_3 + 0.98793241812876 * H1x1_4 + -2.26205386368521 * H1x1_5 + 
-0.79989554227284 * H1x1_6 ;
309409    +   H2x3_3  =     1.75400558713364 * H1x1_1  +     0.36065784285286 * H1x1_2
309410    +          +    -0.26047606287884 * H1x1_3  +    -0.92639558885443 * H1x1_4
309411    +          +     1.89978202395282 * H1x1_5  +     1.46105111567983 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x3_3 = 1.75400558713364 * H1x1_1 + 0.36065784285286 * H1x1_2 + 
-0.26047606287884 * H1x1_3 + -0.92639558885443 * H1x1_4 + 1.89978202395282 * H1x1_5 + 
1.46105111567983 * H1x1_6 ;
309412    +   H2x3_4  =     -1.0609986914691 * H1x1_1  +     1.03588259392678 * H1x1_2
309413    +          +     0.18751061078347 * H1x1_3  +     1.45467172411852 * H1x1_4
309414    +          +     0.80970691110797 * H1x1_5  +    -0.03142746343877 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x3_4 = -1.0609986914691 * H1x1_1 + 1.03588259392678 * H1x1_2 + 
0.18751061078347 * H1x1_3 + 1.45467172411852 * H1x1_4 + 0.80970691110797 * H1x1_5 + 
-0.03142746343877 * H1x1_6 ;
309415    +   H2x3_5  =     0.68514959739435 * H1x1_1  +    -0.85703618516825 * H1x1_2
309416    +          +    -1.42641478008517 * H1x1_3  +     0.69128253039497 * H1x1_4
309417    +          +    -0.41103428804251 * H1x1_5  +     2.29818718782262 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x3_5 = 0.68514959739435 * H1x1_1 + -0.85703618516825 * H1x1_2 + 
-1.42641478008517 * H1x1_3 + 0.69128253039497 * H1x1_4 + -0.41103428804251 * H1x1_5 + 
2.29818718782262 * H1x1_6 ;
309418    +   H2x3_1  = H2x3_1  +    -1.02124610786304 * H1x2_1
309419    +          +    -0.70086367508924 * H1x2_2  +     1.44543746222048 * H1x2_3
309420    +          +      0.0077115223216 * H1x2_4  +    -1.13603676440953 * H1x2_5
309421    +          +    -0.39006326539815 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x3_1 = H2x3_1 + -1.02124610786304 * H1x2_1 + -0.70086367508924 * 
H1x2_2 + 1.44543746222048 * H1x2_3 + 0.0077115223216 * H1x2_4 + -1.13603676440953 * H1x2_5 + 
-0.39006326539815 * H1x2_6 ;
309422    +   H2x3_2  = H2x3_2  +     0.58504868182178 * H1x2_1
309423    +          +    -2.53394647771808 * H1x2_2  +    -0.46920351111552 * H1x2_3
309424    +          +    -0.13298739365164 * H1x2_4  +    -0.72916785042807 * H1x2_5
309425    +          +     0.87575796008942 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x3_2 = H2x3_2 + 0.58504868182178 * H1x2_1 + -2.53394647771808 * H1x2_2 
+ -0.46920351111552 * H1x2_3 + -0.13298739365164 * H1x2_4 + -0.72916785042807 * H1x2_5 + 
0.87575796008942 * H1x2_6 ;
309426    +   H2x3_3  = H2x3_3  +      -0.403068394175 * H1x2_1
309427    +          +     2.20341156440175 * H1x2_2  +     0.18637166393472 * H1x2_3
309428    +          +    -0.49818124689746 * H1x2_4  +    -0.57482220863202 * H1x2_5
309429    +          +    -0.99288712489296 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x3_3 = H2x3_3 + -0.403068394175 * H1x2_1 + 2.20341156440175 * H1x2_2 + 
0.18637166393472 * H1x2_3 + -0.49818124689746 * H1x2_4 + -0.57482220863202 * H1x2_5 + 
-0.99288712489296 * H1x2_6 ;
309430    +   H2x3_4  = H2x3_4  +    -0.08255075671356 * H1x2_1
309431    +          +     0.12417859340249 * H1x2_2  +     0.38623860203678 * H1x2_3
309432    +          +     1.30375188803419 * H1x2_4  +     0.06113655765155 * H1x2_5
309433    +          +     2.18684373678918 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x3_4 = H2x3_4 + -0.08255075671356 * H1x2_1 + 0.12417859340249 * H1x2_2 
+ 0.38623860203678 * H1x2_3 + 1.30375188803419 * H1x2_4 + 0.06113655765155 * H1x2_5 + 
2.18684373678918 * H1x2_6 ;
309434    +   H2x3_5  = H2x3_5  +     0.02445507420447 * H1x2_1
309435    +          +     -1.1429834255353 * H1x2_2  +     1.15057813366971 * H1x2_3
309436    +          +     -0.7929157351984 * H1x2_4  +      0.4343084860458 * H1x2_5
309437    +          +      0.0384736341173 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x3_5 = H2x3_5 + 0.02445507420447 * H1x2_1 + -1.1429834255353 * H1x2_2 
+ 1.15057813366971 * H1x2_3 + -0.7929157351984 * H1x2_4 + 0.4343084860458 * H1x2_5 + 
0.0384736341173 * H1x2_6 ;
309438    +   H2x3_1  = H2x3_1  +     0.37764572590016 * H1x3_1
309439    +          +     1.48191356825225 * H1x3_2  +    -0.26603273466393 * H1x3_3
309440    +          +    -1.29507822568105 * H1x3_4  +     1.84557717124725 * H1x3_5
309441    +          +    -0.65863037608331 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x3_1 = H2x3_1 + 0.37764572590016 * H1x3_1 + 1.48191356825225 * H1x3_2 
+ -0.26603273466393 * H1x3_3 + -1.29507822568105 * H1x3_4 + 1.84557717124725 * H1x3_5 + 
-0.65863037608331 * H1x3_6 ;
309442    +   H2x3_2  = H2x3_2  +    -3.49060338051306 * H1x3_1
309443    +          +      1.3541565382925 * H1x3_2  +    -0.38315198954693 * H1x3_3
309444    +          +    -2.08846010475603 * H1x3_4  +    -0.03268324043605 * H1x3_5
309445    +          +     -0.2732767866426 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x3_2 = H2x3_2 + -3.49060338051306 * H1x3_1 + 1.3541565382925 * H1x3_2 
+ -0.38315198954693 * H1x3_3 + -2.08846010475603 * H1x3_4 + -0.03268324043605 * H1x3_5 + 
-0.2732767866426 * H1x3_6 ;
309446    +   H2x3_3  = H2x3_3  +    -1.02108681113274 * H1x3_1
309447    +          +     1.11670732797487 * H1x3_2  +    -2.83817066251645 * H1x3_3
309448    +          +     2.91943649605743 * H1x3_4  +    -1.58666117886546 * H1x3_5
309449    +          +     0.95358246629929 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x3_3 = H2x3_3 + -1.02108681113274 * H1x3_1 + 1.11670732797487 * H1x3_2 
+ -2.83817066251645 * H1x3_3 + 2.91943649605743 * H1x3_4 + -1.58666117886546 * H1x3_5 + 
0.95358246629929 * H1x3_6 ;
309450    +   H2x3_4  = H2x3_4  +    -0.28934138457604 * H1x3_1
309451    +          +     -0.1627562650927 * H1x3_2  +     1.76496399430623 * H1x3_3
309452    +          +     2.05776756058594 * H1x3_4  +    -0.96994650178001 * H1x3_5
309453    +          +    -1.50364154763084 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x3_4 = H2x3_4 + -0.28934138457604 * H1x3_1 + -0.1627562650927 * H1x3_2 
+ 1.76496399430623 * H1x3_3 + 2.05776756058594 * H1x3_4 + -0.96994650178001 * H1x3_5 + 
-1.50364154763084 * H1x3_6 ;
309454    +   H2x3_5  = H2x3_5  +    -0.73016276992619 * H1x3_1
309455    +          +    -1.48258849718818 * H1x3_2  +    -0.47908044807419 * H1x3_3
309456    +          +      0.5957671579209 * H1x3_4  +     0.06707833713085 * H1x3_5
309457    +          +      0.3673818114501 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x3_5 = H2x3_5 + -0.73016276992619 * H1x3_1 + -1.48258849718818 * 
H1x3_2 + -0.47908044807419 * H1x3_3 + 0.5957671579209 * H1x3_4 + 0.06707833713085 * H1x3_5 + 
0.3673818114501 * H1x3_6 ;
309458    +   H2x3_1  = H2x3_1  +     1.64939881299916 * H1x4_1
309459    +          +     0.29057047745206 * H1x4_2  +     -1.2430356696985 * H1x4_3
309460    +          +     1.38895822896909 * H1x4_4  +     0.32263395713709 * H1x4_5
309461    +          +      -0.876005602164 * H1x4_6 ;
MPRINT(EM_DIAGRAM):   H2x3_1 = H2x3_1 + 1.64939881299916 * H1x4_1 + 0.29057047745206 * H1x4_2 
+ -1.2430356696985 * H1x4_3 + 1.38895822896909 * H1x4_4 + 0.32263395713709 * H1x4_5 + 
-0.876005602164 * H1x4_6 ;
309462    +   H2x3_2  = H2x3_2  +    -0.59279077758901 * H1x4_1
309463    +          +     0.47534983861589 * H1x4_2  +     1.50522851379751 * H1x4_3
309464    +          +    -0.52074826438565 * H1x4_4  +    -0.13959571645898 * H1x4_5
309465    +          +     0.51236653129509 * H1x4_6 ;
MPRINT(EM_DIAGRAM):   H2x3_2 = H2x3_2 + -0.59279077758901 * H1x4_1 + 0.47534983861589 * H1x4_2 
+ 1.50522851379751 * H1x4_3 + -0.52074826438565 * H1x4_4 + -0.13959571645898 * H1x4_5 + 
0.51236653129509 * H1x4_6 ;
309466    +   H2x3_3  = H2x3_3  +       0.170929264521 * H1x4_1
309467    +          +    -1.09768862147461 * H1x4_2  +    -1.22166369035864 * H1x4_3
309468    +          +    -0.43496041372082 * H1x4_4  +     0.86983484014566 * H1x4_5
309469    +          +     0.14855508666868 * H1x4_6 ;
MPRINT(EM_DIAGRAM):   H2x3_3 = H2x3_3 + 0.170929264521 * H1x4_1 + -1.09768862147461 * H1x4_2 + 
-1.22166369035864 * H1x4_3 + -0.43496041372082 * H1x4_4 + 0.86983484014566 * H1x4_5 + 
0.14855508666868 * H1x4_6 ;
309470    +   H2x3_4  = H2x3_4  +    -0.26703118340308 * H1x4_1
309471    +          +     0.58353167926887 * H1x4_2  +     1.39169479141155 * H1x4_3
309472    +          +     -0.7893707969296 * H1x4_4  +     0.89521873365477 * H1x4_5
309473    +          +     1.60853840268286 * H1x4_6 ;
MPRINT(EM_DIAGRAM):   H2x3_4 = H2x3_4 + -0.26703118340308 * H1x4_1 + 0.58353167926887 * H1x4_2 
+ 1.39169479141155 * H1x4_3 + -0.7893707969296 * H1x4_4 + 0.89521873365477 * H1x4_5 + 
1.60853840268286 * H1x4_6 ;
309474    +   H2x3_5  = H2x3_5  +    -0.29353449181426 * H1x4_1
309475    +          +     0.02697197445995 * H1x4_2  +     0.04454970336296 * H1x4_3
309476    +          +    -0.17322488506489 * H1x4_4  +    -1.52564540234935 * H1x4_5
309477    +          +      0.6650692994568 * H1x4_6 ;
MPRINT(EM_DIAGRAM):   H2x3_5 = H2x3_5 + -0.29353449181426 * H1x4_1 + 0.02697197445995 * H1x4_2 
+ 0.04454970336296 * H1x4_3 + -0.17322488506489 * H1x4_4 + -1.52564540234935 * H1x4_5 + 
0.6650692994568 * H1x4_6 ;
309478    +   H2x3_1  =    -0.44046998911725 + H2x3_1 ;
MPRINT(EM_DIAGRAM):   H2x3_1 = -0.44046998911725 + H2x3_1 ;
309479    +   H2x3_2  =     1.44590821330163 + H2x3_2 ;
MPRINT(EM_DIAGRAM):   H2x3_2 = 1.44590821330163 + H2x3_2 ;
309480    +   H2x3_3  =    -0.02671947857742 + H2x3_3 ;
MPRINT(EM_DIAGRAM):   H2x3_3 = -0.02671947857742 + H2x3_3 ;
309481    +   H2x3_4  =     2.16876314488082 + H2x3_4 ;
MPRINT(EM_DIAGRAM):   H2x3_4 = 2.16876314488082 + H2x3_4 ;
309482    +   H2x3_5  =    -1.06855161267989 + H2x3_5 ;
MPRINT(EM_DIAGRAM):   H2x3_5 = -1.06855161267989 + H2x3_5 ;
309483    +   H2x3_6  = 0;
MPRINT(EM_DIAGRAM):   H2x3_6 = 0;
309484    +   _MAX_ = MAX (H2x3_1 , H2x3_2 , H2x3_3 , H2x3_4 , H2x3_5 , H2x3_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x3_1 , H2x3_2 , H2x3_3 , H2x3_4 , H2x3_5 , H2x3_6 );
309485    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
309486    +   H2x3_1  = EXP(H2x3_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x3_1 = EXP(H2x3_1 - _MAX_);
309487    +   _SUM_ = _SUM_ + H2x3_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x3_1 ;
309488    +   H2x3_2  = EXP(H2x3_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x3_2 = EXP(H2x3_2 - _MAX_);
309489    +   _SUM_ = _SUM_ + H2x3_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x3_2 ;
309490    +   H2x3_3  = EXP(H2x3_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x3_3 = EXP(H2x3_3 - _MAX_);
309491    +   _SUM_ = _SUM_ + H2x3_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x3_3 ;
309492    +   H2x3_4  = EXP(H2x3_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x3_4 = EXP(H2x3_4 - _MAX_);
309493    +   _SUM_ = _SUM_ + H2x3_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x3_4 ;
309494    +   H2x3_5  = EXP(H2x3_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x3_5 = EXP(H2x3_5 - _MAX_);
309495    +   _SUM_ = _SUM_ + H2x3_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x3_5 ;
309496    +   H2x3_6  = EXP(H2x3_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x3_6 = EXP(H2x3_6 - _MAX_);
309497    +   _SUM_ = _SUM_ + H2x3_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x3_6 ;
309498    +   H2x3_1  = H2x3_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x3_1 = H2x3_1 / _SUM_;
309499    +   H2x3_2  = H2x3_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x3_2 = H2x3_2 / _SUM_;
309500    +   H2x3_3  = H2x3_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x3_3 = H2x3_3 / _SUM_;
309501    +   H2x3_4  = H2x3_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x3_4 = H2x3_4 / _SUM_;
309502    +   H2x3_5  = H2x3_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x3_5 = H2x3_5 / _SUM_;
309503    +   H2x3_6  = H2x3_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x3_6 = H2x3_6 / _SUM_;
309504    +END;
MPRINT(EM_DIAGRAM):   END;
309505    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
309506    +   H2x3_1  = .;
MPRINT(EM_DIAGRAM):   H2x3_1 = .;
309507    +   H2x3_2  = .;
MPRINT(EM_DIAGRAM):   H2x3_2 = .;
309508    +   H2x3_3  = .;
MPRINT(EM_DIAGRAM):   H2x3_3 = .;
309509    +   H2x3_4  = .;
MPRINT(EM_DIAGRAM):   H2x3_4 = .;
309510    +   H2x3_5  = .;
MPRINT(EM_DIAGRAM):   H2x3_5 = .;
309511    +   H2x3_6  = .;
MPRINT(EM_DIAGRAM):   H2x3_6 = .;
309512    +END;
MPRINT(EM_DIAGRAM):   END;
309513    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
309514    +*** Writing the Node H3x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x1_ ;
309515    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
309516    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
309517    +   H3x1_1  =     0.14821897068309 * H2x1_1  +     0.10105634438409 * H2x1_2
309518    +          +     0.69826499371673 * H2x1_3  +     1.65127139539807 * H2x1_4
309519    +          +     1.34699293376382 * H2x1_5  +     0.62066324264653 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 0.14821897068309 * H2x1_1 + 0.10105634438409 * H2x1_2 + 
0.69826499371673 * H2x1_3 + 1.65127139539807 * H2x1_4 + 1.34699293376382 * H2x1_5 + 
0.62066324264653 * H2x1_6 ;
309520    +   H3x1_2  =     -0.6760189094281 * H2x1_1  +     0.85348791240011 * H2x1_2
309521    +          +    -0.07663386217946 * H2x1_3  +     2.15467384269703 * H2x1_4
309522    +          +    -0.50699529916446 * H2x1_5  +     1.70699964755049 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = -0.6760189094281 * H2x1_1 + 0.85348791240011 * H2x1_2 + 
-0.07663386217946 * H2x1_3 + 2.15467384269703 * H2x1_4 + -0.50699529916446 * H2x1_5 + 
1.70699964755049 * H2x1_6 ;
309523    +   H3x1_3  =    -0.94311365048828 * H2x1_1  +    -0.69829528108975 * H2x1_2
309524    +          +    -0.34747616168009 * H2x1_3  +     2.32941170908743 * H2x1_4
309525    +          +     3.71768144878584 * H2x1_5  +    -0.60932405988373 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = -0.94311365048828 * H2x1_1 + -0.69829528108975 * H2x1_2 + 
-0.34747616168009 * H2x1_3 + 2.32941170908743 * H2x1_4 + 3.71768144878584 * H2x1_5 + 
-0.60932405988373 * H2x1_6 ;
309526    +   H3x1_4  =     1.69107510526388 * H2x1_1  +    -1.40350955348413 * H2x1_2
309527    +          +    -0.47901844016365 * H2x1_3  +      0.3540542650553 * H2x1_4
309528    +          +    -1.56597514252687 * H2x1_5  +    -0.04997148078498 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = 1.69107510526388 * H2x1_1 + -1.40350955348413 * H2x1_2 + 
-0.47901844016365 * H2x1_3 + 0.3540542650553 * H2x1_4 + -1.56597514252687 * H2x1_5 + 
-0.04997148078498 * H2x1_6 ;
309529    +   H3x1_5  =    -0.23167181678539 * H2x1_1  +    -0.65942738658946 * H2x1_2
309530    +          +    -0.83280103611578 * H2x1_3  +    -1.03301865685228 * H2x1_4
309531    +          +      1.3401316289209 * H2x1_5  +    -1.98639459325872 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = -0.23167181678539 * H2x1_1 + -0.65942738658946 * H2x1_2 + 
-0.83280103611578 * H2x1_3 + -1.03301865685228 * H2x1_4 + 1.3401316289209 * H2x1_5 + 
-1.98639459325872 * H2x1_6 ;
309532    +   H3x1_1  = H3x1_1  +    -1.96226306174896 * H2x2_1
309533    +          +     1.03065434267907 * H2x2_2  +    -0.02977552697407 * H2x2_3
309534    +          +    -2.15633683205343 * H2x2_4  +    -0.16172049876123 * H2x2_5
309535    +          +     2.04617275364668 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + -1.96226306174896 * H2x2_1 + 1.03065434267907 * H2x2_2 
+ -0.02977552697407 * H2x2_3 + -2.15633683205343 * H2x2_4 + -0.16172049876123 * H2x2_5 + 
2.04617275364668 * H2x2_6 ;
309536    +   H3x1_2  = H3x1_2  +     0.98825486325651 * H2x2_1
309537    +          +    -0.45791784632486 * H2x2_2  +     -0.1004093258308 * H2x2_3
309538    +          +     -0.9411693729369 * H2x2_4  +     -0.2302105458948 * H2x2_5
309539    +          +    -0.37660795680674 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = H3x1_2 + 0.98825486325651 * H2x2_1 + -0.45791784632486 * H2x2_2 
+ -0.1004093258308 * H2x2_3 + -0.9411693729369 * H2x2_4 + -0.2302105458948 * H2x2_5 + 
-0.37660795680674 * H2x2_6 ;
309540    +   H3x1_3  = H3x1_3  +    -0.01929245635771 * H2x2_1
309541    +          +     0.59176660505983 * H2x2_2  +     0.85345798669405 * H2x2_3
309542    +          +    -0.29251716908915 * H2x2_4  +     0.62774918208489 * H2x2_5
309543    +          +    -0.43453791992382 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = H3x1_3 + -0.01929245635771 * H2x2_1 + 0.59176660505983 * H2x2_2 
+ 0.85345798669405 * H2x2_3 + -0.29251716908915 * H2x2_4 + 0.62774918208489 * H2x2_5 + 
-0.43453791992382 * H2x2_6 ;
309544    +   H3x1_4  = H3x1_4  +    -0.93313067901041 * H2x2_1
309545    +          +     0.79407052404273 * H2x2_2  +     1.63518575530242 * H2x2_3
309546    +          +     1.19368615452563 * H2x2_4  +     0.43365061793519 * H2x2_5
309547    +          +    -3.30381142208727 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = H3x1_4 + -0.93313067901041 * H2x2_1 + 0.79407052404273 * H2x2_2 
+ 1.63518575530242 * H2x2_3 + 1.19368615452563 * H2x2_4 + 0.43365061793519 * H2x2_5 + 
-3.30381142208727 * H2x2_6 ;
309548    +   H3x1_5  = H3x1_5  +      0.2721747886066 * H2x2_1
309549    +          +     0.29405186941774 * H2x2_2  +    -0.96425253045194 * H2x2_3
309550    +          +    -0.34879018216113 * H2x2_4  +    -1.15330072605073 * H2x2_5
309551    +          +    -0.34019675397366 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = H3x1_5 + 0.2721747886066 * H2x2_1 + 0.29405186941774 * H2x2_2 + 
-0.96425253045194 * H2x2_3 + -0.34879018216113 * H2x2_4 + -1.15330072605073 * H2x2_5 + 
-0.34019675397366 * H2x2_6 ;
309552    +   H3x1_1  = H3x1_1  +     0.99938924001809 * H2x3_1
309553    +          +    -0.28559857879809 * H2x3_2  +    -0.44648183712004 * H2x3_3
309554    +          +    -0.23199698060307 * H2x3_4  +    -0.64346521755351 * H2x3_5
309555    +          +     0.59340663088806 * H2x3_6 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + 0.99938924001809 * H2x3_1 + -0.28559857879809 * H2x3_2 
+ -0.44648183712004 * H2x3_3 + -0.23199698060307 * H2x3_4 + -0.64346521755351 * H2x3_5 + 
0.59340663088806 * H2x3_6 ;
309556    +   H3x1_2  = H3x1_2  +     1.61767718200144 * H2x3_1
309557    +          +     0.59417860044733 * H2x3_2  +      1.9323992067722 * H2x3_3
309558    +          +    -1.38224816012152 * H2x3_4  +    -2.04529937075447 * H2x3_5
309559    +          +     0.67050797164115 * H2x3_6 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = H3x1_2 + 1.61767718200144 * H2x3_1 + 0.59417860044733 * H2x3_2 
+ 1.9323992067722 * H2x3_3 + -1.38224816012152 * H2x3_4 + -2.04529937075447 * H2x3_5 + 
0.67050797164115 * H2x3_6 ;
309560    +   H3x1_3  = H3x1_3  +    -0.69807909205706 * H2x3_1
309561    +          +    -0.57895843216341 * H2x3_2  +    -0.16766418785512 * H2x3_3
309562    +          +     0.40654327615846 * H2x3_4  +    -1.86698682195337 * H2x3_5
309563    +          +    -0.51274988768251 * H2x3_6 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = H3x1_3 + -0.69807909205706 * H2x3_1 + -0.57895843216341 * 
H2x3_2 + -0.16766418785512 * H2x3_3 + 0.40654327615846 * H2x3_4 + -1.86698682195337 * H2x3_5 + 
-0.51274988768251 * H2x3_6 ;
309564    +   H3x1_4  = H3x1_4  +     0.48560830435522 * H2x3_1
309565    +          +     -2.8037598804912 * H2x3_2  +    -0.30231415756008 * H2x3_3
309566    +          +     2.41159952574381 * H2x3_4  +     0.62877424154604 * H2x3_5
309567    +          +    -0.73773727947747 * H2x3_6 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = H3x1_4 + 0.48560830435522 * H2x3_1 + -2.8037598804912 * H2x3_2 
+ -0.30231415756008 * H2x3_3 + 2.41159952574381 * H2x3_4 + 0.62877424154604 * H2x3_5 + 
-0.73773727947747 * H2x3_6 ;
309568    +   H3x1_5  = H3x1_5  +    -0.87089276878422 * H2x3_1
309569    +          +    -0.78003140915024 * H2x3_2  +    -1.46975503560585 * H2x3_3
309570    +          +     1.87460778751879 * H2x3_4  +    -0.09219359612439 * H2x3_5
309571    +          +    -1.07137645697526 * H2x3_6 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = H3x1_5 + -0.87089276878422 * H2x3_1 + -0.78003140915024 * 
H2x3_2 + -1.46975503560585 * H2x3_3 + 1.87460778751879 * H2x3_4 + -0.09219359612439 * H2x3_5 + 
-1.07137645697526 * H2x3_6 ;
309572    +   H3x1_1  =    -0.24118737469276 + H3x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = -0.24118737469276 + H3x1_1 ;
309573    +   H3x1_2  =     0.26844205496356 + H3x1_2 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = 0.26844205496356 + H3x1_2 ;
309574    +   H3x1_3  =      1.6092325807607 + H3x1_3 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = 1.6092325807607 + H3x1_3 ;
309575    +   H3x1_4  =     0.55904829903808 + H3x1_4 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = 0.55904829903808 + H3x1_4 ;
309576    +   H3x1_5  =     1.39880629138148 + H3x1_5 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = 1.39880629138148 + H3x1_5 ;
309577    +   H3x1_6  = 0;
MPRINT(EM_DIAGRAM):   H3x1_6 = 0;
309578    +   _MAX_ = MAX (H3x1_1 , H3x1_2 , H3x1_3 , H3x1_4 , H3x1_5 , H3x1_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H3x1_1 , H3x1_2 , H3x1_3 , H3x1_4 , H3x1_5 , H3x1_6 );
309579    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
309580    +   H3x1_1  = EXP(H3x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_1 = EXP(H3x1_1 - _MAX_);
309581    +   _SUM_ = _SUM_ + H3x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_1 ;
309582    +   H3x1_2  = EXP(H3x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_2 = EXP(H3x1_2 - _MAX_);
309583    +   _SUM_ = _SUM_ + H3x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_2 ;
309584    +   H3x1_3  = EXP(H3x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_3 = EXP(H3x1_3 - _MAX_);
309585    +   _SUM_ = _SUM_ + H3x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_3 ;
309586    +   H3x1_4  = EXP(H3x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_4 = EXP(H3x1_4 - _MAX_);
309587    +   _SUM_ = _SUM_ + H3x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_4 ;
309588    +   H3x1_5  = EXP(H3x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_5 = EXP(H3x1_5 - _MAX_);
309589    +   _SUM_ = _SUM_ + H3x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_5 ;
309590    +   H3x1_6  = EXP(H3x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_6 = EXP(H3x1_6 - _MAX_);
309591    +   _SUM_ = _SUM_ + H3x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_6 ;
309592    +   H3x1_1  = H3x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 / _SUM_;
309593    +   H3x1_2  = H3x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_2 = H3x1_2 / _SUM_;
309594    +   H3x1_3  = H3x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_3 = H3x1_3 / _SUM_;
309595    +   H3x1_4  = H3x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_4 = H3x1_4 / _SUM_;
309596    +   H3x1_5  = H3x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_5 = H3x1_5 / _SUM_;
309597    +   H3x1_6  = H3x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_6 = H3x1_6 / _SUM_;
309598    +END;
MPRINT(EM_DIAGRAM):   END;
309599    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
309600    +   H3x1_1  = .;
MPRINT(EM_DIAGRAM):   H3x1_1 = .;
309601    +   H3x1_2  = .;
MPRINT(EM_DIAGRAM):   H3x1_2 = .;
309602    +   H3x1_3  = .;
MPRINT(EM_DIAGRAM):   H3x1_3 = .;
309603    +   H3x1_4  = .;
MPRINT(EM_DIAGRAM):   H3x1_4 = .;
309604    +   H3x1_5  = .;
MPRINT(EM_DIAGRAM):   H3x1_5 = .;
309605    +   H3x1_6  = .;
MPRINT(EM_DIAGRAM):   H3x1_6 = .;
309606    +END;
MPRINT(EM_DIAGRAM):   END;
309607    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
309608    +*** Writing the Node H3x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x2_ ;
309609    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
309610    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
309611    +   H3x2_1  =     0.13469056275633 * H2x1_1  +    -1.31570873196603 * H2x1_2
309612    +          +    -0.83004507775706 * H2x1_3  +     1.14954585467995 * H2x1_4
309613    +          +     0.01234753333089 * H2x1_5  +     0.50683843245151 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x2_1 = 0.13469056275633 * H2x1_1 + -1.31570873196603 * H2x1_2 + 
-0.83004507775706 * H2x1_3 + 1.14954585467995 * H2x1_4 + 0.01234753333089 * H2x1_5 + 
0.50683843245151 * H2x1_6 ;
309614    +   H3x2_2  =     2.58620633866114 * H2x1_1  +     0.37629863890202 * H2x1_2
309615    +          +     0.34169762900278 * H2x1_3  +     1.24247313002596 * H2x1_4
309616    +          +     -0.1965463932822 * H2x1_5  +    -0.00458488228083 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x2_2 = 2.58620633866114 * H2x1_1 + 0.37629863890202 * H2x1_2 + 
0.34169762900278 * H2x1_3 + 1.24247313002596 * H2x1_4 + -0.1965463932822 * H2x1_5 + 
-0.00458488228083 * H2x1_6 ;
309617    +   H3x2_3  =    -2.01883694738218 * H2x1_1  +     0.83782353926562 * H2x1_2
309618    +          +    -1.95119268200972 * H2x1_3  +    -1.04826190833003 * H2x1_4
309619    +          +     1.66733023346498 * H2x1_5  +     0.23483419363088 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x2_3 = -2.01883694738218 * H2x1_1 + 0.83782353926562 * H2x1_2 + 
-1.95119268200972 * H2x1_3 + -1.04826190833003 * H2x1_4 + 1.66733023346498 * H2x1_5 + 
0.23483419363088 * H2x1_6 ;
309620    +   H3x2_4  =     0.40678642111393 * H2x1_1  +    -0.10557612663286 * H2x1_2
309621    +          +    -0.34694532874387 * H2x1_3  +     -1.6967916788772 * H2x1_4
309622    +          +     0.24026556349373 * H2x1_5  +    -0.69393637888423 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x2_4 = 0.40678642111393 * H2x1_1 + -0.10557612663286 * H2x1_2 + 
-0.34694532874387 * H2x1_3 + -1.6967916788772 * H2x1_4 + 0.24026556349373 * H2x1_5 + 
-0.69393637888423 * H2x1_6 ;
309623    +   H3x2_5  =    -1.48304630985783 * H2x1_1  +     0.87426655970556 * H2x1_2
309624    +          +    -0.49899516599841 * H2x1_3  +    -1.94880978312007 * H2x1_4
309625    +          +    -2.45275015055877 * H2x1_5  +    -0.03264500335093 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x2_5 = -1.48304630985783 * H2x1_1 + 0.87426655970556 * H2x1_2 + 
-0.49899516599841 * H2x1_3 + -1.94880978312007 * H2x1_4 + -2.45275015055877 * H2x1_5 + 
-0.03264500335093 * H2x1_6 ;
309626    +   H3x2_1  = H3x2_1  +    -0.40915299509566 * H2x2_1
309627    +          +     1.45952180668254 * H2x2_2  +     0.42420517277224 * H2x2_3
309628    +          +    -0.79379446044158 * H2x2_4  +     0.73614212418439 * H2x2_5
309629    +          +     -0.6527392657117 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x2_1 = H3x2_1 + -0.40915299509566 * H2x2_1 + 1.45952180668254 * H2x2_2 
+ 0.42420517277224 * H2x2_3 + -0.79379446044158 * H2x2_4 + 0.73614212418439 * H2x2_5 + 
-0.6527392657117 * H2x2_6 ;
309630    +   H3x2_2  = H3x2_2  +    -1.62752321860626 * H2x2_1
309631    +          +    -0.04689831325067 * H2x2_2  +    -2.87951125721119 * H2x2_3
309632    +          +    -0.36181303609331 * H2x2_4  +     0.55999175715209 * H2x2_5
309633    +          +    -0.40911363767301 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x2_2 = H3x2_2 + -1.62752321860626 * H2x2_1 + -0.04689831325067 * 
H2x2_2 + -2.87951125721119 * H2x2_3 + -0.36181303609331 * H2x2_4 + 0.55999175715209 * H2x2_5 + 
-0.40911363767301 * H2x2_6 ;
309634    +   H3x2_3  = H3x2_3  +     0.50766404641726 * H2x2_1
309635    +          +     0.02747397544049 * H2x2_2  +    -1.35626517144826 * H2x2_3
309636    +          +     0.23390260329386 * H2x2_4  +     -0.5025118845527 * H2x2_5
309637    +          +    -1.14035867434772 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x2_3 = H3x2_3 + 0.50766404641726 * H2x2_1 + 0.02747397544049 * H2x2_2 
+ -1.35626517144826 * H2x2_3 + 0.23390260329386 * H2x2_4 + -0.5025118845527 * H2x2_5 + 
-1.14035867434772 * H2x2_6 ;
309638    +   H3x2_4  = H3x2_4  +     0.64958154360038 * H2x2_1
309639    +          +     1.68671947742627 * H2x2_2  +    -0.42417215632785 * H2x2_3
309640    +          +    -0.39675884102374 * H2x2_4  +     1.98354732887496 * H2x2_5
309641    +          +    -1.32783167695801 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x2_4 = H3x2_4 + 0.64958154360038 * H2x2_1 + 1.68671947742627 * H2x2_2 
+ -0.42417215632785 * H2x2_3 + -0.39675884102374 * H2x2_4 + 1.98354732887496 * H2x2_5 + 
-1.32783167695801 * H2x2_6 ;
309642    +   H3x2_5  = H3x2_5  +     1.92075053147101 * H2x2_1
309643    +          +     1.22293096034837 * H2x2_2  +    -0.74039853818796 * H2x2_3
309644    +          +    -0.25033258903105 * H2x2_4  +     0.63358340091733 * H2x2_5
309645    +          +     0.17488501957475 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x2_5 = H3x2_5 + 1.92075053147101 * H2x2_1 + 1.22293096034837 * H2x2_2 
+ -0.74039853818796 * H2x2_3 + -0.25033258903105 * H2x2_4 + 0.63358340091733 * H2x2_5 + 
0.17488501957475 * H2x2_6 ;
309646    +   H3x2_1  = H3x2_1  +     0.88292932547634 * H2x3_1
309647    +          +    -0.27631908402136 * H2x3_2  +     0.93133699792762 * H2x3_3
309648    +          +     1.18769264917434 * H2x3_4  +    -0.88901652244884 * H2x3_5
309649    +          +    -0.17544617255869 * H2x3_6 ;
MPRINT(EM_DIAGRAM):   H3x2_1 = H3x2_1 + 0.88292932547634 * H2x3_1 + -0.27631908402136 * H2x3_2 
+ 0.93133699792762 * H2x3_3 + 1.18769264917434 * H2x3_4 + -0.88901652244884 * H2x3_5 + 
-0.17544617255869 * H2x3_6 ;
309650    +   H3x2_2  = H3x2_2  +     0.71538502917742 * H2x3_1
309651    +          +    -0.76848695288598 * H2x3_2  +     1.24503864708272 * H2x3_3
309652    +          +    -0.93962158881999 * H2x3_4  +    -0.43383001812557 * H2x3_5
309653    +          +     1.14672043219259 * H2x3_6 ;
MPRINT(EM_DIAGRAM):   H3x2_2 = H3x2_2 + 0.71538502917742 * H2x3_1 + -0.76848695288598 * H2x3_2 
+ 1.24503864708272 * H2x3_3 + -0.93962158881999 * H2x3_4 + -0.43383001812557 * H2x3_5 + 
1.14672043219259 * H2x3_6 ;
309654    +   H3x2_3  = H3x2_3  +    -0.39933331346344 * H2x3_1
309655    +          +      0.0019862182661 * H2x3_2  +    -0.60479718136768 * H2x3_3
309656    +          +      1.3818804125218 * H2x3_4  +     0.13498986352108 * H2x3_5
309657    +          +     1.02889511152823 * H2x3_6 ;
MPRINT(EM_DIAGRAM):   H3x2_3 = H3x2_3 + -0.39933331346344 * H2x3_1 + 0.0019862182661 * H2x3_2 
+ -0.60479718136768 * H2x3_3 + 1.3818804125218 * H2x3_4 + 0.13498986352108 * H2x3_5 + 
1.02889511152823 * H2x3_6 ;
309658    +   H3x2_4  = H3x2_4  +    -1.24198502624302 * H2x3_1
309659    +          +    -0.09061963757116 * H2x3_2  +    -0.70229381972412 * H2x3_3
309660    +          +    -1.43988785716026 * H2x3_4  +     0.45188902401215 * H2x3_5
309661    +          +     0.10073869982371 * H2x3_6 ;
MPRINT(EM_DIAGRAM):   H3x2_4 = H3x2_4 + -1.24198502624302 * H2x3_1 + -0.09061963757116 * 
H2x3_2 + -0.70229381972412 * H2x3_3 + -1.43988785716026 * H2x3_4 + 0.45188902401215 * H2x3_5 + 
0.10073869982371 * H2x3_6 ;
309662    +   H3x2_5  = H3x2_5  +     0.13815223958312 * H2x3_1
309663    +          +     0.38392032129472 * H2x3_2  +    -0.08374178846724 * H2x3_3
309664    +          +     0.39613433726611 * H2x3_4  +     1.64049322745471 * H2x3_5
309665    +          +     0.97496084656174 * H2x3_6 ;
MPRINT(EM_DIAGRAM):   H3x2_5 = H3x2_5 + 0.13815223958312 * H2x3_1 + 0.38392032129472 * H2x3_2 
+ -0.08374178846724 * H2x3_3 + 0.39613433726611 * H2x3_4 + 1.64049322745471 * H2x3_5 + 
0.97496084656174 * H2x3_6 ;
309666    +   H3x2_1  =    -0.72845954974251 + H3x2_1 ;
MPRINT(EM_DIAGRAM):   H3x2_1 = -0.72845954974251 + H3x2_1 ;
309667    +   H3x2_2  =     0.59148824718722 + H3x2_2 ;
MPRINT(EM_DIAGRAM):   H3x2_2 = 0.59148824718722 + H3x2_2 ;
309668    +   H3x2_3  =     1.28031731320103 + H3x2_3 ;
MPRINT(EM_DIAGRAM):   H3x2_3 = 1.28031731320103 + H3x2_3 ;
309669    +   H3x2_4  =    -0.11427038364635 + H3x2_4 ;
MPRINT(EM_DIAGRAM):   H3x2_4 = -0.11427038364635 + H3x2_4 ;
309670    +   H3x2_5  =    -0.28699725292326 + H3x2_5 ;
MPRINT(EM_DIAGRAM):   H3x2_5 = -0.28699725292326 + H3x2_5 ;
309671    +   H3x2_6  = 0;
MPRINT(EM_DIAGRAM):   H3x2_6 = 0;
309672    +   _MAX_ = MAX (H3x2_1 , H3x2_2 , H3x2_3 , H3x2_4 , H3x2_5 , H3x2_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H3x2_1 , H3x2_2 , H3x2_3 , H3x2_4 , H3x2_5 , H3x2_6 );
309673    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
309674    +   H3x2_1  = EXP(H3x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x2_1 = EXP(H3x2_1 - _MAX_);
309675    +   _SUM_ = _SUM_ + H3x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x2_1 ;
309676    +   H3x2_2  = EXP(H3x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x2_2 = EXP(H3x2_2 - _MAX_);
309677    +   _SUM_ = _SUM_ + H3x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x2_2 ;
309678    +   H3x2_3  = EXP(H3x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x2_3 = EXP(H3x2_3 - _MAX_);
309679    +   _SUM_ = _SUM_ + H3x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x2_3 ;
309680    +   H3x2_4  = EXP(H3x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x2_4 = EXP(H3x2_4 - _MAX_);
309681    +   _SUM_ = _SUM_ + H3x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x2_4 ;
309682    +   H3x2_5  = EXP(H3x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x2_5 = EXP(H3x2_5 - _MAX_);
309683    +   _SUM_ = _SUM_ + H3x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x2_5 ;
309684    +   H3x2_6  = EXP(H3x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x2_6 = EXP(H3x2_6 - _MAX_);
309685    +   _SUM_ = _SUM_ + H3x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x2_6 ;
309686    +   H3x2_1  = H3x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x2_1 = H3x2_1 / _SUM_;
309687    +   H3x2_2  = H3x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x2_2 = H3x2_2 / _SUM_;
309688    +   H3x2_3  = H3x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x2_3 = H3x2_3 / _SUM_;
309689    +   H3x2_4  = H3x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x2_4 = H3x2_4 / _SUM_;
309690    +   H3x2_5  = H3x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x2_5 = H3x2_5 / _SUM_;
309691    +   H3x2_6  = H3x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x2_6 = H3x2_6 / _SUM_;
309692    +END;
MPRINT(EM_DIAGRAM):   END;
309693    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
309694    +   H3x2_1  = .;
MPRINT(EM_DIAGRAM):   H3x2_1 = .;
309695    +   H3x2_2  = .;
MPRINT(EM_DIAGRAM):   H3x2_2 = .;
309696    +   H3x2_3  = .;
MPRINT(EM_DIAGRAM):   H3x2_3 = .;
309697    +   H3x2_4  = .;
MPRINT(EM_DIAGRAM):   H3x2_4 = .;
309698    +   H3x2_5  = .;
MPRINT(EM_DIAGRAM):   H3x2_5 = .;
309699    +   H3x2_6  = .;
MPRINT(EM_DIAGRAM):   H3x2_6 = .;
309700    +END;
MPRINT(EM_DIAGRAM):   END;
309701    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
309702    +*** Writing the Node H4x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H4x1_ ;
309703    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
309704    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
309705    +   H4x1_1  =     0.10986960182278 * H3x1_1  +    -0.10835805909937 * H3x1_2
309706    +          +     1.78643376838566 * H3x1_3  +    -0.00067995179919 * H3x1_4
309707    +          +     2.04711620528782 * H3x1_5  +    -0.66853997603718 * H3x1_6 ;
MPRINT(EM_DIAGRAM):   H4x1_1 = 0.10986960182278 * H3x1_1 + -0.10835805909937 * H3x1_2 + 
1.78643376838566 * H3x1_3 + -0.00067995179919 * H3x1_4 + 2.04711620528782 * H3x1_5 + 
-0.66853997603718 * H3x1_6 ;
309708    +   H4x1_2  =    -0.17187141657369 * H3x1_1  +    -1.56897037747293 * H3x1_2
309709    +          +    -1.38330818097338 * H3x1_3  +     3.94629669251083 * H3x1_4
309710    +          +    -0.57201557221624 * H3x1_5  +     0.99276034828548 * H3x1_6 ;
MPRINT(EM_DIAGRAM):   H4x1_2 = -0.17187141657369 * H3x1_1 + -1.56897037747293 * H3x1_2 + 
-1.38330818097338 * H3x1_3 + 3.94629669251083 * H3x1_4 + -0.57201557221624 * H3x1_5 + 
0.99276034828548 * H3x1_6 ;
309711    +   H4x1_3  =      1.5223304212488 * H3x1_1  +    -0.33490912702371 * H3x1_2
309712    +          +    -0.30324493540575 * H3x1_3  +    -1.23990036921669 * H3x1_4
309713    +          +     0.77489370055267 * H3x1_5  +    -0.38609823936674 * H3x1_6 ;
MPRINT(EM_DIAGRAM):   H4x1_3 = 1.5223304212488 * H3x1_1 + -0.33490912702371 * H3x1_2 + 
-0.30324493540575 * H3x1_3 + -1.23990036921669 * H3x1_4 + 0.77489370055267 * H3x1_5 + 
-0.38609823936674 * H3x1_6 ;
309714    +   H4x1_4  =    -0.75234452297837 * H3x1_1  +      1.1117782900703 * H3x1_2
309715    +          +      1.0171911341496 * H3x1_3  +     2.31462824862723 * H3x1_4
309716    +          +     1.05562639649812 * H3x1_5  +    -0.80603399686936 * H3x1_6 ;
MPRINT(EM_DIAGRAM):   H4x1_4 = -0.75234452297837 * H3x1_1 + 1.1117782900703 * H3x1_2 + 
1.0171911341496 * H3x1_3 + 2.31462824862723 * H3x1_4 + 1.05562639649812 * H3x1_5 + 
-0.80603399686936 * H3x1_6 ;
309717    +   H4x1_5  =    -0.35441774309359 * H3x1_1  +     0.37408435161205 * H3x1_2
309718    +          +    -0.79287886005891 * H3x1_3  +    -0.89695291885453 * H3x1_4
309719    +          +     0.46220429367054 * H3x1_5  +    -1.56166867584216 * H3x1_6 ;
MPRINT(EM_DIAGRAM):   H4x1_5 = -0.35441774309359 * H3x1_1 + 0.37408435161205 * H3x1_2 + 
-0.79287886005891 * H3x1_3 + -0.89695291885453 * H3x1_4 + 0.46220429367054 * H3x1_5 + 
-1.56166867584216 * H3x1_6 ;
309720    +   H4x1_1  = H4x1_1  +    -1.12622282402713 * H3x2_1
309721    +          +     2.43865739917959 * H3x2_2  +     1.62534005409988 * H3x2_3
309722    +          +     0.83506165677151 * H3x2_4  +    -0.15894659563972 * H3x2_5
309723    +          +     0.77216806897502 * H3x2_6 ;
MPRINT(EM_DIAGRAM):   H4x1_1 = H4x1_1 + -1.12622282402713 * H3x2_1 + 2.43865739917959 * H3x2_2 
+ 1.62534005409988 * H3x2_3 + 0.83506165677151 * H3x2_4 + -0.15894659563972 * H3x2_5 + 
0.77216806897502 * H3x2_6 ;
309724    +   H4x1_2  = H4x1_2  +     0.96736353410956 * H3x2_1
309725    +          +      1.6250281874285 * H3x2_2  +    -0.81418318229631 * H3x2_3
309726    +          +     0.35282111325987 * H3x2_4  +     0.11187473980261 * H3x2_5
309727    +          +     0.73971378600397 * H3x2_6 ;
MPRINT(EM_DIAGRAM):   H4x1_2 = H4x1_2 + 0.96736353410956 * H3x2_1 + 1.6250281874285 * H3x2_2 + 
-0.81418318229631 * H3x2_3 + 0.35282111325987 * H3x2_4 + 0.11187473980261 * H3x2_5 + 
0.73971378600397 * H3x2_6 ;
309728    +   H4x1_3  = H4x1_3  +    -0.30588247178582 * H3x2_1
309729    +          +     0.22302184288326 * H3x2_2  +    -0.15797620108073 * H3x2_3
309730    +          +     1.18515955770896 * H3x2_4  +     0.43359240886537 * H3x2_5
309731    +          +     0.90907054011344 * H3x2_6 ;
MPRINT(EM_DIAGRAM):   H4x1_3 = H4x1_3 + -0.30588247178582 * H3x2_1 + 0.22302184288326 * H3x2_2 
+ -0.15797620108073 * H3x2_3 + 1.18515955770896 * H3x2_4 + 0.43359240886537 * H3x2_5 + 
0.90907054011344 * H3x2_6 ;
309732    +   H4x1_4  = H4x1_4  +    -0.26678025657796 * H3x2_1
309733    +          +    -0.23171152283695 * H3x2_2  +    -0.72882061581264 * H3x2_3
309734    +          +     0.68597418643333 * H3x2_4  +      0.6559090638639 * H3x2_5
309735    +          +     0.95412028439169 * H3x2_6 ;
MPRINT(EM_DIAGRAM):   H4x1_4 = H4x1_4 + -0.26678025657796 * H3x2_1 + -0.23171152283695 * 
H3x2_2 + -0.72882061581264 * H3x2_3 + 0.68597418643333 * H3x2_4 + 0.6559090638639 * H3x2_5 + 
0.95412028439169 * H3x2_6 ;
309736    +   H4x1_5  = H4x1_5  +    -0.77875602324955 * H3x2_1
309737    +          +     -1.5646810153964 * H3x2_2  +    -0.53157591270506 * H3x2_3
309738    +          +    -0.27917864191674 * H3x2_4  +    -1.10966192483404 * H3x2_5
309739    +          +     -0.0058627670025 * H3x2_6 ;
MPRINT(EM_DIAGRAM):   H4x1_5 = H4x1_5 + -0.77875602324955 * H3x2_1 + -1.5646810153964 * H3x2_2 
+ -0.53157591270506 * H3x2_3 + -0.27917864191674 * H3x2_4 + -1.10966192483404 * H3x2_5 + 
-0.0058627670025 * H3x2_6 ;
309740    +   H4x1_1  =     0.87937070574208 + H4x1_1 ;
MPRINT(EM_DIAGRAM):   H4x1_1 = 0.87937070574208 + H4x1_1 ;
309741    +   H4x1_2  =     0.75203729660648 + H4x1_2 ;
MPRINT(EM_DIAGRAM):   H4x1_2 = 0.75203729660648 + H4x1_2 ;
309742    +   H4x1_3  =     1.14889100908291 + H4x1_3 ;
MPRINT(EM_DIAGRAM):   H4x1_3 = 1.14889100908291 + H4x1_3 ;
309743    +   H4x1_4  =    -1.71383624276913 + H4x1_4 ;
MPRINT(EM_DIAGRAM):   H4x1_4 = -1.71383624276913 + H4x1_4 ;
309744    +   H4x1_5  =     0.22194774900585 + H4x1_5 ;
MPRINT(EM_DIAGRAM):   H4x1_5 = 0.22194774900585 + H4x1_5 ;
309745    +   H4x1_6  = 0;
MPRINT(EM_DIAGRAM):   H4x1_6 = 0;
309746    +   _MAX_ = MAX (H4x1_1 , H4x1_2 , H4x1_3 , H4x1_4 , H4x1_5 , H4x1_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H4x1_1 , H4x1_2 , H4x1_3 , H4x1_4 , H4x1_5 , H4x1_6 );
309747    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
309748    +   H4x1_1  = EXP(H4x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H4x1_1 = EXP(H4x1_1 - _MAX_);
309749    +   _SUM_ = _SUM_ + H4x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H4x1_1 ;
309750    +   H4x1_2  = EXP(H4x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H4x1_2 = EXP(H4x1_2 - _MAX_);
309751    +   _SUM_ = _SUM_ + H4x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H4x1_2 ;
309752    +   H4x1_3  = EXP(H4x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H4x1_3 = EXP(H4x1_3 - _MAX_);
309753    +   _SUM_ = _SUM_ + H4x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H4x1_3 ;
309754    +   H4x1_4  = EXP(H4x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H4x1_4 = EXP(H4x1_4 - _MAX_);
309755    +   _SUM_ = _SUM_ + H4x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H4x1_4 ;
309756    +   H4x1_5  = EXP(H4x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H4x1_5 = EXP(H4x1_5 - _MAX_);
309757    +   _SUM_ = _SUM_ + H4x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H4x1_5 ;
309758    +   H4x1_6  = EXP(H4x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H4x1_6 = EXP(H4x1_6 - _MAX_);
309759    +   _SUM_ = _SUM_ + H4x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H4x1_6 ;
309760    +   H4x1_1  = H4x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H4x1_1 = H4x1_1 / _SUM_;
309761    +   H4x1_2  = H4x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H4x1_2 = H4x1_2 / _SUM_;
309762    +   H4x1_3  = H4x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H4x1_3 = H4x1_3 / _SUM_;
309763    +   H4x1_4  = H4x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H4x1_4 = H4x1_4 / _SUM_;
309764    +   H4x1_5  = H4x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H4x1_5 = H4x1_5 / _SUM_;
309765    +   H4x1_6  = H4x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H4x1_6 = H4x1_6 / _SUM_;
309766    +END;
MPRINT(EM_DIAGRAM):   END;
309767    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
309768    +   H4x1_1  = .;
MPRINT(EM_DIAGRAM):   H4x1_1 = .;
309769    +   H4x1_2  = .;
MPRINT(EM_DIAGRAM):   H4x1_2 = .;
309770    +   H4x1_3  = .;
MPRINT(EM_DIAGRAM):   H4x1_3 = .;
309771    +   H4x1_4  = .;
MPRINT(EM_DIAGRAM):   H4x1_4 = .;
309772    +   H4x1_5  = .;
MPRINT(EM_DIAGRAM):   H4x1_5 = .;
309773    +   H4x1_6  = .;
MPRINT(EM_DIAGRAM):   H4x1_6 = .;
309774    +END;
MPRINT(EM_DIAGRAM):   END;
309775    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
309776    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
309777    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
309778    +
309779    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
309780    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
309781    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
309782    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
309783    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
309784    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
309785    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
309786    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
309787    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
309788    +end;
MPRINT(EM_DIAGRAM):   end;
309789    +else do;
MPRINT(EM_DIAGRAM):   else do;
309790    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
309791    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
309792    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
309793    +   end;
MPRINT(EM_DIAGRAM):   end;
309794    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
309795    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
309796    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
309797    +   end;
MPRINT(EM_DIAGRAM):   end;
309798    +   else do;
MPRINT(EM_DIAGRAM):   else do;
309799    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
309800    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
309801    +   end;
MPRINT(EM_DIAGRAM):   end;
309802    +end;
MPRINT(EM_DIAGRAM):   end;
309803    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
309804    +   P_DepVar1  =    -5.30721919155126 * H4x1_1  +     10.4301477552223 * H4x1_2
309805    +          +    -3.40676330075486 * H4x1_3  +     0.07452634039202 * H4x1_4
309806    +          +    -2.90585821687293 * H4x1_5  +    -2.63321710569292 * H4x1_6 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -5.30721919155126 * H4x1_1 + 10.4301477552223 * H4x1_2 + 
-3.40676330075486 * H4x1_3 + 0.07452634039202 * H4x1_4 + -2.90585821687293 * H4x1_5 + 
-2.63321710569292 * H4x1_6 ;
309807    +   P_DepVar1  =    -2.93956196427421 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.93956196427421 + P_DepVar1 ;
309808    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
309809    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
309810    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
309811    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
309812    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
309813    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
309814    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
309815    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
309816    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
309817    +END;
MPRINT(EM_DIAGRAM):   END;
309818    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
309819    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
309820    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
309821    +END;
MPRINT(EM_DIAGRAM):   END;
309822    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
309823    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
309824    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
309825    +END;
MPRINT(EM_DIAGRAM):   END;
309826    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
309827    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
309828    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
309829    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
309830    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
309831    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
309832    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
309833    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
309834    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
309835    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
309836    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
309837    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
309838    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
309839    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
309840    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
309841    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
309842    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
309843    +END;
MPRINT(EM_DIAGRAM):   END;
309844    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
309845    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
309846    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
309847    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
309848    +* Renaming variables for AutoNeural28;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural28;
309849    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
309850    +* Renaming Posterior variables for AutoNeural28;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural28;
309851    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
309852    +drop AutoNeural28_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural28_P_DepVar1;
309853    +AutoNeural28_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural28_P_DepVar1 = P_DepVar1;
309854    +drop AutoNeural28_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural28_P_DepVar0;
309855    +AutoNeural28_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural28_P_DepVar0 = P_DepVar0;
309856    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
309857    +* Renaming _WARN_ variable for AutoNeural28;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural28;
309858    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
309859    +length AutoNeural28_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural28_WARN_ $4;
309860    +drop AutoNeural28_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural28_WARN_;
309861    +AutoNeural28_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural28_WARN_ = _WARN_;
309862    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
309863    +* Ensmbl19: Scoring Code of model 3 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl19: Scoring Code of model 3 of 5;
309864    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
309865    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
309866    +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
309867    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
309868    +* NODE: Neural28;
MPRINT(EM_DIAGRAM):   * NODE: Neural28;
309869    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
309870    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
309871    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
309872    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
309873    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
309874    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
309875    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
309876    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
309877    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
309878    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
309879    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
309880    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
309881    +LENGTH _WARN_ $4
309882    +      F_DepVar  $ 12
309883    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
309884    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
309885    +
309886    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
309887    +
309888    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
309889    +
309890    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
309891    +
309892    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
309893    +
309894    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
309895    +
309896    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
309897    +
309898    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
309899    +
309900    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
309901    +
309902    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
309903    +
309904    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
309905    +
309906    +      label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
309907    +
309908    +      label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
309909    +
309910    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
309911    +
309912    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
309913    +
309914    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
309915    +
309916    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
309917    +
309918    +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
309919    +
309920    +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
309921    +
309922    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
309923    +
309924    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
309925    +
309926    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
309927    +
309928    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
309929    +
309930    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
309931    +
309932    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
309933    +
309934    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
309935    +
309936    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
309937    +
309938    +*** Generate dummy variables for G_Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for G_Marital_Status ;
309939    +drop G_Marital_Status0 G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   drop G_Marital_Status0 G_Marital_Status1 ;
309940    +if missing( G_Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( G_Marital_Status ) then do;
309941    +   G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
309942    +   G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
309943    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
309944    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
309945    +end;
MPRINT(EM_DIAGRAM):   end;
309946    +else do;
MPRINT(EM_DIAGRAM):   else do;
309947    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
309948    +   _dm12 = put( G_Marital_Status , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( G_Marital_Status , BEST12. );
309949    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
309950    +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
309951    +      G_Marital_Status0 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = -1;
309952    +      G_Marital_Status1 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = -1;
309953    +   end;
MPRINT(EM_DIAGRAM):   end;
309954    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
309955    +      G_Marital_Status0 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 1;
309956    +      G_Marital_Status1 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 0;
309957    +   end;
MPRINT(EM_DIAGRAM):   end;
309958    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
309959    +      G_Marital_Status0 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 0;
309960    +      G_Marital_Status1 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 1;
309961    +   end;
MPRINT(EM_DIAGRAM):   end;
309962    +   else do;
MPRINT(EM_DIAGRAM):   else do;
309963    +      G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
309964    +      G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
309965    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
309966    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
309967    +   end;
MPRINT(EM_DIAGRAM):   end;
309968    +end;
MPRINT(EM_DIAGRAM):   end;
309969    +
309970    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
309971    +*** Checking missing input Interval
309972    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
309973    +
309974    +IF NMISS(
309975    +   AcceptedCmpTotal ,
309976    +   Frq ,
309977    +   Income ,
309978    +   Mnt ,
309979    +   MntGoldProds ,
309980    +   MntMeatProducts ,
309981    +   MntWines ,
309982    +   NumDistPurchases ,
309983    +   RFMstat ,
309984    +   RMntFrq ,
309985    +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntGoldProds , 
MntMeatProducts , MntWines , NumDistPurchases , RFMstat , RMntFrq , Recency ) THEN DO;
309986    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
309987    +
309988    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
309989    +END;
MPRINT(EM_DIAGRAM):   END;
309990    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
309991    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
309992    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
309993    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
309994    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
309995    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
309996    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
309997    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
309998    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
309999    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
310000    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
310001    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
310002    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
310003    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
310004    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
310005    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
310006    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
310007    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
310008    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
310009    +END;
MPRINT(EM_DIAGRAM):   END;
310010    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
310011    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
310012    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
310013    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
310014    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
310015    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
310016    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
310017    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
310018    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
310019    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
310020    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
310021    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
310022    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
310023    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
310024    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
310025    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
310026    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
310027    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
310028    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
310029    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
310030    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
310031    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
310032    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
310033    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
310034    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
310035    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
310036    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
310037    +END;
MPRINT(EM_DIAGRAM):   END;
310038    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
310039    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
310040    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
310041    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
310042    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
310043    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
310044    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
310045    +   H11  =     0.40839920245437 * S_AcceptedCmpTotal  +    -0.80301052154323 *
310046    +        S_Frq  +     0.19839975683497 * S_Income  +    -0.71099382445924 *
310047    +        S_Mnt  +    -0.15644638799226 * S_MntGoldProds
310048    +          +    -0.05910355740416 * S_MntMeatProducts
310049    +          +     0.23095157103241 * S_MntWines  +     0.67840217585411 *
310050    +        S_NumDistPurchases  +     0.12536920827324 * S_RFMstat
310051    +          +    -0.27246125863137 * S_RMntFrq  +    -1.02114645988925 *
310052    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H11 = 0.40839920245437 * S_AcceptedCmpTotal + -0.80301052154323 * S_Frq 
+ 0.19839975683497 * S_Income + -0.71099382445924 * S_Mnt + -0.15644638799226 * S_MntGoldProds 
+ -0.05910355740416 * S_MntMeatProducts + 0.23095157103241 * S_MntWines + 0.67840217585411 * 
S_NumDistPurchases + 0.12536920827324 * S_RFMstat + -0.27246125863137 * S_RMntFrq + 
-1.02114645988925 * S_Recency ;
310053    +   H12  =    -0.09503041118006 * S_AcceptedCmpTotal  +     0.74672296647411 *
310054    +        S_Frq  +     1.82688988564051 * S_Income  +    -0.06831964209279 *
310055    +        S_Mnt  +    -0.13330887266177 * S_MntGoldProds
310056    +          +     0.09400377526937 * S_MntMeatProducts
310057    +          +    -0.53358910675611 * S_MntWines  +     0.13886503925085 *
310058    +        S_NumDistPurchases  +     0.02243224025219 * S_RFMstat
310059    +          +    -0.03110171961938 * S_RMntFrq  +     0.39055670382948 *
310060    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H12 = -0.09503041118006 * S_AcceptedCmpTotal + 0.74672296647411 * S_Frq 
+ 1.82688988564051 * S_Income + -0.06831964209279 * S_Mnt + -0.13330887266177 * S_MntGoldProds 
+ 0.09400377526937 * S_MntMeatProducts + -0.53358910675611 * S_MntWines + 0.13886503925085 * 
S_NumDistPurchases + 0.02243224025219 * S_RFMstat + -0.03110171961938 * S_RMntFrq + 
0.39055670382948 * S_Recency ;
310061    +   H13  =    -0.07144509122078 * S_AcceptedCmpTotal  +     0.65325962599673 *
310062    +        S_Frq  +     0.03169199805286 * S_Income  +     0.53573115818994 *
310063    +        S_Mnt  +     0.13372718478424 * S_MntGoldProds
310064    +          +    -1.62740823190029 * S_MntMeatProducts
310065    +          +     0.15642273844597 * S_MntWines  +    -0.78908066213044 *
310066    +        S_NumDistPurchases  +     -0.4365555360753 * S_RFMstat
310067    +          +    -0.63552932650743 * S_RMntFrq  +     0.17699292292485 *
310068    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H13 = -0.07144509122078 * S_AcceptedCmpTotal + 0.65325962599673 * S_Frq 
+ 0.03169199805286 * S_Income + 0.53573115818994 * S_Mnt + 0.13372718478424 * S_MntGoldProds + 
-1.62740823190029 * S_MntMeatProducts + 0.15642273844597 * S_MntWines + -0.78908066213044 * 
S_NumDistPurchases + -0.4365555360753 * S_RFMstat + -0.63552932650743 * S_RMntFrq + 
0.17699292292485 * S_Recency ;
310069    +   H14  =     0.03098188354318 * S_AcceptedCmpTotal  +    -0.04737735825642 *
310070    +        S_Frq  +     0.30967861276694 * S_Income  +    -0.03786683388502 *
310071    +        S_Mnt  +     0.25532115520236 * S_MntGoldProds
310072    +          +      0.3965117290354 * S_MntMeatProducts
310073    +          +     0.36188945634536 * S_MntWines  +    -0.24664355133344 *
310074    +        S_NumDistPurchases  +     0.15627885374544 * S_RFMstat
310075    +          +    -0.10763737759383 * S_RMntFrq  +     -0.4091862538023 *
310076    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H14 = 0.03098188354318 * S_AcceptedCmpTotal + -0.04737735825642 * S_Frq 
+ 0.30967861276694 * S_Income + -0.03786683388502 * S_Mnt + 0.25532115520236 * S_MntGoldProds 
+ 0.3965117290354 * S_MntMeatProducts + 0.36188945634536 * S_MntWines + -0.24664355133344 * 
S_NumDistPurchases + 0.15627885374544 * S_RFMstat + -0.10763737759383 * S_RMntFrq + 
-0.4091862538023 * S_Recency ;
310077    +   H15  =     0.27467896926965 * S_AcceptedCmpTotal  +    -1.33897347254907 *
310078    +        S_Frq  +    -0.08574739739253 * S_Income  +    -0.68536026344277 *
310079    +        S_Mnt  +     0.08729572232071 * S_MntGoldProds
310080    +          +     1.44231431118379 * S_MntMeatProducts
310081    +          +    -0.09322237385561 * S_MntWines  +      1.5568901785563 *
310082    +        S_NumDistPurchases  +     0.06237505409693 * S_RFMstat
310083    +          +    -1.04636887800306 * S_RMntFrq  +    -0.38411527089703 *
310084    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H15 = 0.27467896926965 * S_AcceptedCmpTotal + -1.33897347254907 * S_Frq 
+ -0.08574739739253 * S_Income + -0.68536026344277 * S_Mnt + 0.08729572232071 * S_MntGoldProds 
+ 1.44231431118379 * S_MntMeatProducts + -0.09322237385561 * S_MntWines + 1.5568901785563 * 
S_NumDistPurchases + 0.06237505409693 * S_RFMstat + -1.04636887800306 * S_RMntFrq + 
-0.38411527089703 * S_Recency ;
310085    +   H16  =    -0.89143353938241 * S_AcceptedCmpTotal  +     0.45211708970504 *
310086    +        S_Frq  +    -0.44897699945178 * S_Income  +    -0.32314426452158 *
310087    +        S_Mnt  +    -0.32329530597419 * S_MntGoldProds
310088    +          +    -0.44244305964257 * S_MntMeatProducts
310089    +          +    -0.04171589876809 * S_MntWines  +     0.42122451368745 *
310090    +        S_NumDistPurchases  +    -0.15802898075961 * S_RFMstat
310091    +          +    -0.40329155853226 * S_RMntFrq  +    -0.65176917675454 *
310092    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H16 = -0.89143353938241 * S_AcceptedCmpTotal + 0.45211708970504 * S_Frq 
+ -0.44897699945178 * S_Income + -0.32314426452158 * S_Mnt + -0.32329530597419 * 
S_MntGoldProds + -0.44244305964257 * S_MntMeatProducts + -0.04171589876809 * S_MntWines + 
0.42122451368745 * S_NumDistPurchases + -0.15802898075961 * S_RFMstat + -0.40329155853226 * 
S_RMntFrq + -0.65176917675454 * S_Recency ;
310093    +   H11  = H11  +     0.01448447530274 * G_Marital_Status0
310094    +          +     0.42194179998625 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.01448447530274 * G_Marital_Status0 + 0.42194179998625 * 
G_Marital_Status1 ;
310095    +   H12  = H12  +     0.12689198218881 * G_Marital_Status0
310096    +          +     0.13222809503301 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.12689198218881 * G_Marital_Status0 + 0.13222809503301 * 
G_Marital_Status1 ;
310097    +   H13  = H13  +     0.02279524261833 * G_Marital_Status0
310098    +          +     0.22562672580832 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.02279524261833 * G_Marital_Status0 + 0.22562672580832 * 
G_Marital_Status1 ;
310099    +   H14  = H14  +     1.11856448462308 * G_Marital_Status0
310100    +          +     0.27730078918446 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 1.11856448462308 * G_Marital_Status0 + 0.27730078918446 * 
G_Marital_Status1 ;
310101    +   H15  = H15  +    -0.04694745686684 * G_Marital_Status0
310102    +          +     0.25879365732348 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.04694745686684 * G_Marital_Status0 + 0.25879365732348 * 
G_Marital_Status1 ;
310103    +   H16  = H16  +    -0.22835702249634 * G_Marital_Status0
310104    +          +     0.18090765090711 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + -0.22835702249634 * G_Marital_Status0 + 0.18090765090711 * 
G_Marital_Status1 ;
310105    +   H11  =     1.23863858658783 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 1.23863858658783 + H11 ;
310106    +   H12  =    -0.12218156586843 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.12218156586843 + H12 ;
310107    +   H13  =    -1.28170837349164 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -1.28170837349164 + H13 ;
310108    +   H14  =    -2.07579206307318 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -2.07579206307318 + H14 ;
310109    +   H15  =    -0.99934113480463 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -0.99934113480463 + H15 ;
310110    +   H16  =     1.30250382782737 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = 1.30250382782737 + H16 ;
310111    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
310112    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
310113    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
310114    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
310115    +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
310116    +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
310117    +END;
MPRINT(EM_DIAGRAM):   END;
310118    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
310119    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
310120    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
310121    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
310122    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
310123    +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
310124    +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
310125    +END;
MPRINT(EM_DIAGRAM):   END;
310126    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
310127    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
310128    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
310129    +
310130    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
310131    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
310132    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
310133    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
310134    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
310135    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
310136    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
310137    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
310138    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
310139    +end;
MPRINT(EM_DIAGRAM):   end;
310140    +else do;
MPRINT(EM_DIAGRAM):   else do;
310141    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
310142    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
310143    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
310144    +   end;
MPRINT(EM_DIAGRAM):   end;
310145    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
310146    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
310147    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
310148    +   end;
MPRINT(EM_DIAGRAM):   end;
310149    +   else do;
MPRINT(EM_DIAGRAM):   else do;
310150    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
310151    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
310152    +   end;
MPRINT(EM_DIAGRAM):   end;
310153    +end;
MPRINT(EM_DIAGRAM):   end;
310154    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
310155    +   P_DepVar1  =     3.62046962800706 * H11  +      -1.860875673098 * H12
310156    +          +    -3.65105027155196 * H13  +     2.14381074770309 * H14
310157    +          +     3.35729012959095 * H15  +    -2.46245459087361 * H16 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 3.62046962800706 * H11 + -1.860875673098 * H12 + 
-3.65105027155196 * H13 + 2.14381074770309 * H14 + 3.35729012959095 * H15 + -2.46245459087361 
* H16 ;
310158    +   P_DepVar1  =    -2.50510283018473 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.50510283018473 + P_DepVar1 ;
310159    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
310160    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
310161    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
310162    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
310163    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
310164    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
310165    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
310166    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
310167    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
310168    +END;
MPRINT(EM_DIAGRAM):   END;
310169    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
310170    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
310171    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
310172    +END;
MPRINT(EM_DIAGRAM):   END;
310173    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
310174    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
310175    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
310176    +END;
MPRINT(EM_DIAGRAM):   END;
310177    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
310178    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
310179    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
310180    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
310181    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
310182    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
310183    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
310184    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
310185    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
310186    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
310187    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
310188    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
310189    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
310190    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
310191    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
310192    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
310193    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
310194    +END;
MPRINT(EM_DIAGRAM):   END;
310195    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
310196    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
310197    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
310198    +drop
310199    +H11
310200    +H12
310201    +H13
310202    +H14
310203    +H15
310204    +H16
310205    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 ;
310206    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
310207    +* Renaming variables for Neural28;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural28;
310208    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
310209    +* Renaming Posterior variables for Neural28;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural28;
310210    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
310211    +drop Neural28_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural28_P_DepVar1;
310212    +Neural28_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural28_P_DepVar1 = P_DepVar1;
310213    +drop Neural28_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural28_P_DepVar0;
310214    +Neural28_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural28_P_DepVar0 = P_DepVar0;
310215    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
310216    +* Renaming _WARN_ variable for Neural28;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural28;
310217    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
310218    +length Neural28_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural28_WARN_ $4;
310219    +drop Neural28_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural28_WARN_;
310220    +Neural28_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural28_WARN_ = _WARN_;
310221    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
310222    +* Ensmbl19: Scoring Code of model 4 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl19: Scoring Code of model 4 of 5;
310223    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
310224    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
310225    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
310226    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
310227    +* NODE: AutoNeural32;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural32;
310228    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
310229    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
310230    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
310231    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
310232    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
310233    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
310234    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
310235    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
310236    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
310237    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
310238    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
310239    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
310240    +LENGTH _WARN_ $4
310241    +      F_DepVar  $ 12
310242    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
310243    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
310244    +
310245    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
310246    +
310247    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
310248    +
310249    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
310250    +
310251    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
310252    +
310253    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
310254    +
310255    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
310256    +
310257    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
310258    +
310259    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
310260    +
310261    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
310262    +
310263    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
310264    +
310265    +      label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
310266    +
310267    +      label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
310268    +
310269    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
310270    +
310271    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
310272    +
310273    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
310274    +
310275    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
310276    +
310277    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
310278    +
310279    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
310280    +
310281    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
310282    +
310283    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
310284    +
310285    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
310286    +
310287    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
310288    +
310289    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
310290    +
310291    +*** Generate dummy variables for G_Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for G_Marital_Status ;
310292    +drop G_Marital_Status0 G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   drop G_Marital_Status0 G_Marital_Status1 ;
310293    +if missing( G_Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( G_Marital_Status ) then do;
310294    +   G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
310295    +   G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
310296    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
310297    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
310298    +end;
MPRINT(EM_DIAGRAM):   end;
310299    +else do;
MPRINT(EM_DIAGRAM):   else do;
310300    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
310301    +   _dm12 = put( G_Marital_Status , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( G_Marital_Status , BEST12. );
310302    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
310303    +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
310304    +      G_Marital_Status0 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = -1;
310305    +      G_Marital_Status1 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = -1;
310306    +   end;
MPRINT(EM_DIAGRAM):   end;
310307    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
310308    +      G_Marital_Status0 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 1;
310309    +      G_Marital_Status1 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 0;
310310    +   end;
MPRINT(EM_DIAGRAM):   end;
310311    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
310312    +      G_Marital_Status0 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 0;
310313    +      G_Marital_Status1 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 1;
310314    +   end;
MPRINT(EM_DIAGRAM):   end;
310315    +   else do;
MPRINT(EM_DIAGRAM):   else do;
310316    +      G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
310317    +      G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
310318    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
310319    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
310320    +   end;
MPRINT(EM_DIAGRAM):   end;
310321    +end;
MPRINT(EM_DIAGRAM):   end;
310322    +
310323    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
310324    +*** Checking missing input Interval
310325    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
310326    +
310327    +IF NMISS(
310328    +   AcceptedCmpTotal ,
310329    +   Frq ,
310330    +   Income ,
310331    +   Mnt ,
310332    +   MntGoldProds ,
310333    +   MntMeatProducts ,
310334    +   MntWines ,
310335    +   NumDistPurchases ,
310336    +   RFMstat ,
310337    +   RMntFrq ,
310338    +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntGoldProds , 
MntMeatProducts , MntWines , NumDistPurchases , RFMstat , RMntFrq , Recency ) THEN DO;
310339    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
310340    +
310341    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
310342    +END;
MPRINT(EM_DIAGRAM):   END;
310343    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
310344    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
310345    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
310346    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
310347    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
310348    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
310349    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
310350    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
310351    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
310352    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
310353    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
310354    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
310355    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
310356    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
310357    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
310358    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
310359    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
310360    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
310361    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
310362    +END;
MPRINT(EM_DIAGRAM):   END;
310363    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
310364    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
310365    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
310366    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
310367    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
310368    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
310369    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
310370    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
310371    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
310372    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
310373    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
310374    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
310375    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
310376    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
310377    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
310378    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
310379    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
310380    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
310381    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
310382    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
310383    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
310384    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
310385    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
310386    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
310387    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
310388    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
310389    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
310390    +END;
MPRINT(EM_DIAGRAM):   END;
310391    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
310392    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
310393    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
310394    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
310395    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
310396    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
310397    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
310398    +   H1x1_1  =    -0.38956319781905 * S_AcceptedCmpTotal
310399    +          +    -0.08624585416733 * S_Frq  +     0.14990044515556 * S_Income
310400    +          +     1.26905422062144 * S_Mnt  +    -0.05830961868093 *
310401    +        S_MntGoldProds  +    -0.45655804707903 * S_MntMeatProducts
310402    +          +    -0.29008121030195 * S_MntWines  +    -0.52580257849932 *
310403    +        S_NumDistPurchases  +     -0.1481404693781 * S_RFMstat
310404    +          +    -0.49319351834455 * S_RMntFrq  +     0.54249594661515 *
310405    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.38956319781905 * S_AcceptedCmpTotal + -0.08624585416733 * 
S_Frq + 0.14990044515556 * S_Income + 1.26905422062144 * S_Mnt + -0.05830961868093 * 
S_MntGoldProds + -0.45655804707903 * S_MntMeatProducts + -0.29008121030195 * S_MntWines + 
-0.52580257849932 * S_NumDistPurchases + -0.1481404693781 * S_RFMstat + -0.49319351834455 * 
S_RMntFrq + 0.54249594661515 * S_Recency ;
310406    +   H1x1_2  =     0.38779821527892 * S_AcceptedCmpTotal
310407    +          +    -1.22315175769362 * S_Frq  +      1.1802985172513 * S_Income
310408    +          +     2.08508390361851 * S_Mnt  +     0.42839460332296 *
310409    +        S_MntGoldProds  +      0.9001009517595 * S_MntMeatProducts
310410    +          +     0.43882453107711 * S_MntWines  +    -0.77730415774439 *
310411    +        S_NumDistPurchases  +    -0.48791819347803 * S_RFMstat
310412    +          +    -0.74366268198551 * S_RMntFrq  +    -0.17482075484114 *
310413    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.38779821527892 * S_AcceptedCmpTotal + -1.22315175769362 * 
S_Frq + 1.1802985172513 * S_Income + 2.08508390361851 * S_Mnt + 0.42839460332296 * 
S_MntGoldProds + 0.9001009517595 * S_MntMeatProducts + 0.43882453107711 * S_MntWines + 
-0.77730415774439 * S_NumDistPurchases + -0.48791819347803 * S_RFMstat + -0.74366268198551 * 
S_RMntFrq + -0.17482075484114 * S_Recency ;
310414    +   H1x1_3  =    -0.22134549179782 * S_AcceptedCmpTotal
310415    +          +    -0.06178114920397 * S_Frq  +     -1.4524474173679 * S_Income
310416    +          +    -7.85805111281271 * S_Mnt  +    -0.25260256377303 *
310417    +        S_MntGoldProds  +     2.24650170262612 * S_MntMeatProducts
310418    +          +    -0.28495082016886 * S_MntWines  +     2.83659961242127 *
310419    +        S_NumDistPurchases  +     0.42067169774523 * S_RFMstat
310420    +          +     1.71392925516862 * S_RMntFrq  +    -0.09478915012781 *
310421    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.22134549179782 * S_AcceptedCmpTotal + -0.06178114920397 * 
S_Frq + -1.4524474173679 * S_Income + -7.85805111281271 * S_Mnt + -0.25260256377303 * 
S_MntGoldProds + 2.24650170262612 * S_MntMeatProducts + -0.28495082016886 * S_MntWines + 
2.83659961242127 * S_NumDistPurchases + 0.42067169774523 * S_RFMstat + 1.71392925516862 * 
S_RMntFrq + -0.09478915012781 * S_Recency ;
310422    +   H1x1_1  = H1x1_1  +    -0.22060541309937 * G_Marital_Status0
310423    +          +    -0.46692703876881 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.22060541309937 * G_Marital_Status0 + 
-0.46692703876881 * G_Marital_Status1 ;
310424    +   H1x1_2  = H1x1_2  +     0.47416822018188 * G_Marital_Status0
310425    +          +     -2.1058284684647 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.47416822018188 * G_Marital_Status0 + 
-2.1058284684647 * G_Marital_Status1 ;
310426    +   H1x1_3  = H1x1_3  +    -0.44803855270897 * G_Marital_Status0
310427    +          +     1.41026185304551 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.44803855270897 * G_Marital_Status0 + 
1.41026185304551 * G_Marital_Status1 ;
310428    +   H1x1_1  =     1.63085271667721 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.63085271667721 + H1x1_1 ;
310429    +   H1x1_2  =     0.28277859846654 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.28277859846654 + H1x1_2 ;
310430    +   H1x1_3  =     -1.8890871578635 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.8890871578635 + H1x1_3 ;
310431    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
310432    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
310433    +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
310434    +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
310435    +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
310436    +END;
MPRINT(EM_DIAGRAM):   END;
310437    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
310438    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
310439    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
310440    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
310441    +END;
MPRINT(EM_DIAGRAM):   END;
310442    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
310443    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
310444    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
310445    +
310446    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
310447    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
310448    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
310449    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
310450    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
310451    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
310452    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
310453    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
310454    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
310455    +end;
MPRINT(EM_DIAGRAM):   end;
310456    +else do;
MPRINT(EM_DIAGRAM):   else do;
310457    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
310458    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
310459    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
310460    +   end;
MPRINT(EM_DIAGRAM):   end;
310461    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
310462    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
310463    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
310464    +   end;
MPRINT(EM_DIAGRAM):   end;
310465    +   else do;
MPRINT(EM_DIAGRAM):   else do;
310466    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
310467    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
310468    +   end;
MPRINT(EM_DIAGRAM):   end;
310469    +end;
MPRINT(EM_DIAGRAM):   end;
310470    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
310471    +   P_DepVar1  =    -23.6822744769009 * H1x1_1  +     16.0380566008578 * H1x1_2
310472    +          +     15.3446320724554 * H1x1_3 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -23.6822744769009 * H1x1_1 + 16.0380566008578 * H1x1_2 + 
15.3446320724554 * H1x1_3 ;
310473    +   P_DepVar1  =     0.67225691696469 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.67225691696469 + P_DepVar1 ;
310474    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
310475    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
310476    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
310477    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
310478    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
310479    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
310480    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
310481    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
310482    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
310483    +END;
MPRINT(EM_DIAGRAM):   END;
310484    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
310485    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
310486    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
310487    +END;
MPRINT(EM_DIAGRAM):   END;
310488    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
310489    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
310490    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
310491    +END;
MPRINT(EM_DIAGRAM):   END;
310492    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
310493    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
310494    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
310495    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
310496    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
310497    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
310498    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
310499    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
310500    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
310501    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
310502    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
310503    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
310504    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
310505    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
310506    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
310507    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
310508    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
310509    +END;
MPRINT(EM_DIAGRAM):   END;
310510    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
310511    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
310512    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
310513    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
310514    +* Renaming variables for AutoNeural32;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural32;
310515    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
310516    +* Renaming Posterior variables for AutoNeural32;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural32;
310517    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
310518    +drop AutoNeural32_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural32_P_DepVar1;
310519    +AutoNeural32_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural32_P_DepVar1 = P_DepVar1;
310520    +drop AutoNeural32_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural32_P_DepVar0;
310521    +AutoNeural32_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural32_P_DepVar0 = P_DepVar0;
310522    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
310523    +* Renaming _WARN_ variable for AutoNeural32;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural32;
310524    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
310525    +length AutoNeural32_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural32_WARN_ $4;
310526    +drop AutoNeural32_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural32_WARN_;
310527    +AutoNeural32_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural32_WARN_ = _WARN_;
310528    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
310529    +* Ensmbl19: Scoring Code of model 5 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl19: Scoring Code of model 5 of 5;
310530    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
310531    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
310532    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
310533    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
310534    +* NODE: AutoNeural29;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural29;
310535    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
310536    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
310537    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
310538    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
310539    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
310540    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
310541    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
310542    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
310543    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
310544    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
310545    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
310546    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
310547    +LENGTH _WARN_ $4
310548    +      F_DepVar  $ 12
310549    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
310550    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
310551    +
310552    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
310553    +
310554    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
310555    +
310556    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
310557    +
310558    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
310559    +
310560    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
310561    +
310562    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
310563    +
310564    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
310565    +
310566    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
310567    +
310568    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
310569    +
310570    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
310571    +
310572    +      label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
310573    +
310574    +      label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
310575    +
310576    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
310577    +
310578    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
310579    +
310580    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
310581    +
310582    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
310583    +
310584    +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
310585    +
310586    +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
310587    +
310588    +      label H1x1_7 = 'Hidden: H1x1_=7' ;
MPRINT(EM_DIAGRAM):   label H1x1_7 = 'Hidden: H1x1_=7' ;
310589    +
310590    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
310591    +
310592    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
310593    +
310594    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
310595    +
310596    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
310597    +
310598    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
310599    +
310600    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
310601    +
310602    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
310603    +
310604    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
310605    +
310606    +*** Generate dummy variables for G_Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for G_Marital_Status ;
310607    +drop G_Marital_Status0 G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   drop G_Marital_Status0 G_Marital_Status1 ;
310608    +if missing( G_Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( G_Marital_Status ) then do;
310609    +   G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
310610    +   G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
310611    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
310612    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
310613    +end;
MPRINT(EM_DIAGRAM):   end;
310614    +else do;
MPRINT(EM_DIAGRAM):   else do;
310615    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
310616    +   _dm12 = put( G_Marital_Status , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( G_Marital_Status , BEST12. );
310617    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
310618    +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
310619    +      G_Marital_Status0 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = -1;
310620    +      G_Marital_Status1 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = -1;
310621    +   end;
MPRINT(EM_DIAGRAM):   end;
310622    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
310623    +      G_Marital_Status0 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 1;
310624    +      G_Marital_Status1 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 0;
310625    +   end;
MPRINT(EM_DIAGRAM):   end;
310626    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
310627    +      G_Marital_Status0 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 0;
310628    +      G_Marital_Status1 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 1;
310629    +   end;
MPRINT(EM_DIAGRAM):   end;
310630    +   else do;
MPRINT(EM_DIAGRAM):   else do;
310631    +      G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
310632    +      G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
310633    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
310634    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
310635    +   end;
MPRINT(EM_DIAGRAM):   end;
310636    +end;
MPRINT(EM_DIAGRAM):   end;
310637    +
310638    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
310639    +*** Checking missing input Interval
310640    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
310641    +
310642    +IF NMISS(
310643    +   AcceptedCmpTotal ,
310644    +   Frq ,
310645    +   Income ,
310646    +   Mnt ,
310647    +   MntGoldProds ,
310648    +   MntMeatProducts ,
310649    +   MntWines ,
310650    +   NumDistPurchases ,
310651    +   RFMstat ,
310652    +   RMntFrq ,
310653    +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntGoldProds , 
MntMeatProducts , MntWines , NumDistPurchases , RFMstat , RMntFrq , Recency ) THEN DO;
310654    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
310655    +
310656    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
310657    +END;
MPRINT(EM_DIAGRAM):   END;
310658    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
310659    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
310660    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
310661    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
310662    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
310663    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
310664    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
310665    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
310666    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
310667    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
310668    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
310669    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
310670    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
310671    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
310672    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
310673    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
310674    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
310675    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
310676    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
310677    +END;
MPRINT(EM_DIAGRAM):   END;
310678    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
310679    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
310680    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
310681    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
310682    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
310683    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
310684    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
310685    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
310686    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
310687    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
310688    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
310689    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
310690    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
310691    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
310692    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
310693    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
310694    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
310695    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
310696    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
310697    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
310698    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
310699    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
310700    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
310701    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
310702    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
310703    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
310704    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
310705    +END;
MPRINT(EM_DIAGRAM):   END;
310706    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
310707    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
310708    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
310709    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
310710    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
310711    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
310712    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
310713    +   H1x1_1  =    -1.99300782242957 * S_AcceptedCmpTotal
310714    +          +     2.12004224248217 * S_Frq  +     3.86828667262904 * S_Income
310715    +          +     2.77648198770608 * S_Mnt  +    -2.27326773671069 *
310716    +        S_MntGoldProds  +    -0.27399687657599 * S_MntMeatProducts
310717    +          +     2.26137957922507 * S_MntWines  +     0.14135280902221 *
310718    +        S_NumDistPurchases  +     1.12048709605553 * S_RFMstat
310719    +          +     0.99315934409036 * S_RMntFrq  +     1.21818826467727 *
310720    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.99300782242957 * S_AcceptedCmpTotal + 2.12004224248217 * 
S_Frq + 3.86828667262904 * S_Income + 2.77648198770608 * S_Mnt + -2.27326773671069 * 
S_MntGoldProds + -0.27399687657599 * S_MntMeatProducts + 2.26137957922507 * S_MntWines + 
0.14135280902221 * S_NumDistPurchases + 1.12048709605553 * S_RFMstat + 0.99315934409036 * 
S_RMntFrq + 1.21818826467727 * S_Recency ;
310721    +   H1x1_2  =    -0.46080527925139 * S_AcceptedCmpTotal
310722    +          +     1.22986184660358 * S_Frq  +     1.25416218398238 * S_Income
310723    +          +      0.7698101051046 * S_Mnt  +    -0.24851515302824 *
310724    +        S_MntGoldProds  +    -1.02206883329868 * S_MntMeatProducts
310725    +          +    -2.60436726665032 * S_MntWines  +     1.42856046102253 *
310726    +        S_NumDistPurchases  +     0.23036228891547 * S_RFMstat
310727    +          +    -0.44196680894425 * S_RMntFrq  +     1.47726327092789 *
310728    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.46080527925139 * S_AcceptedCmpTotal + 1.22986184660358 * 
S_Frq + 1.25416218398238 * S_Income + 0.7698101051046 * S_Mnt + -0.24851515302824 * 
S_MntGoldProds + -1.02206883329868 * S_MntMeatProducts + -2.60436726665032 * S_MntWines + 
1.42856046102253 * S_NumDistPurchases + 0.23036228891547 * S_RFMstat + -0.44196680894425 * 
S_RMntFrq + 1.47726327092789 * S_Recency ;
310729    +   H1x1_3  =    -2.72041257472943 * S_AcceptedCmpTotal
310730    +          +     2.18007007875237 * S_Frq  +    -3.41389425682735 * S_Income
310731    +          +     1.22111404132155 * S_Mnt  +     0.13965132551243 *
310732    +        S_MntGoldProds  +    -1.44679609979492 * S_MntMeatProducts
310733    +          +     1.32449625366546 * S_MntWines  +     0.71474658567846 *
310734    +        S_NumDistPurchases  +    -1.11377169665392 * S_RFMstat
310735    +          +    -0.23272811318878 * S_RMntFrq  +     3.38352057173892 *
310736    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -2.72041257472943 * S_AcceptedCmpTotal + 2.18007007875237 * 
S_Frq + -3.41389425682735 * S_Income + 1.22111404132155 * S_Mnt + 0.13965132551243 * 
S_MntGoldProds + -1.44679609979492 * S_MntMeatProducts + 1.32449625366546 * S_MntWines + 
0.71474658567846 * S_NumDistPurchases + -1.11377169665392 * S_RFMstat + -0.23272811318878 * 
S_RMntFrq + 3.38352057173892 * S_Recency ;
310737    +   H1x1_4  =    -0.53914082027029 * S_AcceptedCmpTotal
310738    +          +     3.52541527909413 * S_Frq  +     0.47386294116539 * S_Income
310739    +          +     1.74856835081997 * S_Mnt  +    -0.31608698854628 *
310740    +        S_MntGoldProds  +    -4.08585161438784 * S_MntMeatProducts
310741    +          +     1.11934057687184 * S_MntWines  +    -4.23069217087257 *
310742    +        S_NumDistPurchases  +    -0.45058242594518 * S_RFMstat
310743    +          +     2.24526854282726 * S_RMntFrq  +     0.46541621801996 *
310744    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.53914082027029 * S_AcceptedCmpTotal + 3.52541527909413 * 
S_Frq + 0.47386294116539 * S_Income + 1.74856835081997 * S_Mnt + -0.31608698854628 * 
S_MntGoldProds + -4.08585161438784 * S_MntMeatProducts + 1.11934057687184 * S_MntWines + 
-4.23069217087257 * S_NumDistPurchases + -0.45058242594518 * S_RFMstat + 2.24526854282726 * 
S_RMntFrq + 0.46541621801996 * S_Recency ;
310745    +   H1x1_5  =     0.16652182962256 * S_AcceptedCmpTotal
310746    +          +    -2.34082830868767 * S_Frq  +     0.06017749299853 * S_Income
310747    +          +    -3.61434433922311 * S_Mnt  +    -0.15794212009402 *
310748    +        S_MntGoldProds  +     5.32833368617196 * S_MntMeatProducts
310749    +          +     1.70496933504273 * S_MntWines  +     2.85445845094536 *
310750    +        S_NumDistPurchases  +     1.88219523605925 * S_RFMstat
310751    +          +     0.75869801637089 * S_RMntFrq  +     0.08064297106734 *
310752    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.16652182962256 * S_AcceptedCmpTotal + -2.34082830868767 * 
S_Frq + 0.06017749299853 * S_Income + -3.61434433922311 * S_Mnt + -0.15794212009402 * 
S_MntGoldProds + 5.32833368617196 * S_MntMeatProducts + 1.70496933504273 * S_MntWines + 
2.85445845094536 * S_NumDistPurchases + 1.88219523605925 * S_RFMstat + 0.75869801637089 * 
S_RMntFrq + 0.08064297106734 * S_Recency ;
310753    +   H1x1_6  =     1.97422379745385 * S_AcceptedCmpTotal
310754    +          +    -0.18806921540808 * S_Frq  +    -1.45393613178942 * S_Income
310755    +          +    -1.71382589206496 * S_Mnt  +    -0.86398659373382 *
310756    +        S_MntGoldProds  +    -0.55933907393534 * S_MntMeatProducts
310757    +          +    -2.04088833388184 * S_MntWines  +     1.33825297425801 *
310758    +        S_NumDistPurchases  +    -1.84916943620006 * S_RFMstat
310759    +          +     1.10268410707441 * S_RMntFrq  +    -3.24538880603902 *
310760    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 1.97422379745385 * S_AcceptedCmpTotal + -0.18806921540808 * 
S_Frq + -1.45393613178942 * S_Income + -1.71382589206496 * S_Mnt + -0.86398659373382 * 
S_MntGoldProds + -0.55933907393534 * S_MntMeatProducts + -2.04088833388184 * S_MntWines + 
1.33825297425801 * S_NumDistPurchases + -1.84916943620006 * S_RFMstat + 1.10268410707441 * 
S_RMntFrq + -3.24538880603902 * S_Recency ;
310761    +   H1x1_7  =    -0.04334303258083 * S_AcceptedCmpTotal
310762    +          +      1.2911623736286 * S_Frq  +    -2.28992194197276 * S_Income
310763    +          +    -0.46322849796029 * S_Mnt  +    -0.61987255353555 *
310764    +        S_MntGoldProds  +    -0.70448430141235 * S_MntMeatProducts
310765    +          +    -2.07867791807129 * S_MntWines  +    -1.36577325340948 *
310766    +        S_NumDistPurchases  +    -1.20867908080733 * S_RFMstat
310767    +          +     1.13377434281641 * S_RMntFrq  +     0.49995615625441 *
310768    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_7 = -0.04334303258083 * S_AcceptedCmpTotal + 1.2911623736286 * 
S_Frq + -2.28992194197276 * S_Income + -0.46322849796029 * S_Mnt + -0.61987255353555 * 
S_MntGoldProds + -0.70448430141235 * S_MntMeatProducts + -2.07867791807129 * S_MntWines + 
-1.36577325340948 * S_NumDistPurchases + -1.20867908080733 * S_RFMstat + 1.13377434281641 * 
S_RMntFrq + 0.49995615625441 * S_Recency ;
310769    +   H1x1_1  = H1x1_1  +     -1.7035629341514 * G_Marital_Status0
310770    +          +    -0.88839271772433 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -1.7035629341514 * G_Marital_Status0 + 
-0.88839271772433 * G_Marital_Status1 ;
310771    +   H1x1_2  = H1x1_2  +     0.47234648810132 * G_Marital_Status0
310772    +          +     0.49781009278812 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.47234648810132 * G_Marital_Status0 + 
0.49781009278812 * G_Marital_Status1 ;
310773    +   H1x1_3  = H1x1_3  +     0.04803102756566 * G_Marital_Status0
310774    +          +     3.45859276392218 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.04803102756566 * G_Marital_Status0 + 
3.45859276392218 * G_Marital_Status1 ;
310775    +   H1x1_4  = H1x1_4  +    -0.00794915276466 * G_Marital_Status0
310776    +          +    -0.88877093101914 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.00794915276466 * G_Marital_Status0 + 
-0.88877093101914 * G_Marital_Status1 ;
310777    +   H1x1_5  = H1x1_5  +     0.17344052282277 * G_Marital_Status0
310778    +          +     0.07512544812374 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 0.17344052282277 * G_Marital_Status0 + 
0.07512544812374 * G_Marital_Status1 ;
310779    +   H1x1_6  = H1x1_6  +     0.69797087079749 * G_Marital_Status0
310780    +          +     1.99160337429042 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + 0.69797087079749 * G_Marital_Status0 + 
1.99160337429042 * G_Marital_Status1 ;
310781    +   H1x1_7  = H1x1_7  +    -1.90814013352903 * G_Marital_Status0
310782    +          +    -0.58260071621307 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_7 = H1x1_7 + -1.90814013352903 * G_Marital_Status0 + 
-0.58260071621307 * G_Marital_Status1 ;
310783    +   H1x1_1  =      0.4509613443627 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.4509613443627 + H1x1_1 ;
310784    +   H1x1_2  =     3.28102437302443 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 3.28102437302443 + H1x1_2 ;
310785    +   H1x1_3  =    -0.59732076258377 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.59732076258377 + H1x1_3 ;
310786    +   H1x1_4  =     3.04302174126598 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 3.04302174126598 + H1x1_4 ;
310787    +   H1x1_5  =     4.11173403634453 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 4.11173403634453 + H1x1_5 ;
310788    +   H1x1_6  =     4.51964221881808 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 4.51964221881808 + H1x1_6 ;
310789    +   H1x1_7  =     7.27061205819069 + H1x1_7 ;
MPRINT(EM_DIAGRAM):   H1x1_7 = 7.27061205819069 + H1x1_7 ;
310790    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
310791    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
310792    +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
310793    +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
310794    +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
310795    +   H1x1_4  = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
310796    +   H1x1_5  = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_5 = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
310797    +   H1x1_6  = 1.0 / (1.0 + EXP(MIN( - H1x1_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_6 = 1.0 / (1.0 + EXP(MIN( - H1x1_6 , _EXP_BAR)));
310798    +   H1x1_7  = 1.0 / (1.0 + EXP(MIN( - H1x1_7 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_7 = 1.0 / (1.0 + EXP(MIN( - H1x1_7 , _EXP_BAR)));
310799    +END;
MPRINT(EM_DIAGRAM):   END;
310800    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
310801    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
310802    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
310803    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
310804    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
310805    +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
310806    +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
310807    +   H1x1_7  = .;
MPRINT(EM_DIAGRAM):   H1x1_7 = .;
310808    +END;
MPRINT(EM_DIAGRAM):   END;
310809    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
310810    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
310811    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
310812    +
310813    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
310814    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
310815    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
310816    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
310817    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
310818    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
310819    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
310820    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
310821    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
310822    +end;
MPRINT(EM_DIAGRAM):   end;
310823    +else do;
MPRINT(EM_DIAGRAM):   else do;
310824    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
310825    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
310826    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
310827    +   end;
MPRINT(EM_DIAGRAM):   end;
310828    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
310829    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
310830    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
310831    +   end;
MPRINT(EM_DIAGRAM):   end;
310832    +   else do;
MPRINT(EM_DIAGRAM):   else do;
310833    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
310834    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
310835    +   end;
MPRINT(EM_DIAGRAM):   end;
310836    +end;
MPRINT(EM_DIAGRAM):   end;
310837    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
310838    +   P_DepVar1  =    -3.49358340904307 * H1x1_1  +    -5.28251662728987 * H1x1_2
310839    +          +    -4.11876057817011 * H1x1_3  +    -7.73777326204979 * H1x1_4
310840    +          +     12.8932497890238 * H1x1_5  +     6.88694832857203 * H1x1_6
310841    +          +    -8.47048075234366 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.49358340904307 * H1x1_1 + -5.28251662728987 * H1x1_2 + 
-4.11876057817011 * H1x1_3 + -7.73777326204979 * H1x1_4 + 12.8932497890238 * H1x1_5 + 
6.88694832857203 * H1x1_6 + -8.47048075234366 * H1x1_7 ;
310842    +   P_DepVar1  =     1.65092540834245 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.65092540834245 + P_DepVar1 ;
310843    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
310844    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
310845    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
310846    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
310847    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
310848    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
310849    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
310850    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
310851    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
310852    +END;
MPRINT(EM_DIAGRAM):   END;
310853    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
310854    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
310855    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
310856    +END;
MPRINT(EM_DIAGRAM):   END;
310857    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
310858    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
310859    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
310860    +END;
MPRINT(EM_DIAGRAM):   END;
310861    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
310862    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
310863    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
310864    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
310865    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
310866    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
310867    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
310868    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
310869    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
310870    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
310871    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
310872    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
310873    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
310874    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
310875    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
310876    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
310877    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
310878    +END;
MPRINT(EM_DIAGRAM):   END;
310879    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
310880    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
310881    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
310882    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
310883    +* Renaming variables for AutoNeural29;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural29;
310884    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
310885    +* Renaming Posterior variables for AutoNeural29;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural29;
310886    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
310887    +drop AutoNeural29_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural29_P_DepVar1;
310888    +AutoNeural29_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural29_P_DepVar1 = P_DepVar1;
310889    +drop AutoNeural29_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural29_P_DepVar0;
310890    +AutoNeural29_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural29_P_DepVar0 = P_DepVar0;
310891    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
310892    +* Renaming _WARN_ variable for AutoNeural29;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural29;
310893    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
310894    +length AutoNeural29_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural29_WARN_ $4;
310895    +drop AutoNeural29_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural29_WARN_;
310896    +AutoNeural29_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural29_WARN_ = _WARN_;
310897    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
310898    +* Ensmbl19: Average Posteriors of 5 models;
MPRINT(EM_DIAGRAM):   * Ensmbl19: Average Posteriors of 5 models;
310899    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
310900    +P_DepVar1 = (
310901    +AutoNeural33_P_DepVar1 +
310902    +AutoNeural28_P_DepVar1 +
310903    +Neural28_P_DepVar1 +
310904    +AutoNeural32_P_DepVar1 +
310905    +AutoNeural29_P_DepVar1
310906    +)/5;
MPRINT(EM_DIAGRAM):   P_DepVar1 = ( AutoNeural33_P_DepVar1 + AutoNeural28_P_DepVar1 + 
Neural28_P_DepVar1 + AutoNeural32_P_DepVar1 + AutoNeural29_P_DepVar1 )/5;
310907    +P_DepVar0 = (
310908    +AutoNeural33_P_DepVar0 +
310909    +AutoNeural28_P_DepVar0 +
310910    +Neural28_P_DepVar0 +
310911    +AutoNeural32_P_DepVar0 +
310912    +AutoNeural29_P_DepVar0
310913    +)/5;
MPRINT(EM_DIAGRAM):   P_DepVar0 = ( AutoNeural33_P_DepVar0 + AutoNeural28_P_DepVar0 + 
Neural28_P_DepVar0 + AutoNeural32_P_DepVar0 + AutoNeural29_P_DepVar0 )/5;
310914    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
310915    +* Ensmbl19: Computing Classification Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl19: Computing Classification Vars;
310916    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
310917    +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set. 
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the 
         length of a character variable.
310918    +label I_DepVar = 'Into: DepVar';
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar';
310919    +length _format $200;
MPRINT(EM_DIAGRAM):   length _format $200;
310920    +drop _format;
MPRINT(EM_DIAGRAM):   drop _format;
310921    +_format= ' ';
MPRINT(EM_DIAGRAM):   _format= ' ';
310922    +_p_= 0;
MPRINT(EM_DIAGRAM):   _p_= 0;
310923    +drop _p_;
MPRINT(EM_DIAGRAM):   drop _p_;
310924    +if P_DepVar1 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _p_ then do;
310925    +_p_= P_DepVar1;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar1;
310926    +_format= '1';
MPRINT(EM_DIAGRAM):   _format= '1';
310927    +end;
MPRINT(EM_DIAGRAM):   end;
310928    +if P_DepVar0 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _p_ then do;
310929    +_p_= P_DepVar0;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar0;
310930    +_format= '0';
MPRINT(EM_DIAGRAM):   _format= '0';
310931    +end;
MPRINT(EM_DIAGRAM):   end;
310932    +%DMNORMCP(_format,I_DepVar);
MPRINT(DMNORMCP):   I_DepVar=dmnorm(_format,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
310933    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
310934    +* Ensmbl19: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   * Ensmbl19: Producing Unformatted variable;
310935    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
310936    +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
310937    +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
310938    +else
310939    +if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
310940    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
310941    +* Ensmbl19: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl19: Computing _WARN_ Variable;
310942    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
310943    +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
310944    +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
310945    +_WARN_ = '';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
310946    +if index(AUTONEURAL33_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
310946   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL33_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
310947    +if index(AUTONEURAL33_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
310947   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL33_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
310948    +if index(AUTONEURAL33_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
310948   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL33_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
310949    +if index(AUTONEURAL33_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
310949   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL33_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
310950    +if index(AUTONEURAL28_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
310950   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL28_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
310951    +if index(AUTONEURAL28_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
310951   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL28_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
310952    +if index(AUTONEURAL28_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
310952   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL28_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
310953    +if index(AUTONEURAL28_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
310953   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL28_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
310954    +if index(NEURAL28_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
310954   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL28_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
310955    +if index(NEURAL28_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
310955   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL28_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
310956    +if index(NEURAL28_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
310956   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL28_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
310957    +if index(NEURAL28_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
310957   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL28_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
310958    +if index(AUTONEURAL32_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
310958   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL32_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
310959    +if index(AUTONEURAL32_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
310959   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL32_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
310960    +if index(AUTONEURAL32_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
310960   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL32_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
310961    +if index(AUTONEURAL32_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
310961   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL32_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
310962    +if index(AUTONEURAL29_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
310962   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL29_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
310963    +if index(AUTONEURAL29_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
310963   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL29_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
310964    +if index(AUTONEURAL29_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
310964   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL29_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
310965    +if index(AUTONEURAL29_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
310965   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL29_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
310966    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
310967    +* Ensmbl19: Computing Residual Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl19: Computing Residual Vars;
310968    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
310969    +if
310970    +F_DepVar NE '1'
310971    +AND F_DepVar NE '0'
310972    +then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE '1' AND F_DepVar NE '0' then do;
310973    +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
310974    +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
310975    +end;
MPRINT(EM_DIAGRAM):   end;
310976    +else do;
MPRINT(EM_DIAGRAM):   else do;
310977    +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
310978    +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
310979    +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
310980    +WHEN('1') R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN('1') R_DepVar1 = R_DepVar1 +1;
310981    +WHEN('0') R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN('0') R_DepVar0 = R_DepVar0 +1;
310982    +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
310983    +END;
MPRINT(EM_DIAGRAM):   END;
310984    +END;
MPRINT(EM_DIAGRAM):   END;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
310985     run;

NOTE: DATA STEP view saved on file EMWS8.ENSMBL19_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.AUTONEURAL33_VALIDATE.VIEW used (Total process time):
      real time           0.10 seconds
      cpu time            0.11 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.12 seconds
      cpu time            0.12 seconds
      

MPRINT(EM_DIAGRAM):   quit;
310986     quit;
310987     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
MPRINT(EM_DIAGRAM):   
MPRINT(CALFITSTATSNOMINAL):   data _tmpTrainFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_ 
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.Ensmbl19_TRAIN end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_ 
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Train: Target Variable" _NOBS_= "Train: Sum of 
Frequencies" _SSE_= "Train: Sum of Squared Errors" _MAX_= "Train: Maximum Absolute Error" 
_DIV_ = "Train: Divisor for ASE" _WRONG_= "Train: Number of Wrong Classifications" _DISF_= 
"Train: Frequency of Classified Cases" _MISC_= "Train: Misclassification Rate" _ASE_ = "Train: 
Average Squared Error" _RASE_ = "Train: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_ 
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl19_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set _tmpTrainFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   
MPRINT(CALFITSTATSNOMINAL):   data _tmpValidFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_ 
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.Ensmbl19_VALIDATE end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_ 
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Valid: Target Variable" _NOBS_= "Valid: Sum of 
Frequencies" _SSE_= "Valid: Sum of Squared Errors" _MAX_= "Valid: Maximum Absolute Error" 
_DIV_ = "Valid: Divisor for ASE" _WRONG_= "Valid: Number of Wrong Classifications" _DISF_= 
"Valid: Frequency of Classified Cases" _MISC_= "Valid: Misclassification Rate" _ASE_ = "Valid: 
Average Squared Error" _RASE_ = "Valid: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_ 
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _tmpdata_(DROP= TARGET);
MPRINT(EM_DIAGRAM):   set _tmpValidFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _tmpdata_;
MPRINT(EM_DIAGRAM):   set _tmpdata_;
MPRINT(EM_DIAGRAM):   rename _ASE_=_VASE_;
MPRINT(EM_DIAGRAM):   rename _DIV_=_VDIV_;
MPRINT(EM_DIAGRAM):   rename _MAX_=_VMAX_;
MPRINT(EM_DIAGRAM):   rename _NOBS_=_VNOBS_;
MPRINT(EM_DIAGRAM):   rename _RASE_=_VRASE_;
MPRINT(EM_DIAGRAM):   rename _SSE_=_VSSE_;
MPRINT(EM_DIAGRAM):   rename _DISF_=_VDISF_;
MPRINT(EM_DIAGRAM):   rename _MISC_=_VMISC_;
MPRINT(EM_DIAGRAM):   rename _WRONG_=_VWRONG_;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl19_EMOUTFIT;
MPRINT(EM_DIAGRAM):   merge EMWS8.Ensmbl19_EMOUTFIT _tmpdata_;
MPRINT(EM_DIAGRAM):   run;
311047     filename _pref
311047   ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural33\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural33\EMPUBLISHSCORE.sas";
311048     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
311049     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural33\EMPUBLISHSCORE.sas.
311050    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
311051    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
311052    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
311053    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
311054    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
311055    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
311056    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
311057    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
311058    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
311059    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
311060    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
311061    +LENGTH _WARN_ $4
311062    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
311063    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
311064    +
311065    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
311066    +
311067    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
311068    +
311069    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
311070    +
311071    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
311072    +
311073    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
311074    +
311075    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
311076    +
311077    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
311078    +
311079    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
311080    +
311081    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
311082    +
311083    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
311084    +
311085    +      label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
311086    +
311087    +      label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
311088    +
311089    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
311090    +
311091    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
311092    +
311093    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
311094    +
311095    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
311096    +
311097    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
311098    +
311099    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
311100    +
311101    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
311102    +
311103    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
311104    +
311105    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
311106    +
311107    +*** Generate dummy variables for G_Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for G_Marital_Status ;
311108    +drop G_Marital_Status0 G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   drop G_Marital_Status0 G_Marital_Status1 ;
311109    +if missing( G_Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( G_Marital_Status ) then do;
311110    +   G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
311111    +   G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
311112    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
311113    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
311114    +end;
MPRINT(EM_DIAGRAM):   end;
311115    +else do;
MPRINT(EM_DIAGRAM):   else do;
311116    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
311117    +   _dm12 = put( G_Marital_Status , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( G_Marital_Status , BEST12. );
311118    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
311119    +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
311120    +      G_Marital_Status0 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = -1;
311121    +      G_Marital_Status1 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = -1;
311122    +   end;
MPRINT(EM_DIAGRAM):   end;
311123    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
311124    +      G_Marital_Status0 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 1;
311125    +      G_Marital_Status1 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 0;
311126    +   end;
MPRINT(EM_DIAGRAM):   end;
311127    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
311128    +      G_Marital_Status0 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 0;
311129    +      G_Marital_Status1 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 1;
311130    +   end;
MPRINT(EM_DIAGRAM):   end;
311131    +   else do;
MPRINT(EM_DIAGRAM):   else do;
311132    +      G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
311133    +      G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
311134    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
311135    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
311136    +   end;
MPRINT(EM_DIAGRAM):   end;
311137    +end;
MPRINT(EM_DIAGRAM):   end;
311138    +
311139    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
311140    +*** Checking missing input Interval
311141    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
311142    +
311143    +IF NMISS(
311144    +   AcceptedCmpTotal ,
311145    +   Frq ,
311146    +   Income ,
311147    +   Mnt ,
311148    +   MntGoldProds ,
311149    +   MntMeatProducts ,
311150    +   MntWines ,
311151    +   NumDistPurchases ,
311152    +   RFMstat ,
311153    +   RMntFrq ,
311154    +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntGoldProds , 
MntMeatProducts , MntWines , NumDistPurchases , RFMstat , RMntFrq , Recency ) THEN DO;
311155    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
311156    +
311157    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
311158    +END;
MPRINT(EM_DIAGRAM):   END;
311159    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
311160    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
311161    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
311162    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
311163    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
311164    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
311165    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
311166    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
311167    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
311168    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
311169    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
311170    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
311171    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
311172    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
311173    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
311174    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
311175    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
311176    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
311177    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
311178    +END;
MPRINT(EM_DIAGRAM):   END;
311179    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
311180    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
311181    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
311182    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
311183    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
311184    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
311185    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
311186    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
311187    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
311188    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
311189    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
311190    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
311191    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
311192    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
311193    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
311194    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
311195    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
311196    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
311197    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
311198    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
311199    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
311200    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
311201    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
311202    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
311203    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
311204    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
311205    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
311206    +END;
MPRINT(EM_DIAGRAM):   END;
311207    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
311208    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
311209    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
311210    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
311211    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
311212    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
311213    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
311214    +   H1x1_1  =     0.33555011401553 * S_AcceptedCmpTotal
311215    +          +    -3.02490159760157 * S_Frq  +    -0.12761482391665 * S_Income
311216    +          +     -9.1169668394273 * S_Mnt  +     0.88214411094174 *
311217    +        S_MntGoldProds  +     16.4212241447522 * S_MntMeatProducts
311218    +          +     4.65784744010387 * S_MntWines  +     2.75620847659032 *
311219    +        S_NumDistPurchases  +     5.10796074430888 * S_RFMstat
311220    +          +    -0.15069444442326 * S_RMntFrq  +    -0.36037041233055 *
311221    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.33555011401553 * S_AcceptedCmpTotal + -3.02490159760157 * 
S_Frq + -0.12761482391665 * S_Income + -9.1169668394273 * S_Mnt + 0.88214411094174 * 
S_MntGoldProds + 16.4212241447522 * S_MntMeatProducts + 4.65784744010387 * S_MntWines + 
2.75620847659032 * S_NumDistPurchases + 5.10796074430888 * S_RFMstat + -0.15069444442326 * 
S_RMntFrq + -0.36037041233055 * S_Recency ;
311222    +   H1x1_2  =     -6.2107002884316 * S_AcceptedCmpTotal
311223    +          +      5.5991079844098 * S_Frq  +    -1.06506164052399 * S_Income
311224    +          +     7.16823320768258 * S_Mnt  +     1.97115223638004 *
311225    +        S_MntGoldProds  +     0.02973121977962 * S_MntMeatProducts
311226    +          +     3.28931008157038 * S_MntWines  +    -3.02545356699096 *
311227    +        S_NumDistPurchases  +    -0.45519831720714 * S_RFMstat
311228    +          +     2.14788986039061 * S_RMntFrq  +     7.13033786501062 *
311229    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -6.2107002884316 * S_AcceptedCmpTotal + 5.5991079844098 * S_Frq 
+ -1.06506164052399 * S_Income + 7.16823320768258 * S_Mnt + 1.97115223638004 * S_MntGoldProds 
+ 0.02973121977962 * S_MntMeatProducts + 3.28931008157038 * S_MntWines + -3.02545356699096 * 
S_NumDistPurchases + -0.45519831720714 * S_RFMstat + 2.14788986039061 * S_RMntFrq + 
7.13033786501062 * S_Recency ;
311230    +   H1x1_3  =    -0.31707769589072 * S_AcceptedCmpTotal
311231    +          +     -0.8436342869652 * S_Frq  +     0.04938014828703 * S_Income
311232    +          +     0.41074885451072 * S_Mnt  +    -0.22835264468248 *
311233    +        S_MntGoldProds  +     0.04154328332772 * S_MntMeatProducts
311234    +          +    -0.63526276335269 * S_MntWines  +     0.16430041832418 *
311235    +        S_NumDistPurchases  +    -0.01070081959406 * S_RFMstat
311236    +          +    -1.56851833223581 * S_RMntFrq  +     0.62478865123427 *
311237    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.31707769589072 * S_AcceptedCmpTotal + -0.8436342869652 * 
S_Frq + 0.04938014828703 * S_Income + 0.41074885451072 * S_Mnt + -0.22835264468248 * 
S_MntGoldProds + 0.04154328332772 * S_MntMeatProducts + -0.63526276335269 * S_MntWines + 
0.16430041832418 * S_NumDistPurchases + -0.01070081959406 * S_RFMstat + -1.56851833223581 * 
S_RMntFrq + 0.62478865123427 * S_Recency ;
311238    +   H1x1_4  =     0.54144616315359 * S_AcceptedCmpTotal
311239    +          +    -2.69605116285758 * S_Frq  +    -0.42453662943397 * S_Income
311240    +          +    -0.95657675439363 * S_Mnt  +     0.24420189860131 *
311241    +        S_MntGoldProds  +     2.44632795316553 * S_MntMeatProducts
311242    +          +     -0.1454644222769 * S_MntWines  +     2.34899307919173 *
311243    +        S_NumDistPurchases  +    -0.02462201574723 * S_RFMstat
311244    +          +    -2.08470857931815 * S_RMntFrq  +    -0.76249328143214 *
311245    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.54144616315359 * S_AcceptedCmpTotal + -2.69605116285758 * 
S_Frq + -0.42453662943397 * S_Income + -0.95657675439363 * S_Mnt + 0.24420189860131 * 
S_MntGoldProds + 2.44632795316553 * S_MntMeatProducts + -0.1454644222769 * S_MntWines + 
2.34899307919173 * S_NumDistPurchases + -0.02462201574723 * S_RFMstat + -2.08470857931815 * 
S_RMntFrq + -0.76249328143214 * S_Recency ;
311246    +   H1x1_1  = H1x1_1  +     0.00660823494191 * G_Marital_Status0
311247    +          +    -0.18825548425502 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.00660823494191 * G_Marital_Status0 + 
-0.18825548425502 * G_Marital_Status1 ;
311248    +   H1x1_2  = H1x1_2  +    -2.06051657300217 * G_Marital_Status0
311249    +          +    -6.25782340834073 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -2.06051657300217 * G_Marital_Status0 + 
-6.25782340834073 * G_Marital_Status1 ;
311250    +   H1x1_3  = H1x1_3  +    -0.79419358160841 * G_Marital_Status0
311251    +          +     0.34890327415646 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.79419358160841 * G_Marital_Status0 + 
0.34890327415646 * G_Marital_Status1 ;
311252    +   H1x1_4  = H1x1_4  +    -0.04651762606699 * G_Marital_Status0
311253    +          +     0.31552155976549 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.04651762606699 * G_Marital_Status0 + 
0.31552155976549 * G_Marital_Status1 ;
311254    +   H1x1_1  =      9.5912267385355 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 9.5912267385355 + H1x1_1 ;
311255    +   H1x1_2  =     -17.513407093022 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -17.513407093022 + H1x1_2 ;
311256    +   H1x1_3  =     3.77110114695743 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 3.77110114695743 + H1x1_3 ;
311257    +   H1x1_4  =    -1.34405555452152 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -1.34405555452152 + H1x1_4 ;
311258    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
311259    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
311260    +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
311261    +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
311262    +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
311263    +   H1x1_4  = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
311264    +END;
MPRINT(EM_DIAGRAM):   END;
311265    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
311266    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
311267    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
311268    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
311269    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
311270    +END;
MPRINT(EM_DIAGRAM):   END;
311271    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
311272    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
311273    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
311274    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
311275    +   P_DepVar1  =     17.1648278730429 * H1x1_1  +    -5.41550544466459 * H1x1_2
311276    +          +     -11.071053129929 * H1x1_3  +      10.744209891392 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 17.1648278730429 * H1x1_1 + -5.41550544466459 * H1x1_2 + 
-11.071053129929 * H1x1_3 + 10.744209891392 * H1x1_4 ;
311277    +   P_DepVar1  =    -12.0079203309727 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -12.0079203309727 + P_DepVar1 ;
311278    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
311279    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
311280    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
311281    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
311282    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
311283    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
311284    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
311285    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
311286    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
311287    +END;
MPRINT(EM_DIAGRAM):   END;
311288    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
311289    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
311290    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
311291    +END;
MPRINT(EM_DIAGRAM):   END;
311292    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
311293    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
311294    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
311295    +END;
MPRINT(EM_DIAGRAM):   END;
311296    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
311297    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
311298    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
311299    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
311300    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
311301    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
311302    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
311303    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
311304    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
311305    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
311306    +END;
MPRINT(EM_DIAGRAM):   END;
311307    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
311308    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
311309    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
311310    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
311311     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
311312     quit;
311313     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
311314     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
311315     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
311316     retain ID 2 Node "AutoNeural33";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural33";
311317     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
311318     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 871 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 871 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

311319     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
311320     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
311321     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 871 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 871 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

311322     proc sort data=EMWS8.AutoNeural33_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural33_variableset out=_temp2(keep=NAME 
CREATOR);
311323     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
311324     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 13 observations read from the data set EMWS8.AUTONEURAL33_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 13 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

311325     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
311326     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
311327     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
311328     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 13 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 13 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

311329     proc contents data=EMWS8.AutoNeural33_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural33_train out=_meta(keep=NAME) noprint;
311330     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 58 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

311331     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
311332     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
311333     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 58 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 58 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

311334     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
311335     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
311336     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
311337     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 58 observations read from the data set WORK._META.
NOTE: There were 13 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 58 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

311338     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
311339     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
311339   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 455 rows and 5 columns.

311340     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

311341     proc append base=EMWS8.Ensmbl19_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl19_FCMP data=_tempx;
311342     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL19_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 455 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL19_FCMP has 455 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

311343     filename _pref
311343   ! "C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMFLOWSCORE.sas";
311344     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
311345     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMFLOWSCORE.sas.
311346    +******************************************;
MPRINT(EM_DIAGRAM):   ******************************************;
311347    +*** Begin Scoring Code from PROC DMINE ***;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code from PROC DMINE ***;
311348    +******************************************;
MPRINT(EM_DIAGRAM):   ******************************************;
311349    +
311350    +length _WARN_ $ 4;
MPRINT(EM_DIAGRAM):   length _WARN_ $ 4;
311351    +label _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
311352    +
311353    +
311354    +/*----G_Marital_Status begin----*/
311355    +length _NORM8 $ 8;
MPRINT(EM_DIAGRAM):   /*----G_Marital_Status begin----*/ length _NORM8 $ 8;
311356    +_NORM8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _NORM8 = put( Marital_Status , $8. );
311357    +%DMNORMIP( _NORM8 )
MPRINT(DMNORMIP):   call dmnorm(_NORM8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
311358    +drop _NORM8;
MPRINT(EM_DIAGRAM):   drop _NORM8;
311359    +select(_NORM8);
MPRINT(EM_DIAGRAM):   select(_NORM8);
311360    +  when("DIVORCED" ) G_Marital_Status = 1;
MPRINT(EM_DIAGRAM):   when("DIVORCED" ) G_Marital_Status = 1;
311361    +  when("MARRIED " ) G_Marital_Status = 2;
MPRINT(EM_DIAGRAM):   when("MARRIED " ) G_Marital_Status = 2;
311362    +  when("SINGLE  " ) G_Marital_Status = 0;
MPRINT(EM_DIAGRAM):   when("SINGLE  " ) G_Marital_Status = 0;
311363    +  when("TOGETHER" ) G_Marital_Status = 2;
MPRINT(EM_DIAGRAM):   when("TOGETHER" ) G_Marital_Status = 2;
311364    +  when("WIDOW   " ) G_Marital_Status = 0;
MPRINT(EM_DIAGRAM):   when("WIDOW   " ) G_Marital_Status = 0;
311365    +  otherwise substr(_WARN_, 2, 1) = 'U';
MPRINT(EM_DIAGRAM):   otherwise substr(_WARN_, 2, 1) = 'U';
311366    +end;
MPRINT(EM_DIAGRAM):   end;
311367    +label G_Marital_Status="Grouped Levels for Marital_Status";
MPRINT(EM_DIAGRAM):   label G_Marital_Status="Grouped Levels for Marital_Status";
311368    +/*----G_Marital_Status end----*/
311369    +
311370    +
311371    +****************************************;
MPRINT(EM_DIAGRAM):   /*----G_Marital_Status end----*/ 
****************************************;
311372    +*** End Scoring Code from PROC DMINE ***;
MPRINT(EM_DIAGRAM):   *** End Scoring Code from PROC DMINE ***;
311373    +****************************************;
MPRINT(EM_DIAGRAM):   ****************************************;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
311374     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
311375     quit;
311376     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
311377     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
311378     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
311379     retain ID 3 Node "Varsel";
MPRINT(EM_DIAGRAM):   retain ID 3 Node "Varsel";
311380     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
311381     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 5 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 5 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

311382     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
311383     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
311384     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 5 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 5 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

311385     proc sort data=EMWS8.Varsel_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Varsel_variableset out=_temp2(keep=NAME CREATOR);
311386     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
311387     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.VARSEL_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

311388     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
311389     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
311390     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
311391     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

311392     proc contents data=EMWS8.Varsel_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Varsel_train out=_meta(keep=NAME) noprint;
311393     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 47 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

311394     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
311395     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
311396     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 47 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 47 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

311397     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
311398     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
311399     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
311400     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 47 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 47 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

311401     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
311402     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
311402   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 3 rows and 5 columns.

311403     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

311404     proc append base=EMWS8.Ensmbl19_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl19_FCMP data=_tempx;
311405     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL19_FCMP.
NOTE: There were 3 observations read from the data set WORK._TEMPX.
NOTE: 3 observations added.
NOTE: The data set EMWS8.ENSMBL19_FCMP has 458 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

311406     filename _pref
311406   ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
311407     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
311408     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
311409    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
311410    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
311411    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
311412    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
311413    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
311414    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
311415     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
311416     quit;
311417     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
311418     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
311419     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
311420     retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
311421     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
311422     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

311423     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
311424     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
311425     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

311426     proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
311427     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
311428     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

311429     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
311430     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
311431     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
311432     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

311433     proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
311434     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

311435     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
311436     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
311437     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

311438     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
311439     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
311440     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
311441     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

311442     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
311443     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
311443   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

311444     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

311445     proc append base=EMWS8.Ensmbl19_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl19_FCMP data=_tempx;
311446     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL19_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL19_FCMP has 462 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

311447     filename _pref
311447   ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
311448     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
311449     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
311450    +
311451    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
311452    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
311452   !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
311453    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
311454    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
311455    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
311456    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
311457    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
311458     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
311459     quit;
311460     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
311461     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
311462     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
311463     retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
311464     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
311465     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

311466     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
311467     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
311468     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

311469     proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
311470     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
311471     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

311472     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
311473     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
311474     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
311475     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

311476     proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
311477     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

311478     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
311479     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
311480     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

311481     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
311482     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
311483     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
311484     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

311485     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
311486     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
311486   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

311487     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

311488     proc append base=EMWS8.Ensmbl19_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl19_FCMP data=_tempx;
311489     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL19_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL19_FCMP has 501 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

311490     filename _pref
311490   ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
311491     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
311492     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
311493    +
311494    +
311495    +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
311496    +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
311497    +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
311498    +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
311499    +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
311500    +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
311501    +
311502    +
311503    +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
311504    +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
311505    +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
311506    +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
311507    +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
311508    +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
311509    +
311510    +
311511    +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
311512    +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
311513    +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
311514    +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
311515    +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
311516    +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
311517    +
311518    +
311519    +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
311520    +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
311521    +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
311522    +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
311523    +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
311524    +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
311525    +
311526    +
311527    +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
311528    +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
311529    +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
311530    +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
311531    +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
311532    +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
311533    +
311534    +
311535    +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
311536    +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
311537    +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
311538    +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
311539    +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
311540    +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
311541    +
311542    +
311543    +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
311544    +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
311545    +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
311546    +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
311547    +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
311548    +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
311549    +
311550    +
311551    +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
311552    +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
311553    +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
311554    +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
311555    +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
311556    +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
311557    +if
311558    +_FILTERNORM1 not in ( '.')
311559    + and
311560    +_FILTERNORM2 not in ( '.')
311561    + and
311562    +_FILTERNORM3 not in ( '.')
311563    + and
311564    +_FILTERNORM4 not in ( '.')
311565    + and
311566    +_FILTERNORM5 not in ( '.')
311567    + and
311568    +_FILTERNORM6 not in ( '.')
311569    + and
311570    +_FILTERNORM7 not in ( ' ')
311571    + and
311572    +_FILTERNORM8 not in ( ' ')
311573    +and
311574    +( Dt_Customer ne .)
311575    +and ( Income ne . and (Income<=107000))
311576    +and ( Kidhome ne .)
311577    +and ( MntFishProducts ne .)
311578    +and ( MntFruits ne .)
311579    +and ( MntGoldProds ne .)
311580    +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
311581    +and ( MntSweetProducts ne .)
311582    +and ( MntWines ne .)
311583    +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
311584    +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
311585    +and ( NumStorePurchases ne .)
311586    +and ( NumWebPurchases ne .)
311587    +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
311588    +and ( Recency ne .)
311589    +and ( Teenhome ne .)
311590    +and ( Year_Birth ne .)
311591    +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
311592    +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
311593    +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
311594    +end;
MPRINT(EM_DIAGRAM):   end;
311595    +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
311596    +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
311597     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
311598     quit;
311599     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
311600     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
311601     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
311602     retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
311603     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
311604     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

311605     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
311606     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
311607     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

311608     proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
311609     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
311610     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

311611     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
311612     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
311613     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
311614     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

311615     proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
311616     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

311617     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
311618     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
311619     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

311620     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
311621     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
311622     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
311623     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

311624     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
311625     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
311625   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

311626     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

311627     proc append base=EMWS8.Ensmbl19_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl19_FCMP data=_tempx;
311628     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL19_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL19_FCMP has 567 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

311629     %macro varDept(fcmpdata=,id=);
311630     %global nobs&id scoreFlag&id;
311631     %let scoreFlag&id = 0;
311632     %if &id=1 or ^&fcmpStart %then %do;
311633     proc sort data=&fcmpdata out=_temp&id nodupkey;
311634     by NAME;
311635     where id=&id and LHS in( %let j=1;
311636     %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
311637     %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
311638     "&var" %let j = %eval(&j+1);
311639     %end;
311640     );
311641     run;
311642     %let dsid = %sysfunc(open(_temp&id));
311643     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
311644     %let dsid = %sysfunc(close(&dsid));
311645     %if &&nobs&id %then %do;
311646     %let scoreFlag&id = 1;
311647     %let fcmpStart = 1;
311648     %end;
311649     %else %let fcmpStart = 0;
311650     %end;
311651     %else %do;
311652     proc sort data=&fcmpdata out=_tempid;
311653     where id=&id;
311654     by LHS;
311655     run;
311656     %let dsid = %sysfunc(open(_tempid));
311657     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
311658     %let dsid = %sysfunc(close(&dsid));
311659     %if ^&&nobs&id %then %do;
311660     proc datasets lib=work nolist;
311661     delete _tempid;
311662     run;
311663     quit;
311664     %end;
311665     %else %do;
311666     data _tempAll;
311667     set %let j=%eval(&id-1);
311668     %do x=1 %to &j;
311669     %if &&nobs&x %then %do;
311670     _temp&x %end;
311671     %end;
311672     ;
311673     run;
311674     proc sql;
311675     create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
311675   ! work._tempid p2 where p.name=p2.lhs;
311676     quit;
311677     data _temp&id;
311678     set _temp&id;
311679     where LHS ne '' and NAME ne '' and Node ne '';
311680     run;
311681     proc datasets lib=work nolist;
311682     delete _tempAll;
311683     run;
311684     %let dsid = %sysfunc(open(_temp&id));
311685     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
311686     %let dsid = %sysfunc(close(&dsid));
311687     %if ^&&nobs&id %then %do;
311688     proc datasets lib=work nolist;
311689     delete _temp&id;
311690     run;
311691     quit;
311692     %end;
311693     %else %do;
311694     %let scoreFlag&id = 1;
311695     data _temp&id;
311696     set _temp&id;
311697     where LHS ne NAME and node ne '';
311698     run;
311699     %let dsid = %sysfunc(open(_temp&id));
311700     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
311701     %let dsid = %sysfunc(close(&dsid));
311702     %if ^&&nobs&id %then %do;
311703     proc datasets lib=work nolist;
311704     delete _temp&id;
311705     run;
311706     quit;
311707     %end;
311708     %else %do;
311709     proc sort data=_temp&id nodupkey;
311710     by LHS NAME;
311711     run;
311712     %end;
311713     %end;
311714     %end;
311715     %end;
311716     %mend varDept;
311717     %macro optCode(outdata=fcmpdata);
311718     %global fcmpStart;
311719     %let fcmpStart = 0;
311720     %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
311721     %let NumNodes=9;
311722     %do k=1 %to &NumNodes;
311723     %vardept(fcmpdata=&outdata, id=&k);
311724     %end;
311725     %mend optCode;
311726     %optcode(outData=EMWS8.Ensmbl19_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl19_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL19_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl19_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL19_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 48 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 18 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl19_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 3 observations read from the data set EMWS8.ENSMBL19_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 3 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 18 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 18 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp3 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP3 created, with 1 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 1 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP3 has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 1 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP3 has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp3 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 1 observations read from the data set WORK._TEMP3.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP3 has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl19_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL19_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl19_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL19_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 ;
MPRINT(VARDEPT):   run;

NOTE: There were 18 observations read from the data set WORK._TEMP2.
NOTE: There were 1 observations read from the data set WORK._TEMP3.
NOTE: The data set WORK._TEMPALL has 19 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 2 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl19_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL19_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 18 observations read from the data set WORK._TEMP2.
NOTE: There were 1 observations read from the data set WORK._TEMP3.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 21 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 37 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 37 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 37 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 37 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 37 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 37 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 37 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl19_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL19_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 18 observations read from the data set WORK._TEMP2.
NOTE: There were 1 observations read from the data set WORK._TEMP3.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: There were 37 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 58 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl19_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL19_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl19_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL19_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

311727     data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
311728     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
311729     where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
311730     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

311731     data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
311732     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
311733     where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
311734     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

311735     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
311736     create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
311736   ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 2 rows and 3 columns.

311737     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

311738     data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
311739     set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
311740     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 2 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 2 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

311741     data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
311742     set EMWS8.Varsel_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Varsel_EMSCOREVAR;
311743     where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
311744     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.VARSEL_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

311745     data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
311746     set EMWS8.Varsel_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Varsel_EMSCOREVAR;
311747     where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
311748     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.VARSEL_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

311749     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
311750     create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3 p,
311750   ! EMWS8.Varsel_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3 
p, EMWS8.Varsel_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR7 created, with 1 rows and 3 columns.

311751     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

311752     data _CodeVar7;
MPRINT(EM_DIAGRAM):   data _CodeVar7;
311753     set _all_ _CodeVar7 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar7 _postall_;
311754     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 1 observations read from the data set WORK._CODEVAR7.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR7 has 1 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

311755     filename _pref
311755   ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural28\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural28\EMPUBLISHSCORE.sas";
311756     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
311757     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural28\EMPUBLISHSCORE.sas.
311758    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
311759    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
311760    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
311761    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
311762    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
311763    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
311764    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
311765    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
311766    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
311767    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
311768    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
311769    +LENGTH _WARN_ $4
311770    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
311771    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
311772    +
311773    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
311774    +
311775    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
311776    +
311777    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
311778    +
311779    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
311780    +
311781    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
311782    +
311783    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
311784    +
311785    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
311786    +
311787    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
311788    +
311789    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
311790    +
311791    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
311792    +
311793    +      label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
311794    +
311795    +      label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
311796    +
311797    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
311798    +
311799    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
311800    +
311801    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
311802    +
311803    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
311804    +
311805    +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
311806    +
311807    +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
311808    +
311809    +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
311810    +
311811    +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
311812    +
311813    +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
311814    +
311815    +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
311816    +
311817    +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
311818    +
311819    +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
311820    +
311821    +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
311822    +
311823    +      label H1x3_2 = 'Hidden: H1x3_=2' ;
MPRINT(EM_DIAGRAM):   label H1x3_2 = 'Hidden: H1x3_=2' ;
311824    +
311825    +      label H1x3_3 = 'Hidden: H1x3_=3' ;
MPRINT(EM_DIAGRAM):   label H1x3_3 = 'Hidden: H1x3_=3' ;
311826    +
311827    +      label H1x3_4 = 'Hidden: H1x3_=4' ;
MPRINT(EM_DIAGRAM):   label H1x3_4 = 'Hidden: H1x3_=4' ;
311828    +
311829    +      label H1x3_5 = 'Hidden: H1x3_=5' ;
The SAS System

MPRINT(EM_DIAGRAM):   label H1x3_5 = 'Hidden: H1x3_=5' ;
311830    +
311831    +      label H1x3_6 = 'Hidden: H1x3_=6' ;
MPRINT(EM_DIAGRAM):   label H1x3_6 = 'Hidden: H1x3_=6' ;
311832    +
311833    +      label H1x4_1 = 'Hidden: H1x4_=1' ;
MPRINT(EM_DIAGRAM):   label H1x4_1 = 'Hidden: H1x4_=1' ;
311834    +
311835    +      label H1x4_2 = 'Hidden: H1x4_=2' ;
MPRINT(EM_DIAGRAM):   label H1x4_2 = 'Hidden: H1x4_=2' ;
311836    +
311837    +      label H1x4_3 = 'Hidden: H1x4_=3' ;
MPRINT(EM_DIAGRAM):   label H1x4_3 = 'Hidden: H1x4_=3' ;
311838    +
311839    +      label H1x4_4 = 'Hidden: H1x4_=4' ;
MPRINT(EM_DIAGRAM):   label H1x4_4 = 'Hidden: H1x4_=4' ;
311840    +
311841    +      label H1x4_5 = 'Hidden: H1x4_=5' ;
MPRINT(EM_DIAGRAM):   label H1x4_5 = 'Hidden: H1x4_=5' ;
311842    +
311843    +      label H1x4_6 = 'Hidden: H1x4_=6' ;
MPRINT(EM_DIAGRAM):   label H1x4_6 = 'Hidden: H1x4_=6' ;
311844    +
311845    +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
311846    +
311847    +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
311848    +
311849    +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
311850    +
311851    +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
311852    +
311853    +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
311854    +
311855    +      label H2x1_6 = 'Hidden: H2x1_=6' ;
MPRINT(EM_DIAGRAM):   label H2x1_6 = 'Hidden: H2x1_=6' ;
311856    +
311857    +      label H2x2_1 = 'Hidden: H2x2_=1' ;
MPRINT(EM_DIAGRAM):   label H2x2_1 = 'Hidden: H2x2_=1' ;
311858    +
311859    +      label H2x2_2 = 'Hidden: H2x2_=2' ;
MPRINT(EM_DIAGRAM):   label H2x2_2 = 'Hidden: H2x2_=2' ;
311860    +
311861    +      label H2x2_3 = 'Hidden: H2x2_=3' ;
MPRINT(EM_DIAGRAM):   label H2x2_3 = 'Hidden: H2x2_=3' ;
311862    +
311863    +      label H2x2_4 = 'Hidden: H2x2_=4' ;
MPRINT(EM_DIAGRAM):   label H2x2_4 = 'Hidden: H2x2_=4' ;
311864    +
311865    +      label H2x2_5 = 'Hidden: H2x2_=5' ;
MPRINT(EM_DIAGRAM):   label H2x2_5 = 'Hidden: H2x2_=5' ;
311866    +
311867    +      label H2x2_6 = 'Hidden: H2x2_=6' ;
MPRINT(EM_DIAGRAM):   label H2x2_6 = 'Hidden: H2x2_=6' ;
311868    +
311869    +      label H2x3_1 = 'Hidden: H2x3_=1' ;
MPRINT(EM_DIAGRAM):   label H2x3_1 = 'Hidden: H2x3_=1' ;
311870    +
311871    +      label H2x3_2 = 'Hidden: H2x3_=2' ;
MPRINT(EM_DIAGRAM):   label H2x3_2 = 'Hidden: H2x3_=2' ;
311872    +
311873    +      label H2x3_3 = 'Hidden: H2x3_=3' ;
MPRINT(EM_DIAGRAM):   label H2x3_3 = 'Hidden: H2x3_=3' ;
311874    +
311875    +      label H2x3_4 = 'Hidden: H2x3_=4' ;
MPRINT(EM_DIAGRAM):   label H2x3_4 = 'Hidden: H2x3_=4' ;
311876    +
311877    +      label H2x3_5 = 'Hidden: H2x3_=5' ;
MPRINT(EM_DIAGRAM):   label H2x3_5 = 'Hidden: H2x3_=5' ;
311878    +
311879    +      label H2x3_6 = 'Hidden: H2x3_=6' ;
MPRINT(EM_DIAGRAM):   label H2x3_6 = 'Hidden: H2x3_=6' ;
311880    +
311881    +      label H3x1_1 = 'Hidden: H3x1_=1' ;
MPRINT(EM_DIAGRAM):   label H3x1_1 = 'Hidden: H3x1_=1' ;
311882    +
311883    +      label H3x1_2 = 'Hidden: H3x1_=2' ;
MPRINT(EM_DIAGRAM):   label H3x1_2 = 'Hidden: H3x1_=2' ;
311884    +
311885    +      label H3x1_3 = 'Hidden: H3x1_=3' ;
MPRINT(EM_DIAGRAM):   label H3x1_3 = 'Hidden: H3x1_=3' ;
311886    +
311887    +      label H3x1_4 = 'Hidden: H3x1_=4' ;
MPRINT(EM_DIAGRAM):   label H3x1_4 = 'Hidden: H3x1_=4' ;
311888    +
311889    +      label H3x1_5 = 'Hidden: H3x1_=5' ;
MPRINT(EM_DIAGRAM):   label H3x1_5 = 'Hidden: H3x1_=5' ;
311890    +
311891    +      label H3x1_6 = 'Hidden: H3x1_=6' ;
MPRINT(EM_DIAGRAM):   label H3x1_6 = 'Hidden: H3x1_=6' ;
311892    +
311893    +      label H3x2_1 = 'Hidden: H3x2_=1' ;
MPRINT(EM_DIAGRAM):   label H3x2_1 = 'Hidden: H3x2_=1' ;
311894    +
311895    +      label H3x2_2 = 'Hidden: H3x2_=2' ;
MPRINT(EM_DIAGRAM):   label H3x2_2 = 'Hidden: H3x2_=2' ;
311896    +
311897    +      label H3x2_3 = 'Hidden: H3x2_=3' ;
MPRINT(EM_DIAGRAM):   label H3x2_3 = 'Hidden: H3x2_=3' ;
311898    +
311899    +      label H3x2_4 = 'Hidden: H3x2_=4' ;
MPRINT(EM_DIAGRAM):   label H3x2_4 = 'Hidden: H3x2_=4' ;
311900    +
311901    +      label H3x2_5 = 'Hidden: H3x2_=5' ;
MPRINT(EM_DIAGRAM):   label H3x2_5 = 'Hidden: H3x2_=5' ;
311902    +
311903    +      label H3x2_6 = 'Hidden: H3x2_=6' ;
MPRINT(EM_DIAGRAM):   label H3x2_6 = 'Hidden: H3x2_=6' ;
311904    +
311905    +      label H4x1_1 = 'Hidden: H4x1_=1' ;
MPRINT(EM_DIAGRAM):   label H4x1_1 = 'Hidden: H4x1_=1' ;
311906    +
311907    +      label H4x1_2 = 'Hidden: H4x1_=2' ;
MPRINT(EM_DIAGRAM):   label H4x1_2 = 'Hidden: H4x1_=2' ;
311908    +
311909    +      label H4x1_3 = 'Hidden: H4x1_=3' ;
MPRINT(EM_DIAGRAM):   label H4x1_3 = 'Hidden: H4x1_=3' ;
311910    +
311911    +      label H4x1_4 = 'Hidden: H4x1_=4' ;
MPRINT(EM_DIAGRAM):   label H4x1_4 = 'Hidden: H4x1_=4' ;
311912    +
311913    +      label H4x1_5 = 'Hidden: H4x1_=5' ;
MPRINT(EM_DIAGRAM):   label H4x1_5 = 'Hidden: H4x1_=5' ;
311914    +
311915    +      label H4x1_6 = 'Hidden: H4x1_=6' ;
MPRINT(EM_DIAGRAM):   label H4x1_6 = 'Hidden: H4x1_=6' ;
311916    +
311917    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
311918    +
311919    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
311920    +
311921    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
311922    +
311923    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
311924    +
311925    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
311926    +
311927    +*** Generate dummy variables for G_Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for G_Marital_Status ;
311928    +drop G_Marital_Status0 G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   drop G_Marital_Status0 G_Marital_Status1 ;
311929    +if missing( G_Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( G_Marital_Status ) then do;
311930    +   G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
311931    +   G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
311932    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
311933    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
311934    +end;
MPRINT(EM_DIAGRAM):   end;
311935    +else do;
MPRINT(EM_DIAGRAM):   else do;
311936    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
311937    +   _dm12 = put( G_Marital_Status , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( G_Marital_Status , BEST12. );
311938    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
311939    +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
311940    +      G_Marital_Status0 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = -1;
311941    +      G_Marital_Status1 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = -1;
311942    +   end;
MPRINT(EM_DIAGRAM):   end;
311943    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
311944    +      G_Marital_Status0 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 1;
311945    +      G_Marital_Status1 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 0;
311946    +   end;
MPRINT(EM_DIAGRAM):   end;
311947    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
311948    +      G_Marital_Status0 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 0;
311949    +      G_Marital_Status1 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 1;
311950    +   end;
MPRINT(EM_DIAGRAM):   end;
311951    +   else do;
MPRINT(EM_DIAGRAM):   else do;
311952    +      G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
311953    +      G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
311954    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
311955    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
311956    +   end;
MPRINT(EM_DIAGRAM):   end;
311957    +end;
MPRINT(EM_DIAGRAM):   end;
311958    +
311959    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
311960    +*** Checking missing input Interval
311961    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
311962    +
311963    +IF NMISS(
311964    +   AcceptedCmpTotal ,
311965    +   Frq ,
311966    +   Income ,
311967    +   Mnt ,
311968    +   MntGoldProds ,
311969    +   MntMeatProducts ,
311970    +   MntWines ,
311971    +   NumDistPurchases ,
311972    +   RFMstat ,
311973    +   RMntFrq ,
311974    +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntGoldProds , 
MntMeatProducts , MntWines , NumDistPurchases , RFMstat , RMntFrq , Recency ) THEN DO;
311975    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
311976    +
311977    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
311978    +END;
MPRINT(EM_DIAGRAM):   END;
311979    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
311980    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
311981    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
311982    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
311983    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
311984    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
311985    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
311986    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
311987    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
311988    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
311989    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
311990    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
311991    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
311992    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
311993    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
311994    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
311995    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
311996    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
311997    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
311998    +END;
MPRINT(EM_DIAGRAM):   END;
311999    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
312000    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
312001    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
312002    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
312003    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
312004    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
312005    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
312006    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
312007    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
312008    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
312009    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
312010    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
312011    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
312012    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
312013    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
312014    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
312015    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
312016    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
312017    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
312018    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
312019    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
312020    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
312021    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
312022    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
312023    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
312024    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
312025    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
312026    +END;
MPRINT(EM_DIAGRAM):   END;
312027    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
312028    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
312029    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
312030    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
312031    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
312032    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
312033    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
312034    +   H1x1_1  =     3.15417213555791 * S_AcceptedCmpTotal
312035    +          +    -2.48200966202064 * S_Frq  +     1.79801309624052 * S_Income
312036    +          +    -1.96453924225923 * S_Mnt  +    -0.73447750078211 *
312037    +        S_MntGoldProds  +    -1.52540613833145 * S_MntMeatProducts
312038    +          +    -2.34651136428537 * S_MntWines  +     1.78713249203795 *
312039    +        S_NumDistPurchases  +    -1.89877446252459 * S_RFMstat
312040    +          +     0.40523847190984 * S_RMntFrq  +    -5.00157954960261 *
312041    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 3.15417213555791 * S_AcceptedCmpTotal + -2.48200966202064 * 
S_Frq + 1.79801309624052 * S_Income + -1.96453924225923 * S_Mnt + -0.73447750078211 * 
S_MntGoldProds + -1.52540613833145 * S_MntMeatProducts + -2.34651136428537 * S_MntWines + 
1.78713249203795 * S_NumDistPurchases + -1.89877446252459 * S_RFMstat + 0.40523847190984 * 
S_RMntFrq + -5.00157954960261 * S_Recency ;
312042    +   H1x1_2  =     -0.4296332791258 * S_AcceptedCmpTotal
312043    +          +     1.69454720747031 * S_Frq  +     0.65291994437462 * S_Income
312044    +          +     4.94289741649285 * S_Mnt  +    -0.74724168333375 *
312045    +        S_MntGoldProds  +    -4.37885511745275 * S_MntMeatProducts
312046    +          +    -0.79918604028406 * S_MntWines  +    -2.55554908870931 *
312047    +        S_NumDistPurchases  +      -0.357509020401 * S_RFMstat
312048    +          +     2.81206015252461 * S_RMntFrq  +       0.376849190211 *
312049    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.4296332791258 * S_AcceptedCmpTotal + 1.69454720747031 * 
S_Frq + 0.65291994437462 * S_Income + 4.94289741649285 * S_Mnt + -0.74724168333375 * 
S_MntGoldProds + -4.37885511745275 * S_MntMeatProducts + -0.79918604028406 * S_MntWines + 
-2.55554908870931 * S_NumDistPurchases + -0.357509020401 * S_RFMstat + 2.81206015252461 * 
S_RMntFrq + 0.376849190211 * S_Recency ;
312050    +   H1x1_3  =     0.22275326994217 * S_AcceptedCmpTotal
312051    +          +     1.30327962429821 * S_Frq  +     8.11675617892245 * S_Income
312052    +          +     1.26763916951276 * S_Mnt  +     -0.2686825897259 *
312053    +        S_MntGoldProds  +    -1.42114074651211 * S_MntMeatProducts
312054    +          +    -1.76821642666458 * S_MntWines  +    -1.91323522505912 *
312055    +        S_NumDistPurchases  +    -0.12369288380556 * S_RFMstat
312056    +          +     -0.5961110037328 * S_RMntFrq  +     1.45489277444882 *
312057    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.22275326994217 * S_AcceptedCmpTotal + 1.30327962429821 * 
S_Frq + 8.11675617892245 * S_Income + 1.26763916951276 * S_Mnt + -0.2686825897259 * 
S_MntGoldProds + -1.42114074651211 * S_MntMeatProducts + -1.76821642666458 * S_MntWines + 
-1.91323522505912 * S_NumDistPurchases + -0.12369288380556 * S_RFMstat + -0.5961110037328 * 
S_RMntFrq + 1.45489277444882 * S_Recency ;
312058    +   H1x1_4  =     0.65694888778783 * S_AcceptedCmpTotal
312059    +          +    -2.46645772884275 * S_Frq  +     2.56090496460471 * S_Income
312060    +          +     1.47469720902355 * S_Mnt  +    -0.23044042020952 *
312061    +        S_MntGoldProds  +     1.09436190473143 * S_MntMeatProducts
312062    +          +    -0.07872477007968 * S_MntWines  +     2.35913880285028 *
312063    +        S_NumDistPurchases  +     0.36553596420262 * S_RFMstat
312064    +          +    -1.52014700293876 * S_RMntFrq  +    -1.62001903467763 *
312065    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.65694888778783 * S_AcceptedCmpTotal + -2.46645772884275 * 
S_Frq + 2.56090496460471 * S_Income + 1.47469720902355 * S_Mnt + -0.23044042020952 * 
S_MntGoldProds + 1.09436190473143 * S_MntMeatProducts + -0.07872477007968 * S_MntWines + 
2.35913880285028 * S_NumDistPurchases + 0.36553596420262 * S_RFMstat + -1.52014700293876 * 
S_RMntFrq + -1.62001903467763 * S_Recency ;
312066    +   H1x1_5  =    -0.06045586654134 * S_AcceptedCmpTotal
312067    +          +    -1.51896554067022 * S_Frq  +    -0.77690899609172 * S_Income
312068    +          +    -3.83443076797312 * S_Mnt  +    -0.49066287190692 *
312069    +        S_MntGoldProds  +     7.74304126889741 * S_MntMeatProducts
312070    +          +     0.97717560040665 * S_MntWines  +     2.55833904797689 *
312071    +        S_NumDistPurchases  +     3.33552253786577 * S_RFMstat
312072    +          +     2.15128325510301 * S_RMntFrq  +     0.51475149451235 *
312073    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.06045586654134 * S_AcceptedCmpTotal + -1.51896554067022 * 
S_Frq + -0.77690899609172 * S_Income + -3.83443076797312 * S_Mnt + -0.49066287190692 * 
S_MntGoldProds + 7.74304126889741 * S_MntMeatProducts + 0.97717560040665 * S_MntWines + 
2.55833904797689 * S_NumDistPurchases + 3.33552253786577 * S_RFMstat + 2.15128325510301 * 
S_RMntFrq + 0.51475149451235 * S_Recency ;
312074    +   H1x1_6  =    -2.00102225492393 * S_AcceptedCmpTotal
312075    +          +    -0.55313430858805 * S_Frq  +    -2.80039880440251 * S_Income
312076    +          +    -0.52613628819852 * S_Mnt  +    -1.25580169134654 *
312077    +        S_MntGoldProds  +    -1.44511464402737 * S_MntMeatProducts
312078    +          +    -0.66744558284147 * S_MntWines  +     3.15612301024597 *
312079    +        S_NumDistPurchases  +    -0.57805918326136 * S_RFMstat
312080    +          +     0.13349014037678 * S_RMntFrq  +    -1.97053621157132 *
312081    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -2.00102225492393 * S_AcceptedCmpTotal + -0.55313430858805 * 
S_Frq + -2.80039880440251 * S_Income + -0.52613628819852 * S_Mnt + -1.25580169134654 * 
S_MntGoldProds + -1.44511464402737 * S_MntMeatProducts + -0.66744558284147 * S_MntWines + 
3.15612301024597 * S_NumDistPurchases + -0.57805918326136 * S_RFMstat + 0.13349014037678 * 
S_RMntFrq + -1.97053621157132 * S_Recency ;
312082    +   H1x1_1  = H1x1_1  +     1.38825657874217 * G_Marital_Status0
312083    +          +     0.90195662603521 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 1.38825657874217 * G_Marital_Status0 + 
0.90195662603521 * G_Marital_Status1 ;
312084    +   H1x1_2  = H1x1_2  +     0.88138395159348 * G_Marital_Status0
312085    +          +    -0.49019446056296 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.88138395159348 * G_Marital_Status0 + 
-0.49019446056296 * G_Marital_Status1 ;
312086    +   H1x1_3  = H1x1_3  +     0.30990330359421 * G_Marital_Status0
312087    +          +     1.10544938214372 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.30990330359421 * G_Marital_Status0 + 
1.10544938214372 * G_Marital_Status1 ;
312088    +   H1x1_4  = H1x1_4  +     1.70251598227875 * G_Marital_Status0
312089    +          +     0.87683669160259 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 1.70251598227875 * G_Marital_Status0 + 
0.87683669160259 * G_Marital_Status1 ;
312090    +   H1x1_5  = H1x1_5  +    -0.14678805736317 * G_Marital_Status0
312091    +          +    -0.13246180955576 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.14678805736317 * G_Marital_Status0 + 
-0.13246180955576 * G_Marital_Status1 ;
312092    +   H1x1_6  = H1x1_6  +     -0.6511155024316 * G_Marital_Status0
312093    +          +     0.24707257141342 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + -0.6511155024316 * G_Marital_Status0 + 
0.24707257141342 * G_Marital_Status1 ;
312094    +   H1x1_1  =     4.82277728923766 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 4.82277728923766 + H1x1_1 ;
312095    +   H1x1_2  =     2.49777705822347 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 2.49777705822347 + H1x1_2 ;
312096    +   H1x1_3  =    -0.93289135595041 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.93289135595041 + H1x1_3 ;
312097    +   H1x1_4  =    -7.80421802944398 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -7.80421802944398 + H1x1_4 ;
312098    +   H1x1_5  =     6.46115064589724 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 6.46115064589724 + H1x1_5 ;
312099    +   H1x1_6  =     3.21096596966888 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 3.21096596966888 + H1x1_6 ;
312100    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
312101    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
312102    +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
312103    +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
312104    +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
312105    +   H1x1_4  = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
312106    +   H1x1_5  = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_5 = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
312107    +   H1x1_6  = 1.0 / (1.0 + EXP(MIN( - H1x1_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_6 = 1.0 / (1.0 + EXP(MIN( - H1x1_6 , _EXP_BAR)));
312108    +END;
MPRINT(EM_DIAGRAM):   END;
312109    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
312110    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
312111    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
312112    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
312113    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
312114    +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
312115    +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
312116    +END;
MPRINT(EM_DIAGRAM):   END;
312117    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
312118    +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
312119    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
312120    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
312121    +   H1x2_1  =    -0.30711239275958 * S_AcceptedCmpTotal
312122    +          +    -1.45395291114633 * S_Frq  +     0.87594950917085 * S_Income
312123    +          +    -0.72639274085105 * S_Mnt  +    -2.47797355837112 *
312124    +        S_MntGoldProds  +     0.68384082088335 * S_MntMeatProducts
312125    +          +     0.65600644755641 * S_MntWines  +      0.8163360453447 *
312126    +        S_NumDistPurchases  +    -1.09587924440912 * S_RFMstat
312127    +          +     1.48347762248449 * S_RMntFrq  +      0.2335216261547 *
312128    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.30711239275958 * S_AcceptedCmpTotal + -1.45395291114633 * 
S_Frq + 0.87594950917085 * S_Income + -0.72639274085105 * S_Mnt + -2.47797355837112 * 
S_MntGoldProds + 0.68384082088335 * S_MntMeatProducts + 0.65600644755641 * S_MntWines + 
0.8163360453447 * S_NumDistPurchases + -1.09587924440912 * S_RFMstat + 1.48347762248449 * 
S_RMntFrq + 0.2335216261547 * S_Recency ;
312129    +   H1x2_2  =     2.57777770372275 * S_AcceptedCmpTotal
312130    +          +    -0.08699050003337 * S_Frq  +      0.9048262025585 * S_Income
312131    +          +     0.80716409242733 * S_Mnt  +     0.92862088643502 *
312132    +        S_MntGoldProds  +     1.28722996014956 * S_MntMeatProducts
312133    +          +    -0.78107065942411 * S_MntWines  +     2.29787925805392 *
312134    +        S_NumDistPurchases  +     -0.7095984076797 * S_RFMstat
312135    +          +    -0.75276407747323 * S_RMntFrq  +    -2.14859674388241 *
312136    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 2.57777770372275 * S_AcceptedCmpTotal + -0.08699050003337 * 
S_Frq + 0.9048262025585 * S_Income + 0.80716409242733 * S_Mnt + 0.92862088643502 * 
S_MntGoldProds + 1.28722996014956 * S_MntMeatProducts + -0.78107065942411 * S_MntWines + 
2.29787925805392 * S_NumDistPurchases + -0.7095984076797 * S_RFMstat + -0.75276407747323 * 
S_RMntFrq + -2.14859674388241 * S_Recency ;
312137    +   H1x2_3  =    -0.19225474668372 * S_AcceptedCmpTotal
312138    +          +     -0.5399776824486 * S_Frq  +    -0.33342356858106 * S_Income
312139    +          +      0.4662552460972 * S_Mnt  +    -0.83897697999245 *
312140    +        S_MntGoldProds  +    -1.02069791829975 * S_MntMeatProducts
312141    +          +    -0.77568646594215 * S_MntWines  +    -2.64172584610703 *
312142    +        S_NumDistPurchases  +     1.22587043380457 * S_RFMstat
312143    +          +    -1.22124295004478 * S_RMntFrq  +     0.72727673065668 *
312144    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.19225474668372 * S_AcceptedCmpTotal + -0.5399776824486 * 
S_Frq + -0.33342356858106 * S_Income + 0.4662552460972 * S_Mnt + -0.83897697999245 * 
S_MntGoldProds + -1.02069791829975 * S_MntMeatProducts + -0.77568646594215 * S_MntWines + 
-2.64172584610703 * S_NumDistPurchases + 1.22587043380457 * S_RFMstat + -1.22124295004478 * 
S_RMntFrq + 0.72727673065668 * S_Recency ;
312145    +   H1x2_4  =     1.07963833884217 * S_AcceptedCmpTotal
312146    +          +    -1.30033554705908 * S_Frq  +     0.80740030463615 * S_Income
312147    +          +    -1.73808129607223 * S_Mnt  +     1.21346647777818 *
312148    +        S_MntGoldProds  +     0.69007605858806 * S_MntMeatProducts
312149    +          +     0.31548401471349 * S_MntWines  +    -0.45355998387313 *
312150    +        S_NumDistPurchases  +     1.13504256910361 * S_RFMstat
312151    +          +    -0.45561637629388 * S_RMntFrq  +    -1.42094697023704 *
312152    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 1.07963833884217 * S_AcceptedCmpTotal + -1.30033554705908 * 
S_Frq + 0.80740030463615 * S_Income + -1.73808129607223 * S_Mnt + 1.21346647777818 * 
S_MntGoldProds + 0.69007605858806 * S_MntMeatProducts + 0.31548401471349 * S_MntWines + 
-0.45355998387313 * S_NumDistPurchases + 1.13504256910361 * S_RFMstat + -0.45561637629388 * 
S_RMntFrq + -1.42094697023704 * S_Recency ;
312153    +   H1x2_5  =     0.30163018627699 * S_AcceptedCmpTotal
312154    +          +    -0.73947459722676 * S_Frq  +      0.3117229426353 * S_Income
312155    +          +     1.78189396082002 * S_Mnt  +    -1.51478593904163 *
312156    +        S_MntGoldProds  +    -1.30328540691967 * S_MntMeatProducts
312157    +          +     0.48947220852953 * S_MntWines  +     0.25380878841531 *
312158    +        S_NumDistPurchases  +    -0.09429027402746 * S_RFMstat
312159    +          +     2.79720421337828 * S_RMntFrq  +    -0.08024855242737 *
312160    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 0.30163018627699 * S_AcceptedCmpTotal + -0.73947459722676 * 
S_Frq + 0.3117229426353 * S_Income + 1.78189396082002 * S_Mnt + -1.51478593904163 * 
S_MntGoldProds + -1.30328540691967 * S_MntMeatProducts + 0.48947220852953 * S_MntWines + 
0.25380878841531 * S_NumDistPurchases + -0.09429027402746 * S_RFMstat + 2.79720421337828 * 
S_RMntFrq + -0.08024855242737 * S_Recency ;
312161    +   H1x2_6  =    -0.05006047355159 * S_AcceptedCmpTotal
312162    +          +     0.01838632143297 * S_Frq  +    -1.04892137940395 * S_Income
312163    +          +    -0.33949418476309 * S_Mnt  +     1.27820886482898 *
312164    +        S_MntGoldProds  +      0.1541042926193 * S_MntMeatProducts
312165    +          +    -0.30996391960135 * S_MntWines  +     0.69532310497927 *
312166    +        S_NumDistPurchases  +    -0.51247610421467 * S_RFMstat
312167    +          +    -0.87640728095011 * S_RMntFrq  +     1.79661996586627 *
312168    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_6 = -0.05006047355159 * S_AcceptedCmpTotal + 0.01838632143297 * 
S_Frq + -1.04892137940395 * S_Income + -0.33949418476309 * S_Mnt + 1.27820886482898 * 
S_MntGoldProds + 0.1541042926193 * S_MntMeatProducts + -0.30996391960135 * S_MntWines + 
0.69532310497927 * S_NumDistPurchases + -0.51247610421467 * S_RFMstat + -0.87640728095011 * 
S_RMntFrq + 1.79661996586627 * S_Recency ;
312169    +   H1x2_1  = H1x2_1  +    -1.52372947412233 * G_Marital_Status0
312170    +          +     0.61190614442174 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -1.52372947412233 * G_Marital_Status0 + 
0.61190614442174 * G_Marital_Status1 ;
312171    +   H1x2_2  = H1x2_2  +     -0.2899112326334 * G_Marital_Status0
312172    +          +    -0.43943770039245 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.2899112326334 * G_Marital_Status0 + 
-0.43943770039245 * G_Marital_Status1 ;
312173    +   H1x2_3  = H1x2_3  +    -1.30447843367338 * G_Marital_Status0
312174    +          +     0.36969296112687 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -1.30447843367338 * G_Marital_Status0 + 
0.36969296112687 * G_Marital_Status1 ;
312175    +   H1x2_4  = H1x2_4  +     1.06192432928756 * G_Marital_Status0
312176    +          +    -0.48897798100871 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 1.06192432928756 * G_Marital_Status0 + 
-0.48897798100871 * G_Marital_Status1 ;
312177    +   H1x2_5  = H1x2_5  +     1.24023950705702 * G_Marital_Status0
312178    +          +     -0.0768652239427 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 1.24023950705702 * G_Marital_Status0 + 
-0.0768652239427 * G_Marital_Status1 ;
312179    +   H1x2_6  = H1x2_6  +    -0.79854804689099 * G_Marital_Status0
312180    +          +    -0.58590001312977 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + -0.79854804689099 * G_Marital_Status0 + 
-0.58590001312977 * G_Marital_Status1 ;
312181    +   H1x2_1  =    -1.24057312487712 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -1.24057312487712 + H1x2_1 ;
312182    +   H1x2_2  =    -0.68291139361923 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.68291139361923 + H1x2_2 ;
312183    +   H1x2_3  =     1.06420344729961 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = 1.06420344729961 + H1x2_3 ;
312184    +   H1x2_4  =    -2.69713708678823 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -2.69713708678823 + H1x2_4 ;
312185    +   H1x2_5  =    -0.12447063994137 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.12447063994137 + H1x2_5 ;
312186    +   H1x2_6  =     -1.0719988986801 + H1x2_6 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = -1.0719988986801 + H1x2_6 ;
312187    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
312188    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
312189    +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
312190    +   H1x2_2  = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_2 = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
312191    +   H1x2_3  = 1.0 / (1.0 + EXP(MIN( - H1x2_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_3 = 1.0 / (1.0 + EXP(MIN( - H1x2_3 , _EXP_BAR)));
312192    +   H1x2_4  = 1.0 / (1.0 + EXP(MIN( - H1x2_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_4 = 1.0 / (1.0 + EXP(MIN( - H1x2_4 , _EXP_BAR)));
312193    +   H1x2_5  = 1.0 / (1.0 + EXP(MIN( - H1x2_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.0 / (1.0 + EXP(MIN( - H1x2_5 , _EXP_BAR)));
312194    +   H1x2_6  = 1.0 / (1.0 + EXP(MIN( - H1x2_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_6 = 1.0 / (1.0 + EXP(MIN( - H1x2_6 , _EXP_BAR)));
312195    +END;
MPRINT(EM_DIAGRAM):   END;
312196    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
312197    +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
312198    +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
312199    +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
312200    +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
312201    +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
312202    +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
312203    +END;
MPRINT(EM_DIAGRAM):   END;
312204    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
312205    +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
312206    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
312207    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
312208    +   H1x3_1  =     0.58141896766328 * S_AcceptedCmpTotal
312209    +          +     0.88835106317195 * S_Frq  +     1.03397412242189 * S_Income
312210    +          +    -0.19511498332885 * S_Mnt  +     0.79222351582255 *
312211    +        S_MntGoldProds  +     1.84666352042484 * S_MntMeatProducts
312212    +          +     0.26439819900146 * S_MntWines  +    -0.49316136014272 *
312213    +        S_NumDistPurchases  +    -1.53931690693652 * S_RFMstat
312214    +          +     0.66163259224518 * S_RMntFrq  +    -0.05038100966606 *
312215    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.58141896766328 * S_AcceptedCmpTotal + 0.88835106317195 * 
S_Frq + 1.03397412242189 * S_Income + -0.19511498332885 * S_Mnt + 0.79222351582255 * 
S_MntGoldProds + 1.84666352042484 * S_MntMeatProducts + 0.26439819900146 * S_MntWines + 
-0.49316136014272 * S_NumDistPurchases + -1.53931690693652 * S_RFMstat + 0.66163259224518 * 
S_RMntFrq + -0.05038100966606 * S_Recency ;
312216    +   H1x3_2  =    -0.66965742898236 * S_AcceptedCmpTotal
312217    +          +     0.11439761295336 * S_Frq  +      0.4311111590428 * S_Income
312218    +          +     0.56419594384106 * S_Mnt  +    -2.58586026844722 *
312219    +        S_MntGoldProds  +     0.84843617907069 * S_MntMeatProducts
312220    +          +    -0.40949465894409 * S_MntWines  +    -1.12254199224924 *
312221    +        S_NumDistPurchases  +    -1.73672932018459 * S_RFMstat
312222    +          +     0.60800652848154 * S_RMntFrq  +     0.90023461529092 *
312223    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_2 = -0.66965742898236 * S_AcceptedCmpTotal + 0.11439761295336 * 
S_Frq + 0.4311111590428 * S_Income + 0.56419594384106 * S_Mnt + -2.58586026844722 * 
S_MntGoldProds + 0.84843617907069 * S_MntMeatProducts + -0.40949465894409 * S_MntWines + 
-1.12254199224924 * S_NumDistPurchases + -1.73672932018459 * S_RFMstat + 0.60800652848154 * 
S_RMntFrq + 0.90023461529092 * S_Recency ;
312224    +   H1x3_3  =     0.64116254904887 * S_AcceptedCmpTotal
312225    +          +     0.36521168161033 * S_Frq  +    -1.65592742965949 * S_Income
312226    +          +    -1.13010637801203 * S_Mnt  +     1.18435160743823 *
312227    +        S_MntGoldProds  +     0.61014939723339 * S_MntMeatProducts
312228    +          +     0.57967362971329 * S_MntWines  +    -0.00705774722842 *
312229    +        S_NumDistPurchases  +    -0.09732595050305 * S_RFMstat
312230    +          +    -1.58268748567816 * S_RMntFrq  +    -1.00117301133743 *
312231    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_3 = 0.64116254904887 * S_AcceptedCmpTotal + 0.36521168161033 * 
S_Frq + -1.65592742965949 * S_Income + -1.13010637801203 * S_Mnt + 1.18435160743823 * 
S_MntGoldProds + 0.61014939723339 * S_MntMeatProducts + 0.57967362971329 * S_MntWines + 
-0.00705774722842 * S_NumDistPurchases + -0.09732595050305 * S_RFMstat + -1.58268748567816 * 
S_RMntFrq + -1.00117301133743 * S_Recency ;
312232    +   H1x3_4  =    -2.38943135123073 * S_AcceptedCmpTotal
312233    +          +     0.50616478854457 * S_Frq  +     1.68985840818789 * S_Income
312234    +          +    -0.51011802824515 * S_Mnt  +     1.25167622017055 *
312235    +        S_MntGoldProds  +    -0.78430871718616 * S_MntMeatProducts
312236    +          +     0.97685472578698 * S_MntWines  +    -0.66992601103029 *
312237    +        S_NumDistPurchases  +    -0.28545877583545 * S_RFMstat
312238    +          +     0.52712575990538 * S_RMntFrq  +     1.51096273676103 *
312239    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_4 = -2.38943135123073 * S_AcceptedCmpTotal + 0.50616478854457 * 
S_Frq + 1.68985840818789 * S_Income + -0.51011802824515 * S_Mnt + 1.25167622017055 * 
S_MntGoldProds + -0.78430871718616 * S_MntMeatProducts + 0.97685472578698 * S_MntWines + 
-0.66992601103029 * S_NumDistPurchases + -0.28545877583545 * S_RFMstat + 0.52712575990538 * 
S_RMntFrq + 1.51096273676103 * S_Recency ;
312240    +   H1x3_5  =     0.27293739636898 * S_AcceptedCmpTotal
312241    +          +     0.44515009768765 * S_Frq  +     -0.4521347788574 * S_Income
312242    +          +     0.43943223859703 * S_Mnt  +     1.17781847894182 *
312243    +        S_MntGoldProds  +    -0.67700757595581 * S_MntMeatProducts
312244    +          +    -1.46437355846341 * S_MntWines  +    -0.09365592083561 *
312245    +        S_NumDistPurchases  +     0.94926901433762 * S_RFMstat
312246    +          +     2.40216905424957 * S_RMntFrq  +     0.65859109347516 *
312247    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_5 = 0.27293739636898 * S_AcceptedCmpTotal + 0.44515009768765 * 
S_Frq + -0.4521347788574 * S_Income + 0.43943223859703 * S_Mnt + 1.17781847894182 * 
S_MntGoldProds + -0.67700757595581 * S_MntMeatProducts + -1.46437355846341 * S_MntWines + 
-0.09365592083561 * S_NumDistPurchases + 0.94926901433762 * S_RFMstat + 2.40216905424957 * 
S_RMntFrq + 0.65859109347516 * S_Recency ;
312248    +   H1x3_6  =     0.79944121174459 * S_AcceptedCmpTotal
312249    +          +     0.19594924011495 * S_Frq  +     1.07233338144708 * S_Income
312250    +          +    -0.39577530492174 * S_Mnt  +    -0.18122578134776 *
312251    +        S_MntGoldProds  +    -0.26451891721245 * S_MntMeatProducts
312252    +          +    -0.86856724355925 * S_MntWines  +    -1.81909916765471 *
312253    +        S_NumDistPurchases  +     1.03983663011092 * S_RFMstat
312254    +          +    -0.86768378180894 * S_RMntFrq  +     0.40747604583851 *
312255    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_6 = 0.79944121174459 * S_AcceptedCmpTotal + 0.19594924011495 * 
S_Frq + 1.07233338144708 * S_Income + -0.39577530492174 * S_Mnt + -0.18122578134776 * 
S_MntGoldProds + -0.26451891721245 * S_MntMeatProducts + -0.86856724355925 * S_MntWines + 
-1.81909916765471 * S_NumDistPurchases + 1.03983663011092 * S_RFMstat + -0.86768378180894 * 
S_RMntFrq + 0.40747604583851 * S_Recency ;
312256    +   H1x3_1  = H1x3_1  +    -1.44819834546359 * G_Marital_Status0
312257    +          +     2.03049158937708 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + -1.44819834546359 * G_Marital_Status0 + 
2.03049158937708 * G_Marital_Status1 ;
312258    +   H1x3_2  = H1x3_2  +     0.32142977922032 * G_Marital_Status0
312259    +          +     0.95456795317325 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + 0.32142977922032 * G_Marital_Status0 + 
0.95456795317325 * G_Marital_Status1 ;
312260    +   H1x3_3  = H1x3_3  +    -0.05546140673943 * G_Marital_Status0
312261    +          +    -0.64267205173982 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 + -0.05546140673943 * G_Marital_Status0 + 
-0.64267205173982 * G_Marital_Status1 ;
312262    +   H1x3_4  = H1x3_4  +     0.67758459902812 * G_Marital_Status0
312263    +          +    -0.13878277097624 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 + 0.67758459902812 * G_Marital_Status0 + 
-0.13878277097624 * G_Marital_Status1 ;
312264    +   H1x3_5  = H1x3_5  +      0.2080585980069 * G_Marital_Status0
312265    +          +     0.39530416624983 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 + 0.2080585980069 * G_Marital_Status0 + 0.39530416624983 
* G_Marital_Status1 ;
312266    +   H1x3_6  = H1x3_6  +    -0.56268194068278 * G_Marital_Status0
312267    +          +    -1.38939757582535 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x3_6 = H1x3_6 + -0.56268194068278 * G_Marital_Status0 + 
-1.38939757582535 * G_Marital_Status1 ;
312268    +   H1x3_1  =    -0.02110450300917 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = -0.02110450300917 + H1x3_1 ;
312269    +   H1x3_2  =     0.68400964836412 + H1x3_2 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = 0.68400964836412 + H1x3_2 ;
312270    +   H1x3_3  =     1.27295692924548 + H1x3_3 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = 1.27295692924548 + H1x3_3 ;
312271    +   H1x3_4  =     0.57759340173339 + H1x3_4 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = 0.57759340173339 + H1x3_4 ;
312272    +   H1x3_5  =     0.68658947855937 + H1x3_5 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = 0.68658947855937 + H1x3_5 ;
312273    +   H1x3_6  =     0.96960260915788 + H1x3_6 ;
MPRINT(EM_DIAGRAM):   H1x3_6 = 0.96960260915788 + H1x3_6 ;
312274    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
312275    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
312276    +   H1x3_1  = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_1 = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
312277    +   H1x3_2  = 1.0 / (1.0 + EXP(MIN( - H1x3_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_2 = 1.0 / (1.0 + EXP(MIN( - H1x3_2 , _EXP_BAR)));
312278    +   H1x3_3  = 1.0 / (1.0 + EXP(MIN( - H1x3_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_3 = 1.0 / (1.0 + EXP(MIN( - H1x3_3 , _EXP_BAR)));
312279    +   H1x3_4  = 1.0 / (1.0 + EXP(MIN( - H1x3_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_4 = 1.0 / (1.0 + EXP(MIN( - H1x3_4 , _EXP_BAR)));
312280    +   H1x3_5  = 1.0 / (1.0 + EXP(MIN( - H1x3_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_5 = 1.0 / (1.0 + EXP(MIN( - H1x3_5 , _EXP_BAR)));
312281    +   H1x3_6  = 1.0 / (1.0 + EXP(MIN( - H1x3_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_6 = 1.0 / (1.0 + EXP(MIN( - H1x3_6 , _EXP_BAR)));
312282    +END;
MPRINT(EM_DIAGRAM):   END;
312283    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
312284    +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
312285    +   H1x3_2  = .;
MPRINT(EM_DIAGRAM):   H1x3_2 = .;
312286    +   H1x3_3  = .;
MPRINT(EM_DIAGRAM):   H1x3_3 = .;
312287    +   H1x3_4  = .;
MPRINT(EM_DIAGRAM):   H1x3_4 = .;
312288    +   H1x3_5  = .;
MPRINT(EM_DIAGRAM):   H1x3_5 = .;
312289    +   H1x3_6  = .;
MPRINT(EM_DIAGRAM):   H1x3_6 = .;
312290    +END;
MPRINT(EM_DIAGRAM):   END;
312291    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
312292    +*** Writing the Node H1x4_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x4_ ;
312293    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
312294    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
312295    +   H1x4_1  =     1.13261766886471 * S_AcceptedCmpTotal
312296    +          +     0.78824304763496 * S_Frq  +    -1.86817100110189 * S_Income
312297    +          +    -1.58760227599089 * S_Mnt  +     -1.1330886213304 *
312298    +        S_MntGoldProds  +     0.82082069255126 * S_MntMeatProducts
312299    +          +    -0.34149449572975 * S_MntWines  +     0.45944109671738 *
312300    +        S_NumDistPurchases  +     2.00910621486809 * S_RFMstat
312301    +          +     -1.8305685414059 * S_RMntFrq  +     1.46038466341548 *
312302    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x4_1 = 1.13261766886471 * S_AcceptedCmpTotal + 0.78824304763496 * 
S_Frq + -1.86817100110189 * S_Income + -1.58760227599089 * S_Mnt + -1.1330886213304 * 
S_MntGoldProds + 0.82082069255126 * S_MntMeatProducts + -0.34149449572975 * S_MntWines + 
0.45944109671738 * S_NumDistPurchases + 2.00910621486809 * S_RFMstat + -1.8305685414059 * 
S_RMntFrq + 1.46038466341548 * S_Recency ;
312303    +   H1x4_2  =    -0.63266188932348 * S_AcceptedCmpTotal
312304    +          +    -0.01183486383209 * S_Frq  +    -1.07560568030024 * S_Income
312305    +          +    -1.30988288899902 * S_Mnt  +     2.15841401397408 *
312306    +        S_MntGoldProds  +    -1.27808965763357 * S_MntMeatProducts
312307    +          +     2.04886920467378 * S_MntWines  +     0.09322121012781 *
312308    +        S_NumDistPurchases  +    -0.37050311259862 * S_RFMstat
312309    +          +     0.68085578996214 * S_RMntFrq  +     1.48508197039719 *
312310    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x4_2 = -0.63266188932348 * S_AcceptedCmpTotal + -0.01183486383209 * 
S_Frq + -1.07560568030024 * S_Income + -1.30988288899902 * S_Mnt + 2.15841401397408 * 
S_MntGoldProds + -1.27808965763357 * S_MntMeatProducts + 2.04886920467378 * S_MntWines + 
0.09322121012781 * S_NumDistPurchases + -0.37050311259862 * S_RFMstat + 0.68085578996214 * 
S_RMntFrq + 1.48508197039719 * S_Recency ;
312311    +   H1x4_3  =    -0.53647455024397 * S_AcceptedCmpTotal
312312    +          +     0.24459727005497 * S_Frq  +     0.30319155437277 * S_Income
312313    +          +     0.25206471395865 * S_Mnt  +     0.43917953957135 *
312314    +        S_MntGoldProds  +    -0.10933570154764 * S_MntMeatProducts
312315    +          +    -0.04059236687792 * S_MntWines  +     0.35677739352706 *
312316    +        S_NumDistPurchases  +     1.38086899403811 * S_RFMstat
312317    +          +    -0.32751457592661 * S_RMntFrq  +    -0.15926282047245 *
312318    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x4_3 = -0.53647455024397 * S_AcceptedCmpTotal + 0.24459727005497 * 
S_Frq + 0.30319155437277 * S_Income + 0.25206471395865 * S_Mnt + 0.43917953957135 * 
S_MntGoldProds + -0.10933570154764 * S_MntMeatProducts + -0.04059236687792 * S_MntWines + 
0.35677739352706 * S_NumDistPurchases + 1.38086899403811 * S_RFMstat + -0.32751457592661 * 
S_RMntFrq + -0.15926282047245 * S_Recency ;
312319    +   H1x4_4  =     0.24225159923716 * S_AcceptedCmpTotal
312320    +          +    -0.83397540163538 * S_Frq  +     0.65454415304883 * S_Income
312321    +          +     -2.1008417113285 * S_Mnt  +     1.46444392612369 *
312322    +        S_MntGoldProds  +     1.98843066844745 * S_MntMeatProducts
312323    +          +    -0.31310064337061 * S_MntWines  +     0.56236194506314 *
312324    +        S_NumDistPurchases  +    -0.20512833160409 * S_RFMstat
312325    +          +    -0.20631901696385 * S_RMntFrq  +    -0.01945293751142 *
312326    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x4_4 = 0.24225159923716 * S_AcceptedCmpTotal + -0.83397540163538 * 
S_Frq + 0.65454415304883 * S_Income + -2.1008417113285 * S_Mnt + 1.46444392612369 * 
S_MntGoldProds + 1.98843066844745 * S_MntMeatProducts + -0.31310064337061 * S_MntWines + 
0.56236194506314 * S_NumDistPurchases + -0.20512833160409 * S_RFMstat + -0.20631901696385 * 
S_RMntFrq + -0.01945293751142 * S_Recency ;
312327    +   H1x4_5  =     -0.2800504242999 * S_AcceptedCmpTotal
312328    +          +     0.11767474732461 * S_Frq  +    -1.78109558633383 * S_Income
312329    +          +    -0.83275451396797 * S_Mnt  +     0.13772739876237 *
312330    +        S_MntGoldProds  +    -0.00084509726748 * S_MntMeatProducts
312331    +          +     0.92081955236291 * S_MntWines  +    -0.84663906140096 *
312332    +        S_NumDistPurchases  +     1.07425261538134 * S_RFMstat
312333    +          +    -0.27830850445101 * S_RMntFrq  +     0.74380794599056 *
312334    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x4_5 = -0.2800504242999 * S_AcceptedCmpTotal + 0.11767474732461 * 
S_Frq + -1.78109558633383 * S_Income + -0.83275451396797 * S_Mnt + 0.13772739876237 * 
S_MntGoldProds + -0.00084509726748 * S_MntMeatProducts + 0.92081955236291 * S_MntWines + 
-0.84663906140096 * S_NumDistPurchases + 1.07425261538134 * S_RFMstat + -0.27830850445101 * 
S_RMntFrq + 0.74380794599056 * S_Recency ;
312335    +   H1x4_6  =     -1.1119291723593 * S_AcceptedCmpTotal
312336    +          +     0.56304851350844 * S_Frq  +     0.73567113537541 * S_Income
312337    +          +    -3.12306246450604 * S_Mnt  +    -0.91316403938439 *
312338    +        S_MntGoldProds  +    -2.69628755197256 * S_MntMeatProducts
312339    +          +     0.85746867824621 * S_MntWines  +    -0.36724035406906 *
312340    +        S_NumDistPurchases  +     0.28568968295985 * S_RFMstat
312341    +          +    -0.93954323577146 * S_RMntFrq  +     0.85268992665591 *
312342    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x4_6 = -1.1119291723593 * S_AcceptedCmpTotal + 0.56304851350844 * 
S_Frq + 0.73567113537541 * S_Income + -3.12306246450604 * S_Mnt + -0.91316403938439 * 
S_MntGoldProds + -2.69628755197256 * S_MntMeatProducts + 0.85746867824621 * S_MntWines + 
-0.36724035406906 * S_NumDistPurchases + 0.28568968295985 * S_RFMstat + -0.93954323577146 * 
S_RMntFrq + 0.85268992665591 * S_Recency ;
312343    +   H1x4_1  = H1x4_1  +    -0.41637670428316 * G_Marital_Status0
312344    +          +     1.82577173192743 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x4_1 = H1x4_1 + -0.41637670428316 * G_Marital_Status0 + 
1.82577173192743 * G_Marital_Status1 ;
312345    +   H1x4_2  = H1x4_2  +     1.30084682846119 * G_Marital_Status0
312346    +          +     1.86494194086223 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x4_2 = H1x4_2 + 1.30084682846119 * G_Marital_Status0 + 
1.86494194086223 * G_Marital_Status1 ;
312347    +   H1x4_3  = H1x4_3  +    -2.51039247492524 * G_Marital_Status0
312348    +          +    -0.78535196846115 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x4_3 = H1x4_3 + -2.51039247492524 * G_Marital_Status0 + 
-0.78535196846115 * G_Marital_Status1 ;
312349    +   H1x4_4  = H1x4_4  +    -1.66536345681649 * G_Marital_Status0
312350    +          +    -1.13643623224979 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x4_4 = H1x4_4 + -1.66536345681649 * G_Marital_Status0 + 
-1.13643623224979 * G_Marital_Status1 ;
312351    +   H1x4_5  = H1x4_5  +     0.34381083459151 * G_Marital_Status0
312352    +          +    -0.50611098994468 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x4_5 = H1x4_5 + 0.34381083459151 * G_Marital_Status0 + 
-0.50611098994468 * G_Marital_Status1 ;
312353    +   H1x4_6  = H1x4_6  +    -0.50144547845039 * G_Marital_Status0
312354    +          +     1.05855030017376 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x4_6 = H1x4_6 + -0.50144547845039 * G_Marital_Status0 + 
1.05855030017376 * G_Marital_Status1 ;
312355    +   H1x4_1  =     0.23907181959326 + H1x4_1 ;
MPRINT(EM_DIAGRAM):   H1x4_1 = 0.23907181959326 + H1x4_1 ;
312356    +   H1x4_2  =    -1.57201194785995 + H1x4_2 ;
MPRINT(EM_DIAGRAM):   H1x4_2 = -1.57201194785995 + H1x4_2 ;
312357    +   H1x4_3  =     2.06322674265618 + H1x4_3 ;
MPRINT(EM_DIAGRAM):   H1x4_3 = 2.06322674265618 + H1x4_3 ;
312358    +   H1x4_4  =     1.01469021578807 + H1x4_4 ;
MPRINT(EM_DIAGRAM):   H1x4_4 = 1.01469021578807 + H1x4_4 ;
312359    +   H1x4_5  =     1.07767489348013 + H1x4_5 ;
MPRINT(EM_DIAGRAM):   H1x4_5 = 1.07767489348013 + H1x4_5 ;
312360    +   H1x4_6  =     0.04477742816865 + H1x4_6 ;
MPRINT(EM_DIAGRAM):   H1x4_6 = 0.04477742816865 + H1x4_6 ;
312361    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
312362    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
312363    +   H1x4_1  = 1.0 / (1.0 + EXP(MIN( - H1x4_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x4_1 = 1.0 / (1.0 + EXP(MIN( - H1x4_1 , _EXP_BAR)));
312364    +   H1x4_2  = 1.0 / (1.0 + EXP(MIN( - H1x4_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x4_2 = 1.0 / (1.0 + EXP(MIN( - H1x4_2 , _EXP_BAR)));
312365    +   H1x4_3  = 1.0 / (1.0 + EXP(MIN( - H1x4_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x4_3 = 1.0 / (1.0 + EXP(MIN( - H1x4_3 , _EXP_BAR)));
312366    +   H1x4_4  = 1.0 / (1.0 + EXP(MIN( - H1x4_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x4_4 = 1.0 / (1.0 + EXP(MIN( - H1x4_4 , _EXP_BAR)));
312367    +   H1x4_5  = 1.0 / (1.0 + EXP(MIN( - H1x4_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x4_5 = 1.0 / (1.0 + EXP(MIN( - H1x4_5 , _EXP_BAR)));
312368    +   H1x4_6  = 1.0 / (1.0 + EXP(MIN( - H1x4_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x4_6 = 1.0 / (1.0 + EXP(MIN( - H1x4_6 , _EXP_BAR)));
312369    +END;
MPRINT(EM_DIAGRAM):   END;
312370    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
312371    +   H1x4_1  = .;
MPRINT(EM_DIAGRAM):   H1x4_1 = .;
312372    +   H1x4_2  = .;
MPRINT(EM_DIAGRAM):   H1x4_2 = .;
312373    +   H1x4_3  = .;
MPRINT(EM_DIAGRAM):   H1x4_3 = .;
312374    +   H1x4_4  = .;
MPRINT(EM_DIAGRAM):   H1x4_4 = .;
312375    +   H1x4_5  = .;
MPRINT(EM_DIAGRAM):   H1x4_5 = .;
312376    +   H1x4_6  = .;
MPRINT(EM_DIAGRAM):   H1x4_6 = .;
312377    +END;
MPRINT(EM_DIAGRAM):   END;
312378    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
312379    +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
312380    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
312381    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
312382    +   H2x1_1  =     1.57657363240028 * H1x1_1  +    -0.37699618626432 * H1x1_2
312383    +          +    -0.60919993629457 * H1x1_3  +     2.97257779188857 * H1x1_4
312384    +          +     4.47740938165819 * H1x1_5  +    -0.85059681057218 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.57657363240028 * H1x1_1 + -0.37699618626432 * H1x1_2 + 
-0.60919993629457 * H1x1_3 + 2.97257779188857 * H1x1_4 + 4.47740938165819 * H1x1_5 + 
-0.85059681057218 * H1x1_6 ;
312385    +   H2x1_2  =     0.58245150995434 * H1x1_1  +     1.31825599717827 * H1x1_2
312386    +          +    -0.46604129874265 * H1x1_3  +    -1.57880778011961 * H1x1_4
312387    +          +      0.1296024356855 * H1x1_5  +    -0.32310175742174 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 0.58245150995434 * H1x1_1 + 1.31825599717827 * H1x1_2 + 
-0.46604129874265 * H1x1_3 + -1.57880778011961 * H1x1_4 + 0.1296024356855 * H1x1_5 + 
-0.32310175742174 * H1x1_6 ;
312388    +   H2x1_3  =     0.08762368266386 * H1x1_1  +     -2.1587359786783 * H1x1_2
312389    +          +     0.53603825884818 * H1x1_3  +    -0.24087329015868 * H1x1_4
312390    +          +     0.03296173080719 * H1x1_5  +     0.01697480121243 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 0.08762368266386 * H1x1_1 + -2.1587359786783 * H1x1_2 + 
0.53603825884818 * H1x1_3 + -0.24087329015868 * H1x1_4 + 0.03296173080719 * H1x1_5 + 
0.01697480121243 * H1x1_6 ;
312391    +   H2x1_4  =    -0.11182680657167 * H1x1_1  +     0.78238566788271 * H1x1_2
312392    +          +    -0.32984662645651 * H1x1_3  +    -0.48952564803009 * H1x1_4
312393    +          +    -1.99607614008712 * H1x1_5  +     0.10016209874446 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -0.11182680657167 * H1x1_1 + 0.78238566788271 * H1x1_2 + 
-0.32984662645651 * H1x1_3 + -0.48952564803009 * H1x1_4 + -1.99607614008712 * H1x1_5 + 
0.10016209874446 * H1x1_6 ;
312394    +   H2x1_5  =     -1.2498866108229 * H1x1_1  +      3.2369796406078 * H1x1_2
312395    +          +      2.8181066223344 * H1x1_3  +    -3.11752751718664 * H1x1_4
312396    +          +    -0.69294382105442 * H1x1_5  +     1.50580112761945 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -1.2498866108229 * H1x1_1 + 3.2369796406078 * H1x1_2 + 
2.8181066223344 * H1x1_3 + -3.11752751718664 * H1x1_4 + -0.69294382105442 * H1x1_5 + 
1.50580112761945 * H1x1_6 ;
312397    +   H2x1_1  = H2x1_1  +     1.23510627062479 * H1x2_1
312398    +          +     0.24021661687189 * H1x2_2  +    -1.56696654026909 * H1x2_3
312399    +          +     1.87814576627429 * H1x2_4  +     0.77581978719058 * H1x2_5
312400    +          +    -0.36964326956968 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 1.23510627062479 * H1x2_1 + 0.24021661687189 * H1x2_2 
+ -1.56696654026909 * H1x2_3 + 1.87814576627429 * H1x2_4 + 0.77581978719058 * H1x2_5 + 
-0.36964326956968 * H1x2_6 ;
312401    +   H2x1_2  = H2x1_2  +     0.92347023180909 * H1x2_1
312402    +          +    -0.58884204034707 * H1x2_2  +     0.32527960762166 * H1x2_3
312403    +          +    -2.67192710315835 * H1x2_4  +     1.11142627890507 * H1x2_5
312404    +          +     -0.0675747785188 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.92347023180909 * H1x2_1 + -0.58884204034707 * H1x2_2 
+ 0.32527960762166 * H1x2_3 + -2.67192710315835 * H1x2_4 + 1.11142627890507 * H1x2_5 + 
-0.0675747785188 * H1x2_6 ;
312405    +   H2x1_3  = H2x1_3  +    -0.92500735470206 * H1x2_1
312406    +          +     0.02449601034461 * H1x2_2  +    -0.75716713196308 * H1x2_3
312407    +          +     0.16672538074212 * H1x2_4  +    -1.03440004099384 * H1x2_5
312408    +          +     0.20622228187831 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -0.92500735470206 * H1x2_1 + 0.02449601034461 * H1x2_2 
+ -0.75716713196308 * H1x2_3 + 0.16672538074212 * H1x2_4 + -1.03440004099384 * H1x2_5 + 
0.20622228187831 * H1x2_6 ;
312409    +   H2x1_4  = H2x1_4  +     1.25485096748114 * H1x2_1
312410    +          +     -0.2345670529973 * H1x2_2  +     1.00007865183196 * H1x2_3
312411    +          +    -0.19520365006597 * H1x2_4  +     0.15141232788955 * H1x2_5
312412    +          +     0.99704195296742 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 1.25485096748114 * H1x2_1 + -0.2345670529973 * H1x2_2 
+ 1.00007865183196 * H1x2_3 + -0.19520365006597 * H1x2_4 + 0.15141232788955 * H1x2_5 + 
0.99704195296742 * H1x2_6 ;
312413    +   H2x1_5  = H2x1_5  +    -0.65666404502833 * H1x2_1
312414    +          +     2.28944563427288 * H1x2_2  +    -0.53344610521696 * H1x2_3
312415    +          +      -0.793597979143 * H1x2_4  +     -0.5657184003534 * H1x2_5
312416    +          +     0.52117926766363 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + -0.65666404502833 * H1x2_1 + 2.28944563427288 * H1x2_2 
+ -0.53344610521696 * H1x2_3 + -0.793597979143 * H1x2_4 + -0.5657184003534 * H1x2_5 + 
0.52117926766363 * H1x2_6 ;
312417    +   H2x1_1  = H2x1_1  +    -0.22872297219456 * H1x3_1
312418    +          +     0.44130997341488 * H1x3_2  +     0.85543947016407 * H1x3_3
312419    +          +      0.9172319436964 * H1x3_4  +    -0.63323674278101 * H1x3_5
312420    +          +       0.010792162082 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -0.22872297219456 * H1x3_1 + 0.44130997341488 * H1x3_2 
+ 0.85543947016407 * H1x3_3 + 0.9172319436964 * H1x3_4 + -0.63323674278101 * H1x3_5 + 
0.010792162082 * H1x3_6 ;
312421    +   H2x1_2  = H2x1_2  +    -0.47961853683007 * H1x3_1
312422    +          +     0.67283234118014 * H1x3_2  +    -0.12148381681871 * H1x3_3
312423    +          +     0.11539127068604 * H1x3_4  +     0.71547134269459 * H1x3_5
312424    +          +     0.31051080747621 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -0.47961853683007 * H1x3_1 + 0.67283234118014 * H1x3_2 
+ -0.12148381681871 * H1x3_3 + 0.11539127068604 * H1x3_4 + 0.71547134269459 * H1x3_5 + 
0.31051080747621 * H1x3_6 ;
312425    +   H2x1_3  = H2x1_3  +     0.84914297140244 * H1x3_1
312426    +          +     0.52803158023536 * H1x3_2  +    -1.39949725219783 * H1x3_3
312427    +          +     0.69603350257472 * H1x3_4  +    -0.99298091528215 * H1x3_5
312428    +          +      0.4901677948096 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + 0.84914297140244 * H1x3_1 + 0.52803158023536 * H1x3_2 
+ -1.39949725219783 * H1x3_3 + 0.69603350257472 * H1x3_4 + -0.99298091528215 * H1x3_5 + 
0.4901677948096 * H1x3_6 ;
312429    +   H2x1_4  = H2x1_4  +     1.25437670540229 * H1x3_1
312430    +          +     0.10767112672867 * H1x3_2  +     -2.4886577317349 * H1x3_3
312431    +          +    -1.19999974192227 * H1x3_4  +     2.65195856746166 * H1x3_5
312432    +          +    -0.35850032269696 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 1.25437670540229 * H1x3_1 + 0.10767112672867 * H1x3_2 
+ -2.4886577317349 * H1x3_3 + -1.19999974192227 * H1x3_4 + 2.65195856746166 * H1x3_5 + 
-0.35850032269696 * H1x3_6 ;
312433    +   H2x1_5  = H2x1_5  +    -0.18873569038601 * H1x3_1
312434    +          +    -0.05695497456875 * H1x3_2  +    -1.09169714101723 * H1x3_3
312435    +          +     0.66962829232535 * H1x3_4  +     0.68262583745167 * H1x3_5
312436    +          +     0.91538472149247 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + -0.18873569038601 * H1x3_1 + -0.05695497456875 * 
H1x3_2 + -1.09169714101723 * H1x3_3 + 0.66962829232535 * H1x3_4 + 0.68262583745167 * H1x3_5 + 
0.91538472149247 * H1x3_6 ;
312437    +   H2x1_1  = H2x1_1  +    -0.77701371575001 * H1x4_1
312438    +          +    -1.54239140939922 * H1x4_2  +    -0.26570372401877 * H1x4_3
312439    +          +     0.00097824237229 * H1x4_4  +     0.57921309289721 * H1x4_5
312440    +          +     1.46692133055956 * H1x4_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -0.77701371575001 * H1x4_1 + -1.54239140939922 * 
H1x4_2 + -0.26570372401877 * H1x4_3 + 0.00097824237229 * H1x4_4 + 0.57921309289721 * H1x4_5 + 
1.46692133055956 * H1x4_6 ;
312441    +   H2x1_2  = H2x1_2  +     0.96564519202767 * H1x4_1
312442    +          +    -0.06466152110331 * H1x4_2  +    -0.66659637249467 * H1x4_3
312443    +          +     0.59673973270306 * H1x4_4  +     2.45492273841581 * H1x4_5
312444    +          +     -0.4804481967354 * H1x4_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.96564519202767 * H1x4_1 + -0.06466152110331 * H1x4_2 
+ -0.66659637249467 * H1x4_3 + 0.59673973270306 * H1x4_4 + 2.45492273841581 * H1x4_5 + 
-0.4804481967354 * H1x4_6 ;
312445    +   H2x1_3  = H2x1_3  +     0.75339074826799 * H1x4_1
312446    +          +     1.26373188682879 * H1x4_2  +     0.49419374749947 * H1x4_3
312447    +          +     1.26541916145956 * H1x4_4  +     0.10039190806961 * H1x4_5
312448    +          +    -0.79556185531974 * H1x4_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + 0.75339074826799 * H1x4_1 + 1.26373188682879 * H1x4_2 
+ 0.49419374749947 * H1x4_3 + 1.26541916145956 * H1x4_4 + 0.10039190806961 * H1x4_5 + 
-0.79556185531974 * H1x4_6 ;
312449    +   H2x1_4  = H2x1_4  +    -0.28271287281925 * H1x4_1
312450    +          +      2.1208193298333 * H1x4_2  +    -0.65223420232343 * H1x4_3
312451    +          +     0.02666229497558 * H1x4_4  +     0.72865787458027 * H1x4_5
312452    +          +    -0.22377472142722 * H1x4_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + -0.28271287281925 * H1x4_1 + 2.1208193298333 * H1x4_2 
+ -0.65223420232343 * H1x4_3 + 0.02666229497558 * H1x4_4 + 0.72865787458027 * H1x4_5 + 
-0.22377472142722 * H1x4_6 ;
312453    +   H2x1_5  = H2x1_5  +    -0.84067714042271 * H1x4_1
312454    +          +    -1.59141777016956 * H1x4_2  +     0.46077797807782 * H1x4_3
312455    +          +    -0.07031579794448 * H1x4_4  +     0.83754013895307 * H1x4_5
312456    +          +     0.49805259687865 * H1x4_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + -0.84067714042271 * H1x4_1 + -1.59141777016956 * 
H1x4_2 + 0.46077797807782 * H1x4_3 + -0.07031579794448 * H1x4_4 + 0.83754013895307 * H1x4_5 + 
0.49805259687865 * H1x4_6 ;
312457    +   H2x1_1  =     1.86496757154162 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.86496757154162 + H2x1_1 ;
312458    +   H2x1_2  =     0.46453634696909 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 0.46453634696909 + H2x1_2 ;
312459    +   H2x1_3  =     0.36165501609225 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 0.36165501609225 + H2x1_3 ;
312460    +   H2x1_4  =    -0.91790753889181 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -0.91790753889181 + H2x1_4 ;
312461    +   H2x1_5  =     2.82445131106489 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = 2.82445131106489 + H2x1_5 ;
312462    +   H2x1_6  = 0;
MPRINT(EM_DIAGRAM):   H2x1_6 = 0;
312463    +   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 , H2x1_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 , H2x1_6 );
312464    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
312465    +   H2x1_1  = EXP(H2x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_1 = EXP(H2x1_1 - _MAX_);
312466    +   _SUM_ = _SUM_ + H2x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_1 ;
312467    +   H2x1_2  = EXP(H2x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_2 = EXP(H2x1_2 - _MAX_);
312468    +   _SUM_ = _SUM_ + H2x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_2 ;
312469    +   H2x1_3  = EXP(H2x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_3 = EXP(H2x1_3 - _MAX_);
312470    +   _SUM_ = _SUM_ + H2x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_3 ;
312471    +   H2x1_4  = EXP(H2x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_4 = EXP(H2x1_4 - _MAX_);
312472    +   _SUM_ = _SUM_ + H2x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_4 ;
312473    +   H2x1_5  = EXP(H2x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_5 = EXP(H2x1_5 - _MAX_);
312474    +   _SUM_ = _SUM_ + H2x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_5 ;
312475    +   H2x1_6  = EXP(H2x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_6 = EXP(H2x1_6 - _MAX_);
312476    +   _SUM_ = _SUM_ + H2x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_6 ;
312477    +   H2x1_1  = H2x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 / _SUM_;
312478    +   H2x1_2  = H2x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 / _SUM_;
312479    +   H2x1_3  = H2x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 / _SUM_;
312480    +   H2x1_4  = H2x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 / _SUM_;
312481    +   H2x1_5  = H2x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 / _SUM_;
312482    +   H2x1_6  = H2x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 / _SUM_;
312483    +END;
MPRINT(EM_DIAGRAM):   END;
312484    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
312485    +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
312486    +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
312487    +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
312488    +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
312489    +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
312490    +   H2x1_6  = .;
MPRINT(EM_DIAGRAM):   H2x1_6 = .;
312491    +END;
MPRINT(EM_DIAGRAM):   END;
312492    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
312493    +*** Writing the Node H2x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x2_ ;
312494    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
312495    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
312496    +   H2x2_1  =     0.06037434087051 * H1x1_1  +     2.10312669809986 * H1x1_2
312497    +          +     0.25966374544266 * H1x1_3  +     -0.4604625015482 * H1x1_4
312498    +          +    -0.04852853005798 * H1x1_5  +     1.73108900683337 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = 0.06037434087051 * H1x1_1 + 2.10312669809986 * H1x1_2 + 
0.25966374544266 * H1x1_3 + -0.4604625015482 * H1x1_4 + -0.04852853005798 * H1x1_5 + 
1.73108900683337 * H1x1_6 ;
312499    +   H2x2_2  =    -1.98874787809729 * H1x1_1  +    -0.90575568783349 * H1x1_2
312500    +          +     2.19451885005981 * H1x1_3  +     0.86127175797091 * H1x1_4
312501    +          +     0.88302785384691 * H1x1_5  +     1.44831802939799 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = -1.98874787809729 * H1x1_1 + -0.90575568783349 * H1x1_2 + 
2.19451885005981 * H1x1_3 + 0.86127175797091 * H1x1_4 + 0.88302785384691 * H1x1_5 + 
1.44831802939799 * H1x1_6 ;
312502    +   H2x2_3  =     0.99020573159855 * H1x1_1  +    -0.25509107111568 * H1x1_2
312503    +          +    -0.88380027397433 * H1x1_3  +     2.61444810707966 * H1x1_4
312504    +          +     1.12768553693881 * H1x1_5  +    -1.33423515707253 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = 0.99020573159855 * H1x1_1 + -0.25509107111568 * H1x1_2 + 
-0.88380027397433 * H1x1_3 + 2.61444810707966 * H1x1_4 + 1.12768553693881 * H1x1_5 + 
-1.33423515707253 * H1x1_6 ;
312505    +   H2x2_4  =    -0.48971657670431 * H1x1_1  +    -2.03924441101145 * H1x1_2
312506    +          +    -0.44598954940675 * H1x1_3  +    -0.38296699607675 * H1x1_4
312507    +          +    -0.46829791763961 * H1x1_5  +     0.57571476480191 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = -0.48971657670431 * H1x1_1 + -2.03924441101145 * H1x1_2 + 
-0.44598954940675 * H1x1_3 + -0.38296699607675 * H1x1_4 + -0.46829791763961 * H1x1_5 + 
0.57571476480191 * H1x1_6 ;
312508    +   H2x2_5  =     1.15324249951205 * H1x1_1  +    -0.30656607959814 * H1x1_2
312509    +          +    -0.26327906953925 * H1x1_3  +    -0.30055126052518 * H1x1_4
312510    +          +     1.20108560127357 * H1x1_5  +    -2.01222927536337 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = 1.15324249951205 * H1x1_1 + -0.30656607959814 * H1x1_2 + 
-0.26327906953925 * H1x1_3 + -0.30055126052518 * H1x1_4 + 1.20108560127357 * H1x1_5 + 
-2.01222927536337 * H1x1_6 ;
312511    +   H2x2_1  = H2x2_1  +     0.67714997403987 * H1x2_1
312512    +          +     0.58512699375084 * H1x2_2  +     0.82352577521669 * H1x2_3
312513    +          +    -0.10235751124142 * H1x2_4  +     0.33612939980192 * H1x2_5
312514    +          +    -0.86707973977777 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + 0.67714997403987 * H1x2_1 + 0.58512699375084 * H1x2_2 
+ 0.82352577521669 * H1x2_3 + -0.10235751124142 * H1x2_4 + 0.33612939980192 * H1x2_5 + 
-0.86707973977777 * H1x2_6 ;
312515    +   H2x2_2  = H2x2_2  +     0.54358612690033 * H1x2_1
312516    +          +     0.85147893022911 * H1x2_2  +     0.19383313272548 * H1x2_3
312517    +          +     0.54163359333706 * H1x2_4  +    -0.12377705517298 * H1x2_5
312518    +          +     0.34775419906833 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + 0.54358612690033 * H1x2_1 + 0.85147893022911 * H1x2_2 
+ 0.19383313272548 * H1x2_3 + 0.54163359333706 * H1x2_4 + -0.12377705517298 * H1x2_5 + 
0.34775419906833 * H1x2_6 ;
312519    +   H2x2_3  = H2x2_3  +    -0.93107945276808 * H1x2_1
312520    +          +     0.68475936175775 * H1x2_2  +    -0.23180217492353 * H1x2_3
312521    +          +     0.62637113173904 * H1x2_4  +      -0.494489282403 * H1x2_5
312522    +          +    -0.92757761378206 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + -0.93107945276808 * H1x2_1 + 0.68475936175775 * H1x2_2 
+ -0.23180217492353 * H1x2_3 + 0.62637113173904 * H1x2_4 + -0.494489282403 * H1x2_5 + 
-0.92757761378206 * H1x2_6 ;
312523    +   H2x2_4  = H2x2_4  +    -0.04592275767761 * H1x2_1
312524    +          +    -0.46728046145973 * H1x2_2  +    -0.84120395772864 * H1x2_3
312525    +          +     0.15719249141893 * H1x2_4  +    -0.46514309972577 * H1x2_5
312526    +          +     1.22882033880531 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + -0.04592275767761 * H1x2_1 + -0.46728046145973 * 
H1x2_2 + -0.84120395772864 * H1x2_3 + 0.15719249141893 * H1x2_4 + -0.46514309972577 * H1x2_5 + 
1.22882033880531 * H1x2_6 ;
312527    +   H2x2_5  = H2x2_5  +     1.84159049843244 * H1x2_1
312528    +          +     0.10275783758743 * H1x2_2  +    -1.43072878385761 * H1x2_3
312529    +          +     0.55082995966416 * H1x2_4  +      0.6610129464186 * H1x2_5
312530    +          +     1.13665339513142 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 + 1.84159049843244 * H1x2_1 + 0.10275783758743 * H1x2_2 
+ -1.43072878385761 * H1x2_3 + 0.55082995966416 * H1x2_4 + 0.6610129464186 * H1x2_5 + 
1.13665339513142 * H1x2_6 ;
312531    +   H2x2_1  = H2x2_1  +    -1.51032464504011 * H1x3_1
312532    +          +    -0.09256867451899 * H1x3_2  +     0.32445533867689 * H1x3_3
312533    +          +     0.05761597623645 * H1x3_4  +    -0.76755137543453 * H1x3_5
312534    +          +    -0.84355541605354 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -1.51032464504011 * H1x3_1 + -0.09256867451899 * 
H1x3_2 + 0.32445533867689 * H1x3_3 + 0.05761597623645 * H1x3_4 + -0.76755137543453 * H1x3_5 + 
-0.84355541605354 * H1x3_6 ;
312535    +   H2x2_2  = H2x2_2  +     0.10183122181912 * H1x3_1
312536    +          +    -0.30112412370797 * H1x3_2  +     0.67666605377075 * H1x3_3
312537    +          +    -0.05362728717558 * H1x3_4  +    -0.02087908172702 * H1x3_5
312538    +          +    -0.14832407235293 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + 0.10183122181912 * H1x3_1 + -0.30112412370797 * H1x3_2 
+ 0.67666605377075 * H1x3_3 + -0.05362728717558 * H1x3_4 + -0.02087908172702 * H1x3_5 + 
-0.14832407235293 * H1x3_6 ;
312539    +   H2x2_3  = H2x2_3  +     1.70579601255161 * H1x3_1
312540    +          +     -0.4658368752668 * H1x3_2  +    -0.54573113497487 * H1x3_3
312541    +          +     1.13279034034213 * H1x3_4  +     1.23714589942258 * H1x3_5
312542    +          +     0.41209753590668 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + 1.70579601255161 * H1x3_1 + -0.4658368752668 * H1x3_2 
+ -0.54573113497487 * H1x3_3 + 1.13279034034213 * H1x3_4 + 1.23714589942258 * H1x3_5 + 
0.41209753590668 * H1x3_6 ;
312543    +   H2x2_4  = H2x2_4  +     0.21012073552633 * H1x3_1
312544    +          +      -1.607803967771 * H1x3_2  +     0.02641742148684 * H1x3_3
312545    +          +      -0.919177834124 * H1x3_4  +    -0.46658991803838 * H1x3_5
312546    +          +     0.05356295771962 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + 0.21012073552633 * H1x3_1 + -1.607803967771 * H1x3_2 + 
0.02641742148684 * H1x3_3 + -0.919177834124 * H1x3_4 + -0.46658991803838 * H1x3_5 + 
0.05356295771962 * H1x3_6 ;
312547    +   H2x2_5  = H2x2_5  +     -1.1424376096243 * H1x3_1
312548    +          +    -0.47941730936597 * H1x3_2  +    -1.44857674506057 * H1x3_3
312549    +          +     -2.0300913051093 * H1x3_4  +    -0.12476620160938 * H1x3_5
312550    +          +      1.3865980084186 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 + -1.1424376096243 * H1x3_1 + -0.47941730936597 * H1x3_2 
+ -1.44857674506057 * H1x3_3 + -2.0300913051093 * H1x3_4 + -0.12476620160938 * H1x3_5 + 
1.3865980084186 * H1x3_6 ;
312551    +   H2x2_1  = H2x2_1  +    -0.80277778579719 * H1x4_1
312552    +          +     0.89356845434924 * H1x4_2  +     1.34679856015636 * H1x4_3
312553    +          +    -0.75666255425893 * H1x4_4  +    -0.76982332990737 * H1x4_5
312554    +          +     0.16602366912489 * H1x4_6 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -0.80277778579719 * H1x4_1 + 0.89356845434924 * H1x4_2 
+ 1.34679856015636 * H1x4_3 + -0.75666255425893 * H1x4_4 + -0.76982332990737 * H1x4_5 + 
0.16602366912489 * H1x4_6 ;
312555    +   H2x2_2  = H2x2_2  +    -1.23815292104545 * H1x4_1
312556    +          +     0.15726093177842 * H1x4_2  +     0.11603212859646 * H1x4_3
312557    +          +     0.38287343591011 * H1x4_4  +    -0.51333663927664 * H1x4_5
312558    +          +     -0.9577144624714 * H1x4_6 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + -1.23815292104545 * H1x4_1 + 0.15726093177842 * H1x4_2 
+ 0.11603212859646 * H1x4_3 + 0.38287343591011 * H1x4_4 + -0.51333663927664 * H1x4_5 + 
-0.9577144624714 * H1x4_6 ;
312559    +   H2x2_3  = H2x2_3  +    -0.68480171858681 * H1x4_1
312560    +          +    -0.64475211431817 * H1x4_2  +     0.54382770716837 * H1x4_3
312561    +          +     0.07586519798399 * H1x4_4  +      -0.158352646931 * H1x4_5
312562    +          +    -0.86962851115528 * H1x4_6 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + -0.68480171858681 * H1x4_1 + -0.64475211431817 * 
H1x4_2 + 0.54382770716837 * H1x4_3 + 0.07586519798399 * H1x4_4 + -0.158352646931 * H1x4_5 + 
-0.86962851115528 * H1x4_6 ;
312563    +   H2x2_4  = H2x2_4  +     1.08721247219364 * H1x4_1
312564    +          +    -0.00199447585891 * H1x4_2  +    -0.84066724442019 * H1x4_3
312565    +          +     0.28532638217608 * H1x4_4  +    -1.14779513957631 * H1x4_5
312566    +          +     2.01216139921959 * H1x4_6 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + 1.08721247219364 * H1x4_1 + -0.00199447585891 * H1x4_2 
+ -0.84066724442019 * H1x4_3 + 0.28532638217608 * H1x4_4 + -1.14779513957631 * H1x4_5 + 
2.01216139921959 * H1x4_6 ;
312567    +   H2x2_5  = H2x2_5  +    -0.82582817846967 * H1x4_1
312568    +          +    -1.09057773595959 * H1x4_2  +     -0.2490905553905 * H1x4_3
312569    +          +     0.93092377717594 * H1x4_4  +     0.02946641402494 * H1x4_5
312570    +          +    -0.19026348436175 * H1x4_6 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 + -0.82582817846967 * H1x4_1 + -1.09057773595959 * 
H1x4_2 + -0.2490905553905 * H1x4_3 + 0.93092377717594 * H1x4_4 + 0.02946641402494 * H1x4_5 + 
-0.19026348436175 * H1x4_6 ;
312571    +   H2x2_1  =      0.4280804812723 + H2x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = 0.4280804812723 + H2x2_1 ;
312572    +   H2x2_2  =    -1.09169904475569 + H2x2_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = -1.09169904475569 + H2x2_2 ;
312573    +   H2x2_3  =      1.1980619484542 + H2x2_3 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = 1.1980619484542 + H2x2_3 ;
312574    +   H2x2_4  =    -0.69756677248934 + H2x2_4 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = -0.69756677248934 + H2x2_4 ;
312575    +   H2x2_5  =    -1.87910212660657 + H2x2_5 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = -1.87910212660657 + H2x2_5 ;
312576    +   H2x2_6  = 0;
MPRINT(EM_DIAGRAM):   H2x2_6 = 0;
312577    +   _MAX_ = MAX (H2x2_1 , H2x2_2 , H2x2_3 , H2x2_4 , H2x2_5 , H2x2_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x2_1 , H2x2_2 , H2x2_3 , H2x2_4 , H2x2_5 , H2x2_6 );
312578    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
312579    +   H2x2_1  = EXP(H2x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_1 = EXP(H2x2_1 - _MAX_);
312580    +   _SUM_ = _SUM_ + H2x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_1 ;
312581    +   H2x2_2  = EXP(H2x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_2 = EXP(H2x2_2 - _MAX_);
312582    +   _SUM_ = _SUM_ + H2x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_2 ;
312583    +   H2x2_3  = EXP(H2x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_3 = EXP(H2x2_3 - _MAX_);
312584    +   _SUM_ = _SUM_ + H2x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_3 ;
312585    +   H2x2_4  = EXP(H2x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_4 = EXP(H2x2_4 - _MAX_);
312586    +   _SUM_ = _SUM_ + H2x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_4 ;
312587    +   H2x2_5  = EXP(H2x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_5 = EXP(H2x2_5 - _MAX_);
312588    +   _SUM_ = _SUM_ + H2x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_5 ;
312589    +   H2x2_6  = EXP(H2x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_6 = EXP(H2x2_6 - _MAX_);
312590    +   _SUM_ = _SUM_ + H2x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_6 ;
312591    +   H2x2_1  = H2x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 / _SUM_;
312592    +   H2x2_2  = H2x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 / _SUM_;
312593    +   H2x2_3  = H2x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 / _SUM_;
312594    +   H2x2_4  = H2x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 / _SUM_;
312595    +   H2x2_5  = H2x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 / _SUM_;
312596    +   H2x2_6  = H2x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_6 = H2x2_6 / _SUM_;
312597    +END;
MPRINT(EM_DIAGRAM):   END;
312598    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
312599    +   H2x2_1  = .;
MPRINT(EM_DIAGRAM):   H2x2_1 = .;
312600    +   H2x2_2  = .;
MPRINT(EM_DIAGRAM):   H2x2_2 = .;
312601    +   H2x2_3  = .;
MPRINT(EM_DIAGRAM):   H2x2_3 = .;
312602    +   H2x2_4  = .;
MPRINT(EM_DIAGRAM):   H2x2_4 = .;
312603    +   H2x2_5  = .;
MPRINT(EM_DIAGRAM):   H2x2_5 = .;
312604    +   H2x2_6  = .;
MPRINT(EM_DIAGRAM):   H2x2_6 = .;
312605    +END;
MPRINT(EM_DIAGRAM):   END;
312606    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
312607    +*** Writing the Node H2x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x3_ ;
312608    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
312609    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
312610    +   H2x3_1  =     0.51206365204428 * H1x1_1  +    -1.75446248490807 * H1x1_2
312611    +          +     0.22956544269482 * H1x1_3  +     0.91651437630074 * H1x1_4
312612    +          +    -0.88731743590726 * H1x1_5  +     0.75959028005652 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x3_1 = 0.51206365204428 * H1x1_1 + -1.75446248490807 * H1x1_2 + 
0.22956544269482 * H1x1_3 + 0.91651437630074 * H1x1_4 + -0.88731743590726 * H1x1_5 + 
0.75959028005652 * H1x1_6 ;
312613    +   H2x3_2  =    -0.45196055100748 * H1x1_1  +    -0.30516535345407 * H1x1_2
312614    +          +    -0.95535662641329 * H1x1_3  +     0.98793241812876 * H1x1_4
312615    +          +    -2.26205386368521 * H1x1_5  +    -0.79989554227284 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x3_2 = -0.45196055100748 * H1x1_1 + -0.30516535345407 * H1x1_2 + 
-0.95535662641329 * H1x1_3 + 0.98793241812876 * H1x1_4 + -2.26205386368521 * H1x1_5 + 
-0.79989554227284 * H1x1_6 ;
312616    +   H2x3_3  =     1.75400558713364 * H1x1_1  +     0.36065784285286 * H1x1_2
312617    +          +    -0.26047606287884 * H1x1_3  +    -0.92639558885443 * H1x1_4
312618    +          +     1.89978202395282 * H1x1_5  +     1.46105111567983 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x3_3 = 1.75400558713364 * H1x1_1 + 0.36065784285286 * H1x1_2 + 
-0.26047606287884 * H1x1_3 + -0.92639558885443 * H1x1_4 + 1.89978202395282 * H1x1_5 + 
1.46105111567983 * H1x1_6 ;
312619    +   H2x3_4  =     -1.0609986914691 * H1x1_1  +     1.03588259392678 * H1x1_2
312620    +          +     0.18751061078347 * H1x1_3  +     1.45467172411852 * H1x1_4
312621    +          +     0.80970691110797 * H1x1_5  +    -0.03142746343877 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x3_4 = -1.0609986914691 * H1x1_1 + 1.03588259392678 * H1x1_2 + 
0.18751061078347 * H1x1_3 + 1.45467172411852 * H1x1_4 + 0.80970691110797 * H1x1_5 + 
-0.03142746343877 * H1x1_6 ;
312622    +   H2x3_5  =     0.68514959739435 * H1x1_1  +    -0.85703618516825 * H1x1_2
312623    +          +    -1.42641478008517 * H1x1_3  +     0.69128253039497 * H1x1_4
312624    +          +    -0.41103428804251 * H1x1_5  +     2.29818718782262 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x3_5 = 0.68514959739435 * H1x1_1 + -0.85703618516825 * H1x1_2 + 
-1.42641478008517 * H1x1_3 + 0.69128253039497 * H1x1_4 + -0.41103428804251 * H1x1_5 + 
2.29818718782262 * H1x1_6 ;
312625    +   H2x3_1  = H2x3_1  +    -1.02124610786304 * H1x2_1
312626    +          +    -0.70086367508924 * H1x2_2  +     1.44543746222048 * H1x2_3
312627    +          +      0.0077115223216 * H1x2_4  +    -1.13603676440953 * H1x2_5
312628    +          +    -0.39006326539815 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x3_1 = H2x3_1 + -1.02124610786304 * H1x2_1 + -0.70086367508924 * 
H1x2_2 + 1.44543746222048 * H1x2_3 + 0.0077115223216 * H1x2_4 + -1.13603676440953 * H1x2_5 + 
-0.39006326539815 * H1x2_6 ;
312629    +   H2x3_2  = H2x3_2  +     0.58504868182178 * H1x2_1
312630    +          +    -2.53394647771808 * H1x2_2  +    -0.46920351111552 * H1x2_3
312631    +          +    -0.13298739365164 * H1x2_4  +    -0.72916785042807 * H1x2_5
312632    +          +     0.87575796008942 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x3_2 = H2x3_2 + 0.58504868182178 * H1x2_1 + -2.53394647771808 * H1x2_2 
+ -0.46920351111552 * H1x2_3 + -0.13298739365164 * H1x2_4 + -0.72916785042807 * H1x2_5 + 
0.87575796008942 * H1x2_6 ;
312633    +   H2x3_3  = H2x3_3  +      -0.403068394175 * H1x2_1
312634    +          +     2.20341156440175 * H1x2_2  +     0.18637166393472 * H1x2_3
312635    +          +    -0.49818124689746 * H1x2_4  +    -0.57482220863202 * H1x2_5
312636    +          +    -0.99288712489296 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x3_3 = H2x3_3 + -0.403068394175 * H1x2_1 + 2.20341156440175 * H1x2_2 + 
0.18637166393472 * H1x2_3 + -0.49818124689746 * H1x2_4 + -0.57482220863202 * H1x2_5 + 
-0.99288712489296 * H1x2_6 ;
312637    +   H2x3_4  = H2x3_4  +    -0.08255075671356 * H1x2_1
312638    +          +     0.12417859340249 * H1x2_2  +     0.38623860203678 * H1x2_3
312639    +          +     1.30375188803419 * H1x2_4  +     0.06113655765155 * H1x2_5
312640    +          +     2.18684373678918 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x3_4 = H2x3_4 + -0.08255075671356 * H1x2_1 + 0.12417859340249 * H1x2_2 
+ 0.38623860203678 * H1x2_3 + 1.30375188803419 * H1x2_4 + 0.06113655765155 * H1x2_5 + 
2.18684373678918 * H1x2_6 ;
312641    +   H2x3_5  = H2x3_5  +     0.02445507420447 * H1x2_1
312642    +          +     -1.1429834255353 * H1x2_2  +     1.15057813366971 * H1x2_3
312643    +          +     -0.7929157351984 * H1x2_4  +      0.4343084860458 * H1x2_5
312644    +          +      0.0384736341173 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x3_5 = H2x3_5 + 0.02445507420447 * H1x2_1 + -1.1429834255353 * H1x2_2 
+ 1.15057813366971 * H1x2_3 + -0.7929157351984 * H1x2_4 + 0.4343084860458 * H1x2_5 + 
0.0384736341173 * H1x2_6 ;
312645    +   H2x3_1  = H2x3_1  +     0.37764572590016 * H1x3_1
312646    +          +     1.48191356825225 * H1x3_2  +    -0.26603273466393 * H1x3_3
312647    +          +    -1.29507822568105 * H1x3_4  +     1.84557717124725 * H1x3_5
312648    +          +    -0.65863037608331 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x3_1 = H2x3_1 + 0.37764572590016 * H1x3_1 + 1.48191356825225 * H1x3_2 
+ -0.26603273466393 * H1x3_3 + -1.29507822568105 * H1x3_4 + 1.84557717124725 * H1x3_5 + 
-0.65863037608331 * H1x3_6 ;
312649    +   H2x3_2  = H2x3_2  +    -3.49060338051306 * H1x3_1
312650    +          +      1.3541565382925 * H1x3_2  +    -0.38315198954693 * H1x3_3
312651    +          +    -2.08846010475603 * H1x3_4  +    -0.03268324043605 * H1x3_5
312652    +          +     -0.2732767866426 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x3_2 = H2x3_2 + -3.49060338051306 * H1x3_1 + 1.3541565382925 * H1x3_2 
+ -0.38315198954693 * H1x3_3 + -2.08846010475603 * H1x3_4 + -0.03268324043605 * H1x3_5 + 
-0.2732767866426 * H1x3_6 ;
312653    +   H2x3_3  = H2x3_3  +    -1.02108681113274 * H1x3_1
312654    +          +     1.11670732797487 * H1x3_2  +    -2.83817066251645 * H1x3_3
312655    +          +     2.91943649605743 * H1x3_4  +    -1.58666117886546 * H1x3_5
312656    +          +     0.95358246629929 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x3_3 = H2x3_3 + -1.02108681113274 * H1x3_1 + 1.11670732797487 * H1x3_2 
+ -2.83817066251645 * H1x3_3 + 2.91943649605743 * H1x3_4 + -1.58666117886546 * H1x3_5 + 
0.95358246629929 * H1x3_6 ;
312657    +   H2x3_4  = H2x3_4  +    -0.28934138457604 * H1x3_1
312658    +          +     -0.1627562650927 * H1x3_2  +     1.76496399430623 * H1x3_3
312659    +          +     2.05776756058594 * H1x3_4  +    -0.96994650178001 * H1x3_5
312660    +          +    -1.50364154763084 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x3_4 = H2x3_4 + -0.28934138457604 * H1x3_1 + -0.1627562650927 * H1x3_2 
+ 1.76496399430623 * H1x3_3 + 2.05776756058594 * H1x3_4 + -0.96994650178001 * H1x3_5 + 
-1.50364154763084 * H1x3_6 ;
312661    +   H2x3_5  = H2x3_5  +    -0.73016276992619 * H1x3_1
312662    +          +    -1.48258849718818 * H1x3_2  +    -0.47908044807419 * H1x3_3
312663    +          +      0.5957671579209 * H1x3_4  +     0.06707833713085 * H1x3_5
312664    +          +      0.3673818114501 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x3_5 = H2x3_5 + -0.73016276992619 * H1x3_1 + -1.48258849718818 * 
H1x3_2 + -0.47908044807419 * H1x3_3 + 0.5957671579209 * H1x3_4 + 0.06707833713085 * H1x3_5 + 
0.3673818114501 * H1x3_6 ;
312665    +   H2x3_1  = H2x3_1  +     1.64939881299916 * H1x4_1
312666    +          +     0.29057047745206 * H1x4_2  +     -1.2430356696985 * H1x4_3
312667    +          +     1.38895822896909 * H1x4_4  +     0.32263395713709 * H1x4_5
312668    +          +      -0.876005602164 * H1x4_6 ;
MPRINT(EM_DIAGRAM):   H2x3_1 = H2x3_1 + 1.64939881299916 * H1x4_1 + 0.29057047745206 * H1x4_2 
+ -1.2430356696985 * H1x4_3 + 1.38895822896909 * H1x4_4 + 0.32263395713709 * H1x4_5 + 
-0.876005602164 * H1x4_6 ;
312669    +   H2x3_2  = H2x3_2  +    -0.59279077758901 * H1x4_1
312670    +          +     0.47534983861589 * H1x4_2  +     1.50522851379751 * H1x4_3
312671    +          +    -0.52074826438565 * H1x4_4  +    -0.13959571645898 * H1x4_5
312672    +          +     0.51236653129509 * H1x4_6 ;
MPRINT(EM_DIAGRAM):   H2x3_2 = H2x3_2 + -0.59279077758901 * H1x4_1 + 0.47534983861589 * H1x4_2 
+ 1.50522851379751 * H1x4_3 + -0.52074826438565 * H1x4_4 + -0.13959571645898 * H1x4_5 + 
0.51236653129509 * H1x4_6 ;
312673    +   H2x3_3  = H2x3_3  +       0.170929264521 * H1x4_1
312674    +          +    -1.09768862147461 * H1x4_2  +    -1.22166369035864 * H1x4_3
312675    +          +    -0.43496041372082 * H1x4_4  +     0.86983484014566 * H1x4_5
312676    +          +     0.14855508666868 * H1x4_6 ;
MPRINT(EM_DIAGRAM):   H2x3_3 = H2x3_3 + 0.170929264521 * H1x4_1 + -1.09768862147461 * H1x4_2 + 
-1.22166369035864 * H1x4_3 + -0.43496041372082 * H1x4_4 + 0.86983484014566 * H1x4_5 + 
0.14855508666868 * H1x4_6 ;
312677    +   H2x3_4  = H2x3_4  +    -0.26703118340308 * H1x4_1
312678    +          +     0.58353167926887 * H1x4_2  +     1.39169479141155 * H1x4_3
312679    +          +     -0.7893707969296 * H1x4_4  +     0.89521873365477 * H1x4_5
312680    +          +     1.60853840268286 * H1x4_6 ;
MPRINT(EM_DIAGRAM):   H2x3_4 = H2x3_4 + -0.26703118340308 * H1x4_1 + 0.58353167926887 * H1x4_2 
+ 1.39169479141155 * H1x4_3 + -0.7893707969296 * H1x4_4 + 0.89521873365477 * H1x4_5 + 
1.60853840268286 * H1x4_6 ;
312681    +   H2x3_5  = H2x3_5  +    -0.29353449181426 * H1x4_1
312682    +          +     0.02697197445995 * H1x4_2  +     0.04454970336296 * H1x4_3
312683    +          +    -0.17322488506489 * H1x4_4  +    -1.52564540234935 * H1x4_5
312684    +          +      0.6650692994568 * H1x4_6 ;
MPRINT(EM_DIAGRAM):   H2x3_5 = H2x3_5 + -0.29353449181426 * H1x4_1 + 0.02697197445995 * H1x4_2 
+ 0.04454970336296 * H1x4_3 + -0.17322488506489 * H1x4_4 + -1.52564540234935 * H1x4_5 + 
0.6650692994568 * H1x4_6 ;
312685    +   H2x3_1  =    -0.44046998911725 + H2x3_1 ;
MPRINT(EM_DIAGRAM):   H2x3_1 = -0.44046998911725 + H2x3_1 ;
312686    +   H2x3_2  =     1.44590821330163 + H2x3_2 ;
MPRINT(EM_DIAGRAM):   H2x3_2 = 1.44590821330163 + H2x3_2 ;
312687    +   H2x3_3  =    -0.02671947857742 + H2x3_3 ;
MPRINT(EM_DIAGRAM):   H2x3_3 = -0.02671947857742 + H2x3_3 ;
312688    +   H2x3_4  =     2.16876314488082 + H2x3_4 ;
MPRINT(EM_DIAGRAM):   H2x3_4 = 2.16876314488082 + H2x3_4 ;
312689    +   H2x3_5  =    -1.06855161267989 + H2x3_5 ;
MPRINT(EM_DIAGRAM):   H2x3_5 = -1.06855161267989 + H2x3_5 ;
312690    +   H2x3_6  = 0;
MPRINT(EM_DIAGRAM):   H2x3_6 = 0;
312691    +   _MAX_ = MAX (H2x3_1 , H2x3_2 , H2x3_3 , H2x3_4 , H2x3_5 , H2x3_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x3_1 , H2x3_2 , H2x3_3 , H2x3_4 , H2x3_5 , H2x3_6 );
312692    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
312693    +   H2x3_1  = EXP(H2x3_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x3_1 = EXP(H2x3_1 - _MAX_);
312694    +   _SUM_ = _SUM_ + H2x3_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x3_1 ;
312695    +   H2x3_2  = EXP(H2x3_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x3_2 = EXP(H2x3_2 - _MAX_);
312696    +   _SUM_ = _SUM_ + H2x3_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x3_2 ;
312697    +   H2x3_3  = EXP(H2x3_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x3_3 = EXP(H2x3_3 - _MAX_);
312698    +   _SUM_ = _SUM_ + H2x3_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x3_3 ;
312699    +   H2x3_4  = EXP(H2x3_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x3_4 = EXP(H2x3_4 - _MAX_);
312700    +   _SUM_ = _SUM_ + H2x3_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x3_4 ;
312701    +   H2x3_5  = EXP(H2x3_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x3_5 = EXP(H2x3_5 - _MAX_);
312702    +   _SUM_ = _SUM_ + H2x3_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x3_5 ;
312703    +   H2x3_6  = EXP(H2x3_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x3_6 = EXP(H2x3_6 - _MAX_);
312704    +   _SUM_ = _SUM_ + H2x3_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x3_6 ;
312705    +   H2x3_1  = H2x3_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x3_1 = H2x3_1 / _SUM_;
312706    +   H2x3_2  = H2x3_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x3_2 = H2x3_2 / _SUM_;
312707    +   H2x3_3  = H2x3_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x3_3 = H2x3_3 / _SUM_;
312708    +   H2x3_4  = H2x3_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x3_4 = H2x3_4 / _SUM_;
312709    +   H2x3_5  = H2x3_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x3_5 = H2x3_5 / _SUM_;
312710    +   H2x3_6  = H2x3_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x3_6 = H2x3_6 / _SUM_;
312711    +END;
MPRINT(EM_DIAGRAM):   END;
312712    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
312713    +   H2x3_1  = .;
MPRINT(EM_DIAGRAM):   H2x3_1 = .;
312714    +   H2x3_2  = .;
MPRINT(EM_DIAGRAM):   H2x3_2 = .;
312715    +   H2x3_3  = .;
MPRINT(EM_DIAGRAM):   H2x3_3 = .;
312716    +   H2x3_4  = .;
MPRINT(EM_DIAGRAM):   H2x3_4 = .;
312717    +   H2x3_5  = .;
MPRINT(EM_DIAGRAM):   H2x3_5 = .;
312718    +   H2x3_6  = .;
MPRINT(EM_DIAGRAM):   H2x3_6 = .;
312719    +END;
MPRINT(EM_DIAGRAM):   END;
312720    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
312721    +*** Writing the Node H3x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x1_ ;
312722    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
312723    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
312724    +   H3x1_1  =     0.14821897068309 * H2x1_1  +     0.10105634438409 * H2x1_2
312725    +          +     0.69826499371673 * H2x1_3  +     1.65127139539807 * H2x1_4
312726    +          +     1.34699293376382 * H2x1_5  +     0.62066324264653 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 0.14821897068309 * H2x1_1 + 0.10105634438409 * H2x1_2 + 
0.69826499371673 * H2x1_3 + 1.65127139539807 * H2x1_4 + 1.34699293376382 * H2x1_5 + 
0.62066324264653 * H2x1_6 ;
312727    +   H3x1_2  =     -0.6760189094281 * H2x1_1  +     0.85348791240011 * H2x1_2
312728    +          +    -0.07663386217946 * H2x1_3  +     2.15467384269703 * H2x1_4
312729    +          +    -0.50699529916446 * H2x1_5  +     1.70699964755049 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = -0.6760189094281 * H2x1_1 + 0.85348791240011 * H2x1_2 + 
-0.07663386217946 * H2x1_3 + 2.15467384269703 * H2x1_4 + -0.50699529916446 * H2x1_5 + 
1.70699964755049 * H2x1_6 ;
312730    +   H3x1_3  =    -0.94311365048828 * H2x1_1  +    -0.69829528108975 * H2x1_2
312731    +          +    -0.34747616168009 * H2x1_3  +     2.32941170908743 * H2x1_4
312732    +          +     3.71768144878584 * H2x1_5  +    -0.60932405988373 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = -0.94311365048828 * H2x1_1 + -0.69829528108975 * H2x1_2 + 
-0.34747616168009 * H2x1_3 + 2.32941170908743 * H2x1_4 + 3.71768144878584 * H2x1_5 + 
-0.60932405988373 * H2x1_6 ;
312733    +   H3x1_4  =     1.69107510526388 * H2x1_1  +    -1.40350955348413 * H2x1_2
312734    +          +    -0.47901844016365 * H2x1_3  +      0.3540542650553 * H2x1_4
312735    +          +    -1.56597514252687 * H2x1_5  +    -0.04997148078498 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = 1.69107510526388 * H2x1_1 + -1.40350955348413 * H2x1_2 + 
-0.47901844016365 * H2x1_3 + 0.3540542650553 * H2x1_4 + -1.56597514252687 * H2x1_5 + 
-0.04997148078498 * H2x1_6 ;
312736    +   H3x1_5  =    -0.23167181678539 * H2x1_1  +    -0.65942738658946 * H2x1_2
312737    +          +    -0.83280103611578 * H2x1_3  +    -1.03301865685228 * H2x1_4
312738    +          +      1.3401316289209 * H2x1_5  +    -1.98639459325872 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = -0.23167181678539 * H2x1_1 + -0.65942738658946 * H2x1_2 + 
-0.83280103611578 * H2x1_3 + -1.03301865685228 * H2x1_4 + 1.3401316289209 * H2x1_5 + 
-1.98639459325872 * H2x1_6 ;
312739    +   H3x1_1  = H3x1_1  +    -1.96226306174896 * H2x2_1
312740    +          +     1.03065434267907 * H2x2_2  +    -0.02977552697407 * H2x2_3
312741    +          +    -2.15633683205343 * H2x2_4  +    -0.16172049876123 * H2x2_5
312742    +          +     2.04617275364668 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + -1.96226306174896 * H2x2_1 + 1.03065434267907 * H2x2_2 
+ -0.02977552697407 * H2x2_3 + -2.15633683205343 * H2x2_4 + -0.16172049876123 * H2x2_5 + 
2.04617275364668 * H2x2_6 ;
312743    +   H3x1_2  = H3x1_2  +     0.98825486325651 * H2x2_1
312744    +          +    -0.45791784632486 * H2x2_2  +     -0.1004093258308 * H2x2_3
312745    +          +     -0.9411693729369 * H2x2_4  +     -0.2302105458948 * H2x2_5
312746    +          +    -0.37660795680674 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = H3x1_2 + 0.98825486325651 * H2x2_1 + -0.45791784632486 * H2x2_2 
+ -0.1004093258308 * H2x2_3 + -0.9411693729369 * H2x2_4 + -0.2302105458948 * H2x2_5 + 
-0.37660795680674 * H2x2_6 ;
312747    +   H3x1_3  = H3x1_3  +    -0.01929245635771 * H2x2_1
312748    +          +     0.59176660505983 * H2x2_2  +     0.85345798669405 * H2x2_3
312749    +          +    -0.29251716908915 * H2x2_4  +     0.62774918208489 * H2x2_5
312750    +          +    -0.43453791992382 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = H3x1_3 + -0.01929245635771 * H2x2_1 + 0.59176660505983 * H2x2_2 
+ 0.85345798669405 * H2x2_3 + -0.29251716908915 * H2x2_4 + 0.62774918208489 * H2x2_5 + 
-0.43453791992382 * H2x2_6 ;
312751    +   H3x1_4  = H3x1_4  +    -0.93313067901041 * H2x2_1
312752    +          +     0.79407052404273 * H2x2_2  +     1.63518575530242 * H2x2_3
312753    +          +     1.19368615452563 * H2x2_4  +     0.43365061793519 * H2x2_5
312754    +          +    -3.30381142208727 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = H3x1_4 + -0.93313067901041 * H2x2_1 + 0.79407052404273 * H2x2_2 
+ 1.63518575530242 * H2x2_3 + 1.19368615452563 * H2x2_4 + 0.43365061793519 * H2x2_5 + 
-3.30381142208727 * H2x2_6 ;
312755    +   H3x1_5  = H3x1_5  +      0.2721747886066 * H2x2_1
312756    +          +     0.29405186941774 * H2x2_2  +    -0.96425253045194 * H2x2_3
312757    +          +    -0.34879018216113 * H2x2_4  +    -1.15330072605073 * H2x2_5
312758    +          +    -0.34019675397366 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = H3x1_5 + 0.2721747886066 * H2x2_1 + 0.29405186941774 * H2x2_2 + 
-0.96425253045194 * H2x2_3 + -0.34879018216113 * H2x2_4 + -1.15330072605073 * H2x2_5 + 
-0.34019675397366 * H2x2_6 ;
312759    +   H3x1_1  = H3x1_1  +     0.99938924001809 * H2x3_1
312760    +          +    -0.28559857879809 * H2x3_2  +    -0.44648183712004 * H2x3_3
312761    +          +    -0.23199698060307 * H2x3_4  +    -0.64346521755351 * H2x3_5
312762    +          +     0.59340663088806 * H2x3_6 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + 0.99938924001809 * H2x3_1 + -0.28559857879809 * H2x3_2 
+ -0.44648183712004 * H2x3_3 + -0.23199698060307 * H2x3_4 + -0.64346521755351 * H2x3_5 + 
0.59340663088806 * H2x3_6 ;
312763    +   H3x1_2  = H3x1_2  +     1.61767718200144 * H2x3_1
312764    +          +     0.59417860044733 * H2x3_2  +      1.9323992067722 * H2x3_3
312765    +          +    -1.38224816012152 * H2x3_4  +    -2.04529937075447 * H2x3_5
312766    +          +     0.67050797164115 * H2x3_6 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = H3x1_2 + 1.61767718200144 * H2x3_1 + 0.59417860044733 * H2x3_2 
+ 1.9323992067722 * H2x3_3 + -1.38224816012152 * H2x3_4 + -2.04529937075447 * H2x3_5 + 
0.67050797164115 * H2x3_6 ;
312767    +   H3x1_3  = H3x1_3  +    -0.69807909205706 * H2x3_1
312768    +          +    -0.57895843216341 * H2x3_2  +    -0.16766418785512 * H2x3_3
312769    +          +     0.40654327615846 * H2x3_4  +    -1.86698682195337 * H2x3_5
312770    +          +    -0.51274988768251 * H2x3_6 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = H3x1_3 + -0.69807909205706 * H2x3_1 + -0.57895843216341 * 
H2x3_2 + -0.16766418785512 * H2x3_3 + 0.40654327615846 * H2x3_4 + -1.86698682195337 * H2x3_5 + 
-0.51274988768251 * H2x3_6 ;
312771    +   H3x1_4  = H3x1_4  +     0.48560830435522 * H2x3_1
312772    +          +     -2.8037598804912 * H2x3_2  +    -0.30231415756008 * H2x3_3
312773    +          +     2.41159952574381 * H2x3_4  +     0.62877424154604 * H2x3_5
312774    +          +    -0.73773727947747 * H2x3_6 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = H3x1_4 + 0.48560830435522 * H2x3_1 + -2.8037598804912 * H2x3_2 
+ -0.30231415756008 * H2x3_3 + 2.41159952574381 * H2x3_4 + 0.62877424154604 * H2x3_5 + 
-0.73773727947747 * H2x3_6 ;
312775    +   H3x1_5  = H3x1_5  +    -0.87089276878422 * H2x3_1
312776    +          +    -0.78003140915024 * H2x3_2  +    -1.46975503560585 * H2x3_3
312777    +          +     1.87460778751879 * H2x3_4  +    -0.09219359612439 * H2x3_5
312778    +          +    -1.07137645697526 * H2x3_6 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = H3x1_5 + -0.87089276878422 * H2x3_1 + -0.78003140915024 * 
H2x3_2 + -1.46975503560585 * H2x3_3 + 1.87460778751879 * H2x3_4 + -0.09219359612439 * H2x3_5 + 
-1.07137645697526 * H2x3_6 ;
312779    +   H3x1_1  =    -0.24118737469276 + H3x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = -0.24118737469276 + H3x1_1 ;
312780    +   H3x1_2  =     0.26844205496356 + H3x1_2 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = 0.26844205496356 + H3x1_2 ;
312781    +   H3x1_3  =      1.6092325807607 + H3x1_3 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = 1.6092325807607 + H3x1_3 ;
312782    +   H3x1_4  =     0.55904829903808 + H3x1_4 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = 0.55904829903808 + H3x1_4 ;
312783    +   H3x1_5  =     1.39880629138148 + H3x1_5 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = 1.39880629138148 + H3x1_5 ;
312784    +   H3x1_6  = 0;
MPRINT(EM_DIAGRAM):   H3x1_6 = 0;
312785    +   _MAX_ = MAX (H3x1_1 , H3x1_2 , H3x1_3 , H3x1_4 , H3x1_5 , H3x1_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H3x1_1 , H3x1_2 , H3x1_3 , H3x1_4 , H3x1_5 , H3x1_6 );
312786    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
312787    +   H3x1_1  = EXP(H3x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_1 = EXP(H3x1_1 - _MAX_);
312788    +   _SUM_ = _SUM_ + H3x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_1 ;
312789    +   H3x1_2  = EXP(H3x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_2 = EXP(H3x1_2 - _MAX_);
312790    +   _SUM_ = _SUM_ + H3x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_2 ;
312791    +   H3x1_3  = EXP(H3x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_3 = EXP(H3x1_3 - _MAX_);
312792    +   _SUM_ = _SUM_ + H3x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_3 ;
312793    +   H3x1_4  = EXP(H3x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_4 = EXP(H3x1_4 - _MAX_);
312794    +   _SUM_ = _SUM_ + H3x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_4 ;
312795    +   H3x1_5  = EXP(H3x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_5 = EXP(H3x1_5 - _MAX_);
312796    +   _SUM_ = _SUM_ + H3x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_5 ;
312797    +   H3x1_6  = EXP(H3x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_6 = EXP(H3x1_6 - _MAX_);
312798    +   _SUM_ = _SUM_ + H3x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_6 ;
312799    +   H3x1_1  = H3x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 / _SUM_;
312800    +   H3x1_2  = H3x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_2 = H3x1_2 / _SUM_;
312801    +   H3x1_3  = H3x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_3 = H3x1_3 / _SUM_;
312802    +   H3x1_4  = H3x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_4 = H3x1_4 / _SUM_;
312803    +   H3x1_5  = H3x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_5 = H3x1_5 / _SUM_;
312804    +   H3x1_6  = H3x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_6 = H3x1_6 / _SUM_;
312805    +END;
MPRINT(EM_DIAGRAM):   END;
312806    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
312807    +   H3x1_1  = .;
MPRINT(EM_DIAGRAM):   H3x1_1 = .;
312808    +   H3x1_2  = .;
MPRINT(EM_DIAGRAM):   H3x1_2 = .;
312809    +   H3x1_3  = .;
MPRINT(EM_DIAGRAM):   H3x1_3 = .;
312810    +   H3x1_4  = .;
MPRINT(EM_DIAGRAM):   H3x1_4 = .;
312811    +   H3x1_5  = .;
MPRINT(EM_DIAGRAM):   H3x1_5 = .;
312812    +   H3x1_6  = .;
MPRINT(EM_DIAGRAM):   H3x1_6 = .;
312813    +END;
MPRINT(EM_DIAGRAM):   END;
312814    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
312815    +*** Writing the Node H3x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x2_ ;
312816    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
312817    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
312818    +   H3x2_1  =     0.13469056275633 * H2x1_1  +    -1.31570873196603 * H2x1_2
312819    +          +    -0.83004507775706 * H2x1_3  +     1.14954585467995 * H2x1_4
312820    +          +     0.01234753333089 * H2x1_5  +     0.50683843245151 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x2_1 = 0.13469056275633 * H2x1_1 + -1.31570873196603 * H2x1_2 + 
-0.83004507775706 * H2x1_3 + 1.14954585467995 * H2x1_4 + 0.01234753333089 * H2x1_5 + 
0.50683843245151 * H2x1_6 ;
312821    +   H3x2_2  =     2.58620633866114 * H2x1_1  +     0.37629863890202 * H2x1_2
312822    +          +     0.34169762900278 * H2x1_3  +     1.24247313002596 * H2x1_4
312823    +          +     -0.1965463932822 * H2x1_5  +    -0.00458488228083 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x2_2 = 2.58620633866114 * H2x1_1 + 0.37629863890202 * H2x1_2 + 
0.34169762900278 * H2x1_3 + 1.24247313002596 * H2x1_4 + -0.1965463932822 * H2x1_5 + 
-0.00458488228083 * H2x1_6 ;
312824    +   H3x2_3  =    -2.01883694738218 * H2x1_1  +     0.83782353926562 * H2x1_2
312825    +          +    -1.95119268200972 * H2x1_3  +    -1.04826190833003 * H2x1_4
312826    +          +     1.66733023346498 * H2x1_5  +     0.23483419363088 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x2_3 = -2.01883694738218 * H2x1_1 + 0.83782353926562 * H2x1_2 + 
-1.95119268200972 * H2x1_3 + -1.04826190833003 * H2x1_4 + 1.66733023346498 * H2x1_5 + 
0.23483419363088 * H2x1_6 ;
312827    +   H3x2_4  =     0.40678642111393 * H2x1_1  +    -0.10557612663286 * H2x1_2
312828    +          +    -0.34694532874387 * H2x1_3  +     -1.6967916788772 * H2x1_4
312829    +          +     0.24026556349373 * H2x1_5  +    -0.69393637888423 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x2_4 = 0.40678642111393 * H2x1_1 + -0.10557612663286 * H2x1_2 + 
-0.34694532874387 * H2x1_3 + -1.6967916788772 * H2x1_4 + 0.24026556349373 * H2x1_5 + 
-0.69393637888423 * H2x1_6 ;
312830    +   H3x2_5  =    -1.48304630985783 * H2x1_1  +     0.87426655970556 * H2x1_2
312831    +          +    -0.49899516599841 * H2x1_3  +    -1.94880978312007 * H2x1_4
312832    +          +    -2.45275015055877 * H2x1_5  +    -0.03264500335093 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x2_5 = -1.48304630985783 * H2x1_1 + 0.87426655970556 * H2x1_2 + 
-0.49899516599841 * H2x1_3 + -1.94880978312007 * H2x1_4 + -2.45275015055877 * H2x1_5 + 
-0.03264500335093 * H2x1_6 ;
312833    +   H3x2_1  = H3x2_1  +    -0.40915299509566 * H2x2_1
312834    +          +     1.45952180668254 * H2x2_2  +     0.42420517277224 * H2x2_3
312835    +          +    -0.79379446044158 * H2x2_4  +     0.73614212418439 * H2x2_5
312836    +          +     -0.6527392657117 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x2_1 = H3x2_1 + -0.40915299509566 * H2x2_1 + 1.45952180668254 * H2x2_2 
+ 0.42420517277224 * H2x2_3 + -0.79379446044158 * H2x2_4 + 0.73614212418439 * H2x2_5 + 
-0.6527392657117 * H2x2_6 ;
312837    +   H3x2_2  = H3x2_2  +    -1.62752321860626 * H2x2_1
312838    +          +    -0.04689831325067 * H2x2_2  +    -2.87951125721119 * H2x2_3
312839    +          +    -0.36181303609331 * H2x2_4  +     0.55999175715209 * H2x2_5
312840    +          +    -0.40911363767301 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x2_2 = H3x2_2 + -1.62752321860626 * H2x2_1 + -0.04689831325067 * 
H2x2_2 + -2.87951125721119 * H2x2_3 + -0.36181303609331 * H2x2_4 + 0.55999175715209 * H2x2_5 + 
-0.40911363767301 * H2x2_6 ;
312841    +   H3x2_3  = H3x2_3  +     0.50766404641726 * H2x2_1
312842    +          +     0.02747397544049 * H2x2_2  +    -1.35626517144826 * H2x2_3
312843    +          +     0.23390260329386 * H2x2_4  +     -0.5025118845527 * H2x2_5
312844    +          +    -1.14035867434772 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x2_3 = H3x2_3 + 0.50766404641726 * H2x2_1 + 0.02747397544049 * H2x2_2 
+ -1.35626517144826 * H2x2_3 + 0.23390260329386 * H2x2_4 + -0.5025118845527 * H2x2_5 + 
-1.14035867434772 * H2x2_6 ;
312845    +   H3x2_4  = H3x2_4  +     0.64958154360038 * H2x2_1
312846    +          +     1.68671947742627 * H2x2_2  +    -0.42417215632785 * H2x2_3
312847    +          +    -0.39675884102374 * H2x2_4  +     1.98354732887496 * H2x2_5
312848    +          +    -1.32783167695801 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x2_4 = H3x2_4 + 0.64958154360038 * H2x2_1 + 1.68671947742627 * H2x2_2 
+ -0.42417215632785 * H2x2_3 + -0.39675884102374 * H2x2_4 + 1.98354732887496 * H2x2_5 + 
-1.32783167695801 * H2x2_6 ;
312849    +   H3x2_5  = H3x2_5  +     1.92075053147101 * H2x2_1
312850    +          +     1.22293096034837 * H2x2_2  +    -0.74039853818796 * H2x2_3
312851    +          +    -0.25033258903105 * H2x2_4  +     0.63358340091733 * H2x2_5
312852    +          +     0.17488501957475 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x2_5 = H3x2_5 + 1.92075053147101 * H2x2_1 + 1.22293096034837 * H2x2_2 
+ -0.74039853818796 * H2x2_3 + -0.25033258903105 * H2x2_4 + 0.63358340091733 * H2x2_5 + 
0.17488501957475 * H2x2_6 ;
312853    +   H3x2_1  = H3x2_1  +     0.88292932547634 * H2x3_1
312854    +          +    -0.27631908402136 * H2x3_2  +     0.93133699792762 * H2x3_3
312855    +          +     1.18769264917434 * H2x3_4  +    -0.88901652244884 * H2x3_5
312856    +          +    -0.17544617255869 * H2x3_6 ;
MPRINT(EM_DIAGRAM):   H3x2_1 = H3x2_1 + 0.88292932547634 * H2x3_1 + -0.27631908402136 * H2x3_2 
+ 0.93133699792762 * H2x3_3 + 1.18769264917434 * H2x3_4 + -0.88901652244884 * H2x3_5 + 
-0.17544617255869 * H2x3_6 ;
312857    +   H3x2_2  = H3x2_2  +     0.71538502917742 * H2x3_1
312858    +          +    -0.76848695288598 * H2x3_2  +     1.24503864708272 * H2x3_3
312859    +          +    -0.93962158881999 * H2x3_4  +    -0.43383001812557 * H2x3_5
312860    +          +     1.14672043219259 * H2x3_6 ;
MPRINT(EM_DIAGRAM):   H3x2_2 = H3x2_2 + 0.71538502917742 * H2x3_1 + -0.76848695288598 * H2x3_2 
+ 1.24503864708272 * H2x3_3 + -0.93962158881999 * H2x3_4 + -0.43383001812557 * H2x3_5 + 
1.14672043219259 * H2x3_6 ;
312861    +   H3x2_3  = H3x2_3  +    -0.39933331346344 * H2x3_1
312862    +          +      0.0019862182661 * H2x3_2  +    -0.60479718136768 * H2x3_3
312863    +          +      1.3818804125218 * H2x3_4  +     0.13498986352108 * H2x3_5
312864    +          +     1.02889511152823 * H2x3_6 ;
MPRINT(EM_DIAGRAM):   H3x2_3 = H3x2_3 + -0.39933331346344 * H2x3_1 + 0.0019862182661 * H2x3_2 
+ -0.60479718136768 * H2x3_3 + 1.3818804125218 * H2x3_4 + 0.13498986352108 * H2x3_5 + 
1.02889511152823 * H2x3_6 ;
312865    +   H3x2_4  = H3x2_4  +    -1.24198502624302 * H2x3_1
312866    +          +    -0.09061963757116 * H2x3_2  +    -0.70229381972412 * H2x3_3
312867    +          +    -1.43988785716026 * H2x3_4  +     0.45188902401215 * H2x3_5
312868    +          +     0.10073869982371 * H2x3_6 ;
MPRINT(EM_DIAGRAM):   H3x2_4 = H3x2_4 + -1.24198502624302 * H2x3_1 + -0.09061963757116 * 
H2x3_2 + -0.70229381972412 * H2x3_3 + -1.43988785716026 * H2x3_4 + 0.45188902401215 * H2x3_5 + 
0.10073869982371 * H2x3_6 ;
312869    +   H3x2_5  = H3x2_5  +     0.13815223958312 * H2x3_1
312870    +          +     0.38392032129472 * H2x3_2  +    -0.08374178846724 * H2x3_3
312871    +          +     0.39613433726611 * H2x3_4  +     1.64049322745471 * H2x3_5
312872    +          +     0.97496084656174 * H2x3_6 ;
MPRINT(EM_DIAGRAM):   H3x2_5 = H3x2_5 + 0.13815223958312 * H2x3_1 + 0.38392032129472 * H2x3_2 
+ -0.08374178846724 * H2x3_3 + 0.39613433726611 * H2x3_4 + 1.64049322745471 * H2x3_5 + 
0.97496084656174 * H2x3_6 ;
312873    +   H3x2_1  =    -0.72845954974251 + H3x2_1 ;
MPRINT(EM_DIAGRAM):   H3x2_1 = -0.72845954974251 + H3x2_1 ;
312874    +   H3x2_2  =     0.59148824718722 + H3x2_2 ;
MPRINT(EM_DIAGRAM):   H3x2_2 = 0.59148824718722 + H3x2_2 ;
312875    +   H3x2_3  =     1.28031731320103 + H3x2_3 ;
MPRINT(EM_DIAGRAM):   H3x2_3 = 1.28031731320103 + H3x2_3 ;
312876    +   H3x2_4  =    -0.11427038364635 + H3x2_4 ;
MPRINT(EM_DIAGRAM):   H3x2_4 = -0.11427038364635 + H3x2_4 ;
312877    +   H3x2_5  =    -0.28699725292326 + H3x2_5 ;
MPRINT(EM_DIAGRAM):   H3x2_5 = -0.28699725292326 + H3x2_5 ;
312878    +   H3x2_6  = 0;
MPRINT(EM_DIAGRAM):   H3x2_6 = 0;
312879    +   _MAX_ = MAX (H3x2_1 , H3x2_2 , H3x2_3 , H3x2_4 , H3x2_5 , H3x2_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H3x2_1 , H3x2_2 , H3x2_3 , H3x2_4 , H3x2_5 , H3x2_6 );
312880    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
312881    +   H3x2_1  = EXP(H3x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x2_1 = EXP(H3x2_1 - _MAX_);
312882    +   _SUM_ = _SUM_ + H3x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x2_1 ;
312883    +   H3x2_2  = EXP(H3x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x2_2 = EXP(H3x2_2 - _MAX_);
312884    +   _SUM_ = _SUM_ + H3x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x2_2 ;
312885    +   H3x2_3  = EXP(H3x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x2_3 = EXP(H3x2_3 - _MAX_);
312886    +   _SUM_ = _SUM_ + H3x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x2_3 ;
312887    +   H3x2_4  = EXP(H3x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x2_4 = EXP(H3x2_4 - _MAX_);
312888    +   _SUM_ = _SUM_ + H3x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x2_4 ;
312889    +   H3x2_5  = EXP(H3x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x2_5 = EXP(H3x2_5 - _MAX_);
312890    +   _SUM_ = _SUM_ + H3x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x2_5 ;
312891    +   H3x2_6  = EXP(H3x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x2_6 = EXP(H3x2_6 - _MAX_);
312892    +   _SUM_ = _SUM_ + H3x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x2_6 ;
312893    +   H3x2_1  = H3x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x2_1 = H3x2_1 / _SUM_;
312894    +   H3x2_2  = H3x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x2_2 = H3x2_2 / _SUM_;
312895    +   H3x2_3  = H3x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x2_3 = H3x2_3 / _SUM_;
312896    +   H3x2_4  = H3x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x2_4 = H3x2_4 / _SUM_;
312897    +   H3x2_5  = H3x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x2_5 = H3x2_5 / _SUM_;
312898    +   H3x2_6  = H3x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x2_6 = H3x2_6 / _SUM_;
312899    +END;
MPRINT(EM_DIAGRAM):   END;
312900    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
312901    +   H3x2_1  = .;
MPRINT(EM_DIAGRAM):   H3x2_1 = .;
312902    +   H3x2_2  = .;
MPRINT(EM_DIAGRAM):   H3x2_2 = .;
312903    +   H3x2_3  = .;
MPRINT(EM_DIAGRAM):   H3x2_3 = .;
312904    +   H3x2_4  = .;
MPRINT(EM_DIAGRAM):   H3x2_4 = .;
312905    +   H3x2_5  = .;
MPRINT(EM_DIAGRAM):   H3x2_5 = .;
312906    +   H3x2_6  = .;
MPRINT(EM_DIAGRAM):   H3x2_6 = .;
312907    +END;
MPRINT(EM_DIAGRAM):   END;
312908    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
312909    +*** Writing the Node H4x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H4x1_ ;
312910    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
312911    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
312912    +   H4x1_1  =     0.10986960182278 * H3x1_1  +    -0.10835805909937 * H3x1_2
312913    +          +     1.78643376838566 * H3x1_3  +    -0.00067995179919 * H3x1_4
312914    +          +     2.04711620528782 * H3x1_5  +    -0.66853997603718 * H3x1_6 ;
MPRINT(EM_DIAGRAM):   H4x1_1 = 0.10986960182278 * H3x1_1 + -0.10835805909937 * H3x1_2 + 
1.78643376838566 * H3x1_3 + -0.00067995179919 * H3x1_4 + 2.04711620528782 * H3x1_5 + 
-0.66853997603718 * H3x1_6 ;
312915    +   H4x1_2  =    -0.17187141657369 * H3x1_1  +    -1.56897037747293 * H3x1_2
312916    +          +    -1.38330818097338 * H3x1_3  +     3.94629669251083 * H3x1_4
312917    +          +    -0.57201557221624 * H3x1_5  +     0.99276034828548 * H3x1_6 ;
MPRINT(EM_DIAGRAM):   H4x1_2 = -0.17187141657369 * H3x1_1 + -1.56897037747293 * H3x1_2 + 
-1.38330818097338 * H3x1_3 + 3.94629669251083 * H3x1_4 + -0.57201557221624 * H3x1_5 + 
0.99276034828548 * H3x1_6 ;
312918    +   H4x1_3  =      1.5223304212488 * H3x1_1  +    -0.33490912702371 * H3x1_2
312919    +          +    -0.30324493540575 * H3x1_3  +    -1.23990036921669 * H3x1_4
312920    +          +     0.77489370055267 * H3x1_5  +    -0.38609823936674 * H3x1_6 ;
MPRINT(EM_DIAGRAM):   H4x1_3 = 1.5223304212488 * H3x1_1 + -0.33490912702371 * H3x1_2 + 
-0.30324493540575 * H3x1_3 + -1.23990036921669 * H3x1_4 + 0.77489370055267 * H3x1_5 + 
-0.38609823936674 * H3x1_6 ;
312921    +   H4x1_4  =    -0.75234452297837 * H3x1_1  +      1.1117782900703 * H3x1_2
312922    +          +      1.0171911341496 * H3x1_3  +     2.31462824862723 * H3x1_4
312923    +          +     1.05562639649812 * H3x1_5  +    -0.80603399686936 * H3x1_6 ;
MPRINT(EM_DIAGRAM):   H4x1_4 = -0.75234452297837 * H3x1_1 + 1.1117782900703 * H3x1_2 + 
1.0171911341496 * H3x1_3 + 2.31462824862723 * H3x1_4 + 1.05562639649812 * H3x1_5 + 
-0.80603399686936 * H3x1_6 ;
312924    +   H4x1_5  =    -0.35441774309359 * H3x1_1  +     0.37408435161205 * H3x1_2
312925    +          +    -0.79287886005891 * H3x1_3  +    -0.89695291885453 * H3x1_4
312926    +          +     0.46220429367054 * H3x1_5  +    -1.56166867584216 * H3x1_6 ;
MPRINT(EM_DIAGRAM):   H4x1_5 = -0.35441774309359 * H3x1_1 + 0.37408435161205 * H3x1_2 + 
-0.79287886005891 * H3x1_3 + -0.89695291885453 * H3x1_4 + 0.46220429367054 * H3x1_5 + 
-1.56166867584216 * H3x1_6 ;
312927    +   H4x1_1  = H4x1_1  +    -1.12622282402713 * H3x2_1
312928    +          +     2.43865739917959 * H3x2_2  +     1.62534005409988 * H3x2_3
312929    +          +     0.83506165677151 * H3x2_4  +    -0.15894659563972 * H3x2_5
312930    +          +     0.77216806897502 * H3x2_6 ;
MPRINT(EM_DIAGRAM):   H4x1_1 = H4x1_1 + -1.12622282402713 * H3x2_1 + 2.43865739917959 * H3x2_2 
+ 1.62534005409988 * H3x2_3 + 0.83506165677151 * H3x2_4 + -0.15894659563972 * H3x2_5 + 
0.77216806897502 * H3x2_6 ;
312931    +   H4x1_2  = H4x1_2  +     0.96736353410956 * H3x2_1
312932    +          +      1.6250281874285 * H3x2_2  +    -0.81418318229631 * H3x2_3
312933    +          +     0.35282111325987 * H3x2_4  +     0.11187473980261 * H3x2_5
312934    +          +     0.73971378600397 * H3x2_6 ;
MPRINT(EM_DIAGRAM):   H4x1_2 = H4x1_2 + 0.96736353410956 * H3x2_1 + 1.6250281874285 * H3x2_2 + 
-0.81418318229631 * H3x2_3 + 0.35282111325987 * H3x2_4 + 0.11187473980261 * H3x2_5 + 
0.73971378600397 * H3x2_6 ;
312935    +   H4x1_3  = H4x1_3  +    -0.30588247178582 * H3x2_1
312936    +          +     0.22302184288326 * H3x2_2  +    -0.15797620108073 * H3x2_3
312937    +          +     1.18515955770896 * H3x2_4  +     0.43359240886537 * H3x2_5
312938    +          +     0.90907054011344 * H3x2_6 ;
MPRINT(EM_DIAGRAM):   H4x1_3 = H4x1_3 + -0.30588247178582 * H3x2_1 + 0.22302184288326 * H3x2_2 
+ -0.15797620108073 * H3x2_3 + 1.18515955770896 * H3x2_4 + 0.43359240886537 * H3x2_5 + 
0.90907054011344 * H3x2_6 ;
312939    +   H4x1_4  = H4x1_4  +    -0.26678025657796 * H3x2_1
312940    +          +    -0.23171152283695 * H3x2_2  +    -0.72882061581264 * H3x2_3
312941    +          +     0.68597418643333 * H3x2_4  +      0.6559090638639 * H3x2_5
312942    +          +     0.95412028439169 * H3x2_6 ;
MPRINT(EM_DIAGRAM):   H4x1_4 = H4x1_4 + -0.26678025657796 * H3x2_1 + -0.23171152283695 * 
H3x2_2 + -0.72882061581264 * H3x2_3 + 0.68597418643333 * H3x2_4 + 0.6559090638639 * H3x2_5 + 
0.95412028439169 * H3x2_6 ;
312943    +   H4x1_5  = H4x1_5  +    -0.77875602324955 * H3x2_1
312944    +          +     -1.5646810153964 * H3x2_2  +    -0.53157591270506 * H3x2_3
312945    +          +    -0.27917864191674 * H3x2_4  +    -1.10966192483404 * H3x2_5
312946    +          +     -0.0058627670025 * H3x2_6 ;
MPRINT(EM_DIAGRAM):   H4x1_5 = H4x1_5 + -0.77875602324955 * H3x2_1 + -1.5646810153964 * H3x2_2 
+ -0.53157591270506 * H3x2_3 + -0.27917864191674 * H3x2_4 + -1.10966192483404 * H3x2_5 + 
-0.0058627670025 * H3x2_6 ;
312947    +   H4x1_1  =     0.87937070574208 + H4x1_1 ;
MPRINT(EM_DIAGRAM):   H4x1_1 = 0.87937070574208 + H4x1_1 ;
312948    +   H4x1_2  =     0.75203729660648 + H4x1_2 ;
MPRINT(EM_DIAGRAM):   H4x1_2 = 0.75203729660648 + H4x1_2 ;
312949    +   H4x1_3  =     1.14889100908291 + H4x1_3 ;
MPRINT(EM_DIAGRAM):   H4x1_3 = 1.14889100908291 + H4x1_3 ;
312950    +   H4x1_4  =    -1.71383624276913 + H4x1_4 ;
MPRINT(EM_DIAGRAM):   H4x1_4 = -1.71383624276913 + H4x1_4 ;
312951    +   H4x1_5  =     0.22194774900585 + H4x1_5 ;
MPRINT(EM_DIAGRAM):   H4x1_5 = 0.22194774900585 + H4x1_5 ;
312952    +   H4x1_6  = 0;
MPRINT(EM_DIAGRAM):   H4x1_6 = 0;
312953    +   _MAX_ = MAX (H4x1_1 , H4x1_2 , H4x1_3 , H4x1_4 , H4x1_5 , H4x1_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H4x1_1 , H4x1_2 , H4x1_3 , H4x1_4 , H4x1_5 , H4x1_6 );
312954    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
312955    +   H4x1_1  = EXP(H4x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H4x1_1 = EXP(H4x1_1 - _MAX_);
312956    +   _SUM_ = _SUM_ + H4x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H4x1_1 ;
312957    +   H4x1_2  = EXP(H4x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H4x1_2 = EXP(H4x1_2 - _MAX_);
312958    +   _SUM_ = _SUM_ + H4x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H4x1_2 ;
312959    +   H4x1_3  = EXP(H4x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H4x1_3 = EXP(H4x1_3 - _MAX_);
312960    +   _SUM_ = _SUM_ + H4x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H4x1_3 ;
312961    +   H4x1_4  = EXP(H4x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H4x1_4 = EXP(H4x1_4 - _MAX_);
312962    +   _SUM_ = _SUM_ + H4x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H4x1_4 ;
312963    +   H4x1_5  = EXP(H4x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H4x1_5 = EXP(H4x1_5 - _MAX_);
312964    +   _SUM_ = _SUM_ + H4x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H4x1_5 ;
312965    +   H4x1_6  = EXP(H4x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H4x1_6 = EXP(H4x1_6 - _MAX_);
312966    +   _SUM_ = _SUM_ + H4x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H4x1_6 ;
312967    +   H4x1_1  = H4x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H4x1_1 = H4x1_1 / _SUM_;
312968    +   H4x1_2  = H4x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H4x1_2 = H4x1_2 / _SUM_;
312969    +   H4x1_3  = H4x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H4x1_3 = H4x1_3 / _SUM_;
312970    +   H4x1_4  = H4x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H4x1_4 = H4x1_4 / _SUM_;
312971    +   H4x1_5  = H4x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H4x1_5 = H4x1_5 / _SUM_;
312972    +   H4x1_6  = H4x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H4x1_6 = H4x1_6 / _SUM_;
312973    +END;
MPRINT(EM_DIAGRAM):   END;
312974    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
312975    +   H4x1_1  = .;
MPRINT(EM_DIAGRAM):   H4x1_1 = .;
312976    +   H4x1_2  = .;
MPRINT(EM_DIAGRAM):   H4x1_2 = .;
312977    +   H4x1_3  = .;
MPRINT(EM_DIAGRAM):   H4x1_3 = .;
312978    +   H4x1_4  = .;
MPRINT(EM_DIAGRAM):   H4x1_4 = .;
312979    +   H4x1_5  = .;
MPRINT(EM_DIAGRAM):   H4x1_5 = .;
312980    +   H4x1_6  = .;
MPRINT(EM_DIAGRAM):   H4x1_6 = .;
312981    +END;
MPRINT(EM_DIAGRAM):   END;
312982    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
312983    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
312984    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
312985    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
312986    +   P_DepVar1  =    -5.30721919155126 * H4x1_1  +     10.4301477552223 * H4x1_2
312987    +          +    -3.40676330075486 * H4x1_3  +     0.07452634039202 * H4x1_4
312988    +          +    -2.90585821687293 * H4x1_5  +    -2.63321710569292 * H4x1_6 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -5.30721919155126 * H4x1_1 + 10.4301477552223 * H4x1_2 + 
-3.40676330075486 * H4x1_3 + 0.07452634039202 * H4x1_4 + -2.90585821687293 * H4x1_5 + 
-2.63321710569292 * H4x1_6 ;
312989    +   P_DepVar1  =    -2.93956196427421 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.93956196427421 + P_DepVar1 ;
312990    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
312991    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
312992    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
312993    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
312994    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
312995    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
312996    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
312997    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
312998    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
312999    +END;
MPRINT(EM_DIAGRAM):   END;
313000    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
313001    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
313002    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
313003    +END;
MPRINT(EM_DIAGRAM):   END;
313004    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
313005    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
313006    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
313007    +END;
MPRINT(EM_DIAGRAM):   END;
313008    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
313009    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
313010    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
313011    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
313012    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
313013    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
313014    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
313015    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
313016    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
313017    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
313018    +END;
MPRINT(EM_DIAGRAM):   END;
313019    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
313020    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
313021    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
313022    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
313023     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.06 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_DIAGRAM):   quit;
313024     quit;
313025     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
313026     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
313027     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
313028     retain ID 2 Node "AutoNeural28";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural28";
313029     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
313030     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 14351 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 14351 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

313031     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
313032     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
313033     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 14351 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 14351 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

313034     proc sort data=EMWS8.AutoNeural28_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural28_variableset out=_temp2(keep=NAME 
CREATOR);
313035     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
313036     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 13 observations read from the data set EMWS8.AUTONEURAL28_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 13 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

313037     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
313038     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
313039     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
313040     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 13 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 13 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

313041     proc contents data=EMWS8.AutoNeural28_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural28_train out=_meta(keep=NAME) noprint;
313042     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 114 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

313043     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
313044     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
313045     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 114 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 114 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

313046     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
313047     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
313048     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
313049     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 114 observations read from the data set WORK._META.
NOTE: There were 13 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 114 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

313050     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
313051     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
313051   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 6863 rows and 5 columns.

313052     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

313053     proc append base=EMWS8.Ensmbl19_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl19_FCMP data=_tempx;
313054     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL19_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 6863 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL19_FCMP has 6863 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

313055     filename _pref
313055   ! "C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMFLOWSCORE.sas";
313056     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
313057     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMFLOWSCORE.sas.
313058    +******************************************;
MPRINT(EM_DIAGRAM):   ******************************************;
313059    +*** Begin Scoring Code from PROC DMINE ***;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code from PROC DMINE ***;
313060    +******************************************;
MPRINT(EM_DIAGRAM):   ******************************************;
313061    +
313062    +length _WARN_ $ 4;
MPRINT(EM_DIAGRAM):   length _WARN_ $ 4;
313063    +label _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
313064    +
313065    +
313066    +/*----G_Marital_Status begin----*/
313067    +length _NORM8 $ 8;
MPRINT(EM_DIAGRAM):   /*----G_Marital_Status begin----*/ length _NORM8 $ 8;
313068    +_NORM8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _NORM8 = put( Marital_Status , $8. );
313069    +%DMNORMIP( _NORM8 )
MPRINT(DMNORMIP):   call dmnorm(_NORM8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
313070    +drop _NORM8;
MPRINT(EM_DIAGRAM):   drop _NORM8;
313071    +select(_NORM8);
MPRINT(EM_DIAGRAM):   select(_NORM8);
313072    +  when("DIVORCED" ) G_Marital_Status = 1;
MPRINT(EM_DIAGRAM):   when("DIVORCED" ) G_Marital_Status = 1;
313073    +  when("MARRIED " ) G_Marital_Status = 2;
MPRINT(EM_DIAGRAM):   when("MARRIED " ) G_Marital_Status = 2;
313074    +  when("SINGLE  " ) G_Marital_Status = 0;
MPRINT(EM_DIAGRAM):   when("SINGLE  " ) G_Marital_Status = 0;
313075    +  when("TOGETHER" ) G_Marital_Status = 2;
MPRINT(EM_DIAGRAM):   when("TOGETHER" ) G_Marital_Status = 2;
313076    +  when("WIDOW   " ) G_Marital_Status = 0;
MPRINT(EM_DIAGRAM):   when("WIDOW   " ) G_Marital_Status = 0;
313077    +  otherwise substr(_WARN_, 2, 1) = 'U';
MPRINT(EM_DIAGRAM):   otherwise substr(_WARN_, 2, 1) = 'U';
313078    +end;
MPRINT(EM_DIAGRAM):   end;
313079    +label G_Marital_Status="Grouped Levels for Marital_Status";
MPRINT(EM_DIAGRAM):   label G_Marital_Status="Grouped Levels for Marital_Status";
313080    +/*----G_Marital_Status end----*/
313081    +
313082    +
313083    +****************************************;
MPRINT(EM_DIAGRAM):   /*----G_Marital_Status end----*/ 
****************************************;
313084    +*** End Scoring Code from PROC DMINE ***;
MPRINT(EM_DIAGRAM):   *** End Scoring Code from PROC DMINE ***;
313085    +****************************************;
MPRINT(EM_DIAGRAM):   ****************************************;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
313086     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
313087     quit;
313088     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
313089     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
313090     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
313091     retain ID 3 Node "Varsel";
MPRINT(EM_DIAGRAM):   retain ID 3 Node "Varsel";
313092     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
313093     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 5 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 5 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

313094     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
313095     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
313096     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 5 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 5 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

313097     proc sort data=EMWS8.Varsel_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Varsel_variableset out=_temp2(keep=NAME CREATOR);
313098     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
313099     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.VARSEL_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

313100     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
313101     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
313102     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
313103     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

313104     proc contents data=EMWS8.Varsel_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Varsel_train out=_meta(keep=NAME) noprint;
313105     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 47 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

313106     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
313107     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
313108     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 47 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 47 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

313109     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
313110     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
313111     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
313112     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 47 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 47 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

313113     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
313114     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
313114   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 3 rows and 5 columns.

313115     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

313116     proc append base=EMWS8.Ensmbl19_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl19_FCMP data=_tempx;
313117     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL19_FCMP.
NOTE: There were 3 observations read from the data set WORK._TEMPX.
NOTE: 3 observations added.
NOTE: The data set EMWS8.ENSMBL19_FCMP has 6866 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

313118     filename _pref
313118   ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
313119     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
313120     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
313121    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
313122    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
313123    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
313124    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
313125    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
313126    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
313127     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
313128     quit;
313129     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
313130     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
313131     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
313132     retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
313133     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
313134     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

313135     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
313136     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
313137     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

313138     proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
313139     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
313140     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

313141     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
313142     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
313143     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
313144     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

313145     proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
313146     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

313147     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
313148     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
313149     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

313150     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
313151     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
313152     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
313153     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

313154     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
313155     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
313155   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

313156     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

313157     proc append base=EMWS8.Ensmbl19_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl19_FCMP data=_tempx;
313158     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL19_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL19_FCMP has 6870 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

313159     filename _pref
313159   ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
313160     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
313161     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
313162    +
313163    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
313164    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
313164   !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
313165    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
313166    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
313167    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
313168    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
313169    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
313170     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
313171     quit;
313172     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
313173     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
313174     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
313175     retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
313176     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
313177     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

313178     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
313179     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
313180     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

313181     proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
313182     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
313183     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

313184     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
313185     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
313186     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
313187     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

313188     proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
313189     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

313190     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
313191     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
313192     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

313193     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
313194     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
313195     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
313196     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

313197     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
313198     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
313198   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

313199     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

313200     proc append base=EMWS8.Ensmbl19_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl19_FCMP data=_tempx;
313201     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL19_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL19_FCMP has 6909 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

313202     filename _pref
313202   ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
313203     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
313204     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
313205    +
313206    +
313207    +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
313208    +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
313209    +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
313210    +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
313211    +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
313212    +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
313213    +
313214    +
313215    +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
313216    +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
313217    +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
313218    +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
313219    +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
313220    +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
313221    +
313222    +
313223    +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
313224    +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
313225    +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
313226    +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
313227    +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
313228    +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
313229    +
313230    +
313231    +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
313232    +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
313233    +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
313234    +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
313235    +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
313236    +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
313237    +
313238    +
313239    +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
313240    +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
313241    +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
313242    +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
313243    +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
313244    +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
313245    +
313246    +
313247    +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
313248    +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
313249    +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
313250    +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
313251    +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
313252    +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
313253    +
313254    +
313255    +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
313256    +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
313257    +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
313258    +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
313259    +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
313260    +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
313261    +
313262    +
313263    +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
313264    +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
313265    +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
313266    +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
313267    +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
313268    +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
313269    +if
313270    +_FILTERNORM1 not in ( '.')
313271    + and
313272    +_FILTERNORM2 not in ( '.')
313273    + and
313274    +_FILTERNORM3 not in ( '.')
313275    + and
313276    +_FILTERNORM4 not in ( '.')
313277    + and
313278    +_FILTERNORM5 not in ( '.')
313279    + and
313280    +_FILTERNORM6 not in ( '.')
313281    + and
313282    +_FILTERNORM7 not in ( ' ')
313283    + and
313284    +_FILTERNORM8 not in ( ' ')
313285    +and
313286    +( Dt_Customer ne .)
313287    +and ( Income ne . and (Income<=107000))
313288    +and ( Kidhome ne .)
313289    +and ( MntFishProducts ne .)
313290    +and ( MntFruits ne .)
313291    +and ( MntGoldProds ne .)
313292    +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
313293    +and ( MntSweetProducts ne .)
313294    +and ( MntWines ne .)
313295    +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
313296    +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
313297    +and ( NumStorePurchases ne .)
313298    +and ( NumWebPurchases ne .)
313299    +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
313300    +and ( Recency ne .)
313301    +and ( Teenhome ne .)
313302    +and ( Year_Birth ne .)
313303    +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
313304    +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
313305    +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
313306    +end;
MPRINT(EM_DIAGRAM):   end;
313307    +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
313308    +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
313309     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
313310     quit;
313311     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
313312     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
313313     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
313314     retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
313315     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
313316     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

313317     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
313318     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
313319     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

313320     proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
313321     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
313322     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

313323     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
313324     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
313325     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
313326     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

313327     proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
313328     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

313329     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
313330     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
313331     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

313332     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
313333     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
313334     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
313335     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

313336     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
313337     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
313337   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

313338     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

313339     proc append base=EMWS8.Ensmbl19_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl19_FCMP data=_tempx;
313340     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL19_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL19_FCMP has 6975 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

313341     %macro varDept(fcmpdata=,id=);
313342     %global nobs&id scoreFlag&id;
313343     %let scoreFlag&id = 0;
313344     %if &id=1 or ^&fcmpStart %then %do;
313345     proc sort data=&fcmpdata out=_temp&id nodupkey;
313346     by NAME;
313347     where id=&id and LHS in( %let j=1;
313348     %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
313349     %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
313350     "&var" %let j = %eval(&j+1);
313351     %end;
313352     );
313353     run;
313354     %let dsid = %sysfunc(open(_temp&id));
313355     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
313356     %let dsid = %sysfunc(close(&dsid));
313357     %if &&nobs&id %then %do;
313358     %let scoreFlag&id = 1;
313359     %let fcmpStart = 1;
313360     %end;
313361     %else %let fcmpStart = 0;
313362     %end;
313363     %else %do;
313364     proc sort data=&fcmpdata out=_tempid;
313365     where id=&id;
313366     by LHS;
313367     run;
313368     %let dsid = %sysfunc(open(_tempid));
313369     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
313370     %let dsid = %sysfunc(close(&dsid));
313371     %if ^&&nobs&id %then %do;
313372     proc datasets lib=work nolist;
313373     delete _tempid;
313374     run;
313375     quit;
313376     %end;
313377     %else %do;
313378     data _tempAll;
313379     set %let j=%eval(&id-1);
313380     %do x=1 %to &j;
313381     %if &&nobs&x %then %do;
313382     _temp&x %end;
313383     %end;
313384     ;
313385     run;
313386     proc sql;
313387     create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
313387   ! work._tempid p2 where p.name=p2.lhs;
313388     quit;
313389     data _temp&id;
313390     set _temp&id;
313391     where LHS ne '' and NAME ne '' and Node ne '';
313392     run;
313393     proc datasets lib=work nolist;
313394     delete _tempAll;
313395     run;
313396     %let dsid = %sysfunc(open(_temp&id));
313397     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
313398     %let dsid = %sysfunc(close(&dsid));
313399     %if ^&&nobs&id %then %do;
313400     proc datasets lib=work nolist;
313401     delete _temp&id;
313402     run;
313403     quit;
313404     %end;
313405     %else %do;
313406     %let scoreFlag&id = 1;
313407     data _temp&id;
313408     set _temp&id;
313409     where LHS ne NAME and node ne '';
313410     run;
313411     %let dsid = %sysfunc(open(_temp&id));
313412     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
313413     %let dsid = %sysfunc(close(&dsid));
313414     %if ^&&nobs&id %then %do;
313415     proc datasets lib=work nolist;
313416     delete _temp&id;
313417     run;
313418     quit;
313419     %end;
313420     %else %do;
313421     proc sort data=_temp&id nodupkey;
313422     by LHS NAME;
313423     run;
313424     %end;
313425     %end;
313426     %end;
313427     %end;
313428     %mend varDept;
313429     %macro optCode(outdata=fcmpdata);
313430     %global fcmpStart;
313431     %let fcmpStart = 0;
313432     %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
313433     %let NumNodes=9;
313434     %do k=1 %to &NumNodes;
313435     %vardept(fcmpdata=&outdata, id=&k);
313436     %end;
313437     %mend optCode;
313438     %optcode(outData=EMWS8.Ensmbl19_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl19_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL19_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl19_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 234 observations read from the data set EMWS8.ENSMBL19_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 160 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 74 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl19_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 3 observations read from the data set EMWS8.ENSMBL19_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 3 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 74 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 74 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp3 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP3 created, with 1 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 1 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP3 has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 1 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP3 has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp3 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 1 observations read from the data set WORK._TEMP3.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP3 has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl19_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL19_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl19_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL19_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 ;
MPRINT(VARDEPT):   run;

NOTE: There were 74 observations read from the data set WORK._TEMP2.
NOTE: There were 1 observations read from the data set WORK._TEMP3.
NOTE: The data set WORK._TEMPALL has 75 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 2 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl19_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL19_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 74 observations read from the data set WORK._TEMP2.
NOTE: There were 1 observations read from the data set WORK._TEMP3.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 77 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 37 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 37 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 37 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 37 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 37 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 37 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 37 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl19_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL19_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 74 observations read from the data set WORK._TEMP2.
NOTE: There were 1 observations read from the data set WORK._TEMP3.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: There were 37 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 114 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl19_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL19_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl19_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL19_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

313439     data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
313440     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
313441     where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
313442     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

313443     data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
313444     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
313445     where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
313446     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

313447     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
313448     create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
313448   ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 2 rows and 3 columns.

313449     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

313450     data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
313451     set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
313452     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 2 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 2 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

313453     data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
313454     set EMWS8.Varsel_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Varsel_EMSCOREVAR;
313455     where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
313456     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.VARSEL_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

313457     data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
313458     set EMWS8.Varsel_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Varsel_EMSCOREVAR;
313459     where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
313460     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.VARSEL_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

313461     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
313462     create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3 p,
313462   ! EMWS8.Varsel_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3 
p, EMWS8.Varsel_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR7 created, with 1 rows and 3 columns.

313463     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

313464     data _CodeVar7;
MPRINT(EM_DIAGRAM):   data _CodeVar7;
313465     set _all_ _CodeVar7 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar7 _postall_;
313466     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 1 observations read from the data set WORK._CODEVAR7.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR7 has 1 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

313467     filename _pref
313467   ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural28\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural28\EMPUBLISHSCORE.sas";
313468     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
313469     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural28\EMPUBLISHSCORE.sas.
313470    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
313471    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
313472    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
313473    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
313474    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
313475    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
313476    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
313477    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
313478    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
313479    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
313480    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
313481    +LENGTH _WARN_ $4
313482    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
313483    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
313484    +
313485    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
313486    +
313487    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
313488    +
313489    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
313490    +
313491    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
313492    +
313493    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
313494    +
313495    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
313496    +
313497    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
313498    +
313499    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
313500    +
313501    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
313502    +
313503    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
313504    +
313505    +      label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
313506    +
313507    +      label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
313508    +
313509    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
313510    +
313511    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
313512    +
313513    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
313514    +
313515    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
313516    +
313517    +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
313518    +
313519    +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
313520    +
313521    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
313522    +
313523    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
313524    +
313525    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
313526    +
313527    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
313528    +
313529    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
313530    +
313531    +*** Generate dummy variables for G_Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for G_Marital_Status ;
313532    +drop G_Marital_Status0 G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   drop G_Marital_Status0 G_Marital_Status1 ;
313533    +if missing( G_Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( G_Marital_Status ) then do;
313534    +   G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
313535    +   G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
313536    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
313537    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
313538    +end;
MPRINT(EM_DIAGRAM):   end;
313539    +else do;
MPRINT(EM_DIAGRAM):   else do;
313540    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
313541    +   _dm12 = put( G_Marital_Status , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( G_Marital_Status , BEST12. );
313542    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
313543    +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
313544    +      G_Marital_Status0 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = -1;
313545    +      G_Marital_Status1 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = -1;
313546    +   end;
MPRINT(EM_DIAGRAM):   end;
313547    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
313548    +      G_Marital_Status0 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 1;
313549    +      G_Marital_Status1 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 0;
313550    +   end;
MPRINT(EM_DIAGRAM):   end;
313551    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
313552    +      G_Marital_Status0 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 0;
313553    +      G_Marital_Status1 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 1;
313554    +   end;
MPRINT(EM_DIAGRAM):   end;
313555    +   else do;
MPRINT(EM_DIAGRAM):   else do;
313556    +      G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
313557    +      G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
313558    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
313559    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
313560    +   end;
MPRINT(EM_DIAGRAM):   end;
313561    +end;
MPRINT(EM_DIAGRAM):   end;
313562    +
313563    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
313564    +*** Checking missing input Interval
313565    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
313566    +
313567    +IF NMISS(
313568    +   AcceptedCmpTotal ,
313569    +   Frq ,
313570    +   Income ,
313571    +   Mnt ,
313572    +   MntGoldProds ,
313573    +   MntMeatProducts ,
313574    +   MntWines ,
313575    +   NumDistPurchases ,
313576    +   RFMstat ,
313577    +   RMntFrq ,
313578    +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntGoldProds , 
MntMeatProducts , MntWines , NumDistPurchases , RFMstat , RMntFrq , Recency ) THEN DO;
313579    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
313580    +
313581    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
313582    +END;
MPRINT(EM_DIAGRAM):   END;
313583    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
313584    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
313585    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
313586    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
313587    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
313588    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
313589    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
313590    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
313591    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
313592    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
313593    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
313594    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
313595    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
313596    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
313597    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
313598    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
313599    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
313600    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
313601    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
313602    +END;
MPRINT(EM_DIAGRAM):   END;
313603    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
313604    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
313605    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
313606    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
313607    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
313608    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
313609    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
313610    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
313611    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
313612    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
313613    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
313614    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
313615    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
313616    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
313617    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
313618    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
313619    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
313620    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
313621    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
313622    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
313623    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
313624    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
313625    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
313626    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
313627    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
313628    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
313629    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
313630    +END;
MPRINT(EM_DIAGRAM):   END;
313631    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
313632    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
313633    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
313634    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
313635    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
313636    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
313637    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
313638    +   H11  =     0.40839920245437 * S_AcceptedCmpTotal  +    -0.80301052154323 *
313639    +        S_Frq  +     0.19839975683497 * S_Income  +    -0.71099382445924 *
313640    +        S_Mnt  +    -0.15644638799226 * S_MntGoldProds
313641    +          +    -0.05910355740416 * S_MntMeatProducts
313642    +          +     0.23095157103241 * S_MntWines  +     0.67840217585411 *
313643    +        S_NumDistPurchases  +     0.12536920827324 * S_RFMstat
313644    +          +    -0.27246125863137 * S_RMntFrq  +    -1.02114645988925 *
313645    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H11 = 0.40839920245437 * S_AcceptedCmpTotal + -0.80301052154323 * S_Frq 
+ 0.19839975683497 * S_Income + -0.71099382445924 * S_Mnt + -0.15644638799226 * S_MntGoldProds 
+ -0.05910355740416 * S_MntMeatProducts + 0.23095157103241 * S_MntWines + 0.67840217585411 * 
S_NumDistPurchases + 0.12536920827324 * S_RFMstat + -0.27246125863137 * S_RMntFrq + 
-1.02114645988925 * S_Recency ;
313646    +   H12  =    -0.09503041118006 * S_AcceptedCmpTotal  +     0.74672296647411 *
313647    +        S_Frq  +     1.82688988564051 * S_Income  +    -0.06831964209279 *
313648    +        S_Mnt  +    -0.13330887266177 * S_MntGoldProds
313649    +          +     0.09400377526937 * S_MntMeatProducts
313650    +          +    -0.53358910675611 * S_MntWines  +     0.13886503925085 *
313651    +        S_NumDistPurchases  +     0.02243224025219 * S_RFMstat
313652    +          +    -0.03110171961938 * S_RMntFrq  +     0.39055670382948 *
313653    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H12 = -0.09503041118006 * S_AcceptedCmpTotal + 0.74672296647411 * S_Frq 
+ 1.82688988564051 * S_Income + -0.06831964209279 * S_Mnt + -0.13330887266177 * S_MntGoldProds 
+ 0.09400377526937 * S_MntMeatProducts + -0.53358910675611 * S_MntWines + 0.13886503925085 * 
S_NumDistPurchases + 0.02243224025219 * S_RFMstat + -0.03110171961938 * S_RMntFrq + 
0.39055670382948 * S_Recency ;
313654    +   H13  =    -0.07144509122078 * S_AcceptedCmpTotal  +     0.65325962599673 *
313655    +        S_Frq  +     0.03169199805286 * S_Income  +     0.53573115818994 *
313656    +        S_Mnt  +     0.13372718478424 * S_MntGoldProds
313657    +          +    -1.62740823190029 * S_MntMeatProducts
313658    +          +     0.15642273844597 * S_MntWines  +    -0.78908066213044 *
313659    +        S_NumDistPurchases  +     -0.4365555360753 * S_RFMstat
313660    +          +    -0.63552932650743 * S_RMntFrq  +     0.17699292292485 *
313661    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H13 = -0.07144509122078 * S_AcceptedCmpTotal + 0.65325962599673 * S_Frq 
+ 0.03169199805286 * S_Income + 0.53573115818994 * S_Mnt + 0.13372718478424 * S_MntGoldProds + 
-1.62740823190029 * S_MntMeatProducts + 0.15642273844597 * S_MntWines + -0.78908066213044 * 
S_NumDistPurchases + -0.4365555360753 * S_RFMstat + -0.63552932650743 * S_RMntFrq + 
0.17699292292485 * S_Recency ;
313662    +   H14  =     0.03098188354318 * S_AcceptedCmpTotal  +    -0.04737735825642 *
313663    +        S_Frq  +     0.30967861276694 * S_Income  +    -0.03786683388502 *
313664    +        S_Mnt  +     0.25532115520236 * S_MntGoldProds
313665    +          +      0.3965117290354 * S_MntMeatProducts
313666    +          +     0.36188945634536 * S_MntWines  +    -0.24664355133344 *
313667    +        S_NumDistPurchases  +     0.15627885374544 * S_RFMstat
313668    +          +    -0.10763737759383 * S_RMntFrq  +     -0.4091862538023 *
313669    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H14 = 0.03098188354318 * S_AcceptedCmpTotal + -0.04737735825642 * S_Frq 
+ 0.30967861276694 * S_Income + -0.03786683388502 * S_Mnt + 0.25532115520236 * S_MntGoldProds 
+ 0.3965117290354 * S_MntMeatProducts + 0.36188945634536 * S_MntWines + -0.24664355133344 * 
S_NumDistPurchases + 0.15627885374544 * S_RFMstat + -0.10763737759383 * S_RMntFrq + 
-0.4091862538023 * S_Recency ;
313670    +   H15  =     0.27467896926965 * S_AcceptedCmpTotal  +    -1.33897347254907 *
313671    +        S_Frq  +    -0.08574739739253 * S_Income  +    -0.68536026344277 *
313672    +        S_Mnt  +     0.08729572232071 * S_MntGoldProds
313673    +          +     1.44231431118379 * S_MntMeatProducts
313674    +          +    -0.09322237385561 * S_MntWines  +      1.5568901785563 *
313675    +        S_NumDistPurchases  +     0.06237505409693 * S_RFMstat
313676    +          +    -1.04636887800306 * S_RMntFrq  +    -0.38411527089703 *
313677    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H15 = 0.27467896926965 * S_AcceptedCmpTotal + -1.33897347254907 * S_Frq 
+ -0.08574739739253 * S_Income + -0.68536026344277 * S_Mnt + 0.08729572232071 * S_MntGoldProds 
+ 1.44231431118379 * S_MntMeatProducts + -0.09322237385561 * S_MntWines + 1.5568901785563 * 
S_NumDistPurchases + 0.06237505409693 * S_RFMstat + -1.04636887800306 * S_RMntFrq + 
-0.38411527089703 * S_Recency ;
313678    +   H16  =    -0.89143353938241 * S_AcceptedCmpTotal  +     0.45211708970504 *
313679    +        S_Frq  +    -0.44897699945178 * S_Income  +    -0.32314426452158 *
313680    +        S_Mnt  +    -0.32329530597419 * S_MntGoldProds
313681    +          +    -0.44244305964257 * S_MntMeatProducts
313682    +          +    -0.04171589876809 * S_MntWines  +     0.42122451368745 *
313683    +        S_NumDistPurchases  +    -0.15802898075961 * S_RFMstat
313684    +          +    -0.40329155853226 * S_RMntFrq  +    -0.65176917675454 *
313685    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H16 = -0.89143353938241 * S_AcceptedCmpTotal + 0.45211708970504 * S_Frq 
+ -0.44897699945178 * S_Income + -0.32314426452158 * S_Mnt + -0.32329530597419 * 
S_MntGoldProds + -0.44244305964257 * S_MntMeatProducts + -0.04171589876809 * S_MntWines + 
0.42122451368745 * S_NumDistPurchases + -0.15802898075961 * S_RFMstat + -0.40329155853226 * 
S_RMntFrq + -0.65176917675454 * S_Recency ;
313686    +   H11  = H11  +     0.01448447530274 * G_Marital_Status0
313687    +          +     0.42194179998625 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.01448447530274 * G_Marital_Status0 + 0.42194179998625 * 
G_Marital_Status1 ;
313688    +   H12  = H12  +     0.12689198218881 * G_Marital_Status0
313689    +          +     0.13222809503301 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.12689198218881 * G_Marital_Status0 + 0.13222809503301 * 
G_Marital_Status1 ;
313690    +   H13  = H13  +     0.02279524261833 * G_Marital_Status0
313691    +          +     0.22562672580832 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.02279524261833 * G_Marital_Status0 + 0.22562672580832 * 
G_Marital_Status1 ;
313692    +   H14  = H14  +     1.11856448462308 * G_Marital_Status0
313693    +          +     0.27730078918446 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 1.11856448462308 * G_Marital_Status0 + 0.27730078918446 * 
G_Marital_Status1 ;
313694    +   H15  = H15  +    -0.04694745686684 * G_Marital_Status0
313695    +          +     0.25879365732348 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.04694745686684 * G_Marital_Status0 + 0.25879365732348 * 
G_Marital_Status1 ;
313696    +   H16  = H16  +    -0.22835702249634 * G_Marital_Status0
313697    +          +     0.18090765090711 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + -0.22835702249634 * G_Marital_Status0 + 0.18090765090711 * 
G_Marital_Status1 ;
313698    +   H11  =     1.23863858658783 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 1.23863858658783 + H11 ;
313699    +   H12  =    -0.12218156586843 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.12218156586843 + H12 ;
313700    +   H13  =    -1.28170837349164 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -1.28170837349164 + H13 ;
313701    +   H14  =    -2.07579206307318 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -2.07579206307318 + H14 ;
313702    +   H15  =    -0.99934113480463 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -0.99934113480463 + H15 ;
313703    +   H16  =     1.30250382782737 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = 1.30250382782737 + H16 ;
313704    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
313705    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
313706    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
313707    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
313708    +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
313709    +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
313710    +END;
MPRINT(EM_DIAGRAM):   END;
313711    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
313712    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
313713    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
313714    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
313715    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
313716    +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
313717    +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
313718    +END;
MPRINT(EM_DIAGRAM):   END;
313719    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
313720    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
313721    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
313722    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
313723    +   P_DepVar1  =     3.62046962800706 * H11  +      -1.860875673098 * H12
313724    +          +    -3.65105027155196 * H13  +     2.14381074770309 * H14
313725    +          +     3.35729012959095 * H15  +    -2.46245459087361 * H16 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 3.62046962800706 * H11 + -1.860875673098 * H12 + 
-3.65105027155196 * H13 + 2.14381074770309 * H14 + 3.35729012959095 * H15 + -2.46245459087361 
* H16 ;
313726    +   P_DepVar1  =    -2.50510283018473 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.50510283018473 + P_DepVar1 ;
313727    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
313728    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
313729    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
313730    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
313731    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
313732    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
313733    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
313734    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
313735    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
313736    +END;
MPRINT(EM_DIAGRAM):   END;
313737    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
313738    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
313739    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
313740    +END;
MPRINT(EM_DIAGRAM):   END;
313741    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
313742    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
313743    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
313744    +END;
MPRINT(EM_DIAGRAM):   END;
313745    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
313746    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
313747    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
313748    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
313749    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
313750    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
313751    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
313752    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
313753    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
313754    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
313755    +END;
MPRINT(EM_DIAGRAM):   END;
313756    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
313757    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
313758    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
313759    +drop
313760    +H11
313761    +H12
313762    +H13
313763    +H14
313764    +H15
313765    +H16
313766    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 ;
313767    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
313768     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
313769     quit;
313770     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
313771     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
313772     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
313773     retain ID 2 Node "Neural28";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural28";
313774     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
313775     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 995 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 995 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

313776     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
313777     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
313778     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 995 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 995 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

313779     proc sort data=EMWS8.Neural28_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural28_variableset out=_temp2(keep=NAME CREATOR);
313780     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
313781     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 13 observations read from the data set EMWS8.NEURAL28_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 13 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

313782     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
313783     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
313784     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
313785     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 13 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 13 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

313786     proc contents data=EMWS8.Neural28_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural28_train out=_meta(keep=NAME) noprint;
313787     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 54 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

313788     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
313789     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
313790     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 54 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 54 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

313791     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
313792     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
313793     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
313794     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 54 observations read from the data set WORK._META.
NOTE: There were 13 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 54 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

313795     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
313796     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
313796   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 443 rows and 5 columns.

313797     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

313798     proc append base=EMWS8.Ensmbl19_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl19_FCMP data=_tempx;
313799     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL19_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 443 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL19_FCMP has 443 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

313800     filename _pref
313800   ! "C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMFLOWSCORE.sas";
313801     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
313802     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMFLOWSCORE.sas.
313803    +******************************************;
MPRINT(EM_DIAGRAM):   ******************************************;
313804    +*** Begin Scoring Code from PROC DMINE ***;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code from PROC DMINE ***;
313805    +******************************************;
MPRINT(EM_DIAGRAM):   ******************************************;
313806    +
313807    +length _WARN_ $ 4;
MPRINT(EM_DIAGRAM):   length _WARN_ $ 4;
313808    +label _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
313809    +
313810    +
313811    +/*----G_Marital_Status begin----*/
313812    +length _NORM8 $ 8;
MPRINT(EM_DIAGRAM):   /*----G_Marital_Status begin----*/ length _NORM8 $ 8;
313813    +_NORM8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _NORM8 = put( Marital_Status , $8. );
313814    +%DMNORMIP( _NORM8 )
MPRINT(DMNORMIP):   call dmnorm(_NORM8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
313815    +drop _NORM8;
MPRINT(EM_DIAGRAM):   drop _NORM8;
313816    +select(_NORM8);
MPRINT(EM_DIAGRAM):   select(_NORM8);
313817    +  when("DIVORCED" ) G_Marital_Status = 1;
MPRINT(EM_DIAGRAM):   when("DIVORCED" ) G_Marital_Status = 1;
313818    +  when("MARRIED " ) G_Marital_Status = 2;
MPRINT(EM_DIAGRAM):   when("MARRIED " ) G_Marital_Status = 2;
313819    +  when("SINGLE  " ) G_Marital_Status = 0;
MPRINT(EM_DIAGRAM):   when("SINGLE  " ) G_Marital_Status = 0;
313820    +  when("TOGETHER" ) G_Marital_Status = 2;
MPRINT(EM_DIAGRAM):   when("TOGETHER" ) G_Marital_Status = 2;
313821    +  when("WIDOW   " ) G_Marital_Status = 0;
MPRINT(EM_DIAGRAM):   when("WIDOW   " ) G_Marital_Status = 0;
313822    +  otherwise substr(_WARN_, 2, 1) = 'U';
MPRINT(EM_DIAGRAM):   otherwise substr(_WARN_, 2, 1) = 'U';
313823    +end;
MPRINT(EM_DIAGRAM):   end;
313824    +label G_Marital_Status="Grouped Levels for Marital_Status";
MPRINT(EM_DIAGRAM):   label G_Marital_Status="Grouped Levels for Marital_Status";
313825    +/*----G_Marital_Status end----*/
313826    +
313827    +
313828    +****************************************;
MPRINT(EM_DIAGRAM):   /*----G_Marital_Status end----*/ 
****************************************;
313829    +*** End Scoring Code from PROC DMINE ***;
MPRINT(EM_DIAGRAM):   *** End Scoring Code from PROC DMINE ***;
313830    +****************************************;
MPRINT(EM_DIAGRAM):   ****************************************;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
313831     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
313832     quit;
313833     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
313834     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
313835     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
313836     retain ID 3 Node "Varsel";
MPRINT(EM_DIAGRAM):   retain ID 3 Node "Varsel";
313837     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
313838     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 5 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 5 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

313839     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
313840     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
313841     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 5 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 5 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

313842     proc sort data=EMWS8.Varsel_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Varsel_variableset out=_temp2(keep=NAME CREATOR);
313843     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
313844     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.VARSEL_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

313845     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
313846     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
313847     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
313848     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

313849     proc contents data=EMWS8.Varsel_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Varsel_train out=_meta(keep=NAME) noprint;
313850     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 47 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

313851     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
313852     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
313853     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 47 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 47 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

313854     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
313855     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
313856     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
313857     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 47 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 47 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

313858     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
313859     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
313859   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 3 rows and 5 columns.

313860     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

313861     proc append base=EMWS8.Ensmbl19_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl19_FCMP data=_tempx;
313862     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL19_FCMP.
NOTE: There were 3 observations read from the data set WORK._TEMPX.
NOTE: 3 observations added.
NOTE: The data set EMWS8.ENSMBL19_FCMP has 446 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

313863     filename _pref
313863   ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
313864     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
313865     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
313866    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
313867    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
313868    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
313869    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
313870    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
313871    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
313872     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
313873     quit;
313874     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
313875     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
313876     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
313877     retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
313878     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
313879     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

313880     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
313881     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
313882     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

313883     proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
313884     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
313885     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

313886     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
313887     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
313888     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
313889     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

313890     proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
313891     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

313892     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
313893     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
313894     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

313895     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
313896     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
313897     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
313898     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

313899     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
313900     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
313900   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

313901     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

313902     proc append base=EMWS8.Ensmbl19_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl19_FCMP data=_tempx;
313903     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL19_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL19_FCMP has 450 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

313904     filename _pref
313904   ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
313905     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
313906     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
313907    +
313908    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
313909    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
313909   !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
313910    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
313911    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
313912    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
313913    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
313914    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
313915     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
313916     quit;
313917     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
313918     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
313919     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
313920     retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
313921     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
313922     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

313923     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
313924     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
313925     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

313926     proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
313927     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
313928     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

313929     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
313930     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
313931     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
313932     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

313933     proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
313934     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

313935     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
313936     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
313937     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

313938     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
313939     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
313940     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
313941     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

313942     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
313943     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
313943   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

313944     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

313945     proc append base=EMWS8.Ensmbl19_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl19_FCMP data=_tempx;
313946     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL19_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL19_FCMP has 489 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

313947     filename _pref
313947   ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
313948     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
313949     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
313950    +
313951    +
313952    +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
313953    +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
313954    +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
313955    +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
313956    +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
313957    +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
313958    +
313959    +
313960    +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
313961    +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
313962    +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
313963    +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
313964    +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
313965    +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
313966    +
313967    +
313968    +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
313969    +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
313970    +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
313971    +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
313972    +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
313973    +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
313974    +
313975    +
313976    +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
313977    +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
313978    +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
313979    +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
313980    +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
313981    +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
313982    +
313983    +
313984    +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
313985    +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
313986    +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
313987    +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
313988    +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
313989    +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
313990    +
313991    +
313992    +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
313993    +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
313994    +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
313995    +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
313996    +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
313997    +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
313998    +
313999    +
314000    +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
314001    +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
314002    +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
314003    +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
314004    +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
314005    +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
314006    +
314007    +
314008    +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
314009    +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
314010    +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
314011    +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
314012    +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
314013    +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
314014    +if
314015    +_FILTERNORM1 not in ( '.')
314016    + and
314017    +_FILTERNORM2 not in ( '.')
314018    + and
314019    +_FILTERNORM3 not in ( '.')
314020    + and
314021    +_FILTERNORM4 not in ( '.')
314022    + and
314023    +_FILTERNORM5 not in ( '.')
314024    + and
314025    +_FILTERNORM6 not in ( '.')
314026    + and
314027    +_FILTERNORM7 not in ( ' ')
314028    + and
314029    +_FILTERNORM8 not in ( ' ')
314030    +and
314031    +( Dt_Customer ne .)
314032    +and ( Income ne . and (Income<=107000))
314033    +and ( Kidhome ne .)
314034    +and ( MntFishProducts ne .)
314035    +and ( MntFruits ne .)
314036    +and ( MntGoldProds ne .)
314037    +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
314038    +and ( MntSweetProducts ne .)
314039    +and ( MntWines ne .)
314040    +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
314041    +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
314042    +and ( NumStorePurchases ne .)
314043    +and ( NumWebPurchases ne .)
314044    +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
314045    +and ( Recency ne .)
314046    +and ( Teenhome ne .)
314047    +and ( Year_Birth ne .)
314048    +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
314049    +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
314050    +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
314051    +end;
MPRINT(EM_DIAGRAM):   end;
314052    +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
314053    +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
314054     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
314055     quit;
314056     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
314057     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
314058     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
314059     retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
314060     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
314061     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

314062     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
314063     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
314064     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

314065     proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
314066     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
314067     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

314068     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
314069     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
314070     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
314071     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

314072     proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
314073     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

314074     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
314075     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
314076     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

314077     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
314078     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
314079     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
314080     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

314081     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
314082     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
314082   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

314083     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

314084     proc append base=EMWS8.Ensmbl19_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl19_FCMP data=_tempx;
314085     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL19_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL19_FCMP has 555 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

314086     %macro varDept(fcmpdata=,id=);
314087     %global nobs&id scoreFlag&id;
314088     %let scoreFlag&id = 0;
314089     %if &id=1 or ^&fcmpStart %then %do;
314090     proc sort data=&fcmpdata out=_temp&id nodupkey;
314091     by NAME;
314092     where id=&id and LHS in( %let j=1;
314093     %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
314094     %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
314095     "&var" %let j = %eval(&j+1);
314096     %end;
314097     );
314098     run;
314099     %let dsid = %sysfunc(open(_temp&id));
314100     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
314101     %let dsid = %sysfunc(close(&dsid));
314102     %if &&nobs&id %then %do;
314103     %let scoreFlag&id = 1;
314104     %let fcmpStart = 1;
314105     %end;
314106     %else %let fcmpStart = 0;
314107     %end;
314108     %else %do;
314109     proc sort data=&fcmpdata out=_tempid;
314110     where id=&id;
314111     by LHS;
314112     run;
314113     %let dsid = %sysfunc(open(_tempid));
314114     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
314115     %let dsid = %sysfunc(close(&dsid));
314116     %if ^&&nobs&id %then %do;
314117     proc datasets lib=work nolist;
314118     delete _tempid;
314119     run;
314120     quit;
314121     %end;
314122     %else %do;
314123     data _tempAll;
314124     set %let j=%eval(&id-1);
314125     %do x=1 %to &j;
314126     %if &&nobs&x %then %do;
314127     _temp&x %end;
314128     %end;
314129     ;
314130     run;
314131     proc sql;
314132     create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
314132   ! work._tempid p2 where p.name=p2.lhs;
314133     quit;
314134     data _temp&id;
314135     set _temp&id;
314136     where LHS ne '' and NAME ne '' and Node ne '';
314137     run;
314138     proc datasets lib=work nolist;
314139     delete _tempAll;
314140     run;
314141     %let dsid = %sysfunc(open(_temp&id));
314142     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
314143     %let dsid = %sysfunc(close(&dsid));
314144     %if ^&&nobs&id %then %do;
314145     proc datasets lib=work nolist;
314146     delete _temp&id;
314147     run;
314148     quit;
314149     %end;
314150     %else %do;
314151     %let scoreFlag&id = 1;
314152     data _temp&id;
314153     set _temp&id;
314154     where LHS ne NAME and node ne '';
314155     run;
314156     %let dsid = %sysfunc(open(_temp&id));
314157     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
314158     %let dsid = %sysfunc(close(&dsid));
314159     %if ^&&nobs&id %then %do;
314160     proc datasets lib=work nolist;
314161     delete _temp&id;
314162     run;
314163     quit;
314164     %end;
314165     %else %do;
314166     proc sort data=_temp&id nodupkey;
314167     by LHS NAME;
314168     run;
314169     %end;
314170     %end;
314171     %end;
314172     %end;
314173     %mend varDept;
314174     %macro optCode(outdata=fcmpdata);
314175     %global fcmpStart;
314176     %let fcmpStart = 0;
314177     %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
314178     %let NumNodes=9;
314179     %do k=1 %to &NumNodes;
314180     %vardept(fcmpdata=&outdata, id=&k);
314181     %end;
314182     %mend optCode;
314183     %optcode(outData=EMWS8.Ensmbl19_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl19_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL19_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl19_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 54 observations read from the data set EMWS8.ENSMBL19_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 40 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 14 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl19_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 3 observations read from the data set EMWS8.ENSMBL19_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 3 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 14 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp3 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP3 created, with 1 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 1 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP3 has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 1 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP3 has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp3 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 1 observations read from the data set WORK._TEMP3.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP3 has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl19_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL19_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl19_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL19_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 ;
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP2.
NOTE: There were 1 observations read from the data set WORK._TEMP3.
NOTE: The data set WORK._TEMPALL has 15 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 2 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl19_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL19_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP2.
NOTE: There were 1 observations read from the data set WORK._TEMP3.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 17 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 37 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 37 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 37 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 37 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 37 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 37 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 37 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl19_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL19_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP2.
NOTE: There were 1 observations read from the data set WORK._TEMP3.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: There were 37 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 54 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl19_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL19_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl19_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL19_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

314184     data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
314185     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
314186     where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
314187     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

314188     data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
314189     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
314190     where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
314191     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

314192     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
314193     create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
314193   ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 2 rows and 3 columns.

314194     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

314195     data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
314196     set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
314197     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 2 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 2 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

314198     data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
314199     set EMWS8.Varsel_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Varsel_EMSCOREVAR;
314200     where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
314201     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.VARSEL_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

314202     data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
314203     set EMWS8.Varsel_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Varsel_EMSCOREVAR;
314204     where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
314205     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.VARSEL_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

314206     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
314207     create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3 p,
314207   ! EMWS8.Varsel_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3 
p, EMWS8.Varsel_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR7 created, with 1 rows and 3 columns.

314208     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

314209     data _CodeVar7;
MPRINT(EM_DIAGRAM):   data _CodeVar7;
314210     set _all_ _CodeVar7 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar7 _postall_;
314211     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 1 observations read from the data set WORK._CODEVAR7.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR7 has 1 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

314212     filename _pref
314212   ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural32\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural32\EMPUBLISHSCORE.sas";
314213     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
314214     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural32\EMPUBLISHSCORE.sas.
314215    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
314216    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
314217    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
314218    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
314219    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
314220    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
314221    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
314222    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
314223    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
314224    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
314225    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
314226    +LENGTH _WARN_ $4
314227    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
314228    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
314229    +
314230    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
314231    +
314232    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
314233    +
314234    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
314235    +
314236    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
314237    +
314238    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
314239    +
314240    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
314241    +
314242    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
314243    +
314244    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
314245    +
314246    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
314247    +
314248    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
314249    +
314250    +      label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
314251    +
314252    +      label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
314253    +
314254    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
314255    +
314256    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
314257    +
314258    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
314259    +
314260    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
314261    +
314262    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
314263    +
314264    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
314265    +
314266    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
314267    +
314268    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
314269    +
314270    +*** Generate dummy variables for G_Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for G_Marital_Status ;
314271    +drop G_Marital_Status0 G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   drop G_Marital_Status0 G_Marital_Status1 ;
314272    +if missing( G_Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( G_Marital_Status ) then do;
314273    +   G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
314274    +   G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
314275    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
314276    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
314277    +end;
MPRINT(EM_DIAGRAM):   end;
314278    +else do;
MPRINT(EM_DIAGRAM):   else do;
314279    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
314280    +   _dm12 = put( G_Marital_Status , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( G_Marital_Status , BEST12. );
314281    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
314282    +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
314283    +      G_Marital_Status0 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = -1;
314284    +      G_Marital_Status1 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = -1;
314285    +   end;
MPRINT(EM_DIAGRAM):   end;
314286    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
314287    +      G_Marital_Status0 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 1;
314288    +      G_Marital_Status1 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 0;
314289    +   end;
MPRINT(EM_DIAGRAM):   end;
314290    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
314291    +      G_Marital_Status0 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 0;
314292    +      G_Marital_Status1 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 1;
314293    +   end;
MPRINT(EM_DIAGRAM):   end;
314294    +   else do;
MPRINT(EM_DIAGRAM):   else do;
314295    +      G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
314296    +      G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
314297    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
314298    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
314299    +   end;
MPRINT(EM_DIAGRAM):   end;
314300    +end;
MPRINT(EM_DIAGRAM):   end;
314301    +
314302    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
314303    +*** Checking missing input Interval
314304    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
314305    +
314306    +IF NMISS(
314307    +   AcceptedCmpTotal ,
314308    +   Frq ,
314309    +   Income ,
314310    +   Mnt ,
314311    +   MntGoldProds ,
314312    +   MntMeatProducts ,
314313    +   MntWines ,
314314    +   NumDistPurchases ,
314315    +   RFMstat ,
314316    +   RMntFrq ,
314317    +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntGoldProds , 
MntMeatProducts , MntWines , NumDistPurchases , RFMstat , RMntFrq , Recency ) THEN DO;
314318    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
314319    +
314320    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
314321    +END;
MPRINT(EM_DIAGRAM):   END;
314322    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
314323    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
314324    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
314325    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
314326    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
314327    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
314328    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
314329    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
314330    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
314331    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
314332    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
314333    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
314334    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
314335    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
314336    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
314337    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
314338    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
314339    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
314340    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
314341    +END;
MPRINT(EM_DIAGRAM):   END;
314342    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
314343    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
314344    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
314345    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
314346    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
314347    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
314348    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
314349    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
314350    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
314351    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
314352    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
314353    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
314354    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
314355    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
314356    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
314357    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
314358    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
314359    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
314360    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
314361    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
314362    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
314363    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
314364    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
314365    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
314366    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
314367    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
314368    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
314369    +END;
MPRINT(EM_DIAGRAM):   END;
314370    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
314371    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
314372    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
314373    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
314374    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
314375    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
314376    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
314377    +   H1x1_1  =    -0.38956319781905 * S_AcceptedCmpTotal
314378    +          +    -0.08624585416733 * S_Frq  +     0.14990044515556 * S_Income
314379    +          +     1.26905422062144 * S_Mnt  +    -0.05830961868093 *
314380    +        S_MntGoldProds  +    -0.45655804707903 * S_MntMeatProducts
314381    +          +    -0.29008121030195 * S_MntWines  +    -0.52580257849932 *
314382    +        S_NumDistPurchases  +     -0.1481404693781 * S_RFMstat
314383    +          +    -0.49319351834455 * S_RMntFrq  +     0.54249594661515 *
314384    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.38956319781905 * S_AcceptedCmpTotal + -0.08624585416733 * 
S_Frq + 0.14990044515556 * S_Income + 1.26905422062144 * S_Mnt + -0.05830961868093 * 
S_MntGoldProds + -0.45655804707903 * S_MntMeatProducts + -0.29008121030195 * S_MntWines + 
-0.52580257849932 * S_NumDistPurchases + -0.1481404693781 * S_RFMstat + -0.49319351834455 * 
S_RMntFrq + 0.54249594661515 * S_Recency ;
314385    +   H1x1_2  =     0.38779821527892 * S_AcceptedCmpTotal
314386    +          +    -1.22315175769362 * S_Frq  +      1.1802985172513 * S_Income
314387    +          +     2.08508390361851 * S_Mnt  +     0.42839460332296 *
314388    +        S_MntGoldProds  +      0.9001009517595 * S_MntMeatProducts
314389    +          +     0.43882453107711 * S_MntWines  +    -0.77730415774439 *
314390    +        S_NumDistPurchases  +    -0.48791819347803 * S_RFMstat
314391    +          +    -0.74366268198551 * S_RMntFrq  +    -0.17482075484114 *
314392    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.38779821527892 * S_AcceptedCmpTotal + -1.22315175769362 * 
S_Frq + 1.1802985172513 * S_Income + 2.08508390361851 * S_Mnt + 0.42839460332296 * 
S_MntGoldProds + 0.9001009517595 * S_MntMeatProducts + 0.43882453107711 * S_MntWines + 
-0.77730415774439 * S_NumDistPurchases + -0.48791819347803 * S_RFMstat + -0.74366268198551 * 
S_RMntFrq + -0.17482075484114 * S_Recency ;
314393    +   H1x1_3  =    -0.22134549179782 * S_AcceptedCmpTotal
314394    +          +    -0.06178114920397 * S_Frq  +     -1.4524474173679 * S_Income
314395    +          +    -7.85805111281271 * S_Mnt  +    -0.25260256377303 *
314396    +        S_MntGoldProds  +     2.24650170262612 * S_MntMeatProducts
314397    +          +    -0.28495082016886 * S_MntWines  +     2.83659961242127 *
314398    +        S_NumDistPurchases  +     0.42067169774523 * S_RFMstat
314399    +          +     1.71392925516862 * S_RMntFrq  +    -0.09478915012781 *
314400    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.22134549179782 * S_AcceptedCmpTotal + -0.06178114920397 * 
S_Frq + -1.4524474173679 * S_Income + -7.85805111281271 * S_Mnt + -0.25260256377303 * 
S_MntGoldProds + 2.24650170262612 * S_MntMeatProducts + -0.28495082016886 * S_MntWines + 
2.83659961242127 * S_NumDistPurchases + 0.42067169774523 * S_RFMstat + 1.71392925516862 * 
S_RMntFrq + -0.09478915012781 * S_Recency ;
314401    +   H1x1_1  = H1x1_1  +    -0.22060541309937 * G_Marital_Status0
314402    +          +    -0.46692703876881 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.22060541309937 * G_Marital_Status0 + 
-0.46692703876881 * G_Marital_Status1 ;
314403    +   H1x1_2  = H1x1_2  +     0.47416822018188 * G_Marital_Status0
314404    +          +     -2.1058284684647 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.47416822018188 * G_Marital_Status0 + 
-2.1058284684647 * G_Marital_Status1 ;
314405    +   H1x1_3  = H1x1_3  +    -0.44803855270897 * G_Marital_Status0
314406    +          +     1.41026185304551 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.44803855270897 * G_Marital_Status0 + 
1.41026185304551 * G_Marital_Status1 ;
314407    +   H1x1_1  =     1.63085271667721 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.63085271667721 + H1x1_1 ;
314408    +   H1x1_2  =     0.28277859846654 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.28277859846654 + H1x1_2 ;
314409    +   H1x1_3  =     -1.8890871578635 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.8890871578635 + H1x1_3 ;
314410    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
314411    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
314412    +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
314413    +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
314414    +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
314415    +END;
MPRINT(EM_DIAGRAM):   END;
314416    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
314417    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
314418    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
314419    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
314420    +END;
MPRINT(EM_DIAGRAM):   END;
314421    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
314422    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
314423    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
314424    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
314425    +   P_DepVar1  =    -23.6822744769009 * H1x1_1  +     16.0380566008578 * H1x1_2
314426    +          +     15.3446320724554 * H1x1_3 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -23.6822744769009 * H1x1_1 + 16.0380566008578 * H1x1_2 + 
15.3446320724554 * H1x1_3 ;
314427    +   P_DepVar1  =     0.67225691696469 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.67225691696469 + P_DepVar1 ;
314428    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
314429    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
314430    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
314431    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
314432    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
314433    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
314434    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
314435    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
314436    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
314437    +END;
MPRINT(EM_DIAGRAM):   END;
314438    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
314439    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
314440    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
314441    +END;
MPRINT(EM_DIAGRAM):   END;
314442    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
314443    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
314444    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
314445    +END;
MPRINT(EM_DIAGRAM):   END;
314446    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
314447    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
314448    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
314449    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
314450    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
314451    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
314452    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
314453    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
314454    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
314455    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
314456    +END;
MPRINT(EM_DIAGRAM):   END;
314457    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
314458    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
314459    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
314460    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
314461     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
314462     quit;
314463     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
314464     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
314465     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
314466     retain ID 2 Node "AutoNeural32";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural32";
314467     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
314468     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 791 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 791 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

314469     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
314470     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
314471     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 791 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 791 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

314472     proc sort data=EMWS8.AutoNeural32_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural32_variableset out=_temp2(keep=NAME 
CREATOR);
314473     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
314474     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 13 observations read from the data set EMWS8.AUTONEURAL32_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 13 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

314475     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
314476     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
314477     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
314478     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 13 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 13 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

314479     proc contents data=EMWS8.AutoNeural32_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural32_train out=_meta(keep=NAME) noprint;
314480     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 57 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

314481     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
314482     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
314483     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 57 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 57 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

314484     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
314485     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
314486     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
314487     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 57 observations read from the data set WORK._META.
NOTE: There were 13 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 57 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

314488     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
314489     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
314489   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 419 rows and 5 columns.

314490     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

314491     proc append base=EMWS8.Ensmbl19_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl19_FCMP data=_tempx;
314492     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL19_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 419 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL19_FCMP has 419 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

314493     filename _pref
314493   ! "C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMFLOWSCORE.sas";
314494     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
314495     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMFLOWSCORE.sas.
314496    +******************************************;
MPRINT(EM_DIAGRAM):   ******************************************;
314497    +*** Begin Scoring Code from PROC DMINE ***;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code from PROC DMINE ***;
314498    +******************************************;
MPRINT(EM_DIAGRAM):   ******************************************;
314499    +
314500    +length _WARN_ $ 4;
MPRINT(EM_DIAGRAM):   length _WARN_ $ 4;
314501    +label _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
314502    +
314503    +
314504    +/*----G_Marital_Status begin----*/
314505    +length _NORM8 $ 8;
MPRINT(EM_DIAGRAM):   /*----G_Marital_Status begin----*/ length _NORM8 $ 8;
314506    +_NORM8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _NORM8 = put( Marital_Status , $8. );
314507    +%DMNORMIP( _NORM8 )
MPRINT(DMNORMIP):   call dmnorm(_NORM8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
314508    +drop _NORM8;
MPRINT(EM_DIAGRAM):   drop _NORM8;
314509    +select(_NORM8);
MPRINT(EM_DIAGRAM):   select(_NORM8);
314510    +  when("DIVORCED" ) G_Marital_Status = 1;
MPRINT(EM_DIAGRAM):   when("DIVORCED" ) G_Marital_Status = 1;
314511    +  when("MARRIED " ) G_Marital_Status = 2;
MPRINT(EM_DIAGRAM):   when("MARRIED " ) G_Marital_Status = 2;
314512    +  when("SINGLE  " ) G_Marital_Status = 0;
MPRINT(EM_DIAGRAM):   when("SINGLE  " ) G_Marital_Status = 0;
314513    +  when("TOGETHER" ) G_Marital_Status = 2;
MPRINT(EM_DIAGRAM):   when("TOGETHER" ) G_Marital_Status = 2;
314514    +  when("WIDOW   " ) G_Marital_Status = 0;
MPRINT(EM_DIAGRAM):   when("WIDOW   " ) G_Marital_Status = 0;
314515    +  otherwise substr(_WARN_, 2, 1) = 'U';
MPRINT(EM_DIAGRAM):   otherwise substr(_WARN_, 2, 1) = 'U';
314516    +end;
MPRINT(EM_DIAGRAM):   end;
314517    +label G_Marital_Status="Grouped Levels for Marital_Status";
MPRINT(EM_DIAGRAM):   label G_Marital_Status="Grouped Levels for Marital_Status";
314518    +/*----G_Marital_Status end----*/
314519    +
314520    +
314521    +****************************************;
MPRINT(EM_DIAGRAM):   /*----G_Marital_Status end----*/ 
****************************************;
314522    +*** End Scoring Code from PROC DMINE ***;
MPRINT(EM_DIAGRAM):   *** End Scoring Code from PROC DMINE ***;
314523    +****************************************;
MPRINT(EM_DIAGRAM):   ****************************************;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
314524     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
314525     quit;
314526     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
314527     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
314528     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
314529     retain ID 3 Node "Varsel";
MPRINT(EM_DIAGRAM):   retain ID 3 Node "Varsel";
314530     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
314531     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 5 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 5 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

314532     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
314533     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
314534     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 5 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 5 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

314535     proc sort data=EMWS8.Varsel_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Varsel_variableset out=_temp2(keep=NAME CREATOR);
314536     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
314537     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.VARSEL_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

314538     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
314539     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
314540     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
314541     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

314542     proc contents data=EMWS8.Varsel_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Varsel_train out=_meta(keep=NAME) noprint;
314543     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 47 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

314544     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
314545     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
314546     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 47 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 47 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

314547     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
314548     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
314549     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
314550     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 47 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 47 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

314551     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
314552     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
314552   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 3 rows and 5 columns.

314553     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

314554     proc append base=EMWS8.Ensmbl19_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl19_FCMP data=_tempx;
314555     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL19_FCMP.
NOTE: There were 3 observations read from the data set WORK._TEMPX.
NOTE: 3 observations added.
NOTE: The data set EMWS8.ENSMBL19_FCMP has 422 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

314556     filename _pref
314556   ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
314557     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
314558     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
314559    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
314560    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
314561    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
314562    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
314563    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
314564    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
314565     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
314566     quit;
314567     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
314568     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
314569     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
314570     retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
314571     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
314572     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

314573     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
314574     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
314575     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

314576     proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
314577     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
314578     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

314579     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
314580     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
314581     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
314582     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

314583     proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
314584     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

314585     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
314586     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
314587     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

314588     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
314589     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
314590     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
314591     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

314592     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
314593     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
314593   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

314594     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

314595     proc append base=EMWS8.Ensmbl19_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl19_FCMP data=_tempx;
314596     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL19_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL19_FCMP has 426 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

314597     filename _pref
314597   ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
314598     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
314599     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
314600    +
314601    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
314602    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
314602   !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
314603    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
314604    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
314605    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
314606    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
314607    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
314608     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
314609     quit;
314610     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
314611     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
314612     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
314613     retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
314614     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
314615     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

314616     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
314617     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
314618     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

314619     proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
314620     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
314621     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

314622     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
314623     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
314624     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
314625     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

314626     proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
314627     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

314628     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
314629     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
314630     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

314631     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
314632     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
314633     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
314634     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

314635     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
314636     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
314636   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

314637     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

314638     proc append base=EMWS8.Ensmbl19_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl19_FCMP data=_tempx;
314639     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL19_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL19_FCMP has 465 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

314640     filename _pref
314640   ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
314641     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
314642     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
314643    +
314644    +
314645    +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
314646    +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
314647    +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
314648    +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
314649    +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
314650    +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
314651    +
314652    +
314653    +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
314654    +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
314655    +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
314656    +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
314657    +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
314658    +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
314659    +
314660    +
314661    +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
314662    +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
314663    +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
314664    +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
314665    +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
314666    +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
314667    +
314668    +
314669    +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
314670    +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
314671    +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
314672    +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
314673    +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
314674    +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
314675    +
314676    +
314677    +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
314678    +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
314679    +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
314680    +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
314681    +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
314682    +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
314683    +
314684    +
314685    +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
314686    +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
314687    +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
314688    +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
314689    +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
314690    +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
314691    +
314692    +
314693    +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
314694    +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
314695    +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
314696    +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
314697    +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
314698    +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
314699    +
314700    +
314701    +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
314702    +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
314703    +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
314704    +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
314705    +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
314706    +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
314707    +if
314708    +_FILTERNORM1 not in ( '.')
314709    + and
314710    +_FILTERNORM2 not in ( '.')
314711    + and
314712    +_FILTERNORM3 not in ( '.')
314713    + and
314714    +_FILTERNORM4 not in ( '.')
314715    + and
314716    +_FILTERNORM5 not in ( '.')
314717    + and
314718    +_FILTERNORM6 not in ( '.')
314719    + and
314720    +_FILTERNORM7 not in ( ' ')
314721    + and
314722    +_FILTERNORM8 not in ( ' ')
314723    +and
314724    +( Dt_Customer ne .)
314725    +and ( Income ne . and (Income<=107000))
314726    +and ( Kidhome ne .)
314727    +and ( MntFishProducts ne .)
314728    +and ( MntFruits ne .)
314729    +and ( MntGoldProds ne .)
314730    +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
314731    +and ( MntSweetProducts ne .)
314732    +and ( MntWines ne .)
314733    +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
314734    +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
314735    +and ( NumStorePurchases ne .)
314736    +and ( NumWebPurchases ne .)
314737    +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
314738    +and ( Recency ne .)
314739    +and ( Teenhome ne .)
314740    +and ( Year_Birth ne .)
314741    +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
314742    +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
314743    +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
314744    +end;
MPRINT(EM_DIAGRAM):   end;
314745    +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
314746    +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
314747     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
314748     quit;
314749     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
314750     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
314751     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
314752     retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
314753     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
314754     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

314755     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
314756     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
314757     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

314758     proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
314759     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
314760     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

314761     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
314762     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
314763     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
314764     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

314765     proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
314766     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

314767     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
314768     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
314769     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

314770     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
314771     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
314772     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
314773     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

314774     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
314775     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
314775   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

314776     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

314777     proc append base=EMWS8.Ensmbl19_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl19_FCMP data=_tempx;
314778     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL19_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL19_FCMP has 531 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

314779     %macro varDept(fcmpdata=,id=);
314780     %global nobs&id scoreFlag&id;
314781     %let scoreFlag&id = 0;
314782     %if &id=1 or ^&fcmpStart %then %do;
314783     proc sort data=&fcmpdata out=_temp&id nodupkey;
314784     by NAME;
314785     where id=&id and LHS in( %let j=1;
314786     %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
314787     %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
314788     "&var" %let j = %eval(&j+1);
314789     %end;
314790     );
314791     run;
314792     %let dsid = %sysfunc(open(_temp&id));
314793     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
314794     %let dsid = %sysfunc(close(&dsid));
314795     %if &&nobs&id %then %do;
314796     %let scoreFlag&id = 1;
314797     %let fcmpStart = 1;
314798     %end;
314799     %else %let fcmpStart = 0;
314800     %end;
314801     %else %do;
314802     proc sort data=&fcmpdata out=_tempid;
314803     where id=&id;
314804     by LHS;
314805     run;
314806     %let dsid = %sysfunc(open(_tempid));
314807     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
314808     %let dsid = %sysfunc(close(&dsid));
314809     %if ^&&nobs&id %then %do;
314810     proc datasets lib=work nolist;
314811     delete _tempid;
314812     run;
314813     quit;
314814     %end;
314815     %else %do;
314816     data _tempAll;
314817     set %let j=%eval(&id-1);
314818     %do x=1 %to &j;
314819     %if &&nobs&x %then %do;
314820     _temp&x %end;
314821     %end;
314822     ;
314823     run;
314824     proc sql;
314825     create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
314825   ! work._tempid p2 where p.name=p2.lhs;
314826     quit;
314827     data _temp&id;
314828     set _temp&id;
314829     where LHS ne '' and NAME ne '' and Node ne '';
314830     run;
314831     proc datasets lib=work nolist;
314832     delete _tempAll;
314833     run;
314834     %let dsid = %sysfunc(open(_temp&id));
314835     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
314836     %let dsid = %sysfunc(close(&dsid));
314837     %if ^&&nobs&id %then %do;
314838     proc datasets lib=work nolist;
314839     delete _temp&id;
314840     run;
314841     quit;
314842     %end;
314843     %else %do;
314844     %let scoreFlag&id = 1;
314845     data _temp&id;
314846     set _temp&id;
314847     where LHS ne NAME and node ne '';
314848     run;
314849     %let dsid = %sysfunc(open(_temp&id));
314850     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
314851     %let dsid = %sysfunc(close(&dsid));
314852     %if ^&&nobs&id %then %do;
314853     proc datasets lib=work nolist;
314854     delete _temp&id;
314855     run;
314856     quit;
314857     %end;
314858     %else %do;
314859     proc sort data=_temp&id nodupkey;
314860     by LHS NAME;
314861     run;
314862     %end;
314863     %end;
314864     %end;
314865     %end;
314866     %mend varDept;
314867     %macro optCode(outdata=fcmpdata);
314868     %global fcmpStart;
314869     %let fcmpStart = 0;
314870     %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
314871     %let NumNodes=9;
314872     %do k=1 %to &NumNodes;
314873     %vardept(fcmpdata=&outdata, id=&k);
314874     %end;
314875     %mend optCode;
314876     %optcode(outData=EMWS8.Ensmbl19_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl19_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL19_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl19_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 63 observations read from the data set EMWS8.ENSMBL19_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 46 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 17 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl19_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 3 observations read from the data set EMWS8.ENSMBL19_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 3 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 17 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 17 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp3 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP3 created, with 1 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 1 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP3 has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 1 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP3 has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp3 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 1 observations read from the data set WORK._TEMP3.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP3 has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl19_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL19_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl19_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL19_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 ;
MPRINT(VARDEPT):   run;

NOTE: There were 17 observations read from the data set WORK._TEMP2.
NOTE: There were 1 observations read from the data set WORK._TEMP3.
NOTE: The data set WORK._TEMPALL has 18 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 2 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl19_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL19_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 17 observations read from the data set WORK._TEMP2.
NOTE: There were 1 observations read from the data set WORK._TEMP3.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 20 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 37 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 37 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 37 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 37 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 37 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 37 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 37 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl19_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL19_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 17 observations read from the data set WORK._TEMP2.
NOTE: There were 1 observations read from the data set WORK._TEMP3.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: There were 37 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 57 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.30 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl19_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL19_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl19_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL19_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

314877     data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
314878     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
314879     where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
314880     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

314881     data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
314882     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
314883     where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
314884     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

314885     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
314886     create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
314886   ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 2 rows and 3 columns.

314887     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

314888     data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
314889     set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
314890     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 2 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 2 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

314891     data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
314892     set EMWS8.Varsel_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Varsel_EMSCOREVAR;
314893     where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
314894     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.VARSEL_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

314895     data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
314896     set EMWS8.Varsel_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Varsel_EMSCOREVAR;
314897     where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
314898     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.VARSEL_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

314899     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
314900     create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3 p,
314900   ! EMWS8.Varsel_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3 
p, EMWS8.Varsel_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR7 created, with 1 rows and 3 columns.

314901     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

314902     data _CodeVar7;
MPRINT(EM_DIAGRAM):   data _CodeVar7;
314903     set _all_ _CodeVar7 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar7 _postall_;
314904     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 1 observations read from the data set WORK._CODEVAR7.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR7 has 1 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

314905     filename _pref
314905   ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural29\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural29\EMPUBLISHSCORE.sas";
314906     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
314907     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural29\EMPUBLISHSCORE.sas.
314908    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
314909    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
314910    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
314911    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
314912    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
314913    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
314914    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
314915    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
314916    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
314917    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
314918    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
314919    +LENGTH _WARN_ $4
314920    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
314921    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
314922    +
314923    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
314924    +
314925    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
314926    +
314927    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
314928    +
314929    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
314930    +
314931    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
314932    +
314933    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
314934    +
314935    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
314936    +
314937    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
314938    +
314939    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
314940    +
314941    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
314942    +
314943    +      label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
314944    +
314945    +      label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
314946    +
314947    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
314948    +
314949    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
314950    +
314951    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
314952    +
314953    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
314954    +
314955    +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
314956    +
314957    +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
314958    +
314959    +      label H1x1_7 = 'Hidden: H1x1_=7' ;
MPRINT(EM_DIAGRAM):   label H1x1_7 = 'Hidden: H1x1_=7' ;
314960    +
314961    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
314962    +
314963    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
314964    +
314965    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
314966    +
314967    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
314968    +
314969    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
314970    +
314971    +*** Generate dummy variables for G_Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for G_Marital_Status ;
314972    +drop G_Marital_Status0 G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   drop G_Marital_Status0 G_Marital_Status1 ;
314973    +if missing( G_Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( G_Marital_Status ) then do;
314974    +   G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
314975    +   G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
314976    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
314977    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
314978    +end;
MPRINT(EM_DIAGRAM):   end;
314979    +else do;
MPRINT(EM_DIAGRAM):   else do;
314980    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
314981    +   _dm12 = put( G_Marital_Status , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( G_Marital_Status , BEST12. );
314982    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
314983    +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
314984    +      G_Marital_Status0 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = -1;
314985    +      G_Marital_Status1 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = -1;
314986    +   end;
MPRINT(EM_DIAGRAM):   end;
314987    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
314988    +      G_Marital_Status0 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 1;
314989    +      G_Marital_Status1 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 0;
314990    +   end;
MPRINT(EM_DIAGRAM):   end;
314991    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
314992    +      G_Marital_Status0 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 0;
314993    +      G_Marital_Status1 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 1;
314994    +   end;
MPRINT(EM_DIAGRAM):   end;
314995    +   else do;
MPRINT(EM_DIAGRAM):   else do;
314996    +      G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
314997    +      G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
314998    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
314999    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
315000    +   end;
MPRINT(EM_DIAGRAM):   end;
315001    +end;
MPRINT(EM_DIAGRAM):   end;
315002    +
315003    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
315004    +*** Checking missing input Interval
315005    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
315006    +
315007    +IF NMISS(
315008    +   AcceptedCmpTotal ,
315009    +   Frq ,
315010    +   Income ,
315011    +   Mnt ,
315012    +   MntGoldProds ,
315013    +   MntMeatProducts ,
315014    +   MntWines ,
315015    +   NumDistPurchases ,
315016    +   RFMstat ,
315017    +   RMntFrq ,
315018    +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntGoldProds , 
MntMeatProducts , MntWines , NumDistPurchases , RFMstat , RMntFrq , Recency ) THEN DO;
315019    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
315020    +
315021    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
315022    +END;
MPRINT(EM_DIAGRAM):   END;
315023    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
315024    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
315025    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
315026    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
315027    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
315028    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
315029    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
315030    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
315031    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
315032    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
315033    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
315034    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
315035    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
315036    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
315037    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
315038    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
315039    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
315040    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
315041    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
315042    +END;
MPRINT(EM_DIAGRAM):   END;
315043    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
315044    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
315045    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
315046    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
315047    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
315048    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
315049    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
315050    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
315051    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
315052    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
315053    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
315054    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
315055    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
315056    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
315057    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
315058    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
315059    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
315060    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
315061    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
315062    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
315063    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
315064    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
315065    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
315066    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
315067    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
315068    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
315069    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
315070    +END;
MPRINT(EM_DIAGRAM):   END;
315071    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
315072    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
315073    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
315074    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
315075    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
315076    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
315077    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
315078    +   H1x1_1  =    -1.99300782242957 * S_AcceptedCmpTotal
315079    +          +     2.12004224248217 * S_Frq  +     3.86828667262904 * S_Income
315080    +          +     2.77648198770608 * S_Mnt  +    -2.27326773671069 *
315081    +        S_MntGoldProds  +    -0.27399687657599 * S_MntMeatProducts
315082    +          +     2.26137957922507 * S_MntWines  +     0.14135280902221 *
315083    +        S_NumDistPurchases  +     1.12048709605553 * S_RFMstat
315084    +          +     0.99315934409036 * S_RMntFrq  +     1.21818826467727 *
315085    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.99300782242957 * S_AcceptedCmpTotal + 2.12004224248217 * 
S_Frq + 3.86828667262904 * S_Income + 2.77648198770608 * S_Mnt + -2.27326773671069 * 
S_MntGoldProds + -0.27399687657599 * S_MntMeatProducts + 2.26137957922507 * S_MntWines + 
0.14135280902221 * S_NumDistPurchases + 1.12048709605553 * S_RFMstat + 0.99315934409036 * 
S_RMntFrq + 1.21818826467727 * S_Recency ;
315086    +   H1x1_2  =    -0.46080527925139 * S_AcceptedCmpTotal
315087    +          +     1.22986184660358 * S_Frq  +     1.25416218398238 * S_Income
315088    +          +      0.7698101051046 * S_Mnt  +    -0.24851515302824 *
315089    +        S_MntGoldProds  +    -1.02206883329868 * S_MntMeatProducts
315090    +          +    -2.60436726665032 * S_MntWines  +     1.42856046102253 *
315091    +        S_NumDistPurchases  +     0.23036228891547 * S_RFMstat
315092    +          +    -0.44196680894425 * S_RMntFrq  +     1.47726327092789 *
315093    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.46080527925139 * S_AcceptedCmpTotal + 1.22986184660358 * 
S_Frq + 1.25416218398238 * S_Income + 0.7698101051046 * S_Mnt + -0.24851515302824 * 
S_MntGoldProds + -1.02206883329868 * S_MntMeatProducts + -2.60436726665032 * S_MntWines + 
1.42856046102253 * S_NumDistPurchases + 0.23036228891547 * S_RFMstat + -0.44196680894425 * 
S_RMntFrq + 1.47726327092789 * S_Recency ;
315094    +   H1x1_3  =    -2.72041257472943 * S_AcceptedCmpTotal
315095    +          +     2.18007007875237 * S_Frq  +    -3.41389425682735 * S_Income
315096    +          +     1.22111404132155 * S_Mnt  +     0.13965132551243 *
315097    +        S_MntGoldProds  +    -1.44679609979492 * S_MntMeatProducts
315098    +          +     1.32449625366546 * S_MntWines  +     0.71474658567846 *
315099    +        S_NumDistPurchases  +    -1.11377169665392 * S_RFMstat
315100    +          +    -0.23272811318878 * S_RMntFrq  +     3.38352057173892 *
315101    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -2.72041257472943 * S_AcceptedCmpTotal + 2.18007007875237 * 
S_Frq + -3.41389425682735 * S_Income + 1.22111404132155 * S_Mnt + 0.13965132551243 * 
S_MntGoldProds + -1.44679609979492 * S_MntMeatProducts + 1.32449625366546 * S_MntWines + 
0.71474658567846 * S_NumDistPurchases + -1.11377169665392 * S_RFMstat + -0.23272811318878 * 
S_RMntFrq + 3.38352057173892 * S_Recency ;
315102    +   H1x1_4  =    -0.53914082027029 * S_AcceptedCmpTotal
315103    +          +     3.52541527909413 * S_Frq  +     0.47386294116539 * S_Income
315104    +          +     1.74856835081997 * S_Mnt  +    -0.31608698854628 *
315105    +        S_MntGoldProds  +    -4.08585161438784 * S_MntMeatProducts
315106    +          +     1.11934057687184 * S_MntWines  +    -4.23069217087257 *
315107    +        S_NumDistPurchases  +    -0.45058242594518 * S_RFMstat
315108    +          +     2.24526854282726 * S_RMntFrq  +     0.46541621801996 *
315109    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.53914082027029 * S_AcceptedCmpTotal + 3.52541527909413 * 
S_Frq + 0.47386294116539 * S_Income + 1.74856835081997 * S_Mnt + -0.31608698854628 * 
S_MntGoldProds + -4.08585161438784 * S_MntMeatProducts + 1.11934057687184 * S_MntWines + 
-4.23069217087257 * S_NumDistPurchases + -0.45058242594518 * S_RFMstat + 2.24526854282726 * 
S_RMntFrq + 0.46541621801996 * S_Recency ;
315110    +   H1x1_5  =     0.16652182962256 * S_AcceptedCmpTotal
315111    +          +    -2.34082830868767 * S_Frq  +     0.06017749299853 * S_Income
315112    +          +    -3.61434433922311 * S_Mnt  +    -0.15794212009402 *
315113    +        S_MntGoldProds  +     5.32833368617196 * S_MntMeatProducts
315114    +          +     1.70496933504273 * S_MntWines  +     2.85445845094536 *
315115    +        S_NumDistPurchases  +     1.88219523605925 * S_RFMstat
315116    +          +     0.75869801637089 * S_RMntFrq  +     0.08064297106734 *
315117    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.16652182962256 * S_AcceptedCmpTotal + -2.34082830868767 * 
S_Frq + 0.06017749299853 * S_Income + -3.61434433922311 * S_Mnt + -0.15794212009402 * 
S_MntGoldProds + 5.32833368617196 * S_MntMeatProducts + 1.70496933504273 * S_MntWines + 
2.85445845094536 * S_NumDistPurchases + 1.88219523605925 * S_RFMstat + 0.75869801637089 * 
S_RMntFrq + 0.08064297106734 * S_Recency ;
315118    +   H1x1_6  =     1.97422379745385 * S_AcceptedCmpTotal
315119    +          +    -0.18806921540808 * S_Frq  +    -1.45393613178942 * S_Income
315120    +          +    -1.71382589206496 * S_Mnt  +    -0.86398659373382 *
315121    +        S_MntGoldProds  +    -0.55933907393534 * S_MntMeatProducts
315122    +          +    -2.04088833388184 * S_MntWines  +     1.33825297425801 *
315123    +        S_NumDistPurchases  +    -1.84916943620006 * S_RFMstat
315124    +          +     1.10268410707441 * S_RMntFrq  +    -3.24538880603902 *
315125    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 1.97422379745385 * S_AcceptedCmpTotal + -0.18806921540808 * 
S_Frq + -1.45393613178942 * S_Income + -1.71382589206496 * S_Mnt + -0.86398659373382 * 
S_MntGoldProds + -0.55933907393534 * S_MntMeatProducts + -2.04088833388184 * S_MntWines + 
1.33825297425801 * S_NumDistPurchases + -1.84916943620006 * S_RFMstat + 1.10268410707441 * 
S_RMntFrq + -3.24538880603902 * S_Recency ;
315126    +   H1x1_7  =    -0.04334303258083 * S_AcceptedCmpTotal
315127    +          +      1.2911623736286 * S_Frq  +    -2.28992194197276 * S_Income
315128    +          +    -0.46322849796029 * S_Mnt  +    -0.61987255353555 *
315129    +        S_MntGoldProds  +    -0.70448430141235 * S_MntMeatProducts
315130    +          +    -2.07867791807129 * S_MntWines  +    -1.36577325340948 *
315131    +        S_NumDistPurchases  +    -1.20867908080733 * S_RFMstat
315132    +          +     1.13377434281641 * S_RMntFrq  +     0.49995615625441 *
315133    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_7 = -0.04334303258083 * S_AcceptedCmpTotal + 1.2911623736286 * 
S_Frq + -2.28992194197276 * S_Income + -0.46322849796029 * S_Mnt + -0.61987255353555 * 
S_MntGoldProds + -0.70448430141235 * S_MntMeatProducts + -2.07867791807129 * S_MntWines + 
-1.36577325340948 * S_NumDistPurchases + -1.20867908080733 * S_RFMstat + 1.13377434281641 * 
S_RMntFrq + 0.49995615625441 * S_Recency ;
315134    +   H1x1_1  = H1x1_1  +     -1.7035629341514 * G_Marital_Status0
315135    +          +    -0.88839271772433 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -1.7035629341514 * G_Marital_Status0 + 
-0.88839271772433 * G_Marital_Status1 ;
315136    +   H1x1_2  = H1x1_2  +     0.47234648810132 * G_Marital_Status0
315137    +          +     0.49781009278812 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.47234648810132 * G_Marital_Status0 + 
0.49781009278812 * G_Marital_Status1 ;
315138    +   H1x1_3  = H1x1_3  +     0.04803102756566 * G_Marital_Status0
315139    +          +     3.45859276392218 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.04803102756566 * G_Marital_Status0 + 
3.45859276392218 * G_Marital_Status1 ;
315140    +   H1x1_4  = H1x1_4  +    -0.00794915276466 * G_Marital_Status0
315141    +          +    -0.88877093101914 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.00794915276466 * G_Marital_Status0 + 
-0.88877093101914 * G_Marital_Status1 ;
315142    +   H1x1_5  = H1x1_5  +     0.17344052282277 * G_Marital_Status0
315143    +          +     0.07512544812374 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 0.17344052282277 * G_Marital_Status0 + 
0.07512544812374 * G_Marital_Status1 ;
315144    +   H1x1_6  = H1x1_6  +     0.69797087079749 * G_Marital_Status0
315145    +          +     1.99160337429042 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + 0.69797087079749 * G_Marital_Status0 + 
1.99160337429042 * G_Marital_Status1 ;
315146    +   H1x1_7  = H1x1_7  +    -1.90814013352903 * G_Marital_Status0
315147    +          +    -0.58260071621307 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_7 = H1x1_7 + -1.90814013352903 * G_Marital_Status0 + 
-0.58260071621307 * G_Marital_Status1 ;
315148    +   H1x1_1  =      0.4509613443627 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.4509613443627 + H1x1_1 ;
315149    +   H1x1_2  =     3.28102437302443 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 3.28102437302443 + H1x1_2 ;
315150    +   H1x1_3  =    -0.59732076258377 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.59732076258377 + H1x1_3 ;
315151    +   H1x1_4  =     3.04302174126598 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 3.04302174126598 + H1x1_4 ;
315152    +   H1x1_5  =     4.11173403634453 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 4.11173403634453 + H1x1_5 ;
315153    +   H1x1_6  =     4.51964221881808 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 4.51964221881808 + H1x1_6 ;
315154    +   H1x1_7  =     7.27061205819069 + H1x1_7 ;
MPRINT(EM_DIAGRAM):   H1x1_7 = 7.27061205819069 + H1x1_7 ;
315155    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
315156    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
315157    +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
315158    +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
315159    +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
315160    +   H1x1_4  = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
315161    +   H1x1_5  = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_5 = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
315162    +   H1x1_6  = 1.0 / (1.0 + EXP(MIN( - H1x1_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_6 = 1.0 / (1.0 + EXP(MIN( - H1x1_6 , _EXP_BAR)));
315163    +   H1x1_7  = 1.0 / (1.0 + EXP(MIN( - H1x1_7 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_7 = 1.0 / (1.0 + EXP(MIN( - H1x1_7 , _EXP_BAR)));
315164    +END;
MPRINT(EM_DIAGRAM):   END;
315165    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
315166    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
315167    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
315168    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
315169    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
315170    +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
315171    +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
315172    +   H1x1_7  = .;
MPRINT(EM_DIAGRAM):   H1x1_7 = .;
315173    +END;
MPRINT(EM_DIAGRAM):   END;
315174    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
315175    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
315176    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
315177    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
315178    +   P_DepVar1  =    -3.49358340904307 * H1x1_1  +    -5.28251662728987 * H1x1_2
315179    +          +    -4.11876057817011 * H1x1_3  +    -7.73777326204979 * H1x1_4
315180    +          +     12.8932497890238 * H1x1_5  +     6.88694832857203 * H1x1_6
315181    +          +    -8.47048075234366 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.49358340904307 * H1x1_1 + -5.28251662728987 * H1x1_2 + 
-4.11876057817011 * H1x1_3 + -7.73777326204979 * H1x1_4 + 12.8932497890238 * H1x1_5 + 
6.88694832857203 * H1x1_6 + -8.47048075234366 * H1x1_7 ;
315182    +   P_DepVar1  =     1.65092540834245 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.65092540834245 + P_DepVar1 ;
315183    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
315184    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
315185    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
315186    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
315187    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
315188    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
315189    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
315190    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
315191    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
315192    +END;
MPRINT(EM_DIAGRAM):   END;
315193    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
315194    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
315195    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
315196    +END;
MPRINT(EM_DIAGRAM):   END;
315197    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
315198    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
315199    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
315200    +END;
MPRINT(EM_DIAGRAM):   END;
315201    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
315202    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
315203    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
315204    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
315205    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
315206    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
315207    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
315208    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
315209    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
315210    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
315211    +END;
MPRINT(EM_DIAGRAM):   END;
315212    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
315213    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
315214    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
315215    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
315216     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
315217     quit;
315218     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
315219     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
315220     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
315221     retain ID 2 Node "AutoNeural29";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural29";
315222     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
315223     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1111 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1111 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

315224     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
315225     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
315226     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1111 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1111 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

315227     proc sort data=EMWS8.AutoNeural29_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural29_variableset out=_temp2(keep=NAME 
CREATOR);
315228     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
315229     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 13 observations read from the data set EMWS8.AUTONEURAL29_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 13 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

315230     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
315231     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
315232     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
315233     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 13 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 13 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

315234     proc contents data=EMWS8.AutoNeural29_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural29_train out=_meta(keep=NAME) noprint;
315235     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 61 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

315236     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
315237     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
315238     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 61 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 61 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

315239     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
315240     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
315241     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
315242     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 61 observations read from the data set WORK._META.
NOTE: There were 13 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 61 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

315243     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
315244     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
315244   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 563 rows and 5 columns.

315245     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

315246     proc append base=EMWS8.Ensmbl19_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl19_FCMP data=_tempx;
315247     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL19_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 563 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL19_FCMP has 563 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

315248     filename _pref
315248   ! "C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMFLOWSCORE.sas";
315249     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
315250     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMFLOWSCORE.sas.
315251    +******************************************;
MPRINT(EM_DIAGRAM):   ******************************************;
315252    +*** Begin Scoring Code from PROC DMINE ***;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code from PROC DMINE ***;
315253    +******************************************;
MPRINT(EM_DIAGRAM):   ******************************************;
315254    +
315255    +length _WARN_ $ 4;
MPRINT(EM_DIAGRAM):   length _WARN_ $ 4;
315256    +label _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
315257    +
315258    +
315259    +/*----G_Marital_Status begin----*/
315260    +length _NORM8 $ 8;
MPRINT(EM_DIAGRAM):   /*----G_Marital_Status begin----*/ length _NORM8 $ 8;
315261    +_NORM8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _NORM8 = put( Marital_Status , $8. );
315262    +%DMNORMIP( _NORM8 )
MPRINT(DMNORMIP):   call dmnorm(_NORM8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
315263    +drop _NORM8;
MPRINT(EM_DIAGRAM):   drop _NORM8;
315264    +select(_NORM8);
MPRINT(EM_DIAGRAM):   select(_NORM8);
315265    +  when("DIVORCED" ) G_Marital_Status = 1;
MPRINT(EM_DIAGRAM):   when("DIVORCED" ) G_Marital_Status = 1;
315266    +  when("MARRIED " ) G_Marital_Status = 2;
MPRINT(EM_DIAGRAM):   when("MARRIED " ) G_Marital_Status = 2;
315267    +  when("SINGLE  " ) G_Marital_Status = 0;
MPRINT(EM_DIAGRAM):   when("SINGLE  " ) G_Marital_Status = 0;
315268    +  when("TOGETHER" ) G_Marital_Status = 2;
MPRINT(EM_DIAGRAM):   when("TOGETHER" ) G_Marital_Status = 2;
315269    +  when("WIDOW   " ) G_Marital_Status = 0;
MPRINT(EM_DIAGRAM):   when("WIDOW   " ) G_Marital_Status = 0;
315270    +  otherwise substr(_WARN_, 2, 1) = 'U';
MPRINT(EM_DIAGRAM):   otherwise substr(_WARN_, 2, 1) = 'U';
315271    +end;
MPRINT(EM_DIAGRAM):   end;
315272    +label G_Marital_Status="Grouped Levels for Marital_Status";
MPRINT(EM_DIAGRAM):   label G_Marital_Status="Grouped Levels for Marital_Status";
315273    +/*----G_Marital_Status end----*/
315274    +
315275    +
315276    +****************************************;
MPRINT(EM_DIAGRAM):   /*----G_Marital_Status end----*/ 
****************************************;
315277    +*** End Scoring Code from PROC DMINE ***;
MPRINT(EM_DIAGRAM):   *** End Scoring Code from PROC DMINE ***;
315278    +****************************************;
MPRINT(EM_DIAGRAM):   ****************************************;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
315279     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
315280     quit;
315281     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
315282     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
315283     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
315284     retain ID 3 Node "Varsel";
MPRINT(EM_DIAGRAM):   retain ID 3 Node "Varsel";
315285     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
315286     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 5 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 5 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

315287     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
315288     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
315289     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 5 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 5 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

315290     proc sort data=EMWS8.Varsel_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Varsel_variableset out=_temp2(keep=NAME CREATOR);
315291     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
315292     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.VARSEL_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

315293     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
315294     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
315295     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
315296     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

315297     proc contents data=EMWS8.Varsel_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Varsel_train out=_meta(keep=NAME) noprint;
315298     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 47 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

315299     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
315300     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
315301     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 47 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 47 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

315302     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
315303     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
315304     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
315305     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 47 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 47 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

315306     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
315307     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
315307   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 3 rows and 5 columns.

315308     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

315309     proc append base=EMWS8.Ensmbl19_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl19_FCMP data=_tempx;
315310     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL19_FCMP.
NOTE: There were 3 observations read from the data set WORK._TEMPX.
NOTE: 3 observations added.
NOTE: The data set EMWS8.ENSMBL19_FCMP has 566 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

315311     filename _pref
315311   ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
315312     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
315313     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
315314    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
315315    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
315316    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
315317    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
315318    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
315319    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
315320     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
315321     quit;
315322     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
315323     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
315324     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
315325     retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
315326     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
315327     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

315328     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
315329     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
315330     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

315331     proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
315332     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
315333     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

315334     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
315335     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
315336     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
315337     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

315338     proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
315339     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

315340     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
315341     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
315342     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

315343     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
315344     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
315345     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
315346     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

315347     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
315348     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
315348   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

315349     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

315350     proc append base=EMWS8.Ensmbl19_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl19_FCMP data=_tempx;
315351     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL19_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL19_FCMP has 570 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

315352     filename _pref
315352   ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
315353     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
315354     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
315355    +
315356    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
315357    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
315357   !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
315358    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
315359    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
315360    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
315361    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
315362    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
315363     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
315364     quit;
315365     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
315366     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
315367     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
315368     retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
315369     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
315370     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

315371     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
315372     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
315373     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

315374     proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
315375     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
315376     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

315377     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
315378     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
315379     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
315380     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

315381     proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
315382     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

315383     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
315384     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
315385     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

315386     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
315387     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
315388     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
315389     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

315390     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
315391     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
315391   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

315392     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

315393     proc append base=EMWS8.Ensmbl19_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl19_FCMP data=_tempx;
315394     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL19_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL19_FCMP has 609 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

315395     filename _pref
315395   ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
315396     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
315397     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
315398    +
315399    +
315400    +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
315401    +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
315402    +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
315403    +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
315404    +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
315405    +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
315406    +
315407    +
315408    +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
315409    +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
315410    +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
315411    +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
315412    +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
315413    +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
315414    +
315415    +
315416    +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
315417    +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
315418    +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
315419    +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
315420    +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
315421    +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
315422    +
315423    +
315424    +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
315425    +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
315426    +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
315427    +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
315428    +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
315429    +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
315430    +
315431    +
315432    +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
315433    +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
315434    +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
315435    +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
315436    +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
315437    +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
315438    +
315439    +
315440    +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
315441    +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
315442    +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
315443    +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
315444    +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
315445    +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
315446    +
315447    +
315448    +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
315449    +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
315450    +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
315451    +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
315452    +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
315453    +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
315454    +
315455    +
315456    +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
315457    +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
315458    +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
315459    +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
315460    +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
315461    +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
315462    +if
315463    +_FILTERNORM1 not in ( '.')
315464    + and
315465    +_FILTERNORM2 not in ( '.')
315466    + and
315467    +_FILTERNORM3 not in ( '.')
315468    + and
315469    +_FILTERNORM4 not in ( '.')
315470    + and
315471    +_FILTERNORM5 not in ( '.')
315472    + and
315473    +_FILTERNORM6 not in ( '.')
315474    + and
315475    +_FILTERNORM7 not in ( ' ')
315476    + and
315477    +_FILTERNORM8 not in ( ' ')
315478    +and
315479    +( Dt_Customer ne .)
315480    +and ( Income ne . and (Income<=107000))
315481    +and ( Kidhome ne .)
315482    +and ( MntFishProducts ne .)
315483    +and ( MntFruits ne .)
315484    +and ( MntGoldProds ne .)
315485    +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
315486    +and ( MntSweetProducts ne .)
315487    +and ( MntWines ne .)
315488    +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
315489    +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
315490    +and ( NumStorePurchases ne .)
315491    +and ( NumWebPurchases ne .)
315492    +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
315493    +and ( Recency ne .)
315494    +and ( Teenhome ne .)
315495    +and ( Year_Birth ne .)
315496    +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
315497    +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
315498    +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
315499    +end;
MPRINT(EM_DIAGRAM):   end;
315500    +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
315501    +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
315502     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
315503     quit;
315504     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
315505     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
315506     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
315507     retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
315508     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
315509     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

315510     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
315511     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
315512     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

315513     proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
315514     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
315515     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

315516     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
315517     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
315518     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
315519     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

315520     proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
315521     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

315522     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
315523     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
315524     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

315525     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
315526     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
315527     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
315528     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

315529     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
315530     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
315530   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
The SAS System


315531     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

315532     proc append base=EMWS8.Ensmbl19_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl19_FCMP data=_tempx;
315533     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL19_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL19_FCMP has 675 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

315534     %macro varDept(fcmpdata=,id=);
315535     %global nobs&id scoreFlag&id;
315536     %let scoreFlag&id = 0;
315537     %if &id=1 or ^&fcmpStart %then %do;
315538     proc sort data=&fcmpdata out=_temp&id nodupkey;
315539     by NAME;
315540     where id=&id and LHS in( %let j=1;
315541     %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
315542     %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
315543     "&var" %let j = %eval(&j+1);
315544     %end;
315545     );
315546     run;
315547     %let dsid = %sysfunc(open(_temp&id));
315548     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
315549     %let dsid = %sysfunc(close(&dsid));
315550     %if &&nobs&id %then %do;
315551     %let scoreFlag&id = 1;
315552     %let fcmpStart = 1;
315553     %end;
315554     %else %let fcmpStart = 0;
315555     %end;
315556     %else %do;
315557     proc sort data=&fcmpdata out=_tempid;
315558     where id=&id;
315559     by LHS;
315560     run;
315561     %let dsid = %sysfunc(open(_tempid));
315562     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
315563     %let dsid = %sysfunc(close(&dsid));
315564     %if ^&&nobs&id %then %do;
315565     proc datasets lib=work nolist;
315566     delete _tempid;
315567     run;
315568     quit;
315569     %end;
315570     %else %do;
315571     data _tempAll;
315572     set %let j=%eval(&id-1);
315573     %do x=1 %to &j;
315574     %if &&nobs&x %then %do;
315575     _temp&x %end;
315576     %end;
315577     ;
315578     run;
315579     proc sql;
315580     create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
315580   ! work._tempid p2 where p.name=p2.lhs;
315581     quit;
315582     data _temp&id;
315583     set _temp&id;
315584     where LHS ne '' and NAME ne '' and Node ne '';
315585     run;
315586     proc datasets lib=work nolist;
315587     delete _tempAll;
315588     run;
315589     %let dsid = %sysfunc(open(_temp&id));
315590     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
315591     %let dsid = %sysfunc(close(&dsid));
315592     %if ^&&nobs&id %then %do;
315593     proc datasets lib=work nolist;
315594     delete _temp&id;
315595     run;
315596     quit;
315597     %end;
315598     %else %do;
315599     %let scoreFlag&id = 1;
315600     data _temp&id;
315601     set _temp&id;
315602     where LHS ne NAME and node ne '';
315603     run;
315604     %let dsid = %sysfunc(open(_temp&id));
315605     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
315606     %let dsid = %sysfunc(close(&dsid));
315607     %if ^&&nobs&id %then %do;
315608     proc datasets lib=work nolist;
315609     delete _temp&id;
315610     run;
315611     quit;
315612     %end;
315613     %else %do;
315614     proc sort data=_temp&id nodupkey;
315615     by LHS NAME;
315616     run;
315617     %end;
315618     %end;
315619     %end;
315620     %end;
315621     %mend varDept;
315622     %macro optCode(outdata=fcmpdata);
315623     %global fcmpStart;
315624     %let fcmpStart = 0;
315625     %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
315626     %let NumNodes=9;
315627     %do k=1 %to &NumNodes;
315628     %vardept(fcmpdata=&outdata, id=&k);
315629     %end;
315630     %mend optCode;
315631     %optcode(outData=EMWS8.Ensmbl19_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl19_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL19_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl19_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 75 observations read from the data set EMWS8.ENSMBL19_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 54 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 21 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl19_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 3 observations read from the data set EMWS8.ENSMBL19_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 3 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 21 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 21 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp3 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP3 created, with 1 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 1 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP3 has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 1 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP3 has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp3 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 1 observations read from the data set WORK._TEMP3.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP3 has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl19_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL19_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl19_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL19_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 ;
MPRINT(VARDEPT):   run;

NOTE: There were 21 observations read from the data set WORK._TEMP2.
NOTE: There were 1 observations read from the data set WORK._TEMP3.
NOTE: The data set WORK._TEMPALL has 22 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 2 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl19_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL19_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 21 observations read from the data set WORK._TEMP2.
NOTE: There were 1 observations read from the data set WORK._TEMP3.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 24 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 37 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 37 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 37 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 37 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 37 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 37 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 37 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl19_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL19_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 21 observations read from the data set WORK._TEMP2.
NOTE: There were 1 observations read from the data set WORK._TEMP3.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: There were 37 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 61 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl19_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL19_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl19_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL19_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

315632     data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
315633     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
315634     where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
315635     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

315636     data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
315637     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
315638     where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
315639     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

315640     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
315641     create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
315641   ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 2 rows and 3 columns.

315642     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

315643     data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
315644     set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
315645     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 2 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 2 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

315646     data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
315647     set EMWS8.Varsel_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Varsel_EMSCOREVAR;
315648     where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
315649     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.VARSEL_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

315650     data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
315651     set EMWS8.Varsel_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Varsel_EMSCOREVAR;
315652     where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
315653     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.VARSEL_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

315654     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
315655     create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3 p,
315655   ! EMWS8.Varsel_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3 
p, EMWS8.Varsel_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR7 created, with 1 rows and 3 columns.

315656     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

315657     data _CodeVar7;
MPRINT(EM_DIAGRAM):   data _CodeVar7;
315658     set _all_ _CodeVar7 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar7 _postall_;
315659     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 1 observations read from the data set WORK._CODEVAR7.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR7 has 1 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

315660     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
315661     * Ensmbl19: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Ensmbl19: Computing metadata for TRAIN data;
315662     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS8.ENSMBL19_TRAIN.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl19\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.Ensmbl19_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.Ensmbl19_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.Ensmbl19_TRAIN out=WORK.M1Z5QVZ_ noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1Z5QVZ_;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M1Z5QVZ_(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = 
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1Z5QVZ_;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M1Z5QVZ_;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M19R6LVH NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M19R6LVH;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M19R6LVH;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2TIM__R(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M19R6LVH;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M19R6LVH;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M19R6LVH;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M19R6LVH;
MPRINT(EMADVISECOLUMNS):   set WORK.M19R6LVH;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural33_TRAIN noprint 
out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural33_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl19_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Ensmbl19";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "Ensmbl19";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "Ensmbl19";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "Ensmbl19";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "Ensmbl19";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "Ensmbl19";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "Ensmbl19";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "Ensmbl19";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Ensmbl19";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "Ensmbl19";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl19: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   if NAME in( "I_DepVar" "F_DepVar" "U_DepVar" "_WARN_" "P_DepVar1" 
"P_DepVar0" "R_DepVar1" "R_DepVar0" ) then CREATOR="Ensmbl19";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
315982     data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
315983     set EMWS8.Ensmbl19_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl19_EMINFO;
315984     where DATA='Ensmbl19' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Ensmbl19' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 
'MODEL');
315985     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.ENSMBL19_EMINFO.
      WHERE (DATA='Ensmbl19') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

315986     data EMWS8.Ensmbl19_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl19_EMINFO;
315987     length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
315988     input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
315989     cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS8.ENSMBL19_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   run;
315993     run;
315994     data EMWS8.Ensmbl19_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl19_EMINFO;
315995     set EMWS8.Ensmbl19_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl19_EMINFO WORK.MODELTEMP_INFO;
315996     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.ENSMBL19_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.ENSMBL19_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

315997     proc sort data = EMWS8.Ensmbl19_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Ensmbl19_EMINFO NOTHREADS;
315998     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
315999     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.ENSMBL19_EMINFO.
NOTE: The data set EMWS8.ENSMBL19_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

316000     proc sort data = EMWS8.AutoNeural33_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.AutoNeural33_EMINFO OUT=WORK.SORTEDEMINFO 
NOTHREADS;
316001     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
316002     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set EMWS8.AUTONEURAL33_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

316003     proc sort data = EMWS8.Ensmbl19_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Ensmbl19_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
316004     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
316005     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.ENSMBL19_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

316006     data EMWS8.Ensmbl19_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl19_EMINFO;
316007     merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
316008     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
316009     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.ENSMBL19_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

316010     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
316011     delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
316012     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
316013     quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

NOTE: View EMWS8.ENSMBL19_TRAIN.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      
NOTE: View EMWS8.ENSMBL19_VALIDATE.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
